CREATE Function Get_Icode_Ordrqty (  P_Icode   In   Ias_Itm_Mst.I_Code%Type,
						                                               P_Psize   In   Number,
						                                               P_Prcss   In   Number   Default 1, --# 0 Open Order 1 Closed Order
						                                               P_Wcode   In   Warehouse_Details.W_Code%Type   Default Null,            
						                                               P_date    In   Date     Default Null,
						                                               P_Qry_Typ In Number Default 1)
   Return Number Is
   V_Ordr_Qty   Number:=0;
Begin
--=======================================================
  If Nvl(P_Qry_Typ,1)=1 Then  
      Begin
           Select (Nvl(Sum(P_Qty),0) /Nvl( P_Psize,1))+Nvl(Sum(Free_Qty),0)              
             Into V_Ordr_Qty 
             From P_Order,P_Order_Detail 
               Where P_Order.Po_Ser = P_Order_Detail.Po_Ser
                 And Po_Date <= Nvl( P_date,To_Char(Ias_Gen_Pkg.Get_Curdate,'DD/MM/YYYY') )
                 And I_Code=P_Icode  
                 And  Nvl(Po_Processed,0) = Nvl(P_Prcss,1)  
                 And  Nvl(Canceled,0)     = 0 
                 And  Nvl(Approved,0)     = 1                 
                 And P_Order_Detail.W_Code =Nvl(P_Wcode,P_Order_Detail.W_Code) ;
          
       Exception When  Others  Then
            V_Ordr_Qty:=0;
      End;          
  Else
     --##--------------------------------------------------------------------------------------------------##--    
     --## Get Sum(Qty) Open Purchase In Road
       Begin
            Select  (Nvl(Sum(P_Qty),0)/ Nvl(P_Psize,1))+Nvl(Sum(Free_Qty),0) - (Nvl(Sum(Pi_Qty),0)+Nvl(Sum(Pi_Free_Qty),0))
             Into V_Ordr_Qty 
              From P_Order ,P_Order_Detail 
               Where P_Order.Po_Ser                 = P_Order_Detail.Po_Ser
                And Po_Date <= Nvl( P_date,To_Char(Ias_Gen_Pkg.Get_Curdate,'DD/MM/YYYY') ) 
                And  P_Order_Detail.I_Code          = P_Icode                  
                And  Nvl(P_Order_Detail.Canceled,0) = 0
                And  Nvl(P_Order.Approved,0)        = 1
                And P_Order_Detail.W_Code =Nvl(P_Wcode,P_Order_Detail.W_Code)  
                Group By P_Order_Detail.I_Code ;
       Exception When Others Then
               V_Ordr_Qty := 0 ;
       End ;
          
  End If;
   Return (Nvl(V_Ordr_Qty,0));
Exception  When Others  Then
    V_Ordr_Qty:=0;
End Get_Icode_Ordrqty;
/
CREATE Function Get_Icode_Qty ( P_Pcode   In   Ias_Itm_Mst.I_Code%Type,                                                                  
						                                          P_Psize   In   Number,
						                                          P_Wcode   In   Warehouse_Details.W_Code%Type   Default Null,
						                                          P_Cond    In   Varchar2  Default Null,
					                                          P_Fdate   In   Date      Default To_Char(Ias_Gen_Pkg.Get_Frst_Day,'Dd/Mm/Yyyy') ,  
					                                          P_Tdate   In   Date      Default To_Char(Ias_Gen_Pkg.Get_Curdate,'Dd/Mm/Yyyy')  )Return Number Is
   V_Avlqty   Number:=0;
   V_Sqlstr   Varchar2(2000):='';
   V_Frst_Day Date := Ias_Gen_Pkg.Get_Frst_Day ;
   V_Tbl_Nm   Varchar2(100) := ' Item_Movement ' ;
   
Begin
          If V_Tbl_Nm Is Null Then
             V_Tbl_Nm := ' Item_Movement ' ;
          End If ;  
          
          If P_Fdate < V_Frst_Day Then
             V_Tbl_Nm := ' Ias_V_Item_Movement_Yr ' ;
          Else
             V_Tbl_Nm := ' Item_Movement ' ;
          End If ; 
          V_Sqlstr := 'Select Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0) /Nvl('|| P_Psize||',1)
            From '||V_Tbl_Nm||' 
            Where I_Code ='||''''||P_Pcode||''''
            ||' And I_Date Between  '||''''||P_Fdate ||''''||' And '||''''||P_Tdate||''''
            ||' '|| P_Cond ;
          
           If P_Wcode Is Not Null Then
            V_Sqlstr:= V_Sqlstr ||' And W_Code ='||P_Wcode;             
           End If ;
           
           Execute Immediate V_Sqlstr Into V_Avlqty ;
  
  Return (Abs(Nvl(V_Avlqty,0)));
  
Exception
   When No_Data_Found  Then
     Return 0;
   When Others Then
   Return 0;

End Get_Icode_Qty ;
/
CREATE Function Get_Icode_Trns_Qty_Not_Receved ( P_Icode   In   Ias_Itm_Mst.I_Code%Type,
                                                       P_Psize   In   Number,
                                                       P_Wcode   In   Warehouse_Details.W_Code%Type  ,
                                                       P_Expdate In   Date     Default Null,
                                                       P_Batchno In   Varchar2 Default Null)
   Return Number
Is
   V_Tr_Qty Number:=0;
   V_Rec_Qty Number:=0;
   V_Not_Rec Number:=0;
Begin
--=======================================================


   If P_Wcode Is Not Null Then --(1)

     
     If (P_Expdate Is Null Or P_Expdate ='01/01/1900' ) And  ( P_Batchno Is Null Or P_Batchno = '0' ) Then 

  	     Begin
           Begin
            select Nvl(Sum(P_Qty),0)/P_Psize Into V_Tr_Qty 
             from Ias_Whtrns_Dtl
                Where Tr_Inout_Type=1
                And I_Code =P_Icode
                And T_W_Code=P_Wcode
                And Not Exists ( Select 1 From 
			                            Ias_Whtrns_Mst Wht_M, Ias_Whtrns_Dtl Wht_D
			                            Where Wht_M.Tr_Ser         =  Wht_D.Tr_Ser
			                              And Wht_M.F_Tr_Ser       = Ias_Whtrns_Dtl.F_Tr_Ser
			                              And Wht_M.Tr_Inout_Type  = 2
			                              And Nvl(Wht_M.Rtn_Tr,0)  = 1
			                              And Wht_D.I_Code         = Ias_Whtrns_Dtl.I_Code
			                              And Wht_D.Doc_Sequence_Tr= Ias_Whtrns_Dtl.Doc_Sequence_Tr
			                              And Rownum <= 1
			                        );
                --Group by I_Code,T_W_code;
           Exception
             When No_Data_Found    Then
             V_Tr_Qty:=0;
            When Others  Then
             V_Tr_Qty:=0;
           End; 
               
           Begin 
            select Nvl(Sum(P_Qty),0)/P_Psize Into V_Rec_Qty 
             from Ias_Whtrns_Dtl
                Where Tr_Inout_Type=2
                And I_Code =P_Icode
                And W_Code=P_Wcode
                And Not Exists ( Select 1 From 
			                            Ias_Whtrns_Mst Wht_M, Ias_Whtrns_Dtl Wht_D
			                            Where Wht_M.Tr_Ser         =  Wht_D.Tr_Ser
			                              And Wht_M.F_Tr_Ser       = Ias_Whtrns_Dtl.F_Tr_Ser
			                              And Wht_M.Tr_Inout_Type  = 2
			                              And Nvl(Wht_M.Rtn_Tr,0)  = 1
			                              And Wht_D.I_Code         = Ias_Whtrns_Dtl.I_Code
			                              And Wht_D.Doc_Sequence_Tr= Ias_Whtrns_Dtl.Doc_Sequence_Tr
			                              And Rownum <= 1
			                        );
               -- Group BY I_Code,W_code;
           Exception
             When No_Data_Found    Then
             V_Rec_Qty:=0;
            When Others  Then
             V_Rec_Qty:=0;
           End;      

            V_Not_Rec:=Nvl(V_Tr_Qty,0)-Nvl(V_Rec_Qty,0);
            
         Exception
             When No_Data_Found    Then
             V_Not_Rec:=0;
            When Others  Then
             V_Not_Rec:=0;
  		 End;

      Else 

	     Begin
           Begin 
            select Nvl(Sum(P_Qty),0)/P_Psize Into V_Tr_Qty 
             from Ias_Whtrns_Dtl
                Where Tr_Inout_Type=1
                And I_Code =P_Icode
                And T_W_Code=P_Wcode
                And Expire_Date=Decode(P_Expdate,Null,Expire_Date,Nvl(P_Expdate,'01/01/1900'))
    		        And Batch_No = Decode(P_Batchno,Null,Batch_No,Nvl(P_Batchno,'0'));
               -- Group by I_Code,T_W_code,Expire_Date,Batch_No;
           Exception
             When No_Data_Found    Then
             V_Tr_Qty:=0;
            When Others  Then
             V_Tr_Qty:=0;
           End;      
                
           Begin
            select Nvl(Sum(P_Qty),0)/P_Psize Into V_Rec_Qty 
             from Ias_Whtrns_Dtl
                Where Tr_Inout_Type=2
                And I_Code =P_Icode
                And W_Code=P_Wcode
                And Expire_Date=Decode(P_Expdate,Null,Expire_Date,Nvl(P_Expdate,'01/01/1900'))
    		        And Batch_No = Decode(P_Batchno,Null,Batch_No,Nvl(P_Batchno,'0'));
               -- Group BY I_Code,w_code,Expire_Date,Batch_No;
                
           Exception
             When No_Data_Found    Then
             V_Rec_Qty:=0;
            When Others  Then
             V_Rec_Qty:=0;
           End; 
                
            V_Not_Rec:=Nvl(V_Tr_Qty,0)-Nvl(V_Rec_Qty,0);
             
		  Exception
		    When No_Data_Found    Then
	         V_Not_Rec:=0;
	        When Others  Then
		     V_Not_Rec:=0;
		  End;
      End If;--(2)
   End If; --(1)

--=======================================================
  If Nvl(V_Not_Rec,0) > 0 Then
     Return (Nvl(V_Not_Rec,0));
  Else
     Return (0);
  End if;
--=======================================================
Exception
   When No_Data_Found  Then
     Return 0;
   When Others  Then
     Return Null;
End Get_Icode_Trns_Qty_Not_Receved;
/
CREATE Function Get_Icode_Whgcode_Avlqty ( P_Icode     In   Ias_Itm_Mst.I_Code%Type,
                                                                  P_Psize     In   Number,
                                                                  P_Whgcode   In   Warehouse_Details.Whg_Code%Type   Default Null,
                                                                  P_Expdate   In   Date     Default Null,
                                                                  P_Batchno   In   Varchar2 Default Null,
                                                                  P_Idate     In   Date     Default Null)   Return Number Is
   V_Avl_Qty   Number:=0;
 Begin
      If P_Idate Is Not Null Then  
          Begin
               Select Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0) /Nvl( P_Psize,1)
                 Into V_Avl_Qty
                 From Item_Movement
                Where I_Code         = P_Icode
                  And  Whg_Code      = P_Whgcode
                  And  Expire_Date   = Decode(P_Expdate,Null,Expire_Date,Nvl(P_Expdate,'01/01/1900'))
                  And  Batch_No      = Decode(P_Batchno,Null,Batch_No,Nvl(P_Batchno,'0'))
                  And  I_Date       <= P_Idate;
          Exception
            When No_Data_Found    Then
                V_Avl_Qty:=0;
               When Others  Then
                V_Avl_Qty:=0;
          End;
      Else
          Begin
               Select Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0) /Nvl( P_Psize,1)
                 Into V_Avl_Qty
                 From Item_Movement
                Where I_Code        = P_Icode
                  And  Whg_Code     = P_Whgcode
                  --And  Expire_Date  = Decode(P_Expdate,Null,Expire_Date,Nvl(P_Expdate,'01/01/1900'))
                  --And  Batch_No     = Decode(P_Batchno,Null,Batch_No,Nvl(P_Batchno,'0'))
                   ;
          Exception
            When No_Data_Found    Then
                V_Avl_Qty:=0;
               When Others  Then
                V_Avl_Qty:=0;
          End;      
      End If ;
      Return(Nvl(V_Avl_Qty,0));
 End Get_Icode_Whgcode_Avlqty ;
/
CREATE FUNCTION Get_Items_ACtivity( P_Activity_No  In Ias_Items_Activity_Priv.Activity_No%TYPE ,
						                                              P_User_No      In User_R.U_Id%Type ,
						                                              P_Conn_Itm_Act In Ias_Para_Inv.Conn_Itm_Act_By_Usr_Priv%Type,
						                                              P_Op_type      In Number Default 1) RETURN NUMBER IS
 Cnt   NUMBER ;        
Begin
  If Nvl(P_Conn_Itm_Act,0) = 1 Then
     Begin 
        Select 1 Into Cnt
         From Ias_Items_Activity_Priv
          Where Ias_Items_Activity_Priv.Activity_No = P_Activity_No
           And U_Id = P_User_No
           And Decode(P_Op_type,1,Add_Flag,View_Flag) = 1
           And RowNum  <= 1 ;
     Exception
      When Others Then
       Cnt := 0 ;
     End  ;     
  Else
   Cnt := 1 ;   
  End If ;
  Return(Cnt);
Exception 
  When Others Then
    Return(0);
End Get_Items_ACtivity;
/
CREATE Function Get_Itm_Age (P_Icode       Varchar2              ,
                                                   p_td          Date                  ,
                                                   P_Wcode       Number Default Null   ,
                                                   p_Batch_No    Varchar2 Default Null ,
                                                   P_Expire_Date Date Default Null     ) Return Number Is
  v_age      Number := 0 ;
  
  Begin
  
  -- lst_date := ias_gen_pkg.get_sysdate ;
   If P_Icode is not null and p_td is not null then

       Begin
            Select sum((p_td- gr_date) * cp_qty ) /sum(cp_qty)
              Into v_age
              From gr_detail
             Where I_Code      = P_Icode
               And w_code      = Decode(P_Wcode,Null,W_Code,P_Wcode)
               And Batch_No    = Decode(P_Batch_No,Null,Batch_No,P_Batch_No)
               And Expire_Date = Decode(P_Expire_Date,Null,Expire_Date,P_Expire_Date)
               And gr_date  <= p_td 
               And nvl(cp_qty,0)>0;
          Exception
           When No_Data_Found Then
             v_age :=  0 ;
          End;
          

    End If ;
    Return (Nvl(v_age,0));
  Exception
    When Others Then
      Return (0);
 End Get_Itm_Age;
/
CREATE Function Get_Itm_Batch_Sq_Auto (P_Pcode   In   Ias_Itm_Mst.I_Code%Type ) Return Char Is
 V_Batch         Varchar2(100);
 V_Lngh_Itm    Number;
 V_New_Batch     Number;
Begin
     If P_Pcode  Is Not Null    Then   
           Select Length(P_Pcode) + 2  
           Into V_Lngh_Itm
           From Dual ;
           
           Select Nvl(Max(To_Number(Substr(Batch_No,V_Lngh_Itm))),0) + 1
           Into V_New_Batch  From  Gr_Detail
           Where  I_Code=P_Pcode ; 

           V_Batch := P_Pcode ||'-'||V_New_Batch;

         Return(V_Batch);
             
     End If;                           
Exception
   When Others Then 
    Return(Null);
End Get_Itm_Batch_Sq_Auto;
/
CREATE Function Get_Itm_Cost_TnOvr_Ratio (P_Wtavg_Type In NUMBER,
                                                              P_V_TP       In NUMBER,
                                                              p_icode    in Varchar2   ,
                                                              p_fd       in Date       ,
                                                              p_td       in Date       ,
                                                              p_wcode    in Number Default Null) Return Number Is
  v_dev          Number := 0 ;
  v_op_qty       Number := 0 ;
  v_fin_amt      Number := 0 ;  
  v_sl_amt       Number := 0 ; 
  v_slrtn_amt    Number := 0 ;
  v_trovr        Number := 0 ;
  v_op_cost      Number := 0 ;
  v_fin_qty      Number := 0 ;
  v_fin_cost     Number := 0 ;
  V_CostIng_Type Ias_Para_Inv.Costing_Type%Type ;

  Begin
  
   Select Costing_Type Into V_CostIng_Type  From Ias_Para_Inv ;
   If p_icode is not null and p_td is not null then
      
      Begin
        
        Select sum(nvl(i_qty,0)+nvl(free_qty,0) * nvl(stk_cost,0) ) Into v_sl_amt 
          From ias_bill_mst m, ias_bill_dtl d
         where m.bill_ser=d.bill_ser 
           and d.i_code=p_icode
           and d.w_code  = Decode(p_wcode,null,d.w_code,p_wcode)
           and m.bill_date  between p_fd and p_td;

       Exception
           When No_Data_Found Then
             v_sl_amt :=  0 ;
      End;

      Begin
        
        Select  sum(nvl(i_qty,0)+nvl(free_qty,0) * nvl(stk_cost,0) ) Into v_slrtn_amt 
          From ias_rt_bill_mst m, ias_rt_bill_dtl d
         where m.rt_bill_ser=d.rt_bill_ser 
           and d.i_code=p_icode
           and d.w_code  = Decode(p_wcode,null,d.w_code,p_wcode)
           and m.rt_bill_date between p_fd and p_td;
            

       Exception
           When No_Data_Found Then
             v_slrtn_amt :=  0 ;
      End;
      
    
   --  get open bal qty 
    Begin
        
        Select nvl(Sum(in_out*(nvl(d.p_qty,0)+nvl(d.pf_Qty,0)) ),0) / nvl(d.p_size,1) into v_op_qty
          From item_movement d
         where d.i_code=p_icode
           and d.w_code  = Decode(p_wcode,null,d.w_code,p_wcode)
           and (d.i_date < p_fd or doc_type = 0)
           group by d.p_size;
            
       Exception
           When No_Data_Found Then
             v_op_qty :=  0 ;
     End;
     
    If V_CostIng_Type = 1  Then -- Fifo

        Begin
         v_op_cost:=Get_Pri_Cost_Fifo( P_icode,
                                       P_fd,
                                       ias_gen_pkg.get_frst_day,                               
                                       P_Wcode);
           Exception
               When No_Data_Found Then
                 v_op_cost :=  0 ;
         End;
     
    Else -- wtavg
          
        Begin
         v_op_cost:=Get_Pri_Cost( P_Wtavg_Type,
                                  P_icode,
                                  P_Wcode,
                                  P_fd,
                                  0 )  * nvl(v_op_qty,0);
           Exception
               When No_Data_Found Then
                 v_op_cost :=  0 ;
         End;
    End if;

   If V_CostIng_Type = 1  Then -- Fifo
            
        Begin
     
          v_fin_cost:= get_cost_FIFO ( p_icode,p_td,p_wcode);
      
           Exception
               When No_Data_Found Then
                 v_fin_cost :=  0 ;
         End;
   
   Else -- Wtavg
       If  P_Wtavg_Type In (1,2) Then -- By Item Or By Item + W_Code 
			     Begin
		      v_fin_cost:=ias_itm_pkg.Get_Grand_Avlqty(p_icode,p_wcode) * get_cost ( P_Wtavg_Type ,P_V_TP,p_icode,p_wcode,p_td,p_td);
		      
			       Exception
			           When No_Data_Found Then
			             v_fin_cost :=  0 ;
			     End;
       ElsIf  P_Wtavg_Type = 3 Then --  Item + Whg_Code 

			     Begin
		      v_fin_cost:=Get_Icode_Whgcode_Avlqty(p_icode,null,Ias_Wcode_Pkg.Get_Whg_Code(p_wcode)) * get_cost ( P_Wtavg_Type ,P_V_TP,p_icode,p_wcode,p_td,p_td);
		      
			       Exception
			           When No_Data_Found Then
			             v_fin_cost :=  0 ;
			     End;
       End If ;
   End If;
     
       
     If v_op_cost > 0 Then
        v_dev:=1;
     End if; 
     If v_fin_cost > 0 Then
        v_dev:= nvl(v_dev,0) + 1;
     End if;  
          
     if v_dev > 0 then
        v_trovr:= (Nvl(v_sl_amt,0) - Nvl(v_slrtn_amt,0) ) / ((Nvl(v_op_cost,0) + Nvl(v_fin_cost,0) ) / v_dev);
     else
        v_trovr:= 0;
     end if;
     
    End If ;

    Return (Nvl(v_trovr,0));

  Exception
    When Others Then
      Return (0);
 End Get_Itm_Cost_TnOvr_Ratio;
/
CREATE Function Get_Itm_Profit_Loss ( p_icode    In Varchar2   ,
                                                            p_fd       In Date       ,
                                                            p_td       In Date       ,
                                                            p_wcode    In Number Default Null) Return Number Is
  v_dev        Number := 0 ;
  v_cost       Number := 0 ;
  v_price      Number := 0 ;
  v_rtcost     Number := 0 ;
  v_rtprice    Number := 0 ;
  v_fin_amt    Number := 0 ;  
  v_prls       Number := 0 ;

  Begin

   If p_icode is not null and p_fd is not null  and p_td is not null Then
      
      Begin
        
        Select nvl(sum((nvl(i_qty,0)+nvl(free_qty,0) * nvl(stk_cost,0))*m.bill_rate/m.stock_rate ),0), nvl(sum(nvl(i_qty,0)+nvl(free_qty,0) * (nvl(i_price,0)-nvl(dis_amt,0)) ),0) 
           Into v_cost,v_price 
          From ias_bill_mst m, ias_bill_dtl d
         where m.bill_ser=d.bill_ser 
           and d.i_code=p_icode
           and d.w_code  = Decode(p_wcode,null,d.w_code,p_wcode)
           and m.bill_date  between p_fd and p_td;

       Exception
           When No_Data_Found Then
             v_cost :=  0 ;
             v_price :=  0 ;
      End;
     
      Begin
        
        Select nvl(sum((nvl(i_qty,0)+nvl(free_qty,0) * nvl(stk_cost,0))*m.rt_bill_rate/m.stock_rate ),0), nvl(sum(nvl(i_qty,0)+nvl(free_qty,0) * (nvl(i_price,0)-nvl(dis_amt,0)) ),0) 
           Into v_rtcost,v_rtprice 
          From ias_rt_bill_mst m, ias_rt_bill_dtl d
         where m.rt_bill_ser=d.rt_bill_ser 
           and d.i_code=p_icode
           and d.w_code  = Decode(p_wcode,null,d.w_code,p_wcode)
           and m.rt_bill_date  between p_fd and p_td;

       Exception
           When No_Data_Found Then
             v_rtcost :=  0 ;
             v_rtprice :=  0 ;
      End;
      
      v_prls:= (v_price - v_rtprice) - ( v_cost - v_rtcost);  

   End If;

    Return (Nvl(v_prls,0));

  Exception
    When Others Then
      Return (0);
 End Get_Itm_Profit_Loss;
/
CREATE Function Get_Itm_Qty_TnOvr_Ratio (p_icode       Varchar2              ,
                                                               p_fd          Date                  ,
                                                               p_td          Date                  ,
                                                               p_wcode       Number Default Null   ,
                                                               P_Batch_No    Varchar2 Default Null ,
                                                               P_Expire_Date Date Default Null     ) Return Number Is
  v_dev        Number := 0 ;
  v_op_qty     Number := 0 ;
  v_fin_qty    Number := 0 ;  
  v_sl_qty     Number := 0 ; 
  v_slrtn_qty  Number := 0 ;
  v_trovr      Number := 0 ;

  Begin
  

   If p_icode is not null and p_td is not null then
      
      Begin
        
        Select nvl(sum(nvl(i_qty,0)+nvl(free_qty,0)),0) into v_sl_qty 
          From ias_bill_mst m, ias_bill_dtl d
         where m.bill_ser     = d.bill_ser 
           and d.i_code       = p_icode
           and d.w_code       = Decode(p_wcode,null,d.w_code,p_wcode)
           and d.Batch_No     = Decode(P_Batch_No,null,d.Batch_No,P_Batch_No)
           and d.Expire_Date  = Decode(P_Expire_Date,null,d.Expire_Date,P_Expire_Date)
           and m.bill_date    Between p_fd and p_td;

       Exception
           When No_Data_Found Then
             v_sl_qty :=  0 ;
      End;

      Begin
        
        Select nvl(sum(nvl(i_qty,0)+nvl(free_qty,0)),0) into v_slrtn_qty 
          From ias_rt_bill_mst m, ias_rt_bill_dtl d
         where m.rt_bill_ser  = d.rt_bill_ser 
           and d.i_code       = p_icode
           and d.w_code       = Decode(p_wcode,null,d.w_code,p_wcode)
           and d.Batch_No     = Decode(P_Batch_No,null,d.Batch_No,P_Batch_No)
           and d.Expire_Date  = Decode(P_Expire_Date,null,d.Expire_Date,P_Expire_Date)
           and m.rt_bill_date Between p_fd and p_td;
            

       Exception
           When No_Data_Found Then
             v_slrtn_qty :=  0 ;
      End;
      

    Begin
        
        Select nvl(Sum(in_out*(nvl(d.p_qty,0)+nvl(d.pf_Qty,0)) ),0) / nvl(d.p_size,1) into v_op_qty
          From item_movement d
         where d.i_code       = p_icode
           and d.w_code       = Decode(p_wcode,null,d.w_code,p_wcode)
           and d.Batch_No     = Decode(P_Batch_No,null,d.Batch_No,P_Batch_No)
           and d.Expire_Date  = Decode(P_Expire_Date,null,d.Expire_Date,P_Expire_Date)
           and (d.i_date < p_fd or doc_type = 0)
           group by d.p_size;
            
       Exception
           When No_Data_Found Then
             v_op_qty :=  0 ;
     End;
     
     Begin 
      v_fin_qty := Nvl(Get_Icode_AvlQty ( P_Icode       ,
											              	 	  1             ,
													                P_WCode       ,
													                P_Expire_Date ,
													                P_Batch_No    ,
													                Null          ),0) ;
      
     Exception
      When No_Data_Found Then
       v_fin_qty :=  0 ;
     End;
     
       
     If v_op_qty > 0 Then
        v_dev:=1;
     End if; 
     If v_fin_qty > 0 Then
        v_dev:= nvl(v_dev,0) + 1;
     End if;  
          
     if v_dev > 0 then
        v_trovr:= (nvl(v_sl_qty,0)- nvl(v_slrtn_qty,0 )) / ((nvl(v_op_qty,0) + nvl(v_fin_qty,0 ))  / v_dev);
     else
        v_trovr:= 0;
     end if;
     
    End If ;

    Return (Nvl(v_trovr,0));

  Exception
    When Others Then
      Return (0);
 End Get_Itm_Qty_TnOvr_Ratio;
/
CREATE Function Get_Itm_Sales_Age ( P_Type          In Number                                      ,
                                                          P_Sale_Age_Type In Number      Default 1                       ,
                                                          P_I_Code        In Ias_Itm_Dtl.I_Code%Type                     ,
                                                          P_Itm_Unt        In Ias_Itm_Dtl.Itm_Unt%Type                   ,
                                                          P_F_Date        In Date                                        ,
                                                          P_T_Date        In Date                                        ,
                                                          P_W_Code        In Warehouse_Details.W_Code%Type Default Null  ,
                                                          P_Batch_No      In Item_Movement.Batch_No%Type Default Null    ,
                                                          P_Expire_Date   In Item_Movement.Expire_Date%Type Default Null ) Return Number Is 
       V_Itm_Day         Number := 0 ;
       V_Itm_Date        Date        ; 
       V_Itm_Sum_Day     Number := 0 ;
       V_Last_Date       Date        ;
       V_Income_Date     Date        ;
       V_Cnt             Number := 0 ;
       V_Tr_Date         Ias_Whtrns_Mst.Tr_Date%Type ;
       V_Diff_Day        Number ;
       V_Prev_Date       Date ;
       V_St_Cp_Qty       Number := 0 ;
       V_Curdate         Date ;
       V_Frsdate         Date ;
       V_Tr_Ser          Ias_Whtrns_Mst.Tr_Ser%Type  ;
       V_Rec_Tr_Ser      Ias_Whtrns_Mst.Tr_Ser%Type  ;
	   V_Doc_Date        Ias_Whtrns_Mst.Tr_Date%Type ;
	   V_Rec_Tr_Date     Ias_Whtrns_Mst.Tr_Date%Type ;
       V_Road_Distance   Number ;
 Begin

   If P_Type = 1 Then --Neccessary Warehouse                                                         
      Declare
           Cursor C_Itms Is Select G_Ser,I_Code,P_Size,Itm_Unt,I_Qty,P_Qty,Cp_Qty,Doc_Sequence,Rcrd_No,Rec_No,Gr_Date 
                            From Ias_V_Gr_Detail_Yr
                             Where I_Code                           = P_I_Code
                             And Itm_Unt                            = P_Itm_Unt
                              And  Nvl(W_Code,0)                    = Decode(P_W_Code,Null,Nvl(W_Code,0),P_W_Code) 
                              And  Nvl(Batch_No,'0')              = Decode(P_Batch_No,Null,Nvl(Batch_No,'0'),P_Batch_No) 
                              And  Nvl(Expire_Date,'01/01/1900')  = Decode(P_Expire_Date,Null,Nvl(Expire_Date,'01/01/1900'),P_Expire_Date) 
                              And  Gr_Date  <=  P_T_Date
                             Order By I_Code ,Gr_Date ,Rec_No  ;
       Begin
           For I_Itms In C_Itms Loop                                                                              
               If   P_Sale_Age_Type = 1 Then
		            V_Itm_Day := 0 ;
                    If V_Prev_Date is Not Null Then
                       If I_Itms.Gr_Date < V_Prev_Date Then
                          V_Diff_Day :=  V_Prev_Date - I_Itms.Gr_Date ;
                       End If ;
                    End If ;
                    If Nvl(I_Itms.Cp_Qty,0)  > 0 Then
                       V_Itm_Day := P_T_Date - I_Itms.Gr_Date ;
                       V_Prev_Date := I_Itms.Gr_Date ;
                       V_St_Cp_Qty := 1 ;
                    Else
                        Begin
                         Select Max(Doc_Date)   
                           Into V_Itm_Date
                          From Sale_Cost
                           Where G_Ser                           = I_Itms.G_Ser
                            And  I_Code                          = P_I_Code
                            And  Itm_Unt                         = P_Itm_Unt
                            And  Rec_no                          = I_Itms.Rec_no 
                            And  Doc_Sequence_Gr                 = I_Itms.Doc_Sequence
                            And  Nvl(W_Code,0)                   = Decode(P_W_Code,Null,Nvl(W_Code,0),P_W_Code)  
                            And  Nvl(Batch_No,'0')             = Decode(P_Batch_No,Null,Nvl(Batch_No,'0'),P_Batch_No) 
                            And  Nvl(Expire_Date,'01/01/1900') = Decode(P_Expire_Date,Null,Nvl(Expire_Date,'01/01/1900'),P_Expire_Date)
                            And  Doc_Date                       <= P_T_Date ;
                            If V_Itm_Date > I_Itms.Gr_Date Then
                               V_Itm_Day := V_Itm_Date - I_Itms.Gr_Date ;
                            Else
                               V_Itm_Day := 0 ;
                            End If ;
                            V_Prev_Date := V_Itm_Date ;
                        Exception 
                         When Others Then
                          V_Itm_Day := 0 ;
                        End ;          
                    End If ;   
		            V_Itm_Sum_Day   := V_Itm_Sum_Day + V_Itm_Day -Nvl(V_Diff_Day,0)  ;  
		            V_Itm_Day := 0 ; 
                    If V_St_Cp_Qty = 1 Then
		               Exit ;
		            End If ; 
               ElsIf  P_Sale_Age_Type = 2 Then 
                      Begin
                        Select Min(Ias_V_Whtrns_Mst_Yr.Tr_Date) Tr_Date
                          Into V_Rec_Tr_Date 
                         From Ias_V_Whtrns_Mst_Yr,Ias_V_Whtrns_Dtl_Yr
                          Where Ias_V_Whtrns_Mst_Yr.Tr_Ser        = Ias_V_Whtrns_Dtl_Yr.Tr_Ser
                           And  Ias_V_Whtrns_Mst_Yr.Tr_Inout_Type = 2
                           And  Ias_V_Whtrns_Dtl_Yr.I_Code        = P_I_Code 
                           And  Ias_V_Whtrns_Dtl_Yr.Itm_Unt       = P_Itm_Unt
                           And  Ias_V_Whtrns_Dtl_Yr.W_Code        = P_W_Code 
                           And  Ias_V_Whtrns_Mst_Yr.Tr_Date      >= P_F_Date ;
                      Exception
                        When Others Then
                         V_Rec_Tr_Date  := Null ;
                      End ;       
                      If    V_Rec_Tr_Date Is Not Null Then
	                        Begin
	                            Select Min(Ias_V_Whtrns_Mst_Yr.F_Tr_Ser) Tr_Ser 
	                              Into V_Rec_Tr_Ser 
	                             From Ias_V_Whtrns_Mst_Yr,Ias_V_Whtrns_Dtl_Yr
	                              Where Ias_V_Whtrns_Mst_Yr.Tr_Ser        = Ias_V_Whtrns_Dtl_Yr.Tr_Ser
	                               And  Ias_V_Whtrns_Mst_Yr.Tr_Inout_Type = 2
	                               And  Ias_V_Whtrns_Dtl_Yr.I_Code        = P_I_Code
	                               And  Ias_V_Whtrns_Dtl_Yr.Itm_Unt       = P_Itm_Unt
	                               And  Ias_V_Whtrns_Dtl_Yr.W_Code        = P_W_Code  
	                               And  Ias_V_Whtrns_Mst_Yr.Tr_Date       = V_Rec_Tr_Date ;
	                        Exception
	                         When Others Then
	                           V_Rec_Tr_Ser   := Null ;
	                        End ; 
			          Else
           		            Begin
			                  Select Max(Ias_Whtrns_Mst.Tr_Date) Tr_Date
			                    Into V_Doc_Date 
			                   From Ias_Whtrns_Mst,Ias_Whtrns_Dtl
			                    Where Ias_Whtrns_Mst.Tr_Ser        = Ias_Whtrns_Dtl.Tr_Ser
			                     And  Ias_Whtrns_Mst.Tr_InOut_Type = 1
			                     And  Ias_Whtrns_Dtl.I_Code        = P_I_Code 
			                     And  Ias_Whtrns_Dtl.Itm_Unt       = P_Itm_Unt
			                     And  Ias_Whtrns_Dtl.T_W_Code      = P_W_Code 
			                     And  Ias_Whtrns_Mst.Tr_Date      <= P_T_Date ;
			                Exception
			                 When Others Then
			                   V_Doc_Date  := Null ;
			                End ;  
                      End If ;
                      If V_Rec_Tr_Ser Is Not Null Then
                         Begin
                            Select Min(Ias_V_Whtrns_Mst_Yr.Tr_Date) Tr_Date
                              Into V_Tr_Date 
                             From Ias_V_Whtrns_Mst_Yr,Ias_V_Whtrns_Dtl_Yr
                              Where Ias_V_Whtrns_Mst_Yr.Tr_Ser        = Ias_V_Whtrns_Dtl_Yr.Tr_Ser
                               And  Ias_V_Whtrns_Mst_Yr.Tr_Inout_Type = 1
                               And  Ias_V_Whtrns_Mst_Yr.Tr_Ser        = V_Rec_Tr_Ser
                               And  Ias_V_Whtrns_Dtl_Yr.I_Code        = P_I_Code 
                               And  Ias_V_Whtrns_Dtl_Yr.Itm_Unt       = P_Itm_Unt
                               And  Ias_V_Whtrns_Dtl_Yr.T_W_Code      = P_W_Code  ;
                         Exception
                           When Others Then
                             V_Tr_Date  := Null ;
                         End ;                   
                      End If ;
                     /*
                      If V_Rec_Tr_Date Is Not Null And  V_Tr_Date Is Not Null Then
                         V_Road_Distance :=  V_Rec_Tr_Date - V_Tr_Date ;               
                      End If ;*/
                      If P_T_Date Is Not Null And V_Rec_Tr_Date Is Not Null Then
                         V_Itm_Sum_Day := To_Date(P_T_Date,'Dd/Mm/Yyyy') -To_Date(V_Rec_Tr_Date,'Dd/Mm/Yyyy') ;
                      ElsIf  P_T_Date Is Not Null And V_Doc_Date Is Not Null Then                                                                                                              
                         V_Itm_Sum_Day := To_Date(P_T_Date,'Dd/Mm/Yyyy') -To_Date(V_Doc_Date,'Dd/Mm/Yyyy') ;
                      Else
                         V_Itm_Sum_Day := 0 ;
                      End If ; 
                      Exit ;
               ElsIf  P_Sale_Age_Type = 3 Then
                      Begin
                         Select Min(Ias_V_Gr_Detail_Yr.Gr_Date) Tr_Date
                           Into V_Doc_Date 
                          From Ias_V_Gr_Detail_Yr
                           Where Ias_V_Gr_Detail_Yr.I_Code      = P_I_Code
                            And  Ias_V_Gr_Detail_Yr.Itm_Unt     = P_Itm_Unt 
                            And  Ias_V_Gr_Detail_Yr.W_Code      = P_W_Code 
                            And  Ias_V_Gr_Detail_Yr.Gr_Date    >= P_F_Date ;
                      Exception
                        When Others Then
                          V_Doc_Date  := Null ;
                      End ;
			          If P_T_Date Is Not Null And V_Doc_Date Is Not Null Then
			             V_Itm_Sum_Day := To_Date(P_T_Date,'DD/MM/YYYY') -To_Date(V_Doc_Date,'DD/MM/YYYY');
			          Else
			          	 V_Itm_Sum_Day := 0 ;
			          End If ;
                      Exit ;
               End If ;
           End Loop ;     
           Return(Nvl(V_Itm_Sum_Day,0)) ;
       End ;   
   ElsIf P_Type = 2 Then --All Warehouse
         V_Curdate := (To_Date(Ias_Gen_Pkg.Get_Curdate  ,'DD/MM/YYYY'))+1;
         V_Frsdate := (To_Date(Ias_Gen_Pkg.Get_Frst_Day ,'DD/MM/YYYY'))+1;
         Begin
          Select 1
            Into V_Cnt 
           From Ias_V_Gr_Detail_Yr 
            Where I_Code  = P_I_Code
             And  Pi_Type = 0
             And  Nvl(I_qty,0) >0
             And  RowNum <= 1 ; 
         Exception
           When No_Data_Found Then
             V_Cnt := 0 ;
           When Others Then
            Null ;
         End ;
         If V_Cnt > 0 Then
            Begin
             Select Income_Date
              Into V_Income_Date 
             From Ias_Itm_Mst
              Where I_Code = P_I_Code ;
            Exception
             When Others Then
               V_Income_Date := Ias_Gen_Pkg.Get_Frst_Day ;
            End ; 
         Else
            Begin
             Select Min(Gr_Date)  
               Into V_Income_Date 
              From Ias_V_Gr_Detail_Yr
               Where I_Code = P_I_Code
                And  Pi_Type <> 0  ; 
            Exception
             When Others Then
              V_Income_Date := Ias_Gen_Pkg.Get_Frst_Day ;
            End ;       
         End If ;
         Begin
           Select 1  
             Into V_Cnt
            From Ias_V_Gr_Detail_Yr
             Where I_Code = P_I_Code
              And  Nvl(Cp_Qty,0) > 0
              And  RowNum <= 1 ; 
         Exception
          When No_Data_Found Then
           V_Cnt :=  0 ;
          When Others Then
           V_Last_Date := To_Date(Ias_Gen_Pkg.Get_CurDate,'DD/MM/YYYY') ;
         End ; 
         If V_Cnt > 0 Then
            V_Last_Date :=To_Date(Ias_Gen_Pkg.Get_CurDate,'DD/MM/YYYY') ;
         Else
           Begin
            Select Max(Doc_Date)
             Into V_Last_Date
            From Sale_Cost
             Where I_Code  = P_I_Code 
              And Bill_Type In (1,6); 
           Exception
            When Others Then
             V_Last_Date := To_Date(Ias_Gen_Pkg.Get_CurDate,'DD/MM/YYYY') ;
           End ;       
         End If ;
         If V_Income_Date Is Not Null And V_Last_Date Is Not Null Then
            V_Itm_Sum_Day := (V_Last_Date - V_Income_Date)  ;  
         End If ;
      
         Return(Nvl(V_Itm_Sum_Day,0)) ;
   End If ;
 End Get_Itm_Sales_Age ;
/
CREATE Function Get_Itm_Sales_Tnovr_Ratio ( P_Costing_Type  In Ias_Para_Inv.Costing_Type%Type ,
	                                                     P_Wtavg_Type    In Ias_Para_Inv.Wtavg_Type%Type   ,
	                                                     P_V_Tp          In Number                         ,
	                                                     P_I_Code        In Ias_Itm_Mst.I_Code%Type        ,
	                                                     P_Fd            In Date                  ,
	                                                     P_Td            In Date                  ,
	                                                     P_W_Code        In Warehouse_Details.W_Code%Type  Default Null   ,
	                                                     P_I_Size        In Varchar2 Default 1    ,
	                                                     P_Tnovr_Type    In Number                ,
	                                                     P_Retrn_Type    In Number default 3) Return Number Is
  V_Dev           Number := 0    ;
  V_Op_Qty        Number := 0    ;
  V_Fin_Qty       Number := 0    ;  
  V_Sl_Cost       Number := 0    ; 
  V_Slrtn_Cost    Number := 0    ;
  V_Op_Cost       Number := 0    ;
  V_Fin_Cost      Number := 0    ;
  V_Trovr         Number := 0    ;
  V_Tnovr_Type    Number(1) := 1 ;    ---  Ratio Type    1=Cost  2=Qty  ---
  V_sale_cost     Number := 0    ;
  V_Stock_Cost    Number := 1    ;
  Begin
  
     
   If P_I_Code Is Not Null And P_Td Is Not Null Then
    
   ---##----------------------------------------------------------------------------------------------##---        
     

     If P_W_Code Is Not Null  Then   
        --## To Get Sales Qty
         Begin
        
               Select  Nvl((Sum((((Nvl(I_Qty,0)+Nvl(Free_Qty,0))*Nvl(P_Size,0))*Decode(P_Tnovr_Type,1,Nvl(Stk_Cost,0),1))/Nvl(P_I_Size,1))),0)
               Into V_Sl_Cost
              From Ias_Bill_Mst  M  , Ias_Bill_Dtl C
             Where M.Bill_Ser     = C.Bill_Ser 
               And C.I_Code       = P_I_Code
               And C.W_Code       = Decode(P_W_Code,Null,C.W_Code,P_W_Code)
               And M.Bill_Date      Between P_Fd And P_Td
               GROUP BY Decode(P_W_CODE,Null,C.W_Code,P_W_CODE),C.I_Code  ;

        Exception
           When No_Data_Found Then
          --- raise_application_error(-20001 , ' Err in Bills V_Sl_Cost ' ||SqlErrm);  
           V_Sl_Cost :=  0 ;
        End;
      
    --- To Get  Return Sales Qty  
     
        Begin
        Select   Nvl((Sum((((Nvl(I_Qty,0)+Nvl(Free_Qty,0))*Nvl(P_Size,0))*Decode(P_Tnovr_Type,1,Nvl(Stk_Cost,0),1))/Nvl(P_I_Size,1))),0) Into V_Slrtn_Cost 
          From Ias_Rt_Bill_Mst M, Ias_Rt_Bill_Dtl C
         Where M.Rt_Bill_Ser  = C.Rt_Bill_Ser 
           And C.I_Code       = P_I_Code
           And C.W_Code       = Decode(P_W_Code,Null,C.W_Code,P_W_Code)
           And M.Rt_Bill_Date   Between P_Fd And P_Td
           GROUP BY Decode(P_W_CODE,Null,C.W_Code,P_W_CODE),C.I_Code ;
            

        Exception
           When No_Data_Found Then 
          -- raise_application_error(-20001 ,' Err in Rt Bills V_Slrtn_Cost   ' || SqlErrm);  
            V_Slrtn_Cost :=  0 ;            
        End;
      
     
     --  To Get Open Stock Qty  
     
        Begin
         
         Select Nvl(Sum((Nvl(In_Out*(Nvl(C.P_Qty,0)+Nvl(C.Pf_Qty,0)) ,0) / Nvl(P_I_Size,1))* Decode(P_Tnovr_Type,1,Nvl(Stk_Cost,0),1))
                      ,0) Into V_Op_Qty
          From Item_Movement    C
         Where C.I_Code       = P_I_Code
           And C.W_Code       = Decode(P_W_Code,Null,C.W_Code,P_W_Code)
           And (C.I_Date < P_Fd Or Doc_Type = 0)
           GROUP BY Decode(P_W_CODE,Null,C.W_Code,P_W_CODE),C.I_Code ;
           
        Exception
           When No_Data_Found Then
           -- raise_application_error(-20001 ,' Err in Bills V_Sl_Cost   ' || SqlErrm); 
            V_Op_Qty :=  0 ;                        
        End;
     Else

        --## To Get Sales Qty
         Begin
        
               Select  Nvl((Sum((((Nvl(I_Qty,0)+Nvl(Free_Qty,0))*Nvl(P_Size,0))*Decode(P_Tnovr_Type,1,Nvl(Stk_Cost,0),1))/Nvl(P_I_Size,1))),0)
               Into V_Sl_Cost
              From Ias_Bill_Mst  M  , Ias_Bill_Dtl C
             Where M.Bill_Ser     = C.Bill_Ser 
               And C.I_Code       = P_I_Code
               And M.Bill_Date      Between P_Fd And P_Td
               GROUP BY C.I_Code  ;

        Exception
           When No_Data_Found Then
          --- raise_application_error(-20001 , ' Err in Bills V_Sl_Cost ' ||SqlErrm);  
           V_Sl_Cost :=  0 ;
        End;
      
    --- To Get  Return Sales Qty  
     
        Begin
        Select   Nvl((Sum((((Nvl(I_Qty,0)+Nvl(Free_Qty,0))*Nvl(P_Size,0))*Decode(P_Tnovr_Type,1,Nvl(Stk_Cost,0),1))/Nvl(P_I_Size,1))),0) Into V_Slrtn_Cost 
          From Ias_Rt_Bill_Mst M, Ias_Rt_Bill_Dtl C
         Where M.Rt_Bill_Ser  = C.Rt_Bill_Ser 
           And C.I_Code       = P_I_Code
           And M.Rt_Bill_Date   Between P_Fd And P_Td
           GROUP BY C.I_Code ;
            

        Exception
           When No_Data_Found Then 
          -- raise_application_error(-20001 ,' Err in Rt Bills V_Slrtn_Cost   ' || SqlErrm);  
            V_Slrtn_Cost :=  0 ;            
        End;
      
     
     --  To Get Open Stock Qty  
     
        Begin
         
         Select Nvl(Sum((Nvl(In_Out*(Nvl(C.P_Qty,0)+Nvl(C.Pf_Qty,0)) ,0) / Nvl(P_I_Size,1))* Decode(P_Tnovr_Type,1,Nvl(Stk_Cost,0),1))
                      ,0) Into V_Op_Qty
          From Item_Movement    C
         Where C.I_Code       = P_I_Code
           And (C.I_Date < P_Fd Or Doc_Type = 0)
           GROUP BY  C.I_Code ;
           
        Exception
           When No_Data_Found Then
           -- raise_application_error(-20001 ,' Err in Bills V_Sl_Cost   ' || SqlErrm); 
            V_Op_Qty :=  0 ;                        
        End;
            
     End If ; 
     --  To Get Balance Qty 
     
        Begin 
          
          
          
          Select Nvl(((Nvl(Get_Icode_Avlqty ( P_I_Code , 1 , P_W_Code ,  Null , Null , Null ),0))/Nvl(P_I_Size,1)),0) 
                                    Into V_Fin_Qty From Dual;
     
        Exception
         When No_Data_Found Then
        -- raise_application_error(-20001 ,' Err in Get_Icode_Avlqty V_Fin_Qty   ' || SqlErrm); 
         V_Fin_Qty :=  0 ;
        End;
   
    ---##----------------------------------------------------------------------------------------------##---        
     --- To Get Open Stock Cost
     
     If P_Costing_Type = 1  Then -- Fifo

        Begin
         V_Op_Cost:=Get_Pri_Cost_Fifo( P_I_Code,
                                       P_Fd,
                                       Ias_Gen_Pkg.Get_Frst_Day,                               
                                       P_W_Code) * Nvl(V_Op_Qty,0);
        Exception
               When No_Data_Found Then
             -- raise_application_error(-20001 ,' Err in Get_Pri_Cost_Fifo V_Op_Cost   ' || SqlErrm); 
              V_Op_Cost :=  0 ;
        End;
     
     Else -- Wtavg
          
        Begin
         V_Op_Cost:=Get_Pri_Cost( P_Wtavg_Type,
                                  P_I_Code,
                                  P_W_Code,
                                  P_Fd,
                                  0 )  * Nvl(V_Op_Qty,0);
        Exception
               When No_Data_Found Then
            -- raise_application_error(-20001 ,' Err in Get_Pri_Cost V_Op_Cost   ' || SqlErrm); 
              V_Op_Cost :=  0 ;
        End;
     End If;
   ---##----------------------------------------------------------------------------------------------##---        
     --- To Get Balance Cost
     
    If P_Costing_Type = 1  Then -- Fifo
            
        Begin
     
          V_Fin_Cost:= Get_Cost_Fifo ( P_I_Code,P_Td,P_W_Code) * Nvl(V_Fin_Qty,0);
      
        Exception
            When No_Data_Found Then
            V_Fin_Cost :=  0 ;
          ---raise_application_error(-20001 ,' Err in Fifo  By To Get Balance Cost    ' || SqlErrm);   
        End;
   
    Else -- Wtavg
        If     P_Wtavg_Type In (1,2) Then -- By Item Or By Item + W_Code 
                 Begin
                
                     Select Nvl((( Ias_Itm_Pkg.Get_Grand_Avlqty( P_I_Code,P_W_Code) )/Nvl(P_I_Size,1)),0)* 
                                   Get_Cost ( P_Wtavg_Type ,P_V_Tp,P_I_Code,P_W_Code,P_Td,P_Td)  
                                   Into V_Fin_Cost From  Dual;
                   
                     
                   Exception
                       When No_Data_Found Then
                    ---   raise_application_error(-20001 ,' Err in Wtavg  By Item Or By Item + W_Code    ' || SqlErrm);   
                         V_Fin_Cost :=  0 ;
                 End;
        Elsif  P_Wtavg_Type = 3 Then --  Item + Whg_Code 

                 Begin
                   
                    Select Nvl((( Get_Icode_Whgcode_Avlqty( P_I_Code,Null,Ias_Wcode_Pkg.Get_Whg_Code(P_W_Code)))/Nvl(P_I_Size,1)),0) 
                          * Get_Cost ( P_Wtavg_Type ,P_V_Tp,P_I_Code,P_W_Code,P_Td,P_Td)
                            Into V_Fin_Cost From  Dual;

                   
                   
                 Exception
                       When No_Data_Found Then
                      ---  raise_application_error(-20001 ,' Err in Wtavg  By Item + Whg_Code     ' || SqlErrm);   
                          V_Fin_Cost :=  0 ;
                 End;
        End If ;
    End If;
   ---##----------------------------------------------------------------------------------------------##---        
     --- To  Calculate Ratio   
       
     If V_Op_Cost > 0 Then
        V_Dev:=1;
     End If; 
     
     If V_Fin_Cost > 0 Then
        V_Dev:= Nvl(V_Dev,0) + 1;
     End If;  
          
     If V_Dev > 0 Then
       V_Trovr:= (Nvl(V_Sl_Cost,0) - Nvl(V_Slrtn_Cost,0) ) / ((Nvl(V_Op_Cost,0) + Nvl(V_Fin_Cost,0) ) / V_Dev);
     Else
       V_Trovr:= 0;
     End If;
     
    End If ;
 --##-----------------------------------------------------------------------------------------------##------
  If  P_Retrn_Type =1 then 
    V_Sale_Cost   :=nvl((V_Sl_Cost - V_Slrtn_Cost ),0) ;
    Return (V_Sale_Cost);
  Elsif P_Retrn_Type =2 then 
    V_Stock_Cost  :=nvl((V_Op_Cost + V_Fin_Cost ),1);
    Return (V_Stock_Cost);
  Elsif P_Retrn_Type =3 then 
    
    Return (Nvl(V_Trovr,1));
  End If;
 --##-----------------------------------------------------------------------------------------------##------

 End Get_Itm_Sales_Tnovr_Ratio;
/
CREATE Function Get_Itm_Ser_Prc( P_Icode     In  Ias_Itm_Mst.I_Code%Type        ,
				                  P_Itm_Unt   In  Ias_Itm_Dtl.Itm_Unt%Type       ,
				                  P_Wcode     In  Warehouse_Details.W_Code%Type  ,
				                  P_Rcrd_No   In  Item_Movement.Rcrd_No%Type     ,
				                  P_Doc_Type  In  Item_Movement.Doc_Type%Type    ,
				                  P_Doc_Ser   In  Item_Movement.Doc_Ser%Type     ,
				                  P_Doc_Seq   In  Item_Movement.Doc_Type%Type    ) Return Number Is
    V_Serial   Item_Movement.Serial%Type ;
 Begin
      If P_Doc_Ser Is Null Then
         Select Serial Into V_Serial
          From  Item_Movement
           Where  I_Code       = P_Icode
            And   Itm_Unt      = P_Itm_Unt
            And   W_Code       = P_Wcode
            And   Rcrd_No      = P_Rcrd_No
            And   Doc_Type     = P_Doc_Type 
            And   Doc_Sequence = P_Doc_Seq ;                    
      Else
         Select Serial Into V_Serial
          From  Item_Movement
           Where  I_Code       = P_Icode
            And   Itm_Unt      = P_Itm_Unt
            And   W_Code       = P_Wcode
            And   Rcrd_No      = P_Rcrd_No
            And   Doc_Type     = P_Doc_Type
            And   Doc_Ser      = P_Doc_Ser
            And   Doc_Sequence = P_Doc_Seq ;                        
      End If;
  Return (V_Serial);
 Exception 
  When Others Then
    Return(0);
End Get_Itm_Ser_Prc ;
/
CREATE FUNCTION Get_Net_Pur_Prev_Year(P_Usr       In VARCHAR2,
                                                            P_Fld_Name  In VARCHAR2,
                                                            P_Fld_Value In VARCHAR2,
                                                            P_Fdate     In DATE,
                                                            P_Tdate     In DATE,
                                                            P_Tname     In VARCHAR2 Default Null ,
                                                            P_Whr       In VARCHAR2 Default Null ,
                                                            P_Sign      In VARCHAR2 Default Null ,
                                                            P_Per       In NUMBER Default Null   ,
                                                            P_Type      In NUMBER                ) RETURN NUMBER IS
  V_Pur     Number:=0;
  V_RtPur   Number:=0;
  V_NetPur  Number:=0;
  V_Tname    Varchar2(50);   
  --V_whr     Varchar2(8000);
  --V_Fld_Name Varchar2(50);
BEGIN
   
   -------------------------------------------------------------------------------------------------------------------------------------------------------
   If P_Tname Is Not Null Then
      V_Tname := ','||P_Tname;     
   End if;
   --------------------------------------------------------------------------------------
   Execute Immediate 'Select Decode('||P_Type||',1,Sum(Nvl(I_Qty,0)),2,Sum(Nvl(I_Qty,0)*(Nvl(I_Price,0)-Nvl(dis_amt,0))))
                      From '||P_Usr||'.Ias_Pi_Bill_Mst,'||P_Usr||'.Ias_Pi_Bill_Dtl '||V_Tname||' 
                      Where '||P_Usr||'.Ias_Pi_Bill_Mst.Bill_Ser='||P_Usr||'.Ias_Pi_Bill_Dtl.Bill_Ser'||P_Whr||'
                        AND '||P_Usr||'.Ias_Pi_Bill_Mst.Bill_Date Between '''||To_Char(P_Fdate,'DD/MM/YYYY')||''' And '''||To_Char(P_Tdate,'DD/MM/YYYY')||'''
                        AND '||Replace(P_Fld_Name,'V_Code','Ias_Pi_Bill_Mst.v_code')||'='||''''||P_Fld_Value||'''' InTo V_Pur;
                       
                          
   -------------------------------------------------------------------------------------------------------------------------------------------------------
   Execute Immediate 'Select Decode('||P_Type||',1,Sum(Nvl(I_Qty,0)),2,Sum(Nvl(I_Qty,0)*(Nvl(I_Price,0)-Nvl(dis_amt,0)))) 
                       From '||P_Usr||'.Ias_Pr_Bill_Mst,'||P_Usr||'.Ias_Pr_Bill_Dtl'||V_Tname||' 
                      Where '||P_Usr||'.Ias_Pr_Bill_Mst.Rt_Bill_Ser='||P_Usr||'.Ias_Pr_Bill_Dtl.Rt_Bill_Ser'||Replace(P_Whr,'Pi_Bill','Pr_Bill')||'
                        AND '||P_Usr||'.Ias_Pr_Bill_Mst.Rt_Bill_Date Between '''||To_Char(P_Fdate,'DD/MM/YYYY')||''' And '''||To_Char(P_Tdate,'DD/MM/YYYY')||'''
                        AND '||Replace(Replace(P_Fld_Name,'V_Code','Ias_Pr_Bill_Mst.v_code'),'Pi_Bill','Pr_Bill')||'='||''''||P_Fld_Value||'''' InTo V_RtPur;

      -------------------------------------------------------------------------------------------------------------------------------------------------------
   V_NetPur := Nvl(V_Pur,0)-Nvl(V_RtPur,0);
   If  Nvl(V_NetPur,0) >= 0 Then 
		   If P_Sign Is Not Null And P_Per Is Not Null Then
		     If P_Sign='+' Then
		       V_NetPur := V_NetPur + (V_NetPur*P_Per/100);
		     ElsIf P_Sign='-' Then
		       V_NetPur := V_NetPur - (V_NetPur*P_Per/100);
		     ElsIf P_Sign='*' Then
		       V_NetPur := V_NetPur * (V_NetPur*P_Per/100);
		     ElsIf P_Sign='/' Then
		       V_NetPur := V_NetPur / (V_NetPur*P_Per/100);
		     End If;
		   End If;
 End If;
   -------------------------------------------------------------------------------------------------------------------------------------------------------
   RETURN V_NetPur;
   -------------------------------------------------------------------------------------------------------------------------------------------------------
   EXCEPTION WHEN OTHERS THEN       
     Return(0);     
END Get_Net_Pur_Prev_Year;
/
CREATE FUNCTION Get_Net_Sales_Prev_Year(P_Usr     In  Varchar2              ,
                                                            P_Fld_Name  In  Varchar2              ,
                                                            P_Fld_Value In  Varchar2              ,
                                                            P_Fdate     In Date                   ,
                                                            P_Tdate     In Date                   ,
                                                            P_Tname     In Varchar2 Default Null  ,
                                                            P_Whr       In Varchar2 Default Null  ,
                                                            P_Sign      In Varchar2 Default Null  ,
                                                            P_Per       In Number Default Null    ,
                                                            P_Type      In NUMBER                 ) RETURN NUMBER IS
  V_Sale     Number:=0;
  V_RtSale   Number:=0;
  V_NetSale  Number:=0;
  V_Tname    Varchar2(50);   
  V_whr     Varchar2(8000);
  V_Fld_Name Varchar2(50);
BEGIN
   -------------------------------------------------------------------------------------------------------------------------------------------------------
   If P_Tname Is Not Null Then
      V_Tname := ','||P_Tname;     
   End if;
   --------------------------------------------------------------------------------------
   Execute Immediate 'Select Decode('||P_Type||',1,Sum(Nvl(I_Qty,0)),2,Sum(Nvl(I_Qty,0)*(Nvl(I_Price,0)-Nvl(dis_amt,0)))) 
                      From '||P_Usr||'.Ias_Bill_Mst,'||P_Usr||'.Ias_Bill_Dtl '||V_Tname||' 
                      Where '||P_Usr||'.Ias_Bill_Mst.Bill_Ser='||P_Usr||'.Ias_Bill_Dtl.Bill_Ser'||P_Whr||'
                        AND '||P_Usr||'.Ias_Bill_Mst.Bill_Date Between '''||To_Char(P_Fdate,'DD/MM/YYYY')||''' And '''||To_Char(P_Tdate,'DD/MM/YYYY')||'''
                        AND '||P_Fld_Name||'='||''''||P_Fld_Value||'''' InTo  V_Sale;
                       
                          
   -------------------------------------------------------------------------------------------------------------------------------------------------------
   Execute Immediate 'Select Decode('||P_Type||',1,Sum(Nvl(I_Qty,0)),2,Sum(Nvl(I_Qty,0)*(Nvl(I_Price,0)-Nvl(dis_amt,0)))) 
                       From '||P_Usr||'.Ias_Rt_Bill_Mst,'||P_Usr||'.Ias_Rt_Bill_Dtl'||V_Tname||' 
                      Where '||P_Usr||'.Ias_Rt_Bill_Mst.Rt_Bill_Ser='||P_Usr||'.Ias_Rt_Bill_Dtl.Rt_Bill_Ser'||Replace(P_Whr,'Bill','Rt_Bill')||'
                        AND '||P_Usr||'.Ias_Rt_Bill_Mst.Rt_Bill_Date Between '''||To_Char(P_Fdate,'DD/MM/YYYY')||''' And '''||To_Char(P_Tdate,'DD/MM/YYYY')||'''
                        AND '||Replace(P_Fld_Name,'Bill','Rt_Bill')||'='||''''||P_Fld_Value||'''' InTo  V_RtSale;
                        
      -------------------------------------------------------------------------------------------------------------------------------------------------------
   V_NetSale := Nvl(V_Sale,0)-Nvl(V_RtSale,0);
   If  Nvl(V_NetSale,0) >= 0 Then 
		   If P_Sign Is Not Null And P_Per Is Not Null Then
		     If P_Sign='+' Then
		       V_NetSale := V_NetSale + (V_NetSale*P_Per/100);
		     ElsIf P_Sign='-' Then
		       V_NetSale := V_NetSale - (V_NetSale*P_Per/100);
		     ElsIf P_Sign='*' Then
		       V_NetSale := V_NetSale * (V_NetSale*P_Per/100);
		     ElsIf P_Sign='/' Then
		       V_NetSale := V_NetSale / (V_NetSale*P_Per/100);
		     End If;
		   End If;
   End If ;
   -------------------------------------------------------------------------------------------------------------------------------------------------------
   RETURN V_NetSale;
   -------------------------------------------------------------------------------------------------------------------------------------------------------
   EXCEPTION WHEN OTHERS THEN       
     Return(0);     
END Get_Net_Sales_Prev_Year;
/
CREATE Function GET_NEW_SEQ(  S_TAB      VarChar2,
																					   			  S_COL      VarChar2,
																								    S_TYP      VarChar2,
																								    val1       Number,
																								    val2       Number ,
																								    val3       NUMBER ,
																								    val4       NUMBER,
																								    val5       NUMBER,
																								    val6       NUMBER,
																								    init_val   NUMBER,
																								    incr_by    NUMBER,
																								    seq_conc   NUMBER,
																								    v_cmp_no   NUMBER  DEFAULT NULL,
																								    v_Brn_no   NUMBER  DEFAULT NULL,
																								    v_Brn_Usr  NUMBER  DEFAULT NULL,
																								    v_Brn_Year NUMBER  DEFAULT NULL ) Return Number is
   VSeq        Number;
Begin
   Begin
	 ---------------------------------------------------
	 -- type = 0 Direct sequence
			IF  s_typ = 0 Then
			    Begin
			     Select nvl(S_SEQ_VAL,0)   + nvl( S_INCRBY_VAL,0)
				     Into VSeq
					  From  S_SEQ_VALUES
					  Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
					    AND UPPER(S_COL_NAME)  =   UPPER(S_COL)
					    AND S_SEQ_TYP          =   S_TYP
					  For Update;

			     Update  S_SEQ_VALUES
					    Set  S_SEQ_VAL  = nvl(S_SEQ_VAL ,0)+ nvl(S_INCRBY_VAL,0)
					  Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
					    AND  UPPER(S_COL_NAME)  =   UPPER(S_COL)
					    AND  S_SEQ_TYP          =   S_TYP;
			if seq_conc <> 0 then
			     Return seq_conc||VSeq;
			else
			     Return VSeq;
			end if ;
	 Exception
	       When No_Data_Found Then
							--Raise_Application_Error(-20002,''Error In Generating Sequence, Record(s) Not Saved'');
							VSeq:=init_val;
							INSERT INTO
									S_SEQ_VALUES(S_TAB_NAME
															,S_COL_NAME
															,S_VAL1
															,S_VAL2
															,S_VAL3
															,S_VAL4
															,S_VAL5
															,S_VAL6
															,S_INCRBY_VAL
															,S_INIT_VAL
															,S_SEQ_VAL
															,S_SEQ_TYP
															,CMP_NO
															,BRN_NO
															,BRN_USR
															,BRN_YEAR)
											VALUES(S_TAB
														,S_COL
														,0
														,0
														,0
														,0
														,0
														,0
														,incr_by
														,init_val
														,init_val
														,S_TYP
														,v_cmp_no
														,v_Brn_no
														,v_Brn_Usr
														,v_Brn_Year);
								if seq_conc <> 0 then
								     Return seq_conc||VSeq;
								else
								     Return VSeq;
								end if ;
	 End;
	 ---------------------------------------------------
	 -- type = 1 field
  ELSIF   s_typ = 1 THEN
    Begin
     Select  S_SEQ_VAL   + S_INCRBY_VAL
	     Into  VSeq
		   From  S_SEQ_VALUES
		  Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
		    AND	 UPPER(S_COL_NAME)  =   UPPER(S_COL)
		    AND  S_SEQ_TYP          =   S_TYP
		    AND S_VAL1=VAL1
		  For Update;

     Update S_SEQ_VALUES
		    Set S_SEQ_VAL          = S_SEQ_VAL + S_INCRBY_VAL
		  Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
		    AND UPPER(S_COL_NAME)  =   UPPER(S_COL)
		    AND S_SEQ_TYP          =   S_TYP
		    AND S_VAL1=VAL1;
			   if seq_conc <> 0 then
				     Return seq_conc||VSeq;
			    else
				     DBMS_OUTPUT.Put_Line(VSeq);
				     Return VSeq;
			   end if ;
   Exception
       When No_Data_Found Then
      --Raise_Application_Error(-20002,''Error In Generating Sequence, Record(s) Not Saved'');
				VSeq:=init_val;
				--Return 1;

				INSERT INTO
				  S_SEQ_VALUES(S_TAB_NAME
				              ,S_COL_NAME
				              ,S_VAL1
				              ,S_VAL2
				              ,S_VAL3
				              ,S_VAL4
				              ,S_VAL5
				              ,S_VAL6
				              ,S_INCRBY_VAL
				              ,S_INIT_VAL
				              ,S_SEQ_VAL
				              ,S_SEQ_TYP
				              ,CMP_NO
								     ,BRN_NO
								     ,BRN_USR
								     ,BRN_YEAR)
								VALUES(S_TAB
								      ,S_COL
								      ,VAL1
								      ,0
								      ,0
								      ,0
								      ,0
								      ,0
								      ,incr_by
								      ,init_val
								      ,init_val
								      ,S_TYP
								      ,v_cmp_no
								     ,v_Brn_no
								     ,v_Brn_Usr
								     ,v_Brn_Year);
				if seq_conc <> 0 then
				     Return seq_conc||VSeq;
				else
				     Return VSeq;
				end if ;
   End;
   --------------------------------------------------------
  ELSIF   s_typ = 2   THEN
    Begin
		     Select  S_SEQ_VAL   + S_INCRBY_VAL
			     Into  VSeq
				   From  S_SEQ_VALUES
				  Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
				    AND  UPPER(S_COL_NAME)  =   UPPER(S_COL)
				    AND  S_SEQ_TYP               =   S_TYP
				    AND  S_VAL1=VAL1
				    AND  S_VAL2=VAL2

				  For Update;
		     Update S_SEQ_VALUES
				    Set S_SEQ_VAL  = S_SEQ_VAL + S_INCRBY_VAL
				  Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
				    AND UPPER(S_COL_NAME)  =   UPPER(S_COL)
				    AND S_SEQ_TYP          =   S_TYP
				    AND S_VAL1=VAL1
				    AND S_VAL2=VAL2  ;
				    if seq_conc <> 0 then
				        Return seq_conc||VSeq;
				    else
				        Return VSeq;
				    end if ;
     Exception
		       When No_Data_Found Then
						--Raise_Application_Error(-20002,''Error In Generating Sequence, Record(s) Not Saved'');
							VSeq:=init_val;
							INSERT INTO
							  S_SEQ_VALUES(S_TAB_NAME
							  						,S_COL_NAME
							  						,S_VAL1
							  						,S_VAL2
							  						,S_VAL3
							  						,S_VAL4
							  						,S_VAL5
							  						,S_VAL6
							  						,S_INCRBY_VAL
							  						,S_INIT_VAL
							  						,S_SEQ_VAL
							  						,S_SEQ_TYP
							  						,CMP_NO
											     ,BRN_NO
											     ,BRN_USR
											     ,BRN_YEAR)
											VALUES(S_TAB
														,S_COL
														,VAL1
														,VAL2
														,0
														,0
														,0
														,0
														,incr_by
														,init_val
														,init_val
														,S_TYP
														,v_cmp_no
											     ,v_Brn_no
											     ,v_Brn_Usr
											     ,v_Brn_Year);
								if seq_conc <> 0 then
								     Return seq_conc||VSeq;
								else
								     Return VSeq;
								end if ;
     End;
   --------------------------------------------------------
  ELSIF   s_typ = 3   THEN
    Begin
		     Select  S_SEQ_VAL   +  S_INCRBY_VAL
				   Into  VSeq
				   From  S_SEQ_VALUES
				  Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
				    AND  UPPER(S_COL_NAME)  =   UPPER(S_COL)
				    AND  S_SEQ_TYP               =   S_TYP
				    AND  S_VAL1=VAL1
				    AND  S_VAL2=VAL2
				    AND  S_VAL3=VAL3
				    For Update;

		     Update  S_SEQ_VALUES
						Set  S_SEQ_VAL  = S_SEQ_VAL + S_INCRBY_VAL
				  Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
				    AND  UPPER(S_COL_NAME)  =   UPPER(S_COL)
				    AND  S_SEQ_TYP          =   S_TYP
				    AND  S_VAL1=VAL1
				    AND  S_VAL2=VAL2
				    AND  S_VAL3=VAL3  ;

						if seq_conc <> 0 then
						     Return seq_conc||VSeq;
						else
						     Return VSeq;
						end if ;
     Exception
       	When No_Data_Found Then
						--Raise_Application_Error(-20002,''Error In Generating Sequence, Record(s) Not Saved'');
							VSeq:=init_val;
							INSERT INTO
							  S_SEQ_VALUES(S_TAB_NAME
							  						,S_COL_NAME
							  						,S_VAL1
							  						,S_VAL2
							  						,S_VAL3
							  						,S_VAL4
							  						,S_VAL5
							  						,S_VAL6
							  						,S_INCRBY_VAL
							  						,S_INIT_VAL
							  						,S_SEQ_VAL
							  						,S_SEQ_TYP
							  						,CMP_NO
											     ,BRN_NO
											     ,BRN_USR
											     ,BRN_YEAR)
											VALUES(S_TAB
														,S_COL
														,VAL1
														,VAL2
														,VAL3
														,0
														,0
														,0
														,incr_by
														,init_val
														,init_val
														,S_TYP
											      ,v_cmp_no
											      ,v_Brn_no
											      ,v_Brn_Usr
											      ,v_Brn_Year);
									if seq_conc <> 0 then
									     Return seq_conc||VSeq;
									else
									     Return VSeq;
									end if ;
	   End;
ELSIF   s_typ = 4   THEN
    Begin
		         Select S_SEQ_VAL   + S_INCRBY_VAL
		          Into  VSeq
				      From  S_SEQ_VALUES
				     Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
				       AND  UPPER(S_COL_NAME)  =   UPPER(S_COL)
				       AND  S_SEQ_TYP          =   S_TYP
				       AND  S_VAL1=VAL1
				       AND  S_VAL2=VAL2
				       AND  S_VAL3=VAL3
				       AND  S_VAL4=VAL4
				  		 For Update;

		     Update  S_SEQ_VALUES
						Set  S_SEQ_VAL  = S_SEQ_VAL + S_INCRBY_VAL
					Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
					  AND  UPPER(S_COL_NAME)  =   UPPER(S_COL)
					  AND  S_SEQ_TYP          =   S_TYP
					  AND  S_VAL1=VAL1
					  AND  S_VAL2=VAL2
					  AND  S_VAL3=VAL3
					  AND  S_VAL4=VAL4   ;
						if seq_conc <> 0 then
						     Return seq_conc||VSeq;
						else
						     Return VSeq;
						end if ;
     Exception
       	When No_Data_Found Then
						--Raise_Application_Error(-20002,''Error In Generating Sequence, Record(s) Not Saved'');
							VSeq:=init_val;
						  INSERT INTO
						     S_SEQ_VALUES(S_TAB_NAME
						     						 ,S_COL_NAME
						     						 ,S_VAL1
						     						 ,S_VAL2
						     						 ,S_VAL3
						     						 ,S_VAL4
						     						 ,S_VAL5
						     						 ,S_VAL6
						     						 ,S_INCRBY_VAL
						     						 ,S_INIT_VAL
						     						 ,S_SEQ_VAL
						     						 ,S_SEQ_TYP
						     						 ,CMP_NO
												     ,BRN_NO
												     ,BRN_USR
												     ,BRN_YEAR)
											VALUES(S_TAB
														,S_COL
														,VAL1
														,VAL2
														,VAL3
														,VAL4
														,0
														,0
														,incr_by
														,init_val
														,init_val
														,S_TYP
														,v_cmp_no
											     ,v_Brn_no
											     ,v_Brn_Usr
											     ,v_Brn_Year	);
										if seq_conc <> 0 then
										     Return seq_conc||VSeq;
										else
										     Return VSeq;
										end if ;
				   End;
ELSIF   s_typ = 5   THEN
    Begin
		         Select  S_SEQ_VAL   + S_INCRBY_VAL
			         Into  VSeq
				       From  S_SEQ_VALUES
				       Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
				         AND UPPER(S_COL_NAME)  =   UPPER(S_COL)
				         AND S_SEQ_TYP  =  S_TYP
				         AND S_VAL1			=  VAL1
				         AND S_VAL2     =  VAL2
				         AND S_VAL3     =  VAL3
				         AND S_VAL4     =  VAL4
				         AND S_VAL5     =  VAL5
				  			 For Update;

		     Update  S_SEQ_VALUES
						Set  S_SEQ_VAL  = S_SEQ_VAL + S_INCRBY_VAL
					Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
					  AND  UPPER(S_COL_NAME)  =   UPPER(S_COL)
					  AND  S_SEQ_TYP          =   S_TYP
					  AND  S_VAL1             =   VAL1
					  AND  S_VAL2             =   VAL2
					  AND  S_VAL3             =   VAL3
					  AND  S_VAL4             =   VAL4
					  AND  S_VAL5=VAL5   ;
						if seq_conc <> 0 then
						   Return seq_conc||VSeq;
						else
						   Return VSeq;
						end if ;
     Exception
       	When No_Data_Found Then
						--Raise_Application_Error(-20002,''Error In Generating Sequence, Record(s) Not Saved'');
							VSeq:=init_val;
							INSERT INTO
									S_SEQ_VALUES(S_TAB_NAME
															,S_COL_NAME
															,S_VAL1
															,S_VAL2
															,S_VAL3
															,S_VAL4
															,S_VAL5
															,S_VAL6
															,S_INCRBY_VAL
															,S_INIT_VAL
															,S_SEQ_VAL
															,S_SEQ_TYP
															,CMP_NO
												     ,BRN_NO
												     ,BRN_USR
												     ,BRN_YEAR)
												VALUES(S_TAB
															,S_COL
															,VAL1
															,VAL2
															,VAL3
															,VAL4
															,VAL5
															,0
															,incr_by
															,init_val
															,init_val
															,S_TYP
															,v_cmp_no
												     ,v_Brn_no
												     ,v_Brn_Usr
												     ,v_Brn_Year);
										if seq_conc <> 0 then
										     Return seq_conc||VSeq;
										else
										     Return VSeq;
										end if ;
			   End;
ELSIF   s_typ = 6   THEN
       Begin
			           Select  S_SEQ_VAL   + S_INCRBY_VAL
			          	 Into  VSeq
					         From  S_SEQ_VALUES
					        Where  UPPER(S_TAB_NAME) =   UPPER(S_TAB)
					          AND  UPPER(S_COL_NAME) =   UPPER(S_COL)
					          AND  S_SEQ_TYP         =   S_TYP
					          AND  S_VAL1            =   VAL1
					          AND  S_VAL2            =   VAL2
					          AND  S_VAL3            =   VAL3
					          AND  S_VAL4            =   VAL4
					          AND  S_VAL5            =   VAL5
					          AND  S_VAL6            =   VAL6
					          For Update;
			     		Update S_SEQ_VALUES
							 	 Set S_SEQ_VAL  = S_SEQ_VAL + S_INCRBY_VAL
							 Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
							   AND UPPER(S_COL_NAME)  =   UPPER(S_COL)
							   AND S_SEQ_TYP          =   S_TYP
							   AND S_VAL1             =   VAL1
							   AND S_VAL2             =   VAL2
							   AND S_VAL3             =   VAL3
							   AND S_VAL4             =   VAL4
							   AND S_VAL5             =   VAL5
							   AND S_VAL6             =   VAL6  ;
								if seq_conc <> 0 then
								     Return seq_conc||VSeq;
								else
								     Return VSeq;
								end if ;
     Exception
       	When No_Data_Found Then
						--Raise_Application_Error(-20002,''Error In Generating Sequence, Record(s) Not Saved'');
							VSeq:=init_val;
							INSERT INTO
									S_SEQ_VALUES(S_TAB_NAME
															,S_COL_NAME
															,S_VAL1
															,S_VAL2
															,S_VAL3
															,S_VAL4
															,S_VAL5
															,S_VAL6
															,S_INCRBY_VAL
															,S_INIT_VAL
															,S_SEQ_VAL
															,S_SEQ_TYP
															,CMP_NO
												      ,BRN_NO
												      ,BRN_USR
												      ,BRN_YEAR)
												VALUES(S_TAB
															,S_COL
															,VAL1
															,VAL2
															,VAL3
															,VAL4
															,VAL5
															,VAL6
															,incr_by
															,init_val
															,init_val
															,S_TYP
															,v_cmp_no
												      ,v_Brn_no
												      ,v_Brn_Usr
												      ,v_Brn_Year);
										if seq_conc <> 0 then
										     Return seq_conc||VSeq;
										else
										     Return VSeq;
										end if ;
				   End;
 	END IF;
END;
---------------------------
End; 
/
CREATE FUNCTION GET_OPN_BAL_Fnc(  P_loc_cur  In VARCHAR2,
                                                      P_GRP1  In VARCHAR2  Default Null,							                          
                                                      P_GRP2  In VARCHAR2  Default Null,
                                                      P_GRP3  In VARCHAR2  Default Null,							                           
                                                      P_GRP4  In VARCHAR2  Default Null,
                                                      P_GRP_V1  In VARCHAR2  Default Null,							                          
                                                      P_GRP_V2  In VARCHAR2  Default Null,
                                                      P_GRP_V3  In VARCHAR2  Default Null,							                           
                                                      P_GRP_V4  In VARCHAR2  Default Null,
    							                      P_acy      In VARCHAR2,
    							                      P_Fd       In Date      Default Null,
    							                      P_Td       In Date      Default Null,
                                                      P_REP_LOC  In Number    Default 0 ,    							                      
                                                      P_bal_type In Number    Default 0   ,
    							                      P_loc_amt  In Number    Default 0   ,
    							                      P_Post     In Number    Default 2   ) RETURN NUMBER IS
 op_amt   NUMBER:=0;                                            
 bl_amt   NUMBER:=0;
 WHR      VARCHAR2(500);
 V_GRP1   VARCHAR2(60);
 V_GRP2   VARCHAR2(60);
 V_GRP3   VARCHAR2(60);
 V_GRP4   VARCHAR2(60);
 BEGIN
    V_GRP1:=nvl(P_GRP1,'0');
    V_GRP2:=nvl(P_GRP2,'0');
    V_GRP3:=nvl(P_GRP3,'0');
    V_GRP4:=nvl(P_GRP4,'0');
    
    IF P_GRP1 LIKE '%VER.AC_TREE%' THEN --' And a_code in (select a_code from ias_acc_tree where ac_tree='''||P_GRP_V1||''')';
      WHR:=' a_code in (select a_code from ias_acc_tree where ac_tree='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.CC_TREE%' THEN
      WHR:=' Cc_code in (select Cc_code from ias_cc_tree where Cc_tree='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.C_CODE%' THEN
      WHR:=' C_code ='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.V_CODE%' THEN
      WHR:=' V_code ='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.CASH_NO%' THEN
      WHR:=' CASH_NO ='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.BANK_NO%' THEN
      WHR:=' CASH_NO ='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.PJ_TREE%' THEN
      WHR:=' PJ_NO in (select PJ_NO from ias_Pj_tree where PJ_tree='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.ACTV_TREE%' THEN
      WHR:=' ACTV_NO in (select ACTV_NO from ias_ACTV_tree where ACTV_tree='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.BRN_NO%' THEN
      WHR:=' BRN_NO='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.CMP_NO%' THEN
      WHR:=' CMP_NO='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.REP_CODE%' THEN
      WHR:=' REP_CODE='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.R_CODE%' THEN
      WHR:=' R_CODE='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.LC_NO%' THEN
      WHR:=' LC_NO='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.COL_NO%' THEN
      WHR:=' COL_NO='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.CITY_NO%' THEN
      WHR:=' CITY_NO in (select CITY_NO from CITIES where  CITY_NO='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.CNTRY_NO%' THEN
      WHR:=' CNTRY_NO in (select CNTRY_NO from CNTRY where  CNTRY_NO='''||P_GRP_V1||''')';
    ElsIF P_GRP1 LIKE '%VER.PROV_NO%' THEN
      WHR:=' PROV_NO in (select PROV_NO from IAS_PROVINCES where  PROV_NO='''||P_GRP_V1||''')';
    END IF;
    
   If P_loc_amt  = 0  Then --(1)v  by currency

    	If P_bal_type = 0  Then -- Open_bal (2)   Decode('''||P_GRP_V1||''',0,nvl('||P_GRP1||',0),'''||P_GRP_V1||''') '||WHR||'
	   
            Execute Immediate 

           
          'Select sum(DECODE('||P_REP_LOC||',1,Decode(A_CY,'''||P_loc_cur||''',nvl(j_amt,0),nvl(j_amt_f,0)* nvl(AC_rate,1))
                                              ,Decode(A_CY,'''||P_loc_cur||''',nvl(j_amt,0),nvl(j_amt_f,0))))
    	         From open_bal
    	        where  decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And '||WHR||'
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'
                Into op_amt ;

            Execute Immediate
            	'Select sum(DECODE('||P_REP_LOC||',1,NVL(AMT,0)
                                                  ,Decode(A_CY,'''||P_loc_cur||''',nvl(amt,0),nvl(amt_f,0))))
    	         From Ias_Post_Dtl
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And Ias_Post_Dtl.doc_type<>0
                  And Ias_Post_Dtl.doc_date < '''||P_Fd||'''
                  And Nvl(Ias_Post_Dtl.Doc_Post,0)=Decode('||P_Post||',2,Nvl(Ias_Post_Dtl.Doc_Post,0),'||P_Post||')
                  And '||WHR||'
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'
                  Into bl_amt ;	    
    	Else -- Balance (2)

    	    If  P_Fd Is Not Null and P_td Is Not Null Then --(3)
	    
            Execute Immediate
            	'Select sum(DECODE('||P_REP_LOC||',1,Decode(A_CY,'''||P_loc_cur||''',nvl(j_amt,0),nvl(j_amt_f,0)* nvl(AC_rate,1))
                                              ,Decode(A_CY,'''||P_loc_cur||''',nvl(j_amt,0),nvl(j_amt_f,0))))
    	         From open_bal
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'    
                Into op_amt ;
            Execute Immediate
            	'Selectsum(DECODE('||P_REP_LOC||',1,NVL(AMT,0)
                                                  ,Decode(A_CY,'''||P_loc_cur||''',nvl(amt,0),nvl(amt_f,0))))
    	         From Ias_Post_Dtl
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And Ias_Post_Dtl.doc_type<>0
                  And Ias_Post_Dtl.doc_date between '''||P_Fd||''' and '''||P_Td||'''
                  And Nvl(Ias_Post_Dtl.Doc_Post,0)=Decode('||P_Post||',2,Nvl(Ias_Post_Dtl.Doc_Post,0),'||P_Post||')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'    
                 Into bl_amt ; 
	  
    	    ElsIf P_Fd Is Null Then --(3)
	                  
                Execute Immediate
                	'Select  sum(DECODE('||P_REP_LOC||',1,Decode(A_CY,'''||P_loc_cur||''',nvl(j_amt,0),nvl(j_amt_f,0)* nvl(AC_rate,1))
                                              ,Decode(A_CY,'''||P_loc_cur||''',nvl(j_amt,0),nvl(j_amt_f,0))))
        	         From open_bal
        	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'   
                    Into op_amt ;

            Execute Immediate
            	'Select sum(DECODE('||P_REP_LOC||',1,NVL(AMT,0)
                                                  ,Decode(A_CY,'''||P_loc_cur||''',nvl(amt,0),nvl(amt_f,0))))
    	         From Ias_Post_Dtl
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And Ias_Post_Dtl.doc_type<>0
                  And Ias_Post_Dtl.doc_date <= Decode('''||P_Td||''',null,Ias_Post_Dtl.doc_date,'''||P_Td||''')
                  And Nvl(Ias_Post_Dtl.Doc_Post,0)=Decode('||P_Post||',2,Nvl(Ias_Post_Dtl.Doc_Post,0),'||P_Post||')
                  And '||WHR||'
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'         
                 Into bl_amt ;    
	    
    	    End If; --(3)
    	End if; --(2)

    Else --(1)	--=================== Local amt Only =======================================
  
      If P_bal_type = 0  Then -- Open_bal (2)

            Execute Immediate  --nvl(sum(j_amt),0)
            	'Select  nvl(sum(j_amt),0)
    	         From open_bal
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'
                Into op_amt ;
  
             Execute Immediate   --nvl(sum(amt),0)
            	'Select nvl(sum(amt),0) 
    	         From Ias_Post_Dtl
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And Ias_Post_Dtl.doc_type<>0
                  And Ias_Post_Dtl.doc_date < '''||P_Fd||'''
                  And Nvl(Ias_Post_Dtl.Doc_Post,0)=Decode('||P_Post||',2,Nvl(Ias_Post_Dtl.Doc_Post,0),'||P_Post||')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'   
                Into bl_amt ;
      Else -- Balance (2)

    	    If  P_Fd Is Not Null and P_td Is Not Null Then --(3)
	    
            Execute Immediate
            	'Select nvl(sum(j_amt),0) 
    	         From open_bal
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'        
                Into op_amt ;
	          
            Execute Immediate
            	'Select nvl(sum(amt),0) 
    	         From Ias_Post_Dtl
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And Ias_Post_Dtl.doc_type<>0
                  And Ias_Post_Dtl.doc_date between '''||P_Fd||''' and '''||P_Td||'''
                  And Nvl(Ias_Post_Dtl.Doc_Post,0)=Decode('||P_Post||',2,Nvl(Ias_Post_Dtl.Doc_Post,0),'||P_Post||')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')' 
                 Into bl_amt ; 

	  
    	    ElsIf P_Fd Is Null Then --(3)
	           
                Execute Immediate
                	'Select nvl(sum(j_amt),0)
        	         From open_bal
        	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'    
                    Into op_amt ;

            Execute Immediate
            	'Select nvl(sum(amt),0)
    	         From Ias_Post_Dtl
    	        where decode('||P_REP_LOC||',1,'''||P_loc_cur||''', a_cy) =decode('||P_REP_LOC||',1,'''||P_loc_cur||''','''||P_acy||''')
                  And Ias_Post_Dtl.doc_type<>0
                  And Ias_Post_Dtl.doc_date <= Decode('''||P_Td||''',null,Ias_Post_Dtl.doc_date,'''||P_Td||''')
                  And Nvl(Ias_Post_Dtl.Doc_Post,0)=Decode('||P_Post||',2,Nvl(Ias_Post_Dtl.Doc_Post,0),'||P_Post||')
                  And '||WHR||' 
                  and nvl('||V_GRP2||',''0'') =  Decode(nvl('||V_GRP2||',''0''),''0'',''0'','''||P_GRP_V2||''') 
                  and nvl('||V_GRP3||',''0'') =  Decode(nvl('||V_GRP3||',''0''),''0'',''0'','''||P_GRP_V3||''')
                  and nvl('||V_GRP4||',''0'') =  Decode(nvl('||V_GRP4||',''0''),''0'',''0'','''||P_GRP_V4||''')'
                 Into bl_amt ;  
	    
    	    End If; --(3)
    	End if; --(2)
    End if; --(1)*/

Return(nvl(op_amt,0)+nvl(bl_amt,0));

Exception When others then
Return(0);
End GET_OPN_BAL_Fnc;
/
CREATE FUNCTION Get_op_amt( P_a_code In ACCOUNT.A_CODE%TYPE,
                                                  P_acy    In VARCHAR2  ) RETURN NUMBER IS
 amt Number:=0;
 Cnt Number :=0;
BEGIN
   Select Count(1) Cnt , nvl(sum(j_amt),0) 
     Into cnt , amt 
     From open_bal
    where a_code=P_a_code
      and a_cy  =P_acy;
 Return(amt);
Exception 
 When others then
  Return(0);
End;
/
CREATE FUNCTION Get_Op_Amtf( P_a_code In ACCOUNT.A_CODE%TYPE,
                                                   P_acy    In VARCHAR2  ) RETURN NUMBER IS
 amt Number:=0;
 Cnt Number :=0;
BEGIN
   select Count(1) Cnt ,nvl(sum(j_amt_f),0)
     into cnt ,amt 
     From open_bal
    where a_code=P_a_code
      and a_cy=P_acy;
  return(amt);
 Exception 
  When others then
   Return(0);
End;
/
CREATE FUNCTION GET_ORDR_NUMERIC_FNC(P_Src_Str In Varchar2) Return Number Is 
Begin
Return To_Number (Regexp_Replace(Nvl(P_Src_Str,'0'),'\D+',''));
Exception When Others Then
Return 0;
END GET_ORDR_NUMERIC_FNC;
/
CREATE Function Get_Out_Bill_Qty ( P_Icode         In Ias_Itm_Mst.I_Code%Type,
                                                         P_Wcode         In Warehouse_Details.W_Code%Type   Default Null,
                                                         P_Expdate       In Date     Default Null,
                                                         P_Batchno       In Varchar2 Default Null,
                                                         P_Use_Out_Bills In Number,
                                                         P_Typ           In Number) Return Number Is   
    V_Qty Number:=0 ;
 Begin
    -- P_Typ = 1= Out Bill , 2= Return Bill
    If P_Use_Out_Bills=1 Then
        If P_Typ = 1  Then  -- out_bills            
            Begin
              Select Sum(((Nvl(I_Qty,0)-Nvl(Out_Qty,0))+(Nvl(Free_Qty,0)-Nvl(Out_Free_Qty,0)))*Nvl(P_Size,1)) 
                Into V_Qty 
                   From Ias_V_Bill_Dtl_Out
                  Where I_Code=P_Icode
                    And W_Code=P_Wcode
                    And Expire_Date=Nvl(P_Expdate,Expire_Date)
                    And Batch_No=Nvl(P_Batchno,Batch_No);
            Exception When Others Then
             V_Qty:=0;
            End;
         Elsif P_Typ=2 Then   
            Begin
              Select Sum(((Nvl(I_Qty,0)-Nvl(Ret_Qty,0))+(Nvl(Free_Qty,0)-Nvl(Ret_Free_Qty,0)))*Nvl(P_Size,1)) 
                Into V_Qty 
                   From Ias_V_Rt_Bill_Dtl_Out
                  Where I_Code = P_Icode
                    And W_Code = P_Wcode
                    And Expire_Date=Nvl(P_Expdate,Expire_Date)
                    And Batch_No=Nvl(P_Batchno,Batch_No);
            Exception When Others Then
             V_Qty:=0;
            End;
          End If;              
    Else
        V_Qty:=0;
    End If; 
    
    Return( V_Qty);
    
 Exception
   When Others Then
     Return(0);
 End;
/
CREATE Function Get_Para_Rep(   P_Doc_TYPE  In  Number  Default Null,
                                                    P_Jv_TYPE   In  Number  Default Null,
                                                    P_Doc_No    In  Number  Default Null,
                                                    P_Doc_Ser   In  Number  Default Null,
                                                    P_Usr_Nm    In  VarChar2,
                                                    v_show_hdr  In  Number  ,
                                                    Brn_No      In  Number  ,
                                                    P_REP_NM    In  VarChar2 Default Null) RETURN VarChar2 IS
P_Usr_No    Number;
V_Rep_Nm    Varchar2(2000);
v_Head_Type Number;
Str         varchar2(2000);
CNT         Number;
CmpAName    Varchar2(100);
CmpEName    Varchar2(100);
BAName      Varchar2(100);
BEAdd       Varchar2(100);
BAdd        Varchar2(100);
BEName      Varchar2(100);
BTele       Varchar2(40);
BFax        Varchar2(40);
BBox        Varchar2(40);
BETele      Varchar2(40);
BEFax       Varchar2(40);
BEBox       Varchar2(40);
BImg        Varchar2(30);
VwRep       Number:=0;
Prnt        Number:=0;
c_pl_name 	constant varchar2(20) := 'TempData';
v_Synchrons varchar2(50):='SYNCHRONOUS';
BEGIN
    If P_REP_NM Is Null Then  -- P_REP_NM  --
        /*BEGIN
            Select Doc_Type ,Doc_No,Jv_Type Into P_Doc_Type ,P_Doc_No,P_Jv_Type
                From Ias_Post_Mst
                    Where Doc_Ser=P_DOC_SER And RowNum<=1 ;
        Exception When Others Then
            P_Usr_No:=1;
        END ;*/
        BEGIN
            Select U_ID Into P_Usr_No
                From User_r
                    Where U_A_Name=P_Usr_Nm Or U_E_Name=P_Usr_Nm ;
        Exception When Others Then
            P_Usr_No:=1;
        END ;

        BEGIN
            Select nvl(Head_type,1) Into v_Head_Type
              From Ias_Para_Gen;
         Exception When Others Then 
           v_Head_Type:=1;
        END;
        Begin
            Select nvl(VwRep_flag,0),nvl(Print_flag,0)  Into VwRep,Prnt
                From Privilege 
                    Where U_id=P_Usr_No
                      And Form_no=Decode(P_DOC_TYPE,
                                  1 ,20 ,
                                  2 ,23 ,
                                  3 ,21 ,
                                  4 ,158,
                                  5 ,160,
                                  6 ,130,
                                  7 ,133,
                                  8 ,226,
                                  9 ,227,
                                  10,229,
                                  11,228,
                                  12,235,
                                  13,159,
                                  14,161,
                                  17,233,
                                  18,234)                                      
                      And RowNum<=1;
        Exception When others then
            VwRep:=0;
            Prnt:=0;
        End; 
        Begin
            Select Decode(P_DOC_TYPE,
                          1 ,'report=IAS_Jrnl_V_All_Dtl     P_Whr=" and Master_Journal_v.J_ser      ='||P_DOC_SER||'"' ,
                          2 ,'report=IAS_PymntRcpt_Dtl      P_Whr=" and vouchers.V_ser              ='||P_DOC_SER||'"' ,
                          3 ,'report=IAS_PymntRcpt_Dtl      P_Whr=" and vouchers.V_ser              ='||P_DOC_SER||'"' ,
                          4 ,'report=IAS_prd_det            P_Whr=" and Ias_Bill_Mst.Bill_ser       ='||P_DOC_SER||'"' ,
                          5 ,'report=IAS_sri_prd_det        P_Whr=" and Ias_Rt_Bill_Mst.Rt_Bill_ser ='||P_DOC_SER||'"' ,
                          6 ,'report=IAS_pi_prd_det         P_Whr=" and Ias_Pi_Bill_Mst.Bill_ser    ='||P_DOC_SER||'"' ,
                          7 ,'report=IAS_pri_prd_det        P_Whr=" and Ias_Pr_Bill_Mst.Rt_Bill_ser ='||P_DOC_SER||'"' ,
                          8 ,'report=IAS_Inc_scr            P_Whr=" and Gr_Note.G_ser               ='||P_DOC_SER||'"' ,
                          9 ,'report=IAS_out_scr            P_Whr=" and IAS_OUTGOING_MST.Out_Ser    ='||P_DOC_SER||'"' ,
                          10,Decode(P_JV_TYPE,1 
                            ,'report=IAS_stk_adjust_qty     P_Whr=" and Stk_Adjustment.Doc_ser      ='||P_DOC_SER||'"' 
                            ,'report=IAS_stk_adjust         P_Whr=" and Stk_Adjustment.Doc_ser      ='||P_DOC_SER||'"' ),
                          11,'report=IAS_Transfer_Out       P_Whr=" and IAS_WHTRNS_MST.Tr_ser       ='||P_DOC_SER||'"' ,
                          12,'report=IAS_Rec_Transfer       P_Whr=" and IAS_WHTRNS_MST.Tr_ser       ='||P_DOC_SER||'"' ,
                          13,'report=Ias_out_bills_det      P_Whr=" and Master_out_bills.Out_ser    ='||P_DOC_SER||'"' ,
                          14,'report=Ias_ret_rt_bills_det   P_Whr=" and Ias_ret_bill_Mst.Ret_ser    ='||P_DOC_SER||'"' ,
                          17,'report=ias_out_kit_scr_hcost  P_Whr=" and assemble_kit_items.Doc_Ser  ='||P_DOC_SER||'"' ,
                          18,'ias_out_kit_d_scr_hcost       P_Whr=" and disassemble_kit_items.Doc_Ser='||P_DOC_SER||'"' )                                      
                      Into V_REP_NM From Dual;
        Exception When others then
            VwRep:=0;
            Prnt:=0;
        End; 
    Else
        V_Rep_Nm:=P_Rep_Nm;    
    End If;  -- P_REP_NM --
    
    If v_show_hdr = 1 Then
        If v_Head_Type = 1 Then
            Begin
                Select BRN_LName  ,BRN_FName,BRN_LDES, BRN_FDES,BRN_LAdd,BRN_FAdd,
                    BRN_LTele,BRN_LFax,BRN_LBox,BRN_FTele,BRN_FFax,BRN_FBox,CMP_IMG
                Into CmpAName,CmpEName,BAName   ,BEName   ,BAdd ,BEAdd  ,
                    BTele ,BFax ,BBox, BETele ,BEFax ,BEBox, BIMG
                From S_Brn 
                    Where Brn_No=BRN_No;
            Exception When others then
                null;
            End; 
        Else
            Begin
                Select CMP_ANAME  ,CMP_ENAME,BRN_ADES, BRN_EDES,BRN_AADD,BRN_EADD,
                    BRN_ATELE,BRN_AFAX,BRN_ABOX,BRN_ETELE,BRN_EFAX,BRN_EBOX,CMP_IMG 
                Into CmpAName,CmpEName,BAName   ,BEName   ,BAdd ,BEAdd  ,
                    BTele ,BFax ,BBox, BETele ,BEFax ,BEBox, BIMG
                From IAS_USER_HEAD
                    Where U_id=P_Usr_No;
                       	  
            Exception  
                When others then
                Begin
                    Select BRN_LName  ,BRN_FName,BRN_LDES, BRN_FDES,BRN_LAdd,BRN_FAdd,
                        BRN_LTele,BRN_LFax,BRN_LBox,BRN_FTele,BRN_FFax,BRN_FBox,CMP_IMG
                    Into CmpAName,CmpEName,BAName   ,BEName   ,BAdd ,BEAdd  ,
                        BTele ,BFax ,BBox,BETele ,BEFax ,BEBox, BIMG
                    From S_Brn 
                        Where Brn_No=BRN_No;
                Exception When others then
                    null;
                End; 
            End; 
        End if;
        CmpANAME:=replace(CmpANAME,'''','''''');
        CmpENAME:=replace(CmpENAME,'''','''''');
        BANAME  :=replace(BANAME,'''','''''');
        BENAME  :=replace(BENAME,'''','''''');
        BADD    :=replace(BADD,'''','''''');
        BEADD   :=replace(BEADD,'''','''''');
        BTELE   :=replace(BTELE,'''','''''');
        BFAX    :=replace(BFAX,'''','''''');
        BBOX    :=replace(BBOX,'''','''''');
        BETELE  :=replace(BETELE,'''','''''');
        BEFAX   :=replace(BEFAX,'''','''''');
        BEBOX   :=replace(BEBOX,'''','''''');
        BIMG    :=replace(BIMG,'''','''''');
    End If;
    Str:=
        ' B_TELE="'||BTELE||'"'||'
        B_FAX="'||BFAX||'"'||'
        B_BOX="'||BBOX||'"'||'
        B_ADD="'||BADD||'"'||'
        B_E_ADD="'||BEADD||'"'||'
        BRN_ADES="'||BANAME||'"'||'
        BRN_EDES="'||BENAME||'"'||'
        B_NAME="'||CmpANAME||'"'||'
        B_E_NAME="'||CmpENAME||'"'||'
        B_E_TELE="'||BETELE||'"'||'
        B_E_FAX="'||BEFAX||'"'||'
        B_E_BOX="'||BEBOX||'"'||'
        BIMG="'||BIMG||'"'||'
        MAXIMIZE="'||'NO'||'"'||'
        PRINTJOB="'||'YES'||'"'||'
        PARAMFORM="'||'NO'||'"'||'
        P_Usr_Nm="'||P_Usr_Nm||'"'||'
        p_show_hdr="'||v_show_hdr||'"';
    If Prnt = 0 Then 
        STR:=STR||' DISABLEFILE="'||'YES'||'"'||'
        DISABLEPRINT="'||'YES'||'"'||'
        DISABLEMAIL="'||'YES'||'"';
    End If;
    If Prnt = 0 And VwRep = 0 And P_REP_NM Is Null Then
        Return('NOT');
    ElsIf V_REP_NM Is Not Null Then
        Return(V_REP_NM||STR);  
    Else
        Return(Null);
    End If;                                          
  
End Get_Para_Rep;
/
CREATE FUNCTION Get_Per_Sales_Inc_Icode_Prc ( P_Icode    Varchar2  ,			                          
                                  			                            P_FDate     Date     ,
        			                                                      P_TDate     Date     ,
                                                                    P_Whr_Batch Varchar2 ,
                                                                    P_Pos_Sys   NUMBER   ) RETURN NUMBER IS
  ---------------------------------------------------------------
  V_Qty         Number:=0 ;
  V_Rt_Qty      Number:=0 ;
  V_Pos_Qty     Number:=0 ;
  V_Pos_Rt_Qty  Number:=0 ;
  V_Inc_Qty     Number:=0 ;
  V_Per_Qty     Number:=0 ;
  ----------------------------------------
  V_Sql               Varchar2(5000):=Null;
  V_Sql_Pos           Varchar2(5000):=Null;    
  b                   Boolean; 
  ----------------------------------------      
  V_Whr_Conn          Varchar2(1000);
  ----------------------------------------
BEGIN  
--##--------------------------------------------------------------------------------------##--
	 V_Sql    := 'Select Nvl(Sum(Nvl(Ias_Bill_Dtl.P_Qty,0)+(Nvl(Ias_Bill_Dtl.Free_Qty,0)*Nvl(P_Size,1))),0) 
                          From Ias_Bill_Mst,Ias_Bill_Dtl
                         Where Ias_Bill_Mst.Bill_Ser = Ias_Bill_Dtl.Bill_Ser           
                           And Ias_Bill_Dtl.I_Code   = '''||P_Icode||'''                
                           And Bill_Date Between     '''||P_FDate||''' And '''||P_TDate||''''||P_Whr_Batch;
    V_Sql_Pos := 'Select Nvl(Sum(Nvl(Ias_Pos_Bill_Dtl.P_Qty,0)),0) 
                          From Ias_Pos_Bill_Mst,Ias_Pos_Bill_Dtl
                         Where Ias_Pos_Bill_Mst.Bill_No = Ias_Pos_Bill_Dtl.Bill_No
                           And Ias_Pos_Bill_Dtl.I_Code  = '''||P_Icode||'''                
                           And Bill_Date Between     '''||P_FDate||''' And '''||P_TDate||'''
                           And Nvl(Ias_Pos_Bill_Mst.Posted,0)= 0 '||P_Whr_Batch;
   --------------------------------------------------------------------------------------  
     V_Qty    := Ias_Gen_Pkg.Get_Cnt(V_Sql);
     V_Rt_Qty := Ias_Gen_Pkg.Get_Cnt(Replace(V_Sql,'Bill','Rt_Bill'));
     
     --------------------------------------------------------------------------------------
     If P_Pos_Sys =1 Then           
           V_Pos_Qty    := Ias_Gen_Pkg.Get_Cnt(V_Sql_Pos);           
           V_Pos_Rt_Qty := Ias_Gen_Pkg.Get_Cnt(Replace(V_Sql_Pos,'Bill','Rt_Bill'));
     End If;
--##--------------------------------------------------------------------------------------##--           
   V_Inc_Qty    := Ias_Gen_Pkg.Get_Cnt('Select Nvl(Sum((Nvl(P_Qty,0)+Nvl(Pf_Qty,0))*In_Out),0) 
                                                                          From Item_Movement
                                                                         Where I_Code   = '''||P_Icode||'''                
                                                                           And I_Date Between     '''||P_FDate||''' And '''||P_TDate||'''
                                                                           And Doc_Type Not In (1,3,7,8)'||P_Whr_Batch);                                        
--##--------------------------------------------------------------------------------------##--         
  If Nvl(V_Inc_Qty,0)>0 Then
     V_Per_Qty := Round((((Nvl(V_Qty,0)+Nvl(V_Pos_Qty,0))-(Nvl(V_Rt_Qty,0)+Nvl(V_Pos_Rt_Qty,0)))/Nvl(V_Inc_Qty,0))*100,2);
  Else
     V_Per_Qty := 0;
  End If;   
--##--------------------------------------------------------------------------------------##--  
  Return (V_Per_Qty);
  Exception When Others Then
      Return (0);
--##--------------------------------------------------------------------------------------##--       
 END Get_Per_Sales_Inc_Icode_Prc;
/
CREATE Function Get_Post_Code_Inv ( 
																			P_Type      In Number                                                          ,
                                      P_I_Code   In Ias_Itm_Mst.I_Code%Type             Default Null ,
                                      P_W_Code In Warehouse_Details.W_Code%Type Default Null  ) Return Varchar2  Is 
   V_Post_Code  Varchar2(10) ; 
Begin

  If P_Type = 1  Then  -- Item Group
     Begin
      Select G_Code 
        Into V_Post_Code 
       From Ias_Itm_Mst 
        Where I_Code = P_I_Code 
           and RowNum<=1;
     Exception  When Others Then
       V_Post_Code  := Null ;
     End ;
  Elsif P_Type = 2  Then -- Warehouse Group
     Begin
      Select Whg_Code 
        Into V_Post_Code 
       From Warehouse_Details 
        Where W_Code = P_W_Code 
           and RowNum<=1;
     Exception When Others Then
       V_Post_Code  := Null ;
     End ;    
  End If ;
  Return(V_POST_CODE);
End Get_Post_Code_Inv ;
/
CREATE FUNCTION GET_PO_ORDR_QTY_FNCC(P_Icode   In   Ias_Itm_Mst.I_Code%Type,
                             P_Psize   In   Number,
                             P_Prcss   In   Number   Default 1, --# 0 Open Order 1 Closed Order
                             P_Wcode   In   Warehouse_Details.W_Code%Type   Default Null,  
                             P_WHG_Code In   Warehouse_Details.WHG_Code%Type   Default Null,                         
                             P_date    In   Date     Default Null,
                             P_Dmy_Slct_W_Code VARCHAR2 Default Null,
                             P_Qry_Typ In Number Default 1
                             ) RETURN NUMBER IS
   V_Ordr_Qty   Number:=0;
   V_Bill_Qty   Number:=0;
   V_date       date   ;
Begin
  
--=======================================================
  If Nvl(P_Qry_Typ,1)=1 Then  
      Begin
           Select (Nvl(Sum(P_Qty),0) /Nvl( P_Psize,1))+Nvl(Sum(Free_Qty),0)/Nvl( P_Psize,1)              
             Into V_Ordr_Qty 
             From P_Order,P_Order_Detail 
               Where P_Order.Po_Ser = P_Order_Detail.Po_Ser
                 And To_Char(Po_Date,'DD/MM/YYYY') <= P_date                
                 And I_Code=P_Icode  
                 And  Nvl(Po_Processed,0) = Nvl(P_Prcss,1)  
                 And  Nvl(Canceled,0)     = 0 
                 And  Nvl(Approved,0)     = 1                                 
                 And ','||Nvl(P_Dmy_Slct_W_Code,Nvl(P_Wcode,P_Order_Detail.W_Code))||',' Like '%,'||P_Order_Detail.W_Code||',%'                 
                 And Exists(Select 1 From warehouse_details Where P_Order_Detail.w_code = warehouse_details.w_code
                                                                                     And  Whg_Code =Nvl(P_WHG_Code,WHG_Code) 
                                                                                   And  RowNum <=1 )  ;          
       Exception When  Others  Then
            V_Ordr_Qty:=0;
       End;  
       
       Begin
           Select  Nvl(Sum(d.P_Qty)/Nvl(P_Psize,1),0)+Nvl(Sum(d.Free_Qty*D.P_SIZE),0)/Nvl( P_Psize,1)
             Into V_Bill_Qty 
             From IAS_PI_BILL_MST M,IAS_PI_BILL_DTL  D
               Where M.BILL_Ser = D.BILL_Ser
                And Bill_Date <= P_date               
                 And d.I_Code=P_Icode                                                     
                 And  Nvl(m.PUR_TYPE,0) = 2   
                 and d.PO_ORDER_SER is null
                 and d.DOC_SEQUENCE is null                                              
                 And ','||Nvl(P_Dmy_Slct_W_Code,Nvl(P_Wcode,d.W_Code))||',' Like '%,'||d.W_Code||',%'                 
                 And Exists(Select 1 From warehouse_details Where d.w_code = warehouse_details.w_code
                                                                                     And  Whg_Code =Nvl(P_WHG_Code,WHG_Code) 
                                                                                   And  RowNum <=1 ) ;         
       Exception When  Others  Then
            V_Bill_Qty:=0;
       End; 
  Else
     --##--------------------------------------------------------------------------------------------------##--    
     --## Get Sum(Qty) Open Purchase In Road
       Begin
            Select  (Nvl(Sum(P_Qty),0)/ Nvl(P_Psize,1))+Nvl(Sum(Free_Qty),0) - (Nvl(Sum(Pi_Qty),0)+Nvl(Sum(Pi_Free_Qty),0))
             Into V_Ordr_Qty 
              From P_Order ,P_Order_Detail 
               Where P_Order.Po_Ser                 = P_Order_Detail.Po_Ser
                And Po_Date <= P_date               
                And  P_Order_Detail.I_Code          = P_Icode                  
                And  Nvl(P_Order_Detail.Canceled,0) = 0
                And  Nvl(P_Order.Approved,0)        = 1               
                And ','||Nvl(P_Dmy_Slct_W_Code,Nvl(P_Wcode,P_Order_Detail.W_Code))||',' Like '%,'||P_Order_Detail.W_Code||',%'                 
               And Exists(Select 1 From warehouse_details Where P_Order_Detail.w_code = warehouse_details.w_code
                                                                                     And  Whg_Code =Nvl(P_WHG_Code,WHG_Code) 
                                                                                   And  RowNum <=1 )           
                Group By P_Order_Detail.I_Code ;
       Exception When Others Then
               V_Ordr_Qty := 0 ;
       End ;
       Begin--##read qty for  bill forign  not install from po and not calc  
           Select  Nvl(Sum(d.P_Qty)/Nvl(P_Psize,1),0)+Nvl(Sum(d.Free_Qty*D.P_SIZE),0)/Nvl( P_Psize,1)
             Into V_Bill_Qty 
             From IAS_PI_BILL_MST M,IAS_PI_BILL_DTL  D
               Where M.BILL_Ser = D.BILL_Ser
                And Bill_Date <= P_date               
                 And d.I_Code=P_Icode                                                     
                 And  Nvl(m.PUR_TYPE,0) = 2                                 
                 and d.PO_ORDER_SER is null
                 and d.DOC_SEQUENCE is null                 
                 And ','||Nvl(P_Dmy_Slct_W_Code,Nvl(P_Wcode,d.W_Code))||',' Like '%,'||d.W_Code||',%'                 
                 And Exists(Select 1 From warehouse_details Where d.w_code = warehouse_details.w_code
                                                                                     And  Whg_Code =Nvl(P_WHG_Code,WHG_Code) 
                                                                                   And  RowNum <=1 ) ;          
       Exception When  Others  Then
            V_Bill_Qty:=0;
       End; 
  End If;
    V_Ordr_Qty:=nvl(V_Ordr_Qty,0)+Nvl(V_Bill_Qty,0);
   Return (Nvl(V_Ordr_Qty,0));
Exception  When Others  Then
    V_Ordr_Qty:=0;
     Return (Nvl(V_Ordr_Qty,0));
END GET_PO_ORDR_QTY_FNCC;
/
CREATE FUNCTION Get_Pri_Cost ( P_Wtavg_Type In  NUMBER,
                                                     P_Icode      In  Ias_Itm_Mst.I_CODE%TYPE,
																									   P_Wcode      In  WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NULL,
																									   P_Date       In  DATE     DEFAULT NULL,
																									   P_isfd       In  NUMBER   DEFAULT 0 ) 
																									   RETURN NUMBER IS

v_pricost  NUMBER;
v_fd       DATE;

BEGIN
   If P_Date Is Null Then    --  to_date parameter is not sent   ,so  return i_cwtavg
      
      Begin
	      If P_Wtavg_Type = 1 Then -- By Item
		      
		      Select nvl(i_cwtavg,0)
		        Into v_pricost
		        From Ias_Itm_Mst
		       Where I_Code = P_Icode;
	      
	      ElsIf P_Wtavg_Type In (2,3) Then  -- By Item + Wcode Or By Item + Whgcode
	      
		      Select nvl(i_cwtavg,0)
		        Into v_pricost
		        From Ias_Itm_Wcode
		       Where I_Code   = P_Icode
		         And Itm_Unt  = Ias_Itm_Pkg.Get_Icode_Min_Unit  (P_I_Code => P_Icode )
		         And W_code   = P_Wcode  ;
	      End If;
       Exception
         When Others Then
           Raise_Application_Error(-20002,'Error When Updating i_cwtavg For i_code = '||P_Icode||chr(13)||SqlErrm) ;		    
      End;
       
--===========================   to_date  Is  Sent    so check  parameter is_fd
   Elsif P_isfd = 1  Then      -- select first date of periods
   
      Select Min (f_date)
        Into v_fd
        From S_PRD_DTL;

      If P_Date = v_fd   Then      --  P_Date=first date ,so operator   is   (<=)
         If P_Wtavg_Type = 1 Then -- By Item
		         BEGIN
		            Select nvl(gd.wt_avg_after,0)
		              Into v_pricost
		              From gr_detail gd
		             Where gd.I_Code   = P_Icode
		               and gd.gr_date  = P_Date
		               and gd.rec_no =
		                      (Select Max (rec_no)
		                         From gr_detail gd
		                        Where gd.I_Code   = P_Icode
		                          and gd.gr_date  = P_Date
		                          and gd.pi_type  = 0);
		         EXCEPTION
		            WHEN OTHERS THEN
		               RETURN (0);
		         END;
         ElsIf P_Wtavg_Type = 2 Then -- By Item + W_Code
		         BEGIN
		            Select nvl(gd.wt_avg_after,0)
		              Into v_pricost
		              From gr_detail gd
		             Where gd.I_Code   = P_Icode
		               and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
		               and gd.gr_date  = P_Date
		               and gd.rec_no =
		                      (Select Max (rec_no)
		                         From gr_detail gd
		                        Where gd.I_Code   = P_Icode
		                          and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
		                          and gd.gr_date  = P_Date
		                          and gd.pi_type  = 0);
		         EXCEPTION
		            WHEN OTHERS THEN
		               RETURN (0);
		         END;
         ElsIf P_Wtavg_Type = 3 Then -- By Item + Whg_Code
		         BEGIN
		            Select nvl(gd.wt_avg_after,0)
		              Into v_pricost
		              From gr_detail gd
		             Where gd.I_Code   = P_Icode
		             --and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
		               and gd.whg_code = Decode(P_Wtavg_Type,3,Ias_Wcode_Pkg.Get_Whg_Code(P_Wcode),gd.whg_code)
		               and gd.gr_date  = P_Date
		               and gd.rec_no =
		                      (Select Max (rec_no)
		                         From gr_detail gd
		                        Where gd.I_Code   = P_Icode
		                        --and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
		                          and gd.whg_code = Decode(P_Wtavg_Type,3,Ias_Wcode_Pkg.Get_Whg_Code(P_Wcode),gd.whg_code)
		                          and gd.gr_date  = P_Date
		                          and gd.pi_type  = 0);
		         EXCEPTION
		            WHEN OTHERS THEN
		               RETURN (0);
		         END;
         End If ;
      Else
         --  P_Date=first date ,so operator   is   (<)
         If  P_Wtavg_Type = 1 Then -- By Item
		         BEGIN
		            Select nvl(gd.wt_avg_after,0)
		              INTO v_pricost
		              From gr_detail gd
		             Where gd.I_Code   = P_Icode
		               and gd.gr_date  < P_Date
		               and gd.rec_no   =
		                      (Select MAX (rec_no)
		                         From gr_detail gd
		                        Where gd.I_Code   = P_Icode
		                          and gd.gr_date  < P_Date);
		         EXCEPTION
		            WHEN OTHERS THEN
		               RETURN (0);
		         END;
         ElsIf P_Wtavg_Type = 2 Then -- By Item + W_Code
		         BEGIN
		            Select nvl(gd.wt_avg_after,0)
		              INTO v_pricost
		              From gr_detail gd
		             Where gd.I_Code   = P_Icode
		               and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
		               and gd.gr_date  < P_Date
		               and gd.rec_no   =
		                      (Select MAX (rec_no)
		                         From gr_detail gd
		                        Where gd.I_Code   = P_Icode
		                          and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
		                          and gd.gr_date  < P_Date);
		         EXCEPTION
		            WHEN OTHERS THEN
		               RETURN (0);
		         END;
         ElsIf P_Wtavg_Type = 3 Then -- By Item + Whg_Code
		         BEGIN
		            Select nvl(gd.wt_avg_after,0)
		              INTO v_pricost
		              From gr_detail gd
		             Where gd.I_Code   = P_Icode
		             --and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
		               and gd.whg_code = Decode(P_Wtavg_Type,3,Ias_Wcode_Pkg.Get_Whg_Code(P_Wcode),gd.whg_code)
		               and gd.gr_date  < P_Date
		               and gd.rec_no   =
		                      (Select MAX (rec_no)
		                         From gr_detail gd
		                        Where gd.I_Code   = P_Icode
		                        --and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
		                          and gd.whg_code = Decode(P_Wtavg_Type,3,Ias_Wcode_Pkg.Get_Whg_Code(P_Wcode),gd.whg_code)
		                          and gd.gr_date  < P_Date);
		         EXCEPTION
		            WHEN OTHERS THEN
		               RETURN (0);
		         END;
         End If ;
      END IF;
   Elsif P_isfd = 0  Then
         If   P_Wtavg_Type = 1 Then -- By Item
				      BEGIN
				         Select nvl(gd.wt_avg_after,0)
				           INTO v_pricost
				           From gr_detail gd
				          Where gd.I_Code   = P_Icode
				            and gd.gr_date <= P_Date
				            and gd.rec_no =
				                   (Select MAX (rec_no)
				                      From gr_detail gd
				                     Where gd.I_Code   = P_Icode
				                       and gd.gr_date <= P_Date);
				      EXCEPTION
				         WHEN OTHERS
				         THEN
				            RETURN (0);
				      END;
         ElsIf  P_Wtavg_Type = 2 Then -- By Item + W_Code 
				      BEGIN
				         Select nvl(gd.wt_avg_after,0)
				           INTO v_pricost
				           From gr_detail gd
				          Where gd.I_Code   = P_Icode
				            and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
				            and gd.gr_date <= P_Date
				            and gd.rec_no =
				                   (Select MAX (rec_no)
				                      From gr_detail gd
				                     Where gd.I_Code   = P_Icode
				                       and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
				                       and gd.gr_date <= P_Date);
				      EXCEPTION
				         WHEN OTHERS
				         THEN
				            RETURN (0);
				      END;         
         ElsIf  P_Wtavg_Type = 3 Then -- By Item + Whg_Code 
				      BEGIN
				         Select nvl(gd.wt_avg_after,0)
				           INTO v_pricost
				           From gr_detail gd
				          Where gd.I_Code   = P_Icode
				          --and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
				            and gd.whg_code = Decode(P_Wtavg_Type,3,Ias_Wcode_Pkg.Get_Whg_Code(P_Wcode),gd.whg_code)
				            and gd.gr_date <= P_Date
				            and gd.rec_no =
				                   (Select MAX (rec_no)
				                      From gr_detail gd
				                     Where gd.I_Code   = P_Icode
				                     --and gd.w_code   = Decode(P_Wtavg_Type,1,gd.w_code,P_Wcode)
				                       and gd.whg_code = Decode(P_Wtavg_Type,3,Ias_Wcode_Pkg.Get_Whg_Code(P_Wcode),gd.whg_code)
				                       and gd.gr_date <= P_Date);
				      EXCEPTION
				         WHEN OTHERS
				         THEN
				            RETURN (0);
				      END;
         End If ;
   End If;
   
   RETURN (v_pricost);
 EXCEPTION
   WHEN OTHERS THEN
     RETURN (SQLCODE);
END Get_Pri_Cost;
/
CREATE FUNCTION Get_Pri_Cost_Fifo (pcode    Ias_Itm_Mst.I_CODE%TYPE   ,
                                                         fd       Date       ,
                    	 			                             frst_fd  Date  ,
                                                         wcode    WAREHOUSE_DETAILS.W_CODE%TYPE Default Null  )Return Number Is
     pricost   Number :=0;
     opcost    Number :=0 ;
     wh        Number ;
  Begin
     IF fd =frst_fd Then
          IF  wcode Is Null  Then
                     Begin
                       Select Sum((((Nvl(p_qty,0)+Nvl(pf_qty,0))*Nvl(stk_cost,0))/Nvl(p_size,1))*in_out)/sum((Nvl(p_qty,0)+Nvl(pf_qty,0))*in_out)
                         Into opcost
                         From item_movement
                        Where I_Code = pcode
			                    And item_movement.doc_type =0 ;
                       Exception
                          When Others        Then
                           Return (0);
                      End;

 
          Else
                   Begin
                      Select Sum((((Nvl(p_qty,0)+Nvl(pf_qty,0))*Nvl(stk_cost,0))/Nvl(p_size,1))*in_out)/sum((Nvl(p_qty,0)+Nvl(pf_qty,0))*in_out)
                       Into opcost 
                       From Item_Movement
                      Where I_Code = pcode
		                    And item_movement.doc_type =0
                        And w_code=wcode;
                     Exception   When Others  Then
                       Return (0);
                  End;

          End If ;
  End IF  ;
  IF fd  <> frst_fd Then
        IF  wcode Is Null Then
                    Begin
                         Select Sum((((Nvl(p_qty,0)+Nvl(pf_qty,0))*Nvl(stk_cost,0))/Nvl(p_size,1))*in_out)/sum((Nvl(p_qty,0)+Nvl(pf_qty,0))*in_out)
                           Into pricost
                           From item_movement
                          Where I_Code = pcode
                            And i_date <fd ;
                       Exception
                          When Others        Then
                           Return (0);
                      End;
         Else
                    Begin
                         Select Sum((((Nvl(p_qty,0)+Nvl(pf_qty,0))*Nvl(stk_cost,0))/Nvl(p_size,1))*in_out)/sum((Nvl(p_qty,0)+Nvl(pf_qty,0))*in_out)
                           Into pricost 
                           From item_movement
                          Where I_Code = pcode
                            And i_date <fd
                            And w_code = wcode;
                       Exception
                          When Others        Then
                           Return (0);
                      End;

         End If;
      End if ;
       Return (NVl(pricost,0)+Nvl(opcost,0));
	Exception
	   When Others   Then
	     Return (SqlCode);
End Get_Pri_Cost_Fifo;
/
CREATE FUNCTION Get_Rplc_Spc_Txt_Fnc ( P_Src_Str IN   VARCHAR2 ) RETURN VARCHAR2 IS  
BEGIN 
    RETURN(Regexp_Replace( P_Src_Str,'[[:space:]]{2,}|[[:cntrl:]]',' '));
EXCEPTION WHEN OTHERS THEN
    RETURN P_Src_Str;   
END Get_Rplc_Spc_Txt_Fnc;
/
CREATE Function Get_Rt_Amt_Fnc  ( P_Doc_Type      IN NUMBER,
		                                                        P_Doc_Ser       IN NUMBER,
		                                                        P_Local_Amt_Flg IN NUMBER,
		                                                        P_Cc_Code       IN VARCHAR2 DEFAULT NULL,
		                                                        P_Pj_No         IN VARCHAR2 DEFAULT NULL,
	                                                          P_Actv_No       IN VARCHAR2 DEFAULT NULL,
                                                            P_Use_Cc_Typ    IN NUMBER,
                                                            P_Use_Pj_Typ    IN NUMBER, 
                                                            P_Use_Actv_Typ  IN NUMBER) RETURN NUMBER IS
		  V_Rt_Bill_Amt  Number:=0;
		  V_Whr          Varchar2(3000);
		BEGIN
		  If P_Doc_Type=4 And Nvl(P_Use_Cc_Typ,0)<>2 And Nvl(P_Use_Pj_Typ,0)<>2 And Nvl(P_Use_Actv_Typ,0)<>2 Then
		     -------------------------------------------------------------------
		     If P_Cc_Code Is Not Null Then
		       V_Whr := V_Whr ||' And Nvl(D.Cc_Code,''0'')='''||P_Cc_Code||'''';
		     End If;
		     -------------------------------------------------------------------
		     If P_Pj_No Is Not Null Then
		       V_Whr := V_Whr ||' And Nvl(D.Pj_No,''0'')='''||P_Pj_No||'''';
		     End If;
		     -------------------------------------------------------------------
		     If P_Actv_No Is Not Null Then
		       V_Whr := V_Whr ||' And Nvl(D.Actv_No,''0'')='''||P_Actv_No||'''';
		     End If;
		     -------------------------------------------------------------------
	     V_Rt_Bill_Amt := Ias_Gen_Pkg.Get_Cnt('Select Nvl(Sum((Nvl(D.I_Qty,0) *(Nvl(D.I_Price,0)-Nvl(D.Dis_Amt,0)+Nvl(D.Vat_Amt,0)+Nvl(D.Othr_Amt,0))) * Decode('||P_Local_Amt_Flg||',1,Nvl(M.Rt_Bill_Rate,1),1)),0)
		                                            From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Dtl D  
		                                           Where M.Rt_Bill_Ser = D.Rt_Bill_Ser
		                                             And M.Rt_Bill_Doc_Type=4
		                                             And M.P_Year In (0,3) 
		                                             And D.Bill_Ser='||P_Doc_Ser||V_Whr);
		  End If;
		  Return(V_Rt_Bill_Amt);
		Exception When Others Then
		    Return(0);
		END Get_Rt_Amt_Fnc;
/
CREATE FUNCTION Get_Sk ( Sk1 Number, Ex Number) Return Number Is
 Cp Number(30,4);
Begin
 
 Cp:=Round(Sk1 * Ex,4);
 
 Return(Cp);
 
 Exception 
  When Others Then
   Return(0);
End;
/
CREATE Function Get_Tr_Not_Rec_Qty ( P_Icode   In Ias_Itm_Mst.I_Code%Type,
								                                             P_Psize    In Number,  
								                                             P_Doc_Date In Date Default Null) Return Number Is
   
    V_Qty Number:=0 ;
 Begin
    Select Sum(Round ((Nvl(Ias_Whtrns_Dtl.P_Qty,0)/Nvl(P_Psize,1)),4)) Into V_Qty
    From Ias_Whtrns_Mst,Ias_Whtrns_Dtl
    Where Ias_Whtrns_Mst.Tr_Ser  = Ias_Whtrns_Dtl.Tr_Ser
    And Ias_Whtrns_Mst.Tr_Inout_Type = 1
    And Ias_Whtrns_Mst.Tr_Date <= P_Doc_Date
    And Ias_Whtrns_Dtl.I_Code = P_Icode
    And Nvl(Ias_Whtrns_Mst.Processed,0)= 0;
    
    Return( V_Qty);
    
 Exception
   When Others Then
     Return(0);
 End;
/
CREATE FUNCTION Get_Tr_Qty_Fnc (P_Bill_Ser In Number,P_I_Code In Ias_Itm_Mst.I_Code%Type,P_W_Code In Warehouse_Details.W_Code%Type,P_Batch_No In Gr_Detail.Batch_No%Type,P_Expire_Date In Gr_Detail.Expire_Date%Type) RETURN NUMBER IS
  V_Tr_Qty Number;
BEGIN
       Select Nvl(Sum(I_Qty),0) InTo V_Tr_Qty
         From Ias_Whtrns_Dtl
        Where Tr_Inout_Type   = 2
          And I_Code          = P_I_Code
          And W_Code          = P_W_Code
          And Batch_No        = P_Batch_No
          And Expire_Date     = P_Expire_Date
          And (F_Tr_Ser,I_Code,Batch_No,Expire_Date) In ( Select Tr_Ser,I_Code,Batch_No,Expire_Date
                                                                                              From Ias_Whtrns_Dtl
                                                                                             Where Tr_Inout_Type   = 1
                                                                                               And Doc_Type_Ref    = 4
                                                                                               And Doc_Ser_Ref<>P_Bill_Ser
                                                                                               And (Doc_Ser_Ref,I_Code,T_W_Code) Not In (Select Bill_Ser,I_Code,W_Code from Detail_Out_Bills));
       Return(V_Tr_Qty);
     Exception When Others Then  
       Return(0);
END;
/
CREATE PACKAGE ADM_INSRT_TRNS_PKG IS
G_CMP_NO      IAS_ARCHIVES_MST.CMP_NO%TYPE; 
G_BRN_NO      IAS_ARCHIVES_MST.BRN_NO%TYPE; 
G_BRN_YEAR    IAS_ARCHIVES_MST.BRN_YEAR%TYPE; 
G_BRN_USR     IAS_ARCHIVES_MST.BRN_USR%TYPE;
G_DOC_NO      IAS_ARCHIVES_MST.DOC_NO%TYPE; 
G_USR_NO      IAS_ARCHIVES_MST.AD_U_ID%TYPE;
G_TRMNL_NM    IAS_ARCHIVES_MST.AD_TRMNL_NM%TYPE; 
G_LNG_NO      NUMBER;
--##-------------------------------------------------------------------------------------------------------------------------##---
PROCEDURE CLR_GLBL_VAR ;
--##-------------------------------------------------------------------------------------------------------------------------##---
PROCEDURE INSRT_IAS_ARCHIVES_MST(P_DOC_DATE                  IN IAS_ARCHIVES_MST.FILE_DATE%TYPE       DEFAULT NULL
                                ,P_DOC_DSC                   IN IAS_ARCHIVES_MST.FILE_DESC%TYPE       DEFAULT NULL
                                ,P_DOC_NOTE                  IN IAS_ARCHIVES_MST.FILE_NOTE%TYPE       DEFAULT NULL
                                ,P_DOC_TYP                   IN IAS_ARCHIVES_MST.DOC_TYPE%TYPE        DEFAULT NULL
                                ,P_DOC_NO                    IN IAS_ARCHIVES_MST.DOC_NO%TYPE          DEFAULT NULL
                                ,P_DOC_SRL                   IN IAS_ARCHIVES_MST.DOC_SER%TYPE         DEFAULT NULL
                                ,P_USR_NO                    IN IAS_ARCHIVES_MST.AD_U_ID%TYPE         DEFAULT NULL
                                ,P_BRN_NO                    IN IAS_ARCHIVES_MST.BRN_NO%TYPE          DEFAULT NULL
                                ,P_BRN_YEAR                  IN IAS_ARCHIVES_MST.BRN_YEAR%TYPE        DEFAULT NULL
                                ,P_TRMNL_NM                  IN IAS_ARCHIVES_MST.AD_TRMNL_NM%TYPE     DEFAULT NULL
                                ,P_LNG_NO                    IN NUMBER                                DEFAULT NULL);
--##-------------------------------------------------------------------------------------------------------------------------##---
PROCEDURE INSRT_IAS_ARCHIVES_DTL( P_FILE_NAME         IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE          DEFAULT NULL );                         
--##-------------------------------------------------------------------------------------------------------------------------##---                 
PROCEDURE INSRT_S_APPROVL_APP_DVC (  P_IMEI                      IN S_APPROVL_APP_DVC.MOBILE_SRL%TYPE          DEFAULT NULL, 
                                     P_SYS_NO                    IN S_APPROVL_APP_DVC.SYS_NO%TYPE          DEFAULT NULL,
                                     P_MOD_ID                    IN S_APPROVL_APP_DVC.MOD_ID%TYPE          DEFAULT NULL,
                                     P_USR_TYP                   IN S_APPROVL_APP_DVC.USR_TYP%TYPE          DEFAULT NULL,
                                     P_U_ID                      IN S_APPROVL_APP_DVC.U_ID%TYPE          DEFAULT NULL,
                                     P_EMP_NO                    IN S_APPROVL_APP_DVC.EMP_NO%TYPE          DEFAULT NULL,
                                     P_C_CODE                    IN S_APPROVL_APP_DVC.C_CODE%TYPE          DEFAULT NULL,
                                     P_MOBILE_OS                 IN S_APPROVL_APP_DVC.MOBILE_OS%TYPE          DEFAULT NULL,
                                     P_TRMNL_NM                  IN S_APPROVL_APP_DVC.AD_TRMNL_NM%TYPE     DEFAULT NULL,
                                     P_BRN_YEAR                  IN S_APPROVL_APP_DVC.BRN_YEAR%TYPE     DEFAULT NULL,
                                     P_LNG_NO                    IN NUMBER  DEFAULT NULL);
--##-------------------------------------------------------------------------------------------------------------------------##---
END ADM_INSRT_TRNS_PKG;
/
CREATE Package Aps_Auto_Sync_Pkg As
--##------------------------------------------------------------------------------------------------------------------------------##--
Function  Get_Auto_Xml_Pr  (P_Pr_Ser  In P_Request.Pr_Ser%Type ) Return Varchar2 ;
--##------------------------------------------------------------------------------------------------------------------------------##--
Function  Chk_Lgn_Web_Pr   (P_Url  In Varchar2 ,P_V_Content In Varchar2 ) Return Varchar;                                      
--##------------------------------------------------------------------------------------------------------------------------------##--
Function  Insrt_Web_Srvc_Pr(P_Url  In Varchar2 ,P_V_Content In Varchar2  ) Return Varchar ;
--##------------------------------------------------------------------------------------------------------------------------------##--
Procedure Json_View_Pr     (P_V_Content In Varchar2) ;
--##------------------------------------------------------------------------------------------------------------------------------##--
Function  Rplc_Xml_Spc     ( P_Src_Str In   Varchar2 ) Return Varchar2 ; 
--##------------------------------------------------------------------------------------------------------------------------------##--
End Aps_Auto_Sync_Pkg;
/
CREATE Package ARS_API_CHK_PKG
Is
--##-----------------------------------------------------------------------------------------------------##--                                                                 
   Type Tp_Qt_Prm_Rec   Is Record
          (  Qt_Prm_Type              Number,
             Qt_Prm_Method            Number,
             Qt_Prm_Itm_Type          Number, 
             Qt_No                    Number,
             Qt_Ser                   Number,
             Qt_Icode                 Varchar2(30),
             Qt_Itm_Unt               Varchar2(10),
             Qt_Rcrd_No               Number,
             Dis_Per                  Number,
             Dis_Amt                  Number,
             Price                    Number,                              
             Fqty                     Number,
             Card_Amt                 Number,
             Qt_Rem_Qty               Number,                              
             Apprvd_Freeqty_As_Dscnt  Number                                  
           );                               
--##---------------------------------------------------------------------------------##--             
   Type Tp_Qt_Prm_Rfc Is Ref Cursor ;               
--##---------------------------------------------------------------------------------##--
   G_Qt_Prm  Tp_Qt_Prm_Rec ;                          
--##---------------------------------------------------------------------------------##--                        
   Type Tp_Qt_Prm_Tbl   Is Table Of Tp_Qt_Prm_Rec ;
--##-----------------------------------------------------------------------------------------------------##-- 
Function Get_Qt_Prm  (   P_Date                    In  Date,
                          P_Bill_Ser                In  Number,
                          P_A_Cy                    In  Varchar2,
                          P_Icode                   In  Varchar2,
                          P_ItmUnt                  In  Varchar2,
                          P_Wcode                   In  Number,
                          P_Batch_No                In  Varchar2,
                          P_Exp_Date                In  Date,
                          P_Iqty                    In  Number,
                          P_P_Size                  In  Number,
                          P_Qt_Free_Qty             In  Number,
                          P_Qt_Dis_Per              In  Number,
                          P_Qt_Dis_Amt_Dtl          In  Number,
                          P_Rcrd_No                 In  Number,
                          P_IPrice                  In  Number,
                          P_Bill_Amt                In  Number,
                          P_Bill_Rate               In  Number,
                          P_Bill_Doc_Type           In  Number Default Null ,
                          P_C_Code                  In  Varchar2,
                          P_C_Group_Code            In  Number,
                          P_C_Class                 In  Number, 
                          P_C_Degree                In  Number,
                          P_C_Code_Csh              In  Varchar2,
                          P_Doc_Seq_Tmp             In  Number,
                          P_No_Of_Dcml              In  Number,
                          P_Usr_No                  In  Number)  Return Tp_Qt_Prm_Tbl Pipelined;
--##-----------------------------------------------------------------------------------------------------##---  
Function  Chk_Qt_Prm(P_I_Code       In Ias_Itm_Mst.I_Code%Type,
                     P_Bill_Doc_Typ In Number,
                     P_Doc_Date     In Date) Return Number; 
--##-----------------------------------------------------------------------------------------------------##---  
  Procedure Updt_Bill_Disc_Prc ( P_Doc_Typ             In     Number
                                ,P_Pst_Typ             In     Number
                                ,P_Doc_Ser             In     Number
                                ,P_Use_Vat             In     Number Default Null
                                ,P_Clc_Vat_Price_Typ   In     Number Default Null
                                ,P_Clc_Typ_No_Tax      In     Number Default Null
                                ,P_Fld_Doc_Ser         In     Varchar2                                
                                ,P_Tbl_Mvmnt_Nm        In     Varchar2
                                ,P_Tbl_Mst_Nm          In     Varchar2
                                ,P_Tbl_Dtl_Nm          In     Varchar2
                                ,P_Fld_MST_AMT         In     Varchar2
                                ,P_Lng_No              In     Number Default 1
                                ,P_Msg_Txt             Out Varchar2
                                ,P_ERR_NO            Out Varchar2
                                ,P_Pkg_Nm              Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
    Procedure Chk_Conn_Cst_Col (P_C_Code     In     Customer.C_Code%Type Default Null
                              ,P_Col_No     In     Collerctor.Col_No%Type Default Null
                              ,P_Lng_No     In     Number Default 1
                              ,P_Msg_Txt    Out Varchar2
                              ,P_ERR_NO   Out Varchar2
                              ,P_Pkg_Nm     Out Varchar2);
--##-----------------------------------------------------------------------------------------------------##-- 
Procedure   Chk_Sman_Conn_Data (P_Sys_No           In     Number
                                ,P_Rep_Code        In     Sales_Man.Reprs_Code%Type Default Null
                                ,P_Bill_Doc_Type   In     Number Default Null
                                ,P_W_Code          In     Number Default Null
                                ,P_Cash_No         In     Number Default Null
                                ,P_Cc_Code         In     Varchar2 Default Null
                                ,P_Pj_No           In     Varchar2 Default Null
                                ,P_Actv_No         In     Varchar2 Default Null
                                ,P_Lng_No          In     Number Default 1
                                ,P_Msg_Txt         Out Varchar2
                                ,P_ERR_NO        Out Varchar2
                                ,P_Pkg_NM          Out Varchar2) ;
--##-----------------------------------------------------------------------------------------------------##-- 
Procedure Chk_Cr_Card_Prc (P_Bill_Doc_Type          In     Ias_Bill_Mst.Bill_Doc_Type%Type
                          ,P_Crdno                  In     Number
                          ,P_W_Code                 In     Ias_Bill_Mst.W_Code%Type
                          ,P_Cur_Code               In     Ex_Rate.Cur_Code%Type
                          ,P_Cr_Card_No             In     Ias_Bill_Mst.Cr_Card_No%Type
                          ,P_Cr_Card_Amt            In     Ias_Bill_Mst.Cr_Card_Amt%Type
                          ,P_Credit_Card            In Out Ias_Bill_Mst.Credit_Card%Type
                          ,P_Cr_A_Code              In Out Account.A_Code%Type
                          ,P_Cr_Card_Comm_Per       In Out Ias_Bill_Mst.Cr_Card_Comm_Per%Type                        
                          ,P_Cr_Card_Max_Comm_Amt   In Out Ias_Bill_Mst.Cr_Card_Max_Comm_Amt%Type                          
                          ,P_Online                 In     Number Default 1
                          ,P_Lng_No                 In     Number Default 1
                          ,P_Msg_Txt                   Out Varchar2
                          ,P_Err_No                    Out Varchar2
                          ,P_Pkg_Nm                    Out Varchar2);
--##-----------------------------------------------------------------------------------------------------##--                           
Procedure  Chk_Amt_And_Itm_Tax( P_Clc_Typ_No_Tax   In     Gnr_Tax_Itm_Movmnt.Clc_Typ_No%Type Default Null,
                                P_Calc_Vat_Amt_Type IN    NUMBER Default 1  ,
                                P_Doc_Typ          In     Gnr_Tax_Itm_Movmnt.Doc_Type%Type
                                P_Doc_No           In     Gnr_Tax_Itm_Movmnt.Doc_No%Type,
                                P_Doc_Ser          In     Gnr_Tax_Itm_Movmnt.Doc_Ser%Type,
                                P_Fld_Doc_No       In     Varchar2,
                                P_Fld_Doc_Ser      In     Varchar2,
                                P_Fld_MST_AMT      In     Varchar2,
                                P_Tbl_Mvmnt_Nm     In     Varchar2,
                                P_Tbl_Mst_Nm       In     Varchar2,
                                P_Tbl_Dtl_Nm       In     Varchar2,                                
                                P_No_Of_Decimal    In     Number ,
                                P_DOC_AMT_XML      OUT    CLOB,
                                P_Lng_No           In     Number Default 1,
                                P_Msg_Txt          Out Varchar2,
                                P_ERR_NO         Out Varchar2,
                                P_Pkg_Nm           Out Varchar2);
--##-----------------------------------------------------------------------------------------------------##--
Procedure CHK_MNDTRY_FLIDS (P_Doc_Typ           IN  IAS_POST_DTL.DOC_TYPE%TYPE,
                            P_REP_CODE          IN  SALES_MAN.REPRS_CODE %Type  Default Null,
                            P_DOC_Desc          IN  IAS_POST_DTL.DOC_DESC %Type Default Null, 
                            P_REF_NO            IN  Varchar2                    Default Null,
                            P_C_Code            IN  CUSTOMER.C_CODE %Type       Default Null,
                            P_Bill_Doc_Type     IN  CUSTOMER.C_CODE %Type       Default Null,
                            P_Lng_No            In     Number Default 1,
                            P_Msg_Txt           Out Varchar2,
                            P_ERR_NO          Out Varchar2,
                            P_Pkg_Nm            Out Varchar2      ); 
--##-----------------------------------------------------------------------------------------------------##--
Procedure Chk_Credit_Period (   P_CHK_CRDT_PRD    In     Number   --## 0-UNCHECK Credit_Period 1-CHECK_Credit_Period
                               ,P_C_Code          In     Customer.C_Code%Type
                               ,P_Doc_Ser         In     Ias_Post_Mst.Doc_Ser%Type Default Null
                               ,P_Doc_Date        In     Ias_Bill_Mst.Bill_Date%Type Default Null
                               ,P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type
                               ,P_Stand_By        In     Ias_Bill_Mst.Stand_By%Type Default 0
                               ,P_Usr_No          In     User_R.U_Id%Type
                               ,P_Lng_No          In     Number Default 1
                               ,P_Msg_No          Out Number);
--##-----------------------------------------------------------------------------------------------------##-- 
Procedure Chk_Credit_Limit (   P_Chk_CrDT_LMIT  In    NUMBER --## 0 UNCHECKCredit_Limit  1- CHECK Credit_Limit 
                              ,P_Doc_Date       In    Ias_Bill_Mst.Bill_Date%Type Default Null
                              ,P_Doc_Ser        In    Ias_Bill_Mst.BILL_Ser%Type
                              ,P_Bill_Doc_Type  In    Ias_Bill_Mst.BILL_Ser%Type                            
                              ,P_Ac_Code        In    Account.A_Code%Type Default Null
                              ,P_Ac_Code_Dtl    In    Ias_Bill_Mst.Ac_Code_Dtl%Type Default Null
                              ,P_C_CODE         In     Ias_Bill_Mst.C_CODE%Type Default Null
                              ,P_Cash_No        In     Ias_Bill_Mst.Cash_No%Type Default Null                              
                              ,P_Brn_No         In     Ias_Bill_Mst.Brn_No%Type Default Null
                              ,P_User_No        In     User_R.U_Id%Type Default Null
                              ,P_Cur_Code       In     Ias_Bill_Mst.Bill_Currency%Type Default Null
                              ,P_CUR_RATE       In     NUMBER
                              ,P_Frc_No         In     Number Default 2
                              ,P_Stand_By       In     Number Default 0                              
                              ,P_Fld_Doc_Ser    In     Varchar2
                              ,P_Fld_MST_AMT    In     Varchar2
                              ,P_Tbl_Mst_Nm     In     Varchar2
                              ,P_Lng_No         In     Number Default 1
                              ,P_Msg_Txt        OUT  Varchar2
                              ,P_ERR_NO         Out Varchar2
                              ,P_Pkg_Nm         Out Varchar2);
--##-----------------------------------------------------------------------------------------------------##--
Procedure Update_Other_Charges (P_Doc_Typ          In     Number
                               ,P_Doc_Ser          In     Number
                               ,P_Clc_Typ_No_Tax   In     Number
                               ,P_No_Of_Decimal    In     Number
                               ,P_Lng_No           In     Number Default 1
                               ,P_Msg_Txt             Out Varchar2
                               ,P_Err_No              Out Varchar2
                               ,P_Pkg_Nm              Out Varchar2) ;
--##-----------------------------------------------------------------------------------------------------##--
END ARS_API_CHK_PKG;
/
CREATE Package Ars_Api_Trns_Pkg
Is
   G_Lng_No                      Ias_Sys.Lang_Def.Lang_No%Type;
   G_Sys_No                      Number;
   G_Lng_Dflt                    Ias_Sys.Lang_Def.Lang_Dflt%Type;
   G_Usr_No                      User_R.U_Id%Type;
   G_Loc_Cur_Code                Ex_Rate.Cur_Code%Type;
   G_Cur_Code                    Ex_Rate.Cur_Code%Type;
   G_Cur_Rate                    Ex_Rate.Cur_Rate%Type;
   G_Stk_Cur_Code                Ex_Rate.Cur_Code%Type := Ias_Gen_Pkg.Get_Stk_Cur;
   G_Stk_Rate                    Ex_Rate.Cur_Rate%Type := Ias_Gen_Pkg.Get_Cur_Rate (P_Acy => G_Stk_Cur_Code);
   G_Brn_Usr                     Ias_Post_Mst.Brn_Usr%Type;
   G_Brn_Year                    Ias_Post_Mst.Brn_Year%Type;
   G_Brn_No                      Ias_Post_Mst.Brn_No%Type;
   G_Cmp_No                      Ias_Post_Mst.Cmp_No%Type;
   G_Doc_Typ                     Ias_Post_Mst.Doc_Type%Type;
   G_Doc_Ser                     Ias_Post_Mst.Doc_Ser%Type;
   G_Doc_No                      Ias_Post_Mst.Doc_No%Type;
   G_Tax_No                      Gnr_Tax_Code_Mst.Tax_No%Type;
   G_Bill_Doc_Type               Ias_Bill_Mst.Bill_Doc_Type%Type;
   G_Rt_Bill_Doc_Type            Ias_Rt_Bill_Mst.Rt_Bill_Doc_Type%Type;
   G_P_Year                      Ias_Rt_Bill_Mst.P_Year%Type;
   G_Clc_Typ_No_Tax              Gnr_Tax_Typ_Clc_Mst.Clc_Typ_No%Type;
   G_Calc_Vat_Amt_Type           Number (5);
   G_Ad_Date                     Date;
   G_Ad_U_Id                     User_R.U_Id%Type;
   G_Ad_Trmnl_Nm                 Ias_Post_Mst.Ad_Trmnl_Nm%Type;
   G_W_Code                      Warehouse_Details.W_Code%Type;
   G_Doc_Date                    Date;
   G_Jv_Type                     Ias_Post_Mst.Jv_Type%Type;
   G_No_Of_Decimal_Ar            Number (5);
   G_Use_Vat                     Number (1);
   G_Use_Price_Include_Vat       Number (1);
   G_Item_Posting_Flag           Number;
   G_Ar_Wc_Type                  Number (5);
   G_Use_Out_Bills               Number (1);
   G_Add_Porder_Qty              Number (5);
   G_Cc_Avail                    Number (5);
   G_Use_Projects                Number (5);
   G_Use_Actvty                  Number (5);
   G_Aralt                       Number;
   G_Apalt                       Number;
   G_Costing_Type                Number (2);
   G_Wtavg_Type                  Number (2);
   G_Ar_Cst_Type                 Number (5);
   G_Ar_Pj_Type                  Number (5);
   G_Ar_Actv_Type                Number (5);
   G_Ar_Sorder_Serial            Ias_Para_Ar.Ar_Sorder_Serial%Type;
   G_Doc_Gen_Ar                  Ias_Para_Ar.Doc_Gen_Ar%Type;
   G_Disc_Count                  Number (1);
   G_Show_Disc_Per_Items_Ar      Number (1);
   G_Max_Prd_Exp_Date_So_Day     Number (5);
   G_Inv_Use_Wght_Sys            Number (5);
   G_Inv_Msur_Argmnt_Typ         Number (5);
   G_Inv_Argmnt_Fctr             Number (5);
   G_Check_Lmt_Sorder            Number (1);
   G_Max_Prd_Exp_Date_Quot_Day   Number (5);
   G_Inv_Itm_Cst_Typ             Number (5);
   G_Si_Repcode_Mandtry          Number (1);
   G_Stkcost_Fraction            Number (5);
   G_USE_OUT_BILL_DIRECT         Number (5);
   G_Clc_Tax_Dscnt2              Number (5);
   G_Clc_Tax_Dscnt3              Number (5);
   G_P_Rate_Type                 Number (5);
   G_Roi_Type                    Number (5);
   G_Use_Billno_Rtsale_Py          Number (5);
   G_External_Post               Ias_Bill_Mst.External_Post%Type;
   ---G_INV_SHW_ARGMNT_NO_IN_TRNS   NUMBER(5);
   G_Cc_Code                     COST_CENTERS.Cc_Code%Type;
   G_A_Code                      Account.A_Code%Type;
   G_Cash_Ac_Fcc                 Account.A_Code%Type;
   G_Pj_No                       IAS_PROJECTS.Pj_No%Type;
   G_Actv_No                     IAS_ACTVTY.Actv_No%Type;
   G_Apprvd_Flg                  Sales_Order.Approved%Type;
   G_Apprvd_Ser                  S_Apprvd_Mov.Doc_Ser%Type;
   G_Ac_Code_Csh                 Account.A_Code%Type;
   G_Ac_Code_Bnk                 Account.A_Code%Type;
   G_Ac_Code_Cst                 Account.A_Code%Type;
   G_Ac_Code_Vnd                 Account.A_Code%Type;
   G_Ac_Code                     Account.A_Code%Type;
   G_Ac_Code_Dtl                 Account.A_Code%Type;
   G_Ac_Dtl_Typ                  Account.Ac_Dtl_Typ%Type;
   G_C_Code                      Customer.C_Code%Type;
   G_Ref_No                      Ias_Post_Dtl.Ref_No%Type;
   G_Rcrd_No                     Ias_Post_Dtl.Rcrd_No%Type;
   G_Rep_Code                    Sales_Man.Reprs_Code%Type;
   G_Use_Batch_No                Number;
   G_Use_Expire_Date             Number;
   G_Doc_Amt                     Number;
   G_So_Type                     Sales_Order.So_Type%Type;
   G_Clc_Vat_Price_Typ           Sales_Order.Clc_Vat_Price_Typ%Type;
   G_Si_Type                     Ias_Bill_Mst.Si_Type%Type;
   G_Sr_Type                     Ias_Rt_Bill_Mst.Sr_Type%Type;
   --G_ALLW_EXCD_ACCNT_LMT      NUMBER(5);
   G_Inpt_Nm                     Varchar2 (400);
   G_Rsrv_No                     Ias_Reserve_Mst.Doc_No%Type;
   G_Rsrv_Ser                    Ias_Reserve_Mst.Doc_Ser%Type;
   G_R_Code                      Ias_Bill_Mst.R_Code%Type;
   G_Cash_No                     Ias_Bill_Mst.Cash_No%Type;
   G_Bank_No                     Cash_At_Bank.Bank_No%Type;
   G_Emp_No                      Ias_Bill_Mst.Emp_No%Type;
   G_Doc_Dsc                     Ias_Bill_Mst.A_Desc%Type;
   G_Col_No                      Ias_Bill_Mst.Col_No%Type;
   G_Invoicing_Serials           Number;
   G_Invoicing_Serials_Sr        Number;
   G_Pst_Typ                     Number := Null;
   G_Ret_No                      Ias_Rt_Bill_Mst.Rt_Bill_No%Type;
   G_Ret_Ser                     Ias_Rt_Bill_Mst.Rt_Bill_Ser%Type;  
   --G_Srl                         Varchar2 (4000);
   G_CLC_TAX_METHOD               NUMBER(1):=0; 
   G_DOC_AMT_XML                  VARCHAR2(6000);
   G_Pst_FROM_BR                  NUMBER(1);
   G_USE_CLC_TAX_FREE_QTY         NUMBER(1);
   G_CLC_TAX_FREE_QTY_FLG         NUMBER(1);
   G_Out_No                       NUMBER;
   G_Out_SER                      NUMBER;



   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Cst_Rq_Prc (P_Lang_No             In     Number
                              ,P_C_Code              In     Customer.C_Code%Type
                              ,P_C_A_Name            In     Customer.C_A_Name%Type
                              ,P_C_E_Name            In     Customer.C_E_Name%Type Default Null
                              ,P_C_Group_Code        In     Customer.C_Group_Code%Type Default Null
                              ,P_C_Address           In     Customer.C_Address%Type Default Null
                              ,P_C_Class             In     Customer.C_Class%Type Default Null
                              ,P_C_Class_Typ         In     Customer.C_Class_Typ%Type Default Null
                              ,P_Cntry_No            In     Customer.Cntry_No%Type Default Null
                              ,P_Prov_No             In     Customer.Prov_No%Type Default Null
                              ,P_City_No             In     Customer.City_No%Type Default Null
                              ,P_R_Code              In     Customer.R_Code%Type Default Null
                              ,P_Rep_Code            In     Customer.Rep_Code%Type Default Null
                              ,P_Route_No            In     Customer.Route_No%Type Default Null
                              ,P_Sortinroute         In     Customer.Sortinroute%Type Default Null
                              ,P_Gps                 In     Customer.Gps%Type Default Null
                              ,P_C_Phone             In     Customer.C_Phone%Type Default Null
                              ,P_C_Fax               In     Customer.C_Fax%Type Default Null
                              ,P_C_Box               In     Customer.C_Box%Type Default Null
                              ,P_C_Person            In     Customer.C_Person%Type Default Null
                              ,P_C_E_Mail            In     Customer.C_E_Mail%Type Default Null
                              ,P_C_Web_Site          In     Customer.C_Web_Site%Type Default Null
                              ,P_C_Mobile            In     Customer.C_Mobile%Type Default Null
                              ,P_Respons_Person      In     Customer.Respons_Person%Type Default Null
                              ,P_C_Tax_Code          In     Customer.C_Tax_Code%Type Default Null
                              ,P_Clc_Vat_Price_Typ   In     Customer.Clc_Vat_Price_Typ%Type Default Null
                              ,P_Latitude            In     Customer.Latitude%Type Default Null
                              ,P_Longitude           In     Customer.Longitude%Type Default Null
                              ,P_Ad_U_Id             In     Customer.Ad_U_Id%Type
                              ,P_Ad_Trmnl_Nm         In     Customer.Ad_Trmnl_Nm%Type Default Null
                              ,P_Cst_Code               Out Customer.C_Code%Type);

   --##------------------------------------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Cst_Prc (P_Lang_No             In     Number
                           ,P_C_Code              In     Customer.C_Code%Type
                           ,P_C_A_Name            In     Customer.C_A_Name%Type
                           ,P_C_E_Name            In     Customer.C_E_Name%Type Default Null
                           ,P_C_Group_Code        In     Customer.C_Group_Code%Type Default Null
                           ,P_C_Address           In     Customer.C_Address%Type Default Null
                           ,P_C_Class             In     Customer.C_Class%Type Default Null
                           ,P_C_Class_Typ         In     Customer.C_Class_Typ%Type Default Null
                           ,P_Cntry_No            In     Customer.Cntry_No%Type Default Null
                           ,P_Prov_No             In     Customer.Prov_No%Type Default Null
                           ,P_City_No             In     Customer.City_No%Type Default Null
                           ,P_R_Code              In     Customer.R_Code%Type Default Null
                           ,P_Rep_Code            In     Customer.Rep_Code%Type Default Null
                           ,P_Route_No            In     Customer.Route_No%Type Default Null
                           ,P_Sortinroute         In     Customer.Sortinroute%Type Default Null
                           ,P_Gps                 In     Customer.Gps%Type Default Null
                           ,P_C_Phone             In     Customer.C_Phone%Type Default Null
                           ,P_C_Fax               In     Customer.C_Fax%Type Default Null
                           ,P_C_Box               In     Customer.C_Box%Type Default Null
                           ,P_C_Person            In     Customer.C_Person%Type Default Null
                           ,P_C_E_Mail            In     Customer.C_E_Mail%Type Default Null
                           ,P_C_Web_Site          In     Customer.C_Web_Site%Type Default Null
                           ,P_C_Mobile            In     Customer.C_Mobile%Type Default Null
                           ,P_Respons_Person      In     Customer.Respons_Person%Type Default Null
                           ,P_C_Tax_Code          In     Customer.C_Tax_Code%Type Default Null
                           ,P_Clc_Vat_Price_Typ   In     Customer.Clc_Vat_Price_Typ%Type Default Null
                           ,P_Latitude            In     Customer.Latitude%Type Default Null
                           ,P_Longitude           In     Customer.Longitude%Type Default Null
                           ,P_Ad_U_Id             In     Customer.Ad_U_Id%Type
                           ,P_Ad_Trmnl_Nm         In     Customer.Ad_Trmnl_Nm%Type Default Null
                           ,P_Up_U_Id             In     Customer.Up_U_Id%Type Default Null
                           ,P_Up_Trmnl_Nm         In     Customer.Ad_Trmnl_Nm%Type Default Null
                           ,P_Cst_Code               Out Customer.C_Code%Type
                           ,P_Gnrt_Cst_Flg        In     Number Default
                           ,P_Upd_Flg             In     Number Defaultinsert NEW CST_CODE ,--##  0 update customer data
                                                                         );

   --##------------------------------------------------------------------------------------------------------------------------------##--
   Procedure Get_Prmtr_Prc(P_Sys_No       In     Number Default Null,
                            P_Doc_Typ      In     Ias_Post_Mst.Doc_Type%Type Default Null,
                            P_Pst_Typ      In     Number Default Null,
                            P_Cur_Code     In     Ex_Rate.Cur_Code%Type Default Null,
                            P_Cur_Rate     In     Ex_Rate.Cur_Rate%Type Default Null,
                            P_Stock_Rate   In     Ex_Rate.Cur_Rate%Type Default Null,
                            P_Doc_Date     In     IAS_POST_DTL.DOC_DATE%Type Default Null,
                            P_Brn_No       In     S_Brn.Brn_No%Type Default Null,
                            P_Brn_Usr      In     S_Brn.Brn_Usr%Type Default Null,
                            P_Brn_Year     In     S_Brn.Brn_Year%Type Default Null,
                            P_Usr_No       In     User_R.U_Id%Type Default Null,
                            P_CLC_TAX_METHOD   In       NUMBER  ,--## 0 CALC TAX IN EXTRNAL ,1-AOUTO CALC TAX
                            P_Pst_FROM_BR      In       Number,  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR 
                            P_Lng_No       In     Number Default Null,
                            P_Msg_Txt      Out Varchar2,
                            P_ERR_NO       Out Varchar2,
                            P_Pkg_Nm       Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
  Procedure INSRT_DOC_INTO_ONYX(P_Doc_Typ          In Ias_Post_Mst.Doc_Type%Type
                                ,P_COMMIT_FLG       In     NUMBER  --## 0 ROLLBACK ,1 COMMIT ,2 ,MANUAL COMMIT
                                ,P_CLC_TAX_METHOD   In     NUMBER  --## 0 CALC TAX IN EXTRNAL ,1-AOUTO CALC TAX
                                ,P_Lng_No           In     Number Default 1
                                ,P_Xml              In Clob
                                ,P_Json_Rslt        OUT VARCHAR2  ) ;
--##-----------------------------------------------------------------------------------------------------##--
  FUNCTION INSRT_DOC_INTO_BR (   P_Doc_Typ          In Ias_Post_Mst.Doc_Type%Type
                                ,P_COMMIT_FLG       In     NUMBER  --## 0 ROLLBACK ,1 COMMIT ,2 ,MANUAL COMMIT
                                ,P_CLC_TAX_METHOD   In     NUMBER  --## 0 CALC TAX IN EXTRNAL ,1-AOUTO CALC TAX
                                ,P_Lng_No           In     Number Default 1
                                ,P_Xml              In Clob )  return clob;
--##-----------------------------------------------------------------------------------------------------##--                                  
   Procedure INSRT_DOC_BY_XML (P_Doc_Typ          In       Ias_Post_Mst.Doc_Type%Type
                              ,P_Xml              In OUT   Clob
                              ,P_COMMIT_FLG       In       NUMBER  --## 0 ROLLBACK ,1 COMMIT ,2 ,MANUAL COMMIT
                              ,P_CLC_TAX_METHOD   In       NUMBER  --## 0 CALC TAX IN EXTRNAL ,1-AOUTO CALC TAX                                                        
                              ,P_Pst_Typ          In       Number --## 1 to br tables ,2 to onyx tables
                              ,P_Pst_FROM_BR      In       Number  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
                              ,P_Lng_No           In       Number Default 1                          
                              ,P_Msg_Txt          Out   Varchar2
                              ,P_ERR_NO         Out   Varchar2
                              ,P_Pkg_Nm           Out   Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Post_From_Br_Prc (P_Sys_No     In     Number
                              ,P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
                              ,P_Doc_Ser    In  Ias_Post_Mst.Doc_Ser%Type
                              ,P_Lng_No     In     Number Default 1                            
                              ,P_Msg_Txt    Out Varchar2
                              ,P_ERR_NO   Out Varchar2
                              ,P_Pkg_Nm     Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Sales_Order (P_Sys_No              In     Number
                               ,P_Doc_Type            In     Number
                               ,P_Doc_No              In     Sales_Order.Order_No%Type Default Null
                               ,P_Doc_Ser             In     Sales_Order.Order_Ser%Type Default Null
                               ,P_Doc_Date            In     Sales_Order.Order_Date%Type Default Null
                               ,P_Cur_Code            In     Sales_Order.Order_Cur%Type Default Null
                               ,P_Cur_Rate            In     Sales_Order.Cur_Rate%Type Default Null
                               ,P_So_Type             In     Sales_Order.So_Type%Type Default Null
                               ,P_C_Code              In     Sales_Order.C_Code%Type Default Null
                               ,P_C_Name              In     Sales_Order.C_Name%Type Default Null
                               ,P_A_Desc              In     Sales_Order.A_Desc%Type Default Null
                               ,P_Cc_Code             In     Sales_Order.Cc_Code%Type Default Null
                               ,P_Pj_No               In     Sales_Order.Pj_No%Type Default Null
                               ,P_Actv_No             In     Sales_Order.Actv_No%Type Default Null
                               ,P_W_Code              In     Sales_Order.W_Code%Type Default Null
                               ,P_Rep_Code            In     Sales_Order.Rep_Code%Type Default Null
                               ,P_Emp_No              In     Sales_Order.Emp_No%Type Default Null
                               ,P_Vat_Amt             In     Sales_Order.Vat_Amt%Type Default Null
                               ,P_Order_Amt           In     Sales_Order.Order_Amt%Type Default Null
                               ,P_Disc_Amt            In     Sales_Order.Disc_Amt%Type Default Null
                               ,P_Disc_Amt_Dtl        In     Sales_Order.Disc_Amt_Dtl%Type Default Null
                               ,P_Disc_Amt_Mst        In     Sales_Order.Disc_Amt_Mst%Type Default Null
                               ,P_Othr_Amt            In     Sales_Order.Othr_Amt%Type Default Null
                               ,P_Vat_Amt_Othr        In     Sales_Order.Vat_Amt_Othr%Type Default Null
                               ,P_Disc_Amt_Mst_Vat    In     Sales_Order.Disc_Amt_Mst_Vat%Type Default Null
                               ,P_Vat_Amt_Disc_Mst    In     Sales_Order.Vat_Amt_Disc_Mst%Type Default Null
                               ,P_Disc_Amt_Aftr_Vat   In     Sales_Order.Disc_Amt_Aftr_Vat%Type Default Null
                               ,P_Cash_No             In     Sales_Order.Cash_No%Type Default Null
                               ,P_Clc_Typ_No_Tax      In     Sales_Order.Clc_Typ_No_Tax%Type Default Null
                               ,P_Clc_Vat_Price_Typ   In     Sales_Order.Clc_Vat_Price_Typ%Type Default Null
                               ,P_Ref_Doc_No          In     Sales_Order.Ref_Doc_No%Type Default Null
                               ,P_Ref_Doc_Date        In     Sales_Order.Ref_Doc_Date%Type Default Null
                               ,P_Prepare_Date        In     Sales_Order.Prepare_Date%Type Default Null
                               ,P_Rec_Dealer_Date     In     Sales_Order.Rec_Dealer_Date%Type Default Null
                               ,P_Delivery_Date       In     Sales_Order.Delivery_Date%Type Default Null
                               ,P_R_Code              In     Sales_Order.R_Code%Type Default Null
                               ,P_Driver_No           In     Sales_Order.Driver_No%Type Default Null
                               ,P_Bill_Doc_Type       In     Sales_Order.Bill_Doc_Type%Type Default Null
                               ,P_Bill_Due_Date       In     Sales_Order.Bill_Due_Date%Type Default Null
                               ,P_Order_Expire_Date   In     Sales_Order.Order_Expire_Date%Type Default Null
                               ,P_Cheque_Due_Date     In     Sales_Order.Cheque_Due_Date%Type Default Null
                               ,P_C_Code_Csh          In     Sales_Order.C_Code_Csh%Type Default Null
                               ,P_C_Address           In     Sales_Order.C_Address%Type Default Null
                               ,P_C_Mobile            In     Sales_Order.C_Mobile%Type Default Null
                               ,P_Latitude            In     Sales_Order.Latitude%Type Default Null
                               ,P_Longitude           In     Sales_Order.Longitude%Type Default Null
                               ,P_Si_Type             In     Sales_Order.Si_Type%Type Default Null
                               ,P_External_Post       In     Sales_Order.External_Post%Type Default Null
                               ,P_Field1              In     Sales_Order.Field1%Type Default Null
                               ,P_Field2              In     Sales_Order.Field2%Type Default Null
                               ,P_Field3              In     Sales_Order.Field3%Type Default Null
                               ,P_Field4              In     Sales_Order.Field4%Type Default Null
                               ,P_Field5              In     Sales_Order.Field5%Type Default Null
                               ,P_Field6              In     Sales_Order.Field6%Type Default Null
                               ,P_Field7              In     Sales_Order.Field7%Type Default Null
                               ,P_Field8              In     Sales_Order.Field8%Type Default Null
                               ,P_Field9              In     Sales_Order.Field9%Type Default Null
                               ,P_Field10             In     Sales_Order.Field10%Type Default Null
                               ,P_CLC_TAX_FREE_QTY_FLG In     Ias_Bill_Mst.CLC_TAX_FREE_QTY_FLG %Type Default Null
                               ,P_Cmp_No              In     Sales_Order.Cmp_No%Type Default Null
                               ,P_Brn_No              In     Sales_Order.Brn_No%Type Default Null
                               ,P_Brn_Year            In     Sales_Order.Brn_Year%Type Default Null
                               ,P_Brn_Usr             In     Sales_Order.Brn_Usr%Type Default Null
                               ,P_Ad_Trmnl_Nm         In     Sales_Order.Ad_Trmnl_Nm%Type Default Null
                               ,P_Ad_U_Id             In     Sales_Order.Ad_U_Id%Type Default Null
                               ,P_Ad_Date             In     Sales_Order.Ad_Date%Type Default Null
                               ,P_CLC_TAX_METHOD      In     NUMBER  --## 0 CALC TAX IN EXTRNAL ,1-AOUTO CALC TAX
                               ,P_Lng_No              In     Number Default 1
                               ,P_Msg_Txt             Out Varchar2
                               ,P_ERR_NO            Out Varchar2
                               ,P_Pkg_NM               Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Order_Detail (P_I_Code                 In     Order_Detail.I_Code%Type Default Null
                                ,P_Itm_Unt                In     Order_Detail.Itm_Unt%Type Default Null
                                ,P_I_Qty                  In     Order_Detail.I_Qty%Type Default Null
                                ,P_P_Qty                  In     Order_Detail.P_Qty%Type Default Null
                                ,P_P_Size                 In     Order_Detail.P_Size%Type Default Null
                                ,P_Free_Qty               In     Order_Detail.Free_Qty%Type Default Null
                                ,P_Barcode                In     Order_Detail.Barcode%Type Default Null
                                ,P_Batch_No               In     Order_Detail.Batch_No%Type Default Null
                                ,P_Expire_Date            In     Order_Detail.Expire_Date%Type Default Null
                                ,P_W_Code                 In     Order_Detail.W_Code%Type Default Null
                                ,P_Cc_Code                In     Order_Detail.Cc_Code%Type Default Null
                                ,P_Actv_No                In     Order_Detail.Actv_No%Type Default Null
                                ,P_Pj_No                  In     Order_Detail.Pj_No%Type Default Null
                                ,P_I_Price                In     Order_Detail.I_Price%Type Default Null
                                ,P_I_Price_Vat            In     Order_Detail.I_Price_Vat%Type Default Null
                                ,P_Measur_Price           In     Order_Detail.Measur_Price%Type Default Null
                                ,P_Othr_Amt               In     Order_Detail.Othr_Amt%Type Default Null
                                ,P_Othr_Amt_Disc          In     Order_Detail.Othr_Amt_Disc%Type Default Null
                                ,P_Vat_Amt                In     Order_Detail.Vat_Amt%Type Default Null
                                ,P_Vat_Amt_Aftr_Dis       In     Order_Detail.Vat_Amt_Aftr_Dis%Type Default Null
                                ,P_Vat_Amt_Bfr_Dis        In     Order_Detail.Vat_Amt_Bfr_Dis%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl2_Vat   In     Order_Detail.Vat_Amt_Dis_Dtl2_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl3_Vat   In     Order_Detail.Vat_Amt_Dis_Dtl3_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl_Vat    In     Order_Detail.Vat_Amt_Dis_Dtl_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Mst_Vat    In     Order_Detail.Vat_Amt_Dis_Mst_Vat%Type Default Null
                                ,P_Vat_Amt_Othr           In     Order_Detail.Vat_Amt_Othr%Type Default Null
                                ,P_Vat_Per                In     Order_Detail.Vat_Per%Type Default Null
                                ,P_Dis_Amt                In     Order_Detail.Dis_Amt%Type Default Null
                                ,P_Dis_Amt_Aftr_Vat       In     Order_Detail.Dis_Amt_Aftr_Vat%Type Default Null
                                ,P_Dis_Amt_Dtl            In     Order_Detail.Dis_Amt_Dtl%Type Default Null
                                ,P_Dis_Amt_Dtl2           In     Order_Detail.Dis_Amt_Dtl2%Type Default Null
                                ,P_Dis_Amt_Dtl2_Vat       In     Order_Detail.Dis_Amt_Dtl2_Vat%Type Default Null
                                ,P_Dis_Amt_Dtl3           In     Order_Detail.Dis_Amt_Dtl3%Type Default Null
                                ,P_Dis_Amt_Dtl3_Vat       In     Order_Detail.Dis_Amt_Dtl3_Vat%Type Default Null
                                ,P_Dis_Amt_Dtl_Vat        In     Order_Detail.Dis_Amt_Dtl_Vat%Type Default Null
                                ,P_Dis_Amt_Mst            In     Order_Detail.Dis_Amt_Mst%Type Default Null
                                ,P_Dis_Amt_Mst_Vat        In     Order_Detail.Dis_Amt_Mst_Vat%Type Default Null
                                ,P_Dis_Per                In     Order_Detail.Dis_Per%Type Default Null
                                ,P_Dis_Per2               In     Order_Detail.Dis_Per2%Type Default Null
                                ,P_Dis_Per3               In     Order_Detail.Dis_Per3%Type Default Null
                                ,P_Doc_No_Ref             In     Order_Detail.Doc_No_Ref%Type Default Null
                                ,P_Doc_Seq                In OUT     Order_Detail.Doc_Seq%Type 
                                ,P_Doc_Sequence_Ref       In     Order_Detail.Doc_Sequence_Ref%Type Default Null
                                ,P_Doc_Ser_Ref            In     Order_Detail.Doc_Ser_Ref%Type Default Null
                                ,P_Doc_Type_Ref           In     Order_Detail.Doc_Type_Ref%Type Default Null
                                ,P_Emp_No                 In     Order_Detail.Emp_No%Type Default Null
                                ,P_External_Post          In     Order_Detail.External_Post%Type Default Null
                                ,P_Field_Dtl1             In     Order_Detail.Field_Dtl1%Type Default Null
                                ,P_Field_Dtl2             In     Order_Detail.Field_Dtl2%Type Default Null
                                ,P_Field_Dtl3             In     Order_Detail.Field_Dtl3%Type Default Null
                                ,P_F_Time                 In     Order_Detail.F_Time%Type Default Null
                                ,P_T_Time                 In     Order_Detail.T_Time%Type Default Null
                                ,P_Item_Desc              In     Order_Detail.Item_Desc%Type Default Null
                                ,P_I_Width                In     Order_Detail.I_Width%Type Default Null
                                ,P_I_Height               In     Order_Detail.I_Height%Type Default Null
                                ,P_I_Length               In     Order_Detail.I_Length%Type Default Null
                                ,P_I_Number               In     Order_Detail.I_Number%Type Default Null
                                ,P_Argmnt_No              In     Order_Detail.Argmnt_No%Type Default Null
                                ,P_Rcrd_No                In     Order_Detail.Rcrd_No%Type Default Null
                                ,P_Rec_Attch              In     Order_Detail.Rec_Attch%Type Default Null
                                ,P_Reserved               In     Order_Detail.Reserved%Type Default Null
                                ,P_Res_Date               In     Order_Detail.Res_Date%Type Default Null
                                ,P_Res_Qty                In     Order_Detail.Res_Qty%Type Default Null
                                ,P_Lev_No                 In     Order_Detail.Lev_No%Type Default Null
                                ,P_PRM_GRP_NO             In     Order_Detail.PRM_GRP_NO%Type Default Null
                                ,P_QT_PRM_RCRD_NO         In     Order_Detail.QT_PRM_RCRD_NO%Type Default Null
                                ,P_QT_PRM_SER             In     Order_Detail.QT_PRM_SER%Type Default Null
                                ,P_Dis_Amt_Dtl_Qt_Prm     In     Order_Detail.Dis_Amt_Dtl_Qt_Prm%Type Default Null
                                ,P_Dis_Amt_Dtl_Qt_Prm_Vat In     Order_Detail.Dis_Amt_Dtl_Qt_Prm_Vat%Type Default Null
                                ,P_Dis_Per_Qt_Prm         In   Order_Detail.Dis_Per_Qt_Prm%Type Default Null
                                ,P_Msg_Txt                Out Varchar2
                                ,P_ERR_NO               Out Varchar2
                                ,P_Pkg_NM               Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Ias_Bill_Mst (P_Sys_No                       In     Number
                                ,P_Doc_Type                     In     Number
                                ,P_Bill_Doc_Type                In     Ias_Bill_Mst.Bill_Doc_Type%Type Default Null
                                ,P_Doc_No                       In     Ias_Bill_Mst.Bill_No%Type Default Null
                                ,P_Doc_Ser                      In     Ias_Bill_Mst.Bill_Ser%Type Default Null
                                ,P_Doc_Date                     In     Ias_Bill_Mst.Bill_Date%Type Default Null
                                ,P_Cur_Code                     In     Ias_Bill_Mst.Bill_Currency%Type Default Null
                                ,P_Cur_Rate                     In     Ias_Bill_Mst.Bill_Rate%Type Default Null
                                ,P_Stock_Rate                   In     Ias_Bill_Mst.Stock_Rate%Type Default Null
                                ,P_C_Code                       In     Ias_Bill_Mst.C_Code%Type Default Null
                                ,P_C_Name                       In     Ias_Bill_Mst.C_Name%Type Default Null
                                ,P_A_Code                       In     Ias_Bill_Mst.A_Code%Type Default Null
                                ,P_Cheque_No                    In     Ias_Bill_Mst.Cheque_No%Type Default Null
                                ,P_Note_No                      In     Ias_Bill_Mst.Note_No%Type Default Null
                                ,P_Cheque_Due_Date              In     Ias_Bill_Mst.Cheque_Due_Date%Type Default Null
                                ,P_Bill_Due_Date                In     Ias_Bill_Mst.Bill_Due_Date%Type Default Null
                                ,P_W_Code                       In     Ias_Bill_Mst.W_Code%Type Default Null
                                ,P_R_Code                       In     Ias_Bill_Mst.R_Code%Type Default Null
                                ,P_Rep_Code                     In     Ias_Bill_Mst.Rep_Code%Type Default Null
                                ,P_Emp_No                       In     Ias_Bill_Mst.Emp_No%Type Default Null
                                ,P_Ref_No                       In     Ias_Bill_Mst.Ref_No%Type Default Null
                                ,P_Cash_No                      In     Ias_Bill_Mst.Cash_No%Type Default Null
                                ,P_Cc_Code                      In     Ias_Bill_Mst.Cc_Code%Type Default Null
                                ,P_Pj_No                        In     Ias_Bill_Mst.Pj_No%Type Default Null
                                ,P_Actv_No                      In     Ias_Bill_Mst.Actv_No%Type Default Null
                                ,P_Si_Type                      In     Ias_Bill_Mst.Si_Type%Type Default Null
                                ,P_Stand_By                     In     Ias_Bill_Mst.Stand_By%Type Default Null
                                ,P_Col_No                       In     Ias_Bill_Mst.Col_No%Type Default Null
                                ,P_Cash_Ac_Fcc                  In     Ias_Bill_Mst.Cash_Ac_Fcc%Type Default Null
                                ,P_Bank_No                      In     Ias_Bill_Mst.Cash_No_Fcc%Type Default Null
                                ,P_A_Desc                       In     Ias_Bill_Mst.A_Desc%Type Default Null
                                ,P_Bill_Py                      In     Ias_Bill_Mst.Bill_Py%Type Default Null
                                ,P_External_Post                In     Ias_Bill_Mst.External_Post%Type Default Null
                                ,P_Field1                       In     Ias_Bill_Mst.Field1%Type Default Null
                                ,P_Field2                       In     Ias_Bill_Mst.Field2%Type Default Null
                                ,P_Field3                       In     Ias_Bill_Mst.Field3%Type Default Null
                                ,P_Field4                       In     Ias_Bill_Mst.Field4%Type Default Null
                                ,P_Field5                       In     Ias_Bill_Mst.Field5%Type Default Null
                                ,P_Field6                       In     Ias_Bill_Mst.Field6%Type Default Null
                                ,P_Field7                       In     Ias_Bill_Mst.Field7%Type Default Null
                                ,P_Field8                       In     Ias_Bill_Mst.Field8%Type Default Null
                                ,P_Field9                       In     Ias_Bill_Mst.Field9%Type Default Null
                                ,P_Field10                      In     Ias_Bill_Mst.Field10%Type Default Null
                                ,P_C_Tel                        In     Ias_Bill_Mst.C_Tel%Type Default Null
                                ,P_C_Address                    In     Ias_Bill_Mst.C_Address%Type Default Null
                                ,P_Driver_No                    In     Ias_Bill_Mst.Driver_No%Type Default Null
                                ,P_Bill_Valued                  In     Ias_Bill_Mst.Bill_Valued%Type Default Null
                                ,P_Value_Date                   In     Ias_Bill_Mst.Value_Date%Type Default Null
                                ,P_Bill_Without_Auto_Othr_Amt   In     Ias_Bill_Mst.Bill_Without_Auto_Othr_Amt%Type Default Null
                                ,P_Qt_Prm_No                    In     Ias_Bill_Mst.Qt_Prm_No%Type Default Null
                                ,P_Qt_Prm_Ser                   In     Ias_Bill_Mst.Qt_Prm_Ser%Type Default Null
                                ,P_Qt_Prm_Rcrd_No               In     Ias_Bill_Mst.Qt_Prm_Rcrd_No%Type Default Null
                                ,P_Prm_Code                     In     Ias_Bill_Mst.Prm_Code%Type Default Null
                                ,P_Doc_Brn_No                   In     Ias_Bill_Mst.Doc_Brn_No%Type Default Null
                                ,P_Cmpny_No                     In     Ias_Bill_Mst.Cmpny_No%Type Default Null
                                ,P_Mobile_No                    In     Ias_Bill_Mst.Mobile_No%Type Default Null
                                ,P_Not_Use_Qut_Prm              In     Ias_Bill_Mst.Not_Use_Qut_Prm%Type Default Null
                                ,P_Receive_Nm                   In     Ias_Bill_Mst.Receive_Nm%Type Default Null
                                ,P_Conn_Si_With_Outgong         In     Ias_Bill_Mst.Conn_Si_With_Outgong%Type Default Null
                                ,P_C_Code_Csh                   In     Ias_Bill_Mst.C_Code_Csh%Type Default Null
                                ,P_C_Tax_Code                   In     Ias_Bill_Mst.C_Tax_Code%Type Default Null
                                ,P_Prd_No                       In     Ias_Bill_Mst.Prd_No%Type Default Null
                                ,P_Doc_No_Res                   In     Ias_Bill_Mst.Doc_No_Res%Type Default Null
                                ,P_Doc_Srl_Res                  In     Ias_Bill_Mst.Doc_Srl_Res%Type Default Null
                                ,P_Ac_Code                      In     Ias_Bill_Mst.Ac_Code%Type Default Null
                                ,P_Ac_Code_Dtl                  In     Ias_Bill_Mst.Ac_Code_Dtl%Type Default Null
                                ,P_Ac_Dtl_Typ                   In     Ias_Bill_Mst.Ac_Dtl_Typ%Type Default Null
                                ,P_Pymnt_Ac                     In     Ias_Bill_Mst.Pymnt_Ac%Type Default Null
                                ,P_Clc_Typ_No_Tax               In     Ias_Bill_Mst.Clc_Typ_No_Tax%Type Default Null
                                ,P_Doc_Ser_Extrnl               In     Ias_Bill_Mst.Doc_Ser_Extrnl%Type Default Null
                                ,P_Cncl_Flg                     In     Ias_Bill_Mst.Cncl_Flg%Type Default Null
                                ,P_Clc_Vat_Price_Typ            In     Ias_Bill_Mst.Clc_Vat_Price_Typ%Type Default Null
                                ,P_Bill_Amt                     In     Ias_Bill_Mst.Bill_Amt%Type Default Null
                                ,P_Vat_Amt                      In     Ias_Bill_Mst.Vat_Amt%Type Default Null
                                ,P_Disc_Amt_Aftr_Vat            In     Ias_Bill_Mst.Disc_Amt_Aftr_Vat%Type Default Null
                                ,P_Disc_Amt_Mst_Vat             In     Ias_Bill_Mst.Disc_Amt_Mst_Vat%Type Default Null
                                ,P_Vat_Amt_Disc_Mst             In     Ias_Bill_Mst.Vat_Amt_Disc_Mst%Type Default Null
                                ,P_Vat_Amt_Othr                 In     Ias_Bill_Mst.Vat_Amt_Othr%Type Default Null
                                ,P_Othr_Amt                     In     Ias_Bill_Mst.Othr_Amt%Type Default Null
                                ,P_Disc_Amt                     In     Ias_Bill_Mst.Disc_Amt%Type Default Null
                                ,P_Disc_Amt_Mst                 In     Ias_Bill_Mst.Disc_Amt_Mst%Type Default Null
                                ,P_Disc_Amt_Dtl                 In     Ias_Bill_Mst.Disc_Amt_Dtl%Type Default Null
                                ,P_Add_Disc_Amt_Mst             In     Ias_Bill_Mst.Add_Disc_Amt_Mst%Type Default Null
                                ,P_Add_Disc_Amt_Dtl             In     Ias_Bill_Mst.Add_Disc_Amt_Dtl%Type Default Null
                                ,P_Othr_Amt_Disc                In     Ias_Bill_Mst.Othr_Amt_Disc%Type Default Null                               
                                ,P_OUT_BILL_TYP               IN IAS_BILL_MST.OUT_BILL_TYP%TYPE                 DEFAULT NULL
                                ,P_BILL_STAT_TYP              IN IAS_BILL_MST.BILL_STAT_TYP%TYPE                DEFAULT NULL                               
                                ,P_CRD_DISC_PER               IN IAS_BILL_MST.CRD_DISC_PER%TYPE                 DEFAULT NULL
                                ,P_CRD_NO_DISC                IN IAS_BILL_MST.CRD_NO_DISC%TYPE                  DEFAULT NULL
                                ,P_CREDIT_CARD                IN IAS_BILL_MST.CREDIT_CARD%TYPE                  DEFAULT NULL
                                ,P_CR_CARD_AMT                IN IAS_BILL_MST.CR_CARD_AMT%TYPE                  DEFAULT NULL
                                ,P_CR_CARD_AMT_SCND           IN IAS_BILL_MST.CR_CARD_AMT_SCND%TYPE             DEFAULT NULL
                                ,P_CR_CARD_AMT_THRD           IN IAS_BILL_MST.CR_CARD_AMT_THRD%TYPE             DEFAULT NULL
                                ,P_CR_CARD_COMM_PER           IN IAS_BILL_MST.CR_CARD_COMM_PER%TYPE             DEFAULT NULL
                                ,P_CR_CARD_COMM_PER_SCND      IN IAS_BILL_MST.CR_CARD_COMM_PER_SCND%TYPE        DEFAULT NULL
                                ,P_CR_CARD_COMM_PER_THRD      IN IAS_BILL_MST.CR_CARD_COMM_PER_THRD%TYPE        DEFAULT NULL
                                ,P_CR_CARD_CST_NO             IN IAS_BILL_MST.CR_CARD_CST_NO%TYPE               DEFAULT NULL
                                ,P_CR_CARD_CST_NO_SCND        IN IAS_BILL_MST.CR_CARD_CST_NO_SCND%TYPE          DEFAULT NULL
                                ,P_CR_CARD_CST_NO_THRD        IN IAS_BILL_MST.CR_CARD_CST_NO_THRD%TYPE          DEFAULT NULL
                                ,P_CR_CARD_DOC_NO_REF         IN IAS_BILL_MST.CR_CARD_DOC_NO_REF%TYPE           DEFAULT NULL
                                ,P_CR_CARD_DOC_NO_REF_SCND    IN IAS_BILL_MST.CR_CARD_DOC_NO_REF_SCND%TYPE      DEFAULT NULL
                                ,P_CR_CARD_DOC_NO_REF_THRD    IN IAS_BILL_MST.CR_CARD_DOC_NO_REF_THRD%TYPE      DEFAULT NULL
                                ,P_CR_CARD_DSC                IN IAS_BILL_MST.CR_CARD_DSC%TYPE                  DEFAULT NULL
                                ,P_CR_CARD_DSC_SCND           IN IAS_BILL_MST.CR_CARD_DSC_SCND%TYPE             DEFAULT NULL
                                ,P_CR_CARD_DSC_THRD           IN IAS_BILL_MST.CR_CARD_DSC_THRD%TYPE             DEFAULT NULL
                                ,P_CR_CARD_MAX_COMM_AMT       IN IAS_BILL_MST.CR_CARD_MAX_COMM_AMT%TYPE         DEFAULT NULL
                                ,P_CR_CARD_MAX_COMM_AMT_SCND  IN IAS_BILL_MST.CR_CARD_MAX_COMM_AMT_SCND%TYPE    DEFAULT NULL
                                ,P_CR_CARD_MAX_COMM_AMT_THRD  IN IAS_BILL_MST.CR_CARD_MAX_COMM_AMT_THRD%TYPE    DEFAULT NULL
                                ,P_CR_CARD_NO                 IN IAS_BILL_MST.CR_CARD_NO%TYPE                   DEFAULT NULL
                                ,P_CR_CARD_NO_SCND            IN IAS_BILL_MST.CR_CARD_NO_SCND%TYPE              DEFAULT NULL
                                ,P_CR_CARD_NO_THRD            IN IAS_BILL_MST.CR_CARD_NO_THRD%TYPE              DEFAULT NULL
                                ,P_CR_DOC_NO_REF              IN IAS_BILL_MST.CR_DOC_NO_REF%TYPE                DEFAULT NULL
                                ,P_CR_DOC_NO_REF_SCND         IN IAS_BILL_MST.CR_DOC_NO_REF_SCND%TYPE           DEFAULT NULL
                                ,P_CR_DOC_NO_REF_THRD         IN IAS_BILL_MST.CR_DOC_NO_REF_THRD%TYPE           DEFAULT NULL
                                ,P_CR_VALUED                  IN IAS_BILL_MST.CR_VALUED%TYPE                    DEFAULT NULL
                                ,P_CR_VALUED_SCND             IN IAS_BILL_MST.CR_VALUED_SCND%TYPE               DEFAULT NULL
                                ,P_CR_VALUED_THRD             IN IAS_BILL_MST.CR_VALUED_THRD%TYPE               DEFAULT NULL
                                ,P_CR_VALUE_DATE              IN IAS_BILL_MST.CR_VALUE_DATE%TYPE                DEFAULT NULL
                                ,P_CR_VALUE_DATE_SCND         IN IAS_BILL_MST.CR_VALUE_DATE_SCND%TYPE           DEFAULT NULL
                                ,P_CR_VALUE_DATE_THRD         IN IAS_BILL_MST.CR_VALUE_DATE_THRD%TYPE           DEFAULT NULL
                                ,P_Cpn_Amt                      In     Ias_Bill_Mst.Cpn_Amt%Type Default Null
                                ,P_Cheque_Amt                   In     Ias_Bill_Mst.Cheque_Amt%Type Default Null
                                ,P_Prcnt_Amt                    In     Ias_Bill_Mst.Prcnt_Amt%Type Default Null
                                ,P_Ac_Amt                       In     Ias_Bill_Mst.Ac_Amt%Type Default Null
                                ,P_CLC_TAX_FREE_QTY_FLG         In     Ias_Bill_Mst.CLC_TAX_FREE_QTY_FLG %Type Default Null
                                ,P_Cmp_No                       In     Ias_Bill_Mst.Cmp_No%Type Default Null
                                ,P_Brn_No                       In     Ias_Bill_Mst.Brn_No%Type Default Null
                                ,P_Brn_Year                     In     Ias_Bill_Mst.Brn_Year%Type Default Null
                                ,P_Brn_Usr                      In     Ias_Bill_Mst.Brn_Usr%Type Default Null
                                ,P_Ad_U_Id                      In     Ias_Bill_Mst.Ad_U_Id%Type Default Null
                                ,P_Ad_Date                      In     Ias_Bill_Mst.Ad_Date%Type Default Null
                                ,P_Ad_Trmnl_Nm                  In     Ias_Bill_Mst.Ad_Trmnl_Nm%Type Default Null
                                ,P_Pst_Typ                      In     Number Default Nullto br tables ,2 to onyx tables
                                ,P_CLC_TAX_METHOD               In     NUMBER  --## 0 CALC TAX IN EXTRNAL ,1-AOUTO CALC TAX
                                ,P_Pst_FROM_BR                  In     Number  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
                                ,P_Lng_No                       In     Number Default 1
                                ,P_Msg_Txt                      Out Varchar2
                                ,P_ERR_NO                     Out Varchar2
                                ,P_Pkg_NM               Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Ias_Bill_Dtl (P_I_Code                   In     Ias_Bill_Dtl.I_Code%Type Default Null
                                ,P_I_Qty                    In     Ias_Bill_Dtl.I_Qty%Type Default Null
                                ,P_P_Size                   In     Ias_Bill_Dtl.P_Size%Type Default Null
                                ,P_P_Qty                    In     Ias_Bill_Dtl.P_Qty%Type Default Null
                                ,P_I_Price                  In     Ias_Bill_Dtl.I_Price%Type Default Null
                                ,P_I_Price_Vat              In     Ias_Bill_Dtl.I_Price_Vat%Type Default Null
                                ,P_Stk_Cost                 In     Ias_Bill_Dtl.Stk_Cost%Type Default Null
                                ,P_Doc_Sequence             In OUT     Ias_Bill_Dtl.Doc_Sequence%Type 
                                ,P_W_Code                   In     Ias_Bill_Dtl.W_Code%Type Default Null
                                ,P_Cc_Code                  In     Ias_Bill_Dtl.Cc_Code%Type Default Null
                                ,P_Pj_No                    In     Ias_Bill_Dtl.Pj_No%Type Default Null
                                ,P_Actv_No                  In     Ias_Bill_Dtl.Actv_No%Type Default Null
                                ,P_Expire_Date              In     Ias_Bill_Dtl.Expire_Date%Type Default Null
                                ,P_Batch_No                 In     Ias_Bill_Dtl.Batch_No%Type Default Null
                                ,P_Free_Qty                 In     Ias_Bill_Dtl.Free_Qty%Type Default Null
                                ,P_Vat_Per                  In     Ias_Bill_Dtl.Vat_Per%Type Default Null
                                ,P_Vat_Amt                  In     Ias_Bill_Dtl.Vat_Amt%Type Default Null
                                ,P_Othr_Amt                 In     Ias_Bill_Dtl.Othr_Amt%Type Default Null
                                ,P_Item_Desc                In     Ias_Bill_Dtl.Item_Desc%Type Default Null
                                ,P_Barcode                  In     Ias_Bill_Dtl.Barcode%Type Default Null
                                ,P_So_No                    In     Ias_Bill_Dtl.So_No%Type Default Null
                                ,P_So_Ser                   In     Ias_Bill_Dtl.So_Ser%Type Default Null
                                ,P_Doc_Type_Ref             In     Ias_Bill_Dtl.Doc_Type_Ref%Type Default Null
                                ,P_Doc_No_Ref               In     Ias_Bill_Dtl.Doc_No_Ref%Type Default Null
                                ,P_Doc_Ser_Ref              In     Ias_Bill_Dtl.Doc_Ser_Ref%Type Default Null
                                ,P_Dis_Per                  In     Ias_Bill_Dtl.Dis_Per%Type Default Null
                                ,P_Dis_Amt                  In     Ias_Bill_Dtl.Dis_Amt%Type Default Null
                                ,P_Dis_Amt_Mst              In     Ias_Bill_Dtl.Dis_Amt_Mst%Type Default Null
                                ,P_Dis_Amt_Dtl              In     Ias_Bill_Dtl.Dis_Amt_Dtl%Type Default Null
                                ,P_Add_Dis_Amt_Mst          In     Ias_Bill_Dtl.Add_Dis_Amt_Mst%Type Default Null
                                ,P_Add_Dis_Amt_Dtl          In     Ias_Bill_Dtl.Add_Dis_Amt_Dtl%Type Default Null
                                ,P_Dis_Per2                 In     Ias_Bill_Dtl.Dis_Per2%Type Default Null
                                ,P_Dis_Amt_Dtl2             In     Ias_Bill_Dtl.Dis_Amt_Dtl2%Type Default Null
                                ,P_Dis_Per3                 In     Ias_Bill_Dtl.Dis_Per3%Type Default Null
                                ,P_Dis_Amt_Dtl3             In     Ias_Bill_Dtl.Dis_Amt_Dtl3%Type Default Null
                                ,P_Vat_Amt_Othr             In     Ias_Bill_Dtl.Vat_Amt_Othr%Type Default Null
                                ,P_Othr_Amt_Disc            In     Ias_Bill_Dtl.Othr_Amt_Disc%Type Default Null
                                ,P_Dis_Aftr_Vat_Mst         In     Ias_Bill_Dtl.Dis_Aftr_Vat_Mst%Type Default Null
                                ,P_Dis_Amt_Dtl_Vat          In     Ias_Bill_Dtl.Dis_Amt_Dtl_Vat%Type Default Null
                                ,P_Dis_Amt_Dtl2_Vat         In     Ias_Bill_Dtl.Dis_Amt_Dtl2_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl_Vat      In     Ias_Bill_Dtl.Vat_Amt_Dis_Dtl_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl3_Vat     In     Ias_Bill_Dtl.Vat_Amt_Dis_Dtl3_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl2_Vat     In     Ias_Bill_Dtl.Vat_Amt_Dis_Dtl2_Vat%Type Default Null
                                ,P_Dis_Amt_Mst_Vat          In     Ias_Bill_Dtl.Dis_Amt_Mst_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Mst_Vat      In     Ias_Bill_Dtl.Vat_Amt_Dis_Mst_Vat%Type Default Null
                                ,P_Vat_Amt_Bfr_Dis          In     Ias_Bill_Dtl.Vat_Amt_Bfr_Dis%Type Default Null
                                ,P_Vat_Amt_Aftr_Dis         In     Ias_Bill_Dtl.Vat_Amt_Aftr_Dis%Type Default Null
                                ,P_Dis_Amt_Aftr_Vat         In     Ias_Bill_Dtl.Dis_Amt_Aftr_Vat%Type Default Null
                                ,P_Dis_Amt_Dtl_Qt_Prm       In     Ias_Bill_Dtl.Dis_Amt_Dtl_Qt_Prm%Type Default Null
                                ,P_Dis_Amt_Dtl_Qt_Prm_Vat   In     Ias_Bill_Dtl.Dis_Amt_Dtl_Qt_Prm_Vat%Type Default Null
                                ,P_Dis_Per_Qt_Prm           In     Ias_Bill_Dtl.Dis_Per_Qt_Prm%Type Default Null
                                ,P_Dis_Amt_Dtl3_Vat         In     Ias_Bill_Dtl.Dis_Amt_Dtl3_Vat%Type Default Null
                                ,P_Lev_No                   In     Ias_Bill_Dtl.Lev_No%Type Default Null
                                ,P_PRM_GRP_NO               In     Ias_Bill_Dtl.PRM_GRP_NO%Type Default Null
                                ,P_QT_PRM_RCRD_NO           In     Ias_Bill_Dtl.QT_PRM_RCRD_NO%Type Default Null
                                ,P_QT_PRM_SER               In     Ias_Bill_Dtl.QT_PRM_SER%Type Default Null
                                ,P_Rcrd_No_Ref              In     Ias_Bill_Dtl.Rcrd_No_Ref%Type Default Null
                                ,P_I_Length                 In     Ias_Bill_Dtl.I_Length%Type Default Null
                                ,P_I_Width                  In     Ias_Bill_Dtl.I_Width%Type Default Null
                                ,P_I_Height                 In     Ias_Bill_Dtl.I_Height%Type Default Null
                                ,P_I_Number                 In     Ias_Bill_Dtl.I_Number%Type Default Null
                                ,P_Field_Dtl1               In     Ias_Bill_Dtl.Field_Dtl1%Type Default Null
                                ,P_Field_Dtl2               In     Ias_Bill_Dtl.Field_Dtl2%Type Default Null
                                ,P_Field_Dtl3               In     Ias_Bill_Dtl.Field_Dtl3%Type Default Null
                                ,P_Up_Cnt                   In     Ias_Bill_Dtl.Up_Cnt%Type Default Null
                                ,P_Itm_Unt                  In     Ias_Bill_Dtl.Itm_Unt%Type Default Null
                                ,P_Wt_Qty                   In     Ias_Bill_Dtl.Wt_Qty%Type Default Null
                                ,P_Wt_Unt                   In     Ias_Bill_Dtl.Wt_Unt%Type Default Null
                                ,P_Emp_No                   In     Ias_Bill_Dtl.Emp_No%Type Default Null
                                ,P_Measur_Price             In     Ias_Bill_Dtl.Measur_Price%Type Default Null
                                ,P_Argmnt_No                In     Ias_Bill_Dtl.Argmnt_No%Type Default Null
                                ,P_Doc_Sequence_Ref         In     Ias_Bill_Dtl.Doc_Sequence_Ref%Type Default Null
                                ,P_Msg_Txt                  Out Varchar2
                                ,P_ERR_NO                 Out Varchar2
                                ,P_Pkg_NM                   Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Ias_Rt_Bill_Mst (P_Sys_No              In     Number
                                   ,P_Doc_Type            In     Number
                                   ,P_Doc_No              In     Ias_Rt_Bill_Mst.Rt_Bill_No%Type Default Null
                                   ,P_Doc_Ser             In     Ias_Rt_Bill_Mst.Rt_Bill_Ser%Type Default Null
                                   ,P_Rt_Bill_Doc_Type    In     Ias_Rt_Bill_Mst.Rt_Bill_Doc_Type%Type Default Null
                                   ,P_Doc_Date            In     Ias_Rt_Bill_Mst.Rt_Bill_Date%Type Default Null
                                   ,P_Cur_Code            In     Ias_Rt_Bill_Mst.Rt_Bill_Currency%Type Default Null
                                   ,P_Cur_Rate            In     Ias_Rt_Bill_Mst.Rt_Bill_Rate%Type Default Null
                                   ,P_Stock_Rate          In     Ias_Rt_Bill_Mst.Stock_Rate%Type Default Null
                                   ,P_P_Year              In     Ias_Rt_Bill_Mst.P_Year%Type Default Null
                                   ,P_C_Code              In     Ias_Rt_Bill_Mst.C_Code%Type Default Null
                                   ,P_C_Name              In     Ias_Rt_Bill_Mst.C_Name%Type Default Null
                                   ,P_A_Code              In     Ias_Rt_Bill_Mst.A_Code%Type Default Null
                                   ,P_Cheque_No           In     Ias_Rt_Bill_Mst.Cheque_No%Type Default Null
                                   ,P_Cheque_Amt          In     Ias_Rt_Bill_Mst.Cheque_Amt%Type Default Null
                                   ,P_Cheque_Due_Date     In     Ias_Rt_Bill_Mst.Cheque_Due_Date%Type Default Null
                                   ,P_Rt_Bill_Due_Date    In     Ias_Rt_Bill_Mst.Rt_Bill_Due_Date%Type Default Null
                                   ,P_W_Code              In     Ias_Rt_Bill_Mst.W_Code%Type Default Null
                                   ,P_R_Code              In     Ias_Rt_Bill_Mst.R_Code%Type Default Null
                                   ,P_Cash_No             In     Ias_Rt_Bill_Mst.Cash_No%Type Default Null
                                   ,P_Cc_Code             In     Ias_Rt_Bill_Mst.Cc_Code%Type Default Null
                                   ,P_Pj_No               In     Ias_Rt_Bill_Mst.Pj_No%Type Default Null
                                   ,P_Actv_No             In     Ias_Rt_Bill_Mst.Actv_No%Type Default Null
                                   ,P_Cash_Ac_Fcc         In     Ias_Rt_Bill_Mst.Cash_Ac_Fcc%Type Default Null
                                   ,P_Bank_No             In     Ias_Rt_Bill_Mst.Cash_No_Fcc%Type Default Null
                                   ,P_Clc_Typ_No_Tax      In     Ias_Rt_Bill_Mst.Clc_Typ_No_Tax%Type Default Null
                                   ,P_Ac_Code             In     Ias_Rt_Bill_Mst.Ac_Code%Type Default Null
                                   ,P_Ac_Code_Dtl         In     Ias_Rt_Bill_Mst.Ac_Code_Dtl%Type Default Null
                                   ,P_Ac_Dtl_Typ          In     Ias_Rt_Bill_Mst.Ac_Dtl_Typ%Type Default Null
                                   ,P_Rep_Code            In     Ias_Rt_Bill_Mst.Rep_Code%Type Default Null
                                   ,P_Emp_No              In     Ias_Rt_Bill_Mst.Emp_No%Type Default Null
                                   ,P_Sr_Type             In     Ias_Rt_Bill_Mst.Sr_Type%Type Default Null
                                   ,P_Ref_No              In     Ias_Rt_Bill_Mst.Ref_No%Type Default Null
                                   ,P_A_Desc              In     Ias_Rt_Bill_Mst.A_Desc%Type Default Null
                                   ,P_Return_Res          In     Ias_Rt_Bill_Mst.Return_Res%Type Default Null
                                   ,P_Prev_Year           In     Ias_Rt_Bill_Mst.Prev_Year%Type Default Null
                                   ,P_Classify_No         In     Ias_Rt_Bill_Mst.Classify_No%Type Default Null
                                   ,P_Classify_Ser        In     Ias_Rt_Bill_Mst.Classify_Ser%Type Default Null
                                   ,P_W_Code_Bill         In     Ias_Rt_Bill_Mst.W_Code_Bill%Type Default Null
                                   ,P_Cc_Code_Bill        In     Ias_Rt_Bill_Mst.Cc_Code_Bill%Type Default Null
                                   ,P_Rep_Code_Bill       In     Ias_Rt_Bill_Mst.Rep_Code_Bill%Type Default Null
                                   ,P_Stand_By            In     Ias_Rt_Bill_Mst.Stand_By%Type Default Null
                                   ,P_Note_No             In     Ias_Rt_Bill_Mst.Note_No%Type Default Null
                                   ,P_Driver_No           In     Ias_Rt_Bill_Mst.Driver_No%Type Default Null
                                   ,P_Doc_Brn_No          In     Ias_Rt_Bill_Mst.Doc_Brn_No%Type Default Null
                                   ,P_Res_Typ             In     Ias_Rt_Bill_Mst.Res_Typ%Type Default Null
                                   ,P_Without_Vat         In     Ias_Rt_Bill_Mst.Without_Vat%Type Default Null
                                   ,P_Rt_Vat_Prd_Typ      In     Ias_Rt_Bill_Mst.Rt_Vat_Prd_Typ%Type Default Null
                                   ,P_C_Code_Csh          In     Ias_Rt_Bill_Mst.C_Code_Csh%Type Default Null
                                   ,P_C_Tel               In     Ias_Rt_Bill_Mst.C_Tel%Type Default Null
                                   ,P_Pymnt_Ac            In     Ias_Rt_Bill_Mst.Pymnt_Ac%Type Default Null
                                   ,P_Ac_Amt              In     Ias_Rt_Bill_Mst.Ac_Amt%Type Default Null
                                   ,P_Doc_Ser_Extrnl      In     Ias_Rt_Bill_Mst.Doc_Ser_Extrnl%Type Default Null
                                   ,P_Cncl_Flg            In     Ias_Rt_Bill_Mst.Cncl_Flg%Type Default Null
                                   ,P_Clc_Vat_Price_Typ   In     Ias_Rt_Bill_Mst.Clc_Vat_Price_Typ%Type Default Null
                                   ,P_Col_No              In     Ias_Rt_Bill_Mst.Col_No%Type Default Null
                                   ,P_Field1              In     Ias_Rt_Bill_Mst.Field1%Type Default Null
                                   ,P_Field2              In     Ias_Rt_Bill_Mst.Field2%Type Default Null
                                   ,P_Field3              In     Ias_Rt_Bill_Mst.Field3%Type Default Null
                                   ,P_Field4              In     Ias_Rt_Bill_Mst.Field4%Type Default Null
                                   ,P_Field5              In     Ias_Rt_Bill_Mst.Field5%Type Default Null
                                   ,P_Field6              In     Ias_Rt_Bill_Mst.Field6%Type Default Null
                                   ,P_Field7              In     Ias_Rt_Bill_Mst.Field7%Type Default Null
                                   ,P_Field8              In     Ias_Rt_Bill_Mst.Field8%Type Default Null
                                   ,P_Field9              In     Ias_Rt_Bill_Mst.Field9%Type Default Null
                                   ,P_Field10             In     Ias_Rt_Bill_Mst.Field10%Type Default Null
                                   ,P_Prm_Code            In     Ias_Rt_Bill_Mst.Prm_Code%Type Default Null
                                   ,P_Bill_Amt            In     Ias_Rt_Bill_Mst.Bill_Amt%Type Default Null
                                   ,P_Disc_Amt            In     Ias_Rt_Bill_Mst.Disc_Amt%Type Default Null
                                   ,P_Disc_Amt_Mst        In     Ias_Rt_Bill_Mst.Disc_Amt_Mst%Type Default Null
                                   ,P_Disc_Amt_Dtl        In     Ias_Rt_Bill_Mst.Disc_Amt_Dtl%Type Default Null
                                   ,P_Vat_Amt             In     Ias_Rt_Bill_Mst.Vat_Amt%Type Default Null
                                   ,P_Othr_Amt            In     Ias_Rt_Bill_Mst.Othr_Amt%Type Default Null
                                   ,P_Othr_Amt_Disc       In     Ias_Rt_Bill_Mst.Othr_Amt_Disc%Type Default Null
                                   ,P_Vat_Amt_Othr        In     Ias_Rt_Bill_Mst.Vat_Amt_Othr%Type Default Null
                                   ,P_Disc_Amt_Aftr_Vat   In     Ias_Rt_Bill_Mst.Disc_Amt_Aftr_Vat%Type Default Null
                                   ,P_Disc_Amt_Mst_Vat    In     Ias_Rt_Bill_Mst.Disc_Amt_Mst_Vat%Type Default Null
                                   ,P_Vat_Amt_Disc_Mst    In     Ias_Rt_Bill_Mst.Vat_Amt_Disc_Mst%Type Default Null
                                   ,P_CLC_TAX_FREE_QTY_FLG In     Ias_Bill_Mst.CLC_TAX_FREE_QTY_FLG %Type Default Null
                                   ,P_Cmp_No              In     Ias_Rt_Bill_Mst.Cmp_No%Type Default Null
                                   ,P_Brn_No              In     Ias_Rt_Bill_Mst.Brn_No%Type Default Null
                                   ,P_Brn_Year            In     Ias_Rt_Bill_Mst.Brn_Year%Type Default Null
                                   ,P_Brn_Usr             In     Ias_Rt_Bill_Mst.Brn_Usr%Type Default Null
                                   ,P_Ad_U_Id             In     Ias_Rt_Bill_Mst.Ad_U_Id%Type Default Null
                                   ,P_Ad_Date             In     Ias_Rt_Bill_Mst.Ad_Date%Type Default Null
                                   ,P_Ad_Trmnl_Nm         In     Ias_Rt_Bill_Mst.Ad_Trmnl_Nm%Type Default Null
                                   ,P_Pst_Typ             In     Number Default Nullto br tables ,2 to onyx tables
                                   ,P_CLC_TAX_METHOD      In     NUMBER  --## 0 CALC TAX IN EXTRNAL ,1-AOUTO CALC TAX
                                   ,P_Pst_FROM_BR         In     Number  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
                                   ,P_Lng_No              In     Number Default 1
                                   ,P_Msg_Txt             Out Varchar2
                                   ,P_ERR_NO            Out Varchar2
                                   ,P_Pkg_NM              Out Varchar2);
     

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Ias_Rt_Bill_Dtl (P_I_Code                 In     Ias_Rt_Bill_Dtl.I_Code%Type Default Null
                                   ,P_I_Qty                  In     Ias_Rt_Bill_Dtl.I_Qty%Type Default Null
                                   ,P_P_Size                 In     Ias_Rt_Bill_Dtl.P_Size%Type Default Null
                                   ,P_Itm_Unt                In     Ias_Bill_Dtl.Itm_Unt%Type Default Null
                                   ,P_I_Price                In     Ias_Rt_Bill_Dtl.I_Price%Type Default Null
                                   ,P_I_Price_Vat            In     Ias_Rt_Bill_Dtl.I_Price_Vat%Type Default Null
                                   ,P_Doc_Sequence           In OUT     Ias_Rt_Bill_Dtl.Doc_Sequence%Type 
                                   ,P_W_Code                 In     Ias_Rt_Bill_Dtl.W_Code%Type Default Null
                                   ,P_Bill_No                In     Ias_Rt_Bill_Dtl.Bill_No%Type Default Null
                                   ,P_Bill_Doc_Type          In     Ias_Rt_Bill_Dtl.Bill_Doc_Type%Type Default Null
                                   ,P_Bill_Ser               In     Ias_Rt_Bill_Dtl.Bill_Ser%Type Default Null
                                   ,P_Cc_Code                In     Ias_Rt_Bill_Dtl.Cc_Code%Type Default Null
                                   ,P_Pj_No                  In     Ias_Rt_Bill_Dtl.Pj_No%Type Default Null
                                   ,P_Actv_No                In     Ias_Rt_Bill_Dtl.Actv_No%Type Default Null
                                   ,P_Expire_Date            In     Ias_Rt_Bill_Dtl.Expire_Date%Type Default Null
                                   ,P_Batch_No               In     Ias_Rt_Bill_Dtl.Batch_No%Type Default Null
                                   ,P_Free_Qty               In     Ias_Rt_Bill_Dtl.Free_Qty%Type Default Null
                                   ,P_Dis_Per                In     Ias_Rt_Bill_Dtl.Dis_Per%Type Default Null
                                   ,P_Dis_Per2               In     Ias_Rt_Bill_Dtl.Dis_Per2%Type Default Null
                                   ,P_Dis_Per3               In     Ias_Rt_Bill_Dtl.Dis_Per3%Type Default Null
                                   ,P_Dis_Amt                In     Ias_Rt_Bill_Dtl.Dis_Amt%Type Default Null
                                   ,P_Dis_Amt_Mst            In     Ias_Rt_Bill_Dtl.Dis_Amt_Mst%Type Default Null
                                   ,P_Dis_Amt_Dtl            In     Ias_Rt_Bill_Dtl.Dis_Amt_Dtl%Type Default Null
                                   ,P_Dis_Amt_Dtl2           In     Ias_Rt_Bill_Dtl.Dis_Amt_Dtl2%Type Default Null
                                   ,P_Dis_Amt_Dtl3           In     Ias_Rt_Bill_Dtl.Dis_Amt_Dtl3%Type Default Null
                                   ,P_Vat_Per                In     Ias_Rt_Bill_Dtl.Vat_Per%Type Default Null
                                   ,P_Vat_Amt                In     Ias_Rt_Bill_Dtl.Vat_Amt%Type Default Null
                                   ,P_Othr_Amt               In     Ias_Rt_Bill_Dtl.Othr_Amt%Type Default Null
                                   ,P_Vat_Amt_Othr           In     Ias_Rt_Bill_Dtl.Vat_Amt_Othr%Type Default Null
                                   ,P_Othr_Amt_Disc          In     Ias_Rt_Bill_Dtl.Othr_Amt_Disc%Type Default Null
                                   ,P_Dis_Aftr_Vat_Mst       In     Ias_Rt_Bill_Dtl.Dis_Aftr_Vat_Mst%Type Default Null
                                   ,P_Dis_Amt_Mst_Vat        In     Ias_Rt_Bill_Dtl.Dis_Amt_Mst_Vat%Type Default Null
                                   ,P_Vat_Amt_Dis_Dtl_Vat    In     Ias_Rt_Bill_Dtl.Vat_Amt_Dis_Dtl_Vat%Type Default Null
                                   ,P_Vat_Amt_Aftr_Dis       In     Ias_Rt_Bill_Dtl.Vat_Amt_Aftr_Dis%Type Default Null
                                   ,P_Vat_Amt_Bfr_Dis        In     Ias_Rt_Bill_Dtl.Vat_Amt_Bfr_Dis%Type Default Null
                                   ,P_Dis_Amt_Dtl_Vat        In     Ias_Rt_Bill_Dtl.Dis_Amt_Dtl_Vat%Type Default Null
                                   ,P_Dis_Amt_Dtl2_Vat       In     Ias_Rt_Bill_Dtl.Dis_Amt_Dtl2_Vat%Type Default Null
                                   ,P_Dis_Amt_Dtl3_Vat       In     Ias_Rt_Bill_Dtl.Dis_Amt_Dtl3_Vat%Type Default Null
                                   ,P_Vat_Amt_Dis_Mst_Vat    In     Ias_Rt_Bill_Dtl.Vat_Amt_Dis_Mst_Vat%Type Default Null
                                   ,P_Vat_Amt_Dis_Dtl2_Vat   In     Ias_Rt_Bill_Dtl.Vat_Amt_Dis_Dtl2_Vat%Type Default Null
                                   ,P_Vat_Amt_Dis_Dtl3_Vat   In     Ias_Rt_Bill_Dtl.Vat_Amt_Dis_Dtl3_Vat%Type Default Null
                                   ,P_Dis_Amt_Aftr_Vat       In     Ias_Rt_Bill_Dtl.Dis_Amt_Aftr_Vat%Type Default Null
                                   ,P_Lev_No                 In     Ias_Bill_Dtl.Lev_No%Type Default Null
                                   ,P_Item_Desc              In     Ias_Rt_Bill_Dtl.Item_Desc%Type Default Null
                                   ,P_Barcode                In     Ias_Rt_Bill_Dtl.Barcode%Type Default Null
                                   ,P_Field_Dtl1             In     Ias_Rt_Bill_Dtl.Field_Dtl1%Type Default Null
                                   ,P_Field_Dtl2             In     Ias_Rt_Bill_Dtl.Field_Dtl2%Type Default Null
                                   ,P_Field_Dtl3             In     Ias_Rt_Bill_Dtl.Field_Dtl3%Type Default Null
                                   ,P_Emp_No                 In     Ias_Rt_Bill_Dtl.Emp_No%Type Default Null
                                   ,P_Doc_Type_Ref           In     Ias_Rt_Bill_Dtl.Doc_Type_Ref%Type Default Null
                                   ,P_Doc_No_Ref             In     Ias_Rt_Bill_Dtl.Doc_No_Ref%Type Default Null
                                   ,P_Doc_Ser_Ref            In     Ias_Rt_Bill_Dtl.Doc_Ser_Ref%Type Default Null
                                   ,P_Sub_C_Code             In     Ias_Rt_Bill_Dtl.Sub_C_Code%Type Default Null
                                   ,P_Rcrd_No_Ref            In     Ias_Rt_Bill_Dtl.Rcrd_No_Ref%Type Default Null
                                   ,P_Qt_Prm_No              In     Ias_Rt_Bill_Dtl.Qt_Prm_No%Type Default Null
                                   ,P_Qt_Prm_Ser             In     Ias_Rt_Bill_Dtl.Qt_Prm_Ser%Type Default Null
                                   ,P_Qt_Prm_Rcrd_No         In     Ias_Rt_Bill_Dtl.Qt_Prm_Rcrd_No%Type Default Null
                                   ,P_I_Length               In     Ias_Rt_Bill_Dtl.I_Length%Type Default Null
                                   ,P_I_Width                In     Ias_Rt_Bill_Dtl.I_Width%Type Default Null
                                   ,P_I_Height               In     Ias_Rt_Bill_Dtl.I_Height%Type Default Null
                                   ,P_I_Number               In     Ias_Rt_Bill_Dtl.I_Number%Type Default Null
                                   ,P_Wt_Qty                 In     Ias_Rt_Bill_Dtl.Wt_Qty%Type Default Null
                                   ,P_Wt_Unt                 In     Ias_Rt_Bill_Dtl.Wt_Unt%Type Default Null
                                   ,P_Argmnt_No              In     Ias_Rt_Bill_Dtl.Argmnt_No%Type Default Null
                                   ,P_Msg_Txt                Out Varchar2
                                   ,P_ERR_NO               Out Varchar2
                                   ,P_Pkg_NM               Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--  
   Procedure Get_Doc_No ( P_Doc_Typ In Number
                         ,P_Msg_Txt    Out Varchar2
                         ,P_ERR_NO     Out Varchar2
                         ,P_Pkg_NM     Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Get_Doc_Ser (P_Doc_Typ    In Number
                         ,P_Msg_Txt    Out Varchar2
                         ,P_ERR_NO     Out Varchar2
                         ,P_Pkg_NM     Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Check_Duplicate (P_Doc_Typ    In     Number
                            ,P_Doc_No     In     Ias_Post_Mst.Doc_No%Type
                            ,P_Msg_Txt    Out Varchar2
                            ,P_ERR_NO   Out Varchar2
                            ,P_Pkg_NM   Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
                       ,P_Cur_Rate        In     Ex_Rate.Cur_Rate%Type Default Null
                       ,P_Stk_Rate        In     Ex_Rate.Cur_Rate%Type Default Null
                       ,P_Cash_No         In     Cash_In_Hand.Cash_No%Type Default Null
                       ,P_Bank_No         In     Cash_At_Bank.Bank_No%Type Default Null
                       ,P_C_Code          In     Customer.C_Code%Type Default Null
                       ,P_Ac_Code         In     Ias_Post_Dtl.A_Code%Type Default Null
                       ,P_Ac_Code_Dtl     In     Ias_Post_Dtl.Ac_Code_Dtl%Type Default Null
                       ,P_Ac_Dtl_Typ      In     Ias_Post_Dtl.Ac_Dtl_Typ%Type Default Null
                       ,P_V_Code          In     V_Details.V_Code%Type Default Null
                       ,P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type Default Null
                       ,P_Doc_Amt         In     Number Default Null
                       ,P_Msg_Txt         Out Varchar2
                       ,P_ERR_NO        Out Varchar2
                       ,P_Pkg_NM          Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
  Procedure Chk_Gnr_Data ( P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
                          ,P_Ad_U_Id          In     Ias_Bill_Mst.Ad_U_Id%Type Default Null
                          ,P_Emp_No           In     Ias_Bill_Mst.Emp_No%Type Default Null
                          ,P_Rep_Code         In     Ias_Bill_Mst.Rep_Code%Type Default Null
                          ,P_Col_No           In     Ias_Bill_Mst.Col_No%Type Default Null
                          ,P_R_Code           In     Ias_Bill_Mst.R_Code%Type Default Null
                          ,P_W_Code           In     Ias_Bill_Mst.W_Code%Type Default Null
                          ,P_Clc_Typ_No_Tax   In     Ias_Bill_Mst.Clc_Typ_No_Tax%Type Default Null
                          ,P_Msg_Txt          Out Varchar2
                          ,P_ERR_NO         Out Varchar2
                          ,P_Pkg_NM           Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
Procedure Calc_Other_Charges (P_Doc_Typ          In     Number
                             ,P_Bill_Doc_Type    In     Number
                             ,P_Doc_Ser          In     Number
                             ,P_Doc_Date         In     DATE
                             ,P_Brn_No           In     Number
                             ,P_Use_Vat          In     Number
                             ,P_Cur_Code         In     Ex_Rate.Cur_Code%Type
                             ,P_Cur_Rate         In     Number
                             ,P_Clc_Typ_No_Tax   In     Number
                             ,P_Fld_Doc_Ser      In     Varchar2
                             ,P_Fld_Mst_Amt      In     Varchar2                            
                             ,P_Tbl_Mst_Nm       In     Varchar2                             
                             ,P_No_Of_Decimal    In     Number
                             ,P_Lng_No           In     Number Default 1
                             ,P_Msg_Txt             Out Varchar2
                             ,P_Err_No              Out Varchar2
                             ,P_Pkg_Nm              Out Varchar2);
--##-----------------------------------------------------------------------------------------------------##--                                                               
   Procedure Clr_Glbl_Var;

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
                               ,P_Itm_Unt      In Item_Movement.Itm_Unt%Type 
                               ,P_P_Size       In Item_Movement.P_Size%Type  default null
                               ,P_I_Qty        In Item_Movement.I_Qty%Type  default null
                               ,P_Res_Qty      In Item_Movement.I_Qty%Type  default null
                               ,P_W_Code       In Item_Movement.W_Code%Type default null
                               ,P_Expiredate   In Item_Movement.Expire_Date%Type default null
                               ,P_Batchno      In Item_Movement.Batch_No%Type default null
                               ,P_Res_Date     In Ias_Reserve_Dtl.T_Date%Type default null
                               ,P_Item_Desc    In Ias_Reserve_Dtl.Item_Desc%Type default null
                               ,P_Rcrd_No      In Number default null
                               ,P_Reserved     In Number default 0
                               ,p_Doc_Sequence in number default null
                               ,P_Msg_Txt    Out Varchar2
                               ,P_ERR_NO   Out Varchar2
                               ,P_Pkg_NM   Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Installment (P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type
                               ,P_Doc_Ser         In     Ias_Bill_Mst.Bill_Ser%Type
                               ,P_Pymnt_Ac        In     Ias_Bill_Mst.Pymnt_Ac%Type Default Null
                               ,P_Ac_Dtl_Typ      In     Ias_Bill_Mst.Ac_Dtl_Typ%Type Default Null
                               ,P_No_Of_Decimal   In     Number Default 2
                               ,P_Pst_Typ         In     Number Default Null
                               ,P_Lng_No          In     Number Default 1
                               ,P_Msg_Txt         Out Varchar2
                               ,P_ERR_NO        Out Varchar2
                               ,P_Pkg_NM                     Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
  PROCEDURE Insert_Installemnt_FBR (P_Doc_Type    Number,
                                  P_BillNo      Number,
                                  P_billdoctype Number,
                                  P_BillSer     Number,
                                  P_Billdate    Date,
                                  P_User_Id     Number,
                                  P_billcur     Varchar2,
                                  P_CashNo      Number,
                                  P_ccode       Varchar2,
                                  P_Typ         Varchar2 Default 'D',
                                  P_Msg_Txt                    Out Varchar2,
                                  P_ERR_NO                   Out Varchar2,
                                  P_Pkg_NM                     Out Varchar2) ;
--##-----------------------------------------------------------------------------------------------------##--                                  
   Procedure Insrt_OTHER_CHARGES(    P_DOC_TYP                    IN IAS_POST_DTL.DOC_TYPE%TYPE                     DEFAULT NULL
                                    ,P_Bill_Doc_Type              IN IAS_BILL_MST.Bill_Doc_Type%TYPE                DEFAULT NULL
                                    ,P_SC_NO                      IN OTHER_CHARGES.SC_NO%TYPE                       DEFAULT NULL
                                    ,P_A_CODE                     IN OTHER_CHARGES.A_CODE%TYPE                      DEFAULT NULL
                                    ,P_CUR_CODE                   IN OTHER_CHARGES.A_CY%TYPE                        DEFAULT NULL
                                    ,P_AC_RATE                    IN OTHER_CHARGES.AC_RATE%TYPE                     DEFAULT NULL
                                    ,P_PER                        IN OTHER_CHARGES.PER%TYPE                         DEFAULT NULL
                                    ,P_AMT                        IN OTHER_CHARGES.AMT%TYPE                         DEFAULT NULL
                                    ,P_INV_ITEM                   IN OTHER_CHARGES.INV_ITEM%TYPE                    DEFAULT NULL
                                    ,P_RCRD_NO                    IN OTHER_CHARGES.RCRD_NO%TYPE                     DEFAULT NULL
                                    ,P_BILL_PY                    IN OTHER_CHARGES.BILL_PY%TYPE                     DEFAULT NULL
                                    ,P_VAT_AMT                    IN OTHER_CHARGES.VAT_AMT%TYPE                     DEFAULT NULL
                                    ,P_VAT_PER                    IN OTHER_CHARGES.VAT_PER%TYPE                     DEFAULT NULL
                                    ,P_SC_AMT                     IN OTHER_CHARGES.SC_AMT%TYPE                      DEFAULT NULL
                                    ,P_SC_AC_RATE                 IN OTHER_CHARGES.SC_AC_RATE%TYPE                  DEFAULT NULL
                                    ,P_SC_A_CY                    IN OTHER_CHARGES.SC_A_CY%TYPE                     DEFAULT NULL
                                    ,P_Msg_Txt                    Out Varchar2
                                    ,P_ERR_NO                   Out Varchar2
                                    ,P_Pkg_NM                     Out Varchar2);
--##-----------------------------------------------------------------------------------------------------##-- 
 Procedure Insrt_Other_Charges_Items(P_DOC_TYP                    IN IAS_POST_DTL.DOC_TYPE%TYPE  
                                    ,P_SC_NO                      IN OTHER_CHARGES_ITEMS.SC_NO%TYPE                 DEFAULT NULL
                                    ,P_A_CODE                     IN OTHER_CHARGES_ITEMS.A_CODE%TYPE                DEFAULT NULL
                                    ,P_CUR_CODE                   IN OTHER_CHARGES_ITEMS.A_CY%TYPE                  DEFAULT NULL
                                    ,P_AC_RATE                    IN OTHER_CHARGES_ITEMS.AC_RATE%TYPE               DEFAULT NULL
                                    ,P_PER                        IN OTHER_CHARGES_ITEMS.PER%TYPE                   DEFAULT NULL
                                    ,P_AMT                        IN OTHER_CHARGES_ITEMS.AMT%TYPE                   DEFAULT NULL
                                    ,P_W_CODE                     IN OTHER_CHARGES_ITEMS.W_CODE%TYPE                DEFAULT NULL
                                    ,P_CC_CODE                    IN OTHER_CHARGES_ITEMS.CC_CODE%TYPE               DEFAULT NULL
                                    ,P_PJ_NO                      IN OTHER_CHARGES_ITEMS.PJ_NO%TYPE                 DEFAULT NULL
                                    ,P_ACTV_NO                    IN OTHER_CHARGES_ITEMS.ACTV_NO%TYPE               DEFAULT NULL
                                    ,P_RCRD_NO                    IN OTHER_CHARGES_ITEMS.RCRD_NO%TYPE               DEFAULT NULL
                                    ,P_SI_TYPE                    IN OTHER_CHARGES_ITEMS.SI_TYPE%TYPE               DEFAULT NULL
                                    ,P_I_CODE                     IN OTHER_CHARGES_ITEMS.I_CODE%TYPE                DEFAULT NULL
                                    ,P_ITM_UNT                    IN OTHER_CHARGES_ITEMS.ITM_UNT%TYPE               DEFAULT NULL
                                    ,P_P_SIZE                     IN OTHER_CHARGES_ITEMS.P_SIZE%TYPE                DEFAULT NULL
                                    ,P_BILL_PY                    IN OTHER_CHARGES_ITEMS.BILL_PY%TYPE               DEFAULT NULL
                                    ,P_UNIT_AMT                   IN OTHER_CHARGES_ITEMS.UNIT_AMT%TYPE              DEFAULT NULL
                                    ,P_POST_CODE                  IN OTHER_CHARGES_ITEMS.POST_CODE%TYPE             DEFAULT NULL                                    
                                    ,P_Msg_Txt                    Out Varchar2
                                    ,P_ERR_NO                   Out Varchar2
                                    ,P_Pkg_NM                     Out Varchar2) ; 
--##-----------------------------------------------------------------------------------------------------##-- 
Procedure   INSRT_GNR_TAX_ITM_MOVMNT(    P_DOC_TYP                  IN GNR_TAX_ITM_MOVMNT.DOC_TYPE%TYPE               DEFAULT NULL
                                        ,P_BILL_DOC_TYPE              IN GNR_TAX_ITM_MOVMNT.BILL_DOC_TYPE%TYPE          DEFAULT NULL
                                        ,P_DOC_JV_TYPE                IN GNR_TAX_ITM_MOVMNT.DOC_JV_TYPE%TYPE            DEFAULT NULL
                                        ,P_TAX_NO                     IN GNR_TAX_ITM_MOVMNT.TAX_NO%TYPE                 DEFAULT NULL
                                        ,P_CLC_TYP_NO                 IN GNR_TAX_ITM_MOVMNT.CLC_TYP_NO%TYPE             DEFAULT NULL
                                        ,P_AGNCY_NO                   IN GNR_TAX_ITM_MOVMNT.AGNCY_NO%TYPE               DEFAULT NULL
                                        ,P_I_CODE                     IN GNR_TAX_ITM_MOVMNT.I_CODE%TYPE                 DEFAULT NULL
                                        ,P_ITM_UNT                    IN GNR_TAX_ITM_MOVMNT.ITM_UNT%TYPE                DEFAULT NULL
                                        ,P_P_SIZE                     IN GNR_TAX_ITM_MOVMNT.P_SIZE%TYPE                 DEFAULT NULL
                                        ,P_I_PRICE                    IN GNR_TAX_ITM_MOVMNT.I_PRICE%TYPE                DEFAULT NULL
                                        ,P_DISC_AMT                   IN GNR_TAX_ITM_MOVMNT.DISC_AMT%TYPE               DEFAULT NULL
                                        ,P_A_CODE                     IN GNR_TAX_ITM_MOVMNT.A_CODE%TYPE                 DEFAULT NULL
                                        ,P_CUR_CODE                   IN GNR_TAX_ITM_MOVMNT.A_CY%TYPE                   DEFAULT NULL
                                        ,P_AC_RATE                    IN GNR_TAX_ITM_MOVMNT.AC_RATE%TYPE                DEFAULT NULL
                                        ,P_TAX_PRCNT                  IN GNR_TAX_ITM_MOVMNT.TAX_PRCNT%TYPE              DEFAULT NULL
                                        ,P_TAX_AMT                    IN GNR_TAX_ITM_MOVMNT.TAX_AMT%TYPE                DEFAULT NULL
                                        ,P_W_CODE                     IN GNR_TAX_ITM_MOVMNT.W_CODE%TYPE                 DEFAULT NULL
                                        ,P_CC_CODE                    IN GNR_TAX_ITM_MOVMNT.CC_CODE%TYPE                DEFAULT NULL
                                        ,P_PJ_NO                      IN GNR_TAX_ITM_MOVMNT.PJ_NO%TYPE                  DEFAULT NULL
                                        ,P_ACTV_NO                    IN GNR_TAX_ITM_MOVMNT.ACTV_NO%TYPE                DEFAULT NULL
                                        ,P_RCRD_NO                    IN GNR_TAX_ITM_MOVMNT.RCRD_NO%TYPE                DEFAULT NULL
                                        ,P_DOC_SEQUENCE               IN GNR_TAX_ITM_MOVMNT.DOC_SEQUENCE%TYPE           DEFAULT NULL
                                        ,P_TAX_AMT_L                  IN GNR_TAX_ITM_MOVMNT.TAX_AMT_L%TYPE              DEFAULT NULL
                                        ,P_I_QTY                      IN GNR_TAX_ITM_MOVMNT.I_QTY%TYPE                  DEFAULT NULL
                                        ,P_FREE_QTY                   IN GNR_TAX_ITM_MOVMNT.FREE_QTY%TYPE               DEFAULT NULL
                                        ,P_REF_NO                     IN GNR_TAX_ITM_MOVMNT.REF_NO%TYPE                 DEFAULT NULL
                                        ,P_STK_COST                   IN GNR_TAX_ITM_MOVMNT.STK_COST%TYPE               DEFAULT NULL
                                        ,P_STK_RATE                   IN GNR_TAX_ITM_MOVMNT.STK_RATE%TYPE               DEFAULT NULL
                                        ,P_CLC_TAX_FREE_QTY_FLG       IN GNR_TAX_ITM_MOVMNT.CLC_TAX_FREE_QTY_FLG%TYPE   DEFAULT NULL
                                        ,P_Msg_Txt                    Out Varchar2
                                        ,P_ERR_NO                   Out Varchar2
                                        ,P_Pkg_NM                     Out Varchar2); 
--##-----------------------------------------------------------------------------------------------------##--  
 Procedure DELETE_BILL (    P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type 
                            ,P_Doc_Ser    In     Sales_Order.Order_Ser%Type                            
                            ,P_Msg_Txt    Out Varchar2
                            ,P_ERR_NO   Out Varchar2
                            ,P_Pkg_Nm     Out Varchar
   Procedure Chk_Insrt_Data (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type 
                            ,P_Doc_Ser    In     Sales_Order.Order_Ser%Type                            
                            ,P_Msg_Txt    Out Varchar2
                            ,P_ERR_NO   Out Varchar2
                            ,P_Pkg_Nm     Out Varchar
                                                                 );
--##-----------------------------------------------------------------------------------------------------##--
--##-----------------------------------------------------------------------------------------------------##--
End Ars_Api_Trns_Pkg;
/
CREATE PACKAGE ARS_AUTO_SYNC_PKG AS
V_DOC_SRL                        ARS_AUTO_SLS_ORDR_MST.DOC_SRL%TYPE;
V_DOC_NO                         ARS_AUTO_SLS_ORDR_MST.DOC_NO%TYPE;

FUNCTION CHK_USR_DATA   ( P_C_CODE                IN CUSTOMER.C_CODE%TYPE          
                         ,P_USR_NO                IN CUSTOMER.WEB_SRVC_USR_NO%TYPE           
                         ,P_PASWRD                IN CUSTOMER.WEB_SRVC_PASSWRD%TYPE) RETURN NUMBER;

PROCEDURE CHK_ITM  ( P_I_CODE                IN IAS_ITM_MST.I_CODE%TYPE          
                    ,P_ITM_UNT               IN IAS_ITM_DTL.ITM_UNT%TYPE           
                    ,P_MSG_TXT               IN OUT VARCHAR2
                    ,P_PKG_LINE              IN OUT VARCHAR2) ;
                                        
PROCEDURE INSRT_AUTO_SLS_ORDR_MST( P_DOC_NO     IN     ARS_AUTO_SLS_ORDR_MST.DOC_NO%TYPE DEFAULT NULL,
                                  P_DOC_SRL     IN     ARS_AUTO_SLS_ORDR_MST.DOC_SRL%TYPE  DEFAULT NULL,
                                  P_DOC_SRL_REF IN     ARS_AUTO_SLS_ORDR_MST.DOC_SRL_REF%TYPE,
                                  P_DOC_NO_REF  IN     ARS_AUTO_SLS_ORDR_MST.DOC_NO_REF%TYPE,
                                  P_C_CODE      IN     CUSTOMER.C_CODE%TYPE ,
                                  P_DOC_DATE    IN     DATE     ,
                                  P_AD_U_ID     IN     NUMBER   DEFAULT NULL,
                                  P_AD_DATE     IN     DATE     DEFAULT NULL);
                                  
PROCEDURE INSRT_AUTO_SLS_ORDR_DTL( P_DOC_NO      IN     ARS_AUTO_SLS_ORDR_MST.DOC_NO%TYPE DEFAULT NULL,
                                   P_DOC_SRL     IN     ARS_AUTO_SLS_ORDR_MST.DOC_SRL%TYPE  DEFAULT NULL,
                                   P_I_CODE      IN     IAS_ITM_MST.I_CODE%TYPE ,
                                   P_ITM_UNT     IN     IAS_ITM_DTL.ITM_UNT%TYPE     ,
                                   P_I_QTY       IN     NUMBER ,
                                   P_MSG_TXT     IN OUT VARCHAR2);

PROCEDURE GET_EXTRCT_ORDR_XML(P_XML        IN   VARCHAR2,P_XML_OUT         OUT  VARCHAR2);

END ARS_AUTO_SYNC_PKG;
/
CREATE PACKAGE ARS_CSS_PKG IS
 G_Lng_No                      Ias_Sys.Lang_Def.Lang_No%Type;
   G_Sys_No                      Number;
   G_Lng_Dflt                    Ias_Sys.Lang_Def.Lang_Dflt%Type;
   G_Usr_No                      User_R.U_Id%Type;
   G_Loc_Cur_Code                Ex_Rate.Cur_Code%Type;
   G_Cur_Code                    Ex_Rate.Cur_Code%Type;
   G_Cur_Rate                    Ex_Rate.Cur_Rate%Type;
   G_Stk_Cur_Code                Ex_Rate.Cur_Code%Type := Ias_Gen_Pkg.Get_Stk_Cur;
   G_Stk_Rate                    Ex_Rate.Cur_Rate%Type := Ias_Gen_Pkg.Get_Cur_Rate (P_Acy => G_Stk_Cur_Code);
   G_Brn_Usr                     Ias_Post_Mst.Brn_Usr%Type;
   G_Brn_Year                    Ias_Post_Mst.Brn_Year%Type;
   G_Brn_No                      Ias_Post_Mst.Brn_No%Type;
   G_Cmp_No                      Ias_Post_Mst.Cmp_No%Type;
   G_Doc_Typ                     Ias_Post_Mst.Doc_Type%Type;
   G_Doc_Ser                     Ias_Post_Mst.Doc_Ser%Type;
   G_Doc_No                      Ias_Post_Mst.Doc_No%Type;
   G_Tax_No                      Gnr_Tax_Code_Mst.Tax_No%Type;
   G_Bill_Doc_Type               Ias_Bill_Mst.Bill_Doc_Type%Type;
   G_Rt_Bill_Doc_Type            Ias_Rt_Bill_Mst.Rt_Bill_Doc_Type%Type;
   G_P_Year                      Ias_Rt_Bill_Mst.P_Year%Type;
   G_Clc_Typ_No_Tax              Gnr_Tax_Typ_Clc_Mst.Clc_Typ_No%Type;
   G_Calc_Vat_Amt_Type           Number (5);
   G_Ad_Date                     Date;
   G_Ad_U_Id                     User_R.U_Id%Type;
   G_Ad_Trmnl_Nm                 Ias_Post_Mst.Ad_Trmnl_Nm%Type;
   G_W_Code                      Warehouse_Details.W_Code%Type;
   G_Doc_Date                    Date;
   G_Jv_Type                     Ias_Post_Mst.Jv_Type%Type;
   G_No_Of_Decimal_Ar            Number (5);
   G_Use_Vat                     Number (1);
   G_Use_Price_Include_Vat       Number (1);
   G_Item_Posting_Flag           Number;
   G_Ar_Wc_Type                  Number (5);
   G_Use_Out_Bills               Number (1);
   G_Add_Porder_Qty              Number (5);
   G_Cc_Avail                    Number (5);
   G_Use_Projects                Number (5);
   G_Use_Actvty                  Number (5);
   G_Aralt                       Number;
   G_Apalt                       Number;
   G_Costing_Type                Number (2);
   G_Wtavg_Type                  Number (2);
   G_Ar_Cst_Type                 Number (5);
   G_Ar_Pj_Type                  Number (5);
   G_Ar_Actv_Type                Number (5);
   G_Ar_Sorder_Serial            Ias_Para_Ar.Ar_Sorder_Serial%Type;
   G_Doc_Gen_Ar                  Ias_Para_Ar.Doc_Gen_Ar%Type;
   G_Disc_Count                  Number (1);
   G_Show_Disc_Per_Items_Ar      Number (1);
   G_Max_Prd_Exp_Date_So_Day     Number (5);
   G_Inv_Use_Wght_Sys            Number (5);
   G_Inv_Msur_Argmnt_Typ         Number (5);
   G_Inv_Argmnt_Fctr             Number (5);
   G_Check_Lmt_Sorder            Number (1);
   G_Max_Prd_Exp_Date_Quot_Day   Number (5);
   G_Inv_Itm_Cst_Typ             Number (5);
   G_Si_Repcode_Mandtry          Number (1);
   G_Stkcost_Fraction            Number (5);
   G_USE_OUT_BILL_DIRECT         Number (5);
   G_Clc_Tax_Dscnt2              Number (5);
   G_Clc_Tax_Dscnt3              Number (5);
   G_P_Rate_Type                 Number (5);
   G_Roi_Type                    Number (5);
   G_Use_Billno_Rtsale_Py          Number (5);
   G_External_Post               Ias_Bill_Mst.External_Post%Type;
   ---G_INV_SHW_ARGMNT_NO_IN_TRNS   NUMBER(5);
   G_Cc_Code                     Ias_Post_Dtl.Cc_Code%Type;
   G_A_Code                      Account.A_Code%Type;
   G_Cash_Ac_Fcc                 Account.A_Code%Type;
   G_Pj_No                       Ias_Post_Dtl.Pj_No%Type;
   G_Actv_No                     Ias_Post_Dtl.Actv_No%Type;
   G_Apprvd_Flg                  Sales_Order.Approved%Type;
   G_Apprvd_Ser                  S_Apprvd_Mov.Doc_Ser%Type;
   G_Ac_Code_Csh                 Account.A_Code%Type;
   G_Ac_Code_Bnk                 Account.A_Code%Type;
   G_Ac_Code_Cst                 Account.A_Code%Type;
   G_Ac_Code_Vnd                 Account.A_Code%Type;
   G_Ac_Code                     Account.A_Code%Type;
   G_Ac_Code_Dtl                 Account.A_Code%Type;
   G_Ac_Dtl_Typ                  Account.Ac_Dtl_Typ%Type;
   G_C_Code                      Customer.C_Code%Type;
   G_Ref_No                      Ias_Post_Dtl.Ref_No%Type;
   G_Rcrd_No                     Ias_Post_Dtl.Rcrd_No%Type;
   G_Rep_Code                    Sales_Man.Reprs_Code%Type;
   G_Use_Batch_No                Number;
   G_Use_Expire_Date             Number;
   G_Doc_Amt                     Number;
   G_So_Type                     Sales_Order.So_Type%Type;
   G_Clc_Vat_Price_Typ           Sales_Order.Clc_Vat_Price_Typ%Type;
   G_Si_Type                     Ias_Bill_Mst.Si_Type%Type;
   G_Sr_Type                     Ias_Rt_Bill_Mst.Sr_Type%Type;
   --G_ALLW_EXCD_ACCNT_LMT      NUMBER(5);
   G_Inpt_Nm                     Varchar2 (400);
   G_Rsrv_No                     Ias_Reserve_Mst.Doc_No%Type;
   G_Rsrv_Ser                    Ias_Reserve_Mst.Doc_Ser%Type;
   G_R_Code                      Ias_Bill_Mst.R_Code%Type;
   G_Cash_No                     Ias_Bill_Mst.Cash_No%Type;
   G_Bank_No                     Cash_At_Bank.Bank_No%Type;
   G_Emp_No                      Ias_Bill_Mst.Emp_No%Type;
   G_Doc_Dsc                     Ias_Bill_Mst.A_Desc%Type;
   G_Col_No                      Ias_Bill_Mst.Col_No%Type;
   G_Invoicing_Serials           Number;
   G_Invoicing_Serials_Sr        Number;
   G_Pst_Typ                     Number := Null;
   G_Ret_No                      Ias_Rt_Bill_Mst.Rt_Bill_No%Type;
   G_Ret_Ser                     Ias_Rt_Bill_Mst.Rt_Bill_Ser%Type;
   G_Exception_Err               Varchar2 (4000) := Null;
   G_Sqlerrm                     Varchar2 (4000) := Null;
   G_Srl                         Varchar2 (4000);
   G_ACTIVE_VAT_DATE              ias_para_gen.ACTIVE_VAT_DATE%Type;
  --##-----------------------------------------------------------------------------------------------------##-- 
--##-----------------------------------------------------------------------------------------------------##--
function  Get_cst_info(     P_USER_NO            IN Varchar2  ,
                             p_user_passwrd       In Varchar2  ,
                             p_DVC_CODE           In Varchar2  ,
                             p_DVC_TYP            In number Default NULL,                             
                             p_DVC_DSC            In Varchar2 Default NULL,
                             p_lng_no             IN number  Default 1) return clob ;
--##-----------------------------------------------------------------------------------------------------------##--
function  Chng_password(     P_user_no           In Varchar2  ,
                              P_old_passwrd       In Varchar2  ,
                              P_new_passwrd       In Varchar2,
                              p_lng_no            in number  Default 1  ) return clob ;
--##-----------------------------------------------------------------------------------------------------------##--
function  Get_cst_blnc(      p_c_code            IN Varchar2  ,
                             p_cur_code          IN Varchar2 Default NULL,  
                             p_f_date            In date  Default NULL ,
                             p_t_date            In date  Default NULL, 
                             p_pst_type          In number Default NULL,                             
                             p_blnc_type         In number Default NULL,
                             p_lng_no            in number  Default 1) return clob ;
--##-----------------------------------------------------------------------------------------------------------##--
Function  Get_group_data (  P_c_code             In Varchar2 ,                            
                            P_g_code             In Varchar2  Default Null,   
                            P_mng_code           In Varchar2  Default Null,
                            P_subg_code          In Varchar2  Default Null,       
                            P_assistant_no       In Varchar2  Default Null,
                            P_detail_no          In Varchar2  Default Null,
                            P_G_code_nm          In Varchar2  Default Null,      
                            p_lng_no             In number    Default 1 ) return clob ;
--##-----------------------------------------------------------------------------------------------------------##--
Function  Get_itm_info(     P_c_code             In Varchar2  ,                            
                            P_info_typ           In Number Default 1, 
                            P_i_code             In Varchar2  Default Null,
                            P_i_code_nm          In Varchar2  Default Null,
                            P_g_code             In Varchar2  Default Null,   
                            P_mng_code           In Varchar2  Default Null,
                            P_subg_code          In Varchar2  Default Null,       
                            P_assistant_no       In Varchar2  Default Null,
                            P_detail_no          In Varchar2  Default Null,                                        
                            P_lng_no             In Number    Default 1) return clob ;
--##-----------------------------------------------------------------------------------------------------------##--
function  Get_Itm_Qt_Prm(     P_C_CODE             IN Varchar2  ,                                                                                                               
                              P_i_code             In Varchar2  Default Null,
                              P_i_code_nm          In Varchar2  Default Null,
                              P_lng_no             IN number  Default 1) return clob ;
--##-----------------------------------------------------------------------------------------------------------##--
Procedure Insrt_Doc_Prc(P_Xml In clob,p_lng_no IN number  Default 1,P_Json_Rslt Out Varchar2) ; 
--##-----------------------------------------------------------------------------------------------------------##--
Function Get_Sales_Order_Mst(P_C_Code In Varchar2,  P_Lng_No In Number Default 1) Return Clob;
--##-----------------------------------------------------------------------------------------------------------##--
Function Get_Sales_Order_Dtl(P_C_Code In Varchar2, P_Doc_ser  In Number Default 1, P_Lng_No In Number Default 1) Return Clob;
--##-----------------------------------------------------------------------------------------------------------##--
 Function Get_req_itm_cstmr(P_C_Code        In Varchar2, 
                            P_i_code        In Varchar2  Default Null,
                            P_i_code_nm     In Varchar2  Default Null,
                            P_Lng_No        In Number Default 1) Return Clob;
 --##-----------------------------------------------------------------------------------------------------------##--
 Function Updt_Req_Itm_Cstmr(P_Xml In Clob, P_Lng_No In Number Default 1) Return Clob;
--##-----------------------------------------------------------------------------------------------------------##-- 
 Function Updt_Sal_Ordr_Cst_Accpt (P_Xml In Clob, P_Lng_No In Number Default 1) Return Clob;
--##-----------------------------------------------------------------------------------------------------------##--
   Procedure Get_Prmtr_Prc (P_Sys_No    In Number Default Null
                           ,P_Doc_Typ   In Ias_Post_Mst.Doc_Type%Type Default Null
                           ,P_Brn_No    In S_Brn.Brn_No%Type Default Null
                           ,P_Brn_Usr   In S_Brn.Brn_Usr%Type Default Null
                           ,P_Usr_No    In User_R.U_Id%Type Default Null
                           ,P_Lng_No       Number Default Null
                           ,P_Msg_Txt             In Out Varchar2
                           ,P_Pkg_Line            In Out Varchar2);
 --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Sales_Order (P_Sys_No              In     Number
                               ,P_Doc_Type            In     Number
                               ,P_Doc_No              In     Sales_Order.Order_No%Type Default Null
                               ,P_Doc_Ser             In     Sales_Order.Order_Ser%Type Default Null
                               ,P_Doc_Date            In     Sales_Order.Order_Date%Type Default Null
                               ,P_Cur_Code            In     Sales_Order.Order_Cur%Type Default Null
                               ,P_Cur_Rate            In     Sales_Order.Cur_Rate%Type Default Null
                               ,P_So_Type             In     Sales_Order.So_Type%Type Default Null
                               ,P_C_Code              In     Sales_Order.C_Code%Type Default Null
                               ,P_C_Name              In     Sales_Order.C_Name%Type Default Null
                               ,P_A_Desc              In     Sales_Order.A_Desc%Type Default Null
                               ,P_Cc_Code             In     Sales_Order.Cc_Code%Type Default Null
                               ,P_Pj_No               In     Sales_Order.Pj_No%Type Default Null
                               ,P_Actv_No             In     Sales_Order.Actv_No%Type Default Null
                               ,P_W_Code              In     Sales_Order.W_Code%Type Default Null
                               ,P_Rep_Code            In     Sales_Order.Rep_Code%Type Default Null
                               ,P_Emp_No              In     Sales_Order.Emp_No%Type Default Null
                               ,P_Vat_Amt             In     Sales_Order.Vat_Amt%Type Default Null
                               ,P_Order_Amt           In     Sales_Order.Order_Amt%Type Default Null
                               ,P_Disc_Amt            In     Sales_Order.Disc_Amt%Type Default Null
                               ,P_Disc_Amt_Dtl        In     Sales_Order.Disc_Amt_Dtl%Type Default Null
                               ,P_Disc_Amt_Mst        In     Sales_Order.Disc_Amt_Mst%Type Default Null
                               ,P_Othr_Amt            In     Sales_Order.Othr_Amt%Type Default Null
                               ,P_Vat_Amt_Othr        In     Sales_Order.Vat_Amt_Othr%Type Default Null
                               ,P_Disc_Amt_Mst_Vat    In     Sales_Order.Disc_Amt_Mst_Vat%Type Default Null
                               ,P_Vat_Amt_Disc_Mst    In     Sales_Order.Vat_Amt_Disc_Mst%Type Default Null
                               ,P_Disc_Amt_Aftr_Vat   In     Sales_Order.Disc_Amt_Aftr_Vat%Type Default Null
                               ,P_Cash_No             In     Sales_Order.Cash_No%Type Default Null
                               ,P_Clc_Typ_No_Tax      In     Sales_Order.Clc_Typ_No_Tax%Type Default Null
                               ,P_Clc_Vat_Price_Typ   In     Sales_Order.Clc_Vat_Price_Typ%Type Default Null
                               ,P_Ref_Doc_No          In     Sales_Order.Ref_Doc_No%Type Default Null
                               ,P_Ref_Doc_Date        In     Sales_Order.Ref_Doc_Date%Type Default Null
                               ,P_Prepare_Date        In     Sales_Order.Prepare_Date%Type Default Null
                               ,P_Rec_Dealer_Date     In     Sales_Order.Rec_Dealer_Date%Type Default Null
                               ,P_Delivery_Date       In     Sales_Order.Delivery_Date%Type Default Null
                               ,P_R_Code              In     Sales_Order.R_Code%Type Default Null
                               ,P_Driver_No           In     Sales_Order.Driver_No%Type Default Null
                               ,P_Bill_Doc_Type       In     Sales_Order.Bill_Doc_Type%Type Default Null
                               ,P_Bill_Due_Date       In     Sales_Order.Bill_Due_Date%Type Default Null
                               ,P_Order_Expire_Date   In     Sales_Order.Order_Expire_Date%Type Default Null
                               ,P_Cheque_Due_Date     In     Sales_Order.Cheque_Due_Date%Type Default Null
                               ,P_C_Code_Csh          In     Sales_Order.C_Code_Csh%Type Default Null
                               ,P_C_Address           In     Sales_Order.C_Address%Type Default Null
                               ,P_C_Mobile            In     Sales_Order.C_Mobile%Type Default Null
                               ,P_Latitude            In     Sales_Order.Latitude%Type Default Null
                               ,P_Longitude           In     Sales_Order.Longitude%Type Default Null
                               ,P_Si_Type             In     Sales_Order.Si_Type%Type Default Null
                               ,P_External_Post       In     Sales_Order.External_Post%Type Default Null
                               ,P_Field1              In     Sales_Order.Field1%Type Default Null
                               ,P_Field2              In     Sales_Order.Field2%Type Default Null
                               ,P_Field3              In     Sales_Order.Field3%Type Default Null
                               ,P_Field4              In     Sales_Order.Field4%Type Default Null
                               ,P_Field5              In     Sales_Order.Field5%Type Default Null
                               ,P_Field6              In     Sales_Order.Field6%Type Default Null
                               ,P_Field7              In     Sales_Order.Field7%Type Default Null
                               ,P_Field8              In     Sales_Order.Field8%Type Default Null
                               ,P_Field9              In     Sales_Order.Field9%Type Default Null
                               ,P_Field10             In     Sales_Order.Field10%Type Default Null
                               ,P_Cmp_No              In     Sales_Order.Cmp_No%Type Default Null
                               ,P_Brn_No              In     Sales_Order.Brn_No%Type Default Null
                               ,P_Brn_Year            In     Sales_Order.Brn_Year%Type Default Null
                               ,P_Brn_Usr             In     Sales_Order.Brn_Usr%Type Default Null
                               ,P_Ad_Trmnl_Nm         In     Sales_Order.Ad_Trmnl_Nm%Type Default Null
                               ,P_Ad_U_Id             In     Sales_Order.Ad_U_Id%Type Default Null
                               ,P_Ad_Date             In     Sales_Order.Ad_Date%Type Default Null
                               ,P_Msg_Txt             In Out Varchar2
                               ,P_Pkg_Line            In Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Order_Detail (P_I_Code                 In     Order_Detail.I_Code%Type Default Null
                                ,P_Itm_Unt                In     Order_Detail.Itm_Unt%Type Default Null
                                ,P_I_Qty                  In     Order_Detail.I_Qty%Type Default Null
                                ,P_P_Qty                  In     Order_Detail.P_Qty%Type Default Null
                                ,P_P_Size                 In     Order_Detail.P_Size%Type Default Null
                                ,P_Free_Qty               In     Order_Detail.Free_Qty%Type Default Null
                                ,P_Barcode                In     Order_Detail.Barcode%Type Default Null
                                ,P_Batch_No               In     Order_Detail.Batch_No%Type Default Null
                                ,P_Expire_Date            In     Order_Detail.Expire_Date%Type Default Null
                                ,P_W_Code                 In     Order_Detail.W_Code%Type Default Null
                                ,P_Cc_Code                In     Order_Detail.Cc_Code%Type Default Null
                                ,P_Actv_No                In     Order_Detail.Actv_No%Type Default Null
                                ,P_Pj_No                  In     Order_Detail.Pj_No%Type Default Null
                                ,P_I_Price                In     Order_Detail.I_Price%Type Default Null
                                ,P_I_Price_Vat            In     Order_Detail.I_Price_Vat%Type Default Null
                                ,P_Measur_Price           In     Order_Detail.Measur_Price%Type Default Null
                                ,P_Othr_Amt               In     Order_Detail.Othr_Amt%Type Default Null
                                ,P_Othr_Amt_Disc          In     Order_Detail.Othr_Amt_Disc%Type Default Null
                                ,P_Vat_Amt                In     Order_Detail.Vat_Amt%Type Default Null
                                ,P_Vat_Amt_Aftr_Dis       In     Order_Detail.Vat_Amt_Aftr_Dis%Type Default Null
                                ,P_Vat_Amt_Bfr_Dis        In     Order_Detail.Vat_Amt_Bfr_Dis%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl2_Vat   In     Order_Detail.Vat_Amt_Dis_Dtl2_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl3_Vat   In     Order_Detail.Vat_Amt_Dis_Dtl3_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Dtl_Vat    In     Order_Detail.Vat_Amt_Dis_Dtl_Vat%Type Default Null
                                ,P_Vat_Amt_Dis_Mst_Vat    In     Order_Detail.Vat_Amt_Dis_Mst_Vat%Type Default Null
                                ,P_Vat_Amt_Othr           In     Order_Detail.Vat_Amt_Othr%Type Default Null
                                ,P_Vat_Per                In     Order_Detail.Vat_Per%Type Default Null
                                ,P_Dis_Amt                In     Order_Detail.Dis_Amt%Type Default Null
                                ,P_Dis_Amt_Aftr_Vat       In     Order_Detail.Dis_Amt_Aftr_Vat%Type Default Null
                                ,P_Dis_Amt_Dtl            In     Order_Detail.Dis_Amt_Dtl%Type Default Null
                                ,P_Dis_Amt_Dtl2           In     Order_Detail.Dis_Amt_Dtl2%Type Default Null
                                ,P_Dis_Amt_Dtl2_Vat       In     Order_Detail.Dis_Amt_Dtl2_Vat%Type Default Null
                                ,P_Dis_Amt_Dtl3           In     Order_Detail.Dis_Amt_Dtl3%Type Default Null
                                ,P_Dis_Amt_Dtl3_Vat       In     Order_Detail.Dis_Amt_Dtl3_Vat%Type Default Null
                                ,P_Dis_Amt_Dtl_Vat        In     Order_Detail.Dis_Amt_Dtl_Vat%Type Default Null
                                ,P_Dis_Amt_Mst            In     Order_Detail.Dis_Amt_Mst%Type Default Null
                                ,P_Dis_Amt_Mst_Vat        In     Order_Detail.Dis_Amt_Mst_Vat%Type Default Null
                                ,P_Dis_Per                In     Order_Detail.Dis_Per%Type Default Null
                                ,P_Dis_Per2               In     Order_Detail.Dis_Per2%Type Default Null
                                ,P_Dis_Per3               In     Order_Detail.Dis_Per3%Type Default Null
                                ,P_Doc_No_Ref             In     Order_Detail.Doc_No_Ref%Type Default Null
                                ,P_Doc_Seq                In     Order_Detail.Doc_Seq%Type Default Null
                                ,P_Doc_Sequence_Ref       In     Order_Detail.Doc_Sequence_Ref%Type Default Null
                                ,P_Doc_Ser_Ref            In     Order_Detail.Doc_Ser_Ref%Type Default Null
                                ,P_Doc_Type_Ref           In     Order_Detail.Doc_Type_Ref%Type Default Null
                                ,P_Emp_No                 In     Order_Detail.Emp_No%Type Default Null
                                ,P_External_Post          In     Order_Detail.External_Post%Type Default Null
                                ,P_Field_Dtl1             In     Order_Detail.Field_Dtl1%Type Default Null
                                ,P_Field_Dtl2             In     Order_Detail.Field_Dtl2%Type Default Null
                                ,P_Field_Dtl3             In     Order_Detail.Field_Dtl3%Type Default Null
                                ,P_F_Time                 In     Order_Detail.F_Time%Type Default Null
                                ,P_T_Time                 In     Order_Detail.T_Time%Type Default Null
                                ,P_Item_Desc              In     Order_Detail.Item_Desc%Type Default Null
                                ,P_I_Width                In     Order_Detail.I_Width%Type Default Null
                                ,P_I_Height               In     Order_Detail.I_Height%Type Default Null
                                ,P_I_Length               In     Order_Detail.I_Length%Type Default Null
                                ,P_I_Number               In     Order_Detail.I_Number%Type Default Null
                                ,P_Argmnt_No              In     Order_Detail.Argmnt_No%Type Default Null
                                ,P_Rcrd_No                In     Order_Detail.Rcrd_No%Type Default Null
                                ,P_Rec_Attch              In     Order_Detail.Rec_Attch%Type Default Null
                                ,P_Reserved               In     Order_Detail.Reserved%Type Default Null
                                ,P_Res_Date               In     Order_Detail.Res_Date%Type Default Null
                                ,P_Res_Qty                In     Order_Detail.Res_Qty%Type Default Null
                                ,P_Msg_Txt                In Out Varchar2
                                ,P_Pkg_Line               In Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
 Procedure Chk_Inpt_Data (P_Inpt_Typ     In     Varchar2
                           ,P_Inpt_Code1   In     Varchar2
                           ,P_Inpt_Code2   In     Varchar2 Default Null
                           ,P_Inpt_Code3   In     Varchar2 Default Null
                           ,P_Inpt_Code4   In     Varchar2 Default Null
                           ,P_Lng_Dflt     In     Number Default 1
                           ,P_Inpt_Nm      In Out Varchar2
                           ,P_Msg_No       In Out Number);

   --##-----------------------------------------------------------------------------------------------------##-   
   Procedure Get_Doc_No (P_Doc_Typ In Number);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Get_Doc_Ser (P_Doc_Typ In Number);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Doc_No (P_Doc_Typ    In     Number
                        ,P_Doc_No     In     Ias_Post_Mst.Doc_No%Type
                        ,P_Msg_Txt    In Out Varchar2
                        ,P_Pkg_Line   In Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
                       ,P_Cur_Rate        In     Ex_Rate.Cur_Rate%Type Default Null
                       ,P_Stk_Rate        In     Ex_Rate.Cur_Rate%Type Default Null
                       ,P_Cash_No         In     Cash_In_Hand.Cash_No%Type Default Null
                       ,P_Bank_No         In     Cash_At_Bank.Bank_No%Type Default Null
                       ,P_C_Code          In     Customer.C_Code%Type Default Null
                       ,P_Ac_Code         In     Ias_Post_Dtl.A_Code%Type Default Null
                       ,P_Ac_Code_Dtl     In     Ias_Post_Dtl.Ac_Code_Dtl%Type Default Null
                       ,P_Ac_Dtl_Typ      In     Ias_Post_Dtl.Ac_Dtl_Typ%Type Default Null
                       ,P_V_Code          In     V_Details.V_Code%Type Default Null
                       ,P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type Default Null
                       ,P_Doc_Amt         In     Number Default Null
                       ,P_Msg_Txt         In Out Varchar2
                       ,P_Pkg_Line        In Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
                          ,P_Ad_U_Id          In     Ias_Bill_Mst.Ad_U_Id%Type Default Null
                          ,P_Emp_No           In     Ias_Bill_Mst.Emp_No%Type Default Null
                          ,P_Rep_Code         In     Ias_Bill_Mst.Rep_Code%Type Default Null
                          ,P_Col_No           In     Ias_Bill_Mst.Col_No%Type Default Null
                          ,P_R_Code           In     Ias_Bill_Mst.R_Code%Type Default Null
                          ,P_W_Code           In     Ias_Bill_Mst.W_Code%Type Default Null
                          ,P_Clc_Typ_No_Tax   In     Ias_Bill_Mst.Clc_Typ_No_Tax%Type Default Null
                          ,P_Msg_Txt          In Out Varchar2
                          ,P_Pkg_Line         In Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Itm (P_I_Code             In     Ias_Itm_Mst.I_Code%Type
                     ,P_Itm_Unt            In     Ias_Bill_Dtl.Itm_Unt%Type
                     ,P_P_Size             In Out Ias_Bill_Dtl.P_Size%Type
                     ,P_I_Qty              In     Ias_Bill_Dtl.I_Qty%Type Default Null
                     ,P_Free_Qty           In     Ias_Bill_Dtl.Free_Qty%Type Default Null
                     ,P_Res_Qty            In     Ias_Bill_Dtl.I_Qty%Type Default Null
                     ,P_I_Price            In     Ias_Bill_Dtl.I_Price%Type Default Null
                     ,P_Stk_Cost           In     Ias_Bill_Dtl.Stk_Cost%Type Default Null
                     ,P_I_Price_Vat        In     Ias_Bill_Dtl.I_Price_Vat%Type Default Null
                     ,P_Measur_Price       In     Ias_Bill_Dtl.Measur_Price%Type Default Null
                     ,P_Dis_Per            In     Ias_Bill_Dtl.Dis_Per%Type Default Null
                     ,P_Dis_Amt_Dtl        In     Ias_Bill_Dtl.Dis_Amt_Dtl%Type Default Null
                     ,P_Dis_Amt_Dtl_Vat    In     Ias_Bill_Dtl.Dis_Amt_Dtl_Vat%Type Default Null
                     ,P_Dis_Per2           In     Ias_Bill_Dtl.Dis_Per2%Type Default Null
                     ,P_Dis_Amt_Dtl2       In     Ias_Bill_Dtl.Dis_Amt_Dtl2%Type Default Null
                     ,P_Dis_Amt_Dtl2_Vat   In     Ias_Bill_Dtl.Dis_Amt_Dtl2_Vat%Type Default Null
                     ,P_Dis_Per3           In     Ias_Bill_Dtl.Dis_Per3%Type Default Null
                     ,P_Dis_Amt_Dtl3       In     Ias_Bill_Dtl.Dis_Amt_Dtl3%Type Default Null
                     ,P_Dis_Amt_Dtl3_Vat   In     Ias_Bill_Dtl.Dis_Amt_Dtl3_Vat%Type Default Null
                     ,P_Dis_Amt_Mst        In     Ias_Bill_Dtl.Dis_Amt_Mst%Type Default Null
                     ,P_W_Code             In     Ias_Bill_Dtl.W_Code%Type Default Null
                     ,P_Expire_Date        In     Ias_Bill_Dtl.Expire_Date%Type Default Null
                     ,P_Batch_No           In     Ias_Bill_Dtl.Batch_No%Type Default Null
                     ,P_I_Length           In     Ias_Bill_Dtl.I_Length%Type Default Null
                     ,P_I_Width            In     Ias_Bill_Dtl.I_Width%Type Default Null
                     ,P_I_Height           In     Ias_Bill_Dtl.I_Height%Type Default Null
                     ,P_Argmnt_No          In     Ias_Bill_Dtl.Argmnt_No%Type Default Null
                     ,P_Chk_Avlqty_Flg     In     Number Default 0
                     ,P_Msg_Txt            In Out Varchar2
                     ,P_Pkg_Line           In Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Sub_Ldgr (P_Mst_Flg    In     Number

                           P_Cc_Code    In     Cost_Centers.Cc_Code%Type
                          ,P_Pj_No      In     Ias_Projects.Pj_No%Type
                          ,P_Actv_No    In     Ias_Actvty.Actv_No%Type
                          ,P_Msg_Txt    In Out Varchar2
                          ,P_Pkg_Line   In Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Avl_Qty (P_I_Code         In     Item_Movement.I_Code%Type
                         ,P_itm_unt        In     Item_Movement.itm_unt%Type
                         ,P_P_Size         In     Item_Movement.P_Size%Type
                         ,P_I_Qty          In     Item_Movement.I_Qty%Type
                         ,P_Free_Qty       In     Item_Movement.Free_Qty%Type
                         ,P_Res_Qty        In     Item_Movement.I_Qty%Type
                         ,P_W_Code         In     Item_Movement.W_Code%Type
                         ,P_Expiredate     In     Item_Movement.Expire_Date%Type
                         ,P_Batchno        In     Item_Movement.Batch_No%Type
                         ,P_Rcrd_No        In     Number
                         ,P_Use_Exp_Date   In     Number
                         ,P_Use_Batch_No   In     Number
                         ,P_Service_Itm    In     Number
                         ,P_Reserved       In     Number
                         ,P_Msg_Txt        In Out Varchar2
                         ,P_Pkg_Line       In Out Varchar2);
--##-----------------------------------------------------------------------------------------------------##--  
   Procedure Clr_Glbl_Var;

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
                               ,P_Itm_Unt      In Item_Movement.Itm_Unt%Type
                               ,P_P_Size       In Item_Movement.P_Size%Type
                               ,P_I_Qty        In Item_Movement.I_Qty%Type
                               ,P_Res_Qty      In Item_Movement.I_Qty%Type
                               ,P_W_Code       In Item_Movement.W_Code%Type
                               ,P_Expiredate   In Item_Movement.Expire_Date%Type
                               ,P_Batchno      In Item_Movement.Batch_No%Type
                               ,P_Res_Date     In Ias_Reserve_Dtl.T_Date%Type
                               ,P_Item_Desc    In Ias_Reserve_Dtl.Item_Desc%Type
                               ,P_Rcrd_No      In Number
                               ,P_Reserved     In Number);

   --##-----------------------------------------------------------------------------------------------------##-- 
    Procedure Updt_Bill_Disc_Prc (P_Doc_Typ             In     Number
                                ,P_Pst_Typ             In     Number
                                ,P_Doc_Ser             In     Number
                                ,P_Use_Vat             In     Number Default Null
                                ,P_Clc_Vat_Price_Typ   In     Number Default Null
                                ,P_Clc_Typ_No_Tax      In     Number Default Null
                                ,P_Msg_Txt             In Out Varchar2
                                ,P_Pkg_Line            In Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--  
   Procedure Chk_Insrt_Data (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
                            ,P_Doc_Ser    In     Sales_Order.Order_Ser%Type
                            ,P_Msg_Txt    In Out Varchar2
                            ,P_Pkg_Line   In Out Varchar2
                            ,P_Pst_F_Br   In     Number Default
                                                                 );                                                                    
--##-----------------------------------------------------------------------------------------------------##-- 
  Procedure Chk_Credit_Limit (  P_Chk_CrDT_LMIT  In    NUMBER --## 0 UNCHECKCredit_Limit  1- CHECK Credit_Limit
                              ,P_Doc_Date       In    Ias_Bill_Mst.Bill_Date%Type Default Null
                              ,P_Doc_Ser        In    Ias_Bill_Mst.BILL_Ser%Type
                              ,P_Bill_Doc_Type  In     Ias_Bill_Mst.BILL_Ser%Type                            
                              ,P_Ac_Code        In     Account.A_Code%Type Default Null
                              ,P_Ac_Code_Dtl    In     Ias_Bill_Mst.Ac_Code_Dtl%Type Default Null
                              ,P_C_CODE         In     Ias_Bill_Mst.C_CODE%Type Default Null
                              ,P_Cash_No        In     Ias_Bill_Mst.Cash_No%Type Default Null                              
                              ,P_Brn_No         In     Ias_Bill_Mst.Brn_No%Type Default Null
                              ,P_User_No        In     User_R.U_Id%Type Default Null
                              ,P_Cur_Code       In     Ias_Bill_Mst.Bill_Currency%Type Default Null
                              ,P_CUR_RATE       In     NUMBER
                              ,P_Frc_No         In     Number Default 2
                              ,P_Stand_By       In     Number Default 0                              
                              ,P_Fld_Doc_Ser    In     Varchar2
                              ,P_Fld_MST_AMT    In     Varchar2
                              ,P_Tbl_Mst_Nm     In     Varchar2
                              ,P_Lng_No         In     Number Default 1
                              ,P_Msg_Txt        Out Varchar2
                              ,P_ERR_NO         Out Varchar2
                              ,P_Pkg_Nm         Out Varchar2);

                            
END ARS_CSS_PKG;
/
CREATE PACKAGE ARS_MOBILE_TRNS_PKG IS

G_LNG_NO                      IAS_SYS.LANG_DEF.LANG_NO%TYPE;
G_SYS_NO                      NUMBER;
G_LNG_DFLT                    IAS_SYS.LANG_DEF.LANG_DFLT%TYPE;
G_USR_NO                      USER_R.U_ID%TYPE;
G_LOC_CUR_CODE                EX_RATE.CUR_CODE%TYPE;
G_CUR_CODE                    EX_RATE.CUR_CODE%TYPE;
G_CUR_RATE                    EX_RATE.CUR_RATE%TYPE;
G_STK_CUR_CODE                EX_RATE.CUR_CODE%TYPE:=IAS_GEN_PKG.GET_STK_CUR;
G_STK_RATE                    EX_RATE.CUR_RATE%TYPE:=IAS_GEN_PKG.GET_CUR_RATE(P_ACY=>G_STK_CUR_CODE);
G_BRN_USR                     IAS_POST_MST.BRN_USR%TYPE;
G_BRN_YEAR                    IAS_POST_MST.BRN_YEAR%TYPE;
G_BRN_NO                      IAS_POST_MST.BRN_NO%TYPE;
G_CMP_NO                      IAS_POST_MST.CMP_NO%TYPE;
G_DOC_TYP                     IAS_POST_MST.DOC_TYPE%TYPE;
G_DOC_SER                     IAS_POST_MST.DOC_SER%TYPE;
G_DOC_NO                      IAS_POST_MST.DOC_NO%TYPE;
G_TAX_NO                      GNR_TAX_CODE_MST.TAX_NO%TYPE;
G_BILL_DOC_TYPE               IAS_BILL_MST.BILL_DOC_TYPE%TYPE;
G_CLC_TYP_NO_TAX              GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE;
G_CALC_VAT_AMT_TYPE           NUMBER(5);
G_AD_DATE                    DATE;
G_AD_U_ID                     USER_R.U_ID%TYPE;
G_AD_TRMNL_NM                 IAS_POST_MST.AD_TRMNL_NM%TYPE;
G_W_CODE                      WAREHOUSE_DETAILS.W_CODE%TYPE;
G_DOC_DATE                    DATE;
G_JV_TYPE                     IAS_POST_MST.JV_TYPE%TYPE;
G_NO_OF_DECIMAL_AR            NUMBER(5);
G_USE_VAT                     NUMBER(1);
G_USE_PRICE_INCLUDE_VAT       NUMBER(1);
G_AR_WC_TYPE                  NUMBER(5);
G_USE_OUT_BILLS               NUMBER(1);
G_ADD_PORDER_QTY              NUMBER(5);
G_CC_AVAIL                    NUMBER(5); 
G_USE_PROJECTS                NUMBER(5); 
G_USE_ACTVTY                  NUMBER(5);
G_ARALT                       NUMBER;
G_APALT                       NUMBER;
G_COSTING_TYPE                NUMBER(2);
G_WTAVG_TYPE                  NUMBER(2);
G_AR_CST_TYPE                  NUMBER(5);
G_AR_PJ_TYPE                  NUMBER(5);
G_AR_ACTV_TYPE                NUMBER(5);
G_AR_SORDER_SERIAL            IAS_PARA_AR.AR_SORDER_SERIAL%TYPE;
G_DOC_GEN_AR                  IAS_PARA_AR.DOC_GEN_AR%TYPE;
G_DISC_COUNT                  NUMBER(1);
G_SHOW_DISC_PER_ITEMS_AR      NUMBER(1);
G_MAX_PRD_EXP_DATE_SO_DAY     NUMBER(5);
G_INV_USE_WGHT_SYS            NUMBER(5);
G_INV_MSUR_ARGMNT_TYP         NUMBER(5);
G_INV_ARGMNT_FCTR             NUMBER(5);
G_CHECK_LMT_SORDER            NUMBER(1);
G_MAX_PRD_EXP_DATE_QUOT_DAY    NUMBER(5);
G_INV_ITM_CST_TYP             NUMBER(5);
G_SI_REPCODE_MANDTRY          NUMBER(1);
G_EXTERNAL_POST               IAS_BILL_MST.EXTERNAL_POST%TYPE;
---G_INV_SHW_ARGMNT_NO_IN_TRNS   NUMBER(5);
G_CC_CODE                  IAS_POST_DTL.CC_CODE%TYPE;
G_PJ_NO                    IAS_POST_DTL.PJ_NO%TYPE;
G_ACTV_NO                  IAS_POST_DTL.ACTV_NO%TYPE;
G_APPRVD_FLG               SALES_ORDER.APPROVED%TYPE;
G_APPRVD_SER               S_APPRVD_MOV.DOC_SER%TYPE;
G_AC_CODE_CSH              ACCOUNT.A_CODE%TYPE;
G_AC_CODE_BNK              ACCOUNT.A_CODE%TYPE;
G_AC_CODE_CST              ACCOUNT.A_CODE%TYPE;
G_AC_CODE_VND              ACCOUNT.A_CODE%TYPE;
G_AC_CODE                  ACCOUNT.A_CODE%TYPE;
G_AC_CODE_DTL              ACCOUNT.A_CODE%TYPE;
G_AC_DTL_TYP               ACCOUNT.AC_DTL_TYP%TYPE;
G_C_CODE                   CUSTOMER.C_CODE%TYPE;
G_REF_NO                   IAS_POST_DTL.REF_NO%TYPE;
G_RCRD_NO                  IAS_POST_DTL.RCRD_NO%TYPE;
G_REP_CODE                 SALES_MAN.REPRS_CODE%TYPE;
G_USE_BATCH_NO             NUMBER;
G_USE_EXPIRE_DATE          NUMBER;
G_DOC_AMT                  NUMBER;
G_SO_TYPE                  SALES_ORDER.SO_TYPE%TYPE;
G_CLC_VAT_PRICE_TYP        SALES_ORDER.CLC_VAT_PRICE_TYP%TYPE;
G_SI_TYPE                  IAS_BILL_MST.SI_TYPE%TYPE;
--G_ALLW_EXCD_ACCNT_LMT      NUMBER(5);
G_INPT_NM                  VARCHAR2(400);
G_RSRV_NO  IAS_RESERVE_MST.DOC_NO%TYPE;
G_RSRV_SER IAS_RESERVE_MST.DOC_SER%TYPE;
--##-----------------------------------------------------------------------------------------------------##--
   Type Tp_Qt_Prm_Rec   Is Record
          (  Qt_Prm_Type              Number,
             Qt_Prm_Method            Number,
             Qt_Prm_Itm_Type          Number, 
             Qt_No                    Number,
             Qt_Ser                   Number,
             Qt_Icode                 Varchar2(30),
             Qt_Itm_Unt               Varchar2(10),
             Qt_Rcrd_No               Number,
             Dis_Per                  Number,
             Dis_Amt                  Number,
             Price                    Number,                              
             Fqty                     Number,
             Card_Amt                 Number,
             Qt_Rem_Qty               Number,                              
             Apprvd_Freeqty_As_Dscnt  Number                                  
           );                               
--##---------------------------------------------------------------------------------##--             
   Type Tp_Qt_Prm_Rfc Is Ref Cursor ;               
--##---------------------------------------------------------------------------------##--
   G_Qt_Prm  Tp_Qt_Prm_Rec ;                          
--##---------------------------------------------------------------------------------##--                        
   Type Tp_Qt_Prm_Tbl   Is Table Of Tp_Qt_Prm_Rec ; 
--##-----------------------------------------------------------------------------------------------------##--
 PROCEDURE  INSRT_CST_RQ_PRC(     P_LANG_NO                 IN NUMBER 
                                  ,P_C_CODE                 IN  CUSTOMER.C_CODE%TYPE
                                  ,P_C_A_NAME               IN  CUSTOMER.C_A_NAME%TYPE
                                  ,P_C_E_NAME               IN  CUSTOMER.C_E_NAME%TYPE      DEFAULT NULL                                  
                                  ,P_C_GROUP_CODE           IN  CUSTOMER.C_GROUP_CODE%TYPE  DEFAULT NULL
                                  ,P_C_ADDRESS              IN  CUSTOMER.C_ADDRESS%TYPE     DEFAULT NULL
                                  ,P_C_CLASS                IN  CUSTOMER.C_CLASS%TYPE       DEFAULT NULL
                                  ,P_C_CLass_Typ            IN  CUSTOMER.C_CLass_Typ%TYPE   DEFAULT NULL
                                  ,P_CNTRY_NO               IN  CUSTOMER.CNTRY_NO%TYPE      DEFAULT NULL
                                  ,P_PROV_NO                IN  CUSTOMER.PROV_NO%TYPE       DEFAULT NULL
                                  ,P_CITY_NO                IN  CUSTOMER.CITY_NO%TYPE       DEFAULT NULL
                                  ,P_R_CODE                 IN  CUSTOMER.R_CODE%TYPE        DEFAULT NULL
                                  ,P_REP_CODE               IN  CUSTOMER.REP_CODE%TYPE      DEFAULT NULL
                                  ,P_ROUTE_NO               IN  CUSTOMER.ROUTE_NO%TYPE      DEFAULT NULL
                                  ,P_SORTINROUTE            IN  CUSTOMER.SORTINROUTE%TYPE   DEFAULT NULL 
                                  ,P_GPS                    IN  CUSTOMER.GPS%TYPE           DEFAULT NULL
                                  ,P_C_PHONE                IN  CUSTOMER.C_PHONE%TYPE       DEFAULT NULL 
                                  ,P_C_FAX                  IN  CUSTOMER.C_FAX%TYPE         DEFAULT NULL
                                  ,P_C_BOX                  IN  CUSTOMER.C_BOX%TYPE         DEFAULT NULL
                                  ,P_C_PERSON               IN  CUSTOMER.C_PERSON%TYPE      DEFAULT NULL 
                                  ,P_C_E_MAIL               IN  CUSTOMER.C_E_MAIL%TYPE      DEFAULT NULL
                                  ,P_C_WEB_SITE             IN  CUSTOMER.C_WEB_SITE%TYPE    DEFAULT NULL
                                  ,P_C_MOBILE               IN  CUSTOMER.C_MOBILE%TYPE      DEFAULT NULL
                                  ,P_RESPONS_PERSON         IN  CUSTOMER.RESPONS_PERSON%TYPE DEFAULT NULL                                  
                                  ,P_C_TAX_CODE             IN  CUSTOMER.C_TAX_CODE%TYPE    DEFAULT NULL
                                  ,P_CLC_VAT_PRICE_TYP      IN  CUSTOMER.CLC_VAT_PRICE_TYP%TYPE    DEFAULT NULL                 
                                  ,P_LATITUDE               IN  CUSTOMER.LATITUDE%TYPE      DEFAULT NULL
                                  ,P_LONGITUDE              IN  CUSTOMER.LONGITUDE%TYPE     DEFAULT NULL
                                  ,P_AD_U_ID                IN  CUSTOMER.AD_U_ID%TYPE                                                            
                                  ,P_AD_TRMNL_NM            IN  CUSTOMER.AD_TRMNL_NM%TYPE   DEFAULT NULL
                                  ,P_CST_CODE               OUT  CUSTOMER.C_CODE%TYPE);
--##------------------------------------------------------------------------------------------------------------------------------##-- 
 PROCEDURE  INSRT_CST_PRC( P_LANG_NO                 IN NUMBER 
                                  ,P_C_CODE                 IN  CUSTOMER.C_CODE%TYPE
                                  ,P_C_A_NAME               IN  CUSTOMER.C_A_NAME%TYPE
                                  ,P_C_E_NAME               IN  CUSTOMER.C_E_NAME%TYPE      DEFAULT NULL                                  
                                  ,P_C_GROUP_CODE           IN  CUSTOMER.C_GROUP_CODE%TYPE  DEFAULT NULL
                                  ,P_C_ADDRESS              IN  CUSTOMER.C_ADDRESS%TYPE     DEFAULT NULL
                                  ,P_C_CLASS                IN  CUSTOMER.C_CLASS%TYPE       DEFAULT NULL
                                  ,P_C_CLass_Typ            IN  CUSTOMER.C_CLass_Typ%TYPE   DEFAULT NULL
                                  ,P_CNTRY_NO               IN  CUSTOMER.CNTRY_NO%TYPE      DEFAULT NULL
                                  ,P_PROV_NO                IN  CUSTOMER.PROV_NO%TYPE       DEFAULT NULL
                                  ,P_CITY_NO                IN  CUSTOMER.CITY_NO%TYPE       DEFAULT NULL
                                  ,P_R_CODE                 IN  CUSTOMER.R_CODE%TYPE        DEFAULT NULL
                                  ,P_REP_CODE               IN  CUSTOMER.REP_CODE%TYPE      DEFAULT NULL
                                  ,P_ROUTE_NO               IN  CUSTOMER.ROUTE_NO%TYPE      DEFAULT NULL
                                  ,P_SORTINROUTE            IN  CUSTOMER.SORTINROUTE%TYPE   DEFAULT NULL 
                                  ,P_GPS                    IN  CUSTOMER.GPS%TYPE           DEFAULT NULL
                                  ,P_C_PHONE                IN  CUSTOMER.C_PHONE%TYPE       DEFAULT NULL 
                                  ,P_C_FAX                  IN  CUSTOMER.C_FAX%TYPE         DEFAULT NULL
                                  ,P_C_BOX                  IN  CUSTOMER.C_BOX%TYPE         DEFAULT NULL
                                  ,P_C_PERSON               IN  CUSTOMER.C_PERSON%TYPE      DEFAULT NULL 
                                  ,P_C_E_MAIL               IN  CUSTOMER.C_E_MAIL%TYPE      DEFAULT NULL
                                  ,P_C_WEB_SITE             IN  CUSTOMER.C_WEB_SITE%TYPE    DEFAULT NULL
                                  ,P_C_MOBILE               IN  CUSTOMER.C_MOBILE%TYPE      DEFAULT NULL
                                  ,P_RESPONS_PERSON         IN  CUSTOMER.RESPONS_PERSON%TYPE DEFAULT NULL                                  
                                  ,P_C_TAX_CODE             IN  CUSTOMER.C_TAX_CODE%TYPE    DEFAULT NULL
                                  ,P_CLC_VAT_PRICE_TYP      IN  CUSTOMER.CLC_VAT_PRICE_TYP%TYPE    DEFAULT NULL                 
                                  ,P_LATITUDE               IN  CUSTOMER.LATITUDE%TYPE      DEFAULT NULL
                                  ,P_LONGITUDE              IN  CUSTOMER.LONGITUDE%TYPE     DEFAULT NULL
                                  ,P_AD_U_ID                IN  CUSTOMER.AD_U_ID%TYPE                                                           
                                  ,P_AD_TRMNL_NM            IN  CUSTOMER.AD_TRMNL_NM%TYPE   DEFAULT NULL
                                  ,P_UP_U_ID                IN  CUSTOMER.UP_U_ID%TYPE       DEFAULT NULL
                                  ,P_UP_TRMNL_NM            IN  CUSTOMER.AD_TRMNL_NM%TYPE   DEFAULT NULL
                                  ,P_CST_CODE               OUT  CUSTOMER.C_CODE%TYPE
                                  ,P_GNRT_CST_FLG           IN NUMBER                       DEFAULT  1  --## 1 GENERT NEW CST_CODE ,--## 0 THE SAME CST_CODE SENT
                                  ,P_UPD_FLG                IN NUMBER                       DEFAULT  0  --##  0 insert NEW CST_CODE ,--##  0 update customer data
                                  );
--##------------------------------------------------------------------------------------------------------------------------------##-- 
PROCEDURE GET_PRMTR_PRC (   P_SYS_NO   IN NUMBER                              DEFAULT NULL,
                            P_DOC_TYP  IN IAS_POST_MST.DOC_TYPE%TYPE           DEFAULT NULL,
                            P_BRN_NO   IN S_BRN.BRN_NO%TYPE                    DEFAULT NULL,
                            P_USR_NO   IN USER_R.U_ID%TYPE                     DEFAULT NULL,
                            P_LNG_NO   NUMBER                                  DEFAULT NULL) ;
--##-----------------------------------------------------------------------------------------------------##--
PROCEDURE INSRT_DOC_PRC(  P_DOC_TYP    IN  IAS_POST_MST.DOC_TYPE%TYPE,
                          P_XML        IN  CLOB);                                                
--##-----------------------------------------------------------------------------------------------------##--
PROCEDURE INSRT_SALES_ORDER (
                                 P_SYS_NO               IN NUMBER
                                ,P_DOC_TYPE             IN NUMBER
                                ,P_DOC_NO               IN SALES_ORDER.ORDER_NO%TYPE                   DEFAULT NULL
                                ,P_DOC_SER               IN SALES_ORDER.ORDER_SER%TYPE                   DEFAULT NULL
                                ,P_DOC_DATE               IN SALES_ORDER.ORDER_DATE%TYPE                   DEFAULT NULL
                                ,P_CUR_CODE               IN SALES_ORDER.ORDER_CUR%TYPE                   DEFAULT NULL
                                ,P_CUR_RATE               IN SALES_ORDER.CUR_RATE%TYPE                   DEFAULT NULL
                                ,P_SO_TYPE               IN SALES_ORDER.SO_TYPE%TYPE                   DEFAULT NULL
                                ,P_C_CODE               IN SALES_ORDER.C_CODE%TYPE                   DEFAULT NULL
                                ,P_C_NAME               IN SALES_ORDER.C_NAME%TYPE                   DEFAULT NULL
                                ,P_A_DESC               IN SALES_ORDER.A_DESC%TYPE                   DEFAULT NULL
                                ,P_CC_CODE               IN SALES_ORDER.CC_CODE%TYPE                   DEFAULT NULL
                                ,P_PJ_NO               IN SALES_ORDER.PJ_NO%TYPE                   DEFAULT NULL
                                ,P_ACTV_NO               IN SALES_ORDER.ACTV_NO%TYPE                   DEFAULT NULL
                                ,P_W_CODE               IN SALES_ORDER.W_CODE%TYPE                   DEFAULT NULL
                                ,P_REP_CODE               IN SALES_ORDER.REP_CODE%TYPE                   DEFAULT NULL
                                ,P_EMP_NO               IN SALES_ORDER.EMP_NO%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT               IN SALES_ORDER.VAT_AMT%TYPE                   DEFAULT NULL
                                ,P_ORDER_AMT               IN SALES_ORDER.ORDER_AMT%TYPE                   DEFAULT NULL
                                ,P_DISC_AMT               IN SALES_ORDER.DISC_AMT%TYPE                   DEFAULT NULL
                                ,P_DISC_AMT_DTL               IN SALES_ORDER.DISC_AMT_DTL%TYPE                   DEFAULT NULL
                                ,P_DISC_AMT_MST               IN SALES_ORDER.DISC_AMT_MST%TYPE                   DEFAULT NULL
                                ,P_OTHR_AMT               IN SALES_ORDER.OTHR_AMT%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_OTHR               IN SALES_ORDER.VAT_AMT_OTHR%TYPE                   DEFAULT NULL
                                ,P_DISC_AMT_MST_VAT               IN SALES_ORDER.DISC_AMT_MST_VAT%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_DISC_MST               IN SALES_ORDER.VAT_AMT_DISC_MST%TYPE                   DEFAULT NULL
                                ,P_DISC_AMT_AFTR_VAT               IN SALES_ORDER.DISC_AMT_AFTR_VAT%TYPE                   DEFAULT NULL
                                ,P_CASH_NO               IN SALES_ORDER.CASH_NO%TYPE                   DEFAULT NULL
                                ,P_CLC_TYP_NO_TAX               IN SALES_ORDER.CLC_TYP_NO_TAX%TYPE                   DEFAULT NULL
                                ,P_CLC_VAT_PRICE_TYP               IN SALES_ORDER.CLC_VAT_PRICE_TYP%TYPE                   DEFAULT NULL
                                ,P_REF_DOC_NO               IN SALES_ORDER.REF_DOC_NO%TYPE                   DEFAULT NULL
                                ,P_REF_DOC_DATE               IN SALES_ORDER.REF_DOC_DATE%TYPE                   DEFAULT NULL
                                ,P_PREPARE_DATE               IN SALES_ORDER.PREPARE_DATE%TYPE                   DEFAULT NULL
                                ,P_REC_DEALER_DATE               IN SALES_ORDER.REC_DEALER_DATE%TYPE                   DEFAULT NULL
                                ,P_DELIVERY_DATE               IN SALES_ORDER.DELIVERY_DATE%TYPE                   DEFAULT NULL
                                ,P_R_CODE               IN SALES_ORDER.R_CODE%TYPE                   DEFAULT NULL
                                ,P_DRIVER_NO               IN SALES_ORDER.DRIVER_NO%TYPE                   DEFAULT NULL
                                ,P_BILL_DOC_TYPE               IN SALES_ORDER.BILL_DOC_TYPE%TYPE                   DEFAULT NULL
                                ,P_BILL_DUE_DATE               IN SALES_ORDER.BILL_DUE_DATE%TYPE                   DEFAULT NULL
                                ,P_ORDER_EXPIRE_DATE               IN SALES_ORDER.ORDER_EXPIRE_DATE%TYPE                   DEFAULT NULL
                                ,P_CHEQUE_DUE_DATE               IN SALES_ORDER.CHEQUE_DUE_DATE%TYPE                   DEFAULT NULL
                                ,P_C_CODE_CSH               IN SALES_ORDER.C_CODE_CSH%TYPE                   DEFAULT NULL
                                ,P_C_ADDRESS               IN SALES_ORDER.C_ADDRESS%TYPE                   DEFAULT NULL
                                ,P_C_MOBILE               IN SALES_ORDER.C_MOBILE%TYPE                   DEFAULT NULL
                                ,P_LATITUDE               IN SALES_ORDER.LATITUDE%TYPE                   DEFAULT NULL
                                ,P_LONGITUDE               IN SALES_ORDER.LONGITUDE%TYPE                   DEFAULT NULL
                                ,P_SI_TYPE                     IN SALES_ORDER.SI_TYPE%TYPE                   DEFAULT NULL
                                ,P_EXTERNAL_POST               IN SALES_ORDER.EXTERNAL_POST%TYPE                   DEFAULT NULL
                                ,P_FIELD1                      IN SALES_ORDER.FIELD1%TYPE                   DEFAULT NULL
                                ,P_FIELD2               IN SALES_ORDER.FIELD2%TYPE                   DEFAULT NULL
                                ,P_FIELD3               IN SALES_ORDER.FIELD3%TYPE                   DEFAULT NULL
                                ,P_FIELD4               IN SALES_ORDER.FIELD4%TYPE                   DEFAULT NULL
                                ,P_FIELD5               IN SALES_ORDER.FIELD5%TYPE                   DEFAULT NULL
                                ,P_FIELD6               IN SALES_ORDER.FIELD6%TYPE                   DEFAULT NULL
                                ,P_FIELD7               IN SALES_ORDER.FIELD7%TYPE                   DEFAULT NULL
                                ,P_FIELD8               IN SALES_ORDER.FIELD8%TYPE                   DEFAULT NULL
                                ,P_FIELD9               IN SALES_ORDER.FIELD9%TYPE                   DEFAULT NULL
                                ,P_FIELD10               IN SALES_ORDER.FIELD10%TYPE                   DEFAULT NULL
                                ,P_CMP_NO               IN SALES_ORDER.CMP_NO%TYPE                   DEFAULT NULL
                                ,P_BRN_NO               IN SALES_ORDER.BRN_NO%TYPE                   DEFAULT NULL
                                ,P_BRN_YEAR               IN SALES_ORDER.BRN_YEAR%TYPE                   DEFAULT NULL
                                ,P_BRN_USR               IN SALES_ORDER.BRN_USR%TYPE                   DEFAULT NULL
                                ,P_AD_TRMNL_NM               IN SALES_ORDER.AD_TRMNL_NM%TYPE                   DEFAULT NULL
                                ,P_AD_U_ID               IN SALES_ORDER.AD_U_ID%TYPE                   DEFAULT NULL
                                ,P_AD_DATE               IN SALES_ORDER.AD_DATE%TYPE                   DEFAULT NULL
                );
--##-----------------------------------------------------------------------------------------------------##--  
PROCEDURE INSRT_ORDER_DETAIL(    
                                 P_I_CODE               IN ORDER_DETAIL.I_CODE%TYPE                   DEFAULT NULL
                                ,P_ITM_UNT               IN ORDER_DETAIL.ITM_UNT%TYPE                   DEFAULT NULL
                                ,P_I_QTY               IN ORDER_DETAIL.I_QTY%TYPE                   DEFAULT NULL
                                ,P_P_QTY               IN ORDER_DETAIL.P_QTY%TYPE                   DEFAULT NULL
                                ,P_P_SIZE               IN ORDER_DETAIL.P_SIZE%TYPE                   DEFAULT NULL
                                ,P_FREE_QTY               IN ORDER_DETAIL.FREE_QTY%TYPE                   DEFAULT NULL
                                ,P_BARCODE               IN ORDER_DETAIL.BARCODE%TYPE                   DEFAULT NULL
                                ,P_BATCH_NO               IN ORDER_DETAIL.BATCH_NO%TYPE                   DEFAULT NULL
                                ,P_EXPIRE_DATE               IN ORDER_DETAIL.EXPIRE_DATE%TYPE                   DEFAULT NULL
                                ,P_W_CODE               IN ORDER_DETAIL.W_CODE%TYPE                   DEFAULT NULL
                                ,P_CC_CODE               IN ORDER_DETAIL.CC_CODE%TYPE                   DEFAULT NULL
                                ,P_ACTV_NO               IN ORDER_DETAIL.ACTV_NO%TYPE                   DEFAULT NULL
                                ,P_PJ_NO               IN ORDER_DETAIL.PJ_NO%TYPE                   DEFAULT NULL
                                ,P_I_PRICE               IN ORDER_DETAIL.I_PRICE%TYPE                   DEFAULT NULL
                                ,P_I_PRICE_VAT               IN ORDER_DETAIL.I_PRICE_VAT%TYPE                   DEFAULT NULL                                                               
                                ,P_MEASUR_PRICE               IN ORDER_DETAIL.MEASUR_PRICE%TYPE                   DEFAULT NULL
                                ,P_OTHR_AMT               IN ORDER_DETAIL.OTHR_AMT%TYPE                   DEFAULT NULL
                                ,P_OTHR_AMT_DISC               IN ORDER_DETAIL.OTHR_AMT_DISC%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT               IN ORDER_DETAIL.VAT_AMT%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_AFTR_DIS               IN ORDER_DETAIL.VAT_AMT_AFTR_DIS%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_BFR_DIS               IN ORDER_DETAIL.VAT_AMT_BFR_DIS%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_DIS_DTL2_VAT               IN ORDER_DETAIL.VAT_AMT_DIS_DTL2_VAT%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_DIS_DTL3_VAT               IN ORDER_DETAIL.VAT_AMT_DIS_DTL3_VAT%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_DIS_DTL_VAT               IN ORDER_DETAIL.VAT_AMT_DIS_DTL_VAT%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_DIS_MST_VAT               IN ORDER_DETAIL.VAT_AMT_DIS_MST_VAT%TYPE                   DEFAULT NULL
                                ,P_VAT_AMT_OTHR               IN ORDER_DETAIL.VAT_AMT_OTHR%TYPE                   DEFAULT NULL
                                ,P_VAT_PER               IN ORDER_DETAIL.VAT_PER%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT               IN ORDER_DETAIL.DIS_AMT%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_AFTR_VAT               IN ORDER_DETAIL.DIS_AMT_AFTR_VAT%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_DTL               IN ORDER_DETAIL.DIS_AMT_DTL%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_DTL2               IN ORDER_DETAIL.DIS_AMT_DTL2%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_DTL2_VAT               IN ORDER_DETAIL.DIS_AMT_DTL2_VAT%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_DTL3               IN ORDER_DETAIL.DIS_AMT_DTL3%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_DTL3_VAT               IN ORDER_DETAIL.DIS_AMT_DTL3_VAT%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_DTL_VAT               IN ORDER_DETAIL.DIS_AMT_DTL_VAT%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_MST               IN ORDER_DETAIL.DIS_AMT_MST%TYPE                   DEFAULT NULL
                                ,P_DIS_AMT_MST_VAT               IN ORDER_DETAIL.DIS_AMT_MST_VAT%TYPE                   DEFAULT NULL
                                ,P_DIS_PER               IN ORDER_DETAIL.DIS_PER%TYPE                   DEFAULT NULL
                                ,P_DIS_PER2               IN ORDER_DETAIL.DIS_PER2%TYPE                   DEFAULT NULL
                                ,P_DIS_PER3               IN ORDER_DETAIL.DIS_PER3%TYPE                   DEFAULT NULL
                                ,P_DOC_NO_REF               IN ORDER_DETAIL.DOC_NO_REF%TYPE                   DEFAULT NULL
                                ,P_DOC_SEQ               IN ORDER_DETAIL.DOC_SEQ%TYPE                   DEFAULT NULL
                                ,P_DOC_SEQUENCE_REF               IN ORDER_DETAIL.DOC_SEQUENCE_REF%TYPE                   DEFAULT NULL
                                ,P_DOC_SER_REF               IN ORDER_DETAIL.DOC_SER_REF%TYPE                   DEFAULT NULL
                                ,P_DOC_TYPE_REF               IN ORDER_DETAIL.DOC_TYPE_REF%TYPE                   DEFAULT NULL
                                ,P_EMP_NO               IN ORDER_DETAIL.EMP_NO%TYPE                   DEFAULT NULL
                                ,P_EXTERNAL_POST               IN ORDER_DETAIL.EXTERNAL_POST%TYPE                   DEFAULT NULL
                                ,P_FIELD_DTL1               IN ORDER_DETAIL.FIELD_DTL1%TYPE                   DEFAULT NULL
                                ,P_FIELD_DTL2               IN ORDER_DETAIL.FIELD_DTL2%TYPE                   DEFAULT NULL
                                ,P_FIELD_DTL3               IN ORDER_DETAIL.FIELD_DTL3%TYPE                   DEFAULT NULL
                                ,P_F_TIME               IN ORDER_DETAIL.F_TIME%TYPE                   DEFAULT NULL
                                ,P_T_TIME               IN ORDER_DETAIL.T_TIME%TYPE                   DEFAULT NULL
                                ,P_ITEM_DESC               IN ORDER_DETAIL.ITEM_DESC%TYPE                   DEFAULT NULL
                                ,P_I_WIDTH               IN ORDER_DETAIL.I_WIDTH%TYPE                   DEFAULT NULL
                                ,P_I_HEIGHT               IN ORDER_DETAIL.I_HEIGHT%TYPE                   DEFAULT NULL
                                ,P_I_LENGTH               IN ORDER_DETAIL.I_LENGTH%TYPE                   DEFAULT NULL
                                ,P_I_NUMBER               IN ORDER_DETAIL.I_NUMBER%TYPE                   DEFAULT NULL
                                ,P_ARGMNT_NO               IN ORDER_DETAIL.ARGMNT_NO%TYPE                   DEFAULT NULL
                                ,P_RCRD_NO               IN ORDER_DETAIL.RCRD_NO%TYPE                   DEFAULT NULL
                                ,P_REC_ATTCH               IN ORDER_DETAIL.REC_ATTCH%TYPE                   DEFAULT NULL
                                ,P_RESERVED               IN ORDER_DETAIL.RESERVED%TYPE                   DEFAULT NULL
                                ,P_RES_DATE               IN ORDER_DETAIL.RES_DATE%TYPE                   DEFAULT NULL
                                ,P_RES_QTY               IN ORDER_DETAIL.RES_QTY%TYPE                   DEFAULT NULL
                               -- ,P_RSRVD_QTY               IN ORDER_DETAIL.RSRVD_QTY%TYPE                   DEFAULT NULL
                ) ;
--##-----------------------------------------------------------------------------------------------------##--                 
   PROCEDURE CHK_INPT_DATA ( P_INPT_TYP     IN VARCHAR2,
                           P_INPT_CODE1   IN VARCHAR2,
                           P_INPT_CODE2   IN VARCHAR2       DEFAULT NULL,
                           P_INPT_CODE3   IN VARCHAR2       DEFAULT NULL,
                           P_INPT_CODE4   IN VARCHAR2       DEFAULT NULL,
                           P_LNG_DFLT     IN NUMBER         DEFAULT 1, 
                           P_INPT_NM      IN OUT VARCHAR2,
                           P_MSG_NO       IN OUT NUMBER );
--##-----------------------------------------------------------------------------------------------------##-- 
PROCEDURE INSRT_GNR_RQ_TAX_ITM_MOVMNT (     
                                 P_DOC_SEQ              IN GNR_RQ_TAX_ITM_MOVMNT.DOC_SEQUENCE%TYPE              DEFAULT NULL    
                                ,P_TAX_NO               IN GNR_RQ_TAX_ITM_MOVMNT.TAX_NO%TYPE                    DEFAULT NULL
                                ,P_CLC_TYP_NO_TAX       IN GNR_RQ_TAX_ITM_MOVMNT.CLC_TYP_NO%TYPE                DEFAULT NULL      
                                ,P_TAX_PRCNT            IN GNR_RQ_TAX_ITM_MOVMNT.TAX_PRCNT%TYPE                 DEFAULT 0
                                ,P_TAX_AMT              IN GNR_RQ_TAX_ITM_MOVMNT.TAX_AMT%TYPE                   DEFAULT 0      
                                ,P_I_CODE             IN GNR_RQ_TAX_ITM_MOVMNT.I_CODE%TYPE                  DEFAULT NULL
                                ,P_ITM_UNT              IN GNR_RQ_TAX_ITM_MOVMNT.ITM_UNT%TYPE                   DEFAULT NULL         ) ;
--##-----------------------------------------------------------------------------------------------------##--                                 
PROCEDURE GET_DOC_NO(P_DOC_TYP IN NUMBER); 
--##-----------------------------------------------------------------------------------------------------##--  
 PROCEDURE GET_DOC_SER(P_DOC_TYP IN NUMBER);   
--##-----------------------------------------------------------------------------------------------------##-- 
PROCEDURE CHK_DOC_NO(P_DOC_TYP IN NUMBER,
                     P_DOC_NO  IN IAS_POST_MST.DOC_NO%TYPE);   
--##-----------------------------------------------------------------------------------------------------##--                      
PROCEDURE CHK_ACCNT (    P_CUR_CODE              IN EX_RATE.CUR_CODE%TYPE
                        ,P_CUR_RATE              IN EX_RATE.CUR_RATE%TYPE                   DEFAULT NULL
                        ,P_STK_RATE              IN EX_RATE.CUR_RATE%TYPE                   DEFAULT NULL
                        ,P_CASH_NO               IN CASH_IN_HAND.CASH_NO%TYPE               DEFAULT NULL
                        ,P_BANK_NO               IN CASH_AT_BANK.BANK_NO%TYPE               DEFAULT NULL                               
                        ,P_C_CODE                IN CUSTOMER.C_CODE%TYPE                    DEFAULT NULL                                
                        ,P_AC_CODE               IN IAS_POST_DTL.A_CODE%TYPE                DEFAULT NULL
                        ,P_AC_CODE_DTL           IN IAS_POST_DTL.AC_CODE_DTL%TYPE           DEFAULT NULL                                
                        ,P_AC_DTL_TYP            IN IAS_POST_DTL.AC_DTL_TYP%TYPE            DEFAULT NULL                                
                        ,P_V_CODE                IN V_DETAILS.V_CODE%TYPE                   DEFAULT NULL
                        ,P_BILL_DOC_TYPE         IN IAS_BILL_MST.BILL_DOC_TYPE%TYPE         DEFAULT NULL
                        ,P_DOC_AMT               IN NUMBER                                  DEFAULT NULL
                        ,P_MSG_NO                IN OUT NUMBER  )  ;
--##-----------------------------------------------------------------------------------------------------##--
PROCEDURE CHK_GNR_DATA (  P_BRN_NO                  IN IAS_BILL_MST.BRN_NO%TYPE           DEFAULT NULL,
                          P_AD_U_ID                 IN IAS_BILL_MST.AD_U_ID%TYPE          DEFAULT NULL,
                          P_EMP_NO                  IN IAS_BILL_MST.EMP_NO%TYPE           DEFAULT NULL,
                          P_REP_CODE                IN IAS_BILL_MST.REP_CODE%TYPE         DEFAULT NULL,
                          P_COL_NO                  IN IAS_BILL_MST.COL_NO%TYPE           DEFAULT NULL,                         
                          P_R_CODE                  IN IAS_BILL_MST.R_CODE%TYPE           DEFAULT NULL,                         
                          P_W_CODE                  IN IAS_BILL_MST.W_CODE%TYPE           DEFAULT NULL,
                          P_CLC_TYP_NO_TAX          IN IAS_BILL_MST.CLC_TYP_NO_TAX%TYPE   DEFAULT NULL
                         ) ;
--##-----------------------------------------------------------------------------------------------------##-- 
PROCEDURE CHK_ITM  ( P_I_CODE               IN IAS_ITM_MST.I_CODE%TYPE          
                    ,P_ITM_UNT               IN IAS_BILL_DTL.ITM_UNT%TYPE           
                    ,P_P_SIZE                IN OUT IAS_BILL_DTL.P_SIZE%TYPE
                    ,P_I_QTY                 IN IAS_BILL_DTL.I_QTY%TYPE                     DEFAULT NULL
                    ,P_FREE_QTY              IN IAS_BILL_DTL.FREE_QTY%TYPE                  DEFAULT NULL
                    ,P_RES_QTY               IN IAS_BILL_DTL.I_QTY%TYPE                     DEFAULT NULL
                    ,P_I_PRICE               IN IAS_BILL_DTL.I_PRICE%TYPE                   DEFAULT NULL
                    ,P_STK_COST              IN IAS_BILL_DTL.STK_COST%TYPE                  DEFAULT NULL
                    ,P_I_PRICE_VAT           IN IAS_BILL_DTL.I_PRICE_VAT%TYPE               DEFAULT NULL
                    ,P_MEASUR_PRICE          IN IAS_BILL_DTL.MEASUR_PRICE%TYPE              DEFAULT NULL
                    ,P_DIS_PER               IN IAS_BILL_DTL.DIS_PER%TYPE                   DEFAULT NULL
                    ,P_DIS_AMT_DTL           IN IAS_BILL_DTL.DIS_AMT_DTL%TYPE               DEFAULT NULL
                    ,P_DIS_PER2              IN IAS_BILL_DTL.DIS_PER2%TYPE                  DEFAULT NULL
                    ,P_DIS_AMT_DTL2          IN IAS_BILL_DTL.DIS_AMT_DTL2%TYPE              DEFAULT NULL
                    ,P_DIS_PER3              IN IAS_BILL_DTL.DIS_PER3%TYPE                  DEFAULT NULL
                    ,P_DIS_AMT_DTL3          IN IAS_BILL_DTL.DIS_AMT_DTL3%TYPE              DEFAULT NULL                    
                    ,P_DIS_AMT_MST           IN IAS_BILL_DTL.DIS_AMT_MST%TYPE               DEFAULT NULL                   
                    ,P_W_CODE                IN IAS_BILL_DTL.W_CODE%TYPE                    DEFAULT NULL
                    ,P_EXPIRE_DATE           IN IAS_BILL_DTL.EXPIRE_DATE%TYPE               DEFAULT NULL
                    ,P_BATCH_NO              IN IAS_BILL_DTL.BATCH_NO%TYPE                  DEFAULT NULL                     
                    ,P_I_LENGTH              IN IAS_BILL_DTL.I_LENGTH%TYPE                  DEFAULT NULL
                    ,P_I_WIDTH               IN IAS_BILL_DTL.I_WIDTH%TYPE                   DEFAULT NULL
                    ,P_I_HEIGHT              IN IAS_BILL_DTL.I_HEIGHT%TYPE                  DEFAULT NULL                  
                    ,P_ARGMNT_NO             IN IAS_BILL_DTL.ARGMNT_NO%TYPE                 DEFAULT NULL                                    
                    ,P_CHK_AVLQTY_FLG        IN NUMBER                                       DEFAULT 0) ;
--##-----------------------------------------------------------------------------------------------------##-- 
PROCEDURE CHK_SUB_LDGR (  P_MST_FLG                 IN NUMBER ,  -- 1 = MST ,0 = DTL 
                          P_CC_CODE                 IN COST_CENTERS.CC_CODE%TYPE,
                          P_PJ_NO                   IN IAS_PROJECTS.PJ_NO%TYPE,
                          P_ACTV_NO                 IN IAS_ACTVTY.ACTV_NO%TYPE                           ) ;
--##-----------------------------------------------------------------------------------------------------##-- 
PROCEDURE CHK_AVL_QTY (   P_I_CODE        IN ITEM_MOVEMENT.I_CODE%TYPE 
                     ,P_P_SIZE        IN ITEM_MOVEMENT.P_SIZE%TYPE
                     ,P_I_QTY         IN ITEM_MOVEMENT.I_QTY%TYPE
                     ,P_FREE_QTY      IN ITEM_MOVEMENT.FREE_QTY%TYPE
                     ,P_RES_QTY       IN ITEM_MOVEMENT.I_QTY%TYPE             
                     ,P_W_CODE        IN ITEM_MOVEMENT.W_CODE%TYPE 
                     ,P_EXPIREDATE    IN ITEM_MOVEMENT.EXPIRE_DATE%TYPE 
                     ,P_BATCHNO       IN ITEM_MOVEMENT.BATCH_NO%TYPE
                     ,P_RCRD_NO       IN NUMBER 
                     ,P_USE_EXP_DATE  IN NUMBER
                     ,P_USE_BATCH_NO  IN NUMBER
                     ,P_SERVICE_ITM   IN NUMBER
                     ,P_RESERVED      IN NUMBER
                     ) ;
--##-----------------------------------------------------------------------------------------------------##-- 
PROCEDURE CLR_GLBL_VAR;
--##-----------------------------------------------------------------------------------------------------##--
PROCEDURE INSRT_RESERVE_PRC( P_I_CODE         IN ITEM_MOVEMENT.I_CODE%TYPE 
                             ,P_ITM_UNT       IN ITEM_MOVEMENT.ITM_UNT%TYPE
                             ,P_P_SIZE        IN ITEM_MOVEMENT.P_SIZE%TYPE 
                             ,P_I_QTY         IN ITEM_MOVEMENT.I_QTY%TYPE                            
                             ,P_RES_QTY       IN ITEM_MOVEMENT.I_QTY%TYPE
                             ,P_W_CODE        IN ITEM_MOVEMENT.W_CODE%TYPE 
                             ,P_EXPIREDATE    IN ITEM_MOVEMENT.EXPIRE_DATE%TYPE 
                             ,P_BATCHNO       IN ITEM_MOVEMENT.BATCH_NO%TYPE 
                             ,P_RES_DATE      IN IAS_RESERVE_DTL.T_DATE%TYPE
                             ,P_ITEM_DESC     IN IAS_RESERVE_DTL.ITEM_DESC%TYPE
                             ,P_RCRD_NO       IN NUMBER                             
                             ,P_RESERVED      IN NUMBER);
--##-----------------------------------------------------------------------------------------------------##-- 
PROCEDURE CHK_INSRT_DATA ( P_DOC_TYP  IN IAS_POST_MST.DOC_TYPE%TYPE,
                           P_DOC_SER  IN SALES_ORDER.ORDER_SER%TYPE );
--##-----------------------------------------------------------------------------------------------------##--                                                                 
Function Get_Qt_Prm  (   P_Date                    In  Date,
                          P_Bill_Ser                In  Number,
                          P_A_Cy                    In  Varchar2,
                          P_Icode                   In  Varchar2,
                          P_ItmUnt                  In  Varchar2,
                          P_Wcode                   In  Number,
                          P_Batch_No                In  Varchar2,
                          P_Exp_Date                In  Date,
                          P_Iqty                    In  Number,
                          P_P_Size                  In  Number,
                          P_Qt_Free_Qty             In  Number,
                          P_Qt_Dis_Per              In  Number,
                          P_Qt_Dis_Amt_Dtl          In  Number,
                          P_Rcrd_No                 In  Number,
                          P_IPrice                  In  Number,
                          P_Bill_Amt                In  Number,
                          P_Bill_Rate               In  Number,
                          P_Bill_Doc_Type           In  Number Default Null ,
                          P_C_Code                  In  Varchar2,
                          P_C_Group_Code            In  Number,
                          P_C_Class                 In  Number, 
                          P_C_Degree                In  Number,
                          P_C_Code_Csh              In  Varchar2,
                          P_Doc_Seq_Tmp             In  Number,
                          P_No_Of_Dcml              In  Number,
                          P_Usr_No                  In  Number)  Return Tp_Qt_Prm_Tbl Pipelined;
--##-----------------------------------------------------------------------------------------------------##--- 
                          
END ARS_MOBILE_TRNS_PKG;
/
CREATE PACKAGE AR_DOC_SQ_PKG
AS
   FUNCTION GET_DOC_TYP_SERIAL (P_DOC_TYP IN NUMBER)
      RETURN NUMBER;

   FUNCTION GET_DOC_NO (
      P_DOC_TYP       IN   NUMBER, --## 4 sales--  5 SALEs RETURN-- 52 QUOTATION --53 Sales_Order
      P_PAY_TYP       IN   NUMBER DEFAULT NULL,    
      P_BRN_YEAR      IN   NUMBER,
      P_BRN_NO        IN   S_BRN.BRN_NO%TYPE DEFAULT NULL,
      P_CC_CODE       IN   COST_CENTERS.CC_CODE%TYPE DEFAULT NULL,
      P_W_CODE        IN   WAREHOUSE_DETAILS.W_CODE%TYPE DEFAULT NULL,
      P_TYP_NO        IN   NUMBER DEFAULT NULL      
   )
      RETURN NUMBER;

   FUNCTION GET_DOC_SRL (
      P_DOC_TYP       IN   NUMBER, --## 4 sales--  5 SALEs RETURN-- 52 QUOTATION --53 Sales_Order
      P_PAY_TYP       IN   NUMBER DEFAULT NULL,      
      P_BRN_YEAR      IN   NUMBER,
      P_BRN_NO        IN   S_BRN.BRN_NO%TYPE DEFAULT NULL,
      P_CC_CODE       IN   COST_CENTERS.CC_CODE%TYPE DEFAULT NULL,
      P_W_CODE        IN   WAREHOUSE_DETAILS.W_CODE%TYPE DEFAULT NULL,
      P_TYP_NO        IN   NUMBER DEFAULT NULL,      
      P_DOC_NO        IN   NUMBER
   )
      RETURN NUMBER;
--------------------------------------------------------------
 FUNCTION CHK_DOC_NO (
      P_DOC_TYP       IN   NUMBER, --## 4 sales--  5 SALEs RETURN-- 52 QUOTATION --53 Sales_Order
      P_PAY_TYP       IN   NUMBER DEFAULT NULL,      
      P_BRN_YEAR      IN   NUMBER,
      P_BRN_NO        IN   S_BRN.BRN_NO%TYPE ,
      P_CC_CODE       IN   COST_CENTERS.CC_CODE%TYPE DEFAULT NULL,
      P_W_CODE        IN   WAREHOUSE_DETAILS.W_CODE%TYPE DEFAULT NULL,
      P_TYP_NO        IN   NUMBER ,
      P_DOC_NO        IN   NUMBER 
   )
      RETURN NUMBER;
--------------------------------------------------------      
END AR_DOC_SQ_PKG;
/
CREATE PACKAGE DATE_CNVRTR_PKG  IS
  FUNCTION GREGORIAN_TO_HIJRI(P_DATE DATE) RETURN DATE;
  FUNCTION HIJRI_TO_GREGORIAN(P_DATE DATE) RETURN DATE;
  FUNCTION GET_MNTH_NM (P_DATE DATE,P_LNG_NO NUMBER DEFAULT 1)  RETURN VARCHAR2;
END DATE_CNVRTR_PKG;
/
CREATE PACKAGE FAS_POSTING_PKG AS
			G_curr_bal           NUMBER;
			G_Lang_No            Pls_Integer;
			G_User_No            Pls_Integer;
			G_local_cur          VarChar2(7);
			G_cc_avail              Pls_Integer;
			G_cc_post            Pls_Integer;
			G_Pj_post            Pls_Integer;
			G_cc_code             Cost_Centers.Cc_Code%Type ;
			G_Pj_No                 Ias_Projects.Pj_No%Type   ;
			G_Actv_No            Ias_Actvty.Actv_No%Type   ;
			G_Use_Audit_Doc      NUMBER(1);
			G_FRAC_VAL           NUMBER;
			G_USE_BALANCED_CC     NUMBER (1):=0;
			G_USE_BALANCED_BRN     NUMBER (1):=0;
			--======================================================================
			/*PROCEDURE Insrt_Doc_In_Pst_Prc ( P_Post_typ    In NUMBER Default 0 ,
			                                 P_Doc_Typ     In NUMBER ,
			                                 P_Doc_Ser      In NUMBER,
			                                 P_User_No      In Pls_Integer,
			                                 P_Lang_no      In Pls_Integer,
			                                 P_Brn_no        In NUMBER) ;*/
			--======================================================================
			Procedure Get_Para ( P_Lang_no      In Pls_Integer     Default 1    ,
			                     P_User_No      In Pls_Integer                        ,
			                     P_Post_Typ In NUMBER             Default 0    );
			--======================================================================
			Procedure Post_Fas_Incrs(P_f_doc_no      In NUMBER   Default Null
			                        ,P_t_doc_no      In NUMBER   Default Null
			                        ,P_f_doc_date    In Date     Default Null
			                        ,P_t_doc_date    In Date     Default Null
			                        ,P_doc_ser       In NUMBER   Default Null
			                        ,P_jv_typ        In NUMBER   Default 1
			                        ,P_Brn_no        In NUMBER      Default Null
			                        ,P_AD_U_ID       In Number   Default Null
			                        ,P_Post_Typ      In NUMBER   Default 0    );
			--======================================================================
			Procedure Post_Fas_Depr (P_f_doc_no      In NUMBER   Default Null
			                        ,P_t_doc_no      In NUMBER   Default Null
			                        ,P_f_doc_date    In Date     Default Null
			                        ,P_t_doc_date    In Date     Default Null
			                        ,P_Doc_Ser       In NUMBER   Default Null
			                        ,P_Brn_no        In NUMBER      Default Null
			                        ,P_AD_U_ID       In Number   Default Null
			                        ,P_Post_Typ      In NUMBER   Default 0    );
			--======================================================================
			Procedure Post_Fas_Dcrs( P_f_doc_no      In NUMBER   Default Null
			                        ,P_t_doc_no      In NUMBER   Default Null
			                        ,P_f_doc_date    In Date     Default Null
			                        ,P_t_doc_date    In Date     Default Null
			                        ,P_doc_ser       In NUMBER   Default Null
			                        ,P_jv_typ        In NUMBER   Default 1
			                        ,P_Brn_no        In NUMBER      Default Null
			                        ,P_AD_U_ID       In Number   Default Null
			                        ,P_Post_Typ      In NUMBER   Default 0    );
			--======================================================================
			Procedure POST_FAS_TRNS( P_f_doc_no      In NUMBER   Default Null              
			                        ,P_t_doc_no      In NUMBER   Default Null              
			                        ,P_f_doc_date    In Date     Default Null              
			                        ,P_t_doc_date    In Date     Default Null              
			                        ,P_doc_ser       In NUMBER   Default Null              
			                        ,P_jv_typ        In NUMBER   Default 1                 
			                        ,P_Brn_no        In NUMBER   Default Null           
			                        ,P_AD_U_ID       In Number   Default Null
			                        ,P_Post_Typ      In NUMBER   Default 0    );            
			--======================================================================
			Procedure POST_FAS_RCVD( P_f_doc_no      In NUMBER   Default Null              
			                        ,P_t_doc_no      In NUMBER   Default Null              
			                        ,P_f_doc_date    In Date     Default Null              
			                        ,P_t_doc_date    In Date     Default Null              
			                        ,P_doc_ser       In NUMBER   Default Null              
			                        ,P_jv_typ        In NUMBER   Default 1                 
			                        ,P_Brn_no        In NUMBER   Default Null           
			                        ,P_AD_U_ID       In Number   Default Null
			                        ,P_Post_Typ      In NUMBER   Default 0    );            
			--======================================================================
			End FAS_POSTING_PKG;
/
CREATE PACKAGE File_Pkg authid current_user
is
  pkg_version varchar2(100) := '1.0';
  procedure set_batch_size (p_batch_size in number default 10);
  function get_batch_size return number;
  function get_file(
    p_file_path in varchar2
  ) return file_type;
  function get_file_list(
    p_directory in file_type
  ) return file_list_type;
  function get_recursive_file_list(
    p_directory in file_type
  ) return file_list_type;
  function get_path_separator return varchar2;
  function get_root_directories return file_list_type;
  function get_root_directory return file_type;
  procedure set_fs_encoding(p_fs_encoding in varchar2, p_reset_session boolean default true);
  function get_fs_encoding return varchar2;

  /* 0.9 ## Pipelined Directory Listing */
  function get_recursive_file_list_p(p_directory in file_type)
  return file_list_type pipelined;
  function get_file_list_p (p_directory in file_type)
  return file_list_type pipelined; 

  /* 1.0 ## DIRECTORY Object integration */
  function get_file(p_directory in varchar2, p_filename in varchar2) return file_type;
  function get_file(p_bfile in bfile) return file_type;
  function get_file_list(p_directory_name in varchar2) return file_list_type;
  function get_file_list_p (p_directory_name in varchar2) return file_list_type pipelined; 

  function remove_multiple_separators(p_path in varchar2) return varchar2;
  
  function File_Exsit(p_path in varchar2) return number;
End file_pkg;
/
CREATE PACKAGE  GLS_ACCNTDTL_Pkg as

 FUNCTION Get_ACCDTL_NM (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_AC_Code  (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number) RETURN VARCHAR2;
 FUNCTION Chck_ACY (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_ACY   In VARCHAR2) RETURN Number;
 FUNCTION GET_ACCDTL_BLNC(P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_ACY   In VARCHAR2) RETURN Number;
 FUNCTION Chk_Ac_ACCDTL (P_AC_code ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_Cnt_Acy (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Usr_No   In Number) RETURN NUMBER;
 FUNCTION Get_One_Acy (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Usr_no In Number) RETURN VARCHAR2; 
  FUNCTION Get_ACCNT_DTL_Brn_Conn( P_AC_Code_Dtl In GLS_ACCNT_DTL.AC_Code_Dtl%TYPE ) Return NUMBER ;
 PROCEDURE Chk_AC_CODE_DTL (  P_AC_CODE_DTL  IN GlS_ACCNT_DTL.AC_CODE_DTL%TYPE,
                              P_Ac_Code        IN ACCOUNT.A_CODE%TYPE,                     
                              P_AC_CODE_DTL_NM         IN Out ACCOUNT.A_NAME%TYPE,
                              P_Ac_Dtl_Typ     IN Out ACCOUNT.Ac_Dtl_Typ%TYPE,
                              P_Cur_code     IN EX_RATE.CUR_CODE%TYPE  DEFAULT NULL,
                              P_Lng_No     IN LANG_DEF.LANG_NO%TYPE,
                              P_Usr_No     IN USER_R.U_ID%TYPE,
                              P_Scr_Typ    IN NUMBER DEFAULT 1,
                              P_Msg_No     IN Out NUMBER  )  ;                            
                                
 
End GLS_ACCNTDTL_Pkg;
/
CREATE Package Gls_Api_Trns_Pkg  Is

 ------------------------------------------------------------------
 -- Created By Murad Al-garrash 
 -- Date : 12/05/2020
 -- Altered in 30/03/2021
 -- Created this Pakege to insert Vouchers from External Systems . 
------------------------------------------------------------------
    V_Error_Msg                   VarChar2(4000);
    V_Msg_No                      Number;
    V_SUCCESS_FLG                 Number:=0;
    V_Lang_No                     Pls_Integer;
    V_Usr_No                      Pls_Integer;
    v_local_cur                   VarChar2(7):=YS_GEN_PKG.GET_LOCAL_CUR;
    V_Ac_Sub                      Pls_Integer;
    V_Ac_Bdgt_Rprt                Pls_Integer;
    V_ac_dtl_typ                  ACCOUNT.ac_dtl_typ%Type ;
    ------------------------------------------------
    Gnr_Prmtrs                   ias_para_Gen%Rowtype;
    Gls_Prmtrs                   ias_para_Gl%Rowtype;
    Ars_Prmtrs                   ias_para_Ar%Rowtype;
    Aps_Prmtrs                   ias_para_Ap%Rowtype;
    Inv_Prmtrs                   ias_para_Inv%Rowtype;
    TRNS_PRVLGS                  Privilege_Fixed%Rowtype;
    -----------------------------------------------
     V_Cnt                         NUMBER;
     V_P_USE_TAX_IN_ADVNCE_PYMNT   Number;
     V_P_INSTL_PYMNT_GLS           Number;
    V_Use_Ah                       Number;
    V_st_cust_trns_once            Number;
    ---------------------------------------
    --light
    V_Head_Office                  Number;
    ------------------------------------------
    V_BRN_USR      NUMBER;
    V_CMP_NO       NUMBER;
    V_Brn_Year     NUMBER;
    
    ----COLUMNS
    V_Amt_F NUMBER; 
    V_CUR_Rate    number;
    V_CC_CODE     VARCHAR2(10);
    V_PJ_NO       VARCHAR2(10);
    V_ACTV_NO     VARCHAR2(10);

---------------------------------------------------------------- 
Function Get_lastError_Msg(P_SUCCESS_FLG out NUMBER) return varchar2 ;  
----------------------------------------------------------------   
Procedure Get_Prmtr_Prc ( P_Lang_no      In Pls_Integer     Default 1    
                         ,P_Usr_No        In Pls_Integer    
                         ,P_Post_Type  In NUMBER             Default 0    );
----------------------------------------------------------------                           
FUNCTION Get_SubDocTyp_Nm (P_Doc_Typ In Number 
                           ,P_SubDoc_Typ In Number 
                           ,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
                           
----------------------------------------------------------------  
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
                           ,P_Typ_No      In Number) Return Number;
----------------------------------------------------------------                           
FUNCTION  Get_Jv_Sq(P_JvType_No  In Number) Return Number ;
----------------------------------------------------------------
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
                       ,P_ac_code_dtl    In number  ) Return Number ;
----------------------------------------------------------------                         
Function Get_MaxDoc_No(P_Doc_Typ    In NUMBER 
                       ,P_Brn_No     In NUMBER 
                       ,P_AC_CODE_DTL In NUMBER
                       ,P_AC_DTL_TYP In NUMBER  
                       ,P_Typ_No     In Number DEFAULT NULL
                       ,P_REP_CODE IN SALES_MAN.REPRS_CODE%TYPE DEFAULT NULL
                       ,P_COL_NO IN COLLERCTOR.COL_NO%TYPE DEFAULT NULL) Return Number;  
------------------------------------------------------------------------------
Function Get_Doc_Srl(P_Doc_Typ    In NUMBER 
                   ,P_Brn_No     In NUMBER 
                   ,P_Brn_Year     In NUMBER 
                   ,P_AC_CODE_DTL In NUMBER
                   ,P_AC_DTL_TYP In NUMBER  
                   ,P_DOC_NO In NUMBER  
                   ,P_Typ_No     In Number DEFAULT NULL
                   ,P_REP_CODE IN SALES_MAN.REPRS_CODE%TYPE DEFAULT NULL
                   ,P_COL_NO IN COLLERCTOR.COL_NO%TYPE DEFAULT NULL) Return Number;   
------------------------------------------------------------------------------
Procedure Check_Due_Date(P_Cheq_Typ  number
                        ,P_Due_Date  Date
                        ,P_Doc_Date  Date
                        ,P_Lng_no  in number default 1 ) ;                                   
------------------------------------------------------------------
 procedure Check_Erp_system_level_Prc(P_USR_NO           IN  NUMBER  
                                    ,P_Brn_No           IN  S_BRN.BRN_NO%TYPE 
                                    ,P_Doc_Typ          IN  Number  default null  
                                    ,P_Doc_Date          IN  DATE   
                                    ,P_Lng_no  in number default 1 );
-------------------------------------------------------------------------
PROCEDURE Check_Existance(P_Usr_No   in Number
                         ,P_lng_No    in Number Default 1
                         ,P_TypeCode In Varchar2
                         ,P_Itmcode  In Varchar2
                         ,P_ScrType  In Varchar2 Default Null
                         ,P_a_code   In Varchar2 Default Null);
-------------------------------------------------------------------------
 PROCEDURE CHK_AC_Lmt( P_usr_no         Number
                     ,P_Lng_No         Number
                     ,P_DR_CR            Number               
                     ,P_DOC_DATE         DATE                 
                     ,P_AC_CODE          VARCHAR2 DEFAULT NULL
                     ,P_AC_CODE_DTL      VARCHAR2 DEFAULT NULL
                     ,P_AC_CODE_DTL_SUB      VARCHAR2 DEFAULT NULL
                     ,P_CC_CODE          VARCHAR2 DEFAULT NULL
                     ,P_PJ_NO            VARCHAR2 DEFAULT NULl
                     ,P_ACTV_NO          VARCHAR2 DEFAULT NULL
                     ,P_BRN_NO           Number   DEFAULT NULL
                     ,P_amt              Number
                     ,P_amtF             Number
                     ,P_amt_Trns         Number
                     ,P_amtF_Trns        Number
                     ,P_a_cy             varchar2      
                     ,P_STP_FLG    OUT   NUMBER     
                     ,P_UPD_FLG          Number DEFAULT 0 ) ;
-------------------------------------------------------------------------
 procedure Chck_Gnrl_Acnt_level_Prc(P_USR_NO           IN  NUMBER  
                                    ,P_Lng_No      in number default 1
                                    ,P_Brn_No           IN  S_BRN.BRN_NO%TYPE                                     
                                    ,P_Doc_Typ         IN  number    
                                    ,P_Doc_Date      in date
                                    ,P_DR_CR       IN NUMBER     -- 1 DEBIT (PAYMENT  ,0 CREDIT(RECEIVE)     
                                    ,P_Ac_Code          IN  ACCOUNT.A_CODE%TYPE    
                                    ,P_Ac_Code_dtl      IN  IAS_POST_DTL.Ac_Code_dtl%TYPE    Default Null   
                                    ,P_AC_CODE_DTL_SUB  IN  IAS_POST_DTL.AC_CODE_DTL_SUB%TYPE    Default Null 
                                    ,P_Cur_Code         IN  VARCHAR2        
                                    ,P_Cur_Rate         IN  VARCHAR2   
                                    ,P_Amt              IN  number  
                                    ,P_Amt_F            IN  number      Default Null    
                                    ,P_cc_code          IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                                    ,P_pj_no            IN  IAS_PROJECTS.PJ_NO%TYPE          Default Null   
                                    ,P_actv_no          IN  IAS_ACTVTY.ACTV_NO%TYPE          Default Null    
                                    ) ;
 --------------------------------------------------------------------------------------------
Procedure Chk_Jrnl_Post(P_Lng_No  NUMBER
                       ,P_DOC_TYP NUMBER
                       ,P_DOC_SRL NUMBER
                       ) ;  
 ------------------------------------------------------------------
PROCEDURE Crdt_Card_info_Prc( P_CrD_Card_No            CREDIT_CARD_TYPES.CR_CARD_NO%TYPE
                        ,P_BNK_NO                CASH_AT_BANK.BANK_NO%TYPE
                        ,P_CrD_Card_NM           OUT VARCHAR2 
                        ,P_CRD_comm_ac           OUT ACCOUNT.A_CODE%TYPE
                        ,P_CRD_CARD_TYP          OUT CREDIT_CARD_TYPES.CR_CARD_TYPE%TYPE
                        ,P_CRD_COMM_CALC_TYP     OUT CREDIT_CARD_TYPES.COMM_CALC_TYPE%TYPE
                        ,P_CRD_COMM_Amt          OUT NUMBER
                        ,P_CRD_COMM_PER          OUT NUMBER
                        ,P_CRD_MAX_COMM_AMT      OUT NUMBER
                        ,P_CRD_ACY_MAX_COMM      OUT EX_RATE.CUR_CODE%TYPE
                        ,P_CRD_VAT_COMM_PER      OUT NUMBER			     
                        ,P_CRD_DUE_PRD           OUT NUMBER
                        ,P_CRD_ACODE_REC_LETTER  OUT ACCOUNT.A_CODE%TYPE
                        ,P_USR_NO                    NUMBER
                        ,P_Lng_No                    NUMBER DEFAULT 1
 );
 ----------------------------------------------------
PROCEDURE GET_CRDTCARD_COMM_SUM_PRCSS(P_DOC_SRL       NUMBER                                    
                                     ,P_BNK_NO        NUMBER
                                     ,P_CrD_Card_No   NUMBER DEFAULT NULL
                                     ,P_CRD_PRSSES_NO NUMBER DEFAULT NULL
                                     ,P_USR_NO        NUMBER
                                     ,P_LNG_NO        NUMBER  DEFAULT 1
              );                                                      
------------------------------------------------------------------------------                                      
-------------------------------------------------------------------------------------------
Procedure Insrt_Rcvble_Vchr ( P_USR_NO          IN  NUMBER  
                            ,P_EXTRNL_POST      IN  NUMBER                            
                            ,P_Brn_No           IN  S_BRN.BRN_NO%TYPE  
                            ,P_VCHR_PAY_TYP     IN  NUMBER    --1 CASH ,2 BANK
                            ,P_Csh_Bnk_No       IN  number
                            ,P_BNK_TRNS_TYP     IN  NUMBER   Default Null   --0 CHEQUE ,1 TRANSFER,2 CASH DEBOSIT,3 CEEDIT CARD
                            ,P_CHEQ_TYP         IN  NUMBER   Default Null 
                            ,P_Doc_Date         IN  DATE                                                                                              
                            ,P_Due_Date         IN  DATE    Default Null 
                            ,P_RCRD_NO          IN  NUMBER    Default 1            
                            ,P_Ac_Code          IN  ACCOUNT.A_CODE%TYPE    
                            ,P_Ac_Code_dtl      IN  IAS_POST_DTL.Ac_Code_dtl%TYPE    Default Null   
                            ,P_AC_CODE_DTL_SUB  IN  IAS_POST_DTL.AC_CODE_DTL_SUB%TYPE    Default Null 
                            ,P_Cur_Code         IN  VARCHAR2                                          
                            ,P_Cur_Rate         IN  NUMBER    Default Null                                          
                            ,P_Amt              IN  NUMBER                               
                            ,P_Amt_F            IN  NUMBER                             
                            ,P_jv_Typ           IN  NUMBER    Default 1                                                                                                                                                                             
                            ,P_cc_code          IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                            ,P_pj_no            IN  IAS_PROJECTS.PJ_NO%TYPE          Default Null   
                            ,P_actv_no          IN  IAS_ACTVTY.ACTV_NO%TYPE          Default Null   
                            ,P_cc_code_Dtl      IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                            ,P_pj_no_Dtl        IN  IAS_PROJECTS.PJ_NO%TYPE          Default Null   
                            ,P_actv_no_Dtl      IN  IAS_ACTVTY.ACTV_NO%TYPE          Default Null   
                            ,P_CRD_CARD_NO      IN  VOUCHER_DETAIL.CRD_CARD_NO%TYPE          Default Null 
                            ,P_CRD_PRSSES_NO    IN  VOUCHER_DETAIL.CRD_PRSSES_NO%TYPE          Default Null                             
                            ,P_Cheque_No        IN  NUMBER                     Default Null                            
                            ,P_Note_No          IN  NUMBER                     Default Null  
                            ,P_Ref_no           IN  VARCHAR2                         Default Null                                                                                             
                            ,P_Rep_CODE         IN  NUMBER                             Default Null
                            ,P_COL_NO           IN  NUMBER                             Default Null   
                            ,P_ATTCH_NO         IN  NUMBER                             Default Null   
                            ,P_Dsc              IN  VARCHAR2                           Default Null          
                        --  ,P_Doc_no_REF       IN  NUMBER    Default Null                                             
                         -- ,P_Doc_Srl_REF      IN  NUMBER    Default Null            
                            ,P_Lng_No           IN  NUMBER                             Default 1                                                                                     
                            ,P_FIELD1           IN  VARCHAR2                         Default Null   
                            ,P_FIELD2           IN  VARCHAR2                         Default Null   
                            ,P_FIELD3           IN  VARCHAR2                         Default Null   
                            ,P_FIELD4           IN  VARCHAR2                         Default Null   
                            ,P_FIELD5           IN  VARCHAR2                         Default Null   
                            ,P_FIELD6           IN  VARCHAR2                         Default Null   
                            ,P_FIELD7           IN  VARCHAR2                         Default Null   
                            ,P_FIELD8           IN  VARCHAR2                         Default Null   
                            ,P_FIELD9           IN  VARCHAR2                         Default Null   
                            ,P_FIELD10          IN  VARCHAR2                         Default Null                           
                            ,P_AD_TRMNL_NM      In  VARCHAR2                              
                            ,P_DOC_BRN_NO       IN  S_BRN.BRN_NO%TYPE                  Default Null   
                            ,P_SUCCESS_FLG      OUT NUMBER    ---0 ERROR   1  SUCCESS
                            ,P_MSG_TXT          OUT VARCHAR2   --
                            )  ;
------------------------------------------------------------------------------------------------------------                            
 Procedure Insrt_Paymnt_Vchr ( P_USR_NO          IN  NUMBER  
                            ,P_EXTRNL_POST      IN  NUMBER                            
                            ,P_Brn_No           IN  S_BRN.BRN_NO%TYPE  
                            ,P_VCHR_PAY_TYP     IN  NUMBER    --1 CASH ,2 BANK
                            ,P_Csh_Bnk_No       IN  number
                            ,P_BNK_TRNS_TYP     IN  NUMBER   Default Null   --0 CHEQUE ,1 TRANSFER,2 CASH DEBOSIT
                            ,P_CHEQ_TYP         IN  NUMBER   Default Null 
                            ,P_Doc_Date         IN  DATE                                                                                              
                            ,P_Due_Date         IN  DATE    Default Null 
                            ,P_RCRD_NO          IN  NUMBER    Default 1            
                            ,P_Ac_Code          IN  ACCOUNT.A_CODE%TYPE    
                            ,P_Ac_Code_dtl      IN  IAS_POST_DTL.Ac_Code_dtl%TYPE    Default Null   
                            ,P_AC_CODE_DTL_SUB  IN  IAS_POST_DTL.AC_CODE_DTL_SUB%TYPE    Default Null 
                            ,P_Cur_Code         IN  VARCHAR2                                          
                            ,P_Cur_Rate         IN  NUMBER    Default Null                                          
                            ,P_Amt              IN  NUMBER                               
                            ,P_Amt_F            IN  NUMBER                             
                            ,P_jv_Typ           IN  NUMBER    Default 1                                                                                                                                                                             
                            ,P_cc_code          IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                            ,P_pj_no            IN  IAS_PROJECTS.PJ_NO%TYPE          Default Null   
                            ,P_actv_no          IN  IAS_ACTVTY.ACTV_NO%TYPE          Default Null   
                            ,P_cc_code_Dtl      IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                            ,P_pj_no_Dtl        IN  IAS_PROJECTS.PJ_NO%TYPE          Default Null   
                            ,P_actv_no_Dtl      IN  IAS_ACTVTY.ACTV_NO%TYPE          Default Null   
                            ,P_CRD_CARD_NO      IN  VOUCHER_DETAIL.CRD_CARD_NO%TYPE          Default Null 
                            ,P_CRD_PRSSES_NO    IN  VOUCHER_DETAIL.CRD_PRSSES_NO%TYPE          Default Null                             
                            ,P_Cheque_No        IN  NUMBER                     Default Null                            
                            ,P_Note_No          IN  NUMBER                     Default Null  
                            ,P_lc_no            IN  NUMBER                     Default Null 
                            ,P_Ref_no           IN  VARCHAR2                         Default Null                                                                                             
                            ,P_Rep_CODE         IN  NUMBER                             Default Null
                            ,P_COL_NO           IN  NUMBER                             Default Null   
                            ,P_ATTCH_NO         IN  NUMBER                             Default Null   
                            ,P_Dsc              IN  VARCHAR2                           Default Null          
                        --  ,P_Doc_no_REF       IN  NUMBER    Default Null                                             
                         -- ,P_Doc_Srl_REF      IN  NUMBER    Default Null            
                            ,P_Lng_No           IN  NUMBER                             Default 1                                                                                     
                            ,P_FIELD1           IN  VARCHAR2                         Default Null   
                            ,P_FIELD2           IN  VARCHAR2                         Default Null   
                            ,P_FIELD3           IN  VARCHAR2                         Default Null   
                            ,P_FIELD4           IN  VARCHAR2                         Default Null   
                            ,P_FIELD5           IN  VARCHAR2                         Default Null   
                            ,P_FIELD6           IN  VARCHAR2                         Default Null   
                            ,P_FIELD7           IN  VARCHAR2                         Default Null   
                            ,P_FIELD8           IN  VARCHAR2                         Default Null   
                            ,P_FIELD9           IN  VARCHAR2                         Default Null   
                            ,P_FIELD10          IN  VARCHAR2                         Default Null                           
                            ,P_AD_TRMNL_NM      In  VARCHAR2                              
                            ,P_DOC_BRN_NO       IN  S_BRN.BRN_NO%TYPE                  Default Null   
                            ,P_SUCCESS_FLG      OUT NUMBER    ---0 ERROR   1  SUCCESS
                            ,P_MSG_TXT          OUT VARCHAR2   --
                            );                            
 ------------------------------------------------------------------
 FUNCTION Get_RcvbleVchr_AS_XML( P_USR_NO           IN  NUMBER  
                                ,P_EXTRNL_POST      IN  NUMBER   
                                ,P_Brn_No           IN  S_BRN.BRN_NO%TYPE  
                                ,P_VCHR_PAY_TYP     IN  NUMBER    --1 CASH ,2 BANK
                                ,P_Csh_Bnk_No  IN  number
                                ,P_BNK_TRNS_TYP      IN  NUMBER   Default Null   --0 CHEQUE ,1 TRANSFER,2 CASH DEBOSIT,3 CEEDIT CARD
                                ,P_CHEQ_TYP       IN  NUMBER   Default Null 
                                ,P_Doc_Date          IN  VARCHAR2                                                                                              
                                ,P_Due_Date          IN  VARCHAR2   Default Null 
                                ,P_RCRD_NO          IN  NUMBER    Default 1            
                                ,P_Ac_Code          IN  ACCOUNT.A_CODE%TYPE    
                                ,P_Ac_Code_dtl      IN  IAS_POST_DTL.Ac_Code_dtl%TYPE    Default Null   
                                ,P_AC_CODE_DTL_SUB  IN  IAS_POST_DTL.AC_CODE_DTL_SUB%TYPE    Default Null 
                                ,P_Cur_Code         IN  VARCHAR2                                          
                                ,P_Cur_Rate         IN  NUMBER    Default Null                                         
                                ,P_Amt              IN  NUMBER                               
                                ,P_Amt_F             IN  NUMBER                             
                                ,P_jv_Typ           IN  NUMBER    Default 1                                                                                                                                                                             
                                ,P_cc_code          IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                                ,P_pj_no            IN  IAS_PROJECTS.PJ_NO%TYPE          Default Null   
                                ,P_actv_no          IN  IAS_ACTVTY.ACTV_NO%TYPE          Default Null   
                                ,P_cc_code_Dtl          IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                                ,P_pj_no_Dtl            IN  IAS_PROJECTS.PJ_NO%TYPE          Default Null   
                                ,P_actv_no_Dtl          IN  IAS_ACTVTY.ACTV_NO%TYPE          Default Null   
		                            ,P_CRD_CARD_NO      IN  VOUCHER_DETAIL.CRD_CARD_NO%TYPE          Default Null 
	                            ,P_CRD_PRSSES_NO    IN  VOUCHER_DETAIL.CRD_PRSSES_NO%TYPE          Default Null                                
                                ,P_Cheque_No        IN  NUMBER                     Default Null                            
                                ,P_Note_No        IN  NUMBER                     Default Null  
                                ,P_Ref_no           IN  VARCHAR2                         Default Null                                                                                             
                                ,P_Rep_CODE         IN  NUMBER                             Default Null
                                ,P_COL_NO           IN  NUMBER                             Default Null   
                                ,P_ATTCH_NO         IN  NUMBER                             Default Null   
                                ,P_Dsc              IN  VARCHAR2                           Default Null             
                                ,P_Lng_No           IN  NUMBER                             Default 1                                                         
                                ,P_FIELD1           IN  VARCHAR2                         Default Null   
                                ,P_FIELD2           IN  VARCHAR2                         Default Null   
                                ,P_FIELD3           IN  VARCHAR2                         Default Null   
                                ,P_FIELD4           IN  VARCHAR2                         Default Null   
                                ,P_FIELD5           IN  VARCHAR2                         Default Null   
                                ,P_FIELD6           IN  VARCHAR2                         Default Null   
                                ,P_FIELD7           IN  VARCHAR2                         Default Null   
                                ,P_FIELD8           IN  VARCHAR2                         Default Null   
                                ,P_FIELD9           IN  VARCHAR2                         Default Null   
                                ,P_FIELD10          IN  VARCHAR2                         Default Null                           
                                ,P_AD_TRMNL_NM      In  VARCHAR2                                
                                ,P_DOC_BRN_NO       IN  S_BRN.BRN_NO%TYPE                  Default Null   
                                ,P_SUCCESS_FLG      OUT NUMBER    ---0 ERROR   1  SUCCESS
                                ,P_MSG_TXT          OUT VARCHAR2   --
                                )   RETURN Varchar2;
------------------------------------------------------------------
Procedure Set_RcvbleVchr_Extrct_XML(P_XML        IN   VARCHAR2,P_XML_out         out  VARCHAR2);
------------------------------------------------------------------
Procedure Insrt_Rcvble_Vchr_Test;
Procedure Insrt_Paymnt_Vchr_Test;
 ------------------------------------------------------------------
--===================================================================================
End Gls_Api_Trns_Pkg;
/
CREATE Package GLS_DOCS_INSRT_PKG  Is
 
 ------------------------------------------------------------------
 -- Created By Murad Al-garrash 
 --  date : 17/05/2018
 -- Created this Pakege to insert Docs from external systems . 
------------------------------------------------------------------
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
                           ,P_Typ_No      In Number) Return Number;
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
                       ,P_ac_code_dtl    In number 
                        ) Return Number ;
------------------------------------------------------------------
Function Get_Flds_Tbl_Fnc(P_Tbl_Nm    In Varchar2 ) Return Varchar2 ;
---------------------------------------------------------------------
PROCEDURE CRT_V_PSTNG_DOCS_PRC(P_CALL_FRM_UPDT NUMBER DEFAULT 0 );
 ------------------------------------------------------------------
PROCEDURE Insrt_Vchr_Mst (  P_Doc_Typ        IN  NUMBER                                            ,
							P_Vchr_Pay_Typ   IN  NUMBER                                            ,
                            P_Doc_no         IN  NUMBER                                            ,
                            P_Doc_Srl        IN  NUMBER                                            ,
                            P_Doc_Date  	 IN  DATE                                              ,
                            P_TRANSFER       IN  NUMBER  	                        Default Null   ,
                            P_Chq_Typ        IN  NUMBER                             DEFAULT 0      ,                              
                            P_cc_code        IN  COST_CENTERS.CC_CODE%TYPE          Default null   ,
                            P_pj_no          IN  IAS_PROJECTS.PJ_NO%TYPE 		    Default Null   ,
                            P_actv_no        IN  IAS_ACTVTY.ACTV_NO%TYPE 		    Default Null   ,
                            P_Ref_no         IN  VARCHAR2                           Default Null   ,
                            P_Ac_Code  	     IN  ACCOUNT.A_CODE%TYPE                               ,
                            P_Ac_Code_dtl    IN  IAS_POST_DTL.Ac_Code_dtl%TYPE      Default Null   ,
                            P_Cur_Code       IN  VARCHAR2                                          ,
                            P_Cur_Rate       IN  NUMBER                                            ,
                            P_Amt            IN  NUMBER  	                        Default Null   ,
                            P_AmtF           IN  NUMBER  	                        Default Null   ,
                            P_COL_NO         IN  NUMBER                             Default Null   ,
                            P_ATTCH_NO       IN  NUMBER                             Default Null   ,
                            P_Dsc  	         IN  VARCHAR2                           Default Null   ,
                            P_COMM_PER       IN  NUMBER                             Default Null   ,
                            P_REC_NM         IN  VARCHAR2                           Default Null   ,   
                            P_STAND_BY       IN  NUMBER                             Default 0      ,
                            P_VCHR_NO_PY     IN  NUMBER                             Default 0      ,    
                            P_VCHR_DATE_PY     IN  DATE                             Default Null   , 
                            P_MOVE_CHQ_PY      IN  NUMBER                           Default 0      ,  
                            P_MOVE_CHQ_CY      IN  NUMBER                           Default 0      ,  
                            P_V_TYPE_NO        IN  NUMBER                           Default Null   , 
                            P_EXTRNL_POST      IN  NUMBER                           Default 0      ,  
                            P_AD_U_ID          IN  NUMBER                                          ,
                            P_AD_DATE          IN  DATE                                            ,
                            P_UP_U_ID          IN  NUMBER                           Default Null   , 
                            P_UP_DATE          IN  DATE                             Default Null   ,
                            P_UP_CNT           IN  NUMBER                           Default Null   ,
                            P_AUDIT_REF        IN  NUMBER                           DEFAULT 0      ,
                            P_AUDIT_REF_DESC   IN  VARCHAR2                         DEFAULT 0      ,
                            P_AUDIT_REF_U_ID   IN  NUMBER                           Default Null   ,
                            P_AUDIT_REF_DATE   IN  DATE                             Default Null   ,
                            P_FIELD1           IN  VARCHAR2                         Default Null   ,
                            P_FIELD2           IN  VARCHAR2                         Default Null   ,
                            P_FIELD3           IN  VARCHAR2                         Default Null   ,
                            P_FIELD4           IN  VARCHAR2                         Default Null   ,
                            P_FIELD5           IN  VARCHAR2                         Default Null   , 
                            P_FIELD6           IN  VARCHAR2                         Default Null   ,
                            P_FIELD7           IN  VARCHAR2                         Default Null   ,
                            P_FIELD8           IN  VARCHAR2                         Default Null   ,
                            P_FIELD9           IN  VARCHAR2                         Default Null   ,
                            P_FIELD10          IN  VARCHAR2                         Default Null   ,
                            P_DOC_SEQ          IN  NUMBER                           Default Null   ,
                            P_DOC_BRN_NO     IN  S_BRN.BRN_NO%TYPE                  Default Null   ,
                            P_User_No   	 In  NUMBER                                            ,
                            P_Brn_No         IN  S_BRN.BRN_NO%TYPE                                 , 
                            P_Brn_Year       In  NUMBER                                            ,
                            P_CMP_NO         In  NUMBER                                            ,
                            P_BRN_USR        In  NUMBER                                            ,
                            P_AD_TRMNL_NM    In  VARCHAR2                           Default Null   ,
                            P_UP_TRMNL_NM    In  VARCHAR2                           Default Null   );
  
  
  /*VOUCHER_TYPE      NUMBER(1)                   NOT NULL,
  REF_NAME          VARCHAR2(60 BYTE),
  VOUCHER_POST      NUMBER(1)                   DEFAULT 0,  
  POST_U_ID         NUMBER(5),
  POST_DATE         DATE,
  UNPOST_U_ID       NUMBER(5),
  UNPOST_DATE       DATE,*/
   
  
 
--===================================================================================
  PROCEDURE Insrt_Vchr_Dtl  ( P_Doc_Typ      IN  NUMBER                                            ,
							P_Vchr_Pay_Typ   IN  NUMBER                                            ,
                            P_Doc_no         IN  NUMBER                                            ,
                            P_Doc_Srl        IN  NUMBER                                            ,
                            P_Doc_Date  	 IN  DATE                                              ,
                            P_TRANSFER       IN  NUMBER  	                        Default Null   ,
                            P_Chq_Typ        IN  NUMBER                             DEFAULT 0      ,                              
                            P_cc_code        IN  COST_CENTERS.CC_CODE%TYPE          Default null   ,
                            P_pj_no          IN  IAS_PROJECTS.PJ_NO%TYPE 		    Default Null   ,
                            P_actv_no        IN  IAS_ACTVTY.ACTV_NO%TYPE 		    Default Null   ,
                            P_Ref_no         IN  VARCHAR2                           Default Null   ,
                            P_Ac_Code  	     IN  ACCOUNT.A_CODE%TYPE                               ,
                            P_Ac_Code_dtl    IN  IAS_POST_DTL.Ac_Code_dtl%TYPE      Default Null   ,
                            P_Cur_Code       IN  VARCHAR2                                          ,
                            P_Cur_Rate       IN  NUMBER                                            ,
                            P_Amt            IN  NUMBER  	                        Default Null   ,
                            P_AmtF           IN  NUMBER  	                        Default Null   ,
                            P_COL_NO         IN  NUMBER                             Default Null   ,
                            -----------------------------------------------------------------------
                            P_REP_CODE       IN  VARCHAR2                           Default Null   ,              
                            P_CHQ_NO         IN  NUMBER                             Default Null   ,
                            P_NOTE_NO        IN  NUMBER                             Default Null   ,
                            P_VALUE_DATE     IN  DATE                               Default Null   ,
                            P_CSH_NO         IN  NUMBER                                            ,                        
                            P_LC_NO          IN  VARCHAR2                           Default Null   ,
                            ------------------------------------------------------------------------
                            P_ATTCH_NO       IN  NUMBER                             Default Null   ,
                            P_Dsc  	         IN  VARCHAR2                           Default Null   ,
                            P_COMM_PER       IN  NUMBER                             Default Null   ,
                            P_REC_NM         IN  VARCHAR2                           Default Null   ,   
                            P_STAND_BY       IN  NUMBER                             Default 0      ,
                            P_VCHR_NO_PY     IN  NUMBER                             Default 0      ,    
                            P_VCHR_DATE_PY     IN  DATE                             Default Null   , 
                            P_MOVE_CHQ_PY      IN  NUMBER                           Default 0      ,  
                            P_MOVE_CHQ_CY      IN  NUMBER                           Default 0      ,  
                            P_V_TYPE_NO        IN  NUMBER                           Default Null   , 
                            P_EXTRNL_POST      IN  NUMBER                           Default 0      ,  
                            P_AD_U_ID          IN  NUMBER                                          ,
                            P_AD_DATE          IN  DATE                                            ,
                            P_UP_U_ID          IN  NUMBER                           Default Null   , 
                            P_UP_DATE          IN  DATE                             Default Null   ,
                            P_UP_CNT           IN  NUMBER                           Default Null   ,
                            P_AUDIT_REF        IN  NUMBER                           DEFAULT 0      ,
                            P_AUDIT_REF_DESC   IN  VARCHAR2                         DEFAULT 0      ,
                            P_AUDIT_REF_U_ID   IN  NUMBER                           Default Null   ,
                            P_AUDIT_REF_DATE   IN  DATE                             Default Null   ,
                            P_FIELD1           IN  VARCHAR2                         Default Null   ,
                            P_FIELD2           IN  VARCHAR2                         Default Null   ,
                            P_FIELD3           IN  VARCHAR2                         Default Null   ,
                            P_FIELD4           IN  VARCHAR2                         Default Null   ,
                            P_FIELD5           IN  VARCHAR2                         Default Null   , 
                            P_FIELD6           IN  VARCHAR2                         Default Null   ,
                            P_FIELD7           IN  VARCHAR2                         Default Null   ,
                            P_FIELD8           IN  VARCHAR2                         Default Null   ,
                            P_FIELD9           IN  VARCHAR2                         Default Null   ,
                            P_FIELD10          IN  VARCHAR2                         Default Null   ,
                            P_DOC_SEQ          IN  NUMBER                           Default Null   ,
                            P_DOC_BRN_NO     IN  S_BRN.BRN_NO%TYPE                  Default Null   ,
                            P_User_No   	 In  NUMBER                                            ,
                            P_Brn_No         IN  S_BRN.BRN_NO%TYPE                                 , 
                            P_Brn_Year       In  NUMBER                                            ,
                            P_CMP_NO         In  NUMBER                                            ,
                            P_BRN_USR        In  NUMBER                                            ,
                            P_AD_TRMNL_NM    In  VARCHAR2                           Default Null   ,
                            P_UP_TRMNL_NM    In  VARCHAR2                           Default Null   );
  
 
 /*VOUCHER_TYPE         NUMBER(1) CONSTRAINT VD_NN_VTYPE NOT NULL,
  VOUCHER_PAY_TYPE     NUMBER(1) CONSTRAINT VD_NN_VPAYTYPE NOT NULL,
  VOUCHER_NO           NUMBER(15) CONSTRAINT VD_NN_VNO NOT NULL,
  CASH_NO              NUMBER(10) CONSTRAINT VD_NN_VCASHNO NOT NULL,
  V_SER                NUMBER(38) CONSTRAINT VD_NN_VSER NOT NULL,
  A_CODE               VARCHAR2(30 BYTE)        NOT NULL,
  AC_CODE_DTL          VARCHAR2(30 BYTE),
  AC_DTL_TYP           NUMBER(2)                DEFAULT 0,
  A_CY                 VARCHAR2(7 BYTE)         NOT NULL,
  AC_DESC              VARCHAR2(1000 BYTE),
  AC_AMT               NUMBER                   DEFAULT 0,
  AC_AMTF              NUMBER                   DEFAULT 0,
  EX_RATE              NUMBER,
  CC_CODE              VARCHAR2(30 BYTE),
  PJ_NO                VARCHAR2(15 BYTE),
  ACTV_NO              VARCHAR2(15 BYTE),
  REP_CODE             VARCHAR2(15 BYTE),
  CHEQUE_NO            NUMBER(20),
  VALUE_DATE           DATE,
  CHEQUE_POST          NUMBER(1)                DEFAULT 0,
  CHEQUE_VALUED        NUMBER(1)                DEFAULT 0,
  ENDRSMNT             NUMBER(1)                DEFAULT 0,
  NOTE_NO              VARCHAR2(30 BYTE),
  BANK_NO              NUMBER(10),
  BANK_NM              VARCHAR2(60 BYTE),
  BANK_BRN_NO          NUMBER(6),
  A_CODE_END           VARCHAR2(30 BYTE),
  RETURN_RES           VARCHAR2(250 BYTE),
  LC_NO                VARCHAR2(15 BYTE),
  CI_NO                NUMBER(15),
  CI_SER               NUMBER(38),
  HRS_PAY_NO           NUMBER(15),
  K_NO                 NUMBER(15),
  K_SER                NUMBER(38),
  BILL_NO              NUMBER(15),
  BILL_SER             NUMBER(38),
  I_NO                 NUMBER(15),
  WO_NO                NUMBER(15),
  WO_SER               NUMBER(38),
  CNTRCT_NO            NUMBER(15),
  CNTRCT_SRL           NUMBER,
  CNTRCT_BTCH          NUMBER(6),
  REP_COMM_AMT         NUMBER,
  REF_NO               VARCHAR2(15 BYTE),
  RCRD_NO              NUMBER(10),
  CONN_V_NO            NUMBER(15),
  CONN_V_SER           NUMBER(38),
  CONN_V_AMT           NUMBER,
  EXTERNAL_POST        NUMBER(5)                DEFAULT 0,
  BLMNT_DATE           DATE,
  DOC_SEQUENCE_REF     NUMBER(38),
  DOC_SEQUENCE         NUMBER(38),
  CASHIER_NO           NUMBER(5),
  NOTE                 VARCHAR2(150 BYTE),
  AC_CODE_DR_COMM      VARCHAR2(30 BYTE),
  AC_CODE_DTL_DR_COMM  VARCHAR2(30 BYTE),
  AC_DTL_TYP_DR_COMM   NUMBER(2),
  OTR_AMT_L            NUMBER                   DEFAULT 0,
  OTR_AMT_F            NUMBER                   DEFAULT 0,
  AUDIT_REF            NUMBER(1)                DEFAULT 0,
  AUDIT_REF_DESC       VARCHAR2(500 BYTE),
  AUDIT_REF_U_ID       NUMBER(5),
  AUDIT_REF_DATE       DATE,
  AC_DTL_TYP_END       NUMBER(2),
  AC_CODE_DTL_END      VARCHAR2(30 BYTE),
  DOC_TYPE_REF         NUMBER(5),
  DOC_JV_TYPE_REF      NUMBER(5),
  DOC_NO_REF           NUMBER(15),
  DOC_SER_REF          NUMBER(38),
  DOC_BRN_NO           NUMBER(6),
  POST_U_ID            NUMBER(5),
  POST_DATE            DATE,
  UNPOST_U_ID          NUMBER(5),
  UNPOST_DATE          DATE,
  F_CNTRCT_DATE        DATE,
  T_CNTRCT_DATE        DATE,
  F_CNTRCT_DATE_AH     VARCHAR2(10 BYTE),
  T_CNTRCT_DATE_AH     VARCHAR2(10 BYTE),
  AD_U_ID              NUMBER(5),
  AD_DATE              DATE,
  UP_U_ID              NUMBER(5),
  UP_DATE              DATE,
  UP_CNT               NUMBER(10),
  CMP_NO               NUMBER(3),
  BRN_NO               NUMBER(6)                NOT NULL,
  BRN_YEAR             NUMBER(4),
  BRN_USR              NUMBER(3)*/
--===================================================================================
End GLS_DOCS_INSRT_PKG;
/
CREATE Package GLS_JRNL_TRNS_PKG  Is
 
 ------------------------------------------------------------------
 -- Created By Murad Al-garrash 
 --  date : 01/01/2020
 -- Created this Pakege to insert Journals from external systems . 
------------------------------------------------------------------
    V_Lang_No   				          Pls_Integer;
    V_Usr_No   				            Pls_Integer;
    v_local_cur 				          VarChar2(7);
    V_USE_CC                      Pls_Integer;
    V_USE_PJ                      Pls_Integer;
    V_USE_ACTV                    Pls_Integer;
    V_USE_BALANCED_CC             NUMBER (1):=0;
    V_USE_BALANCED_BRN            NUMBER (1):=0;
    v_Use_Audit_Doc               NUMBER(1);
    v_Post_Cheq_type              NUMBER(1);
    V_Post_Cheq_Type_Vndr         NUMBER(1);
    v_pay_ltr_ac                  VarChar2(30);
    v_rec_ltr_ac                  VarChar2(30);
    v_cb_no                       CASH_IN_HAND.CASH_NO%TYPE ;
    v_ac_code_dtl                 VarChar2(30);
    v_ac_dtl_typ                  ACCOUNT.ac_dtl_typ%Type ;
    v_ac_code_dtl_Sub             VarChar2(30);
    V_ChqPayIntrm_Ac              VarChar2(30);
    V_CC_POST                     PLS_INTEGER;
    V_PJ_POST                     PLS_INTEGER;
    V_ACTV_POST                   PLS_INTEGER;
    V_POST_ACC_DSC_IN_PAY_CHQ     NUMBER (1):=0;
    V_USE_PAY_VCHR_MST_AC_PRV		  NUMBER(1):=0;
    V_USE_RCV_VCHR_MST_AC_PRV		  NUMBER(1):=0;
    v_Cnt                         NUMBER;
    V_Chq_No                      NUMBER;
    V_Pst_Sman_Comm_Vchr_Rcpt     NUMBER(1):=0;  
    V_Reprs_Comm_Ac               VarChar2(30);
    V_Reprs_Comm_dsc              VarChar2(250); 
    V_Rep_Code_Ac                 VarChar2(30); 
    V_Rep_Comm_AmtL               NUMBER;    
    V_Rep_Comm_AmtF               NUMBER;
    V_DTL_AC_CODE                 VarChar2(30); 
    V_Vat_Ac                      VarChar2(30); 
    V_Use_Vat                     NUMBER;
    V_LINK_WITH_EXTRNL_DIRS       NUMBER;
    V_USE_EXPNS_TAX               NUMBER;
    V_Error_Msg                   Varchar2(4000);
    V_Msg_No                      Number;
----------------------------------------------------------------   
Procedure Get_Prmtr_Prc ( P_Lang_no 	 In Pls_Integer 	Default 1
					               ,P_Usr_No 	   In Pls_Integer
                         ,P_Post_Type  In NUMBER    	 	Default 0	);
----------------------------------------------------------------                           
Function Get_lastError_msg return varchar;
----------------------------------------------------------------  
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
                           ,P_Typ_No      In Number) Return Number;
----------------------------------------------------------------                           
FUNCTION  Get_Jv_Sq(P_JvType_No  In Number) Return Number ;
----------------------------------------------------------------
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
                       ,P_ac_code_dtl    In number  ) Return Number ;
----------------------------------------------------------------                         
Function Get_MaxDoc_No(P_Doc_Typ    In NUMBER 
                       ,P_Brn_No     In NUMBER 
                       ,P_Typ_No     In Number DEFAULT NULL) Return Number;
------------------------------------------------------------------
Function Get_LinkDirCode(P_S_TYP        In number 
                        ,P_DIR_EXTRNL   In varchar2                         
                        ,P_DIR          IN VARCHAR2 DEFAULT NULL
                        ,P_USR_NO       IN NUMBER DEFAULT NULL  ) Return char ;                      
------------------------------------------------------------------
procedure Insrt_Jrs_Jrnl ( P_Doc_Typ        IN  NUMBER                                           
                        ,P_jv_Typ           IN  NUMBER                                            
                        ,P_Doc_no_REF       IN  NUMBER                                            
                        ,P_Doc_Srl_REF      IN  NUMBER                                            
                        ,P_RCRD_NO          IN  NUMBER  
                        ,P_Doc_Date  	    IN  DATE                                                                          
                        ,P_Brn_No           IN  S_BRN.BRN_NO%TYPE                                    
                        ,P_cc_code          IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                        ,P_pj_no            IN  IAS_PROJECTS.PJ_NO%TYPE 		 Default Null   
                        ,P_actv_no          IN  IAS_ACTVTY.ACTV_NO%TYPE 		 Default Null   
                        ,P_Ref_no           IN  VARCHAR2                         Default Null   
                        ,P_Ac_Code  	    IN  ACCOUNT.A_CODE%TYPE                               
                        ,P_Ac_Code_dtl      IN  IAS_POST_DTL.Ac_Code_dtl%TYPE    Default Null   
                        ,P_AC_CODE_DTL_SUB  IN  IAS_POST_DTL.AC_CODE_DTL_SUB%TYPE    Default Null
                        ,P_Cur_Code         IN  VARCHAR2                                          
                        ,P_Cur_Rate         IN  NUMBER                                            
                        ,P_Amt              IN  NUMBER  	                         
                        ,P_AmtF             IN  NUMBER  	                      
                        ,P_Rep_CODE         IN  NUMBER                             Default Null
                        ,P_COL_NO           IN  NUMBER                             Default Null   
                        ,P_ATTCH_NO         IN  NUMBER                             Default Null   
                        ,P_Dsc  	        IN  VARCHAR2                           Default Null          
                        ,P_Lng_No           IN  NUMBER                           Default 1       
                        ,P_USR_NO           IN  NUMBER                                  
                        ,P_FIELD1           IN  VARCHAR2                         Default Null   
                        ,P_FIELD2           IN  VARCHAR2                         Default Null   
                        ,P_FIELD3           IN  VARCHAR2                         Default Null   
                        ,P_FIELD4           IN  VARCHAR2                         Default Null   
                        ,P_FIELD5           IN  VARCHAR2                         Default Null   
                        ,P_FIELD6           IN  VARCHAR2                         Default Null   
                        ,P_FIELD7           IN  VARCHAR2                         Default Null   
                        ,P_FIELD8           IN  VARCHAR2                         Default Null   
                        ,P_FIELD9           IN  VARCHAR2                         Default Null   
                        ,P_FIELD10          IN  VARCHAR2                         Default Null                           
                        ,P_AD_TRMNL_NM      In  VARCHAR2                           Default Null                           
                        ,P_DOC_BRN_NO       IN  S_BRN.BRN_NO%TYPE                  Default Null                                                                          
                        ,P_SUCCESS_FLG      OUT NUMBER    ---0 ERROR   1  SUCCESS
                        ,P_MSG_TXT          OUT VARCHAR2 
                        )   ;
 ------------------------------------------------------------------
 
--===================================================================================
End GLS_JRNL_TRNS_PKG;
/
CREATE PACKAGE GLS_LMT_PKG as
 V_Lng_No               Pls_Integer Default 1 ;
 V_Usr_No               Pls_Integer;
 V_No_Of_Dcml        NUMBER;
 V_LOC_AMT              Number:=0;
 V_CUR_CODE             VARCHAR2(30);
 V_DALY_BLNC            Number:=0;
 V_MNTHLY_BLNC          Number:=0;
 V_ANULY_BLNC           Number:=0;
 V_BLNC                 Number:=0;
------------------------------------------------
  Gnr_Prmtrs            ias_para_Gen%Rowtype;
  Gls_Prmtrs            ias_para_Gl%Rowtype;
  Ars_Prmtrs            ias_para_Ar%Rowtype;
  Aps_Prmtrs            ias_para_Ap%Rowtype;
  Inv_Prmtrs            ias_para_Inv%Rowtype;
  TRNS_PRVLGS           Privilege_Fixed%Rowtype;
-----------------------------------------------
 --------------------------------------------------------------
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
                         ,P_Usr_No      In Pls_Integer     ) ;
 --------------------------------------------------------------
 PROCEDURE CHK_AC_Lmt ( P_DR_CR          In  number DEFAULT 1                               ,  --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
                        P_DOC_DATE       In  DATE                                           ,  -- DEFAULT YS_GEN_PKG.GET_SYSDATE  
                        P_amt            In  number                                         ,
                        P_amtF           In  number  DEFAULT 0                              ,
                        P_amt_Trns       In  number                                         ,
                        P_amtF_Trns      In  number  DEFAULT 0                              ,
                        P_AC_CODE        In  ACCOUNT.A_CODE%TYPE        Default Null        ,
                        P_AC_CODE_DTL    In  Varchar2                   Default Null        ,
                        P_AC_CODE_DTL_SUB    In  Varchar2                   Default Null        ,
                        P_CC_CODE        In  COST_CENTERS.CC_CODE%TYPE  Default Null        ,
                        P_PJ_NO          In  IAS_PROJECTS.PJ_NO%TYPE    Default Null        ,
                        P_ACTV_NO        In  IAS_ACTVTY.ACTV_NO%TYPE    Default Null        ,						   
                        P_BRN_NO         In  S_BRN.BRN_NO%TYPE          Default Null        ,	
                        P_User_No        In  Number                                         ,
                        P_CUR_CODE       In  Varchar2                                       ,
                        P_frc_no         In  Number		  Default 2                           ,
                        P_Min_lmt        out Number                                         ,						
                        P_Max_lmt 	     out Number                                         ,
                        P_Min_Trns_lmt   out Number                                         ,
                        P_Max_Trns_lmt   out Number                                         , 
                        P_Pass           out Number                                         ,
                        P_Pass_Prv       out Number                                         ,
                        P_No_Chk_prv     out Number                                         ,
                        P_UPD_FLG        IN NUMBER DEFAULT 0                                ,
                        P_Msg            out Varchar2                                       ,
                        P_Lng            In  Number);

 --------------------------------------------------------------
 FUNCTION GET_FCLTY_BLNC (P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
                         P_AC_DTL_TYP    In  ACCOUNT.AC_DTL_TYP%TYPE                    ,
                         P_AC_CODE_DTL   In  Varchar2                                   ,
                         P_AC_CODE_DTL_SUB   In  Varchar2      Default Null             ,
                         P_CUR_CODE      In  Varchar2                                   ,
                         P_CC_CODE       In  COST_CENTERS.CC_CODE%TYPE                  ,
                         P_PJ_NO         In  IAS_PROJECTS.PJ_NO%TYPE                    ,
                         P_ACTV_NO       In  IAS_ACTVTY.ACTV_NO%TYPE                    ,
                         P_BRN_NO        In  S_BRN.BRN_NO%TYPE      Default Null        ,
                         P_MAX_lmt       in  Number                                     ,
                         P_FCLTY_AMT     in  Number                                     ,
                         P_DOC_AMT       in  Number default 0                           , 
                         p_FCLTY_ST      in  Number default 0                            
                        ,P_BLNC          In  Number
                        ,P_Usr_No        In  Number 
                        ,P_Lng_No           In  Number   Default 1                      
                         ) RETURN NUMBER ;
--------------------------------------------------------------
PROCEDURE GET_ACDTL_LMT_BLNC(P_DOC_DATE      In  DATE   DEFAULT YS_GEN_PKG.GET_SYSDATE          ,
                             P_A_CODE        IN ACCOUNT.A_CODE%TYPE        DEFAULT NULL,
                             P_AC_DTL_TYP    IN NUMBER    DEFAULT NULL,
                             P_AC_CODE_DTL   IN VARCHAR2  DEFAULT NULL,
                             P_AC_CODE_DTL_SUB   IN VARCHAR2  DEFAULT NULL,
                             P_CUR_CODE      IN VARCHAR2  DEFAULT NULL,
                             P_CC_CODE       IN COST_CENTERS.CC_CODE%TYPE  DEFAULT NULL,
                             P_PJ_CODE       IN IAS_PROJECTS.PJ_NO%TYPE    DEFAULT NULL,
                             P_ACTV_CODE     IN IAS_ACTVTY.ACTV_NO%TYPE    DEFAULT NULL,
                             P_LOC_AMT       IN NUMBER   DEFAULT 1,
                             P_TRNS_VEIW_TYP IN NUMBER  DEFAULT 1,
                             P_DALY_BLNC     OUT Number ,
                             P_MNTHLY_BLNC   OUT Number ,
                             P_ANULY_BLNC    OUT Number ,
                             P_BLNC          OUT Number
                            ,P_Usr_No        In  Number 
                            ,P_Lng_No         In  Number   Default 1 )  ;
 --------------------------------------------------------------
FUNCTION GET_MSG_GL_LMT( P_AC_CODE       In  ACCOUNT.A_CODE%TYPE   DEFAULT NULL                     ,
                         P_AC_DTL_TYP    In  ACCOUNT.AC_DTL_TYP%TYPE    DEFAULT NULL                ,
                         P_AC_CODE_DTL   In  Varchar2        DEFAULT NULL                           ,
                         P_AC_CODE_DTL_SUB   In  Varchar2   DEFAULT NULL                                ,
                         P_CUR_CODE      In  Varchar2       DEFAULT NULL                                ,
                         P_CC_CODE       In  COST_CENTERS.CC_CODE%TYPE    DEFAULT NULL              ,
                         P_PJ_NO         In  IAS_PROJECTS.PJ_NO%TYPE      DEFAULT NULL              ,
                         P_ACTV_NO       In  IAS_ACTVTY.ACTV_NO%TYPE    DEFAULT NULL,
                         P_LNG IN NUMBER DEFAULT 1 )  RETURN VARCHAR2 ;
 --------------------------------------------------------------
 FUNCTION Check_ac_cc_pj_use_lmt (  P_lmt_type  IN  NUMBER                                    ,
                                    P_a_code    IN  ACCOUNT.A_code%TYPE DEFAULT NULL          ,
                                    P_cc_code   IN  Cost_centers.Cc_code%TYPE   DEFAULT NULL  ,
                                    P_pj_no     IN  Ias_projects.Pj_no%TYPE     DEFAULT NULL  ,
                                    P_ACTV_No   In IAS_ACTVTY.ACTV_NO%TYPE      DEFAULT NULL  ,
                                    P_acy       IN  VARCHAR2 DEFAULT NULL        )    RETURN NUMBER;
--------------------------------------------------------------
End GLS_LMT_PKG;
/
CREATE PACKAGE GLS_XML_PKG AS
     ------------------------------------------------------------------------------        
     V_DOCTYP_IMPRT_TO NUMBER ;
     ------------------------------------------------------------------------------    
     FUNCTION GET_JRNLDOCTYP_IMPRT_TO RETURN NUMBER;   
     ------------------------------------------------------------------------------        
     FUNCTION GET_SLCT_AS_XML(P_SYS_NO         Number  Default 30                           
                            ,P_Trns_Type       Number   Default 1
                            ,P_SRCH_TYPE       VARCHAR2 DEFAULT NULL
                            ,P_DOC_TYP         Number  
                            ,P_JV_TYP          Number   Default Null
                            ,P_Doc_no_REF       IN  NUMBER                                            
                            ,P_Doc_Srl_REF      IN  NUMBER   
                            ,P_RCRD_NO          IN  NUMBER                                          
                            ,P_Doc_Date  	    IN  VARCHAR2                                                                          
                            ,P_Brn_No           IN  S_BRN.BRN_NO%TYPE                                    
                            ,P_cc_code          IN  COST_CENTERS.CC_CODE%TYPE        Default Null           
                            ,P_pj_no            IN  IAS_PROJECTS.PJ_NO%TYPE 		 Default Null   
                            ,P_actv_no          IN  IAS_ACTVTY.ACTV_NO%TYPE 		 Default Null   
                            ,P_Ref_no           IN  VARCHAR2                         Default Null                               
                            ,P_Ac_Code  	    IN  ACCOUNT.A_CODE%TYPE                               
                            ,P_Ac_Code_dtl      IN  IAS_POST_DTL.Ac_Code_dtl%TYPE    Default Null   
                            ,P_Cur_Code         IN  VARCHAR2                                          
                            ,P_Cur_Rate         IN  NUMBER                                            
                            ,P_Amt              IN  NUMBER  	                         
                            ,P_AmtF             IN  NUMBER  	                      
                            ,P_Rep_CODE         IN  NUMBER                           Default Null
                            ,P_COL_NO           IN  NUMBER                           Default Null   
                            ,P_ATTCH_NO         IN  NUMBER                           Default Null   
                            ,P_Dsc  	        IN  VARCHAR2                         Default Null          
                            ,P_Lng_No           IN  NUMBER                           Default 1       
                            ,P_USR_NO           IN  NUMBER
                           -- ,P_EXTRNL_POST      IN  NUMBER                           Default 0                                    
                            ,P_FIELD1           IN  VARCHAR2                         Default Null   
                            ,P_FIELD2           IN  VARCHAR2                         Default Null   
                            ,P_FIELD3           IN  VARCHAR2                         Default Null   
                            ,P_FIELD4           IN  VARCHAR2                         Default Null   
                            ,P_FIELD5           IN  VARCHAR2                         Default Null   
                            ,P_FIELD6           IN  VARCHAR2                         Default Null   
                            ,P_FIELD7           IN  VARCHAR2                         Default Null   
                            ,P_FIELD8           IN  VARCHAR2                         Default Null   
                            ,P_FIELD9           IN  VARCHAR2                         Default Null   
                            ,P_FIELD10          IN  VARCHAR2                         Default Null                           
                            ,P_AD_TRMNL_NM      In  VARCHAR2                           Default Null      
                            ,P_DOC_BRN_NO       IN  S_BRN.BRN_NO%TYPE                  Default Null   
                            ,P_Brn_Year         In  NUMBER                                             
                            ,P_CMP_NO           In  NUMBER                                             
                            ,P_BRN_USR          In  NUMBER                                                            
                                                             )  RETURN Varchar2;
       ------------------------------------------------------------------------------                                                              
       PROCEDURE GET_EXTRCT_XML(P_XML IN VARCHAR2, P_XML_OUT OUT VARCHAR2);
       ------------------------------------------------------------------------------        
END GLS_XML_PKG;
/
CREATE PACKAGE Gls_Yrly_Mov_Data_Pkg AS
			--##--------------------------------------------------------------------------------------##--
			Function Mov_Rq_Jrnl_Prv_Yr_Prc(  P_YBP       IN Varchar2,
			                                  P_BRN_YEAR  IN Number  ) Return Varchar2;                                    		
			Function Mov_Rq_VchrPay_Prv_Yr_Prc(P_YBP       IN Varchar2,
			                                   P_BRN_YEAR  IN Number  ) Return Varchar2;  
			Function Mov_Rq_VchrRcv_Prv_Yr_Prc(P_YBP       IN Varchar2,
			                                   P_BRN_YEAR  IN Number  ) Return Varchar2; 
			Function Mov_Rq_Exchng_Prv_Yr_Prc(P_YBP       IN Varchar2,
			                                  P_BRN_YEAR  IN Number  ) Return Varchar2; 
			--##--------------------------------------------------------------------------------------##--
			END Gls_Yrly_Mov_Data_Pkg;
/
CREATE Package Gnr_api_pkg
Is
FUNCTION GET_inpt_data (  P_inpt_typ       In     Varchar2
                           ,P_Fld_Nm1      In     Varchar2 Default Null
                           ,P_Fld_Nm2      In     Varchar2 Default Null
                           ,P_Fld_Nm3      In     Varchar2 Default Null
                           ,P_Fld_Nm4      In     Varchar2 Default Null
                           ,P_Fld_Val1     In     Varchar2 Default Null
                           ,P_Fld_Val2     In     Varchar2 Default Null
                           ,P_Fld_Val3     In     Varchar2 Default Null
                           ,P_Fld_Val4     In     Varchar2 Default Null
                           ,P_whr          In     Varchar2 Default Null 
                           ,P_Usr_no       In     Number   Default Null
                           ,P_Brn_no       In     Number   Default Null ) RETURN CLOB;
--##---------------------------------------------------------------------##--
FUNCTION GET_ITM_PRICE (    P_ICODE     In        Varchar2 Default Null
                           ,P_ITM_UNT      In     Varchar2 Default Null
                           ,P_CUR_CODE     In     Varchar2                           
                           ,P_Expiredate   In     DATE     Default Null
                           ,P_Batchno      In     Varchar2 Default Null
                           ,P_LEV_NO       In     Number Default Null                           
                           ,P_Usr_no       In     Number 
                           ,P_Brn_no       In     Number
                           ,P_Pag_Whr      In     Varchar2 Default Null                                                                                                    
                           ,P_lng_no       In     Number Default 1) RETURN CLOB; 
--##---------------------------------------------------------------------##--
Function Shw_Doc_Mst_Data(P_Doc_Type   In Number,   --## 4 sales invoice ,# 5 retrn sales 
                          P_Doc_No     In Ias_Bill_Mst.Bill_No%Type Default Null,
                          P_Doc_Date   In Ias_Bill_Mst.Bill_Date%Type Default Null,
                          P_Cst_Code   In Ias_Bill_Mst.C_Code%Type Default Null,
                          P_Doc_Amt    In Number Default Null,
                          P_Usr_No     In User_R.U_Id%Type Default Null,
                          P_Lng_No     In Number Default 1,
                          P_Srch_Val   In Varchar2 Default Null,
                          P_Whr        In Varchar2 Default Null)Return Clob;
 
--##---------------------------------------------------------------------##--
Function Shw_Doc_Dtl_Data(P_Doc_Type   In Number,   --## 4 sales invoice ,# 5 retrn sales 
                          P_Doc_Ser    In Ias_Bill_Mst.Bill_Ser%Type,
                          P_Usr_No     In User_R.U_Id%Type Default Null,
                          P_Lng_No     In Number Default 1,
                          P_Whr        In Varchar2 Default Null)Return Clob;
--##---------------------------------------------------------------------##-- 
Function Get_Cstmr_Items( P_Doc_No     In Ias_Bill_Mst.Bill_No%Type Default Null,                         
                          P_Cst_Code   In Ias_Bill_Mst.C_Code%Type Default Null,                         
                          P_Usr_No     In User_R.U_Id%Type Default Null,
                          P_Lng_No     In Number Default 1,                         
                          P_Whr        In Varchar2 Default Null)Return Clob;
--##-------------------------------------------------------------------------------------------##-- 
Procedure Chk_Itm  ( P_Sys_No                IN  NUMBER
                    ,P_Sys_Typ               IN  NUMBER   --##    P_SYS_TYP =  1 = SALE , 2= STOCKE ,3 = PURCHASE ,
                    ,P_Trns_Typ              IN  NUMBER   Default 1 --##.    (1=IN)(-1=OUT)  
                    ,P_Doc_Type              In Number                      ---## 4 SALES INVOICE 5-  RETURN SALES INVOICE                                                      
                    ,P_I_Code                In Ias_Itm_Mst.I_Code%Type          
                    ,P_Itm_Unt               In Ias_Bill_Dtl.Itm_Unt%Type           
                    ,P_P_Size                In Ias_Bill_Dtl.P_Size%Type                    Default Null
                    ,P_I_Qty                 In Ias_Bill_Dtl.I_Qty%Type                     Default Null
                    ,P_Free_Qty              In Ias_Bill_Dtl.Free_Qty%Type                  Default Null
                    ,P_Res_Qty               In Ias_Bill_Dtl.I_Qty%Type                     Default Null
                    ,P_I_Price               In Ias_Bill_Dtl.I_Price%Type                   Default Null                    
                    ,P_I_Price_Vat           In Ias_Bill_Dtl.I_Price_Vat%Type               Default Null
                    ,P_Measur_Price          In Ias_Bill_Dtl.Measur_Price%Type              Default Null
                    ,P_Lev_No                In Number                                      Default Null
                    ,P_Qt_Prm_Method         In NUMBER                                      Default Null 
                    ,P_Qut_Prm_Price         In NUMBER                                      Default Null
                    ,P_Qt_Prm_Ser            In NUMBER                                      Default Null
                    ,P_Dis_Per               In Ias_Bill_Dtl.Dis_Per%Type                   Default Null
                    ,P_Dis_Amt_Dtl           In Ias_Bill_Dtl.Dis_Amt_Dtl%Type               Default Null
                    ,P_Dis_Amt_Dtl_Vat       In Ias_Bill_Dtl.Dis_Amt_Dtl_Vat%Type           Default Null
                    ,P_Dis_Per2              In Ias_Bill_Dtl.Dis_Per2%Type                  Default Null
                    ,P_Dis_Amt_Dtl2          In Ias_Bill_Dtl.Dis_Amt_Dtl2%Type              Default Null
                    ,P_Dis_Amt_Dtl2_Vat      In Ias_Bill_Dtl.Dis_Amt_Dtl2_Vat%Type          Default Null
                    ,P_Dis_Per3              In Ias_Bill_Dtl.Dis_Per3%Type                  Default Null
                    ,P_Dis_Amt_Dtl3          In Ias_Bill_Dtl.Dis_Amt_Dtl3%Type              Default Null
                    ,P_Dis_Amt_Dtl3_Vat      In Ias_Bill_Dtl.Dis_Amt_Dtl3_Vat%Type          Default Null                    
                    ,P_Dis_Amt_Mst           In Ias_Bill_Dtl.Dis_Amt_Mst%Type               Default Null                   
                    ,P_W_Code                In Ias_Bill_Dtl.W_Code%Type                    Default Null
                    ,P_Expire_Date           In Ias_Bill_Dtl.Expire_Date%Type               Default Null
                    ,P_Batch_No              In Ias_Bill_Dtl.Batch_No%Type                  Default Null                     
                    ,P_Brn_No                In Ias_Bill_Dtl.Brn_No%Type                    Default Null 
                    ,P_Doc_Date              In Ias_Bill_Mst.Bill_Date%Type                 Default Null
                    ,P_CUR_CODE              In EX_RATE.CUR_CODE%Type                       Default Null
                    ,P_Ac_Rate               In NUMBER                                      Default Null 
                    ,P_USR_NO                In USER_R.U_ID%Type                            Default Null
                    ,P_CLC_VAT_PRICE_TYP     IN  NUMBER                                     DEFAULT 1
                    ,P_Bill_Doc_Type         IN  NUMBER                                     Default Null
                    ,P_Stk_Cost              In  Ias_Bill_Dtl.Stk_Cost%Type                 Default Null                                     
                    ,P_Chk_Avlqty_Flg        In Number                                      Default 0  
                    ,P_Chk_Itm_Price         IN  NUMBER DEFAULT 0                    --# 0 nocheck 1 check                     
                    ,P_Lng_No                In Number                                      Default 1  
                    ,P_Msg_Txt               In Out Varchar2
                    ,P_Pkg_Line              In Out Varchar2
                    ,P_Pkg_NM               In Out Varchar2 )  ;  
--##-------------------------------------------------------------------------------------------##--
Procedure CHK_ITM_PRICE   ( P_I_Code                In Ias_Itm_Mst.I_Code%Type          
                            ,P_Itm_Unt               In Ias_Bill_Dtl.Itm_Unt%Type           
                            ,P_P_Size                In Ias_Bill_Dtl.P_Size%Type                    Default Null
                            ,P_I_Qty                 In Ias_Bill_Dtl.I_Qty%Type                     Default Null                    
                            ,P_I_Price               In Ias_Bill_Dtl.I_Price%Type                   Default Null                    
                            ,P_I_Price_Vat           In Ias_Bill_Dtl.I_Price_Vat%Type               Default Null
                            ,P_Qt_Prm_Method         In NUMBER                                      Default Null 
                            ,P_Qut_Prm_Price         In NUMBER                                      Default Null
                            ,P_Qt_Prm_Ser            In NUMBER                                      Default Null
                            ,P_Dis_Amt_Dtl           In Ias_Bill_Dtl.Dis_Amt_Dtl%Type               Default Null
                            ,P_Dis_Amt_Dtl_Vat       In Ias_Bill_Dtl.Dis_Amt_Dtl_Vat%Type           Default Null                  
                            ,P_Dis_Amt_Dtl2          In Ias_Bill_Dtl.Dis_Amt_Dtl2%Type              Default Null
                            ,P_Dis_Amt_Dtl2_Vat      In Ias_Bill_Dtl.Dis_Amt_Dtl2_Vat%Type          Default Null                    
                            ,P_Dis_Amt_Dtl3          In Ias_Bill_Dtl.Dis_Amt_Dtl3%Type              Default Null
                            ,P_Dis_Amt_Dtl3_Vat      In Ias_Bill_Dtl.Dis_Amt_Dtl3_Vat%Type          Default Null                    
                            ,P_Dis_Amt_Mst           In Ias_Bill_Dtl.Dis_Amt_Mst%Type               Default Null                   
                            ,P_W_Code                In Ias_Bill_Dtl.W_Code%Type                    Default Null
                            ,P_Expire_Date           In Ias_Bill_Dtl.Expire_Date%Type               Default Null
                            ,P_Batch_No              In Ias_Bill_Dtl.Batch_No%Type                  Default Null                     
                            ,P_Brn_No                In Ias_Bill_Dtl.Brn_No%Type                    Default Null 
                            ,P_Doc_Date              In Ias_Bill_Mst.Bill_Date%Type                 Default Null
                            ,P_CUR_CODE              In EX_RATE.CUR_CODE%Type                       Default Null 
                            ,P_Ac_Rate               In NUMBER                                      Default Null
                            ,P_Lev_No                In Number                                      Default Null
                            ,P_USR_NO                In USER_R.U_ID%Type                            Default Null
                            ,P_Use_Exp_Date          IN  NUMBER                                     DEFAULT 1 
                            ,P_Use_Batch_No          IN  NUMBER                                     DEFAULT 1
                            ,P_Service_Item          IN  NUMBER                                     DEFAULT 0
                            ,P_Bill_Doc_Type         IN  NUMBER                                    Default Null
                            ,P_CLC_VAT_PRICE_TYP     IN  NUMBER                                     DEFAULT 1                                                                                                                   
                            ,P_Lng_No                In Number                                      Default 1  
                            ,P_Msg_Txt               In Out Varchar2
                            ,P_Pkg_Line              In Out Varchar2
                            ,P_Pkg_NM                In Out Varchar2 ); 
--##-------------------------------------------------------------------------------------------##-- 
Function Chk_Price_Lmt(P_Lmt_Typ    In Number,
                       P_Price_Type In Number,
                       P_Price      In Number,
                       P_W_Code     In Ias_Bill_Dtl.W_Code%Type Default Null,
                       P_I_Qty      In Ias_Bill_Dtl.I_Qty%Type Default Null,
                       P_Brn_No     In Ias_Bill_Dtl.Brn_No%Type Default Null,
                       P_Usr_No     In User_R.U_Id%Type Default Null,
                       P_Lev_No     In Number Default Null,
                       P_I_Code     In Ias_Itm_Mst.I_Code%Type,
                       P_Itm_Unt    In Ias_Bill_Dtl.Itm_Unt%Type,
                       P_Cur_Code   In Ex_Rate.Cur_Code%Type Default Null,
                       P_Ac_Rate    In Number Default Null,
                       P_Stk_Rate   In Number Default Null) Return Number;
--##-------------------------------------------------------------------------------------------##--
PROCEDURE CHK_INPT_DATA(P_INPT_TYP     IN     VARCHAR2,
                        P_SYS_TYP      IN     NUMBER ,--##    P_SYS_TYP =  1 = SALE , 2= STOCKE ,3 = PURCHASE ,                                                    ,
                        P_DOC_TYPE     IN     NUMBER,                        
                        P_INPT_CODE1   IN     VARCHAR2,
                        P_INPT_CODE2   IN     VARCHAR2 DEFAULT NULL,
                        P_INPT_CODE3   IN     VARCHAR2 DEFAULT NULL,
                        P_INPT_CODE4   IN     VARCHAR2 DEFAULT NULL,
                        P_LNG_DFLT     IN     NUMBER DEFAULT 1,
                        P_INPT_NM      IN OUT VARCHAR2,
                        P_MSG_NO       IN OUT NUMBER)  ;
--##-------------------------------------------------------------------------------------------##--
PROCEDURE    CHK_SUB_LDGR(   P_SYS_TYP     IN     NUMBER,   --##    P_SYS_TYP =  1 = SALE , 2= STOCKE ,3 = PURCHASE                ,
                             P_SYS_NO      IN     NUMBER,
                             P_DOC_TYPE    IN     NUMBER,
                             P_CST_TYPE    IN     NUMBER,
                             P_PJ_TYPE     IN     NUMBER,
                             P_ACTV_TYPE   IN     NUMBER,
                             P_CC_CODE     IN OUT COST_CENTERS.CC_CODE%TYPE,
                             P_PJ_NO       IN OUT IAS_PROJECTS.PJ_NO%TYPE,
                             P_ACTV_NO     IN OUT IAS_ACTVTY.ACTV_NO%TYPE,
                             P_REP_CODE    IN     SALES_MAN.REPRS_CODE%TYPE,
                             P_A_CODE      IN     ACCOUNT.A_CODE%TYPE,
                             P_CHK_AC_CC   IN     NUMBER DEFAULT 0,
                             P_LNG_NO      IN     NUMBER DEFAULT 1,
                             P_MSG_TXT     IN OUT VARCHAR2,
                             P_PKG_LINE    IN OUT VARCHAR2,
                             P_PKG_NM      IN OUT VARCHAR2)  ;
--##-------------------------------------------------------------------------------------------##--                                                                                                                                                                                                                                             
End Gnr_api_pkg;
/
CREATE PACKAGE GST_RPRT_PKG AS

--=========================================================================================
   PROCEDURE  GST_RPRT_SMPL1_PRC ;
--=========================================================================================  
   PROCEDURE  GST_RPRT_SMPL2_PRC ;
--=========================================================================================  
END GST_RPRT_PKG;
/
CREATE PACKAGE HRS_POSTING_PKG AS
			G_Lng_No             Pls_Integer;
			G_Usr_No             Pls_Integer;
			G_loc_cur_Code       EX_RATE.CUR_CODE%TYPE;
			G_Pst_Date           DATE;
			G_Use_Audit_Doc      Number; 
			--##--------------------------------------------------------------------------------------##--
			 PROCEDURE Get_Prmtr_Prc ( P_Lng_no  In Pls_Integer Default 1,
			                           P_Usr_No  In Pls_Integer);
			--##--------------------------------------------------------------------------------------##--
		FUNCTION Chk_Exist_Doc_Fnc  ( P_Doc_Typ In IAS_POST_MST.DOC_TYPE%TYPE , P_Doc_Srl In IAS_POST_MST.DOC_SER%TYPE) RETURN NUMBER ;
			--##--------------------------------------------------------------------------------------##--
			PROCEDURE Del_Doc_Prc  ( P_Doc_Typ In IAS_POST_MST.DOC_TYPE%TYPE , P_Doc_Srl In IAS_POST_MST.DOC_SER%TYPE) ;
			--##--------------------------------------------------------------------------------------##--
			 PROCEDURE Insrt_Doc_In_Pst_Prc (  P_Doc_Typ     In NUMBER ,
			                                   P_Doc_Srl      In NUMBER,
			                                   P_Usr_No       In Pls_Integer,
			                                   P_Lng_no       In Pls_Integer) ;
			--##--------------------------------------------------------------------------------------##--
			 PROCEDURE Pst_Paymnt_Trust_Prc   (  P_Pst_Typ         In NUMBER   Default 0
			                                     ,P_F_Doc_No       In NUMBER   Default Null
			                                     ,P_T_Doc_No       In NUMBER   Default Null
			                                     ,P_F_Doc_Date     In DATE     Default Null
			                                     ,P_T_Doc_Date     In DATE     Default Null
			                                     ,P_Doc_Srl        In NUMBER   Default Null
			                                     ,P_Doc_Jv_Typ     In NUMBER   Default Null
			                                     ,P_Brn_No         In S_BRN.BRN_NO%TYPE Default Null );
			--##--------------------------------------------------------------------------------------##--
			 PROCEDURE Pst_Mdcl_Care_Prc   (  P_Pst_Typ         In NUMBER   Default 0
			                                     ,P_F_Doc_No       In NUMBER   Default Null
			                                     ,P_T_Doc_No       In NUMBER   Default Null
			                                     ,P_F_Doc_Date     In DATE     Default Null
			                                     ,P_T_Doc_Date     In DATE     Default Null
			                                     ,P_Doc_Srl        In NUMBER   Default Null
			                                     ,P_Doc_Jv_Typ     In NUMBER   Default Null
			                                     ,P_Brn_No         In S_BRN.BRN_NO%TYPE Default Null );
			--##--------------------------------------------------------------------------------------##--
			PROCEDURE Pst_Slry_Calc_Prc   (   P_Pst_Typ        In NUMBER   Default 0
			                                 ,P_Prd_No         In NUMBER  Default Null
			                                 ,P_F_Doc_Date     In DATE     Default Null
			                                 ,P_T_Doc_Date     In DATE     Default Null
			                                 ,P_Doc_Srl        In NUMBER   Default Null
			                                 ,P_Brn_No         In S_BRN.BRN_NO%TYPE Default Null ) ;
			--##--------------------------------------------------------------------------------------##--
			PROCEDURE Dvd_Slry_Calc_Prc   ( P_Doc_Srl        In NUMBER ,
			                                P_Emp_No         In S_EMP.EMP_NO%TYPE);
		--##--------------------------------------------------------------------------------------##--                                 
			END HRS_POSTING_PKG;
/
CREATE PACKAGE IAS_Acode_Pkg as
 
 Type t_cv Is Ref Cursor;
 
 FUNCTION Get_A_Name(P_a_code In ACCOUNT.A_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_A_code_By_Nm (P_a_nm In ACCOUNT.A_NAME%TYPE) RETURN VARCHAR2 ;
 FUNCTION Get_One_CC_Ac(P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2;
 FUNCTION Get_Cnt_Acy (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_No   In Number) RETURN NUMBER;
 FUNCTION Get_One_Acy_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2;
 
 
 FUNCTION Get_Cnt_CshNo (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv in NUMBER DEFAULT 1)RETURN NUMBER;
 FUNCTION Get_One_CshNo_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_Prv In Number  DEFAULT 1) RETURN VARCHAR2;
 FUNCTION Get_Cnt_BnkNo (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1)RETURN NUMBER;
 FUNCTION Get_One_BnkNo_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN VARCHAR2; 
 FUNCTION Get_Cnt_ACCNTDTL(P_ac_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN Number;
 FUNCTION Get_One_ACCNTDTL_Ac (P_ac_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN VARCHAR2;
 FUNCTION Get_Cnt_CstCode (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number)RETURN NUMBER;
 FUNCTION Get_One_CstCode_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2;
 FUNCTION Get_Cnt_VndCode (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number)RETURN NUMBER;
 FUNCTION Get_One_VndCode_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2;
 
 FUNCTION Check_Acy (P_a_code In ACCOUNT.A_CODE%TYPE,P_a_cy   In VARCHAR2) RETURN NUMBER;
 FUNCTION  Get_Ac_Rprt(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_Ac_Type (P_a_code In ACCOUNT.A_CODE%TYPE,P_Type In VARCHAR2 Default Null) RETURN NUMBER;
 FUNCTION Get_A_S_M (P_A_S_M In ACCOUNT.A_S_M%TYPE) RETURN Number;
 FUNCTION Get_AC_PARENT(P_a_code In ACCOUNT.A_CODE%TYPE, P_G_PARENT NUMBER DEFAULT 0) RETURN VARCHAR2;
 PROCEDURE GET_A_ANLS(P_AC_DTL_TYP IN  ACCOUNT.AC_DTL_TYP%TYPE,
                      P_ANLS_NO   OUT  ACCOUNT.A_ANALYSIS%TYPE,
                      P_FLOW_TYP  OUT  ACCOUNT.FLOW_TYPE%TYPE    )  ;
 FUNCTION Get_AC_Analysis(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION GET_FLOW_BY_A_ANLYS(P_A_ANLYS In IAS_ACCOUNT_ANLSYS.ANLS_NO%TYPE) RETURN NUMBER ;
 FUNCTION Get_AC_ClSS(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_AC_GRP(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_AC_DR(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER ;
 ---------------------------------------------------------------------------------------
 PROCEDURE Build_Acc_Tree ( P_A_Code    In ACCOUNT.A_CODE%TYPE
                         ,P_A_S_M  IN NUMBER DEFAULT NULL                    
                         ,P_FRM_ST IN VARCHAR2);
 PROCEDURE ReBuild_Acc_Tree ;
 ---------------------------------------------------------------------------------------                    
 PROCEDURE Chk_Ac_code ( P_A_Code    In ACCOUNT.A_CODE%TYPE,
                         P_Lng_No     In LANG_DEF.LANG_NO%TYPE,
                         P_Usr_No     In USER_R.U_ID%TYPE,
                         P_Scr_Typ    In NUMBER DEFAULT 1,
                         P_Doc_Date   IN DATE   DEFAULT NULL,
                         P_CC_CODE    In COST_CENTERS.CC_CODE%TYPE  DEFAULT NULL,
                         P_PJ_NO      In IAS_PROJECTS.PJ_CODE%TYPE     DEFAULT NULL,
                         P_ACTV_NO    In IAS_ACTVTY.ACTV_CODE%TYPE  DEFAULT NULL,
                         P_Ac_Nm      In Out ACCOUNT.A_NAME%TYPE,
                         P_Ac_Dtl_Typ In Out ACCOUNT.Ac_Dtl_Typ%TYPE,
                         P_Msg_No     In Out NUMBER  );
                        

 FUNCTION  Chk_Ac_Conn      ( P_CONN_TYP  IN NUMBER ,
                              P_a_code    In ACCOUNT.A_CODE%TYPE, 
                              P_conn_code In COST_CENTERS.CC_CODE%TYPE DEFAULT NULL) RETURN NUMBER ;

 Procedure SRCH_ACODE( a_cv      In Out t_cv,
                     P_Sql       In Varchar2,
                     P_Lang_no   In Number     ,                                    
                     P_OrdBy     In Varchar2,                        
                     P_User_No   In Number) ;  
                                                                       
Function Chk_TaxAc_code_Fnc( P_Brn_No          In s_brn.brn_no%TYPE
                            ,P_DOC_DATE        IN DATE
                            ,P_Ac_Code         In ACCOUNT.A_CODE%TYPE
                            ,P_CLC_TYP_NO_TAX  In number
                            ,P_Tax_Prcnt       In Out NUMBER
                            ,P_Tax_Actv_Date   Out Date
                            ,P_Msg_No          In Out NUMBER )  Return Number ; 
End IAS_Acode_Pkg;
/
CREATE PACKAGE IAS_Actv_Pkg as
 FUNCTION Get_Actv_Name(P_Actv_No In IAS_ACTVTY.Actv_NO%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_Actv_Sub (P_Actv_No In IAS_ACTVTY.Actv_NO%TYPE) RETURN NUMBER;
 FUNCTION Get_Grp_Actv_Name (P_Grp_No In IAS_ACTVTY_GROUP.GROUP_NO%TYPE,P_Lng_no In Number) RETURN  VARCHAR2;
 FUNCTION Get_Actv_S_M (P_Actv_S_M In IAS_ACTVTY.Actv_SUB%TYPE) RETURN Number ;
 FUNCTION Chk_Actv (P_Actv_No In IAS_ACTVTY.Actv_No%TYPE , P_ScrType In Varchar2 Default Null) RETURN Number ;
 FUNCTION Chk_Priv_Actv (P_Actv_No In IAS_ACTVTY.Actv_No%TYPE , P_Usr_No In Number) RETURN Number ; 
 PROCEDURE Chk_Actv_No (  P_Actv_No    In IAS_ACTVTY.Actv_NO%TYPE,
		                      P_Lng_No     In LANG_DEF.LANG_NO%TYPE,
		                      P_Usr_No     In USER_R.U_ID%TYPE,
		                      P_Scr_Typ    In NUMBER DEFAULT 1,
		                      P_Doc_Date   In DATE   DEFAULT NULL,
		                      P_A_CODE     In ACCOUNT.A_CODE%TYPE         DEFAULT NULL,
		                      P_CC_CODE    In COST_CENTERS.CC_CODE%TYPE   DEFAULT NULL,
		                      P_PJ_NO      In IAS_PROJECTS.PJ_NO%TYPE     DEFAULT NULL,
		                      P_Actv_Nm    In Out IAS_ACTVTY.Actv_A_NAME%TYPE,
		                      P_Msg_No     In Out NUMBER  ) ;
End IAS_Actv_Pkg;
/
CREATE PACKAGE IAS_AC_CC_LMT_PKG AS
G_Aud_No    Number;
--=========================================================
  FUNCTION  Check_Ac_Cc_Use_Lmt(P_Lmt_Type  In  Number                                  ,
                                P_a_code    In  ACCOUNT.A_CODE%TYPE         DEFAULT NULL,
                                P_cc_code   In  COST_CENTERS.CC_CODE%TYPE   DEFAULT NULL,
                                P_acy       In  varchar2                    DEFAULT NULL) RETURN NUMBER;
--=========================================================
Procedure Get_Max_Aud_Lmt ;
--=========================================================
PROCEDURE Insrt_Aud_Lmt(P_AUD_TYPE        In  NUMBER                      ,
                        P_DOC_TYPE        In  NUMBER                      ,
                        P_JV_TYPE         In  NUMBER                      ,
                        P_DOC_NO          In  NUMBER                      ,
                        P_DOC_SER         In  NUMBER                      ,
                        P_a_code          In  ACCOUNT.A_CODE%TYPE         ,
                        P_cc_code         In  COST_CENTERS.CC_CODE%TYPE   ,
                        P_A_CY            In  VARCHAR2                    ,
                        P_AMT             In  NUMBER                      ,
                        P_AMTF            In  NUMBER                      ,
                        P_c_code          In  CUSTOMER.C_CODE%TYPE        ,
                        P_v_code          In  V_DETAILS.V_CODE%TYPE       ,
                        P_A_DESC          In  VARCHAR2                    ,
                        P_REF_NO          In  VARCHAR2                    ,
                        P_CASH_NO         In  NUMBER                      ,
                        P_CHEQUE_NO       In  NUMBER                      ,
                        P_VALUE_DATE      In  DATE                        ,
                        P_EXTERNAL_POST   In  NUMBER                      ,
                        P_RCRD_NO         In  NUMBER                      ,
                        P_a_code_Lmt      In  ACCOUNT.A_CODE%TYPE         ,
                        P_cc_code_Lmt     In  COST_CENTERS.CC_CODE%TYPE   ,
                        P_A_CY_LMT        In  VARCHAR2                    ,
                        P_AMT_LMT         In  NUMBER                      ,
                        P_EXCEED_LMT      In  NUMBER                      ,
                        P_AUD_U_ID        In  NUMBER                      ,
                        P_BRN_NO          In  NUMBER                      ,
                        P_BRN_YEAR        In  NUMBER                      ,
                        P_CMP_NO          In  NUMBER                      ,
                        P_BRN_USR         In  NUMBER                      );
--==============================================================================
End IAS_AC_CC_LMT_PKG;
/
CREATE PACKAGE  IAS_Anls_Pkg as
						 V_NO_OF_DCML NUMBER:=IAS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_GL','nvl(NO_OF_DECIMAL,2)',' Where 1=1 ');
						 FUNCTION Get_Ac_Cntct_Anls_Fnc ( P_Anls_no In Number , P_Doc_Post In Number Default 1 ) RETURN VARCHAR2 ;
					 FUNCTION Get_Ac_Blnc_Anls_Fnc ( P_Anls_no In Number , P_Doc_Post In Number Default 1,P_BRN_NO IN NUMBER DEFAULT 0) RETURN NUMBER ;
						 FUNCTION Get_Value_Anls_Fnc ( P_Fld_Value In Varchar2  ) RETURN NUMBER ;
					 FUNCTION Get_Indctr_Fnc ( P_Typ_no In Number , P_Doc_Post In Number Default 1 ,P_BRN_NO IN NUMBER DEFAULT NULL) RETURN NUMBER ;
						 PROCEDURE INSRT_ANLSYS_DATA_PRC;
     	End IAS_Anls_Pkg;
/
CREATE Package Ias_AP_Doc_Serial_Pkg As 
--##-----------------------------------------------------------------------------------##--
 FUNCTION Request_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                  ,
                         P_Ser_Type  In  Ias_Para_Ap.Ap_Preq_Serial%Type    ,
                         P_Preq_Type In  P_Request.Pr_Type%Type             ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Vnd_Quot_Serial(P_Brn_No   In  S_Brn.Brn_No%Type                  ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Order_Serial(P_Brn_No      In  S_Brn.Brn_No%Type                  ,
                       P_Ser_Type    In  Ias_Para_Ap.Ap_Po_Serial%Type      ,
                       P_Po_Type     In  P_Order.Po_Type%Type               ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Grn_Serial(P_Brn_No        In  S_Brn.Brn_No%Type                  ,
                     P_Ser_Type      In  Ias_Para_Ap.Grn_Serial%Type        ,
                     P_Grn_Type      In  Grn_Master.Grn_Type%Type           ,
                     P_Grn_Cc_Code   In  Grn_Master.cc_code%Type            ,
                     P_Grn_W_Code    In  Grn_Master.W_code%Type             ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Pi_Serial(P_Brn_No        In  S_Brn.Brn_No%Type                  ,
                    P_Ser_Type      In  Ias_Para_Ap.Ap_Pi_Serial%Type      ,
                    P_Pur_Type      In  Ias_Pi_Bill_Mst.Pur_Type%Type      ,
                    P_Pi_Doc_Type   In  Ias_Pi_Bill_Mst.Bill_Doc_Type%Type ,
                    P_Pi_Cc_Code    In  Ias_Pi_Bill_Mst.Cc_code%Type       ,
                    P_Pi_W_Code     In  Ias_Pi_Bill_Mst.W_code%Type        ,
                    P_BILL_TYPE_NO  In  Ias_Pi_Bill_Mst.Bill_Type_No%Type  ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Lc_Serial(P_Brn_No         In  S_Brn.Brn_No%Type                  ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Gr_Serial(P_Brn_No      In  S_Brn.Brn_No%Type             ,
                    P_Ser_Type    In  Ias_Para_Ap.Ap_Pi_Serial%Type ,
                    P_Gr_Doc_Type In  Gr_Note.Pi_Doc_Type%Type      ,
                    P_Gr_Cc_Code  In  Gr_Note.Cc_code%Type          ,
                    P_Gr_W_Code   In  Gr_Note.W_code%Type           ,
                    P_INCOM_TYPE  In  Gr_Note.INCOM_TYPE%Type       ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Pri_Serial(P_Brn_No        In  S_Brn.Brn_No%Type                  ,
                     P_Ser_Type      In  Ias_Para_Ap.Ap_Pri_Serial%Type        ,
                     P_Pri_Doc_Type  In  Ias_Pr_Bill_Mst.RT_BILL_DOC_TYPE%Type,
                     P_Pri_Cc_Code   In  Ias_Pr_Bill_Mst.cc_code%Type       ,
                     P_Pri_W_Code    In  Ias_Pr_Bill_Mst.W_code%Type       ,
                     P_Typ_No        In  Ias_Pr_Bill_Mst.Typ_No%Type ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Adjst_Installment_Serial(P_Brn_No   In  S_Brn.Brn_No%Type         ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Pi_Add_Disc_Serial(P_Brn_No         In  S_Brn.Brn_No%Type         ) Return Number ;
--##-----------------------------------------------------------------------------------##--
End Ias_AP_Doc_Serial_Pkg ;
/
CREATE PACKAGE Ias_Ap_Trns_Pkg Is
Procedure Calc_Bill_Chrg_itm_Prc(P_Docser             In Number,
                                 P_Acy 	              In Varchar2,
                                 P_Billrate           In Number,                                 
                                 P_V_Code             In V_Details.V_Code%Type,
                                 P_V_Class            In Number,
                                 P_Bill_Type_No       In Number,
                                 P_Doc_Date		      In Date  ,
                                 P_Rcrd_No            In Number Default 0,-- this for update record
                                 P_Itm_Chrg_Calc_Typ  In Number,
                                 P_Itm_Chrg_Wcode_Typ In Number,
                                 P_Itm_Chrg_Use_Prd   In Number,
                                 P_Itm_Chrg_Calc_Amt_Typ In Number,                               
                                 P_No_Des    	         In Number);
                                     
PROCEDURE Get_Chrg_itm_B4save_Prc  (P_acy 			     In Varchar2,
                                    P_billrate 		     In Number,                                        
                                    P_v_code 		     In V_Details.V_CODE%TYPE,
                                    P_v_class            In Number	,
                                    P_Bill_Type_No       In Number ,   
                                    P_Doc_Date		     In Date	,                                     
                                    P_Icode   	         In Ias_Itm_Mst.I_Code%Type,
                                    P_Itm_Unt            In Ias_Itm_Dtl.Itm_Unt%Type,
                                    P_Wcode    	         In Number,
                                    P_Iqty    	         In Number,                                        
                                    P_Iprice             In Number,                                    
                                    P_DIS_AMT_DTL1       In Number,
                                    P_DIS_AMT_DTL2       In Number,
                                    P_DIS_AMT_DTL3       In Number,
                                    P_Disc_Amt 	         In Number,
                                    P_Vat_Amt  	         In Number,
                                    P_Othr_Amt_Itm       In Out Number,                                        
                                    P_Itm_Chrg_Calc_Typ  In Number,
                                    P_Itm_Chrg_Wcode_Typ In Number,
                                    P_Itm_Chrg_Use_Prd   In Number Default 0,
                                    P_Itm_Chrg_Calc_Amt_Typ In Number,
                                    P_No_Des    	     In Number);
Procedure Calc_Bill_Chrg_itm_Mst_Prc(P_Docser          In Number,
                                     P_Doc_Date		     In Date  ,
                                     P_No_Des    	     In Number);                                      
Procedure Calc_Rt_Bill_Chrg_itm_Prc(P_Rt_Bill_ser     In Number,
                                 P_bill_ser           In Number,
                                 P_Acy 	              In Varchar2,
                                 P_Billrate           In Number,                                 
                                 P_V_Code             In V_Details.V_Code%Type,
                                 P_V_Class            In Number,
                                 P_Bill_Type_No       In Number,
                                 P_Doc_Date		        In Date  ,
                                 P_Rcrd_No            In Number Default 0,-- this for update record
                                 P_Itm_Chrg_Calc_Typ  In Number,
                                 P_Itm_Chrg_Wcode_Typ In Number,
                                 P_Itm_Chrg_Use_Prd   In Number,
                                 P_Itm_Chrg_Calc_Amt_Typ In Number,                               
                                 P_No_Des    	         In Number);
PROCEDURE Insrt_Po_ordr_dtl_tmp_prc(P_Doc_M_Sq            In  P_ORDER.Doc_M_Sq%Type
                                 , P_Po_No               In  P_ORDER.Po_No%Type            Default Null
                                 , P_Po_Date           In  P_ORDER.Po_Date%Type          Default Null     
                                 , P_V_Code              In  P_ORDER.V_Code%Type             Default Null                                        
                                 , P_PO_Desc              In  P_ORDER.PO_DESC%Type             Default Null
                                 , P_I_Code              In  P_ORDER_DETAIL.I_Code%Type             Default Null      
                                 , P_Itm_Unt             In  P_ORDER_DETAIL.Itm_Unt%Type            Default Null
                                 , P_Psize               In  P_ORDER_DETAIL.P_Size%Type             Default Null 
                                 , P_W_Code              In  P_ORDER_DETAIL.W_Code%Type             Default Null 
                                 , P_Expire_Date         In  P_ORDER_DETAIL.Expire_Date%Type        Default Null      
                                 , P_Batch_No            In  P_ORDER_DETAIL.Batch_No%Type           Default Null   
                                 , P_Wt_Unt              In  P_ORDER_DETAIL.Wt_Unt%Type             Default Null   
                                 , P_Wt_Qty              In  P_ORDER_DETAIL.Wt_Qty%Type             Default Null   
                                 , P_Argmnt_No           In  P_ORDER_DETAIL.Argmnt_No%Type          Default Null
                                 , P_I_Length            In  P_ORDER_DETAIL.I_Length%Type           Default Null     
                                 , P_I_Width             In  P_ORDER_DETAIL.I_Width%Type            Default Null      
                                 , P_I_Height            In  P_ORDER_DETAIL.I_Height%Type           Default Null      
                                 , P_I_Number            In  P_ORDER_DETAIL.I_Number%Type           Default Null                         
                                 , P_I_Qty               In  P_ORDER_DETAIL.I_Qty%Type              Default Null
                                 , P_Free_Qty            In  P_ORDER_DETAIL.Free_Qty%Type           Default Null                                  
                                 , P_I_Price             In  P_ORDER_DETAIL.I_Price%Type            Default Null     
                                 , P_I_Price_Vat         In  P_ORDER_DETAIL.I_Price_Vat%Type        Default Null     
                                 , P_Dis_Per             In  P_ORDER_DETAIL.Dis_Per%Type            Default Null  
                                 , P_Dis_Amt_Dtl         In  P_ORDER_DETAIL.Dis_Amt_Dtl%Type        Default Null                                 
                                 , P_Dis_Per2            In  P_ORDER_DETAIL.Dis_Per2%Type           Default Null  
                                 , P_Dis_Amt_Dtl2        In  P_ORDER_DETAIL.Dis_Amt_Dtl2%Type       Default Null                                 
                                 , P_Dis_Per3            In  P_ORDER_DETAIL.Dis_Per3%Type           Default Null  
                                 , P_Dis_Amt_Dtl3        In  P_ORDER_DETAIL.Dis_Amt_Dtl3%Type       Default Null                                 
                                 , P_Cc_Code             In  P_ORDER_DETAIL.Cc_Code%Type            Default Null    
                                 , P_Pj_No               In  P_ORDER_DETAIL.Pj_No%Type              Default Null     
                                 , P_Actv_No             In  P_ORDER_DETAIL.Actv_No%Type            Default Null                                      
                                  ,P_Item_Desc           In  P_ORDER_DETAIL.Item_Desc%Type          Default Null   
                                 , P_Barcode             In  P_ORDER_DETAIL.Barcode%Type            Default Null   
                                 , P_Rcrd_No             In  P_ORDER_DETAIL.Rcrd_No%Type            Default Null
                                 , P_Brn_No              In  P_ORDER_DETAIL.Brn_No%Type             Default Null 
                                 , P_Ad_U_Id             In  P_ORDER.Ad_U_Id%Type            Default Null
                                 , P_Ad_Date             In  P_ORDER.Ad_Date%Type            Default Null
                                 , P_Ad_Trmnl_Nm         In  P_ORDER.Ad_Trmnl_Nm%Type        Default Null
                                 , P_Doc_D_Sq            In  P_ORDER_DETAIL.Doc_Sequence%Type       Default Null                                                                                           
                                 , P_Doc_Type_Ref        In  P_ORDER_DETAIL.Doc_Type_Ref%Type       Default Null  
                                 , P_Doc_No_Ref          In  P_ORDER_DETAIL.Doc_No_Ref%Type         Default Null    
                                 , P_Doc_Ser_Ref         In  P_ORDER_DETAIL.Doc_Ser_Ref%Type        Default Null                                                      
                                 , P_Doc_Seq_Tmp         In  P_ORDER_DETAIL.Doc_Seq_Tmp%Type        Default Null
                                 , P_Trns_Typ            In  Char 
                                 );                                      
Function Get_Rsrv_Qty_Po_ordr_dtl_BkTmp ( P_Doc_Typ      In  Number,
                                   P_I_Code       In  P_ORDER_DETAIL.I_Code%Type             
                                 , P_Psize        In  P_ORDER_DETAIL.P_Size%Type        
                                 , P_W_Code       In  P_ORDER_DETAIL.W_Code%Type        
                                 , P_Expire_Date  In  P_ORDER_DETAIL.Expire_Date%Type        
                                 , P_Batch_No     In  P_ORDER_DETAIL.Batch_No%Type   
                                 , P_Doc_M_Sq     In  P_ORDER.Doc_M_Sq%Type
                                 , P_DOC_SER_REF  In  P_ORDER_DETAIL.DOC_SER_REF%type
                                 , P_Doc_Seq_Tmp  In  P_ORDER_DETAIL.Doc_Seq_Tmp%Type) Return Number;                                                                                                       			                                                                                                                                                                                     			                                              
End Ias_Ap_Trns_Pkg;
/
CREATE PACKAGE Ias_Ar_Get_Data_Rep_Pkg AS
		PROCEDURE Ias_Ar_Get_Inc_Data ( P_SqlStr       In     Varchar2,
		                                   P_Avl_Qty      In Out Number ,
		                                   P_Avl_Qty_Amt  In Out Number ,
		                                   P_Open_Bal_Qty In Out Number ,
		                                   P_Open_Bal_Amt In Out Number ,
		                                   P_Inc_Qty      In Out Number ,
		                                   P_Inc_Amt      In Out Number ,
		                                   P_Out_Qty      In Out Number ,
		                                   P_Out_Amt      In Out Number ,
		                                   P_Tr_Qty       In Out Number ,
		                                   P_Tr_Amt       In Out Number ,
		                                   P_Adj_Qty      In Out Number ,
		                                   P_Adj_Amt      In Out Number );
	  PROCEDURE Ias_Ar_Get_Sales_Data ( P_SqlStr        In     Varchar2,                                                
                                      P_Qty_Prd       In Out Number ,
                                      P_Amt_Prd       In Out Number ,
                                      P_Stk_Prd       In Out Number ,
                                      P_Sman_Comm_Amt In Out Number ,
                                      P_Qty           In Out Number ,
                                      P_Amt           In Out Number ,
                                      P_Stk           In Out Number );                                                  
    FUNCTION Get_Disc_Age ( P_Grp_Type Varchar2,
                            P_Round_Slice_Disc number,
                            P_Icode Varchar2,
                            P_Wcode Number,
                            F_Dis_Per Number,
                            T_Dis_Per Number,
                            P_FDate Date,
                            P_TDate Date) Return Number;
                            
    Function Get_Wc_Wtavg_Main( P_Wtavg_Type In Number,                            
                                P_Icode      In Ias_Itm_Mst.I_Code%Type Default Null) Return Number ;

FUNCTION Get_Sman_Comm_Per( P_Machine_No In Number ) Return Number ;
PROCEDURE Ias_Ar_Get_AvlQty_Data ( P_SqlStr        In     Varchar2,                                                
                                       P_AvlQty        In Out Number ,
                                       P_AvlQty_Amt    In Out Number );  
PROCEDURE Ias_Ar_Get_Tr_Data ( P_SqlStr    In     Varchar2,                                                
                               P_Tr_Qty    In Out Number ,
                               P_Tr_Amt    In Out Number );                              
END Ias_Ar_Get_Data_Rep_Pkg;
/
CREATE Package Ias_Ar_Point_Pkg As
 Function Get_Cust_Nm( P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type,P_Lng_No In Number) Return Varchar2;
 Function Check_Cust_Inactv(P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type) Return Number ; 
 Function Get_Cust_Point_typ(P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type) Return Number ;
 Function Get_Point_Type_Nm(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Lng_No In Number) Return Varchar2;
 Function Check_Point_Type_State(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type) Return Number ;
 Procedure Get_Point_Typ_Min_Lmt(P_Point_Typ_No  In Ias_Point_Typ_Mst.Point_Typ_No%Type,                                                                          
                                 P_Min_Lmt_Calc  Out Number,
                                 P_Min_Lmt_Rplc  Out Number) ; 
 Function Get_Point_Calc_Typ(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type) Return Number ;
 Function Get_Point_Cnt ( P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Bill_Amt Number, P_Point_Calc_Typ In Number) Return Number;
 Function Get_Point_Rplc_Cnt(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Amt_Rplc Number) Return Number;
 Function Get_Point_Amt     (P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Point_cnt Number) Return Number;
 Function Get_Point_Rplc_Amt(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Point_cnt Number) Return Number;
 Function Get_Cust_Point_Bal(P_Bill_Date          In Ias_Bill_Mst.Bill_Date%Type,
                             P_Cust_Code          In Ias_Cash_Custmr.Cust_Code%Type,
                             P_Point_Typ_No       In Ias_Point_Typ_Mst.Point_Typ_No%Type,
                             P_Db_Link            In Varchar2 Default Null,
                             P_Point_Aprvd_By_Day In Number Default Null,
                             P_Point_Calc_Typ     In Number,
                             P_Lng_No             In Number  Default 1 ) Return Number;
 Procedure Insrt_Point_Trns(   P_Trns_No               In Number,
                              P_Trns_Date             In Date,
                              P_Cust_Code             In Ias_Cash_Custmr.Cust_Code%Type,
                              P_Mobile_No             In Ias_Cash_Custmr.Mobile_No%Type,
                              P_Point_Typ_No          In Ias_Point_Typ_Mst.Point_Typ_No%Type,
                              P_Doc_Typ               In Number,
                              P_Doc_No                In Ias_Bill_Mst.Bill_No%Type,
                              P_Doc_Srl               In Ias_Bill_Mst.Bill_Ser%Type,
                              P_Doc_Amt               In Number,
                              P_Point_Cnt             In Number,                                            
                              P_Trns_Type             In Number,                                          
                              P_A_Cy                  In Varchar2,
                              P_Ac_Rate               In Number,                                          
                              P_Machine_No            In Number,
                              P_Point_Age_Expired_Typ In Ias_Para_Ar.Point_Age_Expired_Typ%Type,
                              P_Point_Age_Expired_Prd In Ias_Para_Ar.Point_Age_Expired_Prd%Type,
                              P_Ad_U_Id               In User_R.U_Id%Type,
                              P_Ad_Date               In Date,                                                                                    
                              P_Up_U_Id               In User_R.U_Id%Type,
                              P_Up_Date               In Date,
                              P_Up_Cnt                In Ias_Point_Calc_Trns.Up_Cnt%Type,
                              P_Cmp_No                In Ias_Point_Calc_Trns.Cmp_No%Type,
                              P_Brn_No                In Ias_Point_Calc_Trns.Brn_No%Type,
                              P_Brn_Year              In Ias_Point_Calc_Trns.Brn_Year%Type,
                              P_Brn_Usr               In Ias_Point_Calc_Trns.Brn_Usr%Type,
                              P_Bill_Amt              In Number,
                              P_Yr_Br_Usr             In Varchar2,
                              P_Db_Link               In Varchar2) ;                                       
  PROCEDURE Del_Point_Trns( P_Doc_Typ            In NUMBER,
                            P_Doc_Srl            In Ias_Bill_Mst.Bill_Ser%Type,
                            P_Bill_Date          In Ias_Bill_Mst.Bill_Date%Type,
                            P_Cust_Code          In Ias_Cash_Custmr.Cust_Code%Type,
                            P_Point_Typ_No       In Ias_Point_Typ_Mst.Point_Typ_No%Type,
                            P_Point_Calc_Typ_No  In Ias_Bill_Mst.Point_Calc_Typ_No%Type,
                            P_Point_Aprvd_By_Day In Number Default Null,
                            P_Bill_Amt           In Ias_Bill_Mst.Bill_Amt%Type,
                            P_Point_Rplc_Amt     In Ias_Bill_Mst.Point_Rplc_Amt%Type,
                            P_Frm_St             In Char,
                            P_Yr_Br_Usr          In Varchar2,
                            P_Db_Link            In Varchar2,
                            P_Msg_No             In Out Number  );                               
                                  
  FUNCTION Chk_Point_Trns(  P_Bill_Date          In Ias_Bill_Mst.Bill_Date%Type,
                            P_Cust_Code          In Ias_Cash_Custmr.Cust_Code%Type,
                            P_Point_Typ_No       In Ias_Point_Typ_Mst.Point_Typ_No%Type,
                            P_Point_Aprvd_By_Day In Number Default Null,
                            P_Yr_Br_Usr          In Varchar2,
                            P_Db_Link            In Varchar2  ) RETURN NUMBER;                             
  Function Check_Conn_Cntr ( P_DB_Link In Varchar2) Return Number ;
  Function Get_Expire_Date ( P_C_Code_Csh            In Ias_Cash_Custmr.Cust_Code%Type        ,
                             P_Point_Typ_No          In Ias_Point_Typ_Mst.Point_Typ_No%Type    ,
                             P_Point_Age_Expired_Typ In Ias_Para_Ar.Point_Age_Expired_Typ%Type ,
                             P_Point_Age_Expired_Prd In Ias_Para_Ar.Point_Age_Expired_Prd%Type ) Return Date ;
End Ias_Ar_Point_Pkg;
/
CREATE PACKAGE Ias_Attach_Itm_Pkg AS
 FUNCTION Get_Attach_Name(P_Attch_No In Number, P_Attch_Desc_No Number,P_Lang_No Number default 1) return VARCHAR2 ;
 FUNCTION Get_Attach_Icode_AvlQty ( P_Icode   In   Ias_Itm_Mst.I_CODE%TYPE,
                                                              p_Psize   In   NUMBER,
                                                              p_Wcode   In   WAREHOUSE_DETAILS.W_CODE%TYPE,
                                                              p_ExpDate In   DATE,
                                                              p_BatchNo In   VARCHAR2,
                                                              P_Flex_No In   NUMBER) RETURN NUMBER;
 PROCEDURE Get_Attach_Icode_Out ( P_Icode   In   Ias_Itm_Mst.I_CODE%TYPE,                                                                    
                                  p_ExpDate In   DATE,
                                  p_BatchNo In   VARCHAR2,
                                  p_Doc_Type_Ref In NUMBER,
                                  p_Doc_Ser_Ref In NUMBER  Default 0,
                                  p_Out_Ser      In NUMBER Default 0,
                                  P_Flex_No In   NUMBER,
                                  P_Rcrd_No      In NUMBER,
                                  P_Out_Bill  In NUMBER Default 0,                                
                                  P_QTY OUT NUMBER,
                                  P_FQTY OUT NUMBER);
  
  FUNCTION Get_Attach_avlqty ( P_Icode          In   Ias_Itm_Mst.I_Code%Type,
	                             P_wcode          In   Number,
                             P_psize          In   Number,                                                                    
	                             P_Expdate        In   Date,
	                             P_Batchno        In   Varchar2,
	                             P_Attch_No       In   Number,
	                             P_Attch_Desc_No  In   Number) RETURN NUMBER;
                                  
FUNCTION Ias_Get_Icode_Attch_Rsrv_Qty ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
																				P_Flex_No In Number,            
																				P_Psize   In Ias_Itm_Dtl.P_Size%Type                    ,
																				P_Wcode   In WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NUll,
																				P_Tdate   In DATE     DEFAULT NULL  ,                                                                
																				P_Doc_Ser In Number)  Return Number ;
                                                                   
END Ias_Attach_Itm_Pkg;
/
CREATE PACKAGE IAS_AUDIT_OTHR_PKG AS
G_Aud_No    Number;
G_Frm_No    Number;
G_Doc_Type  Number;
G_Doc_Ser   Number;
G_Aud_Type  Number;
IsAud       Number;
G_User_No   Number;
SqlStr_Mst  VarChar2(4000);
SqlStr_Dtl  VarChar2(4000);
--=========================================================
Procedure Chk_Audit_User ;
--=========================================================
Procedure Get_Max_AudNo ;
--=========================================================
Procedure Audit_Othr_Prc (   P_UserNo    In NUMBER ,
                             P_Frm_No    In NUMBER   Default Null, 
                             P_Doc_Type  In NUMBER,
                             P_Doc_Ser   In NUMBER,
                             P_Aud_Type  In NUMBER)  ;
--=========================================================
PROCEDURE Insrt_Audit_othr;
--=========================================================
PROCEDURE Insrt_Aud_Itm_Othr_Mst;
--=========================================================
PROCEDURE Insrt_Aud_Itm_Othr_Dtl;
--=========================================================
PROCEDURE Get_SqlStr_MstDtl;
--==============================================================================
End IAS_AUDIT_OTHR_PKG;
/
CREATE PACKAGE IAS_AUDIT_PKG AS
G_Aud_No    Number;
G_Frm_No    Number;
G_Doc_Type  Number;
G_Doc_Ser   Number;
G_Aud_Type  Number;
IsAud       Number;
G_User_No   Number;
SqlStr_Mst  VarChar2(4000);
SqlStr_Dtl  VarChar2(4000);
--=========================================================
Procedure Check_Audit_User ;
--=========================================================
Procedure Get_Max_AudNo ;
--=========================================================
Procedure Audit_Prc (   P_UserNo    In NUMBER ,
                        P_Frm_No    In NUMBER   Default Null, 
                        P_Doc_Type  In NUMBER,
                        P_Doc_Ser   In NUMBER,
                        P_Aud_Type  In NUMBER)  ;
--=========================================================
PROCEDURE Insrt_Audit;
--=========================================================
PROCEDURE Insrt_Aud_Acc_Mst;
--=========================================================
PROCEDURE Insrt_Aud_Acc_Dtl;
--=========================================================
PROCEDURE Insrt_Aud_Itm_Mst;
--=========================================================
PROCEDURE Insrt_Aud_Itm_Dtl;
--=========================================================
PROCEDURE Get_SqlStr_MstDtl;
--==============================================================================
PROCEDURE Aud_Rprt ( P_Form_No    IN NUMBER   , 
                     P_Rep_Nm     IN VARCHAR2 , 
                     P_Rep_Whr    IN VARCHAR2 , 
                     P_Rep_Whr1   IN VARCHAR2 ,
                     P_Rep_Title  IN VARCHAR2 , 
                     P_Aud_U_Id   IN NUMBER   , 
                     P_Trmnl_Name IN VARCHAR2 ,
                     P_Cmp_No     IN NUMBER   ,
                     P_Brn_No     IN NUMBER   , 
                     P_Brn_Usr    IN NUMBER   , 
                     P_Brn_Year   IN NUMBER   );
--==============================================================================                     
End IAS_AUDIT_PKG;
/
CREATE PACKAGE IAS_Aud_List_Pkg AS

   TYPE AUD_List_Rec IS REF CURSOR ;
   PROCEDURE Aud_List_View (List_Qry          IN OUT Aud_List_Rec ,
                            P_date            IN Date,
                            P_Jv_Type         IN Number,
                            P_Cash_Bank       IN Cash_In_Hand.Cash_No%Type,
                            P_W_Code          IN  WareHouse_Details.W_Code%Type,
                            P_CS              IN Cost_Centers.cc_code%Type,
                            P_User_No         IN Number,
                            P_Aud_Jv_Type     IN Number,
                            P_Order_By        IN Varchar2,
                            P_Brn_No		  IN NUMBER,
                            P_F_DATE          IN Date,
                            P_T_DATE          IN Date,
                            P_F_DOC_NO		  IN NUMBER,
                            P_T_DOC_NO		  IN NUMBER,
                            P_AUDIT_REF       IN NUMBER DEFAULT null,
                            P_CHQ_DUE         IN Number DEFAULT 0,
                            P_DOC_SEQUENCE    IN Number DEFAULT 0,
                            P_SYS_NO          IN NUMBER DEFAULT null
                              );

	Procedure Update_Aud  (     AudRef            IN Number,
	                            AudDesc           IN Varchar2,
	                            AudUid            IN Number,
	                            DocSer            IN Number,                            
	                            ClmnNam           IN Varchar2,
	                            TablNameMst       IN Varchar2,   
	                            P_AUD_DATE        IN Varchar2   DEFAULT Ias_Gen_Pkg.Get_CurDate,                         
	                            P_Msg_No          In Out NUMBER ,
	                            P_CHQ_DUE         IN Number DEFAULT 0,
	                            P_DOC_SEQUENCE    IN Number DEFAULT 0)  ;
END IAS_Aud_List_Pkg;
/
CREATE PACKAGE IAS_AUD_SYS_PKG AS

 V_USER_NO   		Pls_Integer;
 V_FRM_NO  		 	Pls_Integer;
 V_AUD_ST  		 	Pls_Integer; -- 0 = Not Aud , 1 = Aud 
 TYPE AUD_LST_RCRD IS REF CURSOR ;
--##-----------------------------------------------------------------------------------##--
 PROCEDURE GET_COL_PK ( P_TAB_NM IN VARCHAR2 , V_COL_NM1 OUT VARCHAR2, V_COL_NM2 OUT VARCHAR2,V_COL_NM3 OUT VARCHAR2 ) ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Get_Aud_Cols_Fnc  ( P_Tab IN VARCHAR2) RETURN LONG ;
 FUNCTION Get_Aud_Cols_Fnc2 ( P_Tab IN VARCHAR2) RETURN VARCHAR2 ;
--##-----------------------------------------------------------------------------------##--  
 PROCEDURE SET_PARA( P_FRM_NO     IN NUMBER,
                     P_USER_NO    IN NUMBER,
                     P_AUD_ST     IN NUMBER  DEFAULT 1);
--##-----------------------------------------------------------------------------------##--                     
 PROCEDURE ADD_HIST( P_OPR_TYPE  IN NUMBER,
                     P_TAB_NM    IN VARCHAR2,
                     P_COL_NM    IN VARCHAR2,
                     P_NEW_VAL   IN VARCHAR2,
                     P_OLD_VAL   IN VARCHAR2,
                     P_PK1_VAL   IN VARCHAR2   DEFAULT NULL ,
                     P_PK2_VAL   IN VARCHAR2   DEFAULT NULL ,
                     P_PK3_VAL   IN VARCHAR2   DEFAULT NULL ,
                     P_CMP_NO    IN NUMBER     DEFAULT NULL ,
                     P_BRN_NO    IN NUMBER     DEFAULT NULL ,
                     P_BRN_USR   IN NUMBER     DEFAULT NULL ,
                     P_BRN_YEAR  IN NUMBER     DEFAULT NULL );
--##-----------------------------------------------------------------------------------##--
 PROCEDURE ADD_DOC_DEL (   P_FORM_NO      IN NUMBER, 
                           P_DOC_TYPE     IN NUMBER, 
                           P_DOC_JV_TYPE  IN NUMBER, 
                           P_DOC_NO       IN NUMBER,
                           P_DOC_SER      IN NUMBER,
                           P_DOC_DATE     IN DATE,
                           P_DOC_AMT      IN NUMBER    DEFAULT NULL, 
                           P_PUR_TYPE     IN NUMBER    DEFAULT NULL,
                           P_CC_CODE      IN VARCHAR2  DEFAULT NULL,
                           P_PJ_NO        IN VARCHAR2  DEFAULT NULL,
                           P_W_CODE       IN NUMBER    DEFAULT NULL,
                           P_CASH_NO      IN NUMBER    DEFAULT NULL,
                           P_REF_NO       IN VARCHAR2  DEFAULT NULL, 
                           P_DOC_DESC     IN VARCHAR2  DEFAULT NULL, 
                           P_A_CODE       IN VARCHAR2  DEFAULT NULL,
                           P_A_CY         IN VARCHAR2  DEFAULT NULL,
                           P_V_CODE       IN VARCHAR2  DEFAULT NULL,
                           P_C_CODE       IN VARCHAR2  DEFAULT NULL,
                           P_AC_CODE_DTL  IN VARCHAR2  DEFAULT NULL,
                           P_AC_DTL_TYP   IN NUMBER    DEFAULT NULL,
                           P_AD_U_ID      IN NUMBER,
                           P_AD_DATE      IN DATE,  
                           P_UP_U_ID      IN NUMBER,
                           P_UP_DATE      IN DATE, 
                           P_DEL_U_ID     IN NUMBER,
                           P_DEL_DATE     IN DATE,
                           P_CMP_NO       IN NUMBER,
                           P_BRN_NO       IN NUMBER,
                           P_BRN_USR      IN NUMBER,
                           P_BRN_YEAR     IN NUMBER);
--##-----------------------------------------------------------------------------------##--
PROCEDURE FTCH_AUD_DATA (  P_LST_QRY            IN OUT AUD_LST_RCRD ,
                           P_LNG_NO             IN NUMBER,
                           P_WHR                IN VARCHAR2,
                           P_ORDR_BY            IN VARCHAR2 DEFAULT NULL) ;
--##-----------------------------------------------------------------------------------##--                           
End IAS_AUD_SYS_PKG;
/
CREATE PACKAGE IAS_Brn_Pkg as
    FUNCTION    Get_Br_Nm        ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_Lng_no In Number) Return VARCHAR2;
    FUNCTION    Get_Br_Cmp       ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    )   Return      Number;
    PROCEDURE   Get_Brn_Cmp_Ser  ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_CMP_NO In Out S_BRN.Cmp_NO%TYPE) ;
    FUNCTION    Chk_Usr_Brn_Prv  ( P_UserNo    In Number               ,   G_BRN_NO    In Number,P_Priv_Type In Varchar2)  RETURN NUMBER ;
    FUNCTION    Chk_Brn_Cmp_Ser  ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_CMP_NO In S_BRN.Cmp_NO%TYPE) Return NUMBER;
    FUNCTION    Get_Br_Inf       ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_Inf_Type  In Varchar2)   Return   VARCHAR2;
    FUNCTION    Get_Brn_Usr_Con  ( P_UserNo    In USER_R.U_ID%TYPE     )   Return      NUMBER ;
    FUNCTION    Get_Cst_Brn_Conn ( P_C_Code In CUSTOMER.C_CODE%TYPE ) Return NUMBER ;
    FUNCTION    Get_Csh_Brn_Conn ( P_Csh_No In cash_in_hand.Cash_no%TYPE ) Return NUMBER ;
    FUNCTION    Get_Vnd_Brn_Conn ( P_V_Code In V_DETAILS.V_CODE%TYPE ) Return NUMBER ;
    
    FUNCTION    Get_Cmp_Nm      (    P_CMP_NO    In S_CMPNY.CMP_NO%TYPE    ,   P_Lng_no In Number) Return VARCHAR2 ;

End IAS_Brn_Pkg;
/
CREATE PACKAGE IAS_Cc_Code_Pkg as
 FUNCTION Get_Cc_Name  (P_cc_code In COST_CENTERS.CC_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_CC_No    (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER ;
 FUNCTION Get_CC_SER   (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER ;
 FUNCTION Get_C_S_M    (P_C_S_M In Cost_centers.C_S_M%TYPE) RETURN Number;
 FUNCTION Check_Use_Pj (P_Cc_Code In COST_CENTERS.CC_CODE%TYPE) RETURN NUMBER ;
 FUNCTION Check_Cc_Pj (P_Cc_Code In COST_CENTERS.CC_CODE%TYPE,P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER ;
 FUNCTION Get_One_CC_Pj (P_Cc_Code In COST_CENTERS.CC_CODE%TYPE,P_Usr_no In NUMBER) RETURN NUMBER ;

	PROCEDURE Chk_cc_code ( P_cc_Code    In COST_CENTERS.CC_CODE%TYPE,
	                        P_Lng_No     In LANG_DEF.LANG_NO%TYPE,
	                        P_Usr_No     In USER_R.U_ID%TYPE,
	                        P_Scr_Typ    In NUMBER DEFAULT 1,
	                        P_Doc_Date   IN DATE   DEFAULT NULL,
	                        P_A_CODE     In ACCOUNT.A_CODE%TYPE  DEFAULT NULL,
	                        P_PJ_NO      In IAS_PROJECTS.PJ_CODE%TYPE     DEFAULT NULL,
	                        P_ACTV_NO    In IAS_ACTVTY.ACTV_CODE%TYPE  DEFAULT NULL,
	                        P_CC_Nm      In Out COST_CENTERS.CC_A_NAME%TYPE,
	                        P_Msg_No     In Out NUMBER  ) ;
                         
End IAS_Cc_Code_Pkg;
/
CREATE PACKAGE IAS_Check_DBS_Pkg Is
  PROCEDURE Check_WtAvg_Itm ;
  FUNCTION  Check_Cpqty RETURN Number;
  PROCEDURE Update_Cpqty ;
  PROCEDURE Update_Avlqty ;
	PROCEDURE Check_Cmp_Data ( P_Lng_No   In Number   Default 1,
	                           P_Doc_Type In Number, 
	                           P_Doc_Ser  In Number   Default Null,
	                           P_FD       In Date     Default Null,
	                           P_TD       In Date     Default Null,
	                           P_FDoc     In Number   Default Null,
	                           P_TDoc     In Number   Default Null,
	                           P_Doc_Post In Number   Default Null ,
	                           P_Stp      In Number   Default 1);	                          
	PROCEDURE Check_Posting1 (P_DocType In Number Default Null, P_stp In Number Default 0);
	PROCEDURE Check_Posting2 (P_DocType In Number Default Null, P_stp In Number Default 0);   
  PROCEDURE Check_Mst_Dtl (P_Doc_Type In Number Default Null, P_stp In Number Default 0,P_desc_err In out Varchar2);
	Procedure Upd_Brn_Intermediate_Table (P_Tbl_Nm   In Varchar2                    ,
                            P_Col_Nm   In Varchar2                    ,
                            P_Doc_Type In Item_Movement.Doc_Type%Type ,
                            P_Doc_Ser  In Item_Movement.Doc_Ser%Type  ,
                            P_Cmp_No   In Item_Movement.Cmp_No%Type   ,
                            P_Brn_No   In Item_Movement.Brn_No%Type   );
	Procedure Chk_Wcode_Conn_Brn ;
End IAS_Check_DBS_Pkg;
/
CREATE Package IAS_Check_Sys_Pkg Is
  User_Id   pls_integer;
  Lng_no    pls_integer := 1;
  cnt      	Number;

  PROCEDURE Set_Sys_Prmtrs ( Lang_no In NUMBER ,U_id In NUMBER);
  
Function Check_Cur_Rate(P_Accur     In Varchar2             , 
                        P_Acrate    In Number               ,
                        P_Local_Cur In Varchar2             ,
                        P_Rate_Type In Number Default 0     ,
                        P_Doc_Typ   In Number Default  Null     ,
                        P_Date      In Date   Default  Null , 
                        P_USR_NO    IN NUMBER Default  Null   ) Return Number;
                        
  PROCEDURE Check_Date ( P_Doc_Date In Date,P_Scr_Type In Varchar2,
                         P_Frm_Type In Number Default 0,
                         P_chk_cls  In Number Default 1,
                         P_Lang_no  In Number Default 1,
                         P_Brn_No   In Number Default NULL);
  PROCEDURE Check_Bt_Date (P_Fd In Out Date,P_Td In Out Date);
  PROCEDURE Check_Bt_Value(P_FN In Out Varchar2,P_TN In Out Varchar2,P_Type In Varchar2 Default 'N');
  FUNCTION  Check_Ac_Acy_Inctv	(P_Type In varchar2,P_a_code In ACCOUNT.A_CODE%TYPE,P_acy In varchar2) RETURN NUMBER;
  FUNCTION  Check_Ac_Cc	  (P_a_code In ACCOUNT.A_CODE%TYPE,P_cc_code In COST_CENTERS.CC_CODE%TYPE) RETURN NUMBER ;
  FUNCTION  Check_Use_Cc	(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER ;
  FUNCTION  Check_Ac_lc	  (P_a_code In ACCOUNT.A_CODE%TYPE,
                           P_acy    In varchar2,
                           P_lc_no  In varchar2  Default Null ) RETURN NUMBER ;
  FUNCTION Check_Inv_Close RETURN NUMBER;
  FUNCTION Check_Mtch_StkCst_CP (P_G_Ser In Number) RETURN NUMBER;
  PROCEDURE Check_Avl_Qty ;
  FUNCTION Check_Lmt_Cost_Itm ( P_Wtavg_Type In NUMBER,
                                P_I_code   	 In Ias_Itm_Mst.I_CODE%TYPE,
                              	P_W_code   	 In WAREHOUSE_DETAILS.W_CODE%TYPE DEFAULT NULL,
                              	P_Itm_Cost 	 In NUMBER) RETURN BOOLEAN;
                              
  FUNCTION  Check_Ac_Pj	  (P_a_code In ACCOUNT.A_CODE%TYPE,P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER ;
  FUNCTION  Check_Use_Pj	(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER ;                            

End IAS_Check_Sys_Pkg;
/
CREATE Package IAS_Closing_Mnth_Pkg As

FUNCTION GET_ACODE_DIFF(P_A_CODE VARCHAR2,P_BRN_NO  NUMBER ) RETURN VARCHAR2;
                             
PROCEDURE Reverse_Journal ( P_Period_no  In NUMBER,
                            P_F_DATE     In DATE,
                            P_T_DATE     In DATE,
                            P_Year       In NUMBER,
                            P_Brn_Year   In NUMBER,
                            P_Brn_No     In NUMBER,
                            P_Lng_no     In NUMBER,
                            P_User_No    In NUMBER,
                            P_CMP_NO     In NUMBER,
                            P_BRN_USR    In NUMBER);

PROCEDURE Curr_Diff_Calc( P_Diff_Cur_Cls_Type In NUMBER,
                          P_Diff_Ac_Type In NUMBER,
                          P_Period_No    In NUMBER, 
                          P_f_DATE          In DATE,
                          P_t_DATE         In DATE,
                          P_Year            In NUMBER,
                          P_cc_close       In NUMBER,
                          P_Pj_close       In NUMBER,
                          P_Actv_close     In NUMBER,
                          P_JV_BRN_NO      In NUMBER,
                          P_Local_cur      In VARCHAR2,
                          P_Brn_Year       In NUMBER,
                          P_Brn_No         In NUMBER,
                          P_Lng_no         In NUMBER,
                          P_User_No         In NUMBER,
                          P_CMP_NO       In NUMBER,
                          P_BRN_USR      In NUMBER);  
                          
PROCEDURE Del_Doc_Prc  ( P_Doc_Typ In IAS_POST_MST.DOC_TYPE%TYPE , P_Doc_Srl In IAS_POST_MST.DOC_SER%TYPE);

FUNCTION Chk_Exist_Doc_Fnc  ( P_Doc_Typ In IAS_POST_MST.DOC_TYPE%TYPE , P_Doc_Srl In IAS_POST_MST.DOC_SER%TYPE) RETURN NUMBER;                                                     

Function Get_B4_CLS_Cur_Rate (  P_Cur_Code     In Varchar2,
                             P_Cur_Rate_Flg In Number Default  1,
                             P_Cur_Rate_Typ In Number Default  1,
                             P_F_Date       In Date, 
                             P_T_Date       In Date,
                             P_Prd_No       In Number,
                             P_Brn_No       In Number) Return Number;  
                             
Function Get_Cls_Cur_Rate (  P_Cur_Code     In Varchar2,
                             P_Prd_No       In Number,
                             P_Brn_No       In Number ) Return Number; 
                             
End IAS_Closing_Mnth_Pkg;
/
CREATE Package IAS_Closing_Year_Pkg as
 PROCEDURE Mov_Ac_Cls_Prc ( P_Ac_cls   In  NUMBER,
                            P_Cc_cls   In  NUMBER,
                            P_Pj_cls   In  NUMBER,
                            P_Actv_cls In  NUMBER,
                            P_Cst_Cls   In  NUMBER,
                            P_Vnd_Cls   In  NUMBER,
                            P_LC_Cls    In  NUMBER,
                            P_REP_Cls    In  NUMBER,
                            P_COL_Cls    In  NUMBER,
                            P_Lng_no     In  NUMBER,
                            P_User_No    In  NUMBER,
                            P_Local_Cur  In  VARCHAR2,
                            P_Brn_no     In  NUMBER,
                            P_Brn_year   In  NUMBER,
                            P_CMP_NO     In  NUMBER,
                            P_Brn_Usr    In  NUMBER) ;
 
 /*PROCEDURE Account_Closing_Prc ( P_cc_close  In NUMBER,
                                 P_Brn_Year  In NUMBER,
                                 P_Brn_No    In NUMBER,
                                 P_Lng_no    In NUMBER,
                                 P_User_No   In NUMBER,
                                 P_Local_Cur In VARCHAR2,
                                 P_Aralt     In NUMBER,
                                 P_Apalt     In NUMBER,
 												         P_CMP_NO    In NUMBER,
												         P_BRN_USR   In NUMBER);*/
												         
PROCEDURE Pl_Closing_Prc ( P_pl_code   In VARCHAR2,
                           P_Local_Cur In VARCHAR2,
                           P_Lang_no   In NUMBER,
                           P_user_no   In NUMBER,
                           P_Brn_year  In NUMBER,
                           P_Brn_no    In NUMBER,
									         P_CMP_NO        In NUMBER,
									         P_BRN_USR       In NUMBER);                                 

PROCEDURE Move_Kimb_Data ( P_Brn_Year   In NUMBER, 
                           P_Brn_No     In NUMBER,
									         P_CMP_NO     In NUMBER,
									         P_BRN_USR    In NUMBER);
PROCEDURE Move_Bills_Data ( P_Brn_Year   In NUMBER,
                            P_Brn_No     In NUMBER,
                            P_Ser_Type   In NUMBER,
										        P_CMP_NO     In NUMBER,
										        P_BRN_USR    In NUMBER);


PROCEDURE Move_Install_Ar_Data (  P_Brn_Year      In NUMBER,
                                  P_Brn_No        In NUMBER,
                                  P_Cmp_NO        In NUMBER,
                                  P_Brn_Usr       In NUMBER,
                                  P_Mov_Typ       In NUMBER Default 0,                                                         
                                  P_Aralt         In NUMBER,
                                  P_Local_Cur     In Varchar2,
                                  P_No_Of_Decimal In Number,
                                  P_User_No       In Number) ;
                                  
--=============================================================================
PROCEDURE Move_Install_AP_Data (    P_Brn_Year      In NUMBER,
                                    P_Brn_No        In NUMBER,
                                    P_Cmp_NO        In NUMBER,
                                    P_Brn_Usr       In NUMBER,
                                    P_Mov_Typ       In NUMBER Default 0, 
                                    P_Local_Cur     In Varchar2,
                                    P_No_Of_Decimal In Number,                                                        
                                    P_Apalt         In NUMBER)  ;
--=============================================================================
Function Move_Cheque_Gl_Prc ( P_MOVE_CHEQ_NOT_DUE   In Number, 
                              P_VOUCHER_SERIAL      In Number, 
                              P_YBP                 In Varchar2 ) Return Varchar2;                                     
--=============================================================================                                    
Procedure Inv_Close_Prc( P_Inv_Type      In NUMBER ,
                         P_Frst_Date     In DATE   ,
                         P_User_No       In NUMBER ,
                         P_Brn_Year      In NUMBER ,
                         P_Brn_No        In NUMBER ,
                         P_Cmp_No        In NUMBER ,
                         P_Brn_Usr       In NUMBER ,
                         P_Vndr_Close    In NUMBER Default 0 ,
                         P_Cst_Type      In Number ,
                         P_Close_Inc_Dtl In Number Default 0 ) ;
                         
PROCEDURE Insrt_Other_Table( p_stk_cur     In VARCHAR2 ,
                             p_user_no     In NUMBER   ,
                             P_Brn_No      In NUMBER   ,
                             P_Brn_Year    In NUMBER   ,
                             P_Frst_Date   In DATE     ,
                             p_stk_rate    In NUMBER   ,
										         p_cst_type    In NUMBER   ,
                             p_wtavg_type  In NUMBER   , 
												     p_cmp_no      In NUMBER   ,
												     p_brn_usr     In NUMBER   );
PROCEDURE Upd_Prim_Wtavg ( p_cst_type    In NUMBER ,
                           p_wtavg_type  In NUMBER ,
                           P_Close_Inc_Dtl In Number Default 0 );                           


End IAS_Closing_Year_Pkg;
/
CREATE PACKAGE IAS_CshBnk_Pkg as
 FUNCTION Get_CB_Name (P_Cb_Type In Number,P_Cb_No  In Number,P_Lng_no In Number)   RETURN VARCHAR2;
 FUNCTION Get_CB_No_By_Nm (P_Cb_Type In Number,P_cb_nm In ACCOUNT.A_NAME%TYPE) RETURN VARCHAR2;
 FUNCTION Get_A_code  (P_Cb_Type In Number,P_Cb_No  In Number) RETURN VARCHAR2;
 FUNCTION Check_Acy   (P_Cb_Type In Number,P_Cb_No  In Number,P_a_cy   In VARCHAR2) RETURN Number;
 FUNCTION Get_Rcpt_Srl_Typ (P_AC_DTL_TYP   In Number
                           ,P_AC_CODE_DTL  In Number) RETURN Number;
 FUNCTION Get_CB_Ser  (P_Cb_Type In Number,P_Cb_No  In Number) RETURN Number;
 FUNCTION Get_Csh_Type(P_Csh_No  In CASH_IN_HAND.CASH_NO%TYPE) RETURN Number;
 FUNCTION Get_CB_Bal  (P_Cb_Type In Number,P_Cb_No  In Number,P_a_cy   In VARCHAR2) RETURN Number;
 FUNCTION Get_CB_No   (P_Cb_Type In Number , P_a_code ACCOUNT.A_CODE%TYPE, P_Acy In EX_RATE.CUR_CODE%TYPE DEFAULT NULL) RETURN NUMBER;
 FUNCTION Check_Mediator_Bnk (P_Cb_No  In Number) RETURN Number;
 FUNCTION Chk_Ac_Csh_Bnk (P_a_code ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_Cnt_Acy (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_No   In Number) RETURN NUMBER;
 FUNCTION Get_One_Acy_Cb (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_no In Number) RETURN VARCHAR2;
 
 FUNCTION  Get_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number) RETURN NUMBER;
 FUNCTION  Chk_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number,P_Brn_no In Number) RETURN NUMBER;
 
 PROCEDURE Get_Cshbnk_Lmt ( P_amt_Type       In number    ,
                            P_amt            In number    ,
                            P_Cb_Type        In number    ,
                            P_Cb_No          In  cash_in_hand.Cash_No%TYPE , 						   
 			                      P_User_No        In  Number   ,
 			                      P_acy 		       In  Varchar2 ,
			                      P_local_cur      In  Varchar2 ,
			                      P_frc_no         In  Number	Default 2,
                            P_Min_lmt 		   out Number   ,						
                            P_Max_lmt 		   out Number   ,
			                      P_Min_Trns_lmt   out Number   ,
                            P_Max_Trns_lmt   out Number   , 
                            P_Pass           out Number   ,
                            P_Pass_Prv       out Number   ,
                            P_Msg            out Varchar2 ,
                            P_Lng            In  Number   ) ;

PROCEDURE Chk_CshBnk_No ( P_Csh_No     IN CUSTOMER.C_CODE%TYPE,
                          P_Ac_Code    IN ACCOUNT.A_CODE%TYPE,                     
                          P_Csh_Nm     IN Out ACCOUNT.A_NAME%TYPE,
                          P_Ac_Dtl_Typ IN Out ACCOUNT.Ac_Dtl_Typ%TYPE,
                          P_Cur_code   IN EX_RATE.CUR_CODE%TYPE  DEFAULT NULL,
                          P_Lng_No     IN LANG_DEF.LANG_NO%TYPE,
                          P_Usr_No     IN USER_R.U_ID%TYPE,
                          P_Scr_Typ    IN NUMBER DEFAULT 1,
                          P_MST_VCHR   IN NUMBER DEFAULT 0,
                          P_DOC_TYP    IN NUMBER DEFAULT NULL,
                          P_Msg_No     IN Out NUMBER  )  ;                            
                            
 
End IAS_CshBnk_Pkg;
/
CREATE PACKAGE IAS_CSS_PKG AS
   G_NO_OF_DECIMAL_AR     NUMBER;
   G_RCRD_NO              NUMBER                            := 0;
   G_QT_EXPIRE_AFTR_DAY   NUMBER;
   G_SO_EXPIRE_AFTR_DAY   NUMBER;
   G_CALC_VAT_AMT_TYPE    NUMBER;
   G_CC_CODE              COST_CENTERS.CC_CODE%TYPE;
   G_PJ_NO                IAS_PROJECTS.PJ_NO%TYPE;
   G_ACTV_NO              IAS_ACTVTY.ACTV_NO%TYPE;
   G_W_CODE               WAREHOUSE_DETAILS.W_CODE%TYPE;
   G_AUTO_APPROVD         ARS_PARA_CSS.AUTO_APPROVD%TYPE;
   G_DOC_NO               QUOTATION.QUOT_NO%TYPE;
   G_DOC_SER              QUOTATION.QUOT_SER%TYPE;
   G_CMP_NO               ARS_PARA_CSS.CMP_NO%TYPE;
   G_BRN_NO               ARS_PARA_CSS.BRN_NO%TYPE;
   G_BRN_YEAR             ARS_PARA_CSS.BRN_YEAR%TYPE;
   G_BRN_USR              ARS_PARA_CSS.BRN_USR%TYPE;
   G_QT_TYPE              ARS_PARA_CSS.QT_TYPE%TYPE;
   G_QT_DSC               ARS_PARA_CSS.QT_DSC%TYPE;
   G_SO_TYPE              ARS_PARA_CSS.SO_TYPE%TYPE;
   G_SO_DSC               ARS_PARA_CSS.SO_DSC%TYPE;
   G_EMP_NO               S_EMP.EMP_NO%TYPE;
   G_CUR_CODE             EX_RATE.CUR_CODE%TYPE;
   G_U_ID                 USER_R.U_ID%TYPE;
   G_RSRVD_PRD_DAY        ARS_PARA_CSS.RSRVD_PRD_DAY%TYPE;

   PROCEDURE GET_PARA;

   FUNCTION GET_DOC_TYP_SERIAL (P_DOC_TYP IN NUMBER)
      RETURN NUMBER;

   FUNCTION GET_DOC_NO (
      P_DOC_TYP       IN   NUMBER,
      P_DOC_SRL_TYP   IN   NUMBER DEFAULT NULL,
      P_BRN_YEAR      IN   NUMBER,
      P_BRN_NO        IN   S_BRN.BRN_NO%TYPE,
      P_TYP_NO        IN   NUMBER DEFAULT NULL
   )
      RETURN NUMBER;

   FUNCTION GET_DOC_SER (
      P_DOC_TYP       IN   NUMBER,
      P_DOC_SRL_TYP   IN   NUMBER DEFAULT NULL,
      P_BRN_YEAR      IN   NUMBER,
      P_BRN_NO        IN   S_BRN.BRN_NO%TYPE,
      P_TYP_NO        IN   NUMBER DEFAULT NULL,
      P_DOC_NO        IN   NUMBER
   )
      RETURN NUMBER;

   PROCEDURE INSRT_SAL_QUOTATION_MST (
      P_C_CODE            IN   CUSTOMER.C_CODE%TYPE,
      P_C_CODE_NM         IN   CUSTOMER.C_A_NAME%TYPE,
      P_QUOT_DOC_TYPE     IN   QUOTATION.QUOT_DOC_TYPE%TYPE DEFAULT NULL,
      P_QUOT_DUE_DATE     IN   QUOTATION.QUOT_DUE_DATE%TYPE DEFAULT NULL,
      P_CHEQUE_DUE_DATE   IN   QUOTATION.CHEQUE_DUE_DATE%TYPE DEFAULT NULL,
      P_CSTMR_TYP         IN   NUMBER,
      P_BRN_YEAR          IN   QUOTATION.BRN_YEAR%TYPE,
      P_BRN_USR           IN   QUOTATION.BRN_USR%TYPE,
      P_BRN_NO            IN   QUOTATION.BRN_NO%TYPE DEFAULT NULL,
      P_W_CODE            IN   QUOTATION.W_CODE%TYPE DEFAULT NULL,
      P_DOC_AMT           IN   QUOTATION.QUOT_AMT%TYPE DEFAULT 0,
      P_DISC_AMT_MST      IN   QUOTATION.DISC_AMT%TYPE DEFAULT 0,
      P_DISC_AMT_DTL      IN   QUOTATION.DISC_AMT%TYPE DEFAULT 0,
      P_VAT_AMT           IN   QUOTATION.VAT_AMT%TYPE DEFAULT 0,
      P_OTHR_AMT          IN   QUOTATION.OTHR_AMT%TYPE DEFAULT 0,
      P_EXTERNAL_POST     IN   QUOTATION.EXTERNAL_POST%TYPE DEFAULT 0,
      P_AD_TRMNL_NM       IN   QUOTATION.AD_TRMNL_NM%TYPE DEFAULT NULL,
      P_CST_ACCPT_TYP     IN   QUOTATION.CST_ACCPT_TYP%TYPE DEFAULT 0,
      P_CST_ACCPT_DSC     IN   QUOTATION.CST_ACCPT_DSC%TYPE DEFAULT NULL,
      P_A_DESC            IN   QUOTATION.A_DESC%TYPE DEFAULT NULL,
      P_QUOT_CUR          IN   QUOTATION.QUOT_CUR%TYPE DEFAULT NULL
      
   );

  PROCEDURE INSRT_SAL_QUOTATION_DTL (
      P_I_CODE         IN   IAS_ITM_MST.I_CODE%TYPE,
      P_ITM_UNT        IN   QUOTATION_DETAIL.ITM_UNT%TYPE,
      P_I_QTY          IN   NUMBER,
      P_FREE_QTY       IN   NUMBER DEFAULT 0,
      P_I_PRICE        IN   NUMBER,
      P_DIS_PER        IN   NUMBER DEFAULT NULL,
      P_DIS_AMT_DTL    IN   NUMBER DEFAULT 0,
      P_DIS_AMT_DTL2   IN   NUMBER DEFAULT 0,
      P_DIS_AMT_DTL3   IN   NUMBER DEFAULT 0,
      P_DIS_AMT_MST    IN   NUMBER DEFAULT 0,
      P_VAT_PER        IN   NUMBER DEFAULT NULL,
      P_VAT_AMT        IN   NUMBER DEFAULT NULL,
      P_OTHR_AMT       IN   NUMBER DEFAULT 0,
      P_W_CODE         IN   QUOTATION.W_CODE%TYPE DEFAULT NULL,
      P_EXPIRE_DATE    IN   QUOTATION_DETAIL.EXPIRE_DATE%TYPE DEFAULT NULL,
      P_BATCH_NO       IN   QUOTATION_DETAIL.BATCH_NO%TYPE DEFAULT NULL,
      P_EXTERNAL_POST  IN   QUOTATION.EXTERNAL_POST%TYPE DEFAULT 0
   );

   PROCEDURE INSRT_SAL_ORDR_MST (
      P_C_CODE            IN   CUSTOMER.C_CODE%TYPE,
      P_C_CODE_NM         IN   CUSTOMER.C_A_NAME%TYPE,
      P_BILL_DOC_TYPE     IN   SALES_ORDER.BILL_DOC_TYPE%TYPE DEFAULT NULL,
      P_BILL_DUE_DATE     IN   SALES_ORDER.BILL_DUE_DATE%TYPE DEFAULT NULL,
      P_CHEQUE_DUE_DATE   IN   SALES_ORDER.CHEQUE_DUE_DATE%TYPE DEFAULT NULL,
      P_CASH_NO           IN   SALES_ORDER.CASH_NO%TYPE DEFAULT NULL,
      P_CSTMR_TYP         IN   NUMBER,
      P_BRN_YEAR          IN   SALES_ORDER.BRN_YEAR%TYPE,
      P_BRN_USR           IN   SALES_ORDER.BRN_USR%TYPE,
      P_BRN_NO            IN   SALES_ORDER.BRN_NO%TYPE DEFAULT NULL,
      P_W_CODE            IN   SALES_ORDER.W_CODE%TYPE DEFAULT NULL,
      P_EMP_NO            IN   SALES_ORDER.EMP_NO%TYPE DEFAULT NULL,
      P_C_ADDRESS         IN   SALES_ORDER.C_ADDRESS%TYPE,
      P_C_MOBILE          IN   SALES_ORDER.C_MOBILE%TYPE,
      P_NT_TRANSFR_PATH   IN   SALES_ORDER.NT_TRANSFR_PATH%TYPE,
      P_LATITUDE          IN   SALES_ORDER.LATITUDE%TYPE,
      P_LONGITUDE         IN   SALES_ORDER.LONGITUDE%TYPE,
      P_DOC_AMT           IN   SALES_ORDER.ORDER_AMT%TYPE DEFAULT 0,
      P_DISC_AMT_MST      IN   SALES_ORDER.DISC_AMT%TYPE DEFAULT 0,
      P_DISC_AMT_DTL      IN   SALES_ORDER.DISC_AMT%TYPE DEFAULT 0,
      P_VAT_AMT           IN   SALES_ORDER.VAT_AMT%TYPE DEFAULT 0,
      P_OTHR_AMT          IN   SALES_ORDER.OTHR_AMT%TYPE DEFAULT 0,
      P_AD_TRMNL_NM       IN   SALES_ORDER.AD_TRMNL_NM%TYPE DEFAULT NULL
   );

   PROCEDURE INSRT_SAL_ORDR_DTL (
      P_I_CODE         IN   IAS_ITM_MST.I_CODE%TYPE,
      P_ITM_UNT        IN   ORDER_DETAIL.ITM_UNT%TYPE,
      P_I_QTY          IN   NUMBER,
      P_FREE_QTY       IN   NUMBER DEFAULT 0,
      P_I_PRICE        IN   NUMBER,
      P_DIS_PER        IN   NUMBER DEFAULT NULL,
      P_DIS_AMT_DTL    IN   NUMBER DEFAULT 0,
      P_DIS_AMT_DTL2   IN   NUMBER DEFAULT 0,
      P_DIS_AMT_DTL3   IN   NUMBER DEFAULT 0,
      P_DIS_AMT_MST    IN   NUMBER DEFAULT 0,
      P_VAT_PER        IN   NUMBER DEFAULT NULL,
      P_VAT_AMT        IN   NUMBER DEFAULT NULL,
      P_OTHR_AMT       IN   NUMBER DEFAULT 0,
      P_W_CODE         IN   SALES_ORDER.W_CODE%TYPE DEFAULT NULL,
      P_EXPIRE_DATE    IN   ORDER_DETAIL.EXPIRE_DATE%TYPE DEFAULT NULL,
      P_BATCH_NO       IN   ORDER_DETAIL.BATCH_NO%TYPE DEFAULT NULL,
      P_SUB_C_CODE     IN   ORDER_DETAIL.SUB_C_CODE%TYPE DEFAULT NULL
   );

   PROCEDURE INSRT_RSRVD_TBL;
END IAS_CSS_PKG;
/
CREATE PACKAGE IAS_Cst_Pkg as
 V_Lang_No   				 Pls_Integer;
 V_User_No   				 Pls_Integer;
 --======================================================================
 PROCEDURE Get_Para (P_Lang_no In Pls_Integer Default 1,P_User_No In Pls_Integer);
 FUNCTION Get_One_CC_Cst(P_c_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) return VARCHAR2;
 FUNCTION Get_Cnt_Acy (P_c_code In CUSTOMER.C_CODE%TYPE,P_Usr_No   In Number) return Number;
 FUNCTION Get_One_Acy_Cst (P_c_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) Return VARCHAR2;
 FUNCTION Get_Acode  (P_c_code In CUSTOMER.C_CODE%TYPE) Return VARCHAR2;
 Function Get_C_Vndr (P_C_Code In Customer.C_Code%Type) Return Varchar2 ;
 FUNCTION Get_c_code (P_a_code In ACCOUNT.A_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_C_Name(P_c_code In CUSTOMER.C_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2;
 FUNCTION Get_c_code_By_Nm (P_c_nm In CUSTOMER.C_A_NAME%TYPE) RETURN VARCHAR2;
 FUNCTION Check_Acy (P_c_code In CUSTOMER.C_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number;
 FUNCTION Check_Acy_Inctv (P_c_code In CUSTOMER.C_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number ;
	PROCEDURE get_credit_lmt ( P_Cr_Lmt_Typ in Number Default 1,
												     p_c_code      IN       customer.c_code%TYPE,
												     p_cc_code     IN       cost_centers.cc_code%TYPE DEFAULT NULL,
												     p_user_no     IN       NUMBER,
												     p_acy         IN       VARCHAR2,
												     p_local_cur   IN       VARCHAR2,
												     p_frc_no      IN       NUMBER DEFAULT 2,
												     p_Cr_Lmt_Loc  IN       NUMBER,
												     P_Cur_Rate    IN       NUMBER,
												     p_crlmt       OUT      NUMBER,
												     p_invlmt      OUT      NUMBER,
												     p_cstlmttyp   OUT      NUMBER,
		                         p_cstlmtper   OUT      NUMBER );


	PROCEDURE Chk_C_code ( P_C_Code     IN CUSTOMER.C_CODE%TYPE,
	                       P_Ac_Code    IN ACCOUNT.A_CODE%TYPE,
	                       P_Aralt      IN NUMBER,                       
	                       P_Cst_Nm     IN Out ACCOUNT.A_NAME%TYPE,
	                       P_Ac_Dtl_Typ IN Out ACCOUNT.Ac_Dtl_Typ%TYPE,
	                       P_Ar_Flg     IN NUMBER Default 0,
	                       P_Lng_No     IN LANG_DEF.LANG_NO%TYPE,
	                       P_Usr_No     IN USER_R.U_ID%TYPE,
	                       P_Scr_Typ    IN NUMBER DEFAULT 1,
	                       P_Msg_No     IN Out NUMBER  ) ;
													  
Function Get_Intrfc_Accnt (P_C_Code In Customer.C_Code%Type , P_Ac_Typ In Ias_Cst_Accnt.Ac_Typ%Type ) Return Varchar2;
End IAS_Cst_Pkg;
/
CREATE PACKAGE IAS_DBS_Sys_Pkg Is

  FUNCTION  Check_Cons (P_ConsNm   In VARCHAR2 Default Null,
                        P_TabNm    In VARCHAR2 Default Null,
  										  P_ConsType In VARCHAR2 Default Null ,
  										  P_ColNm    In VARCHAR2 Default Null) RETURN NUMBER ;
  FUNCTION  Check_Cons_St ( P_ConsNm   In VARCHAR2 Default Null,
                            P_TabNm    In VARCHAR2 Default Null,
  										  	  P_ConsType In VARCHAR2 Default Null ,
  										      P_ColNm    In VARCHAR2 Default Null) RETURN NUMBER ;
  FUNCTION  Get_Cons_Name ( P_TabNm In VARCHAR2 Default Null,P_ConsType In VARCHAR2 Default Null ,
  											 	  P_ColNm In VARCHAR2 Default Null) RETURN CHAR ;
  FUNCTION  Check_Object ( P_ObjNm In VARCHAR2 ,P_ObjType In VARCHAR2 Default Null , P_ColNm In VARCHAR2 Default Null) RETURN NUMBER ;
  PROCEDURE Check_St_OBJ ( P_Result In Out NUMBER ,P_ObjNm In VARCHAR2 Default Null) ;
  FUNCTION  Check_TabSp ( P_TsNm In VARCHAR2 ) RETURN NUMBER ;
  FUNCTION Check_Ias_User( P_Brn_Year In  number ,P_Brn_no   In  number) RETURN varchar2 ;
  FUNCTION Get_Comment ( P_Lng     In number,
                         P_TabNm   In varchar2,
                         P_ColNm   In varchar2  Default Null,
                         P_Usr_Nm  In varchar2  Default Null) RETURN Varchar2 ;
  PROCEDURE ALTR_DBS( P_TB IN VARCHAR2, P_TR_TYPE IN VARCHAR2,P_FD IN VARCHAR2);
  FUNCTION GET_DATE_OBJCT_CHNG_DDL ( P_Obj_Nm In VARCHAR2 , P_Obj_Typ In VARCHAR2 Default Null) RETURN VARCHAR2 ;
  FUNCTION Check_Valid_Object ( P_ObjNm In VARCHAR2 , P_ObjType In VARCHAR2 Default Null) RETURN NUMBER;
  Procedure Altr_Dbs_Tbl_Col( P_Tb          In Varchar2, 
                              Col_Name      In Varchar2,
                              P_Data_Type   In Varchar2, 
                              P_Dflt_Val    In Varchar2 Default Null ,
                              P_Null Number Default 0);  
                                
End IAS_DBS_Sys_Pkg;
/
CREATE Package Ias_Doc_Serial_Pkg As 
--##-----------------------------------------------------------------------------------##--
 FUNCTION Request_Out_Trnsfr_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                     ,
                                    P_Ser_Type  In  Ias_Para_Inv.Request_Serial%Type      ,
                                    P_Req_Type  In  Ias_Out_Request_Mst.Out_Req_Type%Type ,
                                    P_W_Code    In  Ias_Out_Request_Mst.W_Code%Type       ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Gr_Incoming_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                    ,
                             P_Ser_Type  In  Ias_Para_Inv.Incoming_Serial%Type    ,
                             P_Inc_Type  In  Ias_Gr_Incoming_Mst.Incom_Type%Type  ,
                             P_W_Code    In  Ias_Gr_Incoming_Mst.W_Code%Type      ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Incoming_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
                          P_Ser_Type  In  Ias_Para_Inv.Incoming_Serial%Type ,
                          P_Inc_Type  In  Gr_Note.Incom_Type%Type           ,
                          P_W_Code    In  Gr_Note.W_Code%Type               ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Outgoing_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
                          P_Ser_Type  In  Ias_Para_Inv.Outgoing_Serial%Type ,
                          P_Out_Type  In  Ias_Outgoing_Mst.Out_Type%Type    ,
                          P_W_Code    In  Ias_Outgoing_Mst.W_Code%Type      ) Return Number ;

--##-----------------------------------------------------------------------------------##--
 FUNCTION Transfer_Out_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
                              P_Ser_Type  In  Ias_Para_Inv.Transfer_Serial%Type ,
                              P_Tr_Type   In  Ias_Whtrns_Mst.Tr_Type%Type       ,
                              P_W_Code    In  Ias_Whtrns_Mst.W_Code%Type        ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Transfer_In_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
                             P_Ser_Type  In  Ias_Para_Inv.Transfer_Serial%Type ,
                             P_Tr_Type   In  Ias_Whtrns_Mst.Tr_Type%Type       ,
                             P_W_Code    In  Ias_Whtrns_Mst.W_Code%Type        ) Return Number ;

--##-----------------------------------------------------------------------------------##--
 FUNCTION Stk_Adj_Serial (P_Brn_No           In  S_Brn.Brn_No%Type                    ,
                          P_Stk_Adjstmnt_Srl In  Ias_Para_Inv.Stk_Adjstmnt_Srl%Type   ,
                          P_Stk_Type         In  Ias_Stk_Adjst_Types.Stk_Type%Type    ) Return Number  ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
                          P_Ser_Type  In  Ias_Para_Inv.Man_Inv_Serail%Type  ,
                          P_Inv_Type  In  Master_Inv.Inv_Type%Type          ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Machine_Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
                                  P_Ser_Type  In  Ias_Para_Inv.Man_Inv_Serail%Type  ,
                                  P_Inv_Type  In  Ias_Inv_Machine_Mst.Inv_Type%Type ) Return Number ;
--##-----------------------------------------------------------------------------------##--
 FUNCTION Rq_Assmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                    ,
			                             P_Ser_Type  In  Ias_Para_Inv.Incoming_Serial%Type    ,
			                             P_Rq_Type   In  Inv_Rq_Assmbl_Mst.Typ_No%Type  ,
			                             P_W_Code    In  Inv_Rq_Assmbl_Mst.W_Code%Type      ) Return Number ;
--##-----------------------------------------------------------------------------------##--                             
 Function Assmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type) Return Number ;
--##-----------------------------------------------------------------------------------##--
 Function Disassmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type) Return Number ; 
--##-----------------------------------------------------------------------------------##--
End Ias_Doc_Serial_Pkg ;
/
CREATE PACKAGE IAS_Doc_View_Pkg AS

  TYPE Doc_View_Rec IS REF CURSOR ;

	PROCEDURE Doc_View_Jv (
	       List_Qry        IN OUT Doc_View_Rec,
		     P_J_Ser         IN NUMBER,
			   P_Lang_No       IN NUMBER,
			   P_Post_Jv_Type  IN NUMBER,
			   P_Use_Srvc_Bill IN NUMBER Default 0 );

    PROCEDURE Doc_View_ICode (
         List_Qry       IN OUT Doc_View_Rec ,
	       P_J_Ser        IN NUMBER,
		 	   P_Lang_No      IN NUMBER,
		     P_Post_Jv_Type IN NUMBER);


END IAS_Doc_View_Pkg;
/
CREATE PACKAGE Ias_Dstr_Cst_Dr_Pkg as
                      PROCEDURE Ias_Dstr_Cst_Dr_Amt_Prc ( P_c_code        In Customer.C_Code%TYPE,
                                                          P_Doc_Date      In Date,
                                                          P_Local_Cur     In Varchar2,                                                      
                                                          P_Aralt         In Number,
                                                          P_User_No       In Number,
                                                          P_No_Of_Decimal In Number) ; 
                     PROCEDURE Ias_Dstr_Cst_Dr_Amt_Acy_Prc ( P_c_code        In Customer.C_Code%TYPE,
                                                             P_Doc_Date      In Date,
                                                             P_Local_Cur     In Varchar2,                                                      
                                                             P_Aralt         In Number,
                                                             P_User_No       In Number,
                                                             P_No_Of_Decimal In Number) ;                                                       
                    --##-------------------------------------------------------------------------------##--
            Type TP_CST_TBL    Is Record ( C_Code      IAS_POST_DTL.C_Code%Type,                                                                                        
                                           A_Cy        IAS_POST_DTL.A_Cy%Type,
                                           Bal         IAS_POST_DTL.AMT%Type,
                                           Fbal        IAS_POST_DTL.AMT%Type ,
                                           Cst_Grp     IAS_POST_DTL.Cc_Code%Type ,
                                           Sman_Grp    IAS_POST_DTL.Rep_Code%Type
                                              );
             
            --##---------------------------------------------------------------------------------##--
               Type Tp_CST_Rec Is Table Of TP_CST_TBL Index By Binary_Integer;      
               CSTREC  Tp_CST_Rec;
               --##---------------------------------------------------------------------------------##-- 
               
            PROCEDURE  CST_AGING_PRC(    P_Local_Cur           In Varchar2,
                                         P_Paid_Inst_MNL       IN NUMBER    Default 0,
                                         P_Cst_Grp             In Varchar2  Default NULL,
                                         P_Sman_Grp            In Varchar2  Default NULL,
                                         P_Rep_Year            IN NUMBER    Default 0,
                                         P_PER_NO              IN NUMBER    Default NULL,
                                         P_F_Day               IN Number    Default Null,
                                         P_T_Day               IN Number    Default Null,
                                         P_T_Date              IN DATE      , 
                                         P_TERMINAL            In Varchar2  Default NULL,
                                         P_WHR                 In Varchar2  Default NULL);
            --##-------------------------------------------------------------------------------##--
             Type TP_CST_TBL_2    Is Record (C_Code         IAS_CST_CR_TMP.C_Code%Type,
                                               A_Cy         IAS_CST_CR_TMP.A_Cy%Type,
                                               Doc_No       IAS_CST_CR_TMP.Doc_No%Type,
                                               Doc_Type     IAS_CST_CR_TMP.Doc_Type%Type,
                                               Jv_Type      IAS_CST_CR_TMP.DOC_Jv_Type%Type, 
                                               Doc_Ser      IAS_CST_CR_TMP.Doc_Ser%Type,
                                               Doc_Date     IAS_CST_CR_TMP.Doc_Date%Type,
                                               Doc_Due_Date  IAS_CST_CR_TMP.Doc_Due_Date%Type,
                                               Dr_Amt        IAS_CST_CR_TMP.Dr_Amt%Type,
                                               Dr_Amtf       IAS_CST_CR_TMP.Dr_Amtf%Type,
                                               Doc_Desc      IAS_CST_CR_TMP.Doc_Desc%Type,
                                               Ref_No        IAS_CST_CR_TMP.Ref_No%Type,
                                               Rcrd_No       IAS_CST_CR_TMP.Rcrd_No%Type,
                                               Cc_Code       IAS_CST_CR_TMP.Cc_Code%Type,
                                               Pj_No         IAS_CST_CR_TMP.Pj_No%Type,
                                               Actv_No       IAS_CST_CR_TMP.Actv_No%Type,
                                               Rep_Code      IAS_CST_CR_TMP.Rep_Code%Type,
                                               Cheque_Valued     IAS_CST_CR_TMP.Cheque_Valued%Type,
                                               Per_No        IAS_CST_CR_TMP.Per_No%Type,   
                                               Brn_No        IAS_CST_CR_TMP.Brn_No%Type,
                                               Brn_Year      IAS_CST_CR_TMP.Brn_Year%Type,
                                               Cmp_No        IAS_CST_CR_TMP.Cmp_No%Type,
                                               Brn_Usr       IAS_CST_CR_TMP.Brn_Usr%Type);
               
                Type Tp_CST_Rec_2 Is Table Of TP_CST_TBL_2 Index By Binary_Integer;      
                CSTREC_2  Tp_CST_Rec_2;
		            --##-------------------------------------------------------------------------------##-- 
		            FUNCTION  Get_Bl_Cst_Fnc( P_loc_cur    In VARCHAR2,
		                                        P_cc_code    In COST_CENTERS.CC_CODE%TYPE Default Null,
		                                        P_c_code     In CUSTOMER.C_CODE%TYPE,
		                                        P_acy        In VARCHAR2,
		                                        P_fd            In DATE          Default Null,
		                                        P_td           In DATE     Default Null,
		                                        P_bal_type   In Number   Default 0) RETURN  NUMBER;
		            --##-------------------------------------------------------------------------------##-- 
		            FUNCTION Chk_Prd_No (P_Prd_No In Number Default NULL,
		                                 P_PER_NO In Number Default NULL,
		                                 P_F_Day  IN Number Default Null,
		                                 P_T_Day  IN Number Default Null) RETURN Number ;
		            --##-------------------------------------------------------------------------------##--
                Function  Get_Rt_Amt_Fnc  ( P_Doc_Type      IN NUMBER,
                                            P_Doc_Ser       IN NUMBER,
                                            P_Local_Amt_Flg IN NUMBER,
                                            P_Cc_Code       IN VARCHAR2 DEFAULT NULL,
                                            P_Pj_No         IN VARCHAR2 DEFAULT NULL,
                                            P_Actv_No       IN VARCHAR2 DEFAULT NULL) RETURN NUMBER ;
                --##-------------------------------------------------------------------------------##--
                End Ias_Dstr_Cst_Dr_Pkg;
/
CREATE PACKAGE Ias_Dstr_Vndr_Pkg as
      PROCEDURE Ias_Dstr_Vndr_Cr_Amt_Prc ( P_v_code        In v_details.V_Code%TYPE DEFAULT NULL ,
                                          P_T_Date      In Date  DEFAULT NULL,
                                          P_Local_Cur     In Varchar2 DEFAULT NULL,                                                      
                                        --  P_Apalt         In Number,
                                          P_User_No       In Number DEFAULT  1) ;
PROCEDURE Ias_Dstr_Vndr_Cr_Inst_Amt_Prc ( P_v_code        In v_details.V_Code%TYPE DEFAULT NULL ,
                                          P_T_Date      In Date  DEFAULT NULL,
                                          P_Local_Cur     In Varchar2 DEFAULT NULL,
                                          P_No_Of_Decimal  In number default 2,                                                      
                                        --  P_Apalt         In Number,
                                          P_User_No       In Number DEFAULT  1) ;                                                                                                                                                              
End Ias_Dstr_Vndr_Pkg;
/
CREATE Package IAS_Fetch_Data_Pkg Is
  
Type t_cv Is Ref Cursor;
   
Procedure Get_Cst_Trns( a_cv         In Out t_cv
                       ,P_c_code    In Customer_curr.c_code%TYPE
 					   					 ,P_acy       In Customer_curr.a_cy%TYPE
 					             ,P_Lang_no   In NUMBER 	Default 1
                       ,P_OrdBy     In VARCHAR2
                       ,P_User_No   In NUMBER
                       ,P_ARALT     In NUMBER
                       ,P_Prd_Type  In NUMBER DEFAULT 0
                       ,P_Doc_Type  In NUMBER DEFAULT Null
                       ,P_Brn_No    In S_Brn.Brn_No%TYPE DEFAULT Null);

Procedure Get_vend_Trns(  a_cv         In Out t_cv
	                       ,P_v_code   In V_DETAILS.v_code%TYPE
	                       ,P_acy      In vendor_curr.a_cy%TYPE
	                       ,P_Lang_no   In NUMBER     Default 1
	                       ,P_OrdBy     In VARCHAR2
	                       ,P_User_No   In NUMBER
	                       ,P_APALT     In NUMBER
	                       ,P_Prd_Type  In NUMBER DEFAULT 0
	                       ,P_Doc_Type  In NUMBER DEFAULT Null
	                       ,P_Brn_No    In S_Brn.Brn_No%TYPE DEFAULT Null );

Procedure Get_Itm_Trns(   a_cv             IN OUT t_cv                                               ,
                          P_I_Code                   IN Item_Movement.I_Code%TYPE                          ,
                          P_doctype                  IN Item_Movement.Doc_Type%TYPE Default Null      ,
                          P_wcode                    IN Item_Movement.W_Code%TYPE     Default Null    ,
                          P_Lang_no                  IN Number  Default 1                             ,
                          P_OrdBy                     IN Varchar2                                      ,
                          P_User_No                  IN Number                                        ,
                          P_Conn_Itm_Act_By_Usr_Priv IN Ias_Para_Inv.Conn_Itm_Act_By_Usr_Priv%Type    ,
                          P_Prd_Type                 In NUMBER DEFAULT 0                              ,
                          P_F_Date                   IN Item_Movement.I_Date%TYPE                     ,
                          P_T_Date                   IN Item_Movement.I_Date%TYPE                     ,                                                
                          P_Brn_No                   IN S_Brn.Brn_No%Type               DEFAULT Null  ,
                          P_F_Cc_Code                IN Item_Movement.Cc_Code%Type      DEFAULT Null  ,
                          P_F_Pj_No                  IN Item_Movement.Pj_No%Type        DEFAULT Null  ,
                          P_Whg_Code                 IN Item_Movement.Whg_Code%Type     DEFAULT Null  ,
                          P_F_Expire_Date            IN Item_Movement.Expire_Date%Type  DEFAULT Null  ,
                          P_F_Batch_No               IN Item_Movement.Batch_No%Type     DEFAULT Null  ,
                          P_F_Actv_No                IN Item_Movement.Actv_No%Type      DEFAULT Null  ,
                          P_T_Actv_No                IN Item_Movement.Actv_No%Type      DEFAULT Null  ,
                          P_T_Batch_No               IN Item_Movement.Batch_No%Type     DEFAULT Null  ,
                          P_T_Expire_Date            IN Item_Movement.Expire_Date%Type  DEFAULT Null  ,
                          P_T_Pj_No                  IN Item_Movement.Pj_No%Type        DEFAULT Null  ,
                          P_T_Cc_Code                IN Item_Movement.Cc_Code%Type      DEFAULT Null  ,
                          P_C_Code                   IN Item_Movement.C_Code%Type       DEFAULT Null  ,
                          P_V_Code                   IN Item_Movement.V_Code%Type       DEFAULT Null  ,
                          P_SERIAL                   IN Item_Movement.SERIAL%Type       DEFAULT Null  ,
                          P_IN_OUT                   IN Item_Movement.IN_OUT%Type       DEFAULT Null  ) ;

PROCEDURE Get_Acode_Trns( p_accqry    IN OUT t_cv ,
									        p_a_code    IN account_curr.a_code%TYPE,
									        p_a_cy      IN account_curr.a_cy%TYPE,
									        P_User_No 	IN NUMBER);

PROCEDURE Get_Ccode_Trns( a_cv       IN OUT t_cv ,
												  p_cc_code  IN Cost_Centers.cc_code%TYPE,
												  p_a_cy     IN Ias_Post_Dtl.a_cy%TYPE,
												  P_User_No  IN NUMBER);

Procedure Get_Itm_Dtl( a_cv        In Out t_cv ,
                       P_Sql       In Varchar2 ,
                       P_Sql_Type  In Number   ,
                       P_Lang_no   In Number   ,                                    
                       P_OrdBy     In Varchar2 ,                        
                       P_User_No   In Number   );	                     
---

PROCEDURE Get_Cash_Trns( a_cv        In OUT t_cv ,
                         P_Cash_no   In cash_in_hand.cash_no%TYPE,                                        	       
                         P_a_code    In account_curr.a_code%TYPE,
             	           P_a_cy      In account_curr.a_cy%TYPE,
            	           P_lang_no   In Number,
                         P_User_No 	 In Number);

PROCEDURE Get_Bank_Trns( a_cv        In OUT t_cv ,
                         P_Bank_no   In cash_at_bank.bank_no%TYPE,                                        	       
                         P_a_code    In account_curr.a_code%TYPE,
             	           P_a_cy      In account_curr.a_cy%TYPE,
            	           P_lang_no   In Number,
                         P_User_No 	 In Number);                                                
Procedure Get_Itm_Mov ( a_cv         In Out t_cv,
                        P_I_Code     In Ias_Itm_Mst.I_code%TYPE,
                        P_Serial     In Number,
    		                P_Lang_no    In NUMBER 	Default 1);                                                                         
Procedure Get_Ac_Ast ( a_cv       In Out t_cv                      
 					  					,P_Lang_no  In NUMBER 	Default 1
                      ,P_Whr      In VARCHAR2
                      ,P_OrdBy    In VARCHAR2
                      ,P_User_No  In NUMBER); 

Procedure Get_Fav_Ac_Bal( a_cv        In Out t_cv ,
                          P_User_no   In Number   ,
                          P_Lang_no   In Number   ,
                          P_OrdBy     In Varchar2 ,
                          P_Whr       In Varchar2   ) ;
                          
Procedure Get_Itm_Mov_Trns(a_cv       In Out t_cv                     ,
                           P_I_Code   In Ias_Itm_Mst.i_code%Type     ,
                           p_w_code   In warehouse_details.w_code%Type,
                           p_doc_type In item_movement.doc_type%Type  ,
                           P_fdate    In item_movement.i_date%Type    ,
                           P_tdate    In item_movement.i_date%Type    ,
                           p_in_out   In item_movement.in_out%Type    ,
                           p_lang_no  In Number     Default 1         ,
                           P_Ord_Trns In Varchar2 ,
                           P_Usr_No		In User_R.U_Id%Type) ;
                      
---------------------------------------------------------------------------
Procedure Get_Itm_Attch_Trns( a_cv            IN OUT t_cv    ,
                              P_I_Code        IN Item_Movement.I_Code%TYPE                     ,
                              P_doctype       IN Item_Movement.Doc_Type%TYPE Default Null      ,
                              P_wcode         IN Item_Movement.W_Code%TYPE     Default Null    ,
                              P_Lang_no       IN Number  Default 1                             ,
                              P_OrdBy         IN Varchar2                                      ,
                              P_User_No       IN Number                                        ,
                              P_Attch         IN Varchar2) ;  
Procedure Get_Preq_Dtl(  a_cv        In Out t_cv,
                         P_Sql       In Varchar2,
                         P_Sql_Type  In Number  ,
                         P_Lang_no   In Number  ,                                    
                         P_OrdBy     In Varchar2,                        
                         P_User_No   In Number) ;

Procedure Get_Itm_Purchase_Orders( A_Cv        In Out T_Cv  ,
                                   P_Sql       In Varchar2  ,
                                   P_Sql_Type  In Number    ,
                                   P_Lang_No   In Number    ,                                    
                                   P_Ordby     In Varchar2  ,                        
                                   P_User_No   In Number    ) ;


Procedure Get_Itm_Dtl_Serch (  A_Cv                    In Out   T_Cv,
														   P_Icode                 In       Ias_Itm_Mst.I_Code%Type,
														   P_Iname                 In       Ias_Itm_Mst.I_Name%Type,
														   P_Wcode                 In       Number,
														   P_Acy                   In       Varchar2,
														   P_Loc_Cur               In       Varchar2,
														   P_Stk_Cur               In       Varchar2,
														   P_Ac_Rate               In       Number,
														   P_Stk_Rate              In       Number,
														   P_Lev_No                In       Number,
														   P_Bill_Doc_Type         In       Number,
														   P_Price_Type            In       Number,
														   P_Conn_Itm_Act          In       Number,
														   P_Doc_Type              In       Number Default Null,
														   P_Doc_Ser               In       Number Default Null,
														   P_No_Of_Dcml            In       Number,
														   P_User_No               In       Number,
														   P_Lang_No               In       Number,
														   P_Shw_Itm_Avlqty_Only   In       Number,
														   P_Itm_Unt_Typ           In       Number,
														   P_Itm_Unt_Lvl           In       Number,
														   P_Ordr_Clmn             In       Varchar2,
														   P_Whr                   In       Varchar2  Default Null	)  ;

Procedure Get_Itm_PI_BILL_TRANS( A_Cv        In Out T_Cv  ,
                                 P_Sql       In Varchar2  ,
                                 P_Sql_Type  In Number    ,
                                 P_Lang_No   In Number    ,                                   
                                 P_Ordby     In Varchar2  ,                        
                                 P_User_No   In Number    ) ;                                

Procedure Get_Instllmnt_Trans( A_Cv        In Out T_Cv  ,  
                               P_C_Code    In Varchar2  ,                             
                               P_Lang_No   In Number    ) ;
                               
Procedure Get_Instllmnt_Pi_Trans( A_Cv        In Out T_Cv  ,  
                                  P_V_Code    In Varchar2  ,                             
                                  P_Lang_No   In Number    ,    
                                  P_DOC_SER In Number DEFAULT NULL) ;
                                  
Procedure Get_Journal_Doc( A_Cv        In Out T_Cv                   ,  
                           P_Doc_Ser   In Ias_Post_Dtl.Doc_Ser%Type  ,                             
                           P_Lang_No   In Number                     ) ;                               
                               

Procedure Get_vend_Trns_Pymnt( a_cv         In Out t_cv
                              ,P_v_code   In vendor_curr.v_code%TYPE
                              ,P_acy      In vendor_curr.a_cy%TYPE
                              ,P_Lang_no  In NUMBER     Default 1
                              ,P_OrdBy    In VARCHAR2
                              ,P_User_No  In NUMBER
                              ,P_APALT    In NUMBER
                              ,P_Doc_Ser  In Number 
                              ,P_Conn_Prev_Yr  In Number  ) ;
															
Procedure Get_Itm_Movment(a_cv          In Out t_cv                      ,
                          P_I_Code      In Ias_Itm_Mst.I_Code%Type      ,
                          p_w_code      In warehouse_details.w_code%Type ,
                          p_doc_type    In item_movement.doc_type%Type   ,
                          P_fdate       In item_movement.i_date%Type     ,
                          P_tdate       In item_movement.i_date%Type     ,
                          p_in_out      In item_movement.in_out%Type     ,                                                                                  
                          p_lang_no     In Number     Default 1          ,
                          P_Ord_Trns    In Varchar2                      ,
                          P_Usr_No      In User_R.U_Id%Type              ) ;
                          

PROCEDURE FTCH_DATA_LST_SCR ( SQL_CV      IN OUT T_CV,                                                                    
                              P_LST_SQL   IN VARCHAR2,
                              P_LST_SRCH  IN VARCHAR2,
                              P_LST_ORDR  IN VARCHAR2,                                  
                              P_LANG_NO   IN NUMBER  DEFAULT 1,
                              P_USER_NO   IN USER_R.U_ID%TYPE,
                              P_WHR       IN VARCHAR2,
                              P_WHR_FLD   IN VARCHAR2);                          														

Procedure Get_Code_Trns( a_cv       In Out t_cv,
                         P_Lang_No  In NUMBER     Default 1,
                         P_Whr      In VARCHAR2,
                         P_OrdBy    In VARCHAR2,
                         P_User_No  In NUMBER,
                         P_ARALT    In NUMBER,
                         P_APALT    In NUMBER,
                         P_Trns_Typ In NUMBER, 
                         P_Ac_Dtl_Typ In NUMBER DEFAULT 0,
                         P_Prd_Typ In NUMBER DEFAULT 0);

Procedure Get_Sum_Blnc( a_cv       In Out t_cv,
                        P_Lang_No  In NUMBER     Default 1,
                        P_Whr      In VARCHAR2,
                        P_OrdBy    In VARCHAR2,
                        P_User_No  In NUMBER,
                        P_ARALT    In NUMBER,
                        P_APALT    In NUMBER,
                        P_Trns_Typ In NUMBER, 
                        P_Ac_Dtl_Typ In NUMBER DEFAULT 0,
                        P_Prd_Typ In NUMBER DEFAULT 0);

Procedure Get_Itm_Trns_Sum (  A_Cv                     In Out T_Cv                                                        ,
                              P_Col_Val                In Varchar2                                                         ,
                              P_Doctype                In Item_Movement.Doc_Type%Type Default Null        ,
                              P_Wcode                  In Item_Movement.W_Code%Type     Default Null      ,
                              P_Lang_No                In Number  Default 1                               ,
                              P_Ordby                  In Varchar2                                        ,
                              P_User_No                In Number                                          ,                                        
                              P_Conn_Itm_Act_By_Usr_Priv In Ias_Para_Inv.Conn_Itm_Act_By_Usr_Priv%Type    ,
                              P_Prd_Type                 In Number Default 0                              ,
                              P_F_Date                   In Item_Movement.I_Date%Type                     ,
                              P_T_Date                   In Item_Movement.I_Date%Type                     ,                                                
                              P_Brn_No                   In S_Brn.Brn_No%Type               Default Null  ,
                              P_F_Cc_Code                In Item_Movement.Cc_Code%Type      Default Null  ,
                              P_F_Pj_No                  In Item_Movement.Pj_No%Type        Default Null  ,
                              P_Whg_Code                 In Item_Movement.Whg_Code%Type     Default Null  ,
                              P_F_Expire_Date            In Item_Movement.Expire_Date%Type  Default Null  ,
                              P_F_Batch_No               In Item_Movement.Batch_No%Type     Default Null  ,
                              P_F_Actv_No                In Item_Movement.Actv_No%Type      Default Null  ,
                              P_T_Actv_No                In Item_Movement.Actv_No%Type      Default Null  ,
                              P_T_Batch_No               In Item_Movement.Batch_No%Type     Default Null  ,
                              P_T_Expire_Date            In Item_Movement.Expire_Date%Type  Default Null  ,
                              P_T_Pj_No                  In Item_Movement.Pj_No%Type        Default Null  ,
                              P_T_Cc_Code                In Item_Movement.Cc_Code%Type      Default Null  ,
                              P_C_Code                   In Item_Movement.C_Code%Type       Default Null  ,
                              P_V_Code                   In Item_Movement.V_Code%Type       Default Null  ,
                              P_I_Code                   In Item_Movement.I_Code%TYPE                     ,
                              P_Shw_Wcode                In Number   Default 0                            ,
                              P_In_Out                   In Item_Movement.In_Out%Type       Default Null  ) ;   
                                                   
PROCEDURE Get_insrnce_Trns( a_cv        			 In OUT t_cv ,
                            P_Insrnce_Card_No  In ias_Insrnce_Card.prson_Card_No%TYPE,                         
                            P_A_Cy        In account_curr.a_cy%TYPE,
                            P_Fdate       In Date,     
                            P_Tdate       In Date,
                            P_F_Icode     In ias_itm_mst.i_code%TYPE,
                            P_T_Icode     In ias_itm_mst.i_code%TYPE,
                            P_lng_no     In Number,
                            P_Usr_No      In Number);
 --                                                                              
Procedure Get_Ac_Balance( a_cv        In Out t_cv,
                          P_a_code    In Account.a_code%TYPE,
                          P_ac_code_dtl    In ias_post_dtl.ac_code_dtl%TYPE,
                          P_ac_dtl_typ In Account.ac_dtl_typ%TYPE Default 0,
    	                    P_User_no   In Number,
    			                P_Lang_no   In Number);

Procedure Get_Lov_Itm_Data ( A_Cv       In Out t_cv,
                             P_Data_Typ In Number,
                             P_I_Code  In Ias_Itm_Mst.I_Code%Type,
                             P_I_Name  In Ias_Itm_Mst.I_Name%Type,
                             P_Conn_Itm_Act IN NUMBER,
                             P_Grp_No   IN NUMBER,
                             P_OrdBy   In VARCHAR2,
                             P_Usr_No  In NUMBER,
                             P_Lng_No  In NUMBER,
                             P_Lev_No  In NUMBER,
                             P_PSize In Number,
                             P_Price_Type In Number,
                             P_W_Code In Number,
                             P_Brn_No In Number,
                             P_Fld1     In Varchar2,
                             P_Fld2   In Varchar2,
                             P_Fld3   In Varchar2,
                             P_Fld4   In Varchar2,
                             P_Fld5   In Varchar2,
                             P_Fld6   In Varchar2,
                             P_Whr    In Varchar2) ;   			                
                                                                                                         
Procedure Get_Itm_tax_Trns ( A_Cv       In Out T_Cv,
                             P_Doc_Typ  In Number,                             
                             P_Doc_Ser  In GNR_TAX_ITM_MOVMNT.Doc_Ser%Type,
                             P_I_Code   In Ias_Itm_Mst.I_Code%Type,
                             P_Itm_Unt  In Ias_Itm_Dtl.Itm_Unt%Type,                             
                             P_Doc_Sequence In GNR_TAX_ITM_MOVMNT.Doc_Sequence%Type,
                             P_Trns_Typ In Number,
                             P_Clc_Typ_No In GNR_TAX_ITM_MOVMNT.CLC_TYP_NO%Type,                             
                             P_Clc_Usd_Itm       In Number  Default 1                     ,
                             P_I_Price  In Gnr_Tax_Itm_Movmnt.I_Price%Type,
                             P_I_Qty    In Gnr_Tax_Itm_Movmnt.I_Qty%Type,                             
                             P_Lang_No  In Number,                                                                                                                    
                             P_Whr      In Varchar2 Default Null 
                          ) ;                          

Procedure Get_Diff_Costs_Gl_Inv ( A_Cv         In Out T_Cv,
                                  P_Whr        In Number            ,
                                  P_Lang_No    In Number     Default 1,
                                  P_Stkcost_Fraction In Ias_Para_Inv.Stkcost_Fraction%Type );  
                                
PROCEDURE FTCH_DATA_DSH_SCR ( SQL_CV       IN OUT t_cv,                                                                    
                              P_LST_SQL    IN VARCHAR2,
                              P_LST_SRCH   IN VARCHAR2,
                              P_LST_ORDR   IN VARCHAR2,                                  
                              P_LANG_NO    IN NUMBER  DEFAULT 1,
                              P_USER_NO    IN USER_R.U_ID%TYPE,
                              P_WHR        IN VARCHAR2,
                              P_WHR_FLD    IN VARCHAR2);
                              
End IAS_Fetch_Data_Pkg;
/
CREATE Package IAS_Gen_Pkg as
  FUNCTION order_by_name(p_icode in Ias_Itm_Mst.I_CODE%TYPE) RETURN VARCHAR2 ;
  Pragma restrict_references(order_by_name,WNDs,WNPS);
  FUNCTION LF(p_curr In VARCHAR2 ) RETURN NUMBER; 
  Pragma restrict_references(LF,WNDs,WNPS);
  FUNCTION Get_Cnt (SqlStr VARCHAR2)  RETURN NUMBER;
  FUNCTION Get_CurNo (P_Acy In Varchar2)   RETURN NUMBER;
  FUNCTION Get_Frst_Day RETURN DATE;
  FUNCTION Get_Final_Day RETURN DATE;
  FUNCTION Get_Sysdate  RETURN DATE ;
  FUNCTION Get_Curdate  RETURN DATE ;
  FUNCTION Get_Local_Cur  RETURN VARCHAR2 ;
  FUNCTION Get_Stk_Cur   RETURN VARCHAR2 ;
  Function Get_Cur_Rate (P_Acy       In Varchar2             ,
	                       P_Rate_Type In Number Default  0    ,
	                       P_Date      In Date   Default  Null ,
	                       P_USR_NO    In Number Default  NULL    ) Return Number;
  FUNCTION Get_Lev_Prv (P_UserNo In Number,P_Icode Varchar2 Default Null,P_Itm_Unt Varchar2 Default Null,P_Price_Type Number Default Null,P_Wcode Number Default Null,P_Brn_No Number Default Null) RETURN NUMBER ;
FUNCTION Get_Lev_Dflt_Prv (P_UserNo In Number,P_Icode Varchar2 Default Null,P_Itm_Unt Varchar2 Default Null,P_Price_Type Number Default Null,P_Wcode Number Default Null,P_Brn_No Number Default Null) RETURN NUMBER ;
  FUNCTION Get_Frm_Prv (P_UserNo In Number , P_Frm_no In Number)  RETURN NUMBER ;
  FUNCTION Get_One_Wcode RETURN NUMBER ;

 Function Get_Itm_Price_Docacy ( P_Icode                        In Ias_Itm_Mst.I_Code%Type,                                
                                P_Itm_Unt                      In Ias_Itm_Dtl.Itm_Unt%Type,
                                P_Acy                          In Varchar2,
                                P_Loc_Cur                      In Varchar2,
                                P_Stk_Cur                      In Varchar2,
                                P_Ac_Rate                      In Number, 
                                P_Stk_Rate                     In Number,
                                P_Lev_No                         In Number,
                                P_Wcode                        In Number    Default Null,
                                P_Iqty                         In Number    Default Null,  
                                P_Bill_Doc_Type                In Number    Default Null,  
                                P_Price_Type                   In Number    Default 1 ,
                                P_Brn_No                       In Number    Default Null,
                                P_Exp_Date                     In Date      Default Null,
                                P_Batch_No                     In Varchar2  Default Null,
                                P_Use_Price_Exp_Date           In Number    Default 0,
                                P_Use_Price_Batch_No           In Number    Default 0,
                                P_Use_Exp_Date                 In Number    Default 0,
                                P_Use_Batch_No                 In Number    Default 0,
                                P_Itm_Use_Price_ExpDate_Optnl  In Number    Default 0,
                                P_Itm_Use_Price_BtchNo_Optnl   In Number    Default 0,
                                P_Usr_No                       In User_R.U_Id%Type    ) RETURN NUMBER;

  
  FUNCTION Get_Cur_Code_Lvl_Price ( P_Lvl_Price_No In Ias_Pricing_Levels.Lev_No%Type  ) RETURN VARCHAR2 ;
	FUNCTION Get_Low_Lvl_Price  ( P_Usr_No In User_R.U_Id%Type  ) RETURN NUMBER  ;
  FUNCTION Get_High_Lvl_Price ( P_Usr_No In User_R.U_Id%Type  ) RETURN NUMBER  ;																

	FUNCTION Get_Low_Price ( P_Icode    In Ias_Itm_Mst.I_CODE%TYPE,
	                         P_ITM_UNT  In Ias_Itm_DTL.ITM_UNT%TYPE,
	                         P_acy      In Varchar2,
	                         P_loc_cur  In Varchar2,
	                         P_Stk_cur  In Varchar2,
	                         P_ac_rate  In Number, 
	                         P_Stk_Rate In Number,
	                         P_Price_Type In Number DEFAULT NULL,
	                         P_W_CODE   In Number DEFAULT NULL,
	                         P_QTY      IN NUMBER DEFAULT NULL ,
	                         P_BRN_NO   IN NUMBER DEFAULT NULL ,
	                         P_Usr_No   In User_R.U_Id%Type    ) RETURN NUMBER;

  FUNCTION Get_High_Price ( P_Icode    In Ias_Itm_Mst.I_CODE%TYPE,
  			                    P_ITM_UNT  In Ias_Itm_DTL.ITM_UNT%TYPE,
                            P_acy      In Varchar2,
  			                    P_loc_cur  In Varchar2,
                            P_Stk_cur  In Varchar2,
                            P_ac_rate  In Number, 
                            P_Stk_Rate In Number,
                            P_Price_Type In Number DEFAULT NULL,
                            P_W_CODE   In Number DEFAULT NULL,
                            P_QTY      IN NUMBER DEFAULT NULL ,
                            P_BRN_NO   IN NUMBER DEFAULT NULL ,
                            P_Usr_No   In User_R.U_Id%Type    ) RETURN NUMBER ;

  FUNCTION Get_Itm_Price ( P_LevNo    In Number,
													 P_Icode    In Ias_Itm_Mst.I_CODE%TYPE, 
		                       P_ITM_UNT  In Ias_Itm_DTL.ITM_UNT%TYPE,
                           P_acy 	    In varchar2 ,
		                       P_billrate In Number,
		                       P_c_code   In CUSTOMER.C_CODE%TYPE Default Null,
		                       P_w_code   In WAREHOUSE_DETAILS.W_CODE%TYPE   Default Null,
								           P_Frc_no   In Number   Default 2 ) Return Number ;

	 PROCEDURE Get_Fields ( P_Ias_User          In Varchar2, 
                           P_Tab_Nm            In Varchar2 ,
                           P_Whr               In Varchar2 Default Null,
                           P_Form_No           In Varchar2 Default Null,
                           P_Table_Nm_Mst      In Varchar2 Default Null,
                           P_Inactive_Flg      In Number   Default 0,
                           P_Inactive_Clmn_Nm  In Varchar2 Default Null,
                           P_Inactive_Lst_Nm   In Varchar2 Default Null,
                           P_Inactive_Lst_Slct In Varchar2 Default Null,
                           P_User_no           In Number   Default 1) ;
  FUNCTION  Get_Fld_Value (P_Tab_Nm In Varchar2 ,P_Fld_Nm In Varchar2,P_WHR In varchar2 Default Null)  RETURN VARCHAR2 ;
  FUNCTION  Get_Flg_Nm (P_flg_code In varchar2,P_flg_value In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
  FUNCTION  Get_Prompt (P_Lng_no In number ,P_Lb_no  In Number) RETURN CHAR;
  FUNCTION  Get_Msg	   (P_Lng_no In number ,P_Msg_no In Number) RETURN CHAR;
  FUNCTION  Get_Brn_Nm (P_Brn_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
  FUNCTION  Get_Frm_Nm (P_Frm_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
  FUNCTION  Get_Usr_Nm (P_Usr_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
  FUNCTION  Get_Usr_Adm (P_Usr_No In Number)  RETURN NUMBER;
  FUNCTION  Get_Code_Nm (P_code_Type In Varchar2 ,P_Code_No In Varchar2,P_Lng_no In Number Default 1)  RETURN CHAR;
  FUNCTION  Get_Jv_Ser  (P_JvType_No  In Number) Return Number;
  FUNCTION  Get_Delete_Doc_Period (P_UserNo  In Number ,
                                   P_Ad_Date In Date   )  RETURN NUMBER ;
  FUNCTION  Get_Update_Doc_Period (P_UserNo  In Number ,
                                   P_Ad_Date In Date   )  RETURN NUMBER;

	Procedure Get_Fld_Col_Val ( P_Tab_Nm     In Varchar2     ,
															P_Fld_Nm     In Varchar2     ,
															P_Whr        In Varchar2     ,
															P_Col_Num1   Out Number      ,  
															P_Col_Num2   Out Number      ,  
															P_Col_Txt1   Out Varchar2    ,
															P_Col_Txt2   Out Varchar2    ,
															P_Col_Date   Out Date        ) ;														
																													                                   
  FUNCTION Get_MET_Nm(P_Lng_no In number ,P_met_no In Number)  RETURN CHAR;

End IAS_Gen_Pkg;
/
CREATE PACKAGE Ias_Get_Othr_Qty_Pkg as
FUNCTION Out_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
                        P_Psize   In NUMBER DEFAULT  1,
                        P_Wcode   In WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NUll,
                        P_Tdate   In DATE     DEFAULT NULL,
                        P_Whr     In Varchar2 DEFAULT NULL  )  Return Number;
FUNCTION Out_Rt_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
                           P_Psize   In NUMBER DEFAULT  1,
                           P_Wcode   In WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NUll,
                           P_Tdate   In DATE     DEFAULT NULL,
                           P_Whr     In Varchar2 DEFAULT NULL  )  Return Number;                       
FUNCTION P_Order_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
                       P_Psize   In NUMBER DEFAULT  1,
                       P_Wcode   In WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NUll,
                       P_Tdate   In DATE     DEFAULT NULL ,
                       P_Whr     In Varchar2 DEFAULT NULL  )  Return Number;                           
FUNCTION Pi_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
                       P_Psize   In NUMBER DEFAULT  1,
                       P_Wcode   In WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NUll,
                       P_Tdate   In DATE     DEFAULT NULL ,
                       P_Whr     In Varchar2 DEFAULT NULL  )  Return Number;       
Function Pos_Diff    ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
                       P_User    In Varchar2,
                       P_Psize   In NUMBER DEFAULT 1,
                       P_Wcode   In WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NUll,
                       P_Tdate   In DATE     DEFAULT NULL ,
                       P_Whr     In Varchar2 DEFAULT NULL  )  Return Number ;
Function Tr_Qty_Not_Rec ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
                          P_Psize   In NUMBER DEFAULT 1,
                          P_Wcode   In WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NUll,
                          P_Tdate   In DATE     DEFAULT NULL ,
                          P_Whr     In Varchar2 DEFAULT NULL  )  Return Number ;                                                           
End Ias_Get_Othr_Qty_Pkg;
/
CREATE PACKAGE Ias_Gl_Bal_Pkg AS
Type t_cv Is Ref Cursor;
    PROCEDURE Fill_Bt_Value ( 
                        P_F_VAL     In  Out Varchar2            ,
                        P_T_VAL     In  Out Varchar2            ,
                        P_Data_Typ  In  Varchar2    Default Null,
                        P_Dflt_Val  In  Varchar2    Default Null) ;

--====================================================================================
FUNCTION Ias_Get_OB_Bal (   P_STMNT_TYP In  Number                          ,
                            P_Grp_By    In  Number                          ,
                            P_code      In  VarChar2                        ,
                            P_a_code    In  VarChar2                        ,
                            P_acy       In  VARCHAR2                        ,
                            P_Fd        In  Date       Default Null         ,
                            P_loc_amt   In  NUMBER     Default 0            ,
                            P_cc_code   In  VarChar2                        ,
                            P_Pj_No     In  VarChar2                        ,
                            P_Mn_SbAc   In  NUMBER     Default 1            ,
                            P_TBL_DTL   In  VARCHAR2 Default 'IAS_POST_DTL' ,
                            P_WHR       In  VarChar2 Default Null           ,
                            P_Usr_No    In  Number                          ) 
                            RETURN NUMBER ;
--====================================================================================
Procedure Get_Code_Name     (   Cod         In Out t_cv                     ,
                                P_Lang_no   In  NUMBER     Default 1           ,
                                P_Whr       In  VARCHAR2    Default Null    ,
                                P_OrdBy     In  VARCHAR2    Default Null    ,
                                P_User_No   In  NUMBER                      ,
                                P_Cod_Type  In  Number                      ) ;
End Ias_Gl_Bal_Pkg;
/
CREATE PACKAGE Ias_Gl_CshFlw_Pkg AS
								    FUNCTION Chk_CshFlw_Fld (  P_Doc_Ser      IN NUMBER   , 
								                               P_Rcrd_No_Dtl  IN NUMBER   ,
								                               P_Rcrd_No_Ac   IN NUMBER   ,
								                               P_Doc_Type     IN NUMBER   ,
								                               P_Cc_Code      IN VARCHAR2 ,     
								                               P_Pj_No        IN VARCHAR2 , 
								                               P_Actv_No      IN VARCHAR2 ,
								                               P_A_Cy         IN VARCHAR2 ,
								                               P_Ref_No       IN VARCHAR2 ,
								                               P_C_Code       IN VARCHAR2 ,
								                               P_V_Code       IN VARCHAR2 ,
								                               P_Col_No       IN NUMBER   ,
								                               P_Rep_Code     IN VARCHAR2 , 
								                               P_Brn_No       IN NUMBER   ) RETURN NUMBER;
								     PROCEDURE Update_Rcrd_Formula (P_Doc_Ser IN NUMBER  ) ;                          
								     FUNCTION Get_Rcrd_Dtl_Val ( P_Doc_Ser      IN NUMBER   ,
								                                 P_Rcrd_No_Dtl  IN NUMBER   ,
								                                 P_Grp_Type     IN NUMBER   ,
								                                 P_Prd_Val      IN VARCHAR2 ,
								                                 P_Fld_Grp      IN VARCHAR2 ,
								                                 P_Fld_Grp_val  IN VARCHAR2 ,
								                                 P_Fdate        IN DATE     ,
								                                 P_Tdate        IN DATE     ,
								                                 P_Rcrd_Calc    IN VARCHAR2 ,
								                                 P_Slct_Doc_Typ IN VARCHAR2,
								                                 P_WHR          IN VARCHAR2 DEFAULT ' AND 1=1 ' ) RETURN NUMBER;
								     FUNCTION Get_Rcrd_Dtl_Val_Formula ( P_Doc_Ser      IN NUMBER   ,
								                                         P_Prd_Val      IN VARCHAR2 ,
								                                         P_Fld_Grp      IN VARCHAR2 ,
								                                         P_Rcrd_Formula IN CLOB ) RETURN NUMBER;                                  
     END Ias_Gl_CshFlw_Pkg;
/
CREATE PACKAGE          Ias_Gl_Fetch_Pkg AS
Type t_cv Is Ref Cursor;

--====================================================================================
Procedure Ftch_Code_Name    (   Cod         In Out t_cv                     ,
                                P_Lang_no   In  NUMBER     Default 1           ,
                                P_Whr       In  VARCHAR2    Default Null    ,
                                P_OrdBy     In  VARCHAR2    Default Null    ,
                                P_User_No   In  NUMBER                      ,
                                P_Cod_Type  In  Number      Default Null    ,
                                P_Cod_Char  In  VARCHAR2    Default Null    ) ;
--====================================================================================
    PROCEDURE Fill_Bt_Value ( 
                        P_F_VAL     In  Out Varchar2            ,
                        P_T_VAL     In  Out Varchar2            ,
                        P_Data_Typ  In  Varchar2    Default Null,
                        P_Dflt_Val  In  Varchar2    Default Null) ;
End Ias_Gl_Fetch_Pkg;
/
CREATE PACKAGE Ias_Gl_Lmt_Pkg AS
G_Aud_No        Number;
G_Doc_Type      Number;
G_Jv_Type       Number;
G_Doc_No        Number;
G_Doc_Ser       Number;
G_DOC_DATE      Date;
G_Ref_No        VarChar2(100);
G_RcRd_No       Number;
G_Brn_No        Number;
G_Brn_Year      Number;
G_Cmp_No        Number;
G_Brn_Usr       Number;
IsAud           Number;
G_User_No       Number;
G_MsgStr        VarChar2(5000);
USR_LMT_PRV     Number;
V_Local_cur     VARCHAR2(7);
Net_Bal         Number;
G_Lang_No       Number;
V_Gl_Lmt_Type   Number;
No_Of_Decimal   Number(1);
G_EXD_LMT       Number;
Doc_Exst        Number(1);
Exst        Number(1);

--=========================================================
  FUNCTION Check_ac_cc_pj_use_lmt (
    P_lmt_type  IN  NUMBER,
    P_a_code    IN  ACCOUNT.A_code%TYPE DEFAULT NULL,
    P_cc_code   IN  Cost_centers.Cc_code%TYPE DEFAULT NULL,
    P_pj_no     IN  Ias_projects.Pj_no%TYPE DEFAULT NULL,
    P_ACTV_No   In IAS_ACTVTY.ACTV_NO%TYPE      DEFAULT NULL,
    P_acy       IN  VARCHAR2 DEFAULT NULL  )
    RETURN NUMBER;

--=========================================================
    PROCEDURE   Check_Lmt(  P_A_Code    In  VarChar2    Default Null        ,
                            P_Cc_code   In  VarChar2    Default Null        ,
                            P_Pj_No     In  VARCHAR2    Default Null        ,
                            P_ACTV_No     In  VARCHAR2    Default Null        ,
                            P_C_CODE    In  VarChar2    Default Null        ,
                            P_V_CODE    In  VarChar2    Default Null        ,
                            P_LC_NO     In  VarChar2    Default Null        ,
                            P_Acy       In  Varchar2    Default Null        ,
                            P_Amt       In  Number      Default Null        ,
                            P_AmtF      In  Number      Default Null        ,
                            P_Amt_db 	  In  Number      Default 0           ,
							              P_AmtF_db	  In  Number      Default 0           ,
                            Chk_Mn_Mx   In  Number      Default Null        , -- 0 - Check Main And Max    , 1 - Check Min Only    , 2 - Check Max Only
                            P_Doc_Type  In  Number                          ,
                            P_Jv_Type   In  Number                          ,
                            P_Doc_No    In     Number                          ,
                            P_Doc_Ser   In     Number                          ,
                            P_Doc_Date  In  Date                            ,                            
                            P_Ref_No    In  VarChar2    Default Null        ,
                            P_RcRd_No   In  Number      Default Null        ,                                        
                            P_User_No   In  Number                          ,
                            P_Lang_No   In  Number                          ,
                            P_Go_Item   In  Out VarChar2                    ,-- For Return And Go Item In Screen --
                            P_Msg_Str   In  Out VarChar2                    ,-- For Return Msg To Screen And Show Msg Or Alert with This --
                            P_Use_Lmt   In  Out Number                      ,-- To Mean Use Lmt Or Not :- 0- Mean Not Use Lmt  1- Use Lmt --
                            P_Exd_Lmt   In  Out Number                      ,-- Exceed Lmt: - 1- Not Allow 2- Allow Exceed 3- Allow And Alert --
                            P_Chk_Lmt   In  Out Number                      ,-- Check Lmt Is Done Or Not  0 - Not Check  1 - Check Is Done --
                            P_Aud_Lmt   In  Out Number                      ,--Insert Into Aud  0 - Not Insert 1 - Insert Into Aud --
                            P_Chk_From  In     Number                          ,-- 0 - Call From POST-CHANGE 1 - Call From POST-FORMS-COMMIT --
                            P_BRN_NO    In     Number                          ,
                            P_BRN_YEAR  In     Number                          ,
                            P_CMP_NO    In     Number                          ,
                            P_BRN_USR   In     Number                          ) ;
--=========================================================
    PROCEDURE Get_Alert(P_A_Code_In     In  VarChar2     Default Null,
                        Ac_Code_Lmt        In  VarChar2     Default    Null,
                        Ac_code_Nam        In  VarChar2     Default    Null,
                        P_Cc_code_In    In  VarChar2     Default    Null,
                        Cc_Code_Lmt     In  VarChar2     Default    Null,
                        Cc_code_Nam     In  VarChar2     Default    Null,
                        P_Pj_No_In      In  VarChar2         Default    Null,
                        Pj_No_Lmt       In  VarChar2         Default    Null,
                        Pj_No_Nam       In  VarChar2         Default    Null,
                        P_ACTV_No_In    In  VarChar2         Default    Null,
                        ACTV_No_Lmt     In  VarChar2         Default    Null,
                        ACTV_No_Nam     In  VarChar2         Default    Null,
                        P_Acy_In        In  Varchar2     Default Null,
                        P_Amt_In        In  Number         Default Null,
                        P_AmtF_In       In     Number         Default Null,
                        P_Go_Item_In    In     VarChar2     Default    Null,
                        P_Acy_Lmt       In     VarChar2    Default Null,
                        P_Exd_Lmt       In     Number         Default Null,
                        P_Aud_Type      In     Number         Default Null,  -- 1 - Min_Amt , 2 - Max_Amt , 3- Min_Trns_Amt ,4 - Min_Trns_Amt
                        P_Lmt_Amt       In     Number        Default Null,
                        P_Bal_Amt       In     Number        Default Null) ;
--=========================================================
  PROCEDURE Get_max_aud_lmt;
--=========================================================
  PROCEDURE Insrt_aud_lmt (
    P_aud_type       IN  NUMBER,
    P_doc_type       IN  NUMBER,
    P_jv_type        IN  NUMBER,
    P_doc_no         IN  NUMBER,
    P_doc_ser        IN  NUMBER,
    P_a_code         IN  ACCOUNT.A_code%TYPE,
    P_cc_code        IN  Cost_centers.Cc_code%TYPE,
    P_pj_no          IN  Ias_projects.Pj_no%TYPE DEFAULT NULL,
    P_ACTV_no        IN  Ias_ACTVTY.ACTV_no%TYPE DEFAULT NULL,
    P_a_cy           IN  VARCHAR2,
    P_amt            IN  NUMBER,
    P_amtf           IN  NUMBER,
    P_c_code         IN  Customer.C_code%TYPE,
    P_v_code         IN  V_details.V_code%TYPE,
    P_a_desc         IN  VARCHAR2,
    P_ref_no         IN  VARCHAR2,
    P_cash_no        IN  NUMBER,
    P_cheque_no      IN  NUMBER,
    P_value_date     IN  DATE,
    P_external_post  IN  NUMBER,
    P_rcrd_no        IN  NUMBER,
    P_a_code_lmt     IN  ACCOUNT.A_code%TYPE,
    P_cc_code_lmt    IN  Cost_centers.Cc_code%TYPE,
    P_pj_no_Lmt      IN  Ias_projects.Pj_no%TYPE DEFAULT NULL,
    P_a_cy_lmt       IN  VARCHAR2,
    P_amt_lmt        IN  NUMBER,
    P_exceed_lmt     IN  NUMBER,
    P_aud_u_id       IN  NUMBER,
    P_brn_no         IN  NUMBER,
    P_brn_year       IN  NUMBER,
    P_cmp_no         IN  NUMBER,
    P_brn_usr        IN  NUMBER
  );
--==============================================================================
END Ias_gl_lmt_pkg;
/
CREATE PACKAGE IAS_GL_TRNS_PKG AS
--=========================================================
PROCEDURE Get_Jv_Gr_Doc ( P_jv_Type In Out NUMBER ,
													P_jv_no   In Out NUMBER, 
                          P_jv_ser  In Out NUMBER);
--=========================================================
FUNCTION GET_INSTL_RQTYPNO_AMTPRV(P_DOC_TYP_REF IN NUMBER,
                                  P_DOC_SRL_REF   NUMBER   ) RETURN NUMBER;
--=========================================================
PROCEDURE Insrt_Jv_Mst( p_jv_type       In NUMBER,
                        p_doc_no        In NUMBER,
                        p_doc_ser       In NUMBER,
                        P_doc_date      In DATE,
                        P_Batch_Val     In NUMBER,
                        P_Doc_Desc      In VARCHAR2    Default Null,
                        p_ref_no        In VARCHAR2    Default Null,
                        p_link_use      In NUMBER      Default 0,
                        p_ad_u_id       In NUMBER      Default Null,															
												p_Brn_No        In NUMBER,
												p_Brn_Year      In NUMBER,
								        p_CMP_NO        In NUMBER,
								        p_BRN_USR       In NUMBER);
--==================================================================================
PROCEDURE Insrt_Jv_Dtl (  p_jv_type              In NUMBER,
	                        p_doc_no               In NUMBER,
	                        p_doc_ser              In NUMBER,
	                        p_a_code               In ACCOUNT.A_CODE%TYPE,
                          p_ac_code_dtl          In VARCHAR2 Default null,
                          p_ac_dtl_typ           In ACCOUNT.ac_dtl_typ%TYPE Default 0,	                        
	                        p_a_cy                 In VARCHAR2,
	                        p_amt                  In NUMBER,
	                        p_amt_f                In NUMBER,
	                        p_ac_rate              In NUMBER     Default Null,
	                        p_doc_desc             In VARCHAR2   Default null,
	                        p_cc_code              In COST_CENTERS.CC_CODE%TYPE   Default null,
	                        P_Pj_No                In IAS_PROJECTS.Pj_No%TYPE    Default null,
                          P_ACTV_No              In IAS_ACTVTY.ACTV_No%TYPE    Default null,
	                        p_gr_no                In VARCHAR2   Default null,
	                        p_lc_no                In LC_MASTER.LC_NO%TYPE   Default null,
	                        p_doc_type_ref         In NUMBER     Default null,
	                        p_doc_jv_type_ref      In NUMBER     Default null,
	                        p_doc_no_ref           In NUMBER     Default null,
	                        p_doc_ser_ref          In NUMBER     Default null,
	                        P_Ref_No               In VARCHAR2   Default null,
	                        P_Rcrd_No_Ord          In NUMBER     Default null,
	                        P_Rcrd_no              In NUMBER,
	                        P_DOC_DUE_DATE         In DATE      Default null,
													p_Brn_No        In NUMBER,
													p_Brn_Year      In NUMBER,
									        p_CMP_NO        In NUMBER,
									        p_BRN_USR       In NUMBER );
--==============================================================================
PROCEDURE Update_Kimb_Dtl ( P_v_ser     In Number, 
                            P_Local_cur In Varchar2);             
--==============================================================================
PROCEDURE Get_Jv_Kimb_Doc ( P_jv_Type In Out NUMBER ,
						              	P_jv_no   In Out NUMBER , 
                            P_jv_ser  In Out NUMBER );
--==============================================================================                            
End IAS_GL_TRNS_PKG;
/
CREATE PACKAGE Ias_Insrt_Out_Bills_Pkg AS
  FUNCTION  Get_Out_No      ( P_Invs    In Number, P_Si_Type  In Number, P_Cc_Code In Varchar2,P_w_code  In Number,  P_bill_doc_type In Number,P_Brn_No In Number) Return Number;    
  FUNCTION  Get_Out_Ser     ( P_Out_No  In Number, P_Si_Type  In Number, P_Invs    In Number,  P_Cc_Code In Varchar2,P_w_code        In Number,P_bill_doc_type In Number,P_Brn_No In Number,P_Brn_Year In Number) Return Number;
  PROCEDURE Insrt_Out_Bills ( P_Invs    In Number, P_Out_Avlqty In Number Default 0 , P_Doc_Ser  In Number, P_Out_No  In Number,  P_Out_Ser In Number,P_Extrnl_Post Number,P_Lang_No Number,P_Brn_No In Number);
  FUNCTION  Get_Ret_No      ( P_Invs_Sr In Number, P_Sr_Type  In Number, P_Cc_Code In Varchar2,P_w_code  In Number,  P_bill_doc_type In Number,P_Brn_No In Number) Return Number;    
  FUNCTION  Get_Ret_Ser     ( P_Ret_No  In Number, P_Sr_Type  In Number, P_Invs_Sr In Number,  P_Cc_Code In Varchar2,P_w_code        In Number,P_bill_doc_type In Number,P_Brn_No In Number,P_Brn_Year In Number) Return Number;
  PROCEDURE Insrt_Ret_Bills ( P_Invs_Sr In Number, P_Pyear    In Number, P_Doc_Ser In Number,  P_Ret_No  In Number,  P_Ret_Ser In Number, P_Out_No  In Number, P_Out_Ser In Number, P_Extrnl_Post Number, P_Lang_No Number,P_Brn_No In Number);  
END Ias_Insrt_Out_Bills_Pkg;
/
CREATE PACKAGE Ias_Installment_Ap_Pkg AS
	FUNCTION Check_Installment_Trans ( P_Doc_Type      In NUMBER,
				                             P_Doc_Ser       In NUMBER,
				                             P_V_Code        In VARCHAR2 Default null,
				                             P_Rcrd_No       In NUMBER Default null) Return NUMBER;
	PROCEDURE Insrt_Installment ( P_I_No         In NUMBER,
				                        P_Doc_Type     In NUMBER,
				                        P_Doc_Ser      In NUMBER,
				                        P_Doc_No       In NUMBER,                                                                 
				                        P_Doc_Jv_Type  In NUMBER,
				                        P_Doc_Date     In DATE,
				                        P_V_Code       In VARCHAR2,                         
				                        P_Cc_Code      In VARCHAR2   Default Null,
				                        P_PJ_NO        In VARCHAR2   Default Null,
				                        P_Actv_NO      In VARCHAR2   Default Null,
				                        P_Doc_Due_DATE In DATE,
				                        P_Amt          In NUMBER,  
				                        P_Amt_F        In NUMBER,
				                        P_A_Cy         In VARCHAR2,
				                        P_Ac_Rate      In NUMBER,
				                        P_Rcrd_No      In NUMBER,
				                        P_REF_NO       In VARCHAR2   Default Null,
                                P_DOC_DSC      In VARCHAR2   Default Null,
				                        P_Lang_No      In NUMBER,
				                        P_Brn_No       In NUMBER,
				                        P_Brn_Year     In NUMBER,
												        P_CMP_NO        In NUMBER,
												        P_BRN_USR       In NUMBER,
                                P_DOC_SEQ      IN  NUMBER	DEFAULT NULL);
	FUNCTION Check_Dr_Trans ( P_Doc_Type      In NUMBER,
				                    P_Doc_Ser       In NUMBER,
				                    P_V_Code        In VARCHAR2 Default null,
				                    P_Rcrd_No       In NUMBER Default null) Return NUMBER;
	PROCEDURE Chk_Installmnet_Prc (P_DocType In NUMBER Default Null);
	PROCEDURE Rebuild_Installmnet (  P_Doc_Type In NUMBER Default Null,
	                                 P_stp In NUMBER Default 0);
  PROCEDURE Update_Adj_Installmnet (P_Up_All In Number Default 0);
END Ias_Installment_AP_Pkg;
/
CREATE PACKAGE Ias_Installment_Ar_Pkg AS
					  FUNCTION Check_Installment_Trans ( P_Doc_Type      In NUMBER,
                                               P_Doc_Ser       In NUMBER,
					                                     P_C_Code        In VARCHAR2 Default null,
					                                     P_Rcrd_No       In NUMBER Default null) Return NUMBER;
					  PROCEDURE Insrt_Installment ( P_I_No         In NUMBER,
					                                P_Doc_Type     In NUMBER,
					                                P_Doc_Ser      In NUMBER,
				                                P_Doc_No       In NUMBER,                                                                 
					                                P_Doc_Jv_Type  In NUMBER,
					                                P_Doc_Date     In DATE,
					                                P_C_Code       In VARCHAR2,                         
					                                P_Cc_Code      In VARCHAR2   Default Null,
					                                P_PJ_NO        In VARCHAR2   Default Null,
					                                P_ACTV_NO      In VARCHAR2   Default Null,
					                                P_Doc_Due_DATE In DATE,
					                                P_Amt          In NUMBER,  
					                                P_Amt_F        In NUMBER,
					                                P_A_Cy         In VARCHAR2,
					                                P_Ac_Rate      In NUMBER,
					                                P_Ac_Code_Dtl_Sub In VARCHAR2   Default Null,
                                          P_Ref_No       In VARCHAR2   Default Null,
                                          P_Doc_Dsc      In VARCHAR2   Default Null,
					                                P_Rcrd_No      In NUMBER,
                                          P_Lang_No       In NUMBER,
					                                P_Brn_No       In NUMBER,
					                                P_Brn_Year     In NUMBER,
																          P_CMP_NO        In NUMBER,
																          P_BRN_USR       In NUMBER,
					                                P_DOC_SEQ      IN  NUMBER	DEFAULT NULL);
					 FUNCTION Check_Dr_Trans ( P_Doc_Type      In NUMBER,
	                                   P_Doc_Ser       In NUMBER,
	                                   P_C_Code        In VARCHAR2 Default null,
	                                   P_Rcrd_No       In NUMBER Default null) Return NUMBER;
           
           PROCEDURE Chk_Installmnet_Prc (P_DocType In NUMBER Default Null);
           PROCEDURE Rebuild_Installmnet (P_Doc_Type In NUMBER Default Null,p_stp In NUMBER Default 0);
	         FUNCTION Chk_Adj_Installmnet_Trans ( P_Doc_Type      In NUMBER,
			                                        P_Doc_Ser       In NUMBER,					                                                                                
				                                        P_Rcrd_No       In NUMBER Default null,
				                                        P_Paid_Type     In NUMBER) Return NUMBER;                          
           PROCEDURE Update_Adj_Installmnet ( P_Up_All In Number Default 0);
           END Ias_Installment_Ar_Pkg;
/
CREATE Package Ias_Inv_Close_Pkg Is
--##----------------------------------------------------------------------------------##--
 Function Calc_Inv_Wtavg(P_Costing_Type In Ias_Para_Inv.Costing_Type%Type ,
                         P_Wtavg_Type   In Ias_Para_Inv.Wtavg_Type%Type   ,
                         P_I_Code       In Ias_Itm_Mst.I_Code%Type       ,
                         P_W_Code       In Item_Movement.W_Code%Type      ,
                         P_F_Date       In Date                           ,
                         P_T_Date       In Date                           ) Return Number ;

  Procedure Insrt_To_Periodic_Table(P_Costing_Type  In Number                        ,
                                    P_Wtavg_Type    In Ias_Para_Inv.Wtavg_Type%Type  ,
                                    P_User_No       In User_R.U_Id%Type              ,                                                  
                                    P_F_Date        In Date                          ,
                                    P_T_Date        In Date                          );

 Procedure Update_Othr_Table( P_Costing_Type  In Number                        ,
                              P_Wtavg_Type    In Ias_Para_Inv.Wtavg_Type%Type  ,
                              P_F_Date In Date                                 ,
                              P_T_Date In Date                                 ) ;

 Procedure Create_Inv_G_Code_Journal ( P_F_Date        In Date             ,
                                       P_T_Date        In Date             ,
                                       P_User_No       In User_R.U_Id%Type ,
                                       P_Br_No         In Number           ,
                                       P_Br_Year       In Number           ,
                                       P_Br_Cmp        In Number           ,
                                       P_Br_Ser        In Number           ,
                                       P_Br_Usr        In Number           ,
                                       P_Use_Out_Bills In Number           ) ;

 Procedure Unclose_Inv ( P_Prd_No        In Number           ,
                         P_F_Date        In Date             ,
                         P_T_Date        In Date             ,
                         P_User_No       In User_R.U_Id%Type )  ;
End Ias_Inv_Close_Pkg;
/
CREATE PACKAGE  IAS_INV_ITM_SRL_PKG IS
--##---------------------------------------------------------------------------------##--- 
TYPE TRNS_CV IS REF CURSOR ;
--##---------------------------------------------------------------------------------##--- 
PROCEDURE SHW_DOC_DATA( SQL_CV              IN OUT TRNS_CV                         
                         ,P_DOC_NO          IN NUMBER DEFAULT NULL
                         ,P_DOC_SER         IN NUMBER DEFAULT NULL
                         ,P_DOC_DATE        IN DATE   DEFAULT NULL
                         ,P_BRN_NO          IN NUMBER DEFAULT NULL                                                   
                         ,P_LNG             IN NUMBER DEFAULT 1
                         ,P_DOC_TYPE_REF    IN NUMBER DEFAULT NULL
                         ,P_USR_NO          IN NUMBER DEFAULT NULL );
--##---------------------------------------------------------------------------------##---                                                  
PROCEDURE SHW_ITM_DOC ( SQL_CV     IN OUT TRNS_CV
                       ,P_DOC_TYPE  IN NUMBER
                       ,P_DOC_SER  IN NUMBER                       
                        ,P_LNG      IN NUMBER
                        ,P_BRN_NO   IN NUMBER DEFAULT NULL);
 --##---------------------------------------------------------------------------------##--- 
PROCEDURE  GET_FLD_VAL(  P_DOC_TYPE       IN NUMBER,
                         P_DOC_SER        IN NUMBER,
                         P_LNG             IN NUMBER DEFAULT 1,
                         P_fld_no         OUT NUMBER,
                         P_fld_ser        OUT NUMBER,
                         P_fld_date       OUT DATE,                       
                         P_fld_desc       OUT VARCHAR2,                        
                         P_fld_jv_type    OUT NUMBER,
                         P_FLD_ACODE     OUT VARCHAR2,
                         P_FLD_ACODE_NM   OUT VARCHAR2);
--##---------------------------------------------------------------------------------##---  

   TYPE SRL_RCRD IS RECORD (          
      SERIALNO       IAS_ITEM_SERIALNO.SERIALNO%TYPE,
      DESC_NO        IAS_ITEM_SERIALNO.DESC_NO%TYPE, 
      FREE_FLG       IAS_ITEM_SERIALNO.FREE_FLG%TYPE      
   );
 
--##-------------------------------------------------------------------------------------##--
TYPE SRL_TBL_TCH IS TABLE OF SRL_RCRD
      INDEX BY BINARY_INTEGER;
--##-------------------------------------------------------------------------------------##--   
PROCEDURE FETCH_SERIALNO_DATA (   P_SRL_TBL                  IN OUT   SRL_TBL_TCH,
                                  P_DOC_TYPE_REF        IN IAS_ITEM_SERIALNO.DOC_TYPE%TYPE  DEFAULT NULL,
                                  P_DOC_NO          IN IAS_ITEM_SERIALNO.DOC_NO%TYPE  DEFAULT NULL,
                                  P_DOC_SER         IN IAS_ITEM_SERIALNO.DOC_SER%TYPE DEFAULT NULL,
                                  P_Rcrd_No         IN IAS_ITEM_SERIALNO.Rcrd_No%TYPE DEFAULT NULL,
                                  P_I_CODE          IN IAS_ITM_MST.I_CODE%TYPE        DEFAULT NULL ,               
                                  P_EXPIRE_DATE     IN IAS_BILL_DTL.EXPIRE_DATE%TYPE  DEFAULT NULL,
                                  P_BATCH_NO        IN IAS_BILL_DTL.Batch_No%TYPE     DEFAULT NULL,               
                                  P_W_CODE          IN IAS_ITEM_SERIALNO.W_CODE%TYPE  DEFAULT NULL,
                                  P_F_DOC_NO        IN IAS_ITEM_SERIALNO.DOC_NO%TYPE  DEFAULT NULL,
                                  P_F_DOC_SER       IN IAS_ITEM_SERIALNO.DOC_SER%TYPE DEFAULT NULL,
                                  P_F_Rcrd_No       IN IAS_ITEM_SERIALNO.Rcrd_No%TYPE DEFAULT NULL,
                                  P_F_W_CODE        IN IAS_ITEM_SERIALNO.W_CODE%TYPE  DEFAULT NULL,
                                  P_F_SERIALNO      IN IAS_ITEM_SERIALNO.SERIALNO%TYPE DEFAULT NULL,
                                  P_T_SERIALNO      IN IAS_ITEM_SERIALNO.SERIALNO%TYPE DEFAULT NULL,
                                  P_Desc_No         IN IAS_ITEM_SERIALNO.Desc_NO%TYPE DEFAULT NULL,
                                  P_P_YEAR          IN NUMBER                         DEFAULT NULL,
                                  P_PREV_YEAR       IN NUMBER                         DEFAULT NULL,
                                  P_PRS_TYP         IN NUMBER DEFAULT 0);
--##-------------------------------------------------------------------------------------##--
FUNCTION CHK_SERIALNO_DATA (     P_PRSS_TYP        IN NUMBER DEFAULT NULL, -- 1 CHANGE QTY, 2 DELETE RECORD, 3  POST COMMIT
                                  P_DOC_TYPE        IN IAS_ITEM_SERIALNO.DOC_TYPE%TYPE  DEFAULT NULL,                                 
                                  P_DOC_SER         IN IAS_ITEM_SERIALNO.DOC_SER%TYPE DEFAULT NULL,                                 
                                  P_I_CODE          IN IAS_ITM_MST.I_CODE%TYPE        DEFAULT NULL ,
                                  P_Rcrd_No         IN IAS_ITEM_SERIALNO.Rcrd_No%TYPE DEFAULT NULL,                                                                
                                  P_W_CODE          IN IAS_ITEM_SERIALNO.W_CODE%TYPE  DEFAULT NULL,
                                  P_I_QTY           IN NUMBER                          DEFAULT NULL,
                                  P_FREE_QTY        IN NUMBER                          DEFAULT NULL,
                                  P_LANG_NO         IN NUMBER                          DEFAULT 1 ) RETURN CHAR;
                                  --  ,
                                 --- P_MSG_RSLT        OUT VARCHAR2                                );
--##-------------------------------------------------------------------------------------##--                                                                       
END IAS_INV_ITM_SRL_PKG;
/
CREATE PACKAGE IAS_INV_KIT_ITM_PKG IS
----------------------------------------------------------                                                                 
   TYPE TP_KIT_REC   IS RECORD
          (Kit_Item_No   IAS_ITM_MST.I_CODE%TYPE, 
          I_NAME         IAS_ITM_MST.I_NAME%TYPE, 
          I_E_NAME       IAS_ITM_MST.I_E_NAME%TYPE,                                                                          
          ITM_UNT        IAS_ITM_DTL.ITM_UNT%TYPE,
          W_CODE         IAS_ITM_WCODE.W_CODE%TYPE,
          P_SIZE         IAS_ITM_DTL.P_SIZE%TYPE,
          AVL_QTY        IAS_ITM_WCODE.AVL_QTY%TYPE                                          
            );          
--##---------------------------------------------------------------------------------##---              
TYPE TP_KIT_RFC     IS REF CURSOR; 
TYPE TRNS_CV IS REF CURSOR ;              
--##---------------------------------------------------------------------------------##---                              
G_KIT_REC      TP_KIT_REC;                          
--##---------------------------------------------------------------------------------##---                          
TYPE TP_KIT_TBL  IS TABLE OF TP_KIT_REC ;               
--##---------------------------------------------------------------------------------##--- 
 G_DYN_QRY           VARCHAR2(32767);   
--##---------------------------------------------------------------------------------##---                                               
FUNCTION GET_KIT_AVLQTY_FNC(P_Kit_Item_No       IN IAS_ITM_DTL.I_CODE%TYPE   DEFAULT NULL ,                                                                             
                            P_ITM_UNT           IN IAS_ITM_DTL.ITM_UNT%TYPE  DEFAULT NULL,
                            p_w_code            IN IAS_ITM_WCODE.W_CODE%TYPE  DEFAULT NULL,
                            P_SHW_WCODE         IN NUMBER  DEFAULT 0 )   RETURN TP_KIT_TBL PIPELINED ;   
 --##---------------------------------------------------------------------------------##--- 
PROCEDURE SHW_KIT_ITM_AVLQTY_PRC ( SQL_CV             IN OUT TRNS_CV ,
                                  P_Kit_Item_No       IN IAS_ITM_DTL.I_CODE%TYPE   DEFAULT NULL ,                                                                             
                                  P_ITM_UNT           IN IAS_ITM_DTL.ITM_UNT%TYPE  DEFAULT NULL,
                                  p_w_code            IN IAS_ITM_WCODE.W_CODE%TYPE  DEFAULT NULL,
                                  P_SHW_WCODE         IN NUMBER  DEFAULT 0,
                                  P_WHR               IN VARCHAR2  DEFAULT NULL )   ;
--##---------------------------------------------------------------------------------##---                                   
 
END IAS_INV_KIT_ITM_PKG;
/
CREATE Package Ias_Inv_Mngmnt_Pkg As
--##---------------------------------------------------------------------------------------------------##--
 Procedure Get_Incom_Sale_Qty ( P_I_Code     In  Ias_Itm_Mst.I_Code%Type      ,  
                                P_W_Code     In  Warehouse_Details.W_COde%Type Default Null ,
                                P_F_Date     In  Date                          ,
                                P_T_Date     In  Date                          ,
                                P_Exp_Date   In  Date     Default Null         ,
                                P_Batch_No   In  Varchar2 Default Null         ,
                                P_Incom_Qty  Out Number                        ,
                                P_Sale_Qty   Out Number                        ,
                                P_Tbl_Nm     In Varchar2                       ) ;
--##---------------------------------------------------------------------------------------------------##--
 Function Get_Whtrns_Qty_Not_Rec ( P_I_Code      In  Ias_Itm_Mst.I_Code%Type      ,  
                                   P_W_Code      In  Warehouse_Details.W_Code%Type Default Null ,
                                   P_F_Date      In  Date                          ,
                                   P_T_Date      In  Date                          ,
                                   P_Exp_Date    In  Date     Default Null         ,
                                   P_Batch_No    In  Varchar2 Default Null         ,
                                   P_Tbl_Nm_Mst  In Varchar2                       ,
                                   P_Tbl_Nm_Dtl  In Varchar2                       ) Return Number ;
--##---------------------------------------------------------------------------------------------------##--
 Function Get_Out_Bill_Qty ( P_I_Code     In  Ias_Itm_Mst.I_Code%Type      ,  
                             P_W_Code     In  Warehouse_Details.W_Code%Type Default Null ,
                             P_F_Date     In  Date                          ,
                             P_T_Date     In  Date                          ,
                             P_Type       In  Number                        ,
                             P_Exp_Date   In  Date     Default Null         ,
                             P_Batch_No   In  Varchar2 Default Null         ,
                             P_Tbl_Nm_Mst In Varchar2                       ,
                             P_Tbl_Nm_Dtl In Varchar2                       ) Return Number ;
--##---------------------------------------------------------------------------------------------------##--  
 Function Get_First_Date  Return Date ;                           
--##---------------------------------------------------------------------------------------------------##--  
End Ias_Inv_Mngmnt_Pkg ;
/
CREATE Package Ias_Itm_Barcode_Pkg   Is
Procedure Insrt_Itm_Barcode_Serialno_Prc (P_Apprvd_Bracode_Same_Serialno  In Number                               ,
                                          P_I_Code                        In Ias_Itm_Mst.I_Code%Type              ,
                                          P_Itm_Unt                       In Ias_Itm_Dtl.Itm_Unt%Type             ,
                                          P_P_Size                        In Ias_Itm_Dtl.P_Size%Type              ,
                                          P_Barcode                       In Ias_Itm_Unt_Barcode.Barcode%Type     ,
                                          P_Batch_No                      In Ias_Itm_Unt_Barcode.Batch_No%Type    , 
                                          P_Expire_Date                   In Ias_Itm_Unt_Barcode.Expire_Date%Type ,
                                          P_Ad_U_Id                       In Ias_Itm_Unt_Barcode.Ad_U_Id%Type     ,
                                          P_Ad_Date                       In Ias_Itm_Unt_Barcode.Ad_Date%Type     ,
                                          P_Up_U_Id                       In Ias_Itm_Unt_Barcode.Up_U_Id%Type     ,
                                          P_Up_Date                       In Ias_Itm_Unt_Barcode.Up_Date%Type     ,
                                          P_Flex_No                       In Ias_Itm_Unt_Barcode.Flex_No%Type     ) ;
End Ias_Itm_Barcode_Pkg ;
/
CREATE Package IAS_Itm_Inv_Pkg Is

--## Sale_Cost & Item_Move

PROCEDURE Insrt_Sale_Cost     ( p_Cst           In Out NUMBER,
                                p_Cost_Type     In NUMBER,
                                P_Wtavg_Type    In NUMBER,
                                p_ICode         In Ias_Itm_Mst.I_CODE%TYPE ,
                                p_Iqty          In NUMBER,
                                p_Freeqty       In NUMBER,
                                p_Itm_Unt       In  Ias_Itm_Dtl.Itm_Unt%TYPE,
                                p_PSize         In NUMBER,
                                p_Barcode       In IAS_ITM_UNT_BARCODE.BARCODE%TYPE		Default Null,
                                p_WCode         In WAREHOUSE_DETAILS.W_CODE%TYPE,
                                p_DocType       In NUMBER,
                                p_DocNo         In NUMBER ,
                                p_BillDocType   In NUMBER,
                                p_cc_code       In COST_CENTERS.CC_CODE%TYPE		Default Null,
                                p_pj_no       	In IAS_PROJECTS.PJ_NO%TYPE 		  Default Null,
                                p_Actv_No       In IAS_ACTVTY.Actv_No%TYPE      Default Null,
                                p_RcrdNo        In NUMBER   Default Null,
                                p_ExpDate       In DATE     Default Null,
                                p_BatchNo       In VARCHAR2 Default Null,
                                p_DocSer        In NUMBER,
                                p_DocSeq        In NUMBER,
																p_idate         In DATE     Default null,
																p_vatamt        In NUMBER   Default 0,
																p_disamt        In NUMBER   Default 0,
																p_acy           In VARCHAR2 Default Null,
																p_ac_rate       In NUMBER ,
																p_stk_rate      In NUMBER ,
																p_c_code        In CUSTOMER.C_CODE%TYPE Default Null,
																p_v_code        In V_DETAILS.V_CODE%TYPE Default Null, 
																p_adesc         In VARCHAR2 Default Null,
																p_refno         In VARCHAR2 Default Null,
																p_outno         In NUMBER   Default Null,
																p_outgrser      In NUMBER   Default Null,
																p_inout         In NUMBER,
																p_iprice        In NUMBER   Default 0,
																p_rt_type       In NUMBER   Default Null,
																p_Extrnl_pst    In NUMBER   Default 0,
															  P_Itm_Length    In  NUMBER   Default Null,
																P_Itm_Width     In  NUMBER   Default Null,
																P_Itm_Height    In  NUMBER   Default Null,
																P_Itm_Number    In  NUMBER   Default Null,
																P_Wt_Qty	      In  NUMBER   Default Null, 
																P_Wt_Unt	      In  VARCHAR2 Default Null, 
																P_Argmnt_No	    In  NUMBER   Default Null, 															
																P_Doc_Seq_Gr    In NUMBER Default Null,
																P_Rec_No_Gr     In NUMBER Default Null,
																P_Itm_Cst_Gr    In NUMBER Default Null,
															  P_Free_Typ         In Number     Default Null  ,
															  P_Dis_Amt_Mst      In Number     Default Null  ,
															  P_Dis_Amt_Mst_Vat  In Number     Default Null  ,
															  P_Dis_Per          In Number     Default Null  ,
															  P_Dis_Amt_Dtl      In Number     Default Null  ,
															  P_Dis_Amt_Dtl_Vat  In Number     Default Null  ,
															  P_Dis_Per2         In Number     Default Null  ,
															  P_Dis_Amt_Dtl2     In Number     Default Null  ,
															  P_Dis_Amt_Dtl2_Vat In Number     Default Null  ,
															  P_Dis_Per3         In Number     Default Null  ,
															  P_Dis_Amt_Dtl3     In Number     Default Null  ,
															  P_Dis_Amt_Dtl3_Vat In Number     Default Null  ,
															  P_Othr_Amt         In Number     Default Null  ,
															  P_Vat_Amt_Othr     In Number     Default Null  ,
															  P_Vat_Per          In Number     Default Null  ,
															  P_Emp_No           In Number     Default Null  ,
															  P_I_Price_Vat      In Number     Default Null  ,
															  P_Lev_No           In Number     Default Null  ,																														
																p_ad_date       In DATE,
																p_up_date       In DATE,
																p_Brn_No        In NUMBER,
																p_Brn_Year      In NUMBER,
												        p_CMP_NO        In NUMBER,
												        p_BRN_USR       In NUMBER);

--===================================================================================															
--## Item_Move

PROCEDURE Insrt_Item_Move (p_doctype       In  NUMBER,
						 			 			   p_billdoctype   In  NUMBER,
													 p_docno         In  NUMBER,
													 p_icode         In  Ias_Itm_Mst.I_CODE%TYPE,
													 p_iqty          In  NUMBER,
													 p_freeqty       In  NUMBER,
													 p_Itm_Unt       In  Ias_Itm_Dtl.Itm_Unt%TYPE,
													 p_psize         In  NUMBER,
													 p_Barcode       In IAS_ITM_UNT_BARCODE.BARCODE%TYPE		Default Null,
													 p_idate      	 In  DATE,
													 p_iprice	  	   In  NUMBER,
													 p_wcode  	  	 In  WAREHOUSE_DETAILS.W_CODE%TYPE,
													 p_stkcost     	 In  NUMBER,
													 p_vatamt      	 In  NUMBER,
													 p_disamt				 In  NUMBER			 Default 0,
													 p_acy       	   In  VARCHAR2,
													 p_ac_rate       In  NUMBER,
 													 p_stk_rate      In  NUMBER,
													 p_cc_code     	 In  COST_CENTERS.CC_CODE%TYPE Default Null,
													 p_pj_no       	 In  IAS_PROJECTS.PJ_NO%TYPE   Default Null,
													 p_Actv_No       In  IAS_ACTVTY.Actv_No%TYPE   Default Null,
												   p_c_code        In  CUSTOMER.C_CODE%TYPE      Default null,
													 p_v_code    	   In  V_DETAILS.V_CODE%TYPE     Default null,
													 p_adesc       	 In  VARCHAR2    Default null,
													 p_grno        	 In  NUMBER      Default null,
													 p_expdate  	   In  DATE,
													 p_batchno     	 In  VARCHAR2,
													 p_rcrdno      	 In  NUMBER,
													 p_refno       	 In  VARCHAR2    Default null,
													 p_Docser      	 In  NUMBER,
													 p_DocSeq        In  NUMBER,
													 p_outno       	 In  NUMBER 		 Default Null,
													 p_outgrser    	 In  NUMBER 		 Default Null,
													 p_rt_type       In  NUMBER   	 Default Null,
													 p_inout       	 In  NUMBER,
													 p_Extrnl_pst    In  NUMBER      Default 0,
													 P_Itm_Length    In  NUMBER   Default Null,
													 P_Itm_Width     In  NUMBER   Default Null,
													 P_Itm_Height    In  NUMBER   Default Null,
													 P_Itm_Number    In  NUMBER   Default Null,
													 P_Wt_Qty	       In  NUMBER   Default Null, 
													 P_Wt_Unt	       In  VARCHAR2 Default Null, 
													 P_Argmnt_No	   In  NUMBER   Default Null,
													 P_Free_Typ         In Number     Default Null  ,
													 P_Dis_Amt_Mst      In Number     Default Null  ,
													 P_Dis_Amt_Mst_Vat  In Number     Default Null  ,
													 P_Dis_Per          In Number     Default Null  ,
													 P_Dis_Amt_Dtl      In Number     Default Null  ,
													 P_Dis_Amt_Dtl_Vat  In Number     Default Null  ,
													 P_Dis_Per2         In Number     Default Null  ,
													 P_Dis_Amt_Dtl2     In Number     Default Null  ,
													 P_Dis_Amt_Dtl2_Vat In Number     Default Null  ,
													 P_Dis_Per3         In Number     Default Null  ,
													 P_Dis_Amt_Dtl3     In Number     Default Null  ,
													 P_Dis_Amt_Dtl3_Vat In Number     Default Null  ,
													 P_Othr_Amt         In Number     Default Null  ,
													 P_Vat_Amt_Othr     In Number     Default Null  ,
													 P_Vat_Per          In Number     Default Null  ,
													 P_Emp_No           In Number     Default Null  ,
													 P_I_Price_Vat      In Number     Default Null  ,
													 P_Lev_No           In Number     Default Null  ,													  
													 p_ad_date       In  DATE,
													 p_up_date       In  DATE,													 
													 p_Brn_No        In  NUMBER,
						               p_Brn_Year      In  NUMBER,
										       p_CMP_NO        In  NUMBER,
										       p_BRN_USR       In  NUMBER);

--===================================================================================															
--## good Receive

PROCEDURE Insrt_Gr_Mst (  p_doctype      In  NUMBER,
													p_Incmtype     In  NUMBER     Default Null,
													p_gr_no        In  NUMBER,
													p_g_ser        In  NUMBER,
													p_doc_date  	 In  DATE,
													p_a_code  	   In  ACCOUNT.A_CODE%TYPE,
													p_acy      	   In  VARCHAR2,
													p_c_code       In  CUSTOMER.C_CODE%TYPE   Default Null,
													p_v_code    	 In  V_DETAILS.V_CODE%TYPE  Default Null,
													p_acrate       In  NUMBER  ,
													p_stkrate      In  NUMBER  ,
													p_gramt        In  NUMBER  	  Default Null,
													p_pi_no        In  NUMBER  	  Default null,
													p_cc_code      In  COST_CENTERS.CC_CODE%TYPE      Default null,
													p_pj_no        In  IAS_PROJECTS.PJ_NO%TYPE 		    Default Null,
													p_actv_no      In  IAS_ACTVTY.ACTV_NO%TYPE 		    Default Null,
													p_w_code     	 In  WAREHOUSE_DETAILS.W_CODE%TYPE  Default null,
													p_refno        In  VARCHAR2   Default Null,
													p_desc  	     In  VARCHAR2   Default  Null,
													p_cflag        In  NUMBER     Default 0,
													p_pending      In  NUMBER     Default 0,
													p_pur_type     In  NUMBER     Default Null, 
													p_driver_name  In  VARCHAR2   Default null,
													p_car_no  		 In  VARCHAR2   Default null,
													p_work_shop    In  NUMBER     Default 0,
													p_doc_ser      In  NUMBER     Default Null, 
													p_doc_no   	   In  NUMBER     Default Null, 
													p_pi_doc_type  In  NUMBER     Default Null, 												
													p_rt_out    	 In  NUMBER     Default 0, 
													p_out_diff_a_code   In  VARCHAR2   Default  Null,
													p_out_diff_a_cy  In  VARCHAR2 Default  Null,
													p_out_diff_amt   In  NUMBER   Default 0,
													P_User_No   		 In  NUMBER   Default Null,
													p_Brn_No         In  NUMBER,
													p_Brn_Year       In  NUMBER,
									        p_CMP_NO         In  NUMBER,
									        p_BRN_USR        In  NUMBER);

--===================================================================================
  PROCEDURE Insrt_Gr_Dtl (  p_doctype       In  NUMBER,                                                                    
                            p_Incmtype      In  NUMBER     Default Null,
                            p_gr_no         In  NUMBER,
                            p_g_ser         In  NUMBER,
                            p_doc_date      In  DATE,
                            p_acy           In  VARCHAR2,
                            p_acrate        In  NUMBER,
                            p_stkrate       In  NUMBER,
                            p_pi_no         In  NUMBER     Default Null,
                            p_pur_type      In  NUMBER     Default Null, 
                            p_doc_ser       In  NUMBER     Default Null, 
                            p_DocSeq        In  NUMBER,
                            p_w_code        In  WAREHOUSE_DETAILS.W_CODE%TYPE,
                            P_Cc_Code       In  COST_CENTERS.CC_CODE%TYPE Default Null ,
                            P_Pj_No         In  IAS_PROJECTS.PJ_NO%TYPE   Default Null ,
                            P_Actv_No       In  IAS_ACTVTY.ACTV_NO%TYPE   Default Null ,
                            p_v_code        In  V_DETAILS.V_CODE%TYPE     Default Null , 
                            p_icode         In  Ias_Itm_Mst.I_CODE%TYPE,
                            p_iqty          In  NUMBER,
                            p_freeqty       In  NUMBER,
                            p_Itm_Unt       In  Ias_Itm_Dtl.Itm_Unt%TYPE,
                            p_psize         In  NUMBER,
                            p_Barcode       In  IAS_ITM_UNT_BARCODE.BARCODE%TYPE        Default Null,
                            p_iprice        In  NUMBER,
                            p_cprice        In  NUMBER,
                            p_stkcost       In  NUMBER,
                            p_wtavg_before  In  NUMBER,
                            p_wtavg_after   In  NUMBER,                                                                                                                                                                                                                                                    
                            p_vatper        In  NUMBER     Default 0,
                            p_vatamt        In  NUMBER     Default 0,
                            p_disamt        In  NUMBER     Default 0,
                            P_Dis_Amt_Not_Effect  In  NUMBER     Default 0, 
                            p_expdate       In  DATE,
                            p_batchno       In  VARCHAR2,
                            p_rcrdno        In  NUMBER,
                            p_use_serial    In  NUMBER     Default 0,
                            P_Under_Selling In  NUMBER     Default 0,
                            p_doc_type_ref  In  NUMBER     Default Null, 
                            p_doc_no_ref    In  NUMBER     Default Null, 
                            p_doc_ser_ref   In  NUMBER     Default Null, 
                            P_Itm_Length    In  NUMBER   Default Null,
                            P_Itm_Width     In  NUMBER   Default Null,
                            P_Itm_Height    In  NUMBER   Default Null,
                            P_Itm_Number    In  NUMBER   Default Null,
                            P_Wt_Qty        In  NUMBER   Default Null, 
                            P_Wt_Unt        In  VARCHAR2 Default Null, 
                            P_Argmnt_No     In  NUMBER   Default Null,                                                    
                            p_Brn_No        In  NUMBER,
                            p_Brn_Year      In  NUMBER,
                            p_CMP_NO        In  NUMBER,
                            p_BRN_USR       In  NUMBER);													  

--===================================================================================
--## Insrt Into Ias_Itm_Wcode

PROCEDURE Insrt_Ias_Itm_Wcode (  p_icode     In  Ias_Itm_Mst.I_CODE%TYPE,
																 p_Itm_Unt    In  Ias_Itm_Dtl.Itm_Unt%TYPE,
																 p_Psize  	 In  NUMBER,
																 p_w_code	   In  WAREHOUSE_DETAILS.W_CODE%TYPE,
																 p_doc_date  In  DATE   Default Null);

--===================================================================================							 
--## Update Gr_detail

PROCEDURE Update_Gr_Dtl ( P_DocType   In Number,
													P_Docser    In Number,
													P_Icode     In Ias_Itm_Mst.I_CODE%TYPE Default Null,
													P_RcrdNo    In Number   Default Null,
													p_DocSeq    In NUMBER   Default Null,
													p_Brn_No    In NUMBER,
													p_Brn_Year  In NUMBER,
									        p_CMP_NO    In NUMBER,
									        p_BRN_USR   In NUMBER);
--===================================================================================							 
Function Get_Itm_Cost(  P_costing_type In Number,
												P_Wtavg_Type   In NUMBER,
												P_icode        In Ias_Itm_Mst.I_CODE%TYPE,
												P_wcode     	 In WAREHOUSE_DETAILS.W_CODE%TYPE,
												P_Psize        In number,
												P_Iqty         In number,
												P_ExpDate      In DATE Default Null,
												P_BatchNo      In VarChar2 Default Null,
												p_Brn_No       In NUMBER,
												p_Brn_Year     In NUMBER,
								        p_CMP_NO       In NUMBER,
								        p_BRN_USR      In NUMBER) Return Number;
--===================================================================================
Function Get_Inv_Cumltv_Blnc(P_Val_Typ In Number Default 0        ,
                             P_I_Code  In Ias_Itm_Mst.I_Code%Type ,
                             P_W_Code  In Warehouse_Details.W_Code%Type Default Null ) Return Number ;
--===================================================================================
Procedure Upd_Itm_Wtavg_Aftr_Save(P_Cost_Type   In Ias_Para_Inv.Costing_Type%Type,
                                  P_Wtavg_Type  In Ias_Para_Inv.Wtavg_Type%Type,
                                  P_Icode       In Ias_Itm_Mst.I_Code%Type, 
                                  P_Wcode       In Warehouse_Details.W_Code%Type, 
                                  P_Doctype     In Number, 
                                  P_Docseq      In Gr_Detail.Doc_Sequence%Type,
                                  P_Expdate     In Date Default Null, 
                                  P_Batchno     In Gr_Detail.Batch_No%Type Default Null,
                                  P_Stk_Cst_Frc In Ias_Para_Inv.Stkcost_Fraction%Type) ;
--===================================================================================   
End IAS_Itm_Inv_Pkg;
/
CREATE Package IAS_Itm_Pkg as
 --##--
 PROCEDURE Get_Itm_Name ( P_Lng_no In Number,P_icode  In Ias_Itm_Mst.I_CODE%TYPE,P_i_name Out varchar2,P_idesc Out varchar2) ;
 FUNCTION  Get_Itm_Name (p_i_code  In Ias_Itm_Mst.I_CODE%TYPE, P_Lng_no In Number)  RETURN VARCHAR2 ;
 PROCEDURE Get_Itm_Info (  P_Lng_no   In  Number,
	                         P_icode    In  Ias_Itm_Mst.I_CODE%TYPE,
													 P_i_name   Out varchar2,
													 P_idesc    Out varchar2,
													 P_UseExpDt Out Number,
													 P_UseBtch  Out Number, 
													 P_UseSer   Out Number,
													 P_UseFrc   Out Number,
													 P_UseFree  Out Number,
													 P_UseDisc  Out Number,
													 P_Srv_Itm  Out Number,
													 P_Kit_Itm  Out Number,
													 P_Blocked  Out Number);
 FUNCTION Get_Grand_Avlqty(P_icode In Ias_Itm_Mst.I_CODE%TYPE,
                           P_Wcode In WAREHOUSE_DETAILS.W_CODE%TYPE Default Null) Return NUMBER;
 FUNCTION Get_Grand_Wtavg(P_Wtavg_Type In NUMBER,
                          P_Icode  In Ias_Itm_Mst.I_CODE%TYPE ,
                          P_Wcode  In WAREHOUSE_DETAILS.W_CODE%TYPE Default Null) Return NUMBER;
 FUNCTION Check_Srv_Itm(P_icode    In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER;
 FUNCTION Check_Kit_Itm(P_icode    In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER;
 
FUNCTION Check_NoSale_Itm(P_Icode   In Ias_Itm_Dtl.I_CODE%TYPE ,
                          P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%TYPE) Return NUMBER ;
 FUNCTION Check_Itm_Wcode_Inactv (P_I_code In Ias_Itm_Mst.I_CODE%TYPE,P_w_code In Warehouse_details.W_CODE%TYPE) RETURN NUMBER ;
 PROCEDURE Get_I_Code( P_Barcode In IAS_ITM_UNT_BARCODE.BARCODE%TYPE ,P_I_Code IN OUT Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt IN OUT Ias_Itm_Dtl.Itm_Unt%Type) ;
 FUNCTION Get_Last_Incom_Date(P_I_code Ias_Itm_Mst.I_CODE%TYPE, P_W_code In Warehouse_Details.W_CODE%TYPE Default Null ) Return DATE;
 PROCEDURE Get_Itm_Vndr_Price ( P_I_code   In  Ias_Itm_Mst.I_CODE%TYPE ,
                                P_V_code   In  V_DETAILS.V_CODE%TYPE ,
                                P_A_cy     In  EX_RATE.CUR_CODE%TYPE  DEFAULT NULL,
                                P_Price_Vndr_Itm_Unt_Typ In Number     ,
                                P_ITM_UNT  In Ias_Itm_Dtl.Itm_Unt%TYPE  DEFAULT NULL,  
                                P_p_size   In Number     ,                               
                                P_I_price  out NUMBER);
 
 Function Fetch_Itm_Nm_Price_Order (P_I_Code In Ias_Itm_Mst.I_Code%Type )Return Varchar2 ;

 Function Fetch_Itm_Doc_Price_Order (P_Doc_Type In Number  ,
                                     P_Doc_Ser  In  Number ,
                                     P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Number ;
	FUNCTION Get_MaxGrand_Size ( P_icode   In Ias_Itm_Mst.I_CODE%TYPE) return NUMBER;          
	Function Get_Itm_Activity (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Number ;
	PROCEDURE Get_Itm_Activity_Wcode_Info (P_W_Code       In  Warehouse_Details.W_Code%Type       ,
	                                       P_Itm_Actv_No  In  Ias_Items_Activity.Activity_No%Type ,
	                                       P_Cc_Code      Out Cost_Centers.Cc_Code%Type           ,
	                                       P_Pj_No        Out Ias_Projects.Pj_No%Type             ,
	                                       P_Actv_No      Out Ias_Actvty.Actv_No%Type             ) ;
	                                       
  Function Get_Itm_Min_Qty( P_I_Code In Ias_Itm_Mst.I_Code%Type      ,
	                          P_W_Code  In Warehouse_Details.W_Code%Type
                               ) Return Number;

  Function Get_Icode_One_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Itm_Unt%Type ;                                                                   
  Function Get_Icode_Unit_By_Lvl (P_I_Code  In Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type) Return Ias_Itm_Dtl.Itm_Unt%Type;
  Function Chk_Icode_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type    ,
                             P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type   ) Return Number ;
  Function Get_Icode_Min_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;
  Function Get_Icode_Purch_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type;
  Function Get_Icode_Sales_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type;                         
  Function Get_Icode_Price_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;
  Function Get_Icode_Man_Inv_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;  
  Function Get_Icode_Vndr (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Mst.I_Code%Type;                                                
  --##----------------------------------------------------------------------------------------------##-- 
  Function Get_Icode_Size_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type) Return Number; 


 Function Get_Icode_Rol (P_Rol_Type NUMBER,
                          P_I_Code  In Ias_Itm_Mst.I_Code%Type ,
                          P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type default null,
                          P_w_code In Warehouse_Details.W_Code%Type default null,
                          P_brn_no In s_brn.brn_no%Type default null) Return Number;

  Procedure Get_Icode_Qty_Lmt (P_Rol_Type  In Number,
                               P_I_Code    In Ias_Itm_Mst.I_Code%Type ,
                               P_Itm_Unt   In Ias_Itm_Dtl.Itm_Unt%Type Default Null,
                               P_W_Code    In Warehouse_Details.W_Code%Type Default Null,
                               P_Brn_No    In S_Brn.Brn_No%Type Default Null,
                               P_I_Rol       Out Number, 
                               P_I_Min_Qty   Out Number,
                               P_I_Max_Qty   Out Number,
                               P_Asm_Ord_Qty Out Number         ) ; 
  Function Get_Max_Lvl_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Lvl_Unit%Type;    
                             
  Function Get_Icode_Unt  (P_I_Code In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Varchar2 ;
  Function Get_Icode_Size (P_I_Code In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Number   ;                             
  
  Function Get_Itm_Unt_Lvl ( P_I_Code In  Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type  ) Return Varchar2 ; 
                                           
	Function Get_Itm_Price (  P_Price_Type In Ias_Para_Inv.Price_Type%Type   ,
	                          P_Itm_Code   In Ias_Itm_Mst.I_Code%Type        ,
	                          P_Itm_Unt    In Ias_Itm_Dtl.Itm_Unt%Type       ,
	                          P_Lvl_No     In Ias_Item_Price.Lev_No%Type     ,
	                          P_W_Code     In Warehouse_Details.W_Code%Type Default Null ,
	                          P_Brn_No     In S_Brn.Brn_No%Type Default Null ,                                          
	                          P_F_Qty      In Number Default Null ,
	                          P_T_Qty      In Number Default Null ) Return Number ;

  Procedure Get_Itm_Wght_Data (  P_Itm_Barcode           In  Ias_Itm_Dtl.Barcode%Type ,                                                                                                                                      
                                 P_Wght_Prfx             In  Varchar2                 ,
                                 P_Wght_Lngth            In  Number                   ,                                                            
                                 P_Wght_Itm_Lngth        In  Number                   , 
                                 P_Wght_Val              In  Number                   , 
                                 P_Remove_Wght_Dgt       In  Number                   ,
                                 P_Incld_Itm_Unt         In  Number Default 0         ,
                                 P_Itm_Code              Out Ias_Itm_Mst.I_Code%Type  ,
                                 P_Itm_Qty               Out Number                   ,
                                 P_Itm_Unt               Out Ias_Itm_Dtl.Itm_Unt%Type )  ;   


Procedure Get_Itm_QR_Code_Data (  P_QR_Code_Itm              In  Varchar2 ,                                                                                                                                      
                                  P_QR_Code_Prfx_Lngth       In  Number   ,                                                            
                                  P_QR_Code_Lngth            In  Number   ,
                                  P_QR_Code_Argmnt           In  Number   ,
                                  P_No_Of_Barcode_In_QR_Code In  Number   ,
                                  P_Itm_Code                 Out Ias_Itm_Mst.I_Code%Type ) ;                                                          
                                 
                                 	                          
                                 
 /*
 pragma restrict_references(Get_Grand_Avlqty,wnds,wnps);
 --pragma restrict_references(Get_Grand_Wtavg,wnds,wnps);*/
 
	Procedure Get_Srch_Itm_Crtria (   P_Srch_Itm_Crtria              In  Number ,
	                                  P_Itm                          In  Varchar2,
                                  P_Ord_Lov                      In  Number  ,                                                                                                                                      
                                  P_Whr                          Out Varchar2                                                            
	                                 )  ; 
 Function Get_Unit_Lvl ( P_I_Code  In Ias_Itm_Mst.I_Code%Type,
                         P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type
                       )  Return Ias_Itm_Dtl.Lvl_Unit%Type;
                       
Procedure Get_Itm_Wght_Data ( P_Itm_Barcode               In  Ias_Itm_Dtl.Barcode%Type ,                                                                                                                                      
	                              P_Wght_Prfx             In  Varchar2                 ,
                              P_Wght_Lngth            In  Number                   ,                                                            
	                              P_Wght_Itm_Lngth        In  Number                   , 
	                              P_Wght_Val              In  Number                   ,
                                  P_Wght_Val_Srvc         In  Number                   , 
	                              P_Remove_Wght_Dgt       In  Number                   ,
	                              P_Incld_Itm_Unt         In  Number Default 0         ,
	                              P_Itm_Code              Out Ias_Itm_Mst.I_Code%Type  ,
	                              P_Itm_Qty               Out Number                   ,
	                              P_Itm_Unt               Out Ias_Itm_Dtl.Itm_Unt%Type ,
                                  P_Wght_Srvc_Itm_Price   Out Number) ;  
                                  
Function Chk_Altrntv_Grp_Qty_Lmt (P_Rol_Type  In Number,-- 1- Max -2- Min
                                  P_Grp_No    In Ias_Alternative_Group.Group_No%Type,
                                  P_In_Qty    In Number
                                 ) Return Number; 

Function Get_GTIN_Code (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Varchar2;
 
Function Get_HSN_Code (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Varchar2 ;

Function Get_Itm_Code_By_Barcode (P_Barcode   In Ias_Itm_Dtl.Barcode%Type , P_Use_One_Barcode_For_Itm In Ias_Para_Inv.Use_One_Barcode_For_Itm%Type) Return Varchar2 ;

Function Get_Itm_Code_By_Vndr_I_Code (P_Vndr_I_Code   In Ias_Itm_Mst.Vndr_I_Code%Type ) Return Varchar2 ;
  
Function Get_Glbl_Msure_Code (P_Measure_Code In Measurement.Measure_Code%Type ) Return Varchar2 ;
 
Function GET_ICODE_BY_VNDR_ICODE (P_Vndr_I_Code In Ias_Itm_Mst.Vndr_I_Code%Type,P_V_Code In V_DETAILS.V_Code%Type ) Return Ias_Itm_Mst.Vndr_I_Code%Type;   
 
Function GET_VNDR_ICODE (P_I_Code In Ias_Itm_Mst.I_Code%Type,P_V_Code In V_DETAILS.V_Code%Type ) Return Ias_Itm_Mst.I_Code%Type;  
 
End  IAS_ITM_PKG;
/
CREATE PACKAGE IAS_MEASURMENTS_PKG AS
/******************************************************************************
   NAME:       IAS_AR_MEASURMENTS
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        08/11/2010             1. Created this package.
******************************************************************************/
FUNCTION Calc_Sales_Cst_Amt(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
FUNCTION Calc_Sales_Cst_Qty(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
FUNCTION Calc_Net_Sales_Cst_Amt(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
FUNCTION Calc_Net_Sales_Cst_Qty(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
FUNCTION Calc_Net_Sales_Cst_Mnth(CCode Varchar2,FDate Date,TDate Date) RETURN Number;
FUNCTION Calc_Rec_Cst (CCode Varchar2 , FDate Date , TDate Date) RETURN Number;
FUNCTION Calc_Stk_Cost  (CCode Varchar2,FDate Date,TDate Date) RETURN Number;
Function Dr_Rate(Local_Cur Varchar2,Cc_Code Varchar2,C_Code Varchar2,A_Cy Varchar2,Fdate Date,Tdate Date) Return Number ;
FUNCTION Get_Sale_Day_Avg (CCode Varchar2 , FDate Date , TDate Date) RETURN Number;
FUNCTION Calc_Rt_Sales_Cst_Percentage(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
END IAS_MEASURMENTS_PKG;
/
CREATE PACKAGE Ias_Mnd_CshBnk_Pkg IS
v_lang_no           NUMBER;
PROCEDURE Chk_CshBnk_Cnfrm (P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
--=============================================
PROCEDURE Fill_Cash_No  (   P_lang_no   In  NUMBER      Default 1   ,
                            P_doc_type  In  NUMBER      Default Null,
                            P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
--=============================================
PROCEDURE Fill_Bank_No  (   P_lang_no   In  NUMBER      Default 1   ,
                            P_doc_type  In  NUMBER      Default Null,
                            P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
--=============================================
PROCEDURE Update_CshBnk ; 
END Ias_Mnd_CshBnk_Pkg;
/
CREATE PACKAGE Ias_Mnd_CstTrns_Pkg IS
v_lang_no           NUMBER;
v_Post_Cheque_Type  NUMBER;
PROCEDURE Chk_CstTrns_Prc (P_DocType In NUMBER Default Null);
PROCEDURE Get_Para(P_lang_no In NUMBER);
PROCEDURE Chk_C_code_Null ( P_lang_no  In NUMBER Default 1,
                            P_doc_type In NUMBER Default Null,
                            P_Doc_Post In NUMBER Default 0,
                            P_Ret_Val  In Out NUMBER,
                            F_Date     In Date Default ias_gen_pkg.get_frst_day,
                            T_Date     In Date Default ias_gen_pkg.get_final_day );
PROCEDURE Chk_CstCode_Prc ( P_Doc_Type  In NUMBER Default Null,
                            P_Doc_Post  In NUMBER Default 0,
                            P_Err_No    In Out NUMBER) ;

END Ias_Mnd_CstTrns_Pkg;
/
CREATE PACKAGE Ias_Mnd_CstVnd_Pkg IS

v_lang_no       NUMBER;
V_Ap_Type       Number(1)   :=  IAS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_AP' ,'nvl(AP_AC_LINK_TYPE,0)'    ,' Where 1=1 ');
V_Ar_Type       Number(1)   :=  IAS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_AR' ,'nvl(AR_AC_LINK_TYPE,0)'    ,' Where 1=1 ');

--=============================================
PROCEDURE Chk_Cust_Cnfrm (  P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
--=============================================
PROCEDURE Chk_Vndr_Cnfrm (  P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
--=============================================
PROCEDURE Fill_Cust_No  (   P_doc_type  In  NUMBER      Default Null,
                            P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
--=============================================
PROCEDURE Fill_Vndr_No  (   P_doc_type  In  NUMBER      Default Null,
                            P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
--=============================================
PROCEDURE Chk_Update_Cust ; 
--=============================================
PROCEDURE Chk_Fill_Cst_Vnd( P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
--=============================================
PROCEDURE Ac_Fill_Cst_Vnd( 	P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) ;
END Ias_Mnd_CstVnd_Pkg;
/
CREATE PACKAGE  Ias_Mnd_VndTrns_Pkg IS
v_lang_no          NUMBER;
v_Post_Cheque_Type NUMBER;
PROCEDURE Chk_VndTrns_Prc (P_DocType In NUMBER Default Null);
PROCEDURE Get_Para (P_lang_no In NUMBER);
PROCEDURE Chk_V_code_Null ( P_lang_no  In NUMBER Default 1,
                            P_doc_type In NUMBER Default Null,
                            P_Doc_Post In NUMBER Default 0,
                            P_Ret_Val  In Out NUMBER );
END Ias_Mnd_VndTrns_Pkg;
/
CREATE PACKAGE IAS_MOBILE_PI_PKG IS
G_PR_NO     P_REQUEST.PR_NO%TYPE ;
G_PR_SER    P_REQUEST.PR_SER%TYPE ;
G_PR_TYPE   P_REQUEST.PR_TYPE%Type ; 
G_CMP_NO    P_REQUEST.CMP_NO%TYPE ;
G_BRN_NO    P_REQUEST.BRN_NO%TYPE ;
G_BRN_YEAR  P_REQUEST.BRN_YEAR%Type ;
G_BRN_USR   P_REQUEST.BRN_USR%Type ;
G_W_CODE    P_REQUEST.W_CODE%Type ;
G_AP_WC_TYPE  IAS_PARA_AP.AP_WC_TYPE%Type ; 
--##------------------------------------------------------------------------------------------------------------------------------##--
FUNCTION  GET_BRN_XML     ( P_USR_NO  In Number
                           ,P_LNG_NO IN NUMBER DEFAULT 1 ) RETURN CLOB   ;
--##------------------------------------------------------------------------------------------------------------------------------##--                           
FUNCTION  GET_PREQ_TYPES_XML     ( P_USR_NO  In Number
                                  ,P_LNG_NO IN NUMBER DEFAULT 1 ) RETURN CLOB   ;  
--##------------------------------------------------------------------------------------------------------------------------------##--                           
FUNCTION  GET_W_Code_XML     ( P_USR_NO  In Number
                              ,P_LNG_NO IN NUMBER DEFAULT 1 ) RETURN CLOB   ;  
--##------------------------------------------------------------------------------------------------------------------------------##--                           
FUNCTION  GET_I_Code_XML     ( P_USR_NO  In Number
                              ,P_LNG_NO IN NUMBER DEFAULT 1
                              ,P_I_CODE IN VARCHAR2 DEFAULT Null
                              ,P_I_NAME IN VARCHAR2 DEFAULT Null ) RETURN CLOB   ;  
--##------------------------------------------------------------------------------------------------------------------------------##--                           
FUNCTION  GET_V_Code_XML     ( P_USR_NO  In Number
                              ,P_LNG_NO IN NUMBER DEFAULT 1
                              ,P_SEARCH IN VARCHAR2 DEFAULT Null) RETURN CLOB   ;     
--##------------------------------------------------------------------------------------------------------------------------------##--                           
FUNCTION  GET_AvlQty     ( P_I_CODE IN VARCHAR2 DEFAULT Null
                           ,P_SIZE IN NUMBER DEFAULT 1
                           ,P_W_CODE  In Number) RETURN NUMBER   ;   
--##------------------------------------------------------------------------------------------------------------------------------##--                                
FUNCTION GET_Request_Number(P_Brn_No    In  S_Brn.Brn_No%Type                   ,
                            P_Preq_Type In  P_Request.Pr_Type%Type) Return Number ;     
--##------------------------------------------------------------------------------------------------------------------------------##--                                                                               
PROCEDURE INSRT_P_REQUEST_PRC(   P_XML in       CLOB,                       
                                 P_JSON_RSLT          OUT VARCHAR    ) ;                                                                                                          
--##------------------------------------------------------------------------------------------------------------------------------##-- 
PROCEDURE INSRT_P_REQUEST_MST(       P_PR_TYPE            IN P_REQUEST.PR_TYPE%TYPE           DEFAULT NULL
                                    ,P_PR_DATE            IN P_REQUEST.PR_DATE%TYPE           DEFAULT NULL        
                                    ,P_W_CODE             IN P_REQUEST.W_CODE%TYPE            DEFAULT NULL             
                                    ,P_PR_DESC            IN P_REQUEST.PR_DESC%TYPE           DEFAULT NULL                
                                    ,P_SIDE_REQ           IN P_REQUEST.SIDE_REQ%TYPE          DEFAULT NULL        
                                    ,P_REQ_AVL_DATE       IN P_REQUEST.REQ_AVL_DATE%TYPE      DEFAULT NULL 
                                    ,P_REF_NO             IN P_REQUEST.REF_NO%TYPE            DEFAULT NULL       
                                    ,P_V_CODE             IN P_REQUEST.V_CODE%TYPE            DEFAULT NULL 
                                    ,P_AD_U_ID            IN P_REQUEST.AD_U_ID%TYPE           DEFAULT NULL        
                                    ,P_AD_DATE            IN P_REQUEST.AD_DATE%TYPE           DEFAULT NULL             
                                    ,P_CMP_NO             IN P_REQUEST.CMP_NO%TYPE            DEFAULT NULL                
                                    ,P_BRN_NO             IN P_REQUEST.BRN_NO%TYPE            DEFAULT NULL        
                                    ,P_BRN_YEAR           IN P_REQUEST.BRN_YEAR%TYPE          DEFAULT NULL 
                                    ,P_BRN_USR            IN P_REQUEST.BRN_USR%TYPE           DEFAULT NULL       
                                    ,P_AD_TRMNL_NM        IN P_REQUEST.AD_TRMNL_NM%TYPE       DEFAULT NULL     );
--##------------------------------------------------------------------------------------------------------------------------------##--   
PROCEDURE INSRT_P_REQUEST_DTL(       P_I_CODE           IN P_REQUEST_DETAIL.I_CODE%TYPE            DEFAULT NULL
                                    ,P_ITM_UNT          IN P_REQUEST_DETAIL.ITM_UNT%TYPE           DEFAULT NULL        
                                    ,P_P_SIZE           IN P_REQUEST_DETAIL.P_SIZE%TYPE            DEFAULT NULL             
                                    ,P_W_CODE           IN P_REQUEST_DETAIL.W_CODE%TYPE            DEFAULT NULL                
                                    ,P_I_QTY            IN P_REQUEST_DETAIL.I_QTY%TYPE             DEFAULT NULL        
                                    ,P_I_PRICE          IN P_REQUEST_DETAIL.I_PRICE%TYPE           DEFAULT NULL 
                                    ,P_AVL_QTY          IN P_REQUEST_DETAIL.AVL_QTY%TYPE           DEFAULT NULL       
                                    ,P_RCRD_NO          IN P_REQUEST_DETAIL.RCRD_NO%TYPE           DEFAULT NULL 
                                    ,P_CMP_NO           IN P_REQUEST_DETAIL.CMP_NO%TYPE            DEFAULT NULL 
                                    ,P_BRN_NO           IN P_REQUEST_DETAIL.BRN_NO%TYPE            DEFAULT NULL       
                                    ,P_BRN_YEAR         IN P_REQUEST_DETAIL.BRN_YEAR%TYPE          DEFAULT NULL 
                                    ,P_BRN_USR          IN P_REQUEST_DETAIL.BRN_USR%TYPE           DEFAULT NULL  );
--##------------------------------------------------------------------------------------------------------------------------------##--                           
END IAS_MOBILE_PI_PKG;
/
CREATE PACKAGE IAS_ONLINE_PKG AS
 G_DOC_NO                  SALES_ORDER.ORDER_NO%TYPE; 
 G_DOC_SER                 SALES_ORDER.ORDER_SER%TYPE; 
 G_CMP_NO                  SALES_ORDER.CMP_NO%TYPE;
 G_BRN_NO                  SALES_ORDER.BRN_NO%TYPE;
 G_BRN_YEAR                SALES_ORDER.BRN_YEAR%TYPE;
 G_BRN_USR                 SALES_ORDER.BRN_USR%TYPE;
 G_CUR_CODE                EX_RATE.CUR_CODE%TYPE;
 G_EMP_NO                  S_EMP.EMP_NO%TYPE;
 G_W_CODE                  WAREHOUSE_DETAILS.W_CODE%TYPE;
 G_CC_CODE                 COST_CENTERS.CC_CODE%TYPE;
 G_PJ_NO                   IAS_PROJECTS.PJ_NO%TYPE;
 G_ACTV_NO                 IAS_ACTVTY.ACTV_NO%TYPE;
 G_SO_TYPE                 SALES_ORDER.SO_TYPE%TYPE;
 G_SO_DSC                  SALES_ORDER.A_DESC%TYPE;
 G_CLC_TYP_NO_TAX          SALES_ORDER.CLC_TYP_NO_TAX%TYPE;
 G_SO_EXPIRE_AFTR_DAY      NUMBER;
 G_U_ID                    USER_R.U_ID%TYPE;
 G_NO_OF_DECIMAL_AR        NUMBER;
 G_CALC_VAT_AMT_TYPE       NUMBER;
 G_USE_PRICE_INCLUDE_VAT   NUMBER;
 G_RCRD_NO                 NUMBER:=0;
 G_CLC_TAX_DSCNT2          NUMBER:=0;
 G_CLC_TAX_DSCNT3          NUMBER:=0;
 G_AUTO_APPROVD            IAS_PARA_ONLINE.AUTO_APPROVD%TYPE;
 G_RSRVD_PRD_DAY           IAS_PARA_ONLINE.RSRVD_PRD_DAY%TYPE;
 G_CONN_WC_MTHD            IAS_PARA_ONLINE.CONN_WC_MTHD%TYPE;
 G_SC_NO                   SALES_CHARGES.SC_NO%TYPE;
 G_BANK_NO                 CASH_AT_BANK.BANK_NO%TYPE;
 G_C_CODE                  CUSTOMER.C_CODE%TYPE;
 G_REP_CODE                SALES_MAN.REPRS_CODE%TYPE;
 G_COL_NO                  COLLERCTOR.COL_NO%TYPE; 
 G_BILL_DOC_TYPE           SALES_ORDER.BILL_DOC_TYPE%TYPE;
 G_LEV_NO                  ORDER_DETAIL.LEV_NO%TYPE;
 
 PROCEDURE GET_PARA  ( P_BRN_NO       IN SALES_ORDER.BRN_NO%TYPE      DEFAULT NULL,
                       P_W_CODE       IN SALES_ORDER.W_CODE%TYPE      DEFAULT NULL,
                       P_SHO_SYS_TYP  IN SALES_ORDER.SHO_SYS_TYP%TYPE  DEFAULT NULL) ;
 FUNCTION GET_DOC_TYP_SERIAL (P_DOC_TYP In NUMBER) RETURN NUMBER ;
 
 FUNCTION GET_DOC_NO  (  P_DOC_TYP      IN NUMBER,
                         P_DOC_SRL_TYP  IN NUMBER         DEFAULT NULL,
                         P_BRN_YEAR     IN NUMBER,
                         P_BRN_NO       IN S_BRN.BRN_NO%TYPE,
                         P_TYP_NO       IN NUMBER          DEFAULT NULL ) RETURN NUMBER;

 FUNCTION GET_DOC_SER (  P_DOC_TYP      IN NUMBER,
                         P_DOC_SRL_TYP  IN NUMBER         DEFAULT NULL,
                         P_BRN_YEAR     IN NUMBER,
                         P_BRN_NO       IN S_BRN.BRN_NO%TYPE,
                         P_TYP_NO       IN NUMBER          DEFAULT NULL,
                         P_DOC_NO       IN NUMBER ) RETURN NUMBER;

 PROCEDURE INSRT_SAL_ORDR_MST ( P_ORDER_NO        IN OUT SALES_ORDER.ORDER_NO%TYPE,
                                  P_ORDER_SER       IN OUT SALES_ORDER.ORDER_SER%TYPE,
                                  P_ORDER_DATE      IN SALES_ORDER.ORDER_DATE%TYPE DEFAULT NULL,
                                  P_C_CODE          IN CUSTOMER.C_CODE%TYPE,
                                P_C_CODE_NM       IN CUSTOMER.C_A_NAME%TYPE,
                                P_BILL_DOC_TYPE   IN SALES_ORDER.BILL_DOC_TYPE%TYPE   DEFAULT NULL,
                                P_BILL_DUE_DATE   IN SALES_ORDER.BILL_DUE_DATE%TYPE   DEFAULT NULL,
                                P_CHEQUE_DUE_DATE IN SALES_ORDER.CHEQUE_DUE_DATE%TYPE DEFAULT NULL,
                                P_CASH_NO         IN SALES_ORDER.CASH_NO%TYPE         DEFAULT NULL,
                                P_CSTMR_TYP       IN NUMBER,
                                P_BRN_YEAR        IN SALES_ORDER.BRN_YEAR%TYPE,
                                P_BRN_USR         IN SALES_ORDER.BRN_USR%TYPE,
                                P_BRN_NO          IN SALES_ORDER.BRN_NO%TYPE          DEFAULT NULL,
                                P_W_CODE          IN SALES_ORDER.W_CODE%TYPE          DEFAULT NULL,
                                P_EMP_NO          IN SALES_ORDER.EMP_NO%TYPE          DEFAULT NULL,
                                P_C_ADDRESS       IN SALES_ORDER.C_ADDRESS %TYPE,
                                P_C_MOBILE        IN SALES_ORDER.C_MOBILE%TYPE,
                                P_REF_DOC_NO      IN SALES_ORDER.REF_DOC_NO%TYPE DEFAULT NULL,
                                P_A_DESC          IN SALES_ORDER.A_DESC%TYPE DEFAULT NULL,
                                P_NT_TRANSFR_PATH IN SALES_ORDER.NT_TRANSFR_PATH%TYPE,
                                P_LATITUDE        IN SALES_ORDER.LATITUDE%TYPE,
                                P_LONGITUDE       IN SALES_ORDER.LONGITUDE %TYPE,
                                P_DOC_AMT         IN SALES_ORDER.ORDER_AMT%TYPE       DEFAULT 0,
                                P_DISC_AMT_MST    IN SALES_ORDER.DISC_AMT%TYPE        DEFAULT 0,
                                P_DISC_AMT_DTL    IN SALES_ORDER.DISC_AMT%TYPE        DEFAULT 0,
                                P_VAT_AMT         IN SALES_ORDER.VAT_AMT%TYPE         DEFAULT 0,
                                P_OTHR_AMT        IN SALES_ORDER.OTHR_AMT%TYPE        DEFAULT 0,
                                P_PRCSSD          IN OUT SALES_ORDER.PROCESED%TYPE,-- P_PRCSSD = 0-NOT USED , 1-USED , 2-NOT FOUND                                
                                P_AD_TRMNL_NM     IN SALES_ORDER.AD_TRMNL_NM%TYPE     DEFAULT NULL,
                                P_CR_CARD_NO      IN SALES_ORDER.CR_CARD_NO%TYPE      DEFAULT NULL,
                                P_DISC_AMT_AFTR_VAT IN SALES_ORDER.DISC_AMT_AFTR_VAT%TYPE      DEFAULT NULL,
                                P_R_CODE          IN SALES_ORDER.R_CODE%TYPE          DEFAULT NULL,
                                P_C_CODE_CSH      IN IAS_CASH_CUSTMR.CUST_CODE%TYPE,
                                P_DRIVER_NO       IN SALES_ORDER.DRIVER_NO%TYPE DEFAULT NULL,
                                P_INACTIVE        IN SALES_ORDER.INACTIVE%TYPE DEFAULT NULL,
                                P_SHO_SYS_TYP     IN SALES_ORDER.SHO_SYS_TYP%TYPE  DEFAULT NULL
                                );    
 
 PROCEDURE INSRT_SAL_ORDR_DTL ( P_I_CODE        IN IAS_ITM_MST.I_CODE%TYPE,
                                P_ITM_UNT       IN ORDER_DETAIL.ITM_UNT%TYPE,
                                P_I_QTY         IN NUMBER,
                                P_FREE_QTY      IN NUMBER         DEFAULT 0,
                                P_I_PRICE       IN NUMBER,
                                P_DIS_PER       IN NUMBER         DEFAULT NULL,
                                P_DIS_AMT_DTL   IN NUMBER         DEFAULT 0,
                                P_DIS_AMT_DTL2  IN NUMBER         DEFAULT 0,
                                P_DIS_AMT_DTL3  IN NUMBER         DEFAULT 0,
                                P_DIS_AMT_MST   IN NUMBER         DEFAULT 0,
                                P_VAT_PER       IN NUMBER         DEFAULT NULL,
                                P_VAT_AMT       IN NUMBER         DEFAULT NULL,
                                P_OTHR_AMT      IN NUMBER         DEFAULT 0,
                                P_W_CODE        IN SALES_ORDER.W_CODE%TYPE          DEFAULT NULL,
                                P_EXPIRE_DATE   IN ORDER_DETAIL.EXPIRE_DATE%TYPE    DEFAULT NULL,
                                P_BATCH_NO      IN ORDER_DETAIL.BATCH_NO%TYPE       DEFAULT NULL,
                                P_SUB_C_CODE    IN ORDER_DETAIL.SUB_C_CODE%TYPE      DEFAULT NULL,
                                P_DIS_AMT_AFTR_VAT IN ORDER_DETAIL.DIS_AMT_AFTR_VAT%TYPE      DEFAULT NULL                                
                                 );                              

 PROCEDURE INSRT_OTHR_CHRGS_SAL_ORDR ( P_BILL_DOC_TYPE   IN SALES_ORDER.BILL_DOC_TYPE%TYPE,
                                       P_DOC_AMT         IN SALES_ORDER.ORDER_AMT%TYPE    DEFAULT 0,
                                       P_OTHR_AMT        IN SALES_ORDER.OTHR_AMT%TYPE) ;
 PROCEDURE INSRT_TAX_MOVMNT;
 PROCEDURE INSRT_RSRVD_TBL ;

 PROCEDURE INSRT_ARCHV_TBL ( P_FILE_DESC IN IAS_ARCHIVES_MST.FILE_DESC%TYPE , P_FILE_NM1 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE ,P_FILE_NM2 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE DEFAULT NULL,P_FILE_NM3 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE DEFAULT NULL);

 PROCEDURE INSRT_PRPRTN_SAL_ORDR_MST (  P_DOC_NO_REF      IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_NO_REF%TYPE,
                                            P_DOC_SER_REF     IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_SER_REF%TYPE,
                                            P_REF_NO          IN IAS_CHK_DOC_INOUT_QTY_MST.REF_NO%TYPE,
                                          P_DOC_DSC         IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_DSC%TYPE,
                                            P_BRN_YEAR        IN IAS_CHK_DOC_INOUT_QTY_MST.BRN_YEAR%TYPE,
                                            P_BRN_USR         IN IAS_CHK_DOC_INOUT_QTY_MST.BRN_USR%TYPE,
                                            P_BRN_NO          IN IAS_CHK_DOC_INOUT_QTY_MST.BRN_NO%TYPE   DEFAULT NULL,
                                            P_AD_TRMNL_NM     IN SALES_ORDER.AD_TRMNL_NM%TYPE     DEFAULT NULL) ;
                                            
 PROCEDURE INSRT_PRPRTN_SAL_ORDR_DTL (  P_DOC_NO_REF    IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_NO_REF%TYPE,
                                        P_DOC_SER_REF   IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_SER_REF%TYPE,
                                        P_I_CODE        IN IAS_ITM_MST.I_CODE%TYPE,
                                        P_ITM_UNT       IN IAS_ITM_DTL.ITM_UNT%TYPE,                                        
                                        P_EXPIRE_DATE   IN IAS_CHK_DOC_INOUT_QTY_DTL.EXPIRE_DATE%TYPE DEFAULT NULL,
                                        P_BATCH_NO      IN IAS_CHK_DOC_INOUT_QTY_DTL.BATCH_NO%TYPE DEFAULT NULL,
                                        P_I_QTY         IN IAS_CHK_DOC_INOUT_QTY_DTL.I_QTY%TYPE,
                                        P_BARCODE       IN IAS_CHK_DOC_INOUT_QTY_DTL.BARCODE%TYPE,
                                        P_W_CODE        IN IAS_CHK_DOC_INOUT_QTY_DTL.W_CODE%TYPE,
                                        P_RCRD_NO_REF   IN IAS_CHK_DOC_INOUT_QTY_DTL.W_CODE%TYPE                               
                                         ) ; 

 
 FUNCTION GET_SAL_ORDR_STAT ( P_ORDER_NO   IN SALES_ORDER.ORDER_NO%TYPE,
                                P_ORDER_SER  IN SALES_ORDER.ORDER_SER%TYPE) RETURN NUMBER ;

  FUNCTION GET_ICODE_AVLQTY ( P_ICODE   IN   IAS_ITM_MST.I_CODE%TYPE,
                              P_PSIZE   IN   NUMBER,
                              P_WCODE   IN   WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NULL,
                              P_BRN_NO  IN   S_BRN.BRN_NO%TYPE  DEFAULT NULL,
                              P_TDATE   IN   DATE     DEFAULT NULL ) RETURN NUMBER;                              
  FUNCTION GET_SYS_GUID RETURN VARCHAR2;
  FUNCTION CHK_UPD_ITM ( P_I_CODE      IN IAS_ITM_MST.I_CODE%TYPE ,
                         P_W_CODE      IN WAREHOUSE_DETAILS.W_CODE%TYPE) RETURN NUMBER;
  FUNCTION CALL_API_UPD ( P_I_CODE    IN  IAS_ITM_MST.I_CODE%TYPE ,
                        P_W_CODE    IN  WAREHOUSE_DETAILS.W_CODE%TYPE) RETURN VARCHAR2;
End IAS_ONLINE_PKG;
/
CREATE PACKAGE IAS_PJ_Pkg as
 FUNCTION Get_PJ_Name(P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_PJ_Sub (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER;
 FUNCTION Get_Grp_PJ_Name (P_Grp_No In IAS_PROJECTS_GROUP.GROUP_NO%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Check_Ac_PJ (P_a_code In ACCOUNT.A_CODE%TYPE,P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER ;
 FUNCTION Get_PJ_S_M (P_PJ_S_M In IAS_PROJECTS.PJ_SUB%TYPE) RETURN Number ;
 FUNCTION Check_Use_Actv	(P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER ;
 FUNCTION Check_Pj_Actv (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE,P_Actv_No In IAS_ACTVTY.ACTV_NO%TYPE) RETURN NUMBER ; 
 FUNCTION Get_One_Pj_Actv (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE,P_Usr_no In NUMBER) RETURN VARCHAR2 ;
 FUNCTION Get_One_CC_Pj (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN VARCHAR2 ;
 PROCEDURE Chk_Pj_No ( P_Pj_No      In IAS_PROJECTS.PJ_NO%TYPE,
	                      P_Lng_No     In LANG_DEF.LANG_NO%TYPE,
	                      P_Usr_No     In USER_R.U_ID%TYPE,
	                      P_Scr_Typ    In NUMBER DEFAULT 1,
	                      P_Doc_Date   In DATE   DEFAULT NULL,
	                      P_A_CODE     In ACCOUNT.A_CODE%TYPE  DEFAULT NULL,
	                      P_CC_CODE    In COST_CENTERS.CC_CODE%TYPE     DEFAULT NULL,
	                      P_ACTV_NO    In IAS_ACTVTY.ACTV_CODE%TYPE  DEFAULT NULL,
	                      P_Pj_Nm      In Out IAS_PROJECTS.PJ_A_NAME%TYPE,
	                      P_Msg_No     In Out NUMBER  ) ;
End IAS_PJ_Pkg;
/
CREATE Package IAS_POSTING_AP_PKG Is
		V_Item_Posting_Flag      NUMBER(1);
		v_curr_bal  				     NUMBER;
		V_Lang_No   				     Pls_Integer;
		V_User_No   				     Pls_Integer;
		v_local_cur 				     VarChar2(7);
		v_stk_cur                VarChar2(7);
		v_stk_rate               Pls_Integer;
		v_cc_avail               Pls_Integer;
		v_Use_Audit_Doc          NUMBER(1);
		v_pur_disc               NUMBER(1);
		V_Disc_Amt_Not_Effect_Ac VarChar2(30);
		v_Ap_Cs_Type             NUMBER(1);
		v_Ap_Pj_Type             NUMBER(1);
		v_Ap_Actv_Type           NUMBER(1);
		V_USE_VAT_PROFIT         NUMBER(1);
		v_use_vat                NUMBER(1);
		v_pur_free_qty_cost      NUMBER(1);
		v_cc_code                Cost_Centers.Cc_Code%Type ;
		V_Pj_No                  Ias_Projects.Pj_No%Type   ;
		V_Actv_No                Ias_Actvty.Actv_No%Type   ;
		V_VAT_PROFIT_PER         Number;
		V_MIN_PROFIT_AMT         Number;
		V_USE_BALANCED_CC        NUMBER (1):=0;
		V_USE_BALANCED_BRN       NUMBER (1):=0;
		v_v_code                 VarChar2(30);
		V_Post_Add_Disc_Itm_Type Number;
		v_a_code                 VarChar2(30);
		V_TAX_DUE_A_CODE         VarChar2(30); 
		V_Pur_Incm_A_Code        VarChar2(30); 
		V_Ac_Dtl_Typ             NUMBER(2)   ;
		V_Ac_Code_Dtl            VarChar2(30);    
		v_doc_desc               VarChar2(250);
		v_vat_ac                 VarChar2(30);
		v_loss_ofg_ac            VarChar2(30);
		V_CC_POST                PLS_INTEGER;
		V_PJ_POST                PLS_INTEGER;
		V_ACTV_POST              PLS_INTEGER; 

--======================================================================
Procedure Get_Para ( P_Lang_no 	 In Pls_Integer 	Default 1	,
										 P_User_No 	 In Pls_Integer						,
                     P_Post_Type In NUMBER    	 	Default 0	);

--=======================================================================   
Procedure Get_Interface_Ac(P_Brn_no     	 In NUMBER 	) ;
--=======================================================================
Procedure Post_Local_Purchase 	( P_doc_ser	In NUMBER,P_Post_type	In NUMBER Default 0,P_Brn_no In NUMBER Default Null,P_Ad_U_Id  In NUMBER 	 Default Null);
--======================================================================
Procedure Post_Service_Purchase ( P_doc_ser	In NUMBER,P_Post_type	In NUMBER Default 0,P_Brn_no In NUMBER Default Null,P_Ad_U_Id  In NUMBER 	 Default Null);
--======================================================================
Procedure Post_Foreign_Purchase ( P_doc_ser	 In NUMBER,P_Post_type In NUMBER Default 0,
                                  P_Brn_no   In NUMBER Default Null,P_Ad_U_Id In NUMBER 	 Default Null,
                                  P_G_Ser	 In  Number Default Null,
                                  P_pur_type In  Number Default Null);                                  
--======================================================================
Procedure Post_Purchase_Cnct_Income 	( P_doc_ser	In NUMBER,P_Post_type	In NUMBER Default 0,P_Brn_no In NUMBER Default Null,P_Ad_U_Id  In NUMBER 	 Default Null);                 
--======================================================================
Procedure Post_Purchase_Add_Disc  ( 
                                P_f_doc_no      In NUMBER   Default Null
                                ,P_t_doc_no     In NUMBER   Default Null
                                ,P_f_doc_date   In Date     Default Null
                                ,P_t_doc_date   In Date     Default Null
                                ,P_doc_ser      In NUMBER   Default Null
                                ,P_jv_type      In NUMBER   Default Null
                                ,P_Wcode	      In NUMBER   Default Null
                                ,P_Cc_code      In VarChar2 Default Null
                                ,P_Cashno       In NUMBER   Default Null
                                ,P_Brn_no       In NUMBER   Default Null
                                ,P_Ad_U_Id       In NUMBER 	 Default Null
                                ,P_Post_type    In NUMBER   Default 0);
--======================================================================
Procedure Post_Purchase_Return( P_f_doc_no      In NUMBER   Default Null
															 ,P_t_doc_no      In NUMBER   Default Null
															 ,P_f_doc_date    In Date     Default Null
															 ,P_t_doc_date    In Date     Default Null
															 ,P_doc_ser	      In NUMBER   Default Null
															 ,P_jv_type	      In NUMBER   Default Null
															 ,P_Wcode		 			In NUMBER   Default Null
															 ,P_Cc_code	      In VarChar2 Default Null
															 ,P_Cashno		 	  In NUMBER   Default Null
					                		 ,P_Brn_no     	 	In NUMBER 	Default Null
					                		 ,P_Ad_U_Id       In NUMBER 	 Default Null
											         ,P_Post_type		  In NUMBER   Default 0);

--======================================================================    
Procedure Post_Purchase ( P_f_doc_no      In NUMBER   Default Null
												 ,P_t_doc_no      In NUMBER   Default Null
												 ,P_f_doc_date    In Date     Default Null
												 ,P_t_doc_date    In Date     Default Null
												 ,P_doc_ser	      In NUMBER   Default Null
												 ,P_jv_type	      In NUMBER   Default Null
                         ,P_G_Ser         In NUMBER   Default Null
												 ,P_pur_type	    In NUMBER   Default Null
												 ,P_Wcode		      In NUMBER   Default Null
												 ,P_Cc_code	      In VarChar2 Default Null
												 ,P_Cashno		    In NUMBER   Default Null
	                			 ,P_Brn_no     	 In NUMBER 	 Default Null
	                			 ,P_Ad_U_Id       In NUMBER 	 Default Null
												 ,P_Post_type		 In NUMBER   Default 0);
--======================================================================												                                            
End IAS_POSTING_AP_PKG;
/
CREATE Package IAS_POSTING_AR_PKG Is

v_curr_bal                   NUMBER;
V_Lang_No                    Pls_Integer;
V_User_No                    Pls_Integer;
v_local_cur                  VarChar2(7);
v_stk_cur                    VarChar2(7);
v_stk_rate                    Pls_Integer;
V_Item_Posting_Flag     NUMBER(1);
v_cc_avail                    Pls_Integer;
v_use_vat            NUMBER(1);
v_use_Costing          NUMBER(1);
v_Use_out_bills        NUMBER(1);
v_a_code                      VarChar2(30);
v_Use_Audit_Doc      NUMBER(1);
V_USE_BALANCED_CC                    NUMBER (1):=0;
V_USE_BALANCED_BRN                NUMBER (1):=0;
v_si_post_disc          NUMBER(1);
v_Post_rep_comm      NUMBER(1);
v_vat_ac               VarChar2(30);
V_Vat_Pur_A_Code       VarChar2(30);
V_USE_VAT_PROFIT     NUMBER(1);
v_Ar_Cs_Type           NUMBER(1);
v_Ar_Pj_Type           NUMBER(1);
v_Ar_Actv_Type         NUMBER(1);
v_si_post_free_qty     NUMBER(1);
v_comm_a_code        VarChar2(30);
v_cc_code                   Cost_Centers.Cc_Code%Type ;
V_Pj_No                     Ias_Projects.Pj_No%Type   ;
V_Actv_No                   Ias_Actvty.Actv_No%Type   ;
V_MIN_PROFIT_AMT     Number;
V_VAT_PROFIT_PER        Number;
V_VAT_PROFIT_DEBT    VarChar2(30);
V_VAT_PROFIT_CRDT    VarChar2(30);
V_Post_Add_Disc_Itm_Type    Number;
v_doc_desc           VarChar2(250);
V_CC_POST          PLS_INTEGER;
V_PJ_POST          PLS_INTEGER;
V_ACTV_POST        PLS_INTEGER; 
V_No_Of_Dcml_Ar    Number;    
V_Shw_Itm_Comm_Per Number;
V_DLY_SALES_AC     Account.A_Code%Type ;
V_Point_Rplc_A_Code Account.A_Code%Type ;
V_Rms_Ac_Code_Hospitality Interface_Acc.Rms_Ac_Code_Hospitality%Type ;
V_Rms_Ac_Code_Itm_Damaged Interface_Acc.Rms_Ac_Code_Itm_Damaged%Type ;
V_Rms_Ac_Code_Nutrition   Interface_Acc.Rms_Ac_Code_Nutrition%Type ;
V_Frc_Diff_Disc_Aftr_Vat_Ac  Account.A_Code%Type ;
V_Use_Intrfc_Sal_Rvnu        Number:=0;
V_Clc_Tax_Advnc_Pymnt        Number:=0;
V_blnc_brn_typ               Ias_Para_Gen.blnc_brn_typ%Type:=1;
V_Use_Pj                     Number:=0;
V_Use_Actv                   Number:=0;
--======================================================================
Procedure Get_Para ( P_Lang_no 	 In Pls_Integer 	Default 1	,
										 P_User_No 	 In Pls_Integer						,
                     P_Post_Type In NUMBER    	 	Default 0	);
--======================================================================                     
Procedure Get_Interface_Ac(P_Brn_no     	 In NUMBER 	) ;                     
--======================================================================
Procedure Post_Sales (  P_f_doc_no     In NUMBER   Default Null
                       ,P_t_doc_no     In NUMBER   Default Null
                       ,P_f_doc_date   In Date     Default Null
                       ,P_t_doc_date   In Date     Default Null
                       ,P_doc_ser      In NUMBER   Default Null
                       ,P_jv_type      In NUMBER   Default Null
                       ,P_Wcode        In NUMBER   Default Null
                       ,P_Cc_code      In VARCHAR2 Default Null
                       ,P_Cashno       In NUMBER   Default Null
                       ,P_Brn_no       In NUMBER   Default Null
                       ,P_Ad_U_Id       In NUMBER  Default Null
                       ,P_Post_type    In NUMBER   Default 0);
--======================================================================
Procedure Post_Sales_Add_Disc  ( P_f_doc_no      In NUMBER   Default Null
																,P_t_doc_no      In NUMBER   Default Null
																,P_f_doc_date    In Date     Default Null
																,P_t_doc_date    In Date     Default Null
																,P_doc_ser	     In NUMBER   Default Null
																,P_jv_type	     In NUMBER   Default Null
																,P_Wcode		 	   In NUMBER   Default Null
																,P_Cc_code	     In VarChar2 Default Null
																,P_Cashno				 In NUMBER   Default Null
					                			,P_Brn_no     	 In NUMBER 	 Default Null
					                			,P_Ad_U_Id       In NUMBER 	 Default Null
																,P_Post_type		 In NUMBER   Default 0);
--======================================================================
Procedure Post_Rt_Sales( P_f_doc_no      In NUMBER   Default Null
												,P_t_doc_no      In NUMBER   Default Null
												,P_f_doc_date    In Date     Default Null
												,P_t_doc_date    In Date     Default Null
												,P_doc_ser	     In NUMBER   Default Null
												,P_jv_type	     In NUMBER   Default Null
												,P_Wcode		 		 In NUMBER   Default Null
												,P_Cc_code	     In VarChar2 Default Null
												,P_Cashno		 		 In NUMBER   Default Null
	                			,P_Brn_no     	 In NUMBER 	 Default Null
	                			,P_Ad_U_Id       In NUMBER 	 Default Null
												,P_Post_type		 In NUMBER   Default 0);

--======================================================================
Procedure Post_out_bills(  P_f_doc_no      In NUMBER   Default Null
													,P_t_doc_no      In NUMBER   Default Null
													,P_f_doc_date    In Date     Default Null
													,P_t_doc_date    In Date     Default Null
													,P_doc_ser	     In NUMBER   Default Null
													,P_jv_type	     In NUMBER   Default Null
													,P_Wcode		     In NUMBER   Default Null
													,P_Cc_code	     In VarChar2 Default Null
													,P_Cashno				 In NUMBER   Default Null
 		                		  ,P_Brn_no     	 	In NUMBER 	Default Null
 		                		  ,P_Ad_U_Id       In NUMBER 	 Default Null
													,P_Post_type		 In NUMBER   Default 0);
--======================================================================
Procedure Post_Ret_Rt_Bills( P_f_doc_no      In NUMBER   Default Null
														,P_t_doc_no      In NUMBER   Default Null
														,P_f_doc_date    In Date     Default Null
														,P_t_doc_date    In Date     Default Null
														,P_doc_ser	     In NUMBER   Default Null
														,P_jv_type	     In NUMBER   Default Null
														,P_Wcode		     In NUMBER   Default Null
														,P_Cc_code	     In VarChar2 Default Null
														,P_Cashno				 In NUMBER   Default Null
 			                		  ,P_Brn_no     	 	In NUMBER 	Default Null
 			                		  ,P_Ad_U_Id       In NUMBER 	 Default Null
														,P_Post_type		 In NUMBER   Default 0);
--=========================================================================                                 
Procedure Post_Sales_Due_Cr_Card   (  P_f_doc_no      In NUMBER   Default Null
                                     ,P_t_doc_no      In NUMBER   Default Null
                                     ,P_f_doc_date    In Date     Default Null
                                     ,P_t_doc_date    In Date     Default Null
                                     ,P_doc_ser       In NUMBER      Default Null
                                     ,P_jv_type       In NUMBER   Default Null
                                     ,P_Brn_no        In NUMBER   Default Null
                                     ,P_Ad_U_Id       In NUMBER 	 Default Null
                                     ,P_Post_type     In NUMBER   Default 0   ) ;
--=========================================================================                                 
PROCEDURE Post_Sales_Cpn ( P_Post_Type      In NUMBER   Default 0
                          ,P_F_Doc_No       In NUMBER   Default Null
                          ,P_T_Doc_No       In NUMBER   Default Null
                          ,P_F_Doc_Date     In DATE     Default Null
                          ,P_T_Doc_Date     In DATE     Default Null
                          ,P_doc_ser        In NUMBER   Default Null
                          ,P_Doc_Jv_Typ     In NUMBER   Default Null
                          ,P_Brn_No         In S_BRN.BRN_NO%TYPE Default Null ) ; 
--=========================================================================                                   
Procedure Post_Sales_Cmpns_Qty   (  P_f_doc_no       In NUMBER   Default Null
                                    ,P_t_doc_no      In NUMBER   Default Null
                                    ,P_f_doc_date    In DATE     Default Null
                                    ,P_t_doc_date    In DATE     Default Null
                                    ,P_doc_ser       In NUMBER   Default Null
                                    ,P_jv_type       In NUMBER   Default Null
                                    ,P_Wcode         In NUMBER   Default Null
                                    ,P_Cc_code       In VarChar2 Default Null
                                    ,P_Cashno        In NUMBER   Default Null
                                    ,P_Brn_no        In NUMBER     Default Null
                                    ,P_Ad_U_Id       In NUMBER      Default Null
                                    ,P_Post_type     In NUMBER   Default 0);
End IAS_Posting_Ar_Pkg;
/
CREATE Package IAS_POSTING_Gl_PKG Is
	--## 25.02.2021	--UPDATE POST_ BANK_ ADJUST 	Abdulfattah
	--- UPDATED 20/01/2021 Murad Al-Jarrash
	---3333333333333333333333333333333333
		v_curr_bal  				          NUMBER;
		V_Lang_No   				          Pls_Integer;
		V_User_No   				          Pls_Integer;
		v_local_cur 				          VarChar2(7);
		v_cc_avail                    Pls_Integer;
		V_USE_BALANCED_CC             NUMBER (1):=0;
		V_USE_BALANCED_BRN            NUMBER (1):=0;
		v_Use_Audit_Doc               NUMBER(1);
		v_Post_Cheq_type              NUMBER(1);
		V_Post_Cheq_Type_Vndr         NUMBER(1);
		v_pay_ltr_ac                  VarChar2(30);
		v_rec_ltr_ac                  VarChar2(30);
		v_cb_no                       CASH_IN_HAND.CASH_NO%TYPE ;
		v_ac_code_dtl                 VarChar2(30);
		v_ac_dtl_typ                  ACCOUNT.ac_dtl_typ%Type ;
		v_ac_code_dtl_Sub             VarChar2(30);
		V_ChqPayIntrm_Ac              VarChar2(30);
		V_CC_POST                     PLS_INTEGER;
		V_PJ_POST                     PLS_INTEGER;
		V_ACTV_POST                   PLS_INTEGER;
		V_POST_ACC_DSC_IN_PAY_CHQ     NUMBER (1):=0;
		V_USE_PAY_VCHR_MST_AC_PRV		  NUMBER(1):=0;
    V_USE_RCV_VCHR_MST_AC_PRV		  NUMBER(1):=0;
		v_Cnt                         NUMBER;
		V_Chq_No                      NUMBER;
		V_Pst_Sman_Comm_Vchr_Rcpt     NUMBER(1):=0;  
		V_Reprs_Comm_Ac               VarChar2(30);
		V_Reprs_Comm_dsc              VarChar2(250); 
		V_Rep_Code_Ac                 VarChar2(30); 
		V_Rep_Comm_AmtL               NUMBER;    
		V_Rep_Comm_AmtF               NUMBER;
    V_DTL_AC_CODE                 VarChar2(30); 
    V_DTL_AC_CODE_DTL             VarChar2(30); 
    V_Use_Vat                     NUMBER;
    V_USE_EXPNS_TAX               NUMBER;
 ------------------------------------------------
    Gnr_Prmtrs            ias_para_Gen%Rowtype;
    Gls_Prmtrs            ias_para_Gl%Rowtype;
    Ars_Prmtrs            ias_para_Ar%Rowtype;
    Aps_Prmtrs            ias_para_Ap%Rowtype;
    Inv_Prmtrs            ias_para_Inv%Rowtype;
    TRNS_PRVLGS           Privilege_Fixed%Rowtype;
    intrfc_Ac            Interface_Acc%Rowtype;
    -----------------------------------------------
--======================================================================
Procedure Get_Para ( P_Lang_no 	 In Pls_Integer 	Default 1	,
					 P_User_No 	 In Pls_Integer						,
                     P_Post_Type In NUMBER    	 	Default 0	);
 --------------------------------------------------------------
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
                         ,P_Usr_No      In Pls_Integer     ) ;   
--======================================================================                     
Procedure Get_Interface_Ac(P_Brn_no          In NUMBER     ) ;  
--=======================================================================  
FUNCTION Get_PST_BRN_NO(P_BRN_NO     IN NUMBER, P_DOC_BRN_NO IN NUMBER) RETURN NUMBER ;
--=======================================================================     
Function Chk_Exist_Pst_Doc (P_DOC_TYPE         	IN  NUMBER	DEFAULT NULL
                           ,P_DOC_SER          	IN  NUMBER	DEFAULT NULL
                           ,P_DOC_SEQ          	IN  NUMBER	DEFAULT NULL
                           ,P_RcRd_No          	In NUMBER   Default Null
                          ) RETURN NUMBER ;
--=======================================================================                                    
PROCEDURE Del_Prev_Post  ( P_doc_type    In  Number  
                        ,P_doc_ser       In  Number                                  
                        ,P_Rcrd_No	     In  Number  Default Null
                        ,P_Doc_Seq	     In  Number 	Default Null
                        ,P_Cheq_No       In  Number   Default Null
                        );
--=======================================================================   
 PROCEDURE Post_Doc_In_Save_Prc ( P_Doc_Typ      In NUMBER 
                                 ,P_Doc_Srl      In NUMBER
                                 ,P_Doc_Seq      In NUMBER  Default null
                                 ,P_Cheq_No	     In  Number      Default Null
                                 ,P_Rcrd_No		 In  Number      Default Null
                                 ,P_Due_Date     In  Date      	Default Null
                                 ,P_Post_Typ     In  Number      Default 0  
                                 ,P_Usr_No       In Pls_Integer
                                 ,P_Lng_no       In Pls_Integer)  ;                          
--=======================================================================   
Procedure Post_Jv( P_f_doc_no      In NUMBER   Default Null
                	,P_t_doc_no      In NUMBER   Default Null
                	,P_f_doc_date    In Date     Default Null
                	,P_t_doc_date    In Date     Default Null
                	,P_doc_ser		   In NUMBER	 Default Null
                	,P_jv_type		   In NUMBER   Default Null
                  ,P_Brn_no     	 In NUMBER 	 Default Null
                  ,P_Ad_U_Id       In NUMBER 	 Default Null
                	,P_Post_type		 In NUMBER   Default 0);
--======================================================================
Procedure Post_Rec(  P_f_doc_no      In NUMBER   Default Null
		            		,P_t_doc_no      In NUMBER   Default Null
		            		,P_f_doc_date    In Date     Default Null
		            		,P_t_doc_date    In Date     Default Null
		            		,P_doc_ser	     In NUMBER   Default Null
		            		,P_jv_type	     In NUMBER   Default Null
		            		,P_Cc_code	   	 In VarChar2 Default Null
		            		,P_Cash_No	     In NUMBER   Default Null
		                ,P_Brn_no     	 In NUMBER 	 Default Null
		                ,P_Ad_U_Id       In NUMBER 	 Default Null
		            		,P_Post_type		 In NUMBER   Default 0);
--=======================================================================
Procedure Post_Rec_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
    						,P_t_doc_no      In NUMBER   Default Null
    						,P_f_doc_date    In Date     Default Null
    						,P_t_doc_date    In Date     Default Null
    						,P_doc_ser       In NUMBER   Default Null
    						,P_jv_type       In NUMBER   Default Null
    						,P_Cc_code       In VarChar2 Default Null
    						,P_Cash_No       In NUMBER   Default Null
    						,P_A_code        In VarChar2 Default Null   					
                -------------------------------------------
                ,P_Ac_code_Dtl   In VarChar2 Default Null
                ,P_Ac_Dtl_Typ    In NUMBER   Default Null
                ,P_Ac_code_Dtl_sub   In VarChar2 Default Null
                ------------------------------------------
                ,P_Cheq_No       In NUMBER   Default Null
    						,P_RcRd_No       In NUMBER   Default Null													
    						,P_Due_date    	 In Date     Default Null
         				,P_Brn_no     	 In NUMBER 	 Default Null
         				,P_Ad_U_Id       In NUMBER 	 Default Null
         				,P_Doc_Seq     	 In NUMBER 	 Default Null
						    ,P_Post_type		 In NUMBER   Default 0) ;
--=======================================================================
Procedure Post_Pay(  P_f_doc_no      In NUMBER   Default Null
		            		,P_t_doc_no      In NUMBER   Default Null
		            		,P_f_doc_date    In Date     Default Null
		            		,P_t_doc_date    In Date     Default Null
		            		,P_doc_ser	     In NUMBER   Default Null
		            		,P_jv_type	     In NUMBER   Default Null
		            		,P_Cc_code	     In VarChar2 Default Null
		            		,P_Cash_No	     In NUMBER   Default Null
		                ,P_Brn_no     	 In NUMBER 	 Default Null
		                ,P_Ad_U_Id       In NUMBER 	 Default Null
		            		,P_Post_type		 In NUMBER   Default 0);
--======================================================================
Procedure Post_Pay_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
    						,P_t_doc_no      In NUMBER   Default Null
    						,P_f_doc_date    In Date     Default Null
    						,P_t_doc_date    In Date     Default Null
    						,P_doc_ser	   	 In NUMBER   Default Null
    						,P_jv_type	   	 In NUMBER   Default Null
    						,P_Cc_code	   	 In VarChar2 Default Null
    						,P_Cash_No	     In NUMBER   Default Null
    						,P_A_code        In VarChar2 Default Null
                -------------------------------------------
                ,P_Ac_code_Dtl   In VarChar2 Default Null
                ,P_Ac_Dtl_Typ    In NUMBER   Default Null
                ,P_Ac_code_Dtl_sub   In VarChar2 Default Null
                 ------------------------------------------       					
                ,P_Cheq_No       In NUMBER   Default Null
    						,P_RcRd_No       In NUMBER   Default Null													
    						,P_Due_date    	 In Date     Default Null
         				,P_Brn_no     	 In NUMBER 	 Default Null
         				,P_Ad_U_Id       In NUMBER 	 Default Null
         				,P_Doc_Seq     	 In NUMBER 	 Default Null
					    	,P_Post_type		 In NUMBER   Default 0);
--======================================================================
Procedure Post_Pay_bnk_Apprv( P_f_doc_no      In NUMBER   Default Null
    						,P_t_doc_no      In NUMBER   Default Null
    						,P_f_doc_date    In Date     Default Null
    						,P_t_doc_date    In Date     Default Null
    						,P_doc_ser	   	 In NUMBER   Default Null
    						,P_jv_type	   	 In NUMBER   Default Null
    						,P_Cc_code	   	 In VarChar2 Default Null
    						,P_Cash_No	     In NUMBER   Default Null
    						,P_A_code        In VarChar2 Default Null
                -------------------------------------------
                ,P_Ac_code_Dtl   In VarChar2 Default Null
                ,P_Ac_Dtl_Typ    In NUMBER   Default Null
                ,P_Ac_code_Dtl_sub   In VarChar2 Default Null
                ------------------------------------------       					
                ,P_RcRd_No       In NUMBER   Default Null													
                ,P_Due_date    	 In Date     Default Null
                ,P_Brn_no     	 In NUMBER 	 Default Null
                ,P_Ad_U_Id       In NUMBER 	 Default Null
                ,P_Doc_Seq     	 In NUMBER 	 Default Null
                ,P_Post_type		 In NUMBER   Default 0);
--======================================================================        
Procedure Post_Exch_Cur( P_f_doc_no      In NUMBER   Default Null
		                		,P_t_doc_no      In NUMBER   Default Null
		                		,P_f_doc_date    In Date     Default Null
		                		,P_t_doc_date    In Date     Default Null
		                		,P_doc_ser	     In NUMBER   Default Null
		                		,P_jv_type	     In NUMBER   Default Null
		                		,P_Cc_code	     In VarChar2 Default Null
		                		,P_AC_CODE_DTL	 In VarChar2   Default Null
		                    ,P_Brn_no     	 In NUMBER 	 Default Null
		                    ,P_Ad_U_Id       In NUMBER 	 Default Null
		                		,P_Post_type     In NUMBER   Default 0);
--======================================================================    		                		                                       
Procedure POST_BANK_ADJUST(  P_f_doc_no     In NUMBER   Default Null
                        ,P_t_doc_no     In NUMBER   Default Null
                        ,P_f_doc_date   In DATE     Default Null
                        ,P_t_doc_date   In DATE     Default Null
                        ,P_doc_ser	    In NUMBER   Default Null
                        ,P_jv_type	    In NUMBER   Default Null
                        ,P_Cc_code	    In VarChar2 Default Null
                        ,P_AC_CODE_DTL	In VarChar2   Default Null
                        ,P_Brn_no     	 In NUMBER 	Default Null
                        ,P_Ad_U_Id       In NUMBER 	 Default Null
                        ,P_Post_type		In NUMBER   Default 0) ;
--======================================================================
Procedure POST_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
                        ,P_t_doc_no     In NUMBER   Default Null
                        ,P_f_doc_date   In DATE     Default Null
                        ,P_t_doc_date   In DATE     Default Null
                        ,P_doc_ser	    In NUMBER   Default Null
                        ,P_jv_type	    In NUMBER   Default Null
                        ,P_Cc_code	    In VarChar2 Default Null
                        ,P_AC_CODE_DTL	In VarChar2   Default Null
                        ,P_Brn_no     	 In NUMBER 	Default Null
                        ,P_Ad_U_Id       In NUMBER 	 Default Null
                        ,P_Post_type		In NUMBER   Default 0);

--=======================================================================================  
Procedure POST_DUE_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
                        ,P_t_doc_no     In NUMBER   Default Null
                        ,P_f_doc_date   In DATE     Default Null
                        ,P_t_doc_date   In DATE     Default Null
                        ,P_doc_ser	    In NUMBER   Default Null
                        ,P_I_NO  	    In NUMBER   Default Null
                        ,P_doc_sq	    In NUMBER   Default Null
                        ,P_rcrd_no	    In NUMBER   Default Null
                        ,P_jv_type	    In NUMBER   Default Null
                        ,P_Cc_code	    In VarChar2 Default Null
                        ,P_AC_CODE_DTL	In VarChar2   Default Null
                        ,P_Brn_no     	 In NUMBER 	Default Null
                        ,P_Ad_U_Id       In NUMBER 	 Default Null
                        ,P_Post_type		In NUMBER   Default 0) ;         
--=======================================================================================  
PROCEDURE Post_GLS_TAX ( P_Post_Type    In NUMBER   Default 0
		                    ,P_Post_Sgnl    In NUMBER   -- (1)=Dr Or (-1)-Cr
		                    ,P_Doc_Type     In NUMBER 
		                    ,P_Doc_No       In NUMBER  
		                    ,P_Doc_Ser      In NUMBER 
		                    ,P_rcrd_no      In NUMBER 
		                    ,P_DOC_DSC      IN VARCHAR2
		                    ,P_Lang_no      In NUMBER) ;
--======================================================================
End IAS_POSTING_Gl_PKG;
/
CREATE Package IAS_POSTING_GRNT_PKG Is
v_curr_bal  				          NUMBER;
V_Lang_No   				          Pls_Integer;
V_User_No   				          Pls_Integer;
v_local_cur 				          VarChar2(7);
v_cc_avail                    Pls_Integer;
V_USE_BALANCED_CC             NUMBER (1):=0;
V_USE_BALANCED_BRN            NUMBER (1):=0;
v_Use_Audit_Doc               NUMBER(1);
v_Post_Cheq_type              NUMBER(1);
V_Post_Cheq_Type_Vndr         NUMBER(1);
v_pay_ltr_ac                  VarChar2(30);
v_rec_ltr_ac                  VarChar2(30);
--v_cb_no                       NUMBER(4);
v_cb_no                       CASH_IN_HAND.CASH_NO%TYPE ;
v_ac_code_dtl                 VarChar2(30);
v_ac_dtl_typ                  ACCOUNT.ac_dtl_typ%Type ;
V_ChqPayIntrm_Ac              Number;
V_CC_POST                     PLS_INTEGER;
V_PJ_POST                     PLS_INTEGER;
V_ACTV_POST                   PLS_INTEGER;
V_POST_ACC_DSC_IN_PAY_CHQ     NUMBER (1):=0;
v_Cnt                         NUMBER;
V_Chq_No                      NUMBER;
V_AMT                         Number;
V_AMTF                        Number;

v_a_code     			            VarChar2(30);
v_cc_code    			            Cost_Centers.Cc_Code%Type ;
V_Pj_No    			              Ias_Projects.Pj_No%Type   ;
V_Actv_No    			            Ias_Actvty.Actv_No%Type   ;
v_doc_desc                    VarChar2(250);
v_FrcNo				                NUMBER(2);

v_comm_a_code                  VarChar2(30);

--======================================================================
Procedure Get_Para ( P_Lang_no 	 In Pls_Integer 	Default 1	,
					           P_User_No 	 In Pls_Integer						,
                     P_Post_Type In NUMBER    	 	Default 0	);

--=======================================================================   
Procedure Post_Grnt( P_f_doc_no      In NUMBER   Default Null
                	,P_t_doc_no      In NUMBER   Default Null
                	,P_f_doc_date    In Date     Default Null
                	,P_t_doc_date    In Date     Default Null
                	,P_doc_ser		   In NUMBER	 Default Null
                	,P_jv_type		   In NUMBER   Default Null
                  ,P_Brn_no     	 In NUMBER 	 Default Null
                  ,P_Ad_U_Id       In NUMBER 	 Default Null
                	,P_Post_type		 In NUMBER   Default 0);
--=======================================================================   
Procedure Post_Incr_Grnt( P_f_doc_no      In NUMBER   Default Null
                	,P_t_doc_no      In NUMBER   Default Null
                	,P_f_doc_date    In Date     Default Null
                	,P_t_doc_date    In Date     Default Null
                	,P_doc_ser		   In NUMBER	 Default Null
                	,P_jv_type		   In NUMBER   Default Null
                  ,P_Brn_no     	 In NUMBER 	 Default Null
                  ,P_Ad_U_Id       In NUMBER 	 Default Null
                	,P_Post_type		 In NUMBER   Default 0);
--=======================================================================   
Procedure Post_Grnt_Cls( P_f_doc_no      In NUMBER   Default Null
                	,P_t_doc_no      In NUMBER   Default Null
                	,P_f_doc_date    In Date     Default Null
                	,P_t_doc_date    In Date     Default Null
                	,P_doc_ser		   In NUMBER	 Default Null
                	,P_jv_type		   In NUMBER   Default Null
                  ,P_Brn_no     	 In NUMBER 	 Default Null
                  ,P_Ad_U_Id       In NUMBER 	 Default Null
                	,P_Post_type		 In NUMBER   Default 0);
--======================================================================
                                            
End IAS_POSTING_GRNT_PKG;
/
CREATE Package IAS_POSTING_INV_PKG Is
v_curr_bal  				 NUMBER;
V_Lang_No   				 Pls_Integer;
V_User_No   				 Pls_Integer;
v_local_cur 				 VarChar2(7);
v_stk_cur                    VarChar2(7);
v_stk_rate                    Pls_Integer;
v_cc_avail                    Pls_Integer;
v_use_vat            NUMBER(1);
v_Use_Audit_Doc      NUMBER(1);
V_Hide_Outgoing_Ac   NUMBER(1);
V_Hide_Incoming_Ac   NUMBER(1);
V_Item_Posting_Flag  NUMBER(1);
v_Outgoing_Cs_Type   NUMBER(1);
v_Out_Pj_Type        NUMBER(1);
v_Out_Actv_Type      NUMBER(1);
v_Incoming_Cs_Type   NUMBER(1);
v_Inc_Pj_Type        NUMBER(1);
v_Inc_Actv_Type      NUMBER(1);
v_StkAdj_Cs_Type       NUMBER(1);
v_Stk_Pj_Type           NUMBER(1);
v_Stk_Actv_Type         NUMBER(1);
v_Tr_Cs_Type           NUMBER(1);
v_Tr_Pj_Type           NUMBER(1);
v_Tr_Actv_Type         NUMBER(1);
V_USE_BALANCED_CC                    NUMBER (1):=0;
V_USE_BALANCED_BRN                NUMBER (1):=0;
v_cc_code                   Cost_Centers.Cc_Code%Type ;
V_Pj_No                     Ias_Projects.Pj_No%Type   ;
V_Actv_No                   Ias_Actvty.Actv_No%Type   ;
V_USE_PRICE_WHTRNS_REC_COST   Number;
v_doc_desc           VarChar2(250);
v_vat_ac             VarChar2(30);
V_Vat_Pur_A_Code     VarChar2(30); 
V_Pur_Incm_A_Code    Varchar2(30);
v_a_code                      VarChar2(30);
V_Diff_Kit_Itm_Ac    VarChar2(30);
V_CC_POST          PLS_INTEGER;
V_PJ_POST          PLS_INTEGER;
V_ACTV_POST        PLS_INTEGER;
V_DLY_SALES_AC     Account.A_Code%Type ;
--======================================================================
Procedure Get_Para ( P_Lang_no 	 In Pls_Integer 	Default 1	,
										 P_User_No 	 In Pls_Integer						,
                     P_Post_Type In NUMBER    	 	Default 0	);
                     
Procedure Get_Interface_Ac(P_Brn_no          In NUMBER     ) ;                     

--=======================================================================
Procedure Post_Incoming( P_f_doc_no      In NUMBER   Default Null
												,P_t_doc_no      In NUMBER   Default Null
												,P_f_doc_date    In Date     Default Null
												,P_t_doc_date    In Date     Default Null
												,P_doc_ser	  	 In NUMBER   Default Null
												,P_jv_type	 	   In NUMBER   Default Null
												,P_Wcode		  	 In NUMBER   Default Null
												,P_Cc_code	  	 In VarChar2 Default Null
	                			,P_Brn_no     	 In NUMBER 	 Default Null
	                			,P_Ad_U_Id       In NUMBER 	 Default Null
												,P_Post_type		 In NUMBER   Default 0);
--======================================================================
Procedure Post_Outgoing( P_f_doc_no      In NUMBER   Default Null
												,P_t_doc_no      In NUMBER   Default Null
												,P_f_doc_date    In Date     Default Null
												,P_t_doc_date    In Date     Default Null
												,P_doc_ser	  	 In NUMBER   Default Null
												,P_jv_type	  	 In NUMBER   Default Null
												,P_Wcode		  	 In NUMBER   Default Null
												,P_Cc_code	  	 In VarChar2 Default Null
	                			,P_Brn_no     	 In NUMBER 	 Default Null
	                			,P_Ad_U_Id       In NUMBER 	 Default Null
												,P_Post_type		 In NUMBER   Default 0);
--======================================================================
Procedure Post_Stk_Adjst(  P_f_doc_no      In NUMBER   Default Null
													,P_t_doc_no      In NUMBER   Default Null
													,P_f_doc_date    In Date     Default Null
													,P_t_doc_date    In Date     Default Null
													,P_doc_ser	     In NUMBER   Default Null
													,P_jv_type	     In NUMBER   Default Null
													,P_Wcode		     In NUMBER   Default Null
													,P_Cc_code	     In VarChar2 Default Null
	                				,P_Brn_no     	 In NUMBER 	 Default Null
	                				,P_Ad_U_Id       In NUMBER 	 Default Null
													,P_Post_type		 In NUMBER   Default 0);
--======================================================================   
Procedure Post_Warehose_Trnsfer_Out( P_f_doc_no      In NUMBER   Default Null
		                                ,P_t_doc_no      In NUMBER   Default Null
		                                ,P_f_doc_date    In Date     Default Null
		                                ,P_t_doc_date    In Date     Default Null
		                                ,P_doc_ser       In NUMBER   Default Null
		                                ,P_jv_type       In NUMBER   Default Null
		                                ,P_Wcode         In NUMBER   Default Null
		                                ,P_Cc_code       In VarChar2 Default Null
					                		 			,P_Brn_no     	 In NUMBER 	Default Null
					                		 			,P_Ad_U_Id       In NUMBER 	 Default Null
		                                ,P_Post_type		 In NUMBER   Default 0);
		                                                    
--=========================================================================
Procedure Post_Warehose_Trnsfer_In( P_f_doc_no       In NUMBER   Default Null
		                                ,P_t_doc_no      In NUMBER   Default Null
		                                ,P_f_doc_date    In Date     Default Null
		                                ,P_t_doc_date    In Date     Default Null
		                                ,P_doc_ser       In NUMBER   Default Null
		                                ,P_jv_type       In NUMBER   Default Null
		                                ,P_Wcode         In NUMBER   Default Null
		                                ,P_Cc_code       In VarChar2 Default Null
					                		 			,P_Brn_no     	 In NUMBER 	Default Null
					                		 			,P_Ad_U_Id       In NUMBER 	 Default Null
		                                ,P_Post_type		 In NUMBER   Default 0);
--=========================================================================
Procedure Post_Kit_Itm_Asm   ( P_f_doc_no      In NUMBER   Default Null
                              ,P_t_doc_no      In NUMBER   Default Null
                              ,P_f_doc_date    In Date     Default Null
                              ,P_t_doc_date    In Date     Default Null
                              ,P_doc_ser       In NUMBER   Default Null
                              ,P_jv_type       In NUMBER   Default Null
                              ,P_Wcode         In NUMBER   Default Null
                              ,P_Cc_code       In VarChar2 Default Null
                              ,P_Pj_No         In VarChar2 Default Null
                              ,P_Actv_No       In VarChar2 Default Null
		                		 			,P_Brn_no     	 In NUMBER 	Default Null
		                		 			,P_Ad_U_Id       In NUMBER 	 Default Null
                              ,P_Post_type		 In NUMBER   Default 0);
--=========================================================================
Procedure Post_Kit_Itm_DisAsm   ( P_f_doc_no      In NUMBER   Default Null
                                 ,P_t_doc_no      In NUMBER   Default Null
                                 ,P_f_doc_date    In Date     Default Null
                                 ,P_t_doc_date    In Date     Default Null
                                 ,P_doc_ser       In NUMBER   Default Null
                                 ,P_jv_type       In NUMBER   Default Null
                                 ,P_Wcode         In NUMBER   Default Null
                                 ,P_Cc_code       In VarChar2 Default Null
                                 ,P_Pj_No         In VarChar2 Default Null
                                 ,P_Actv_No       In VarChar2 Default Null
					                		 	 ,P_Brn_no     	 	In NUMBER 	Default Null
					                		 	 ,P_Ad_U_Id       In NUMBER 	 Default Null
                                 ,P_Post_type		  In NUMBER   Default 0);
--=========================================================================
                                               
End IAS_POSTING_INV_PKG;
/
CREATE PACKAGE IAS_POSTING_JRS_PKG  IS

v_curr_bal  				          NUMBER;
V_Lang_No   				          Pls_Integer;
V_User_No   				          Pls_Integer;
v_local_cur 				          VarChar2(7);
v_cc_avail                    Pls_Integer;
V_USE_BALANCED_CC             NUMBER (1):=0;
V_USE_BALANCED_BRN            NUMBER (1):=0;
v_Use_Audit_Doc               NUMBER(1);
v_Post_Cheq_type              NUMBER(1);
V_Post_Cheq_Type_Vndr         NUMBER(1);
v_pay_ltr_ac                  VarChar2(30);
v_rec_ltr_ac                  VarChar2(30);
--v_cb_no                       NUMBER(4);
v_cb_no                       CASH_IN_HAND.CASH_NO%TYPE ;
v_ac_code_dtl                 VarChar2(30);
v_ac_dtl_typ                  ACCOUNT.ac_dtl_typ%Type ;
V_ChqPayIntrm_Ac              Number;
V_CC_POST                     PLS_INTEGER;
V_PJ_POST                     PLS_INTEGER;
V_ACTV_POST                   PLS_INTEGER;
V_POST_ACC_DSC_IN_PAY_CHQ     NUMBER (1):=0;
v_Cnt                         NUMBER;
V_Chq_No                      NUMBER;
V_AMT                         Number;
V_AMTF                        Number;

v_a_code     			            VarChar2(30);
v_cc_code    			            Cost_Centers.Cc_Code%Type ;
V_Pj_No    			              Ias_Projects.Pj_No%Type   ;
V_Actv_No    			            Ias_Actvty.Actv_No%Type   ;
v_doc_desc                    VarChar2(250);
v_FrcNo				                NUMBER(2);

--======================================================================
Procedure Get_Para ( P_Lang_no 	  In Pls_Integer 	Default 1	,
				             P_User_No 	  In Pls_Integer						,
                     P_Post_Type  In NUMBER    	 	Default 0	);
--======================================================================
Procedure Post_JRS( P_f_doc_no In NUMBER   Default Null
									  ,P_t_doc_no      In NUMBER   Default Null
									  ,P_f_doc_date    In Date     Default Null
									  ,P_t_doc_date    In Date     Default Null
									  ,P_doc_ser	     In NUMBER   Default Null
									  ,P_jv_type	     In NUMBER   Default Null
			              ,P_doc_type      In NUMBER   Default Null 		 		  
			              ,P_Brn_no        In NUMBER   Default Null
			         		  ,P_Ad_U_Id       In NUMBER   Default Null
									  ,P_Post_type	   In NUMBER   Default 0);
 END IAS_POSTING_JRS_PKG;
/
CREATE PACKAGE IAS_POSTING_PKG AS
        V_LANG_NO          PLS_INTEGER;
        V_USER_NO          PLS_INTEGER;
        V_CC_AVAIL         PLS_INTEGER;
        V_CC_POST          PLS_INTEGER;
        V_PJ_POST          PLS_INTEGER;
        V_ACTV_POST        PLS_INTEGER;  
          
        V_USE_PJ           PLS_INTEGER;
        V_USE_ACTV         PLS_INTEGER;
        V_CONN_WC_CC       NUMBER (1);
        V_BRN_NO           NUMBER (10);
        V_AC_BALANCED_CC   VARCHAR2 (30);
        V_AC_BALANCED_BRN  VARCHAR2 (30);   
        V_Ac_Balanced_Brn_Mst VARCHAR2 (30);      
        V_AUDIT_REF        NUMBER (1);
        V_AUDIT_REF_DESC   VARCHAR2 (500);
        V_AUDIT_REF_U_ID   NUMBER (5);
        V_AUDIT_REF_DATE   DATE;
        V_AD_U_ID          NUMBER (5);
        V_AD_DATE          DATE;
        V_UP_U_ID          NUMBER (5);
        V_UP_DATE          DATE;  
        V_UP_CNT       NUMBER (10);
        V_POST_U_ID        NUMBER (5);
        V_POST_DATE        DATE;
        V_UNPOST_U_ID      NUMBER (5);
        V_UNPOST_DATE      DATE;
        V_COL_NO           NUMBER (15);
        V_REP_CODE         VARCHAR2 (15);
        V_R_CODE           NUMBER (20);
        V_WO_NO            NUMBER (15);
        V_WO_SER           NUMBER (38);
        V_CHEQUE_VALUED    NUMBER (1);
        V_G_CODE           VARCHAR2 (20);
        V_WHG_CODE         NUMBER (20);
        V_CMP_NO           NUMBER (3);
        V_BRN_YEAR         NUMBER (4);
        V_BRN_USR          NUMBER (3);
        V_Doc_BRN_NO       NUMBER (10);
        V_MOV_DOC_PY       NUMBER (1);
        V_DOC_SEQ                     Number;
        V_POST_TYPE        NUMBER (1);
        V_DOC_TYPE_REF     NUMBER;
        V_DOC_JV_TYPE_REF  NUMBER;
        V_DOC_NO_REF       NUMBER;
        V_DOC_SER_REF      NUMBER;
        V_DOC_SEQUENCE_REF      NUMBER;
        V_RCRD_NO_REF      NUMBER;
        V_INSTALL_TYPE     NUMBER (1);
        V_DOC_DUE_DATE         Date;
  --MRD 06082016
--========================================================================
  PROCEDURE GET_PARA (
    P_LANG_NO  IN  PLS_INTEGER DEFAULT 1
   ,P_USER_NO  IN  PLS_INTEGER
  );

--======================================================================
FUNCTION Get_G_A_code (P_G_code In VarChar2,P_g_type In VarChar2 Default Null) RETURN VarChar2;                                          
--======================================================================
Function Get_BnkRecPay_Ac (P_Bank_No In NUMBER,P_Vouchr_Type In NUMBER) RETURN VarChar2;
--======================================================================
Function Get_CB_ACode (P_CB_No In NUMBER,P_type In NUMBER) RETURN VarChar2;
--======================================================================
Function Get_ChqPayIntrm_Ac (P_Bank_No In NUMBER,P_Vouchr_Type In NUMBER) RETURN VarChar2;
--======================================================================
Procedure Update_IntrM_Tab ( P_doc_type   In NUMBER , 
                             P_doc_ser    In NUMBER ,
                             P_jv_type    In NUMBER ,
	                           P_doc_no     In NUMBER ,
	                           P_doc_date   In DATE ,                           
	                           P_local_cur  In VarChar2 ,
	                           P_Lang_No    In NUMBER     Default 1,	
	                           P_cc_code    In VarChar2   Default Null,
	                           P_PJ_NO      In VARCHAR2   Default Null,
	                           P_ACTV_NO    In VARCHAR2   Default Null,
	                           P_w_code     In VarChar2   Default Null,
	                           P_doc_desc   In VarChar2   Default Null,
	                           P_ref_no     In VarChar2   Default Null,
                             P_doc_ser_ref In NUMBER Default Null,
														 p_ad_u_id    In NUMBER	 	  Default null,
														 p_post_u_id  In NUMBER	 	  Default null,
														 P_Post_Type  In NUMBER     Default 0,																														
														 P_Brn_no     In NUMBER ,
														 P_Brn_Year   In NUMBER ,
														 P_CMP_NO     In NUMBER ,
														 P_BRN_USR    In NUMBER);
--========================================================================
  FUNCTION  Get_Intrfc_Code (P_Fld_Nm In Varchar2,P_Brn_No In Number ) RETURN VARCHAR2;
--========================================================================
  Function Chk_Exist_Pst_Doc (
    P_DOC_TYPE         IN  NUMBER	DEFAULT NULL
   ,P_DOC_SER          IN  NUMBER	DEFAULT NULL
   ,P_DOC_SEQ          IN  NUMBER	DEFAULT NULL
   ,P_A_code           In Varchar2 Default Null
   ,P_RcRd_No          In NUMBER   Default Null
   ,P_Cheq_No          In NUMBER   Default Null
   ,P_Doc_Ser_Ref      In NUMBER   Default Null   ) RETURN NUMBER;

--========================================================================
  FUNCTION CHECK_ACODE (P_ACODE IN ACCOUNT.A_CODE%TYPE, P_ACY IN VARCHAR2)
    RETURN NUMBER;

--========================================================================
  PROCEDURE BALANCED_CC (
    P_DOC_TYPE         IN  NUMBER
   ,P_JV_TYPE          IN  NUMBER
   ,P_DOC_NO           IN  NUMBER
   ,P_DOC_SER          IN  NUMBER
   ,P_J_DATE           IN  DATE );
--========================================================================
	Procedure Balanced_Brn ( P_Doc_Type   In  Number ,
	                         P_Jv_Type    In  Number ,
	                         P_Doc_No     In  Number ,
	                         P_Doc_Ser    In  Number ,
	                         P_J_Date     In  Date   ) ;
--========================================================================
  PROCEDURE SET_DOC_INFO (
    P_AUDIT_REF        IN  NUMBER DEFAULT 0
   ,P_AUDIT_REF_DESC   IN  VARCHAR2 DEFAULT NULL
   ,P_AUDIT_REF_U_ID   IN  NUMBER DEFAULT NULL
   ,P_AUDIT_REF_DATE   IN  DATE DEFAULT NULL
   ,P_AD_U_ID          IN  NUMBER DEFAULT NULL
   ,P_AD_DATE          IN  DATE DEFAULT NULL
   ,P_UP_U_ID          IN  NUMBER DEFAULT NULL
   ,P_UP_DATE          IN  DATE DEFAULT NULL
   ,P_POST_U_ID        IN  NUMBER DEFAULT NULL
   ,P_POST_DATE        IN  DATE DEFAULT NULL
   ,P_UP_CNT       IN  NUMBER DEFAULT NULL
   ,P_UNPOST_U_ID      IN  NUMBER DEFAULT NULL
   ,P_UNPOST_DATE      IN  DATE DEFAULT NULL
   ,P_COL_NO           IN  NUMBER DEFAULT NULL
   ,P_REP_CODE         IN  VARCHAR2 DEFAULT NULL
   ,P_R_CODE           IN  NUMBER DEFAULT NULL
   ,P_WO_NO            IN  NUMBER DEFAULT NULL
   ,P_WO_SER           IN  NUMBER DEFAULT NULL
   ,P_CHEQUE_VALUED    IN  NUMBER DEFAULT 0
   ,P_G_CODE           IN  VARCHAR2 DEFAULT NULL
   ,P_WHG_CODE         IN  NUMBER DEFAULT NULL
   ,P_DOC_TYPE_REF     IN  NUMBER DEFAULT NULL
   ,P_DOC_JV_TYPE_REF  IN  NUMBER DEFAULT NULL
   ,P_DOC_NO_REF       IN  NUMBER DEFAULT NULL
   ,P_DOC_SER_REF      IN  NUMBER DEFAULT NULL
   ,P_INSTALL_TYPE     IN  NUMBER DEFAULT NULL
   ,P_MOV_DOC_PY       IN  NUMBER DEFAULT 0
   ,P_DOC_SEQ          IN  NUMBER DEFAULT NULL
   ,P_CMP_NO           IN  NUMBER DEFAULT NULL
   ,P_BRN_NO           IN  NUMBER DEFAULT NULL
   ,P_BRN_USR          IN  NUMBER DEFAULT NULL
   ,P_BRN_YEAR         IN  NUMBER DEFAULT NULL
   ,P_POST_TYPE        IN  NUMBER DEFAULT 0
   ,P_DOC_DUE_DATE     IN  DATE DEFAULT NULL
  );
--========================================================================
  FUNCTION GET_ACODE_REP_TYPE (P_ACODE IN ACCOUNT.A_CODE%TYPE)
    RETURN NUMBER;

--========================================================================
  FUNCTION GET_PERIOD_NO (P_DOC_DATE IN DATE)
    RETURN NUMBER;
--========================================================================
  FUNCTION GET_PJ_NO (
    P_A_CODE  IN  ACCOUNT.A_CODE%TYPE
   ,P_PJ_NO   IN  IAS_PROJECTS.PJ_NO%TYPE
  )
    RETURN VARCHAR2 ;
--========================================================================
  FUNCTION GET_ACTV_NO (
    P_A_CODE  IN  ACCOUNT.A_CODE%TYPE
   ,P_ACTV_NO IN  IAS_ACTVTY.ACTV_NO%TYPE
  )
    RETURN VARCHAR2 ;
--========================================================================
  FUNCTION GET_C_V_CODE (
    P_C_CODE	IN	CUSTOMER.C_CODE%TYPE DEFAULT NULL
   ,P_V_CODE	IN	V_DETAILS.V_CODE%TYPE DEFAULT NULL
  )
    RETURN VARCHAR2 ;
--========================================================================
	FUNCTION GET_V_C_CODE (
	    P_C_CODE	IN	CUSTOMER.C_CODE%TYPE DEFAULT NULL
	   ,P_V_CODE	IN	V_DETAILS.V_CODE%TYPE DEFAULT NULL
	  )
	    RETURN VARCHAR2 ;
--========================================================================
Function Get_W_Code_Brn ( P_A_Code   In  Account.A_Code%Type
                        , P_W_Code  In  Warehouse_Details.W_Code%Type Default Null 
                        , P_Brn_No   In  Warehouse_Details.W_Code%Type Default Null ) Return Number ;

--========================================================================
  PROCEDURE CHECK_BAL_POST (
    P_DOC_TYPE   IN  NUMBER
   ,P_DOC_SER    IN  NUMBER
   ,P_JV_TYPE    IN  NUMBER
   ,P_DOC_NO     IN  NUMBER
   ,P_DOC_DATE   IN  DATE
   ,P_LOCAL_CUR  IN  VARCHAR2
   ,P_LANG_NO    IN  NUMBER  DEFAULT 1
   ,P_CC_CODE    IN  COST_CENTERS.CC_CODE%TYPE   DEFAULT NULL
   ,P_PJ_NO      IN  IAS_PROJECTS.PJ_NO%TYPE     DEFAULT NULL
   ,P_ACTV_NO    IN  IAS_ACTVTY.ACTV_NO%TYPE     DEFAULT NULL
   ,P_W_CODE     IN  WAREHOUSE_DETAILS.W_CODE%TYPE DEFAULT NULL
   ,P_DOC_DESC   IN  VARCHAR2 DEFAULT NULL
   ,P_REF_NO     IN  VARCHAR2 DEFAULT NULL
   ,P_AD_U_ID    IN  NUMBER DEFAULT NULL
   ,P_POST_U_ID  IN  NUMBER DEFAULT NULL
   ,P_POST_TYPE  IN  NUMBER DEFAULT 0
   ,P_BRN_NO     IN  NUMBER
   ,P_BRN_YEAR   IN  NUMBER
   ,P_CMP_NO     IN  NUMBER
   ,P_BRN_USR    IN  NUMBER
  );

--========================================================================
  PROCEDURE INSRT_POST_MST (
    P_DOC_TYPE         IN  NUMBER
   ,P_JV_TYPE          IN  NUMBER
   ,P_DOC_NO           IN  NUMBER
   ,P_DOC_SER          IN  NUMBER
   ,P_J_DATE           IN  DATE
   ,P_CC_CODE          IN  COST_CENTERS.CC_CODE%TYPE DEFAULT NULL
   ,P_PJ_NO            IN  IAS_PROJECTS.PJ_NO%TYPE DEFAULT NULL
   ,P_ACTV_NO          IN  IAS_ACTVTY.ACTV_NO%TYPE DEFAULT NULL
   ,P_CASH_NO          IN  CASH_IN_HAND.CASH_NO%TYPE DEFAULT NULL
   ,P_W_CODE           IN  WAREHOUSE_DETAILS.W_CODE%TYPE DEFAULT NULL
   ,P_REF_NO           IN  VARCHAR2 DEFAULT NULL
   ,P_AD_U_ID          IN  NUMBER DEFAULT NULL
   ,P_POST_U_ID        IN  NUMBER DEFAULT NULL
   ,P_J_CLOSE          IN  NUMBER DEFAULT 0
   ,P_EXTERNAL_POST    IN  NUMBER DEFAULT 0
   ,P_DOC_TYPE_REF     IN  NUMBER DEFAULT NULL
   ,P_DOC_JV_TYPE_REF  IN  NUMBER DEFAULT NULL
   ,P_DOC_NO_REF       IN  NUMBER DEFAULT NULL
   ,P_DOC_SER_REF      IN  NUMBER DEFAULT NULL
   ,P_POST_TYPE        IN  NUMBER DEFAULT 0
   ,P_BRN_NO           IN  NUMBER DEFAULT NULL
   ,P_BRN_YEAR         IN  NUMBER DEFAULT NULL
   ,P_CMP_NO           IN  NUMBER DEFAULT NULL
   ,P_BRN_USR          IN  NUMBER DEFAULT NULL
   ,P_F_BRN_NO       	 IN  S_BRN.BRN_NO%TYPE DEFAULT NULL
   ,P_Doc_BRN_NO       IN  S_BRN.BRN_NO%TYPE DEFAULT NULL );

--=====================================================================================
  PROCEDURE INSRT_POST_DTL (
    P_DOC_TYPE         IN  NUMBER
   ,P_JV_TYPE          IN  NUMBER
   ,P_DOC_NO           IN  NUMBER
   ,P_DOC_SER          IN  NUMBER
   ,P_A_CODE           IN  ACCOUNT.A_CODE%TYPE
   ,P_A_CY             IN  VARCHAR2
   ,P_AMT              IN  NUMBER
   ,P_AMT_F            IN  NUMBER
   ,P_J_DATE           IN  DATE
   ,P_J_DESC           IN  VARCHAR2
   ,P_CC_CODE          IN  COST_CENTERS.CC_CODE%TYPE DEFAULT NULL
   ,P_PJ_NO            IN  IAS_PROJECTS.PJ_NO%TYPE DEFAULT NULL
   ,P_ACTV_NO          IN  IAS_ACTVTY.ACTV_NO%TYPE DEFAULT NULL
   ,P_W_CODE           IN  WAREHOUSE_DETAILS.W_CODE%TYPE DEFAULT NULL
   ,P_CASH_NO          IN  CASH_IN_HAND.CASH_NO%TYPE DEFAULT NULL
   ,P_CB_BEFORE        IN  NUMBER DEFAULT NULL
   ,P_LC_NO            IN  LC_MASTER.LC_NO%TYPE DEFAULT NULL
   ,P_C_CODE           IN  CUSTOMER.C_CODE%TYPE DEFAULT NULL
   ,P_V_CODE           IN  V_DETAILS.V_CODE%TYPE DEFAULT NULL
   ,P_AC_CODE_DTL      IN  IAS_POST_DTL.AC_CODE_DTL%TYPE DEFAULT NULL
   ,P_AC_CODE_DTL_SUB  IN  IAS_POST_DTL.AC_CODE_DTL_SUB%TYPE DEFAULT NULL
   ,P_AC_DTL_TYP       IN  IAS_POST_DTL.AC_DTL_TYP%TYPE DEFAULT NULL
   ,P_REF_NO           IN  VARCHAR2 DEFAULT NULL
   ,P_CHEQUE_NO        IN  VARCHAR2 DEFAULT NULL
   ,P_NOTE_NO          IN  VARCHAR2 DEFAULT NULL
   ,P_J_CLOSE          IN  NUMBER DEFAULT 0
   ,P_EXTERNAL_POST    IN  NUMBER DEFAULT 0
   ,P_RCRD_NO          IN  NUMBER DEFAULT NULL
   ,P_AD_U_ID          IN  NUMBER DEFAULT NULL
   ,P_POST_U_ID        IN  NUMBER DEFAULT NULL
   ,P_POST_TYPE        IN  NUMBER DEFAULT 0
   ,P_BRN_NO           IN  NUMBER DEFAULT NULL
   ,P_BRN_YEAR         IN  NUMBER DEFAULT NULL
   ,P_CMP_NO           IN  NUMBER DEFAULT NULL
   ,P_BRN_USR          IN  NUMBER DEFAULT NULL
   ,P_COL_NO           IN  NUMBER DEFAULT NULL
   ,P_REP_CODE         IN  VARCHAR2 DEFAULT NULL
   ,P_R_CODE           IN  NUMBER DEFAULT NULL
   ,P_WO_NO            IN  NUMBER DEFAULT NULL
   ,P_WO_SER           IN  NUMBER DEFAULT NULL
   ,P_DOC_DUE_DATE     IN  DATE   DEFAULT NULL
   ,P_CHEQUE_VALUED    IN  NUMBER DEFAULT 0
   ,P_G_CODE           IN  VARCHAR2 DEFAULT NULL
   ,P_WHG_CODE         IN  NUMBER DEFAULT NULL
   ,P_DOC_TYPE_REF     IN  NUMBER DEFAULT NULL
   ,P_DOC_JV_TYPE_REF  IN  NUMBER DEFAULT NULL
   ,P_DOC_NO_REF       IN  NUMBER DEFAULT NULL
   ,P_DOC_SER_REF      IN  NUMBER DEFAULT NULL
   ,P_DOC_SEQUENCE_REF IN  NUMBER DEFAULT NULL
   ,P_RCRD_NO_REF      IN  NUMBER DEFAULT NULL
   ,P_INSTALL_TYPE     IN  NUMBER DEFAULT NULL
   ,P_MOV_DOC_PY       IN  NUMBER DEFAULT 0
   ,P_FROM_CC_CODE   	 IN  COST_CENTERS.CC_CODE%TYPE DEFAULT NULL
   ,P_DOC_SEQ          IN  NUMBER DEFAULT NULL
   ,P_F_BRN_NO       	 IN  S_BRN.BRN_NO%TYPE DEFAULT NULL
   ,P_Doc_BRN_NO       IN  S_BRN.BRN_NO%TYPE DEFAULT NULL
   ,P_Doc_Post         IN  NUMBER DEFAULT 0
   ,P_INSRNCE_CMP_NO       IN NUMBER DEFAULT NULL
   ,P_INSRNCE_BNF_NO       IN NUMBER DEFAULT NULL
   ,P_INSRNCE_CARD_NO      IN VARCHAR2 DEFAULT NULL
   ,P_INSRNCE_CARD_NO_FMLY IN VARCHAR2 DEFAULT NULL
   ,P_INSRNCE_RLTN_TYP     IN VARCHAR2 DEFAULT NULL
   ,P_Cashier_No           IN NUMBER DEFAULT NULL
   ,P_CR_CARD_TYPE         IN NUMBER DEFAULT NULL
   ,P_Doc_No_Mnl           IN Ias_Post_Dtl.Doc_No_Mnl%Type   DEFAULT NULL
   ,P_Doc_Date_Mnl         IN Ias_Post_Dtl.Doc_Date_Mnl%Type DEFAULT NULL    
  );
  
END IAS_POSTING_PKG;
/
CREATE PACKAGE IAS_POSTING_SHP_PKG 
IS
V_CURR_BAL  		      NUMBER;
V_LANG_NO   		     PLS_INTEGER;
V_USER_NO   		     PLS_INTEGER;
V_LOCAL_CUR 		     VARCHAR2(7);
V_SLS_AC             VARCHAR(30);
V_DISC_AC            VARCHAR2(30);
V_VAT_AC	           VARCHAR2(30);
V_OTHR_AC            VARCHAR2(30);
V_STK_CUR            VARCHAR2(7);
V_USE_AUDIT_DOC      NUMBER(1);
V_USE_VAT_PROFIT     NUMBER(1);
V_CALC_VAT_AMT_TYPE  NUMBER(2);
V_A_CODE     		     VARCHAR2(30);
V_CC_CODE    		     COST_CENTERS.CC_CODE%TYPE ;
V_PJ_NO    			     IAS_PROJECTS.PJ_NO%TYPE   ;
V_ACTV_NO    		     IAS_ACTVTY.ACTV_NO%TYPE   ;
V_VAT_PER            VARCHAR2(30);
v_cb_no              CASH_IN_HAND.CASH_NO%TYPE ;
V_CURR_DIFF_AC       VARCHAR2(30);
V_LOSS_OFG_AC        VARCHAR2(30);
V_MIN_PROFIT_AMT     NUMBER;
V_VAT_PROFIT_PER   	 NUMBER;
V_VAT_PROFIT_DEBT    VARCHAR2(30);
V_VAT_PROFIT_CRDT    VARCHAR2(30);
V_PAY_LTR_AC   	     VARCHAR2(30);
V_REC_LTR_AC         VARCHAR2(30);
V_LC_DIFF_AC         VARCHAR2(30);
V_COMM_A_CODE        VARCHAR2(30);
V_FRC_AC             VARCHAR2(30);
V_DOC_DESC           VARCHAR2(250);
V_SI_POST_DISC 	     NUMBER(1);
V_POST_REP_COMM      NUMBER(1);
V_USE_VAT            NUMBER(1);
V_PUR_DISC        	 NUMBER(1);
V_PUR_FREE_QTY_COST  NUMBER(1);
V_POST_CHEQ_TYPE     NUMBER(1);
V_POST_CHEQ_TYPE_VNDR NUMBER(1);
V_AR_CS_TYPE  	     NUMBER(1);
V_INCOMING_CS_TYPE   NUMBER(1);
V_INC_PJ_TYPE        NUMBER(1);
V_USE_BALANCED_CC					NUMBER (1):=0;
V_USE_BALANCED_BRN				NUMBER (1):=0;
V_POST_ADD_DISC_ITM_TYPE	NUMBER;
V_USE_PRICE_WHTRNS_REC_COST   NUMBER;

--======================================================================
PROCEDURE GET_PARA ( P_LANG_NO 	 IN PLS_INTEGER 	DEFAULT 1	,
					 P_USER_NO 	 IN PLS_INTEGER						,
                     P_POST_TYPE IN NUMBER    	 	DEFAULT 0	);
--======================================================================
Procedure Get_Interface_Ac(P_Brn_no     	 In NUMBER 	) ;
PROCEDURE POST_PREPAID( P_F_DOC_NO      IN NUMBER   DEFAULT NULL
                       ,P_T_DOC_NO      IN NUMBER   DEFAULT NULL
                       ,P_F_DOC_DATE    IN DATE     DEFAULT NULL
                       ,P_T_DOC_DATE    IN DATE     DEFAULT NULL
                       ,P_DOC_SER       IN NUMBER   DEFAULT NULL
                       ,P_JV_TYPE       IN NUMBER   DEFAULT NULL
                       ,P_BRN_NO        IN NUMBER   DEFAULT NULL
                       ,P_AD_U_ID       IN NUMBER   DEFAULT NULL
                       ,P_POST_TYPE     IN NUMBER   DEFAULT 0);
                       --======================================================================
PROCEDURE POST_BILLING( P_F_DOC_NO      IN NUMBER   DEFAULT NULL
                       ,P_T_DOC_NO      IN NUMBER   DEFAULT NULL
                       ,P_F_DOC_DATE    IN DATE     DEFAULT NULL
                       ,P_T_DOC_DATE    IN DATE     DEFAULT NULL
                       ,P_DOC_SER       IN NUMBER   DEFAULT NULL
                       ,P_JV_TYPE       IN NUMBER   DEFAULT NULL
                       ,P_BRN_NO        IN NUMBER   DEFAULT NULL
                       ,P_AD_U_ID       IN NUMBER   DEFAULT NULL
                       ,P_POST_TYPE     IN NUMBER   DEFAULT 0);
--======================================================================
PROCEDURE POST_HND_OVER( P_F_DOC_NO      IN NUMBER   DEFAULT NULL
                       ,P_T_DOC_NO      IN NUMBER   DEFAULT NULL
                       ,P_F_DOC_DATE    IN DATE     DEFAULT NULL
                       ,P_T_DOC_DATE    IN DATE     DEFAULT NULL
                       ,P_DOC_SER       IN NUMBER   DEFAULT NULL
                       ,P_JV_TYPE       IN NUMBER   DEFAULT NULL
                       ,P_BRN_NO        IN NUMBER   DEFAULT NULL
                       ,P_AD_U_ID       IN NUMBER   DEFAULT NULL
                       ,P_POST_TYPE     IN NUMBER   DEFAULT 0);
--======================================================================
END IAS_POSTING_SHP_PKG;
/
CREATE Package          Ias_Posting_Stn_Pkg Is
   V_Curr_Bal                    Number;
   V_Local_Cur                   Varchar2 (7);
   V_Stk_Cur                     Varchar2 (7);
   V_Stk_Rate                    Pls_Integer;
   V_Lang_No                     Pls_Integer;
   V_User_No                     Pls_Integer;
   V_Cpn_Ac                      Varchar (30);
   V_Cc_Avail                    Pls_Integer;
   V_Cc_Post                     Pls_Integer;
   V_Pj_Post                     Pls_Integer;
   V_Doc_Desc                    Varchar2 (250);
   V_Actv_Post                   Pls_Integer;
   V_A_Code                      Varchar2 (30);
   V_Cc_Code                     Cost_Centers.Cc_Code%Type;
   V_Pj_No                       Ias_Projects.Pj_No%Type;
   V_Actv_No                     Ias_Actvty.Actv_No%Type;
   V_Cb_No                       Number (4);
   V_Post_Rep_Comm               Number (1);
   V_Use_Audit_Doc               Number (1);
   V_Ar_Cs_Type                  Number (1);
   V_Ar_Pj_Type                  Number (1);
   V_Ar_Actv_Type                Number (1);
   V_Use_Balanced_Cc             Number (1) := 0;
   V_Use_Balanced_Brn            Number (1) := 0;

--======================================================================
   Procedure Get_Para (
      P_Lang_No     In   Pls_Integer Default 1,
      P_User_No     In   Pls_Integer,
      P_Post_Type   In   Number Default 0
   );

--======================================================================
--(P_Fld_Nm , P_Brn_No )
--======================================================================
   Procedure Post_Sales_Coupon (
      P_F_Doc_No     In   Number Default Null,
      P_T_Doc_No     In   Number Default Null,
      P_F_Doc_Date   In   Date Default Null,
      P_T_Doc_Date   In   Date Default Null,
      P_Doc_Ser      In   Number Default Null,
      P_Jv_Type      In   Number Default Null,
      P_Cc_Code      In   Varchar2 Default Null,
      P_Cashno       In   Number Default Null,
      P_Brn_No       In   Number Default Null,
      P_Ad_U_Id      In   Number Default Null,
      P_Post_Type    In   Number Default 0
   );
End Ias_Posting_Stn_Pkg;
/
CREATE PACKAGE IAS_Post_In_Sav_Pkg AS

V_Lang_No   				Pls_Integer;
V_User_No   				Pls_Integer;
    --========================================================================
    PROCEDURE Post_Doc_In_Sav 	(   
																G_Doc_Type      In  NUMBER                  ,
																G_Doc_Ser       In  NUMBER                  ,
																P_jv_type       In  NUMBER      Default Null,
																P_doc_no        In  NUMBER      Default Null,
																P_Lang_no       In  pls_integer Default 1   ,
																P_User_No       In  pls_integer             ,
																G_Post_Type     In  Number      Default 0   ,
																P_Cheq_No				In  Number      Default Null,
																P_RcRd_No				In  Number      Default Null,
																P_Due_Date			In  Date      	Default Null,
																P_Doc_Seq				In  Number 			Default Null,
																P_Doc_Ser_Ref		In  Number 			Default Null,
                                P_Doc_Typ_Ref		In  Number 			Default Null) ;
--========================================================================
    PROCEDURE Delete_Prev_Post  (   
																P_doc_type      In  NUMBER  ,
																P_doc_ser       In  NUMBER  ,
																P_jv_type       In  NUMBER      Default Null,
																P_doc_no        In  NUMBER  Default Null,
																P_RcRd_No				In  Number  Default Null,
																P_Doc_Seq				In  Number 	Default Null,
                                P_Cheq_No       In NUMBER   Default Null,
                                P_Doc_Ser_Ref	In  Number 	Default Null  ) ;
--========================================================================
    PROCEDURE Up_Post_Doc_In_Sav(   P_doc_type      In  NUMBER  ,
                                    P_doc_ser       In  NUMBER  ,
                                    P_jv_type       In  NUMBER  Default Null,
                                    P_doc_no        In  NUMBER  Default Null,
                                    P_doc_date      In  DATE    Default Null,                           
                                    P_Post_Type     In  Number  Default 1   ) ;
--==================================================================================
PROCEDURE Updt_Doc_Info (   P_doc_type      In  NUMBER  ,
                            P_doc_ser       In  NUMBER  ,
                            AudRef          IN  Number  ,
                            AudDesc         IN  Varchar2,
                            P_Lang_no       In  pls_integer Default 1   ,
                            P_User_No       In  pls_integer             ) ;
END IAS_Post_In_Sav_Pkg;
/
CREATE PACKAGE IAS_Post_List_Pkg AS

   TYPE Post_List_Rec IS REF CURSOR ;


   PROCEDURE Post_List_View ( List_Qry         IN OUT Post_List_Rec ,
															P_date           IN Date,
															P_Jv_Type        IN Number,
															P_Cash_Bank      IN Cash_IN_Hand.Cash_No%Type,
															P_W_Code         IN WareHouse_Details.W_Code%Type,
															P_CS             IN Cost_Centers.cc_code%Type,
															P_User_No        IN Number,
															P_Post_Jv_Type   IN Number,
															P_Pur_type       IN Number   Default 0,
															P_Order_By       IN Varchar2,
															P_Brn_No         IN Number   Default 0,
															P_Ad_U_Id        IN Number            ,
                              P_POST_UNPOST     IN NUMBER,--40 POST     104 UNPOST
                              P_SYS_NO          IN NUMBER     );

    Procedure UnPost_List_Inv_View ( List_Qry       In Out Post_List_Rec               ,
		                                 P_Date            In Date                         ,
		                                 P_Jv_Type         In Number                       ,
		                                 P_Cash_Bank       In Cash_In_Hand.Cash_No%Type    ,
		                                 P_W_Code          In WareHouse_Details.W_Code%Type,
		                                 P_Cs              In Cost_Centers.cc_code%Type    ,
		                                 P_User_No         In Number                       ,
		                                 P_UnPost_Jv_Type  In Number                       ,
		                                 P_Order_By        In Varchar2                     ) ;
END IAS_Post_List_Pkg;
/
CREATE Package Ias_Privilege_Pkg As

G_Whr_Sql VARCHAR2(10000) :=Null;

Type P_Cv Is Ref Cursor;
--##-------------------------------------------------------------------------------------##--
FUNCTION Chk_Inpt_Prv ( P_Tbl_nm    In Varchar2
                       ,P_code      In Varchar2
                       ,P_Fld_nm    In Varchar2
                       ,P_code1     In Varchar2   Default Null
                       ,P_Fld1_nm   In Varchar2   Default Null
                       ,P_code2     In Varchar2   Default Null
                       ,P_Fld2_nm   In Varchar2   Default Null ) Return Number;                         

--##-------------------------------------------------------------------------------------##--
FUNCTION Chk_Usr_Inpt_Prv ( P_Tbl_nm    In Varchar2
                           ,P_Usr_No    In Number
                           ,P_code      In Varchar2
                           ,P_Fld_nm    In Varchar2
                           ,P_code1     In Varchar2   Default Null
                           ,P_Fld1_nm   In Varchar2   Default Null
                           ,P_code2     In Varchar2   Default Null
                           ,P_Fld2_nm   In Varchar2   Default Null
                           ,P_Fld_Prv   In Varchar2 ) Return Number;                         
--##-------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Prv(  F_Cv          In Out P_Cv
                         ,P_Tbl_Nm      In Varchar2
                         ,P_Whr_Sql     In Varchar2   Default Null
                         ,P_Ordr_by     In Varchar2   Default Null
                         ,P_Usr_No      In Varchar2
                         ,P_Lng_No      In Number     Default 1
                         ,P_Inpt_Typ    In Varchar2)  ;
--##-------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Adm_Prv(  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Varchar2
                             ,P_Lng_No      In Number     Default 1)  ;
--##-------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Stp_Prv(  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Number
                             ,P_Lng_No      In Number     Default 1)  ;

--##-------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Gls_Prv(  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Number
                             ,P_Lng_No      In Number     Default 1)  ;
--##-------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Inv_Prv(  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Number
                             ,P_Lng_No      In Number     Default 1)  ;
--##-------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Aps_Prv(  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Number
                             ,P_Lng_No      In Number     Default 1)  ;
--##-------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Ars_Prv(  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Number
                             ,P_Lng_No      In Number     Default 1)  ;
--##-------------------------------------------------------------------------------------##--
PROCEDURE FTCH_INPT_HPS_PRV ( F_CV        IN OUT   P_CV,
                                              P_TBL_NM    IN       VARCHAR2,
                                              P_WHR_SQL   IN       VARCHAR2 DEFAULT NULL,
                                              P_ORDR_BY   IN       VARCHAR2 DEFAULT NULL,
                                              P_USR_NO    IN       NUMBER,
                                              P_LNG_NO    IN       NUMBER DEFAULT 1);                             
--##-------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Dts_Prv(  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Number
                             ,P_Lng_No      In Number     Default 1);
--##-------------------------------------------------------------------------------------##--                             
                             
PROCEDURE Ftch_Inpt_Hrs_Prv(  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Number
                             ,P_Lng_No      In Number     Default 1)  ;
--##-----------------------------------------------------------------------------------------##--
PROCEDURE Ftch_Inpt_Rem_Prv (  F_Cv          In Out P_Cv
                             ,P_Tbl_Nm      In Varchar2
                             ,P_Whr_Sql     In Varchar2   Default Null
                             ,P_Ordr_by     In Varchar2   Default Null
                             ,P_Usr_No      In Number
                             ,P_Lng_No      In Number     Default 1);                             
--##-------------------------------------------------------------------------------------##--
 Procedure Insrt_Upd_Priv_Table (  P_Usr_No        In User_R.U_Id%Type       ,    -- P_Usr_No    = :User_R.U_Id
                                     P_Admn_Usr      In User_R.Admin_User%Type ,    -- P_Usr_No    = :User_R.Admin_User
                                     P_Inherit_U_Id  In Number Default Null    ,    -- P_Usr_No    = :User_R.Inher_Uid
                                     P_Inherit_Typ      In Number Default 0    ,    -- P_Inherit_Typ  =  0 = All   , 1 =  Scr , 2 =  Trns , 3 = Input , 4 =  TabPage , 5 =  Others
                                     P_Inherit_Typ_Sub   In Number Default 0   ,    -- P_Inherit_Typ_Sub  =  0 = Not Use                                          
                                     P_Prv_Type      In Number Default 0       ,    -- P_Prv_Type  =  0 = User   , 1 =  Group
                                     P_User_Type     In User_R.User_Type%Type  ,    -- P_User_Type = :User_R.User_Type
                                     P_Aralt         In Number                 ,    -- P_Aralt     = :Parameter.P_Aralt
                                     P_Apalt         In Number                 ,    -- P_Apalt     = :Parameter.P_Apalt
                                     P_Sub_Acc       In Number                 ,    -- P_Sub_Acc   = :Parameter.P_Sub_Acc
                                     P_Ad_U_Id       In User_R.U_Id%Type       ,    -- P_Ad_U_Id   = :Parameter.User_no
                                     P_Brn_No        In Number                 ,    -- P_Brn_No    = :Parameter.Brn_No
                                     P_Brn_Year      In Number                 ,    -- P_Brn_Year  = :Parameter.Brn_Year
                                     P_Cmp_No        In Number                 ,    -- P_Cmp_No    = :Parameter.Cmp_No
                                     P_Brn_Usr       In Number                 ) ;
--##-------------------------------------------------------------------------------------##--
Procedure Insrt_Usr_Prv_Prc (  P_Usr_No       In User_R.U_Id%Type        ,
                               P_Usr_No_Slct  In Varchar2        ,
                               P_Tbl_Nm       In Varchar2                , 
                               P_Val_Code1    In Varchar2                , 
                               P_Val_Code2    In Varchar2  Default Null  , 
                               P_Val_Code3    In Varchar2  Default Null  , 
                               P_Prv          In Varchar2  Default Null  ,
                               P_Rcrd_Src     In Varchar2  Default 0     ,
                               P_Tbl_Nm_ACT   In Varchar2  Default Null  ,
                               P_Tbl_Nm_Inpt  In Varchar2  Default Null  ,
                               P_FLD1_NM      In Varchar2  Default Null  , 
                               P_FLD2_NM      In Varchar2  Default Null  , 
                               P_FLD3_NM      In Varchar2  Default Null  ) ;
--##-------------------------------------------------------------------------------------##--
End Ias_Privilege_Pkg;
/
CREATE PACKAGE IAS_PRMTR_PKG   IS
    G_BRN_YEAR       NUMBER(4);
    G_USER_NO        USER_R.U_ID%TYPE;
    G_LANG_NO        NUMBER;
    G_LANG_DIR       NUMBER;
    G_LANG_DFLT      NUMBER;
    G_LOCAL_CUR      EX_RATE.CUR_CODE%TYPE;
    G_FORM_NO        NUMBER;
    G_SCR_TYP        NUMBER;    
FUNCTION    GetPval (P_Prmtr VARCHAR2)                            RETURN VARCHAR2;
PROCEDURE   SetPval(P_Prmtr VARCHAR2,  P_Val VARCHAR2);
END IAS_PRMTR_PKG ; 
/
CREATE Package Ias_prprtn_trns_pkg As
--======================================================================
   G_lng_no                      Ias_sys.Lang_def.Lang_no%Type;
   G_sys_no                      Number;
   G_lng_dflt                    Ias_sys.Lang_def.Lang_dflt%Type;
   G_usr_no                      User_r.U_id%Type;  
   G_brn_usr                     Ias_post_mst.Brn_usr%Type;
   G_brn_year                    Ias_post_mst.Brn_year%Type;
   G_brn_no                      Ias_post_mst.Brn_no%Type;
   G_cmp_no                      Ias_post_mst.Cmp_no%Type;
   G_Doc_Type_Ref                 Ias_Post_Mst.Doc_Type%Type;
   G_Doc_Ser_Ref                 Ias_Post_Mst.Doc_Ser%Type;
   G_Doc_No_Ref                  Ias_Post_Mst.Doc_No%Type;     
   G_Doc_Ser                     Ias_Post_Mst.Doc_Ser%Type;
   G_Doc_No                      Ias_Post_Mst.Doc_No%Type; 
   G_Doc_Ser_bin                 Ias_Post_Mst.Doc_Ser%Type;
   G_Doc_No_bin                      Ias_Post_Mst.Doc_No%Type;  
   G_ad_date                     Date;
   G_ad_u_id                     User_r.U_id%Type;
   G_ad_trmnl_nm                 Ias_post_mst.Ad_trmnl_nm%Type;
   G_w_code                      Warehouse_details.W_code%Type;
   G_doc_date                    Date;
   G_Typ_No                      Ias_post_mst.Jv_type%Type;
   G_Pr_Type                     Number(5);
   G_no_of_decimal_ar            Number(5);        
   G_c_code                      Customer.C_code%Type;
   G_ref_no                      Ias_post_dtl.Ref_no%Type;
   G_rcrd_no                     Ias_post_dtl.Rcrd_no%Type;
   G_rep_code                    Sales_man.Reprs_code%Type;
   G_use_batch_no                Number;
   G_use_expire_date             Number;
   G_Use_Compound_Items          Number(5);
   G_Use_Kit_Itm_Clssfctn        Number(5);
   G_Doc_Gen_Ar                  Number(5);
   G_Use_Out_Bills               Number(5);
   G_doc_dsc                     Ias_bill_mst.A_desc%Type; 
   G_INPT_NM                     VARCHAR2(500);
   G_ADD_PORDER_QTY              NUMBER(2) ;
   G_ARALT                       NUMBER(2) ;
   G_APALT                       NUMBER(2) ;
   G_tbl_mst_nm                  Varchar2(100);
   G_tbl_dtl_nm                  Varchar2(100);
   G_fld_free_qty                Varchar2(100);
   G_fld_ser                     Varchar2(100);
   G_fld_no                      Varchar2(100);
   G_use_approved                Varchar2(100);
   G_fld_desc                    Varchar2(100);
   G_fld_date                    Varchar2(100);
   G_IN_OUT                       Number(2);
   G_Save_Barcode                 Number(2);
   G_Use_prp_qty_by_barcode       Number(2);
   G_ac_code_dtl                  Ias_post_dtl.Ac_code_dtl%Type;
   G_a_code                       Ias_post_dtl.A_code%Type;   
   G_ac_dtl_typ                   Ias_post_dtl.Ac_dtl_typ%Type;
   G_ac_nm                        Varchar2(2000);
--##------------------------------------------------------------------------------------------------------------------------------##--
PROCEDURE INSRT_DOC_PRC(  P_XML        IN  CLOB,                          
                          P_MSG_TYP    IN NUMBER                 DEFAULT 0,  --## 1- show messeg as rais 0- return JSON messege                        
                          P_Lng_No         In Number Default 1,
                          P_JSON_RSLT  OUT VARCHAR2    );
--##------------------------------------------------------------------------------------------------------------------------------##--
Procedure Insrt_Bin_prc( P_xml            In Clob
                        ,P_msg_typ        In Number Default 0  --## 1- Show Messeg As Rais 0- Return Json Messege
                        ,P_Lng_No         In Number Default 1
                        ,P_json_rslt      Out Varchar2) ; 
--##------------------------------------------------------------------------------------------------------------------------------##--                                                 
PROCEDURE GET_PRMTR_PRC (   P_DOC_TYPE  IN IAS_POST_MST.DOC_TYPE%TYPE           DEFAULT NULL,
                            P_TYP_NO         In NUMBER                          Default Null,
                            P_BRN_NO   IN S_BRN.BRN_NO%TYPE                    DEFAULT NULL,
                            P_BRN_USR  IN S_BRN.BRN_USR%TYPE                    DEFAULT NULL,
                            P_USR_NO   IN USER_R.U_ID%TYPE                     DEFAULT NULL,
                            P_LNG_NO   NUMBER                                  DEFAULT NULL);
--##------------------------------------------------------------------------------------------------------------------------------##--                            
   Function Ftch_doc_typ_xml( P_usr_no         In User_r.U_id%Type
                             ,P_lng_no         In Number Default Null
                             ,P_pr_type        In Number Default Null )Return Clob;

--##---------------------------------------------------------------------------------------------------------------------------------------##--
   Function Ftch_w_code_xml(  P_usr_no         In User_r.U_id%Type
                             ,P_brn_no         In S_brn.Brn_no%Type
                             ,P_lng_no         In Number Default Null)Return Clob;
--##------------------------------------------------------------------------------------------------------------------------------##--
 Function Ftch_Bin_code_xml( P_Lng_no         In Number Default Null,P_w_code  In Number Default Null )Return Clob;
--##------------------------------------------------------------------------------------------------------------------------------##--
 Function Ftch_Bin_code_Qty_xml( P_Icode          In Varchar2
                                ,P_Psize          In Number Default Null  
                                ,P_Wcode          In Number   
                                ,P_Lng_no         In Number Default Null  )Return Clob;
--##------------------------------------------------------------------------------------------------------------------------------##--
   Function Shw_doc_data(     P_doc_type       In Number
                             ,P_typ_no         In Number
                             ,P_brn_no         In S_brn.Brn_no%Type Default Null
                             ,P_usr_no         In User_r.U_id%Type Default Null
                             ,P_w_code         In Warehouse_details.W_code%Type Default Null
                             ,P_lng_no         In Number Default Null
                             ,P_srch_val       In Varchar2 Default Null)Return Clob;

--##-------------------------------------------------------------------------------------##--
  PROCEDURE  Shw_itm_doc_prprtn(  P_doc_type       In Number
                                  ,P_typ_no         In Number
                                  ,P_doc_ser        In Ias_post_mst.Doc_ser%Type
                                  ,P_w_code         In Warehouse_details.W_code%Type 
                                  ,P_lng_no         In Number Default Null
                                  ,P_OUT_XML        OUT CLOB) ;

--##-------------------------------------------------------------------------------------##--
  PROCEDURE Shw_itm_barcode_doc(   P_doc_type       In Number
                                  ,P_typ_no         In Number
                                  ,P_doc_ser        In Ias_post_mst.Doc_ser%Type
                                  ,P_w_code         In Warehouse_details.W_code%Type 
                                  ,P_lng_no         In Number Default Null
                                  ,P_barcode        In Varchar2 Default Null
                                  ,P_save_barcode   In Number Default Null
                                  ,P_barcode_lngth  In Number Default Null
                                  ,P_itm_lngth      In Number Default Null
                                  ,P_b_code         In Varchar2 Default Null
                                  ,P_OUT_XML       OUT CLOB );
--##-------------------------------------------------------------------------------------##--
   Procedure Insrt_data_tmp(
                              P_doc_type       In Number
                             ,P_typ_no         In Number
                             ,P_doc_ser        In Ias_post_mst.Doc_ser%Type
                             ,P_w_code         In Warehouse_details.W_code%Type 
                             ,P_lng_no         In Number Default Null);
--##-------------------------------------------------------------------------------------##--
Procedure Insrt_Chk_Doc_Inout_Qty_Mst(                                     
                             P_Doc_Type                   In Ias_Chk_Doc_Inout_Qty_Mst.Doc_Type_Ref%Type
                            ,P_Typ_No                     In Ias_Chk_Doc_Inout_Qty_Mst.Typ_No%Type     
                            ,P_Pr_Type                    In Ias_Chk_Doc_Inout_Qty_Mst.Pr_Type%Type        
                            ,P_Doc_No                     In Ias_Chk_Doc_Inout_Qty_Mst.Doc_No%Type          Default Null
                            ,P_Doc_Ser                    In Ias_Chk_Doc_Inout_Qty_Mst.Doc_Ser%Type         Default Null
                            ,P_w_code                     In Warehouse_details.W_code%Type                  Default Null
                            ,P_Doc_Dsc                    In Ias_Chk_Doc_Inout_Qty_Mst.Doc_Dsc%Type         Default Null
                            ,P_Ref_No                     In Ias_Chk_Doc_Inout_Qty_Mst.Ref_No%Type          Default Null
                            ,P_Ad_U_Id                    In Ias_Chk_Doc_Inout_Qty_Mst.Ad_U_Id%Type         Default Null
                            ,P_Cmp_No                     In Ias_Chk_Doc_Inout_Qty_Mst.Cmp_No%Type          Default Null
                            ,P_Brn_No                     In Ias_Chk_Doc_Inout_Qty_Mst.Brn_No%Type          Default Null
                            ,P_Brn_Year                   In Ias_Chk_Doc_Inout_Qty_Mst.Brn_Year%Type        Default Null
                            ,P_Brn_Usr                    In Ias_Chk_Doc_Inout_Qty_Mst.Brn_Usr%Type         Default Null
                            ,P_Ad_Trmnl_Nm                In Ias_Chk_Doc_Inout_Qty_Mst.Ad_Trmnl_Nm%Type     Default Null
                            ,P_Save_Barcode               In Number Default Null
                            ,P_Msg_Txt                    In Out Varchar2
                            ,P_Pkg_Line                   In Out Varchar2);
--##-------------------------------------------------------------------------------------##--
Procedure Insrt_Chk_Doc_Inout_Qty_Dtl(
                             P_I_Code                     In Ias_Chk_Doc_Inout_Qty_Dtl.I_Code%Type          Default Null
                            ,P_Itm_Unt                    In Ias_Chk_Doc_Inout_Qty_Dtl.Itm_Unt%Type         Default Null
                            ,P_P_Size                     In Ias_Chk_Doc_Inout_Qty_Dtl.P_Size%Type          Default Null
                            ,P_W_Code                     In Ias_Chk_Doc_Inout_Qty_Dtl.W_Code%Type          Default Null
                            ,P_Expire_Date                In Ias_Chk_Doc_Inout_Qty_Dtl.Expire_Date%Type     Default Null
                            ,P_Batch_No                   In Ias_Chk_Doc_Inout_Qty_Dtl.Batch_No%Type        Default Null
                            ,P_I_Qty                      In Ias_Chk_Doc_Inout_Qty_Dtl.I_Qty%Type           Default Null
                            ,P_Barcode                    In Ias_Chk_Doc_Inout_Qty_Dtl.Barcode%Type         Default Null
                            ,P_Rcrd_No_Ref                In Ias_Chk_Doc_Inout_Qty_Dtl.Rcrd_No_Ref%Type     Default Null
                            ,P_Kit_Item_No                In Ias_Chk_Doc_Inout_Qty_Dtl.Kit_Item_No%Type     Default Null
                            ,P_Kit_Itm                    In Ias_Chk_Doc_Inout_Qty_Dtl.Kit_Itm%Type         Default Null                            
                            ,P_B_Code                     In Ias_Chk_Doc_Inout_Qty_Dtl.B_Code%Type          Default Null
                            ,P_KIT_ITM_UNT    In Ias_chk_doc_inout_qty_dtl.KIT_ITM_UNT%Type Default Null
                            ,P_KIT_P_SIZE     In Ias_chk_doc_inout_qty_dtl.KIT_P_SIZE%Type Default Null
                            ,P_DMG_FLG        In Ias_chk_doc_inout_qty_dtl.DMG_FLG%Type Default Null
                            ,P_Msg_Txt                    In Out Varchar2
                            ,P_Pkg_Line                   In Out Varchar2); 
--##-------------------------------------------------------------------------------------##--
Procedure Chk_Itm  ( P_I_Code                In Ias_Itm_Mst.I_Code%Type          
                    ,P_Itm_Unt               In Ias_Bill_Dtl.Itm_Unt%Type           
                    ,P_P_Size                In Out Ias_Bill_Dtl.P_Size%Type
                    ,P_I_Qty                 In Ias_Bill_Dtl.I_Qty%Type                     Default Null
                    ,P_Free_Qty              In Ias_Bill_Dtl.Free_Qty%Type                  Default Null                                     
                    ,P_W_Code                In Ias_Bill_Dtl.W_Code%Type                    Default Null
                    ,P_Expire_Date           In Ias_Bill_Dtl.Expire_Date%Type               Default Null
                    ,P_Batch_No              In Ias_Bill_Dtl.Batch_No%Type                  Default Null                                                                            
                    ,P_Chk_Avlqty_Flg        In Number                                       Default 0 
                    ,P_RESERVED              In Number                                       Default 0
                    ,P_RES_QTY               In Number                                       Default 0
                    ,p_B_CODE                In Varchar2  Default null
                    ,p_barcode               In Varchar2  Default null
                    ,P_Msg_Txt               In Out Varchar2
                    ,P_Pkg_Line              In Out Varchar2) ;
--##-------------------------------------------------------------------------------------##--
function Ftch_bin_data      ( P_barcode        In Varchar2 Default Null
                              ,P_w_code         In Warehouse_details.W_code%Type                                                           
                              ,P_f_b_code       In Varchar2 Default Null
                              ,P_lng_no         In Number Default Null  )Return Clob ;
--##-------------------------------------------------------------------------------------##--
Procedure Insrt_Inv_itm_bin_movmnt(
                               P_i_code         In Inv_itm_bin_movmnt.I_code%Type Default Null
                              ,P_itm_unt        In Inv_itm_bin_movmnt.Itm_unt%Type Default Null
                              ,P_p_size         In Inv_itm_bin_movmnt.P_size%Type Default Null
                              ,P_w_code         In Inv_itm_bin_movmnt.W_code%Type Default Null
                              ,P_expire_date    In Inv_itm_bin_movmnt.Expire_date%Type Default Null
                              ,P_batch_no       In Inv_itm_bin_movmnt.Batch_no%Type Default Null
                              ,P_i_qty          In Inv_itm_bin_movmnt.I_qty%Type Default Null
                              ,P_barcode        In Inv_itm_bin_movmnt.Barcode%Type Default Null                                                         
                              ,P_F_B_Code       In Inv_itm_bin_movmnt.B_code%Type Default Null
                              ,P_T_B_Code       In Inv_itm_bin_movmnt.B_code%Type Default Null 
                              ,P_ad_u_id        In Inv_itm_bin_movmnt.Ad_u_id%Type Default Null 
                              ,P_ad_trmnl_nm    In Inv_itm_bin_movmnt.Ad_trmnl_nm%Type Default Null                            
                              ,P_msg_txt        In Out Varchar2
                              ,P_pkg_line       In Out Varchar2 )  ; 
--##-------------------------------------------------------------------------------------##--                                                         
Procedure Chk_Insrt_Data ( P_Doc_Type     In Ias_Post_Mst.Doc_Type%Type,
                            P_Doc_Ser     In Ias_Post_Mst.Doc_Ser%Type,
                            P_Msg_Txt     In Out Varchar2,
                            P_Pkg_Line    In Out Varchar2 );
--##-----------------------------------------------------------------------------------------
Function   Get_comp_itm_qty(   P_icode          In Ias_itm_mst.I_code%Type
                              ,P_psize          In Number
                              ,P_wcode          In Warehouse_details.W_code%Type
                              ,P_doc_date       In Date Default Null
                              ,P_qty_typ        In Number   ---1 min_qty 2-- max_qty --3 AVL_QTY
                              ,P_tbl_nm         In Varchar2
                              ,P_whr            In Varchar2 Default Null )Return Number;
--##-------------------------------------------------------------------------------------##-- 
Function Get_avlqty_clssfctn(P_icode          In Varchar2
                            ,P_psize          In Number
                            ,P_wcode          In Number
                            ,P_Expdate        In Date     Default Null
                            ,P_Batchno        In Varchar2 Default Null
                            ,P_Idate          In Date     Default Null
                            ,P_barcode        In Varchar2 Default Null) Return Number;
--##-------------------------------------------------------------------------------------##-- 
Function Get_b_code(   P_icode          In Varchar2
                      ,P_psize          In Number Default 1
                      ,P_brcode         In Varchar2 Default Null
                      ,P_wcode          In Number
                      ,P_in_out         In Number )Return Char  ;
--##-------------------------------------------------------------------------------------##--                                              
Function   Get_doc_prprtn_sts(  P_DOC_TYPE          In Number
                               ,P_typ_no         In Number Default null )Return Number; 
--##-------------------------------------------------------------------------------------##-- 
Procedure Chk_doc_prprtn_sts(  P_Doc_Type_Ref   In Number
                              ,P_typ_no         In Number Default Null
                              ,P_Doc_Ser_Ref    In Number
                              ,P_lng_no         In Number Default Null
                              ,P_msg_txt        Out Varchar2 );
--##-------------------------------------------------------------------------------------##--
Procedure Get_Acc_Info(P_Doc_Type_Ref In Number, P_Doc_Ser_Ref In Number) ;
--##-------------------------------------------------------------------------------------##--
Procedure Updt_Doc_Prprtn(     P_Prss_Typ       IN NUMBER  -- 1 insert 2--DELETE 
                              ,P_Doc_Type_Ref   In Number
                              ,P_typ_no         In Number Default Null
                              ,P_Doc_Ser_Ref    In Number
                              ,P_Doc_type       In Number
                              ,P_Doc_Ser        In Number 
                              ,P_Doc_no         In Number );
--##-------------------------------------------------------------------------------------##-- 
                            
PROCEDURE CLR_GLBL_VAR;

--##-------------------------------------------------------------------------------------##--                            
End Ias_prprtn_trns_pkg;
/
CREATE PACKAGE Ias_Qt_Prm_Pkg AS
PROCEDURE Ias_Get_Qt_Prm  (   P_Date                    In  Date,
                              P_Bill_Ser                In  Number,
                              P_Icode                   In  Varchar2,
                              P_ItmUnt                  In  Varchar2,
                              P_Wcode                   In  Number,
                              P_Batch_No                In  Varchar2,
                              P_Exp_Date                In  Date,
                              P_Iqty                    In  Number,
                              P_IPrice                  In  Number,
                              P_Bill_Amt                In  Number,
                              P_Bill_Rate               In  Number,
                              P_Bill_Doc_Type           In  Number Default Null ,
                              P_C_Code                  In  Varchar2,
                              P_C_Group_Code            In  Number,
                              P_C_Class                 In  Number, 
                              P_C_Degree                In  Number,
                              P_C_Code_Csh              In  Varchar2,
                              P_Doc_Seq_Tmp             In  Number,
                              P_Qt_Prm_Type             Out Number,
                              P_Qt_Prm_Method           Out Number,
                              P_Qt_Prm_Itm_Type         Out Number,   
                              P_Qt_No                   Out Number,
                              P_Qt_Ser                  Out Number,
                              P_Qt_Icode                Out Varchar2,
                              P_Qt_Itm_Unt              Out Varchar2,
                              P_Qt_Rcrd_No              Out Number,
                              P_Dis_Per                 Out Number,
                              P_Dis_Amt                 Out Number,
                              P_Price                   Out Number,                              
                              P_Fqty                    Out Number,
                              P_Card_Amt                Out Number,
                              P_Qt_Rem_Qty              Out Number,                              
                              P_Apprvd_Freeqty_As_Dscnt Out Number,
                              P_No_Of_Dcml              In  Number)  ;
   PROCEDURE IAS_Calc_Quot_Prm_Prc ( P_Date          In Date , 
                                     P_Bill_Doc_Type IN NUMBER, 
                                     P_No_Of_Dcml    In Number) ;
   PROCEDURE IAS_Calc_Quot_Prm_Save_Prc ( P_Doc_Srl       In Number,
                                          P_Date          In Date , 
                                          P_Bill_Doc_Type IN NUMBER, 
                                          P_No_Of_Dcml    In Number) ;                                     
   FUNCTION  Ias_Get_Qt_Prm_Type ( P_Qt_Ser In  Number) RETURN Number;
   FUNCTION  Ias_Get_Qt_Prm_Method ( P_Qt_Ser In  Number) RETURN Number;                           
   FUNCTION  Ias_Get_Qt_Prm_Fqty ( P_Qt_Ser In  Number , P_Qt_Rcrd_No In  Number,P_Icode In Varchar2,P_Itm_Unt In Varchar2) RETURN Number ;
   FUNCTION  Chk_Qt_Prm_Disc ( P_Qt_Ser In  Number ) RETURN Number;
   FUNCTION  Chk_Qt_Prm_Free_Qty ( P_Qt_Ser In  Number ) RETURN Number;
   FUNCTION GET_QUOT_PRICE_FNC (P_BARCODE   IN   IAS_ITM_UNT_BARCODE.BARCODE%TYPE,P_NO_OF_DCML IN NUMBER DEFAULT 1) RETURN NUMBER ;
   PROCEDURE IAS_Clc_Qtn_Prm_Grp_Prc ( P_Date          In Date , 
                                       P_Bill_Doc_Type IN NUMBER,
                                       P_C_Code        In  Varchar2,
																			 P_C_Group_Code  In  Number,
																			 P_C_Class       In  Number, 
																			 P_C_Degree      In  Number, 
                                       P_No_Of_Dcml    In Number) ;
   PROCEDURE IAS_Clc_Qtn_Prm_Grp_Save_Prc ( P_Doc_Srl       In Number,
                                            P_Date          In Date , 
                                            P_Bill_Doc_Type IN NUMBER, 
                                            P_C_Code        In  Varchar2,
																						P_C_Group_Code  In  Number,
																						P_C_Class       In  Number, 
																						P_C_Degree      In  Number, 
                                            P_No_Of_Dcml    In Number) ;    
                                            
 FUNCTION Get_Qt_Price_Fnc ( P_Icode         In Varchar2,               -- ITEM_CODE
                            P_Itm_Unt        In Varchar2 Default Null,  -- ITEM_UNIT
                            P_Batch_No       In Varchar2 Default Null,  -- BATCH_NO
                            P_Exp_Date       In Date     Default Null,  -- EXPAIRE_DATE
                            P_Bill_Doc_Type  In Number   Default Null , -- PAYMENT_TYPE
                            P_Acy            In Varchar2,               -- INVOICE CURRENCY
                            P_Bill_Rate      In Number,                 -- CURRENCY_RATE
                            P_Date           In Date     Default Null , -- INVOICE DATE
                            P_No_Of_Dcml     In Number   Default 2,     -- NUMBER OF DECIMAL
                            P_Lev_No	       In Number,                 -- PRICE LEVEL NO
                            P_Wcode          In Number Default Null,    -- WAREHOUSE NO           -- IF PRICING BY W_CODE
                            P_Iqty           In Number Default Null,    -- ITEM QUANTITY           -- IF PRICING BY QUANTITY
                            P_Brn_No         In Number Default Null) RETURN NUMBER ;  --BRANCH NO -- IF PRICING BY BRANCH

PROCEDURE  Get_Prm_Grp_Icode ( P_Prm_Grp_No        In Ias_Qut_Prm_Grp_Mst.Prm_Grp_No%Type,
                               P_Grnt_Free_Qty_Typ In Ias_Qut_Prm_Grp_Mst.Grnt_Free_Qty_Typ%Type,
                               P_Qt_I_Code         In Out Ias_Qut_Prm_Dtl.Qt_I_Code%Type,                               
                               P_Qt_Itm_Unt        In Out Ias_Qut_Prm_Dtl.Qt_Itm_Unt%Type) ;
                                                                                                        
END Ias_Qt_Prm_Pkg;
/
CREATE Package IAS_Reevalution_Pkg Is
 --## Sale_Cost  
PROCEDURE Insrt_To_Sale_Cost  ( p_Cst           In Out NUMBER,
                                p_Cost_Type     In NUMBER,
                                P_Wtavg_Type    In NUMBER,
                                p_ICode         In Ias_Itm_Mst.I_CODE%TYPE ,
                                p_Iqty          In NUMBER,
                                p_Freeqty       In NUMBER,
                                p_Itm_Unt       In  Ias_Itm_Dtl.Itm_Unt%TYPE,
                                p_PSize         In NUMBER,
                                p_Barcode       In IAS_ITM_UNT_BARCODE.BARCODE%TYPE		Default Null,
                                p_WCode         In WAREHOUSE_DETAILS.W_CODE%TYPE,
                                p_DocType       In NUMBER,
                                p_DocNo         In NUMBER ,
                                p_BillDocType   In NUMBER,
                                p_cc_code       In COST_CENTERS.CC_CODE%TYPE		Default Null,
                                p_pj_no       	In IAS_PROJECTS.PJ_NO%TYPE 		  Default Null,
                                p_Actv_No       In IAS_ACTVTY.Actv_No%TYPE      Default Null,
                                p_RcrdNo        In NUMBER   Default Null,
                                p_ExpDate       In DATE     Default Null,
                                p_BatchNo       In VARCHAR2 Default Null,
                                p_DocSer        In NUMBER,
                                p_DocSeq        In NUMBER,
																p_idate         In DATE     Default null,
																p_vatamt        In NUMBER   Default 0,
																p_disamt        In NUMBER   Default 0,
																p_acy           In VARCHAR2 Default Null,
																p_ac_rate       In NUMBER ,
																p_stk_rate      In NUMBER ,
																p_c_code        In CUSTOMER.C_CODE%TYPE Default Null,
																p_v_code        In V_DETAILS.V_CODE%TYPE Default Null, 
																p_adesc         In VARCHAR2 Default Null,
																p_refno         In VARCHAR2 Default Null,
																p_outno         In NUMBER   Default Null,
																p_outgrser      In NUMBER   Default Null,
																p_inout         In NUMBER,
																p_iprice        In NUMBER   Default 0,
																p_rt_type       In NUMBER   Default Null,
																p_Extrnl_pst    In NUMBER   Default 0,
															  P_Itm_Length    In  NUMBER   Default Null,
																P_Itm_Width     In  NUMBER   Default Null,
																P_Itm_Height    In  NUMBER   Default Null,
																P_Itm_Number    In  NUMBER   Default Null,
																P_Wt_Qty	      In  NUMBER   Default Null, 
																P_Wt_Unt	      In  VARCHAR2 Default Null, 
																P_Argmnt_No	    In  NUMBER   Default Null, 															
																P_Doc_Seq_Gr    In NUMBER Default Null,
																P_Rec_No_Gr     In NUMBER Default Null,
																P_Itm_Cst_Gr    In NUMBER Default Null,
																p_ad_date       In DATE,
																p_up_date       In DATE,
																p_Brn_No        In NUMBER,
																p_Brn_Year      In NUMBER,
												        p_CMP_NO        In NUMBER,
												        p_BRN_USR       In NUMBER);
End IAS_Reevalution_Pkg ;
/
CREATE PACKAGE  Ias_Report_Pkg AS
G_REP_DAT   Varchar2(100);
G_Usr_Nm    Varchar2(100);
G_Usr_No    Number;
G_Doc_TYPE  Number;
G_Jv_TYPE   Number;
G_Doc_No    Number;
G_Doc_Ser   Number;
G_REP_NM    Varchar2(2000);
V_Rep_Nm    Varchar2(2000);
Str         varchar2(2000);
CNT         Number;
CmpAName    Varchar2(100);
CmpEName    Varchar2(100);
BAName      Varchar2(100);
BEAdd       Varchar2(100);
BAdd        Varchar2(100);
BEName      Varchar2(100);
BTele       Varchar2(40);
BFax        Varchar2(40);
BBox        Varchar2(40);
BETele      Varchar2(40);
BEFax       Varchar2(40);
BEBox       Varchar2(40);
BImg        Varchar2(30);
VwRep       Number:=0;
Prnt        Number:=0;
c_pl_name   constant varchar2(20) := 'TempData';
v_Synchrons varchar2(50):='SYNCHRONOUS';
CALL_BTN    Number:=1;
Hid_Cost 		Number:=1;  
V_ALLOW_SHOW_JRNL  Number:=0;--MRD
Hdr         varchar2(200);
G_Brn_No    Number;
G_Lang_No   Number;  

--=========================================================================================
    Function    Get_Rep_Para    (   P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
                                    P_Doc_TYPE   In  Number      Default Null,
                                    P_Jv_TYPE    In  Number      Default Null,
                                    P_Doc_No     In  Number      Default Null,
                                    P_Doc_Ser    In  Number      Default Null,
                                    USER_NO      In  Number      ,
                                    v_show_hdr   In  Number      ,
                                    Brn_No       In  Number      ,
                                    F_SYS_NO     In  Number      ,
                                    LANG_NO      In  Number      Default 1   ,
                                    P_DIR        In  Number      Default 1   ,
                                    P_FTR        In  VarChar2    Default Null,
                                    P_HDR        In  VarChar2    Default Null,
                                    P_VAR        In  VarChar2    Default Null,
                                    P_NUM        In  Number      Default Null,
                                    P_Gen_Inv    In  Number      Default 1   ,-- P_Gen_Inv :=  1 - General Doc Type , 2 - Inv Doc Type --
                                    P_Weher      In  VarChar2    Default Null,-- Condition Addition --
                                    P_REP_NM     In  VarChar2    Default Null,
                                    P_Tbl_Nm_Mst In  Varchar2    Default Null,
                                    P_Tbl_Nm_Dtl In  Varchar2    Default Null) RETURN VarChar2 ;
--=========================================================================================
    Function    Get_Priv_Rep_Para  (P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
                                    P_Doc_TYPE   In  Number      Default Null,
                                    P_Jv_TYPE    In  Number      Default Null,
                                    P_Doc_No     In  Number      Default Null,
                                    P_Doc_Ser    In  Number      Default Null,
                                    USER_NO      In  Number      ,
                                    v_show_hdr   In  Number      ,
                                    Brn_No       In  Number      ,
                                    F_SYS_NO     In  Number      ,
                                    LANG_NO      In  Number      Default 1   ,
                                    P_DIR        In  Number      Default 1   ,
                                    P_FTR        In  VarChar2    Default Null,
                                    P_HDR        In  VarChar2    Default Null,
                                    P_VAR        In  VarChar2    Default Null,
                                    P_NUM        In  Number      Default Null,
                                    P_Gen_Inv    In  Number      Default 1   ,-- P_Gen_Inv :=  1 - General Doc Type , 2 - Inv Doc Type --
                                    P_Weher      In  VarChar2    Default Null,-- Condition Addition --
                                    P_REP_NM     In  VarChar2    Default Null,
                                    P_ALLOW_REP  In  Out         Number      ,-- Mean 0 - Not Show Report But Show Msg In P_SHOW_MSG --
                                    P_SHOW_MSG   In  Out         VarChar2    ,
                                    P_Tbl_Nm_Mst In  Varchar2    Default Null,
                                    P_Tbl_Nm_Dtl In  Varchar2    Default Null) RETURN VarChar2 ;
--=========================================================================================
    PROCEDURE Get_Priv_Rep_Name ;                                    
--=========================================================================================
    PROCEDURE Get_Priv_Rep_Name_Inv ;                                    
--=========================================================================================
    PROCEDURE   Get_Rep_Head ;                                    
--=========================================================================================
    Function    Get_Tbl_Nm_Mst  ( P_Doc_Type In Number )  Return Varchar2  ;
--=========================================================================================
    Function    Get_Tbl_Nm_Mst_Inv  ( P_Doc_Type In Number )  Return Varchar2  ;                                                
--=========================================================================================
    Function    Get_Tbl_Nm_Dtl  ( P_Doc_Type In Number )  Return Varchar2 ;   
--=========================================================================================     
    Function    Get_Tbl_Nm_Dtl_Inv  ( P_Doc_Type In Number )  Return Varchar2 ;   
--=========================================================================================   
  Procedure Get_Clmn_Name(    P_Doc_Type      In  Out Number  ,
                                P_CLMN_DOC_NO   In  Out VarChar2,
                                P_CLMN_DOC_DATE In  Out VarChar2,
                                P_CLMN_JV_TYPE  In  Out VarChar2,
                                P_CLMN_Doc_Ser  In  Out VarChar2,
                                P_CLMN_Doc_Post In  Out VarChar2,
                                P_TABLE_NAME    In  Out VarChar2    ) ;
--========================================================================================= 
  Function    Get_Clmn_Labl(  P_TBLFLD_NAME   In  VarChar2    ,
                              LANG_NO         In  Number      Default 1   ) RETURN VarChar2 ;
--=========================================================================================
  Function    Get_Clmn_Type(  P_TBLFLD_NAME   In  VarChar2    ,
                              P_LENGTH        In  Out Number  ) RETURN VarChar2 ;
--=========================================================================================                               
                                
End Ias_Report_Pkg;
/
CREATE Package IAS_SMAN_PKG is
  FUNCTION Get_Sman_Name (P_Rep_Code In Sales_Man.Reprs_Code%Type,P_Lng_no In Number) RETURN VARCHAR2 ;
  FUNCTION  Chk_Sman_CrLmt ( P_Rep_Code In Sales_Man.Reprs_Code%Type , P_Lng_no In Number ) Return Varchar2;
  FUNCTION Get_Acode (P_Rep_code In SALES_MAN.Reprs_Code%TYPE) Return VARCHAR2 ;
  FUNCTION Get_AC_Code_DTL (P_Rep_code In SALES_MAN.Reprs_Code%TYPE) Return VARCHAR2 ;
End IAS_SMAN_PKG;
/
CREATE PACKAGE IAS_SMS_MAIL_PKG AS

G_Lng_No                      PLS_INTEGER; 
G_Usr_No                      PLS_INTEGER;
G_CMP_NO                      PLS_INTEGER; 
G_BRN_NO                      PLS_INTEGER;
G_BRN_USR                     PLS_INTEGER; 
G_BRN_YEAR                    PLS_INTEGER;
G_GET_ACCNT_ALRT              PLS_INTEGER;
G_GET_ACCNT_DTL_ALRT          PLS_INTEGER;
G_GET_DUE_CHQ_ALRT            PLS_INTEGER;
G_PRD_ALRT_PYMNT_DUE_CHQ      PLS_INTEGER;
G_PRD_ALRT_RCPT_DUE_CHQ       PLS_INTEGER;
G_HOUR_SEND_ACCNT_BLNC        PLS_INTEGER;
G_HOUR_SEND_CST_BLNC          PLS_INTEGER;
G_HOUR_SEND_CHQ_ALRT          PLS_INTEGER;

 PROCEDURE GET_PRMTR ( P_Lng_no      In Pls_Integer    DEFAULT NULL,
                       P_Usr_No      In Pls_Integer    DEFAULT NULL,
                       P_CMP_NO      IN  NUMBER DEFAULT NULL,
                       P_BRN_NO      IN  NUMBER DEFAULT NULL);
                       --P_BRN_USR     IN  NUMBER,
                       --P_BRN_YEAR    IN  NUMBER );
 --PROCEDURE CALL_PRC_BY_JOB ;              
 FUNCTION GET_MSG_TXT_FNC ( P_Slct_Sql In Varchar2, P_Lng_No In Number Default Null, P_Whr In Varchar2 Default Null) RETURN VARCHAR2;
 PROCEDURE INSRT_MSG_ALRT_PRC (   P_LNG_NO          IN  NUMBER         DEFAULT 1,
                                  P_MSG_MTHD_SEND   IN  NUMBER    DEFAULT 1,
                                  P_MSG_TYP         IN  NUMBER,
                                  P_MSG_TXT         IN  VARCHAR2,
                                  P_MOBILE_NO       IN  VARCHAR2  DEFAULT NULL,
                                  P_E_MAIL               IN  VARCHAR2  DEFAULT NULL,
                                  P_SUBJCT_MAIL          IN  VARCHAR2  DEFAULT NULL,
                                  P_DOC_TYP         IN  NUMBER    DEFAULT NULL,
                                  P_DOC_SRL         IN  NUMBER    DEFAULT NULL,
                                  P_AD_DATE         IN  DATE      DEFAULT SYSDATE,
                                  P_CMP_NO          IN  NUMBER    DEFAULT NULL,
                                  P_BRN_NO          IN  NUMBER    DEFAULT NULL,
                                  P_BRN_USR         IN  NUMBER    DEFAULT NULL,
                                  P_BRN_YEAR        IN  NUMBER    DEFAULT NULL);
 PROCEDURE CALL_DOC_ALRT_PRC ( P_DOC_SRL IN NUMBER);              
 PROCEDURE CHK_ACCNT_BLNC ;
 PROCEDURE CHK_ACCNT_MOVMNT ( P_A_CODE          IN VARCHAR2 , 
                              P_AMT             IN NUMBER, 
                              P_AMT_F      IN NUMBER        DEFAULT 0,
                              P_A_CY       IN VARCHAR2,
                              P_DOC_DSC    IN VARCHAR2  DEFAULT NULL,
                              P_DOC_PST    IN NUMBER    DEFAULT 1,
                              P_DOC_TYP       IN NUMBER    DEFAULT NULL,
                              P_DOC_SRL    IN NUMBER    DEFAULT NULL,
                              P_AD_DATE    IN DATE      DEFAULT NULL,
                              P_BRN_NO     IN NUMBER    DEFAULT NULL,
                              P_CMP_NO     IN NUMBER    DEFAULT NULL) ;

 PROCEDURE CHK_CSTMR_BLNC ;
 PROCEDURE CHK_CSTMR_MOVMNT ( P_C_CODE          IN VARCHAR2 , 
                              P_AMT             IN NUMBER, 
                              P_AMT_F      IN NUMBER        DEFAULT 0,
                              P_A_CY       IN VARCHAR2,
                              P_DOC_DSC    IN VARCHAR2  DEFAULT NULL,
                              P_DOC_PST    IN NUMBER    DEFAULT 1,
                              P_DOC_TYP       IN NUMBER    DEFAULT NULL,
                              P_DOC_SRL    IN NUMBER    DEFAULT NULL,
                              P_AD_DATE    IN DATE      DEFAULT NULL,
                              P_BRN_NO     IN NUMBER    DEFAULT NULL,
                              P_CMP_NO     IN NUMBER    DEFAULT NULL) ;

 PROCEDURE CHK_PYMNT_DUE_CHQ ;
 PROCEDURE INSRT_SO_ALRT  ( P_DOC_SRL IN NUMBER )  ;
 PROCEDURE INSRT_MNT_ALRT  ( P_DOC_SRL IN NUMBER )  ;
 PROCEDURE INSRT_OUT_BILL_ALRT  ( P_DOC_SRL IN NUMBER )  ;
 PROCEDURE CHK_CST_CR_LMT_PRC ; 
 PROCEDURE INSRT_SO_INSRNC_ALRT ( P_DOC_SRL IN NUMBER) ;
 PROCEDURE SND_ACCNT_MOVMNT_PST_PRC (   P_Doc_Type    In NUMBER , 
                                       P_Doc_Ser     In NUMBER ,                             
                                       P_Jv_Type     In NUMBER ,
                                       P_Doc_No      In NUMBER ,
                                       P_Doc_Date    In DATE ,                           
                                       P_Local_Cur   In VARCHAR2 ,
                                       P_Lang_No     IN NUMBER     DEFAULT 1,
                                       P_Cc_Code     IN VARCHAR2   DEFAULT NULL,
                                       P_Pj_No       IN VARCHAR2   DEFAULT NULL,
                                       P_Actv_No     IN VARCHAR2   DEFAULT NULL,
                                       P_W_Code      IN VARCHAR2   DEFAULT NULL,
                                       P_Doc_Desc    IN VARCHAR2   DEFAULT NULL,
                                       P_Ref_No      IN VARCHAR2   DEFAULT NULL,
                                       P_Doc_Ser_Ref In NUMBER     DEFAULT NULL,
                                       P_Ad_U_Id     In NUMBER       DEFAULT NULL,
                                       P_Post_U_Id   In NUMBER       DEFAULT NULL,
                                       P_Post_Type   In NUMBER     DEFAULT 0,                                                                                                                            
                                       P_Brn_No      In NUMBER ,
                                       P_Brn_Year    In NUMBER ,
                                       P_Cmp_No      In NUMBER ,
                                       P_Brn_Usr     In NUMBER ) ;
End IAS_SMS_MAIL_PKG;
/
CREATE PACKAGE IAS_Trns_Pkg Is

FUNCTION Get_Sordr_Resvd_Qty (P_i_code In Ias_Itm_Mst.I_CODE%TYPE,P_w_code In WAREHOUSE_DETAILS.W_CODE%TYPE,P_billDate In Date) Return Number;
PROCEDURE Update_Bill_Disc_Prc ( P_docser In Number, P_disc_type In Number) ;
PROCEDURE Update_RtBill_Disc_Prc ( P_docser In Number, P_disc_type In Number) ;
PROCEDURE Update_PiBill_Disc_Prc ( P_docser In Number, P_disc_type In Number) ;
PROCEDURE Calc_ChrgItm_SI_Prc  ( P_docser    In Number,
																 P_acy 	     In Varchar2,
																 P_billrate  In Number,
															   P_Sc_itm_type In Number,
															   P_Sc_wcode_type In Number,
															   P_c_code    In CUSTOMER.C_CODE%TYPE,
															   P_c_class   In Number,
															   P_si_type       In Number    ,
																 P_DOC_DATE		In Date	,
																 P_Use_Sc_Prd In Number Default 0,
																 P_DEC_NO    	In Number);
PROCEDURE Calc_ChrgItm_SR_Prc  ( P_docser    In Number,
																 P_acy 	     In Varchar2,
																 P_billrate  In Number,
															   P_Sc_itm_type In Number,
															   P_Sc_wcode_type In Number,
															   P_c_code    In CUSTOMER.C_CODE%TYPE,
															   P_c_class   In Number,
																 P_DOC_DATE		In Date	,
																 P_Use_Sc_Prd In Number Default 0,
																 P_DEC_NO    	In Number);
PROCEDURE Update_Othr_Chrg (P_bill_ser In Number ,P_Dec_No In Number);

Procedure Update_Bill_Add_Disc_Prc ( P_Bill_Ser      In Number, 
                                     P_Disc_Type   In Number,
                                     P_Doc_Ser     In Number,
                                     P_Doc_Seq     In Number Default Null,
                                     P_Op_type     In Varchar2  Default Null) ;
Procedure Update_PI_Bill_Add_Disc_Prc ( P_Docser      In Number, 
                                     P_Disc_Type   In Number,
                                     P_Doc_No      In Number,
                                     P_Doc_Seq     In Number Default Null,
                                     P_Op_type     In Varchar2  Default Null) ;


PROCEDURE Calc_Chrg_SI_B4save_Prc  (  P_acy 	    In Varchar2,
    								                  P_billrate  In Number,
    							                    P_Bill_Amt  In Number,
                                      P_Othr_Amt  In Out Number);
                                     
PROCEDURE Calc_ChrgItm_SI_B4save_Prc (  P_acy 			    In Varchar2,
        								                P_billrate 		  In Number,
        								                P_Sc_itm_type   In Number,
        								                P_Sc_wcode_type In Number,
        								                P_c_code 		    In CUSTOMER.C_CODE%TYPE,
        								                P_c_class       In Number	,
        								                P_si_type       In Number ,
        								                P_Dec_No    	  In Number,
                                        P_Icode   	    In Ias_Itm_Mst.I_Code%Type,
                                        P_Itm_Unt       In Ias_Itm_Dtl.Itm_Unt%Type,
                                        P_Wcode    	    In Number,
                                        P_Iqty    	    In Number,
                                        P_Fqty    	    In Number,
                                        P_Iprice        In Number,
                                        P_Disc_Amt 	    In Number,
                                        P_Vat_Amt  	    In Number,
                                        P_Othr_Amt      In Out Number,
                                        P_Doc_Date		  In Date	,
                                        P_Use_Sc_Prd    In Number Default 0);

PROCEDURE Update_RtBill_Rq_Disc_Prc (P_docser In Number, P_disc_type In Number) ;  

PROCEDURE Calc_ChrgItm_Sr_Rq_Prc (  P_docser          In Number,
	                                  P_acy             In Varchar2,
	                                  P_billrate        In Number,
	                                  P_Sc_itm_type     In Number,
	                                  P_Sc_wcode_type   In Number,
	                                  P_c_code          In CUSTOMER.C_CODE%TYPE,
	                                  P_c_class         In Number,
	                                  P_Doc_Date        In Date,
	                                  P_Use_Sc_Prd      In Number Default 0,
	                                  P_DEC_NO          In Number);
PROCEDURE Calc_ChrgItm_Qt_Prc ( P_docser           In Number,
                                P_acy              In Varchar2,
                                P_billrate         In Number,
                                P_Sc_itm_type      In Number,
                                P_Sc_wcode_type    In Number,
                                P_c_code           In CUSTOMER.C_CODE%TYPE,
                                P_c_class          In Number    ,
                                P_si_type          In Number,
                                P_Doc_Date         In Date    ,
                                P_Use_Sc_Prd       In Number Default 0,
                                P_DEC_NO           In Number    ) ;			                                               
PROCEDURE Update_Othr_Chrg_Qt (P_Quot_ser In Number ,P_Dec_No In Number);
PROCEDURE Calc_ChrgItm_So_Prc ( P_docser           In Number,
                                P_acy              In Varchar2,
                                P_billrate         In Number,
                                P_Sc_itm_type      In Number,
                                P_Sc_wcode_type    In Number,
                                P_c_code           In CUSTOMER.C_CODE%TYPE,
                                P_c_class          In Number    ,
                                P_si_type          In Number,
                                P_Doc_Date         In Date    ,
                                P_Use_Sc_Prd       In Number Default 0,
                                P_DEC_NO           In Number    ) ;			                                               
PROCEDURE Update_Othr_Chrg_So (P_Order_ser In Number ,P_Dec_No In Number);
PROCEDURE Update_Qt_Disc_Prc (P_docser In Number, P_disc_type In Number);
PROCEDURE Update_So_Disc_Prc (P_docser In Number, P_disc_type In Number);
PROCEDURE Insrt_Bill_Dtl_Tmp_Prc(  P_Doc_M_Sq            In  Ias_Bill_Mst.Doc_M_Sq%Type
                                 , P_doc_type            In  Number                               Default Null
                                 , P_Bill_No             In  Ias_Bill_Mst.Bill_No%Type            Default Null
                                 , P_Bill_Date           In  Ias_Bill_Mst.Bill_Date%Type          Default Null     
                                 , P_C_Code              In  Ias_Bill_Mst.C_Code%Type             Default Null      
                                 , P_C_Name              In  Ias_Bill_Mst.C_Name%Type             Default Null 
                                 , P_A_Desc              In  Ias_Bill_Mst.A_Desc%Type             Default Null
                                 , P_I_Code              In  Ias_Bill_Dtl.I_Code%Type             Default Null      
                                 , P_Itm_Unt             In  Ias_Bill_Dtl.Itm_Unt%Type            Default Null
                                 , P_Psize               In  Ias_Bill_Dtl.P_Size%Type             Default Null 
                                 , P_W_Code              In  Ias_Bill_Dtl.W_Code%Type             Default Null 
                                 , P_Expire_Date         In  Ias_Bill_Dtl.Expire_Date%Type        Default Null      
                                 , P_Batch_No            In  Ias_Bill_Dtl.Batch_No%Type           Default Null   
                                 , P_Wt_Unt              In  Ias_Bill_Dtl.Wt_Unt%Type             Default Null   
                                 , P_Wt_Qty              In  Ias_Bill_Dtl.Wt_Qty%Type             Default Null   
                                 , P_Argmnt_No           In  Ias_Bill_Dtl.Argmnt_No%Type          Default Null
                                 , P_I_Length            In  Ias_Bill_Dtl.I_Length%Type           Default Null     
                                 , P_I_Width             In  Ias_Bill_Dtl.I_Width%Type            Default Null      
                                 , P_I_Height            In  Ias_Bill_Dtl.I_Height%Type           Default Null      
                                 , P_I_Number            In  Ias_Bill_Dtl.I_Number%Type           Default Null
                                 , P_Measur_Price        In  Ias_Bill_Dtl.Measur_Price%Type       Default Null  
                                 , P_I_Qty               In  Ias_Bill_Dtl.I_Qty%Type              Default Null
                                 , P_Free_Qty            In  Ias_Bill_Dtl.Free_Qty%Type           Default Null
                                 , P_Lev_No              In  Ias_Bill_Dtl.Lev_No%Type             Default Null 
                                 , P_I_Price             In  Ias_Bill_Dtl.I_Price%Type            Default Null     
                                 , P_I_Price_Vat         In  Ias_Bill_Dtl.I_Price_Vat%Type        Default Null     
                                 , P_Dis_Per             In  Ias_Bill_Dtl.Dis_Per%Type            Default Null  
                                 , P_Dis_Amt_Dtl         In  Ias_Bill_Dtl.Dis_Amt_Dtl%Type        Default Null
                                 , P_Dis_Amt_Dtl_Vat     In  Ias_Bill_Dtl.Dis_Amt_Dtl_Vat%Type    Default Null
                                 , P_Dis_Per2            In  Ias_Bill_Dtl.Dis_Per2%Type           Default Null  
                                 , P_Dis_Amt_Dtl2        In  Ias_Bill_Dtl.Dis_Amt_Dtl2%Type       Default Null
                                 , P_Dis_Amt_Dtl2_Vat    In  Ias_Bill_Dtl.Dis_Amt_Dtl2_Vat%Type   Default Null
                                 , P_Dis_Per3            In  Ias_Bill_Dtl.Dis_Per3%Type           Default Null  
                                 , P_Dis_Amt_Dtl3        In  Ias_Bill_Dtl.Dis_Amt_Dtl3%Type       Default Null
                                 , P_Dis_Amt_Dtl3_Vat    In  Ias_Bill_Dtl.Dis_Amt_Dtl3_Vat%Type   Default Null
                                 , P_Cc_Code             In  Ias_Bill_Dtl.Cc_Code%Type            Default Null    
                                 , P_Pj_No               In  Ias_Bill_Dtl.Pj_No%Type              Default Null     
                                 , P_Actv_No             In  Ias_Bill_Dtl.Actv_No%Type            Default Null
                                 , P_Emp_No              In  Ias_Bill_Dtl.Emp_No%Type             Default Null      
                                  ,P_Item_Desc           In  Ias_Bill_Dtl.Item_Desc%Type          Default Null   
                                 , P_Barcode             In  Ias_Bill_Dtl.Barcode%Type            Default Null   
                                 , P_Rcrd_No             In  Ias_Bill_Dtl.Rcrd_No%Type            Default Null
                                 , P_Brn_No              In  Ias_Bill_Dtl.Brn_No%Type             Default Null 
                                 , P_Ad_U_Id             In  Ias_Bill_Mst.Ad_U_Id%Type            Default Null
                                 , P_Ad_Date             In  Ias_Bill_Mst.Ad_Date%Type            Default Null
                                 , P_Ad_Trmnl_Nm         In  Ias_Bill_Mst.Ad_Trmnl_Nm%Type        Default Null
                                 , P_Doc_D_Sq            In  Ias_Bill_Dtl.Doc_Sequence%Type       Default Null                                                         
                                 , P_Field_Dtl1          In  Ias_Bill_Dtl.Field_Dtl1%Type         Default Null   
                                 , P_Field_Dtl2          In  Ias_Bill_Dtl.Field_Dtl2%Type         Default Null   
                                 , P_Field_Dtl3          In  Ias_Bill_Dtl.Field_Dtl3%Type         Default Null   
                                 , P_Field_Dtl4          In  Ias_Bill_Dtl.Field_Dtl4%Type         Default Null   
                                 , P_Doc_Type_Ref        In  Ias_Bill_Dtl.Doc_Type_Ref%Type       Default Null  
                                 , P_Doc_No_Ref          In  Ias_Bill_Dtl.Doc_No_Ref%Type         Default Null    
                                 , P_Doc_Ser_Ref         In  Ias_Bill_Dtl.Doc_Ser_Ref%Type        Default Null                                                      
                                 , P_Doc_Seq_Tmp         In  Ias_Bill_Dtl.Doc_Seq_Tmp%Type        Default Null
                                 , P_Reserved            In  Order_detail.Reserved%Type           Default Null
                                 , P_Res_date            In  Order_detail.Res_date%Type           Default Null
                                 , P_Trns_Typ            In  Char -- 'I'=Insert   'D'=Delete 
                                 );	                                  
Function Get_Rsrv_Qty_Bill_BkTmp ( P_Doc_Typ      In Number,
                                   P_I_Code       In  Ias_Bill_Dtl.I_Code%Type             
                                 , P_Psize        In  Ias_Bill_Dtl.P_Size%Type        
                                 , P_W_Code       In  Ias_Bill_Dtl.W_Code%Type        
                                 , P_Expire_Date  In  Ias_Bill_Dtl.Expire_Date%Type        
                                 , P_Batch_No     In  Ias_Bill_Dtl.Batch_No%Type   
                                 , P_Doc_M_Sq     In  Ias_Bill_Mst.Doc_M_Sq%Type 
                                 , P_Doc_Seq_Tmp  In  Ias_Bill_Dtl.Doc_Seq_Tmp%Type)  Return Number ;
Function Get_Itm_Disc_Avg_Ap ( P_I_Code     In Ias_Itm_Mst.I_Code%Type    ,
                               P_Itm_Unt    In Ias_Itm_Dtl.Itm_Unt%Type   ,
                               P_Psize      In Ias_Itm_Dtl.P_Size %Type   ,
                               P_Doc_Date   In Ias_Bill_Mst.Bill_Date%Type,
                               P_Disc_Typ   In Number   Default  1        ) Return Number;	                                  
                 
PROCEDURE Upd_Order_Stat (  P_Ordr_Stat_Typ In Sales_Order.Ordr_Stat_Typ%Type,
                            P_Order_Ser   In Sales_Order.Order_Ser%Type,
                            P_Doc_Typ     In Number Default Null,
                            P_Doc_Ser     In Sales_Order.Order_Ser%Type Default Null,
                            P_Del_Flg     In Number   Default 0);
PROCEDURE Upd_Bill_Stat ( P_Bill_Stat_Typ In Ias_Bill_Mst.Bill_Stat_Typ%Type,
                          P_Bill_Ser      In Ias_Bill_Mst.Bill_Ser%Type,
                          P_Doc_Ser       In Ias_Bill_Mst.Bill_Ser%Type Default Null,
                          P_Del_Flg     In Number   Default 0    );                  
End IAS_Trns_Pkg;
/
CREATE PACKAGE IAS_Usr_Pkg as
 FUNCTION Get_Usr_Nm ( P_Usr_No In USER_R.U_ID%TYPE,P_Lng_no In Number Default 1 ) Return VARCHAR2;
 FUNCTION Get_Usr_St (P_Usr_No In USER_R.U_ID%TYPE) Return NUMBER;
 FUNCTION Get_Usr_Def_Val ( P_Usr_No In USER_R.U_ID%TYPE , P_Def_Type In Varchar2) Return VARCHAR2;
 FUNCTION Get_Usr_Def_Rep ( P_Usr_No In USER_R.U_ID%TYPE , P_Form_no In FORM_DETAIL.FORM_NO%TYPE ) Return NUMBER;
 FUNCTION Chk_Usr_Frm_Prv (P_UserNo In Number , P_Frm_no In Number, P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Ac_Prv (P_UserNo In Number , P_a_code In VARCHAR2,  P_a_cy In VARCHAR2,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Cc_Prv (P_UserNo In Number , P_cc_code In VARCHAR2, P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Pj_Prv (P_UserNo In Number , P_Pj_No In VARCHAR2,P_Priv_Type In Varchar2)  RETURN NUMBER;
 FUNCTION Chk_Usr_Actv_Prv(P_UserNo In Number , P_ACTV_No In VARCHAR2,P_Priv_Type In Varchar2)  RETURN NUMBER;
 FUNCTION Chk_Usr_CB_Prv (P_UserNo In Number , P_Cb_Type In Number ,P_Cb_No In Number, P_a_cy In Varchar2,P_Priv_Type In Varchar2)  RETURN NUMBER;
 FUNCTION Chk_Usr_Cst_Prv (P_UserNo In Number , P_c_code In VARCHAR2,  P_a_cy In VARCHAR2,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Vndr_Prv(P_UserNo In Number , P_v_code In VARCHAR2,  P_a_cy In VARCHAR2,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Wc_Prv (P_UserNo In Number , P_w_code In NUMBER, P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Gc_Prv (P_UserNo In Number , P_G_code In Varchar2,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Show_Prv(P_UserNo In Number ,P_T_U_ID In NUMBER)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Brn_Prv (P_UserNo In Number , P_Brn_No In Number,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_SMan_Prv (P_UserNo In Number ,P_Rep_code In VARCHAR2,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_COLL_Prv (P_UserNo In Number ,P_COL_NO In NUMBER,P_Priv_Type In Varchar2)  RETURN NUMBER ; 
 FUNCTION CHK_USR ( P_USR_NO IN USER_R.U_ID%TYPE,P_PASSWORD IN VARCHAR2 ,P_LNG_NO IN NUMBER DEFAULT 1) RETURN VARCHAR2 ;
                          
 FUNCTION  Get_Usr_Apprv ( P_Usr_No In Number , 
                           P_Doc_Typ In Number,
                           P_Typ_NO In Number Default Null,
                           P_Doc_Amt In Number Default Null )  Return Number ;
                           
 FUNCTION Chk_Usr_Bnf_Brn_Prv (P_UserNo In Number , P_Brn_No In Number,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION GET_USR_CSHNO (P_USR_NO IN USER_R.U_ID%TYPE) RETURN VARCHAR2;                          

 Function  Chk_Usr_DocAmt_Apprv ( P_Usr_No In Number , 
                                  P_Doc_Typ In Number,
                                  P_Typ_NO In Number Default Null,
                                  P_Doc_Amt In Number ) Return number  ;
                                  
 FUNCTION Chk_Pass_Complxty ( P_Pass       varchar2,
                             P_Min_len    integer Default 1,                 
                             P_letter     integer Default 0,
                             P_upper      integer Default 0,
                             P_lower      integer Default 0,
                             P_Digit      integer Default 0,
                             P_Special    integer Default 0) RETURN Number;
End IAS_Usr_Pkg;
/
CREATE PACKAGE IAS_Vndr_Pkg as
 V_Lang_No     Pls_Integer;
 V_User_No     Pls_Integer;
 --======================================================================
 PROCEDURE Get_Para (P_Lang_no In Pls_Integer Default 1,P_User_No In Pls_Integer);
 FUNCTION Get_One_CC_Vnd(P_v_code In V_DETAILS.V_CODE%TYPE,P_Usr_no In Number) return VARCHAR2;
 FUNCTION Get_Cnt_Acy (P_v_code In V_DETAILS.V_CODE%TYPE,P_Usr_No   In Number) return Number;
 FUNCTION Get_One_Acy_Vnd (P_v_code In V_DETAILS.V_CODE%TYPE,P_Usr_no In Number) Return VARCHAR2;
 FUNCTION Get_Acode  (P_v_code In V_DETAILS.V_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_v_code (P_a_code In ACCOUNT.A_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_v_Name (P_v_code In V_DETAILS.V_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2;
 FUNCTION Get_v_code_By_Nm (P_v_nm In V_DETAILS.V_A_NAME%TYPE) RETURN VARCHAR2 ;
 FUNCTION Check_Acy  (P_v_code In V_DETAILS.V_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number;
 Function Get_Vndr_For_Itm (P_I_Code In Ias_Itm_Mst.I_Code%Type,P_V_Code In Varchar2 Default Null) Return Varchar2 ;

 PROCEDURE Chk_V_code (  P_V_Code     IN V_DETAILS.V_CODE%TYPE,
	                       P_Ac_Code    IN ACCOUNT.A_CODE%TYPE,
	                       P_Apalt      IN NUMBER,                       
	                       P_Vnd_Nm     IN Out ACCOUNT.A_NAME%TYPE,
	                       P_Ac_Dtl_Typ IN Out ACCOUNT.Ac_Dtl_Typ%TYPE,
	                       P_Lng_No     IN LANG_DEF.LANG_NO%TYPE,
	                       P_Usr_No     IN USER_R.U_ID%TYPE,
	                       P_Scr_Typ    IN NUMBER DEFAULT 1,
	                       P_Msg_No     IN Out NUMBER  );

PROCEDURE Ias_Insrt_Vndr_Itm ( P_icode    In Varchar2   ,
                               P_Vcode    In Varchar2   , 
                               P_ICost    In Number     ,
                               P_Acy      In Varchar2   ,
                               P_Conn_Itm_Wth_More_Vndr In Number,
                               P_AUTO_UPDATE_VNDR_PRICE In Number,
                               P_Price_Vndr_Itm_Unt_Typ In Number     ,
                               P_ITM_UNT  In Ias_Itm_Dtl.Itm_Unt%TYPE  ,
                               P_p_size   In Number     ,
                               P_ad_u_id  In Number     , 
                               P_ad_date  In Date       ,     
                               P_up_u_id  In Number  Default null , 
                               P_up_date  In Date    Default null);    
                       
End IAS_Vndr_Pkg;
/
CREATE PACKAGE IAS_Wcode_Pkg as
 FUNCTION Get_Wc_Nm  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2;
 FUNCTION Get_Wc_St  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER;
 FUNCTION Get_Wc_Ser ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER;
 FUNCTION Get_Wc_cc  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_Wc_Brn ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE ) Return NUMBER ;
 
 FUNCTION Chk_Wc_Brn ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE, P_BRN_NO In S_BRN.BRN_NO%TYPE ) Return NUMBER;
 Function Get_Whg_Code  ( P_W_Code In Warehouse_Details.W_Code%Type ) Return Number ;
 
End IAS_Wcode_Pkg;
/
CREATE PACKAGE IAS_Web_Pkg as
 FUNCTION Get_indctr_gen( p_indctr_type in number , 
                          p_doc_post in number default 1,
                          P_BRN_NO IN NUMBER DEFAULT NULL ) RETURN NUMBER ;
 FUNCTION Chk_Msg_Usr(P_Usr_No USER_R.U_ID%TYPE) RETURN NUMBER;
 PROCEDURE Insrt_Msg_Usr( P_F_Usr_No  In USER_R.U_ID%TYPE ,
                          P_T_Usr_No  In USER_R.U_ID%TYPE ,
                          P_MSG_SUB   In IAS_MSG_USER.MSG_SUB%TYPE ,
                          P_MSG_TXT   In IAS_MSG_USER.MSG_TXT%TYPE ,
                          P_Brn_no    In S_BRN.BRN_NO%TYPE,
                          P_Brn_Year  In S_BRN.BRN_YEAR%TYPE,
                          P_Brn_Usr   In S_BRN.BRN_USR%TYPE) ; 
End IAS_Web_Pkg;
/
CREATE PACKAGE Ias_Web_Srvc_Pkg As

 --======================================================================
 TYPE TRNS_CV IS REF CURSOR ;
 
PROCEDURE SHW_ITM_DOC_PRPRTN ( SQL_CV     IN OUT TRNS_CV
                              ,P_DOC_TYPE  IN NUMBER
                              ,P_DOC_SER   IN NUMBER,
                               P_LNG       IN NUMBER) ;
--##----------------------------------------------------------------------------------------##-- 
Function Get_Auto_Xml( P_DOC_TYPE  IN NUMBER,
                       P_DOC_SER   IN NUMBER, 
                       P_LNG       IN NUMBER,
                       P_ICOD      IN Varchar2 ) Return Varchar2  ;  
Function  Insrt_Web_Srvc(P_Url  In Varchar2 ,P_V_Content In Varchar2  ) Return Varchar ;

--##----------General Web Service Calling and KNAWAT Implementation

--##Types Decclarations
type http_hdr is record (
    header_attr varchar2(1000),
    header_value varchar2(1000)
  );
  
type http_hdr_tbl is table of http_hdr;
--##End Type Declarations


--##Web Service Calling procedures

procedure Call_Web_Service_char(p_url     varchar2,
                  p_method  varchar2 default 'GET',
                  p_content_type varchar2,
                  p_content clob,
                  p_response_text out varchar2,
                  p_http_rspons_code out number,
                  p_wallet_path varchar2,
                  p_wallet_pwd varchar2,
                  p_username varchar2 default null,
                  p_password  varchar2 default null,
                  p_token varchar2 default null
                  );
                  
procedure Call_Web_Service_blob(p_url     varchar2,
                  p_method  varchar2 default 'GET',
                  p_content_type varchar2,
                  p_content clob,
                  p_response_blob out blob,
                  p_http_rspons_code out number,
                  p_wallet_path varchar2,
                  p_wallet_pwd varchar2,
                  p_username varchar2 default null,
                  p_password  varchar2 default null,
                  p_token varchar2 default null
                  );
                  
procedure Call_Web_Srvc_Ovr_Prxy_Srvc(p_url     varchar2,
                  p_method  varchar2 default 'GET',
                  p_content_type varchar2,
                  p_header http_hdr_tbl,
                  p_content clob,
                  p_response_txt out clob,
                  p_http_rspons_code out number,
                  p_username varchar2 default null,
                  p_password  varchar2 default null,
                  p_prxy_srvc_url varchar2 default null); 
                   
function call_gnr_web_srvc( p_doc_type number,
                            p_doc_ser  number,
                            p_lng_no   number,
                            p_srvc_no number,
                            p_prxy_srvc_url varchar2 default null,
                            p_url_para varchar2) return boolean;
                            
function call_gnr_web_srvc( p_srvc_no number,
                            p_whr varchar2,
                            p_prxy_srvc_url varchar2 default null,
                            p_header http_hdr_tbl default null,
                            p_url_para varchar2) return boolean;
                            
--##End Web Service Call Procedures

--##Request Body Procedure -- Josn Construction
function Bld_Rqust_body_json(p_srvc_no number,
                                 P_WHR VARCHAR2) return clob;
                                 
--##end Request Body Procedure -- Josn Construction


--##Knawat Integration Implementation
function Knawat_GET_Token(p_sys_no number) return varchar2;

procedure Knawat_Add_Item(   p_sys_no number,
                                P_I_CODE VARCHAR2,
                                P_ITM_UNT VARCHAR2,
                                P_W_CODE NUMBER,
                                P_AVL_QTY NUMBER,
                                P_I_PRICE NUMBER,
                                p_call_src varchar2,
                                p_success out boolean);

procedure Knawat_Update_Items   (p_sys_no number,
                                 p_success out boolean );
                                
procedure Knawat_Update_Item(   p_sys_no number,
                                P_I_CODE VARCHAR2,
                                P_ITM_UNT VARCHAR2,
                                P_W_CODE NUMBER,
                                P_AVL_QTY NUMBER,
                                P_I_PRICE NUMBER,
                                p_call_src varchar2,
                                p_success out boolean);
                                
--##Knawat Integration Implementation

--##Utilites
procedure Log_Api_Call( p_f_sys_no number,
                        p_url varchar2,
                        p_call_src varchar2,
                        p_rqust_body clob,
                        p_rspns_body clob,
                        p_http_code number);
FUNCTION blob_to_clob (p_data  IN  BLOB) RETURN CLOB;
FUNCTION Convert_Json_Array_Into_Object(p_obj sys.pljson,
                                        p_path varchar2) RETURN SYS.PLJSON;
--End Utilites
--##----------------------------------------------------------------------------------------##--                                                                             
End Ias_Web_Srvc_Pkg;
/
CREATE PACKAGE Ias_Weight_Sys_Pkg IS

 Function Get_Argmnt_NO ( P_Itm_Code   In Ias_Itm_Mst.I_Code%Type ,
                          P_Itm_Wt_Unt In Ias_Conn_Itm_Msur_Unt.Msur_Wt_Code%Type,
                          P_Itm_Unt    In Ias_Conn_Itm_Msur_Unt.Msur_Qty_Code%Type ) Return Number ;
                            
        
  Function Get_Arg_Unt ( P_Icode   In Ias_Itm_Mst.I_Code%Type ,
                                    P_Wt_Unit  In Ias_Conn_Itm_Msur_Unt.Msur_Wt_Code%Type,
                                    P_Qty_Unit In Ias_Conn_Itm_Msur_Unt.Msur_Qty_Code%Type ,
                                    P_Wt_Qty In Number,
                                    P_I_Qty  In Number,
                                    P_Argmnt_No In Number  ) Return Number; 
                                    
  Function Get_Use_Frct_Qty_Unt ( P_Icode    In Ias_Itm_Mst.I_Code%Type ,
                                  P_Wt_Unit  In Ias_Conn_Itm_Msur_Unt.Msur_Wt_Code%Type ,
                                  P_Qty_Unit In Ias_Conn_Itm_Msur_Unt.Msur_Qty_Code%Type ) Return Number ;                                        

  Function Calc_Area_Size_Prc ( P_Inpt_Unt_Factor_Wt In Number  ,
                                 P_Argmnt_Type        In Number  ,
                                 P_Length             In Number  ,
                                 P_Width              In Number  ,
                                 P_Height             In Number  ,
                                 P_Number             In Number  ) Return Number ;

  Function Get_Min_Unt ( P_Icode     In Ias_Itm_Mst.I_Code%Type  ) Return Varchar2 ;

  Function Is_Argmnt_No_Upd ( P_Itm_Code   In Ias_Itm_Mst.I_Code%Type ,
                              P_Itm_Wt_Unt In Ias_Conn_Itm_Msur_Unt.Msur_Wt_Code%Type,
                              P_Itm_Unt    In Ias_Conn_Itm_Msur_Unt.Msur_Qty_Code%Type ) Return Number ;  
                                   
                                                                                                                                                         
END Ias_Weight_Sys_Pkg;
/
CREATE Package  Inv_Api_Trns_Pkg
Is
   G_Lng_No                      Ias_Sys.Lang_Def.Lang_No%Type;
   G_Sys_No                      Number;
   G_Lng_Dflt                    Ias_Sys.Lang_Def.Lang_Dflt%Type;
   G_Usr_No                      User_R.U_Id%Type;
   G_Loc_Cur_Code                Ex_Rate.Cur_Code%Type;
   G_Cur_Code                    Ex_Rate.Cur_Code%Type;
   G_Cur_Rate                    Ex_Rate.Cur_Rate%Type;
   G_Stk_Cur_Code                Ex_Rate.Cur_Code%Type := Ias_Gen_Pkg.Get_Stk_Cur;
   G_Stk_Rate                    Ex_Rate.Cur_Rate%Type := Ias_Gen_Pkg.Get_Cur_Rate (P_Acy => G_Stk_Cur_Code);
   G_Brn_Usr                     Ias_Post_Mst.Brn_Usr%Type;
   G_Brn_Year                    Ias_Post_Mst.Brn_Year%Type;
   G_Brn_No                      Ias_Post_Mst.Brn_No%Type;
   G_Doc_Brn_No                  Ias_Post_Mst.Brn_No%Type;
   G_Cmp_No                      Ias_Post_Mst.Cmp_No%Type;
   G_Doc_Typ                     Ias_Post_Mst.Doc_Type%Type;
   G_Doc_Ser                     Ias_Post_Mst.Doc_Ser%Type;
   G_F_Tr_Ser                    Ias_Post_Mst.Doc_Ser%Type;
   G_Doc_No                      Ias_Post_Mst.Doc_No%Type;
   G_F_Tr_No                     Ias_Post_Mst.Doc_No%Type;
   G_Tr_Cost_Type                Number (2);
   G_Tr_Inout_Type               Number (2);
   G_Use_Price_Whtrns_Rec_Cost   Ias_Para_Inv.Use_Price_Whtrns_Rec_Cost%Type;
   G_Allow_Enter_Zero_Cost       Number (2);
   G_Typ_No                      Number;
   G_Tax_No                      Gnr_Tax_Code_Mst.Tax_No%Type;
   G_P_Year                      Ias_Rt_Bill_Mst.P_Year%Type;
   G_Clc_Typ_No_Tax              Gnr_Tax_Typ_Clc_Mst.Clc_Typ_No%Type;
   G_Calc_Vat_Amt_Type           Number (5);
   G_Driver_No                   Ias_Whtrns_Mst.Driver_No%Type;
   G_Ad_Date                     Date;
   G_Ad_U_Id                     User_R.U_Id%Type;
   G_Ad_Trmnl_Nm                 Ias_Post_Mst.Ad_Trmnl_Nm%Type;
   G_W_Code                      Warehouse_Details.W_Code%Type;
   G_F_W_Code                    Warehouse_Details.W_Code%Type;
   G_T_W_Code                    Warehouse_Details.W_Code%Type;
   G_Doc_Date                    Date;
   G_Jv_Type                     Ias_Post_Mst.Jv_Type%Type;
   G_No_Of_Decimal_Inv           Number (5);
   G_Use_Vat                     Number (1);
   G_Use_Price_Include_Vat       Number (1);
   G_Item_Posting_Flag           Number;
   G_Ar_Wc_Type                  Number (5);
   G_Use_Out_Bills               Number (1);
   G_Add_Porder_Qty              Number (5);
   G_Cc_Avail                    Number (5);
   G_Use_Projects                Number (5);
   G_Use_Actvty                  Number (5);
   G_Aralt                       Number;
   G_Apalt                       Number;
   G_Costing_Type                Number (2);
   G_Wtavg_Type                  Number (2);
   G_Tr_Cst_Type                 Number (5);
   G_Tr_Pj_Type                  Number (5);
   G_Tr_Actv_Type                Number (5);
   G_Ar_Sorder_Serial            Ias_Para_Ar.Ar_Sorder_Serial%Type;
   G_Doc_Gen_Inv                 Ias_Para_Inv.Doc_Gen_Inv%Type;
   G_Disc_Count                  Number (1);
   G_Show_Disc_Per_Items_Ar      Number (1);
   G_Max_Prd_Exp_Date_So_Day     Number (5);
   G_Inv_Use_Wght_Sys            Number (5);
   G_Inv_Msur_Argmnt_Typ         Number (5);
   G_Inv_Argmnt_Fctr             Number (5);
   G_Check_Lmt_Sorder            Number (1);
   G_Max_Prd_Exp_Date_Quot_Day   Number (5);
   G_Inv_Itm_Cst_Typ             Number (5);
   G_Si_Repcode_Mandtry          Number (1);
   G_Stkcost_Fraction            Number (5);
   G_Use_Out_Bill_Direct         Number (5);
   G_Clc_Tax_Dscnt2              Number (5);
   G_Clc_Tax_Dscnt3              Number (5);
   G_P_Rate_Type                 Number (5);
   G_Roi_Type                    Number (5);
   G_Use_Billno_Rtsale_Py        Number (5);
   G_External_Post               Ias_Bill_Mst.External_Post%Type;
   ---G_INV_SHW_ARGMNT_NO_IN_TRNS   NUMBER(5);
   G_Cc_Code                     Cost_Centers.Cc_Code%Type;
   G_A_Code                      Account.A_Code%Type;
   G_Tr_A_Code                    Account.A_Code%Type;
   G_Cash_Ac_Fcc                 Account.A_Code%Type;
   G_Pj_No                       Ias_Projects.Pj_No%Type;
   G_Actv_No                     Ias_Actvty.Actv_No%Type;
   G_Apprvd_Flg                  Sales_Order.Approved%Type;
   G_Apprvd_Ser                  S_Apprvd_Mov.Doc_Ser%Type;
   G_Ac_Code_Csh                 Account.A_Code%Type;
   G_Ac_Code_Bnk                 Account.A_Code%Type;
   G_Ac_Code_Cst                 Account.A_Code%Type;
   G_Ac_Code_Vnd                 Account.A_Code%Type;
   G_Ac_Code                     Account.A_Code%Type;
   G_Ac_Code_Dtl                 Account.A_Code%Type;
   G_Ac_Dtl_Typ                  Account.Ac_Dtl_Typ%Type;
   G_C_Code                      Customer.C_Code%Type;
   G_Ref_No                      Ias_Post_Dtl.Ref_No%Type;
   G_Rcrd_No                     Ias_Post_Dtl.Rcrd_No%Type;
   G_Rep_Code                    Sales_Man.Reprs_Code%Type;
   G_Use_Batch_No                Number;
   G_Use_Expire_Date             Number;
   G_Doc_Amt                     Number;
   G_So_Type                     Sales_Order.So_Type%Type;
   G_Clc_Vat_Price_Typ           Sales_Order.Clc_Vat_Price_Typ%Type;
   G_Si_Type                     Ias_Bill_Mst.Si_Type%Type;
   G_Sr_Type                     Ias_Rt_Bill_Mst.Sr_Type%Type;
   --G_ALLW_EXCD_ACCNT_LMT      NUMBER(5);
   G_Inpt_Nm                     Varchar2 (400);
   G_Rsrv_No                     Ias_Reserve_Mst.Doc_No%Type;
   G_Rsrv_Ser                    Ias_Reserve_Mst.Doc_Ser%Type;
   G_R_Code                      Ias_Bill_Mst.R_Code%Type;
   G_Cash_No                     Ias_Bill_Mst.Cash_No%Type;
   G_Bank_No                     Cash_At_Bank.Bank_No%Type;
   G_Emp_No                      Ias_Bill_Mst.Emp_No%Type;
   G_Doc_Dsc                     Ias_Bill_Mst.A_Desc%Type;
   G_Col_No                      Ias_Bill_Mst.Col_No%Type;
   G_Transfer_Serial             Number;
   G_Incoming_Serial             Number;
   G_Pst_Typ                     Number := Null;
   G_Ret_No                      Ias_Rt_Bill_Mst.Rt_Bill_No%Type;
   G_Ret_Ser                     Ias_Rt_Bill_Mst.Rt_Bill_Ser%Type;
   --G_Srl                         Varchar2 (4000);
   G_Clc_Tax_Method              Number (1) := 0;
   G_Doc_Amt_Xml                 Varchar2 (6000);
   G_Pst_From_Br                 Number (1);
   G_Allow_Mod_Rec_Wcode         Number (5);
   G_Allow_Mod_Rec_Qty           Number (5);
   G_Allow_Exceed_Tr_Qty         Number (5);
   G_Allow_Del_Rec_Itm           Number (5);
   G_USE_AUTO_REC_WHTRNS_BY_WCODE         Number (5);



   --##-----------------------------------------------------------------------------------------------------##--
  Function Ftch_Whtrns_MST(    P_T_W_Code In Number                              
                              ,P_usr_no         In User_r.U_id%Type                            
                              ,P_lng_no         In Number Default 1
                              ,P_srch_val       In Varchar2 Default Null
                                                        )
   Return Clob;
   --##-----------------------------------------------------------------------------------------------------##--
   Function Ftch_Whtrns_Dtl (P_Doc_Ser In Number, P_Lng_No In Number Default 1)Return Clob;
   --##-----------------------------------------------------------------------------------------------------##--

   Procedure Get_Prmtr_Prc (P_Sys_No           In     Number Default Null
                           ,P_Doc_Typ          In     Ias_Post_Mst.Doc_Type%Type Default Null
                           ,P_Pst_Typ          In     Number Default Null
                           ,P_Cur_Code         In     Ex_Rate.Cur_Code%Type Default Null
                           ,P_Cur_Rate         In     Ex_Rate.Cur_Rate%Type Default Null
                           ,P_Stock_Rate       In     Ex_Rate.Cur_Rate%Type Default Null
                           ,P_Doc_Date         In     Ias_Post_Dtl.Doc_Date%Type Default Null
                           ,P_Brn_No           In     S_Brn.Brn_No%Type Default Null
                           ,P_Brn_Usr          In     S_Brn.Brn_Usr%Type Default Null
                           ,P_Brn_Year         In     S_Brn.Brn_Year%Type Default Null
                           ,P_Usr_No           In     User_R.U_Id%Type Default Null
                           ,P_Clc_Tax_Method   In     Number--## 0 CALC TAX IN EXTRNAL ,1-AOUTO CALC TAX
                           ,P_Pst_From_Br      In     Number--## 1- POSTING FORM BR TABLE  0- NOT FROM BR
                           ,P_Lng_No           In     Number Default Null
                           ,P_Msg_Txt             Out Varchar2
                           ,P_Err_No              Out Varchar2
                           ,P_Pkg_Nm              Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Doc_Into_Onyx (P_Doc_Typ          In     Ias_Post_Mst.Doc_Type%Type                                
                                 ,P_Lng_No           In     Number Default 1
                                 ,P_Xml              In     Clob
                                 ,P_Json_Rslt           Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--  
  Procedure Insrt_Doc_By_Xml (P_Doc_Typ       In     Ias_Post_Mst.Doc_Type%Type
                              ,P_Xml           In     Clob
                              ,P_Pst_Typ       In     Number --## 1 to br tables ,2 to onyx tables
                              ,P_Pst_From_Br   In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
                              ,P_DOC_NO        OUT    NUMBER
                              ,P_DOC_SER       OUT    NUMBER
                              ,P_Lng_No        In     Number Default 1
                              ,P_Msg_Txt          Out Varchar2
                              ,P_Err_No           Out Varchar2
                              ,P_Pkg_Nm           Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--


   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Ias_Whtrns_Mst (P_Sys_No           In     Number
                                  ,P_Doc_Type         In     Number
                                  ,P_Typ_No           In     Ias_Whtrns_Mst.Tr_Type%Type Default Null
                                  ,P_Doc_No           In     Ias_Whtrns_Mst.Tr_No%Type Default Null
                                  ,P_Doc_Ser          In     Ias_Whtrns_Mst.Tr_Ser%Type Default Null
                                  ,P_Doc_Date         In     Ias_Whtrns_Mst.Tr_Date%Type Default Null
                                  ,P_Ref_No           In     Ias_Whtrns_Mst.Ref_No%Type Default Null
                                  ,P_T_W_Code         In     Ias_Whtrns_Mst.T_W_Code%Type Default Null
                                  ,P_F_W_Code         In     Ias_Whtrns_Mst.F_W_Code%Type Default Null
                                  ,P_Cc_Code          In     Ias_Whtrns_Mst.Cc_Code%Type Default Null
                                  ,P_Pj_No            In     Ias_Whtrns_Mst.Pj_No%Type Default Null
                                  ,P_Actv_No          In     Ias_Whtrns_Mst.Actv_No%Type Default Null
                                  ,P_Doc_Desc         In     Ias_Whtrns_Mst.Tr_Desc%Type Default Null
                                  ,P_Stk_Rate         In     Ias_Whtrns_Mst.Stk_Rate%Type Default Null
                                  ,P_Doc_Amt          In     Ias_Whtrns_Mst.Tr_Amt%Type Default Null
                                  ,P_Tr_Res           In     Ias_Whtrns_Mst.Tr_Res%Type Default Null
                                  ,P_Processed_Si     In     Ias_Whtrns_Mst.Processed_Si%Type Default Null
                                  ,P_Hung             In     Ias_Whtrns_Mst.Hung%Type Default Null
                                  ,P_T_Tr_Type        In     Ias_Whtrns_Mst.T_Tr_Type%Type Default Null
                                  ,P_Tr_A_Code        In     Ias_Whtrns_Mst.Tr_A_Code%Type Default Null
                                  ,P_Exp_Amt          In     Ias_Whtrns_Mst.Exp_Amt%Type Default Null
                                  ,P_C_Code           In     Ias_Whtrns_Mst.C_Code%Type Default Null
                                  ,P_Doc_Brn_No       In     Ias_Whtrns_Mst.Doc_Brn_No%Type Default Null
                                  ,P_F_Tr_No          In     Ias_Whtrns_Mst.F_Tr_No%Type Default Null
                                  ,P_F_Tr_Ser         In     Ias_Whtrns_Mst.F_Tr_Ser%Type Default Null
                                  ,P_Tr_Cost_Type     In     Ias_Whtrns_Mst.Tr_Cost_Type%Type Default Null
                                  ,P_Diff_A_Code      In     Ias_Whtrns_Mst.Diff_A_Code%Type Default Null
                                  ,P_Diff_A_Cy        In     Ias_Whtrns_Mst.Diff_A_Cy%Type Default Null
                                  ,P_Diff_Amt         In     Ias_Whtrns_Mst.Diff_Amt%Type Default Null
                                  ,P_Rtn_Tr           In     Ias_Whtrns_Mst.Rtn_Tr%Type Default Null
                                  ,P_Field1           In     Ias_Whtrns_Mst.Field1%Type Default Null
                                  ,P_Field2           In     Ias_Whtrns_Mst.Field2%Type Default Null
                                  ,P_Field3           In     Ias_Whtrns_Mst.Field3%Type Default Null
                                  ,P_Driver_No        In     Ias_Whtrns_Mst.Driver_No%Type Default Null                                 
                                  ,P_Boe_No           In     Ias_Whtrns_Mst.Boe_No%Type Default Null
                                  ,P_Audit_Ref_Date   In     Ias_Whtrns_Mst.Audit_Ref_Date%Type Default Null
                                  ,P_Audit_Ref        In     Ias_Whtrns_Mst.Audit_Ref%Type Default Null
                                  ,P_Audit_Ref_Desc   In     Ias_Whtrns_Mst.Audit_Ref_Desc%Type Default Null
                                  ,P_Audit_Ref_U_Id   In     Ias_Whtrns_Mst.Audit_Ref_U_Id%Type Default Null
                                  ,P_Stk_Processed    In     Ias_Whtrns_Mst.Stk_Processed%Type Default Null
                                  ,P_Processed        In     Ias_Whtrns_Mst.Processed%Type Default Null
                                  ,P_Load_No          In     Ias_Whtrns_Mst.Load_No%Type Default Null
                                  ,P_Attach_Cnt       In     Ias_Whtrns_Mst.Attach_Cnt%Type Default Null
                                  ,P_Cmp_No           In     Ias_Whtrns_Mst.Cmp_No%Type Default Null
                                  ,P_Brn_No           In     Ias_Whtrns_Mst.Brn_No%Type Default Null
                                  ,P_Brn_Year         In     Ias_Whtrns_Mst.Brn_Year%Type Default Null
                                  ,P_Brn_Usr          In     Ias_Whtrns_Mst.Brn_Usr%Type Default Null
                                  ,P_Ad_Trmnl_Nm      In     Ias_Whtrns_Mst.Ad_Trmnl_Nm%Type Default Null
                                  ,P_Ad_U_Id          In     Ias_Whtrns_Mst.Ad_U_Id%Type Default Null
                                  ,P_Ad_Date          In     Ias_Whtrns_Mst.Ad_Date%Type Default Null
                                  ,P_Lng_No           In     Number Default 1
                                  ,P_Pst_Typ          In     Number Default Null
                                  ,P_Pst_From_Br      In     Number Default Null
                                  ,P_Msg_Txt             Out Varchar2
                                  ,P_Err_No              Out Varchar2
                                  ,P_Pkg_Nm              Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Ias_Whtrns_Dtl (P_I_Code                     In     Ias_Whtrns_Dtl.I_Code%Type Default Null
                                  ,P_Itm_Unt                    In     Ias_Whtrns_Dtl.Itm_Unt%Type Default Null
                                  ,P_I_Qty                      In     Ias_Whtrns_Dtl.I_Qty%Type Default Null
                                  ,P_P_Size                     In     Ias_Whtrns_Dtl.P_Size%Type Default Null
                                  ,P_P_Qty                      In     Ias_Whtrns_Dtl.P_Qty%Type Default Null
                                  ,P_Tr_Qty                     In     Ias_Whtrns_Dtl.Tr_Qty%Type Default Null
                                  ,P_Cc_Code                    In     Ias_Whtrns_Dtl.Cc_Code%Type Default Null
                                  ,P_Pj_No                      In     Ias_Whtrns_Dtl.Pj_No%Type Default Null
                                  ,P_Actv_No                    In     Ias_Whtrns_Dtl.Actv_No%Type Default Null
                                  ,P_Stk_Cost                   In     Ias_Whtrns_Dtl.Stk_Cost%Type Default Null
                                  ,P_Expire_Date                In     Ias_Whtrns_Dtl.Expire_Date%Type Default Null
                                  ,P_Batch_No                   In     Ias_Whtrns_Dtl.Batch_No%Type Default Null
                                  ,P_Exp_Amt                    In     Ias_Whtrns_Dtl.Exp_Amt%Type Default Null
                                  ,P_Rcrd_No                    In     Ias_Whtrns_Dtl.Rcrd_No%Type Default Null
                                  ,P_Doc_Sequence               In     Ias_Whtrns_Dtl.Doc_Sequence%Type Default Null
                                  ,P_Doc_Sequence_Tr            In     Ias_Whtrns_Dtl.Doc_Sequence_Tr%Type Default Null
                                  ,P_Boe_No                     In     Ias_Whtrns_Dtl.Boe_No%Type Default Null
                                  ,P_Use_Attch                  In     Ias_Whtrns_Dtl.Use_Attch%Type Default Null
                                  ,P_Rec_Attch                  In     Ias_Whtrns_Dtl.Rec_Attch%Type Default Null
                                  ,P_I_Price                    In     Ias_Whtrns_Dtl.I_Price%Type Default Null
                                  ,P_Item_Desc                  In     Ias_Whtrns_Dtl.Item_Desc%Type Default Null
                                  ,P_Barcode                    In     Ias_Whtrns_Dtl.Barcode%Type Default Null
                                  ,P_Doc_Type_Ref               In     Ias_Whtrns_Dtl.Doc_Type_Ref%Type Default Null
                                  ,P_Doc_Jv_Type_Ref            In     Ias_Whtrns_Dtl.Doc_Jv_Type_Ref%Type Default Null
                                  ,P_Doc_No_Ref                 In     Ias_Whtrns_Dtl.Doc_No_Ref%Type Default Null
                                  ,P_Doc_Ser_Ref                In     Ias_Whtrns_Dtl.Doc_Ser_Ref%Type Default Null
                                  ,P_V_Code                     In     Ias_Whtrns_Dtl.V_Code%Type Default Null
                                  ,P_I_Length                   In     Ias_Whtrns_Dtl.I_Length%Type Default Null
                                  ,P_I_Width                    In     Ias_Whtrns_Dtl.I_Width%Type Default Null
                                  ,P_I_Height                   In     Ias_Whtrns_Dtl.I_Height%Type Default Null
                                  ,P_I_Number                   In     Ias_Whtrns_Dtl.I_Number%Type Default Null
                                  ,P_Wt_Qty                     In     Ias_Whtrns_Dtl.Wt_Qty%Type Default Null
                                  ,P_Wt_Unt                     In     Ias_Whtrns_Dtl.Wt_Unt%Type Default Null
                                  ,P_Argmnt_No                  In     Ias_Whtrns_Dtl.Argmnt_No%Type Default Null
                                  ,P_Web_Srvc_Trnsfr_Data_Flg   In     Ias_Whtrns_Dtl.Web_Srvc_Trnsfr_Data_Flg%Type Default Null
                                  ,P_Web_Srvc_Trnsfr_Data_Dsc   In     Ias_Whtrns_Dtl.Web_Srvc_Trnsfr_Data_Dsc%Type Default Null
                                  ,P_Doc_Sequence_Ref           In     Ias_Whtrns_Dtl.Doc_Sequence_Ref%Type Default Null
                                  ,P_Tr_Qty_Not_Rece            In     Ias_Whtrns_Dtl.Tr_Qty_Not_Rece%Type Default Null
                                  ,P_Doc_Type_Ref_Dtl           In     Ias_Whtrns_Dtl.Doc_Type_Ref_Dtl%Type Default Null
                                  ,P_Doc_No_Ref_Dtl             In     Ias_Whtrns_Dtl.Doc_No_Ref_Dtl%Type Default Null
                                  ,P_Doc_Ser_Ref_Dtl            In     Ias_Whtrns_Dtl.Doc_Ser_Ref_Dtl%Type Default Null
                                  ,P_Doc_Sequence_Ref_Dtl       In     Ias_Whtrns_Dtl.Doc_Sequence_Ref_Dtl%Type Default Null
                                  ,P_Msg_Txt                       Out Varchar2
                                  ,P_Err_No                        Out Varchar2
                                  ,P_Pkg_Nm                        Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--


   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Get_Doc_No (P_Doc_Typ In Number);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Get_Doc_Ser (P_Doc_Typ In Number);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Doc_No (P_Doc_Typ   In     Number
                        ,P_Doc_No    In     Ias_Post_Mst.Doc_No%Type
                        ,P_Msg_Txt      Out Varchar2
                        ,P_Err_No       Out Varchar2
                        ,P_Pkg_Nm       Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
                       ,P_Cur_Rate        In     Ex_Rate.Cur_Rate%Type Default Null
                       ,P_Stk_Rate        In     Ex_Rate.Cur_Rate%Type Default Null
                       ,P_Cash_No         In     Cash_In_Hand.Cash_No%Type Default Null
                       ,P_Bank_No         In     Cash_At_Bank.Bank_No%Type Default Null
                       ,P_C_Code          In     Customer.C_Code%Type Default Null
                       ,P_Ac_Code         In     Ias_Post_Dtl.A_Code%Type Default Null
                       ,P_Ac_Code_Dtl     In     Ias_Post_Dtl.Ac_Code_Dtl%Type Default Null
                       ,P_Ac_Dtl_Typ      In     Ias_Post_Dtl.Ac_Dtl_Typ%Type Default Null
                       ,P_V_Code          In     V_Details.V_Code%Type Default Null
                       ,P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type Default Null
                       ,P_Doc_Amt         In     Number Default Null
                       ,P_Msg_Txt            Out Varchar2
                       ,P_Err_No             Out Varchar2
                       ,P_Pkg_Nm             Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
                          ,P_Ad_U_Id          In     Ias_Bill_Mst.Ad_U_Id%Type Default Null
                          ,P_Emp_No           In     Ias_Bill_Mst.Emp_No%Type Default Null
                          ,P_Rep_Code         In     Ias_Bill_Mst.Rep_Code%Type Default Null
                          ,P_Col_No           In     Ias_Bill_Mst.Col_No%Type Default Null
                          ,P_C_Code           In     Customer.C_Code%Type Default Null
                          ,P_R_Code           In     Ias_Bill_Mst.R_Code%Type Default Null
                          ,P_W_Code           In     Ias_Bill_Mst.W_Code%Type Default Null
                          ,P_Clc_Typ_No_Tax   In     Ias_Bill_Mst.Clc_Typ_No_Tax%Type Default Null
                          ,P_Msg_Txt             Out Varchar2
                          ,P_Err_No              Out Varchar2
                          ,P_Pkg_Nm              Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Clr_Glbl_Var;

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
                               ,P_Itm_Unt      In Item_Movement.Itm_Unt%Type
                               ,P_P_Size       In Item_Movement.P_Size%Type
                               ,P_I_Qty        In Item_Movement.I_Qty%Type
                               ,P_Res_Qty      In Item_Movement.I_Qty%Type
                               ,P_W_Code       In Item_Movement.W_Code%Type
                               ,P_Expiredate   In Item_Movement.Expire_Date%Type
                               ,P_Batchno      In Item_Movement.Batch_No%Type
                               ,P_Res_Date     In Ias_Reserve_Dtl.T_Date%Type
                               ,P_Item_Desc    In Ias_Reserve_Dtl.Item_Desc%Type
                               ,P_Rcrd_No      In Number
                               ,P_Reserved     In Number);


   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Insrt_Gnr_Tax_Itm_Movmnt (P_Doc_Typ                In     Gnr_Tax_Itm_Movmnt.Doc_Type%Type Default Null
                                      ,P_Bill_Doc_Type          In     Gnr_Tax_Itm_Movmnt.Bill_Doc_Type%Type Default Null
                                      ,P_Doc_Jv_Type            In     Gnr_Tax_Itm_Movmnt.Doc_Jv_Type%Type Default Null
                                      ,P_Tax_No                 In     Gnr_Tax_Itm_Movmnt.Tax_No%Type Default Null
                                      ,P_Clc_Typ_No             In     Gnr_Tax_Itm_Movmnt.Clc_Typ_No%Type Default Null
                                      ,P_Agncy_No               In     Gnr_Tax_Itm_Movmnt.Agncy_No%Type Default Null
                                      ,P_I_Code                 In     Gnr_Tax_Itm_Movmnt.I_Code%Type Default Null
                                      ,P_Itm_Unt                In     Gnr_Tax_Itm_Movmnt.Itm_Unt%Type Default Null
                                      ,P_P_Size                 In     Gnr_Tax_Itm_Movmnt.P_Size%Type Default Null
                                      ,P_I_Price                In     Gnr_Tax_Itm_Movmnt.I_Price%Type Default Null
                                      ,P_Disc_Amt               In     Gnr_Tax_Itm_Movmnt.Disc_Amt%Type Default Null
                                      ,P_A_Code                 In     Gnr_Tax_Itm_Movmnt.A_Code%Type Default Null
                                      ,P_Cur_Code               In     Gnr_Tax_Itm_Movmnt.A_Cy%Type Default Null
                                      ,P_Ac_Rate                In     Gnr_Tax_Itm_Movmnt.Ac_Rate%Type Default Null
                                      ,P_Tax_Prcnt              In     Gnr_Tax_Itm_Movmnt.Tax_Prcnt%Type Default Null
                                      ,P_Tax_Amt                In     Gnr_Tax_Itm_Movmnt.Tax_Amt%Type Default Null
                                      ,P_W_Code                 In     Gnr_Tax_Itm_Movmnt.W_Code%Type Default Null
                                      ,P_Cc_Code                In     Gnr_Tax_Itm_Movmnt.Cc_Code%Type Default Null
                                      ,P_Pj_No                  In     Gnr_Tax_Itm_Movmnt.Pj_No%Type Default Null
                                      ,P_Actv_No                In     Gnr_Tax_Itm_Movmnt.Actv_No%Type Default Null
                                      ,P_Rcrd_No                In     Gnr_Tax_Itm_Movmnt.Rcrd_No%Type Default Null
                                      ,P_Doc_Sequence           In     Gnr_Tax_Itm_Movmnt.Doc_Sequence%Type Default Null
                                      ,P_Tax_Amt_L              In     Gnr_Tax_Itm_Movmnt.Tax_Amt_L%Type Default Null
                                      ,P_I_Qty                  In     Gnr_Tax_Itm_Movmnt.I_Qty%Type Default Null
                                      ,P_Free_Qty               In     Gnr_Tax_Itm_Movmnt.Free_Qty%Type Default Null
                                      ,P_Ref_No                 In     Gnr_Tax_Itm_Movmnt.Ref_No%Type Default Null
                                      ,P_Stk_Cost               In     Gnr_Tax_Itm_Movmnt.Stk_Cost%Type Default Null
                                      ,P_Stk_Rate               In     Gnr_Tax_Itm_Movmnt.Stk_Rate%Type Default Null
                                      ,P_Clc_Tax_Free_Qty_Flg   In     Gnr_Tax_Itm_Movmnt.Clc_Tax_Free_Qty_Flg%Type Default Null
                                      ,P_Msg_Txt                   Out Varchar2
                                      ,P_Err_No                    Out Varchar2
                                      ,P_Pkg_Nm                    Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Amt_And_Itm_Tax (P_Clc_Typ_No_Tax      In     Gnr_Tax_Itm_Movmnt.Clc_Typ_No%Type Default Null
                                 ,P_Calc_Vat_Amt_Type   In     Number Default 1
                                 ,P_Doc_Typ             In     Gnr_Tax_Itm_Movmnt.Doc_Type%Type
                                 ,P_Doc_No              In     Gnr_Tax_Itm_Movmnt.Doc_No%Type
                                 ,P_Doc_Ser             In     Gnr_Tax_Itm_Movmnt.Doc_Ser%Type
                                 ,P_Fld_Doc_No          In     Varchar2
                                 ,P_Fld_Doc_Ser         In     Varchar2
                                 ,P_Fld_Mst_Amt         In     Varchar2
                                 ,P_Tbl_Mvmnt_Nm        In     Varchar2
                                 ,P_Tbl_Mst_Nm          In     Varchar2
                                 ,P_Tbl_Dtl_Nm          In     Varchar2
                                 ,P_No_Of_Decimal       In     Number
                                 ,P_Lng_No              In     Number Default 1
                                 ,P_Msg_Txt                Out Varchar2
                                 ,P_Err_No                 Out Varchar2
                                 ,P_Pkg_Nm                 Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Chk_Mndtry_Flids (P_Doc_Typ        In     Ias_Post_Dtl.Doc_Type%Type
                              ,P_Rep_Code       In     Sales_Man.Reprs_Code%Type Default Null
                              ,P_Doc_Desc       In     Ias_Post_Dtl.Doc_Desc%Type Default Null
                              ,P_Ref_No         In     Varchar2 Default Null
                              ,P_C_Code         In     Customer.C_Code%Type Default Null
                              ,P_Cc_Code        In     Ias_Whtrns_Mst.Cc_Code%Type Default Null
                              ,P_Pj_No          In     Ias_Whtrns_Mst.Pj_No%Type Default Null
                              ,P_Actv_No        In     Ias_Whtrns_Mst.Actv_No%Type Default Null
                              ,P_Tr_Cost_Type   In     Ias_Whtrns_Mst.Tr_Cost_Type%Type Default Null
                              ,P_Diff_A_Code    In     Ias_Whtrns_Mst.Diff_A_Code%Type Default Null
                              ,P_Diff_A_Cy      In     Ias_Whtrns_Mst.Diff_A_Cy%Type Default Null
                              ,P_Tr_A_Code      In     Ias_Whtrns_Mst.Tr_A_Code%Type Default Null
                              ,P_Lng_No         In     Number Default 1
                              ,P_Msg_Txt           Out Varchar2
                              ,P_Err_No            Out Varchar2
                              ,P_Pkg_Nm            Out Varchar2);

   --##-----------------------------------------------------------------------------------------------------##--
   Procedure Post_Transfer_In_Doc (P_DOC_TYPE              In     Number
                                   ,P_F_Tr_Ser              In     Number
                                   ,P_T_W_Code              In     Number
                                   ,P_F_Brn_No              In     Number
                                   ,P_Use_Auto_Rec_Whtrns   In     Number
                                   ,P_Pst_From_Br           In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
                                   ,P_Lng_No                In     Number Default 1
                                   ,P_Msg_Txt                  Out Varchar2
                                   ,P_Err_No                   Out Varchar2
                                   ,P_Pkg_Nm                   Out Varchar2);
--##-----------------------------------------------------------------------------------------------------##--                                   
   Procedure Chk_Insrt_Data (P_Doc_Typ   In     Ias_Post_Mst.Doc_Type%Type
                            ,P_Doc_Ser   In     Sales_Order.Order_Ser%Type
                            ,P_Msg_Txt      Out Varchar2
                            ,P_Err_No       Out Varchar2
                            ,P_Pkg_Nm       Out Varchar2 -- 1 # POST FORM  TABLE BR -- 0 # OTHERS
                                                        );
--##-----------------------------------------------------------------------------------------------------##--
--##-----------------------------------------------------------------------------------------------------##--
End Inv_Api_Trns_Pkg;
/
CREATE Package INV_Fetch_Data_Pkg Is
  
Type t_cv Is Ref Cursor;
Procedure Get_Diff_Costs_Gl_Inv ( a_cv         In Out t_cv                                ,
                                  P_Hav        In Varchar2                                ,
                                  P_Lang_no    In NUMBER     Default 1                    ,
                                  P_STKCOST_FRACTION In Ias_Para_Inv.STKCOST_FRACTION%Type,
                                  P_Whr        Varchar2
                                );                              
End INV_Fetch_Data_Pkg;
/
CREATE Package Inv_Itm_Bin_Pkg Is
--##---------------------------------------------------------------------------------##--  
 --## Done By Shawqi Alkholidy 
--##---------------------------------------------------------------------------------##--                                                                 
		Procedure Inv_Auto_Fill_Bin_Prc( P_DOC_TYPE      IN NUMBER   ,
		                                 P_DOC_NO        IN NUMBER   ,
		                                 P_DOC_SER       IN NUMBER   ,
		                                 P_IN_OUT        IN NUMBER   ,
		                                 P_I_CODE        IN VARCHAR2 ,
		                                 P_Itm_Unt       IN VARCHAR2 ,
		                                 P_W_CODE        IN NUMBER   ,
		                                 P_Expire_Date   IN DATE     ,
		                                 P_Batch_No      IN VARCHAR2 ,
		                                 P_I_QTY         IN NUMBER   ,
		                                 P_Brn_No        IN NUMBER   ,
		                                 P_RCRD_NO_REF   IN NUMBER   ,
		                                 P_AD_U_ID       IN NUMBER
		                                ) ;   
--##---------------------------------------------------------------------------------##--                                                                                 
End Inv_Itm_Bin_Pkg ;
/
CREATE Package Inv_Itm_Price_Pkg As
						Function Get_Itm_Prev_Price_Fnc ( P_I_Code      In Ias_Itm_Mst.I_Code%Type                      ,
						                                  P_Itm_Unt     In Ias_Itm_Dtl.Itm_Unt%Type                     ,
						                                  P_Lev_No      In Ias_Pricing_Levels.Lev_No%Type               ,
						                                  P_W_Code      In Warehouse_Details.W_Code%Type  Default Null  ,
						                                  P_Brn_No      In S_Brn.Brn_No%Type  Default Null              ,
						                                  P_Price_Type  In Ias_Para_Inv.Price_Type%Type Default 1       )   Return Number ;
End Inv_Itm_Price_Pkg;
/
CREATE PACKAGE INV_MOBILE_TRNS_PKG IS
G_OUT_REQ_TYPE      IAS_OUT_REQUEST_MST.OUT_REQ_TYPE%TYPE ;
G_OUT_REQ_NO        IAS_OUT_REQUEST_MST.OUT_REQ_NO%TYPE ;
G_OUT_REQ_SER       IAS_OUT_REQUEST_MST.OUT_REQ_SER%Type ; 
G_OUT_W_CODE        IAS_OUT_REQUEST_MST.W_CODE%Type ;
G_F_W_CODE          IAS_OUT_REQUEST_MST.W_CODE%Type ;
G_OUT_REQ_CMP_NO    IAS_OUT_REQUEST_MST.CMP_NO%TYPE ;
G_OUT_REQ_BRN_NO    IAS_OUT_REQUEST_MST.BRN_NO%TYPE ;
G_OUT_REQ_BRN_YEAR  IAS_OUT_REQUEST_MST.BRN_YEAR%Type ;
G_OUT_REQ_BRN_USR   IAS_OUT_REQUEST_MST.BRN_USR%Type ; 
--##------------------------------------------------------------------------------------------------------------------------------##--
FUNCTION  GET_BRN_XML     ( P_USR_NO  In Number
                           ,P_LNG_NO IN NUMBER DEFAULT 1 ) RETURN CLOB   ;
--##------------------------------------------------------------------------------------------------------------------------------##--                           
FUNCTION  GET_PREQ_TYPES_XML     ( P_USR_NO  In Number
                                  ,P_LNG_NO IN NUMBER DEFAULT 1 ) RETURN CLOB   ;                           
--##------------------------------------------------------------------------------------------------------------------------------##--                                                 
FUNCTION  GET_W_Code_XML     ( P_USR_NO  In Number
                              ,P_LNG_NO IN NUMBER DEFAULT 1 ) RETURN CLOB   ;  
--##------------------------------------------------------------------------------------------------------------------------------##--                           
FUNCTION  GET_I_Code_XML     ( P_USR_NO  In Number
                              ,P_LNG_NO IN NUMBER DEFAULT 1
                              ,P_I_CODE IN VARCHAR2 DEFAULT Null
                              ,P_I_NAME IN VARCHAR2 DEFAULT Null ) RETURN CLOB   ;  
--##------------------------------------------------------------------------------------------------------------------------------##--                                                                              
PROCEDURE INSRT_OUT_REQUEST_PRC(   P_XML in             CLOB,                       
                                   P_JSON_RSLT          OUT VARCHAR    ) ;   
--##------------------------------------------------------------------------------------------------------------------------------##-- 
PROCEDURE INSRT_OUT_REQUESTT_MST(    P_OUT_REQ_TYPE       IN IAS_OUT_REQUEST_MST.OUT_REQ_TYPE%TYPE      DEFAULT NULL
                                    ,P_OUT_REQ_DATE       IN IAS_OUT_REQUEST_MST.OUT_REQ_DATE%TYPE      DEFAULT NULL        
                                    ,P_W_CODE             IN IAS_OUT_REQUEST_MST.W_CODE%TYPE            DEFAULT NULL             
                                    ,P_F_W_CODE           IN IAS_OUT_REQUEST_MST.F_W_CODE%TYPE          DEFAULT NULL                
                                    ,P_REQ_SIDE           IN IAS_OUT_REQUEST_MST.REQ_SIDE%TYPE          DEFAULT NULL        
                                    ,P_DOC_DESC           IN IAS_OUT_REQUEST_MST.DOC_DESC%TYPE          DEFAULT NULL 
                                    ,P_REF_NO             IN IAS_OUT_REQUEST_MST.REF_NO%TYPE            DEFAULT NULL        
                                    ,P_AD_U_ID            IN IAS_OUT_REQUEST_MST.AD_U_ID%TYPE           DEFAULT NULL        
                                    ,P_AD_DATE            IN IAS_OUT_REQUEST_MST.AD_DATE%TYPE           DEFAULT NULL             
                                    ,P_CMP_NO             IN IAS_OUT_REQUEST_MST.CMP_NO%TYPE            DEFAULT NULL                
                                    ,P_BRN_NO             IN IAS_OUT_REQUEST_MST.BRN_NO%TYPE            DEFAULT NULL        
                                    ,P_BRN_YEAR           IN IAS_OUT_REQUEST_MST.BRN_YEAR%TYPE          DEFAULT NULL 
                                    ,P_BRN_USR            IN IAS_OUT_REQUEST_MST.BRN_USR%TYPE           DEFAULT NULL       
                                    ,P_AD_TRMNL_NM        IN IAS_OUT_REQUEST_MST.AD_TRMNL_NM%TYPE       DEFAULT NULL     );
--##------------------------------------------------------------------------------------------------------------------------------##--   
PROCEDURE INSRT_OUT_REQUESTT_DTL(    P_I_CODE           IN IAS_OUT_REQUEST_DTL.I_CODE%TYPE            DEFAULT NULL
                                    ,P_ITM_UNT          IN IAS_OUT_REQUEST_DTL.ITM_UNT%TYPE           DEFAULT NULL        
                                    ,P_P_SIZE           IN IAS_OUT_REQUEST_DTL.P_SIZE%TYPE            DEFAULT NULL                                                                 
                                    ,P_I_QTY            IN IAS_OUT_REQUEST_DTL.I_QTY%TYPE             DEFAULT NULL                                                                                ,P_AVL_QTY          IN P_REQUEST_DETAIL.AVL_QTY%TYPE           DEFAULT NULL       
                                    ,P_RCRD_NO          IN IAS_OUT_REQUEST_DTL.RCRD_NO%TYPE           DEFAULT NULL 
                                    ,P_CMP_NO           IN IAS_OUT_REQUEST_DTL.CMP_NO%TYPE            DEFAULT NULL 
                                    ,P_BRN_NO           IN IAS_OUT_REQUEST_DTL.BRN_NO%TYPE            DEFAULT NULL       
                                    ,P_BRN_YEAR         IN IAS_OUT_REQUEST_DTL.BRN_YEAR%TYPE          DEFAULT NULL 
                                    ,P_BRN_USR          IN IAS_OUT_REQUEST_DTL.BRN_USR%TYPE           DEFAULT NULL  );
--##------------------------------------------------------------------------------------------------------------------------------##--                                    
--##------------------------------------------------------------------------------------------------------------------------------##--                            
END INV_MOBILE_TRNS_PKG;
/
CREATE Package Inv_Qty_Pkg Is
--##---------------------------------------------------------------------------------##--  
 --## Done By Shawqi Alkholidy 
--##---------------------------------------------------------------------------------##--                                                                 
   Type Tp_Itm_Rec   Is Record
          ( Itm_Code             Ias_Itm_Dtl.I_Code%Type                                                                                        
          , W_Code               Ias_Itm_Wcode.W_Code%Type
          , Expire_Date          Item_Movement.Expire_Date%Type
          , Batch_No             Item_Movement.Batch_No%Type
          , Avl_Qty              Number    
          , Rsrv_Qty             Number 
          , Net_Out_Bill_Qty     Number 
          , Prchs_Ord_Qty        Number 
          , Prchs_Bill_Qty       Number 
          , Trnsfr_Not_Rec_Qty   Number 
          , Net_Pos_Bill_Qty     Number
          , Net_Rms_Bill_Qty     Number  
          , Net_Br_Bill_Qty      Number 
          , Net_Avl_Qty_Qty      Number 
          , Real_Avl_Qty_Qty     Number                                     
           );                      
--##---------------------------------------------------------------------------------##--             
   Type Tp_Itm_Rfc     Is Ref Cursor ;               
--##---------------------------------------------------------------------------------##--
   G_Itm_Rec      Tp_Itm_Rec ;                          
--##---------------------------------------------------------------------------------##--                        
   Type Tp_Itm_Tbl   Is Table Of Tp_Itm_Rec ;
   Type Itm_Blk_Rcrd Is Record ( Itm_Code      Ias_Itm_Dtl.I_Code%Type                                                                                        
                               , W_Code        Ias_Itm_Wcode.W_Code%Type
                               , Avl_Qty       Number
                               , Expire_Date   Item_Movement.Expire_Date%Type 
                               , Batch_No      Item_Movement.Batch_No%Type    );
 
--##---------------------------------------------------------------------------------##--
   Type Blk_Tbl_Itm Is Table Of Itm_Blk_Rcrd Index By Binary_Integer;      
   V_Blk_Tbl_Itm Blk_Tbl_Itm;           
--##---------------------------------------------------------------------------------##-- 
   Function Get_Avl_Qty_Fnc (  P_Itm_Code      In Item_Movement.I_Code%Type      Default Null 
                             , P_Itm_Size      In Item_Movement.P_Size%Type      Default Null                                                 
                             , P_W_Code        In Item_Movement.W_Code%Type      Default Null
                             , P_Exp_Date      In Item_Movement.Expire_Date%Type Default Null
                             , P_Batch_No      In Item_Movement.Batch_No%Type    Default Null
                             , P_T_Date        In Date                           Default Null
                             , P_By_Exp_Btch   In Number                         Default 0   --## 0  Without  Expire date Or Batch no   ,1 By Expire date Or Batch no 
                             , P_All_W_Code    In Number                         Default 0   --## 0 All W_Code ,1 By W_Code
                             , P_Avl_Qty_Typ   In Number                         Default 0   --## 0- All Avl Qty Or Net Qty,1- Avl Qty Only ,2- Reserve Qty,3- Out Bill Qty,4- Purchase Order Qty,5- Purchase Qty Not Costed,6- Transfer No Receive Qty,7- POS Qty,8- BR Qty, 9- RMS Qty
                             , P_Whr           In Varchar2                       Default Null   
                             ) Return Tp_Itm_Tbl Pipelined ;
--##---------------------------------------------------------------------------------##--     
Function Get_Avl_Qty_By_Typ_Fnc  ( P_Itm_Code        In Item_Movement.I_Code%Type      Default Null 
                                 , P_Itm_Size        In Item_Movement.P_Size%Type      Default 1                                                 
                                 , P_W_Code          In Item_Movement.W_Code%Type      Default Null
                                 , P_Exp_Date        In Item_Movement.Expire_Date%Type Default Null
                                 , P_Batch_No        In Item_Movement.Batch_No%Type    Default Null
                                 , P_T_Date          In Date                           Default Null
                                 , P_By_Exp_Btch     In Number                         Default 0      --## 0  Without  Expire date Or Batch no   ,1 By Expire date Or Batch no
                                 , P_All_W_Code      In Number                         Default 0      --## 0 All W_Code ,1 By W_Code
                                 , P_Avl_Qty_Typ     In Number                         Default 0      --## 0- All Avl Qty Or Net Qty,1- Avl Qty Only ,2- Reserve Qty,3- Out Bill Qty,4- Purchase Order Qty,5- Purchase Qty Not Costed,6- Transfer No Receive Qty,7- POS Qty,8- BR Qty, 9- RMS Qty
                                 , P_Whr             In Varchar2                       Default Null   
                                 ) Return Number  ;
--##---------------------------------------------------------------------------------##--                                                                                 

End Inv_Qty_Pkg;
/
CREATE PACKAGE Inv_Reevlt_Pkg
AS
   v_use_out_bills               NUMBER;
   v_conn_product_system         NUMBER;
   v_stkcost_fraction            NUMBER;
   v_cst_type                    NUMBER;
   v_wtavg_type                  NUMBER;
   v_use_compound_items          NUMBER;
   v_use_price_whtrns_rec_cost   NUMBER;
   v_NO_OF_DECIMAL_INV number;
   V_CHK_CST_ONLY      Number;
   V_CHK_MAKE_CPY      Number;
   V_CHK_APROV_CST     Number;
   V_LONG_MONITOR      NUMBER;
   
    Type t_cv Is Ref Cursor;
    TYPE  SAL_COST_RCRD IS RECORD 
(
  bill_type        SALE_COST.bill_type%TYPE  ,
  bill_doc_type    SALE_COST.bill_doc_type%TYPE,    
  bill_no          SALE_COST.bill_no%TYPE              ,
  doc_date         SALE_COST.doc_date%TYPE    ,
  i_code           SALE_COST.i_code%TYPE    ,
  i_qty            SALE_COST.i_qty%TYPE    ,
  itm_unt          SALE_COST.itm_unt%TYPE    ,
  p_size           SALE_COST.p_size%TYPE    ,
  p_qty            SALE_COST.p_qty%TYPE,    
  i_cost           SALE_COST.i_cost%TYPE,    
  pi_type          SALE_COST.pi_type%TYPE,    
  gr_no            SALE_COST.gr_no%TYPE   , 
  g_ser            SALE_COST.g_ser%TYPE    ,
  doc_sequence_gr  SALE_COST.doc_sequence_gr%TYPE,    
  w_code           SALE_COST.w_code%TYPE    ,
  whg_code         SALE_COST.whg_code%TYPE    ,
  cc_code          SALE_COST.cc_code%TYPE    ,
  pj_no            SALE_COST.pj_no%TYPE    ,
  actv_no          SALE_COST.actv_no%TYPE   , 
  v_code           SALE_COST.v_code%TYPE    ,
  expire_date      SALE_COST.expire_date%TYPE    ,
  batch_no         SALE_COST.batch_no%TYPE   , 
  barcode          SALE_COST.barcode%TYPE    ,
  rcrd_no          SALE_COST.rcrd_no%TYPE    ,
  rec_no           SALE_COST.rec_no%TYPE    ,
  doc_ser          SALE_COST.doc_ser%TYPE,    
  doc_sequence     SALE_COST.doc_sequence%TYPE,    
  out_no           SALE_COST.out_no%TYPE,    
  out_gr_ser       SALE_COST.out_gr_ser%TYPE,    
  i_length         SALE_COST.i_length%TYPE,    
  i_width          SALE_COST.i_width%TYPE  ,  
  i_height         SALE_COST.i_height%TYPE  ,  
  i_number         SALE_COST.i_number%TYPE   , 
  wt_qty           SALE_COST.wt_qty%TYPE    ,
  wt_unt           SALE_COST.wt_unt%TYPE    ,
  argmnt_no        SALE_COST.argmnt_no%TYPE  ,  
  brn_no           SALE_COST.brn_no%TYPE   , 
  brn_year         SALE_COST.brn_year%TYPE, 
  cmp_no           SALE_COST.cmp_no%TYPE ,   
  brn_usr          SALE_COST.brn_usr%TYPE    
);
     TYPE SAL_COST_RCRD0 IS TABLE OF SAL_COST_RCRD;
   PROCEDURE load_para(P_CHK_CST_ONLY In Number Default 0,P_CHK_MAKE_CPY In Number Default 0,P_CHK_APROV_CST In Number Default 0,P_LONG_MONITOR NUMBER DEFAULT 0);

  Function get_Ser_Ref(P_Doc_Sequence In Number, P_Serial In Number, P_Doc_Type In Number, P_Type In Number)
   Return Number;
   procedure Upd_inv_cmltv_blnc;
  Procedure INV_FULL_MOV_INSRTTEMP;
 Procedure INV_FULL_MOV_REEVAL(p_reeval_type in number default 0 );
 procedure update_op_table;
 PROCEDURE create_ddl_objects(p_type in number);
 PROCEDURE exec_DDL (ddl_string IN VARCHAR2);
 procedure upd_avl_qty_bfr;
 Procedure Upd_Primary_Cost;
 Procedure Upd_Last_Serial (P_cost_max_diff in number default 0.1, p_type in number default 0) ;
 Procedure inv_cost_compare(P_cost_max_diff in number);
 Procedure Inv_Chk_Diff_Itm_Cst_Prc(p_type in number);
 Procedure Statstics_Reeval_Mst(a_cv  In Out t_cv);
 Procedure Statstics_Reeval_Dtl(a_cv  In Out t_cv,P_ACTION IN Varchar2);
 Procedure Insrt_Upd_Long_Op(P_Op_Type In Number, P_Total_Work In Number Default 0, P_Units In Varchar2 Default Null, P_Sofar In Number Default 0) ;
Procedure Create_Reev_Tbl;
procedure create_reeval_job(p_action in varchar2);
procedure Sale_Cost_Reeval;
FUNCTION Insrt_To_Sale_Cost_TMP (pI_CODE in VARCHAR2) RETURN SAL_COST_RCRD0 PIPELINED ;
Procedure Insrt_To_Sale_CostPIP  (p_full_insrt in number);
Procedure Upd_Tbl_Aftr_Revl ;
Procedure Upd_inv_cmltv_blnc ( P_I_Code In Ias_Itm_Mst.I_Code%Type,
                               P_Whr    In Varchar2 Default Null
                             );
END Inv_Reevlt_Pkg;
/
CREATE PACKAGE os_command authid current_user is
  pkg_version varchar2(100) := '1.0';
  procedure set_working_dir (p_workdir in file_type);
  procedure clear_working_dir;
  function get_working_dir return FILE_TYPE;
  
  procedure clear_environment;
  procedure set_env_var(p_env_name in varchar2, p_env_value in varchar2);
  procedure remove_env_var(p_env_name in varchar2);
  function get_env_var(p_env_name in varchar2) return varchar2;
  procedure load_env;
  procedure load_env(p_env_name in varchar2);

  procedure use_custom_env;
  procedure use_default_env;

  procedure set_Shell(p_shell_path in varchar2, p_shell_switch in varchar2);
  function get_shell return varchar2;
  procedure set_exec_in_shell;
  procedure set_exec_direct;

  /* the following functions execute the command "p_command" with
   * the content of "p_stdin" for the standard input (stdin).
   */
  function exec_CLOB(p_command in varchar2, p_stdin in blob) return clob;
  /* ... for commands expecting binary input and returning text */
  function exec_CLOB(p_command in varchar2, p_stdin in clob) return clob;
  /* ... for commands expecting text input and returning text */
  function exec_BLOB(p_command in varchar2, p_stdin in blob) return blob;
  /* ... for commands expecting binary input and returning binary output */
  function exec_BLOB(p_command in varchar2, p_stdin in clob) return blob;
  /* ... for commands expecting text input and returning binary output */

  /* the following two functions execute just the command "p_command"; no
   * content is piped into the standard input. */ 
  function exec_CLOB(p_command in varchar2) return Clob;
  /* ... for commands returning text output */
  function exec_BLOB(p_command in varchar2) return blob;
  /* ... for commands returning binary output */

  function exec(p_command in varchar2, p_stdin in blob) return number;
  function exec(p_command in varchar2, p_stdin in clob) return number;
  function exec(p_command in varchar2) return number;

  function exec(p_command in varchar2, p_stdin in clob, p_stdout in clob) return number;
  function exec(p_command in varchar2, p_stdin in clob, p_stdout in blob) return number;
  function exec(p_command in varchar2, p_stdin in blob, p_stdout in blob) return number;
  function exec(p_command in varchar2, p_stdin in blob, p_stdout in clob) return number;
  function exec(p_command in varchar2, p_stdout in clob) return number;
  function exec(p_command in varchar2, p_stdout in blob) return number;

  function exec(p_command in varchar2, p_stdin in clob, p_stdout in clob, p_stderr in clob) return number;
  function exec(p_command in varchar2, p_stdin in clob, p_stdout in blob, p_stderr in blob) return number;
  function exec(p_command in varchar2, p_stdin in blob, p_stdout in blob, p_stderr in blob) return number;
  function exec(p_command in varchar2, p_stdin in blob, p_stdout in clob, p_stderr in clob) return number;
  function exec(p_command in varchar2, p_stdout in clob, p_stderr in clob) return number;
  function exec(p_command in varchar2, p_stdout in blob, p_stderr in blob) return number;
End os_command;
/
CREATE PACKAGE STN_POSTING_PKG AS   V_Lng_No             Pls_Integer;
                                               V_Usr_No             Pls_Integer;
                                               V_loc_cur_Code       EX_RATE.CUR_CODE%TYPE;
                                               V_EX_RATE_F          NUMBER;
                                               V_Pst_Date           DATE;
                                               V_Stk_Cur            EX_RATE.CUR_CODE%TYPE;
                                               V_Stk_Rate           NUMBER;    
                                               V_Curr_Bal                    Number;
                                               V_Cpn_Ac                      Varchar (30);
                                               V_Cc_Avail                    Pls_Integer;
                                               V_Cc_Post                     Pls_Integer;
                                               V_Pj_Post                     Pls_Integer;
                                               V_Doc_Desc                    Varchar2 (250);
                                               V_Actv_Post                   Pls_Integer;
                                               V_A_Code                      Varchar2 (30);
                                               V_Cc_Code                     Cost_Centers.Cc_Code%Type;
                                               V_Pj_No                       Ias_Projects.Pj_No%Type;
                                               V_Actv_No                     Ias_Actvty.Actv_No%Type;
                                               V_Cb_No                       Number (4);
                                               V_Post_Rep_Comm               Number (1);
                                               V_Use_Audit_Doc               Number (1);
                                               V_Ar_Cs_Type                  Number (1);
                                               V_Ar_Pj_Type                  Number (1);
                                               V_Ar_Actv_Type                Number (1);
                                               V_Use_Balanced_Cc             Number (1) := 0;
                                               V_Use_Balanced_Brn            Number (1) := 0;
                                               V_Count                       Number:=0;
--##---------------------------------------------------------------------------------------------------------------------------------------------##--
                        PROCEDURE Get_Prmtr_Prc ( P_Lng_no  In Pls_Integer Default 1,
                                                   P_Usr_No  In Pls_Integer);
--##--------------------------------------------------------------------------------------------------------------------------------------------##---
                        FUNCTION Chk_Exist_Doc_Fnc  ( P_Doc_Typ In IAS_POST_MST.DOC_TYPE%TYPE , P_Doc_Srl In IAS_POST_MST.DOC_SER%TYPE) RETURN NUMBER ;
--##---------------------------------------------------------------------------------------------------------------------------------------------##--
                        PROCEDURE Del_Doc_Prc  ( P_Doc_Typ In IAS_POST_MST.DOC_TYPE%TYPE , P_Doc_Srl In IAS_POST_MST.DOC_SER%TYPE) ;
--##---------------------------------------------------------------------------------------------------------------------------------------------##--
                        PROCEDURE Insrt_Doc_In_Pst_Prc (   P_Doc_Typ      In NUMBER ,
                                                           P_Doc_Srl      In NUMBER,
                                                           P_Usr_No       In Pls_Integer,
                                                           P_Lng_no       In Pls_Integer) ;
--##---------------------------------------------------------------------------------------------------------------------------------------------##--
                        FUNCTION  Get_Intrfc_Code (P_Fld_Nm In Varchar2,P_Brn_No In Number,P_Msg_NO Number Default Null ) RETURN VARCHAR2;                                   
--##---------------------------------------------------------------------------------------------------------------------------------------------##--
                        Procedure Post_Sales_Coupon ( P_Pst_Typ        In NUMBER   Default 0
                                                     ,P_F_Doc_No       In NUMBER   Default Null
                                                     ,P_T_Doc_No       In NUMBER   Default Null
                                                     ,P_F_Doc_Date     In DATE     Default Null
                                                     ,P_T_Doc_Date     In DATE     Default Null
                                                     ,P_Doc_Srl        In NUMBER   Default Null
                                                     ,P_Doc_Jv_Typ     In NUMBER   Default Null
                                                     ,P_Brn_No         In S_BRN.BRN_NO%TYPE Default Null 
                                                     );
--##---------------------------------------------------------------------------------------------------------------------------------------------##--
                            
End Stn_Posting_Pkg;
/
CREATE Package YSEC_PACK as
PKG_COMP                                   NUMBER(2):= 5;
PKG_BRN                                    NUMBER(2):= 5;
PKG_USER_ID                                VARCHAR2(20):= 5;
PKG_TERM                                   VARCHAR2(30):= 5;
PKG_PROSS_TYPE                             VARCHAR2(10):= 5;
PKG_DATE                                   VARCHAR2(20):= to_date(SYSDATE,'dd/mm/yyyy');
FF_SERIAL                                  NUMBER(20);
CONC_SEQ                                   VARCHAR2(500);
 FUNCTION Get_Ser  return NUMBER;
 PROCEDURE Set_Ser(Ser  Number,Conc_Seq Varchar2 Default Null);
 FUNCTION Get_user  return VARCHAR2;
 PROCEDURE set_user(usr  VARCHAR2);
 FUNCTION Get_comp  return VARCHAR2;
 PROCEDURE set_comp(comp  VARCHAR2);
 FUNCTION Get_brn  return VARCHAR2;
 PROCEDURE set_brn(brn  VARCHAR2);
 FUNCTION Get_term  return VARCHAR2;
 PROCEDURE set_term(term  VARCHAR2);
 FUNCTION Get_date  return VARCHAR2;
 PROCEDURE set_date(dat  VARCHAR2);

END YSEC_PACK ;
/
CREATE PACKAGE Ys_Ac_Dtl_Pkg AS

    FUNCTION Get_Ac_Dtl_Typ (P_A_Code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER ;
    FUNCTION Get_Ac_Dtl_Nm( P_AC_Code_Dtl   In ACCOUNT.A_CODE%TYPE DEFAULT NULL , 
                            P_AC_CODE       In ACCOUNT.A_CODE%TYPE  ,
                            P_Ac_Dtl_Typ    In ACCOUNT.AC_DTL_TYP%TYPE  DEFAULT 0,
                            P_Lng_No        In LANG_DEF.LANG_NO%TYPE DEFAULT 1,
                            P_get_nm_only   In NUMBER DEFAULT 1) RETURN VARCHAR2;
    PROCEDURE Chk_Ac_Dtl( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
                          P_AC_CODE      IN ACCOUNT.A_CODE%TYPE  DEFAULT NULL,
                          P_Ac_Dtl_Nm    IN OUT ACCOUNT.A_NAME%TYPE,
                          P_Ac_Dtl_Typ   IN OUT ACCOUNT.AC_DTL_TYP%TYPE,
                          P_Cur_code     IN EX_RATE.CUR_CODE%TYPE  DEFAULT NULL,
                          P_Ar_Flg       IN Number Default 0,
                          P_Scr_Typ      IN Number, 
                          P_Aralt        IN Number,
                          P_Apalt        IN Number,
                          P_Doc_Date     IN Date, 
                          P_Usr_No       IN Number,
                          P_Lng_No       IN LANG_DEF.LANG_NO%TYPE DEFAULT 1,
                          P_Msg_No       IN OUT Number);
       FUNCTION Chk_Ac_Dtl_Acy ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE,                                 
                                 P_Ac_Dtl_Typ   IN ACCOUNT.AC_DTL_TYP%TYPE,
                                 P_A_Cy         IN ACCOUNT_CURR.A_Cy%TYPE)  RETURN NUMBER ;
       FUNCTION Get_One_Acy_Ac_Dtl ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
                                     P_Ac_Dtl_Typ   IN ACCOUNT.AC_DTL_TYP%TYPE)  RETURN VARCHAR2;
       
       FUNCTION Get_Ac_Dtl_Acode (  P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
                                    P_Ac_Dtl_Typ   IN ACCOUNT.AC_DTL_TYP%TYPE)  RETURN VARCHAR2;

			FUNCTION Chk_Inactv_Acy ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
			                          P_Ac_Dtl_Typ   IN ACCOUNT.AC_DTL_TYP%TYPE,
			                          P_A_Cy         IN ACCOUNT_CURR.A_Cy%TYPE)  RETURN NUMBER ;                                     
                                                           
                                                                                    
END Ys_Ac_Dtl_Pkg;
/
CREATE PACKAGE Ys_Ac_Dtl_Sub_Pkg AS
  -----------------------------------------------------------------------------------------------
   FUNCTION Get_Ac_Dtl_Sub_Nm (P_Ac_Code_Dtl_sub In varchar2 ,P_Lng_no In Number) RETURN VARCHAR2 ;
	 -----------------------------------------------------------------------------------------------
	 PROCEDURE Chk_Conn_Ac_dtl_Wth_Sub(P_Ac_Code_Dtl_Sub  IN ACCOUNT.A_CODE%TYPE  DEFAULT NULL, 
	                                P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE  , 
	                                P_Ac_Dtl_Typ   IN OUT ACCOUNT.AC_DTL_TYP%TYPE,
	                                P_Lng_No       IN LANG_DEF.LANG_NO%TYPE DEFAULT 1,
	                                P_Msg_No       IN OUT Number)   ;   
  -----------------------------------------------------------------------------------------------
  PROCEDURE Chk_Ac_Dtl_Sub( P_Ac_Code_Dtl_Sub  IN ACCOUNT.A_CODE%TYPE  ,
                          P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE DEFAULT NULL, 
                          P_AC_CODE      IN ACCOUNT.A_CODE%TYPE  DEFAULT NULL,
                          P_AC_CODE_DTL_SUB_NM    IN OUT ACCOUNT.A_Name%TYPE  ,
                          P_Ac_Dtl_Typ   IN OUT ACCOUNT.AC_DTL_TYP%TYPE,
                          P_Cur_code     IN EX_RATE.CUR_CODE%TYPE  DEFAULT NULL,
                          P_Scr_Typ      IN Number, 
                          P_Doc_Date     IN Date,
                          P_Usr_No       IN Number,
                          P_Lng_No       IN LANG_DEF.LANG_NO%TYPE DEFAULT 1,
                          P_Msg_No       IN OUT Number);
  -----------------------------------------------------------------------------------------------
   FUNCTION Chk_Inactv ( P_AC_Code_Dtl_Sub IN ACCOUNT.A_CODE%TYPE  )  RETURN NUMBER ;                                 
   -----------------------------------------------------------------------------------------------                                                        
                                                                                    
END Ys_Ac_Dtl_Sub_Pkg;
/
CREATE Package Ys_Alrt_Sys_Pkg As
--##--------------------------------------------------------------------------------------##--
  Procedure Chk_Alrt_Prc ( P_Usr_No   In User_R.U_Id%Type      ,
                           P_Lng_No   In Pls_Integer Default 1 ,
                           P_Sys_No   In Number Default Null,
                           P_SHW_ALRT_AFTR_LGN Number Default 0  ) ;
--##--------------------------------------------------------------------------------------##--
Function  Get_Alrt_Usr_Hide_Date ( P_Alrt_No   In S_Alrt_Sys_Mst.Alrt_No%Type   ,
                                   P_Usr_No    In User_R.U_Id%Type              ) Return Date ;
--##--------------------------------------------------------------------------------------##--                                                      
End Ys_Alrt_Sys_Pkg;
/
CREATE PACKAGE YS_APPRVD_PKG AS
    FUNCTION  GET_LVL_NM(P_DOC_TYP IN S_APPRVD_LVL.DOC_TYP%TYPE,P_LVL_NO IN S_APPRVD_LVL.LVL_NO%TYPE)RETURN  VARCHAR2 ;
    --##-----------------------------------------------------------------------------##--
   Procedure INSRT_APPRVD_LVL(  P_DOC_TYP  IN NUMBER, 
                                 P_DOC_SER  IN NUMBER,
                                 P_DOC_NO   IN NUMBER,
                                 P_JV_TYP   IN NUMBER DEFAULT 0 ,
                                 P_DOC_DATE IN DATE,
                                 P_DOC_AMT   IN NUMBER DEFAULT 0 ,
                                 P_CMP_NO   IN NUMBER,
                                 P_BRN_NO   IN NUMBER, 
                                 P_BRN_YEAR IN NUMBER,
                                 P_BRN_USR  IN NUMBER,
		                             P_Ad_U_id  In NUMBER,   
		                             P_Ad_Date  In Date    );
--##-----------------------------------------------------------------------------##--                                 
    Procedure DEL_APPRVD_LVL( P_DOC_TYP IN NUMBER,
                              P_DOC_SER IN NUMBER);                                  
--##-----------------------------------------------------------------------------##--                                 
    PROCEDURE INSRT_AUTO_APPRVD_LVL (
              P_DOC_TYP    IN   NUMBER,
              P_DOC_SER    IN   NUMBER,
              P_DOC_NO     IN   NUMBER,
              P_JV_TYP     IN   NUMBER DEFAULT 0,
              P_DOC_DATE   IN   DATE,
              P_CMP_NO     IN   NUMBER,
              P_BRN_NO     IN   NUMBER,
              P_BRN_YEAR   IN   NUMBER,
              P_BRN_USR    IN   NUMBER,
              P_Ad_U_id    In   NUMBER,   
              P_Ad_Date    In   Date   );

--##-----------------------------------------------------------------------------##--
       PROCEDURE INSRT_AUTO_RJCT_APPRVD_LVL (
              P_DOC_TYP    IN   NUMBER,
              P_DOC_SER    IN   NUMBER,
              P_DOC_NO     IN   NUMBER,
              P_JV_TYP     IN   NUMBER DEFAULT 0,
              P_DOC_DATE   IN   DATE,
              P_CMP_NO     IN   NUMBER,
              P_BRN_NO     IN   NUMBER,
              P_BRN_YEAR   IN   NUMBER,
              P_BRN_USR    IN   NUMBER,
              P_Ad_U_id    In   NUMBER,   
              P_Ad_Date    In   Date   );

--##-----------------------------------------------------------------------------##--
End YS_APPRVD_PKG;
/
CREATE PACKAGE YS_APP_LIC_PKG AS

FUNCTION CHK_INACTIVE_FNC ( P_IMEI       IN   VARCHAR2, 
                            P_SYS_NO     IN   NUMBER,
                            P_MOD_ID     IN   VARCHAR2,
                            P_BRN_USR    IN   NUMBER,
                            P_BRN_YEAR   IN   NUMBER,
                            P_USR_TYP    IN   NUMBER   DEFAULT NULL,
                            P_U_ID       IN   NUMBER   DEFAULT NULL,
                            P_EMP_NO     IN   NUMBER   DEFAULT NULL,
                            P_C_CODE     IN   VARCHAR2 DEFAULT NULL ) RETURN NUMBER;
              
END YS_APP_LIC_PKG;
/
CREATE PACKAGE YS_DSH_BORD_PKG AS

--##--------------------------------------------------------------------------------------##--
                        
TYPE DSH_RCRD IS RECORD( R_COL1  VARCHAR2(3000),
                         R_COL2  VARCHAR2(3000),
                         R_COL3  VARCHAR2(3000),
                         R_COL4  VARCHAR2(3000),
                         R_COL5  VARCHAR2(3000),
                         R_COL6  VARCHAR2(3000),
                         R_COL7  VARCHAR2(3000),
                         R_COL8  VARCHAR2(3000),
                         R_COL9  VARCHAR2(3000),
                         R_COL10 VARCHAR2(3000),
                         R_COL11 VARCHAR2(3000),
                         R_COL12 VARCHAR2(3000),
                         R_COL13 VARCHAR2(3000),
                         R_COL14 VARCHAR2(3000),
                         R_COL15 VARCHAR2(3000),
                         R_COL16 VARCHAR2(3000),
                         R_COL17 VARCHAR2(3000),
                         R_COL18 VARCHAR2(3000),
                         R_COL19 VARCHAR2(3000),
                         R_COL20 VARCHAR2(3000) );

TYPE DSH_RCRD_CV IS REF CURSOR RETURN DSH_RCRD;

TYPE DSH_RCRD_TBL IS TABLE OF DSH_RCRD;
 
 
 FUNCTION POP_DSH_BORD_DATA( P_SLCT      IN VARCHAR2,
                             P_WHR       IN VARCHAR2    DEFAULT NULL,
                             P_GRP_BY    IN VARCHAR2    DEFAULT NULL,
                             P_ORDR      IN VARCHAR2    DEFAULT NULL,
                             P_USR_NO    IN USER_R.U_ID%TYPE ,
                             P_LNG_NO    IN LANG_DEF.LANG_NO%TYPE  DEFAULT 1) RETURN DSH_RCRD_TBL PIPELINED ;
                         
 PROCEDURE FTCH_DSH_BORD_DATA ( SQL_CV      IN OUT DSH_RCRD_CV, 
                                P_SLCT      IN VARCHAR2, 
                                P_WHR       IN VARCHAR2    DEFAULT NULL,
                                P_GRP_BY    IN VARCHAR2    DEFAULT NULL,
                                P_ORDR      IN VARCHAR2    DEFAULT NULL,
                                P_USR_NO    IN USER_R.U_ID%TYPE ,
                                P_LNG_NO    IN LANG_DEF.LANG_NO%TYPE  DEFAULT 1  );
    
--##--------------------------------------------------------------------------------------##--                                
END YS_DSH_BORD_PKG;
/
CREATE PACKAGE YS_EMP_PKG AS

FUNCTION Get_Emp_Nm (P_EMP_NO In S_EMP.EMP_NO%TYPE , P_Lng_NO In NUMBER DEFAULT NULL)  RETURN VARCHAR2;
FUNCTION Get_Emp_Brn (P_EMP_NO In S_EMP.EMP_NO%TYPE )  RETURN  S_BRN.BRN_NO%TYPE ;
FUNCTION Get_Mngr_No (P_EMP_NO In S_EMP.EMP_NO%TYPE)  RETURN NUMBER;
FUNCTION Get_Emp_No_Mchn (P_EMP_NO In S_EMP.EMP_NO%TYPE )  RETURN NUMBER;
FUNCTION Get_Emp_Wrk_Hour (P_EMP_NO In S_EMP.EMP_NO%TYPE , P_Wrk_Hour_Typ In  Number Default 1)  RETURN NUMBER ;
FUNCTION Get_Emp_Slry_Calc ( P_Emp_No     IN      S_EMP.EMP_NO%TYPE) RETURN NUMBER ;
FUNCTION Get_Hrchy_Nm (P_HRCHY_NO In S_HRCHY.HRCHY_NO%TYPE, P_Lng_NO In NUMBER DEFAULT 1)  RETURN VARCHAR2;
FUNCTION Get_Grntr_Nm (P_GRNTR_NO In S_GRNTR.GRNTR_NO%TYPE, P_Lng_NO In NUMBER DEFAULT 1)  RETURN VARCHAR2;
FUNCTION Get_SPNSR_Nm (P_SPNSR_NO In S_SPNSR.SPNSR_NO%TYPE, P_Lng_NO In NUMBER DEFAULT 1)  RETURN VARCHAR2;
PROCEDURE Get_Emp_Fld (  P_EMP_NO      In S_EMP.EMP_NO%TYPE,
                         P_LNG_NO      In NUMBER DEFAULT 1,
                         P_EMP_NM      In OUT S_EMP.EMP_L_NM%TYPE,
                         P_EMP_JOB_NO  In OUT S_EMP.EMP_JOB_NO%TYPE, 
                         P_HRCHY_NO    In OUT S_EMP.HRCHY_NO%TYPE,
                         P_EMP_JOB_NM  In OUT VARCHAR2, 
                         P_HRCHY_NM    In OUT VARCHAR2
                         )  ;

PROCEDURE Chk_Emp ( P_Hrs_Sys          IN NUMBER   DEFAULT 0,
                    P_Emp_No           IN VARCHAR2,
                    P_Lng_No           IN NUMBER            DEFAULT NULL,
                    P_Usr_No           IN USER_R.U_ID%TYPE,
                    P_Scr_Typ          IN NUMBER   DEFAULT 1,
                    P_Doc_Date         IN DATE    DEFAULT NULL,
                    P_Emp_Nm           IN Out S_EMP.EMP_L_NM%TYPE,
                    P_Emp_Prv_Typ      In Number DEFAULT NULL,
                    P_Msg_No           IN Out NUMBER );
                                             
PROCEDURE Chk_Emp ( P_Emp_No           IN S_EMP.EMP_NO%TYPE,
                    P_Brn_No           IN S_BRN.BRN_NO%TYPE DEFAULT NULL,
                    P_Lng_No           IN NUMBER            DEFAULT NULL,
                    P_Usr_No           IN USER_R.U_ID%TYPE,
                    P_Scr_Typ          IN NUMBER   DEFAULT 1,
                    P_Doc_Date         IN DATE    DEFAULT NULL,
                    P_Emp_Nm           IN Out S_EMP.EMP_L_NM%TYPE,
                    P_Chk_Slry_Calc    In Number Default 1,
                    P_Chk_Slry_St      In Number Default 0,
                    P_Chk_Emp_Crnt_St  In Number Default 0,
                    P_Chk_Fng_Calc     In Number Default 0,
                    P_Emp_Prv_Typ      In Number Default Null,
                    P_Msg_No           IN Out NUMBER );

FUNCTION Get_Code_Nm (P_COD_TYP  S_EMP_CODE_DTL.CODE_TYP%TYPE,P_COD_NO  S_EMP_CODE_DTL.CODE_NO%TYPE , P_Lng_no In NUMBER DEFAULT NULL  ) RETURN VARCHAR2 ;
FUNCTION Get_Code_Typ_Nm (P_COD_TYP  S_EMP_CODE_MST.CODE_TYP%TYPE, P_Lng_no In NUMBER DEFAULT NULL  ) RETURN VARCHAR2;
FUNCTION Get_Emp_Hldy_Blnc ( P_Emp_No  IN S_EMP.EMP_NO%TYPE , P_Hldy_No  IN S_EMP_HLDY_BLNC.HLDY_NO%TYPE) RETURN NUMBER ;
FUNCTION Get_Emp_Fld_val (P_Fld_Nm VARCHAR2,P_EMP_NO  S_EMP.EMP_NO%TYPE) RETURN VARCHAR2 ;
FUNCTION CHK_EMP_TRNS(P_EMP_NO S_EMP.EMP_NO%TYPE) RETURN BOOLEAN ;
FUNCTION Get_Hrchy_TYP_Nm (P_HRCHY_TYP_NO In S_HRCHY_TYP.TYP_NO%TYPE, P_Lng_NO In NUMBER DEFAULT 1)  RETURN VARCHAR2 ;

FUNCTION Get_TYP_Nm (P_TYP_NO In S_HRCHY_TYP.TYP_NO%TYPE, P_Lng_NO In NUMBER DEFAULT 1)  RETURN VARCHAR2;
Function CHK_EMP_MNG  (P_EMP_NO_MNG Number  ,P_EMP_NO Number DEFAULT NULL  ,P_EMP_TYP Number DEFAULT 1 ) Return Number;
PROCEDURE INSRT_EMP_PRV_PRC ( P_Emp_No           IN S_EMP.EMP_NO%TYPE,
                              P_Usr_No           IN USER_R.U_ID%TYPE );

FUNCTION Get_loc_Nm (P_loc_No In GNR_ATTNDNC_LOC.Loc_No%Type , P_Lng_No In Number Default Null)  Return Varchar2;

END YS_EMP_PKG;
/
CREATE PACKAGE Ys_Exp_File_Pkg As
 --##-------------------------------------------------------------------------------------##--
 FUNCTION Get_File_Ac_Stmnt_Fnc ( P_a_code        In  VARCHAR2 ,
                                  P_ac_code_dtl   In  VARCHAR2  Default Null,
                                  P_ac_dtl_typ    In  Number    Default Null,
                                  P_a_cy          In  VARCHAR2  Default Null, 
                                  P_F_Date        In  Date,
                                  P_T_Date        In  Date      Default Null,
                                  P_Doc_Post      In  Number    Default 2,
                                  P_loc_cur       In  VARCHAR2  Default Ias_Gen_Pkg.Get_Local_Cur ,
                                  P_Lng_no        In  Number    Default 1)  Return VARCHAR2 ;
 --##-------------------------------------------------------------------------------------##--


--##-------------------------------------------------------------------------------------##-- 
End Ys_Exp_File_Pkg;
/
CREATE PACKAGE YS_GEN_PKG AS
  FUNCTION GET_PRD_NM (P_PRD_NO IN S_PRD_DTL.PRD_NO%TYPE ,P_LNG_NO IN NUMBER DEFAULT 1   )  RETURN VARCHAR2 ;
  PROCEDURE Get_Prd_YR_No (P_Doc_Date In Date , P_PRD_NO IN OUT NUMBER , P_YR_NO IN OUT NUMBER) ;
  FUNCTION CHK_SYSTEM_NM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE ,P_LNG_NO IN NUMBER ) RETURN  VARCHAR2 ;
  FUNCTION CHK_INACTV_SYSTEM (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE,P_BRN_USR IN S_ERP_SYSTEM_Dbs.BRN_USR%TYPE) RETURN NUMBER ;
  FUNCTION CHK_ACTV_SYSTEM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE,P_BRN_USR IN S_ERP_SYSTEM_Dbs.BRN_USR%TYPE) RETURN NUMBER ;
  FUNCTION GET_SYSTEM_SCR_NO  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE) RETURN NUMBER ;
  FUNCTION Get_Cnt (SqlStr VARCHAR2)  RETURN NUMBER ;
  FUNCTION Get_Frst_Day RETURN DATE ;
  FUNCTION Get_Final_Day RETURN DATE ;

  FUNCTION Get_Sysdate  RETURN DATE ;
  FUNCTION Get_Curdate  RETURN DATE ;
  FUNCTION Get_Local_Cur RETURN VARCHAR2 ;
  FUNCTION Chk_Cur_Code ( P_CUR_CODE IN EX_RATE.CUR_CODE%TYPE) RETURN Number;

  Function Get_Cur_Rate (P_cur_code       In Varchar2             ,
	                       P_Rate_Type In Number Default  0    ,
	                       P_Date      In Date   Default  Null ,
	                       P_USR_NO    In Number Default  NULL    ) Return Number;
  FUNCTION Chk_Cur_Rate( P_Cur_Code    In Varchar2           , 
                         P_Cur_Rate    In Number               ,
                         P_Local_Cur   In Varchar2             ,
                         P_Rate_Type   In Number Default 0     ,
                         P_Doc_Date    In Date   Default  Null ) Return Number; 
  FUNCTION Get_Update_Doc_Period (P_UserNo  In Number ,
                                    P_Ad_Date In Date   )  RETURN NUMBER ;
  FUNCTION Get_Delete_Doc_Period (P_UserNo  In Number ,
                                    P_Ad_Date In Date   )  RETURN NUMBER ;
  FUNCTION Get_Usr_Fld_Prv ( P_Usr_No In Number , 
                               P_Frm_No In Number , 
                               P_Tab_Nm In Varchar2,
                              P_Fld_Nm In Varchar2)  RETURN NUMBER;
  FUNCTION Get_Fld_Value (P_Tab_Nm In Varchar2 ,P_Fld_Nm In Varchar2,P_WHR In varchar2 Default Null)  RETURN VARCHAR2 ;
  FUNCTION Get_Flg_Nm (P_flg_code In varchar2,P_flg_value In Number ,P_Lng_no In Number Default 1)  RETURN VARCHAR2 ;
  FUNCTION Get_Prompt (P_Lng_no In number ,P_Lbl_no In Number) RETURN VARCHAR2;
  FUNCTION Get_Msg  (P_Lng_no In number ,P_Msg_no In Number) RETURN VARCHAR2;
  FUNCTION Get_Frm_Nm (P_Frm_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2 ;

  FUNCTION GET_FRMT_FLD_FNC ( P_NO_OF_DCML IN NUMBER ) RETURN VARCHAR2;
  FUNCTION CHK_DUP_FLD_FNC ( P_TBL_NM IN VARCHAR2 ,P_FLD_NM IN VARCHAR2 ,P_FLD_VAL IN VARCHAR2) RETURN NUMBER;
  FUNCTION CHK_FLD_MNDTRY (P_FRM_NO IN FORM_DETAIL.FORM_NO%TYPE ,P_TBL_NM IN VARCHAR2 , P_FLD_NM IN VARCHAR2 )  RETURN NUMBER ;
  FUNCTION Get_Extra_Prmtrs( P_Scr_No FORM_DETAIL.FORM_NO%Type, P_Usr_No USER_R.U_ID%Type ) Return Varchar2;
  FUNCTION Chk_Lock_Rcrd (P_Tab Varchar2,P_Whr  Varchar) Return Boolean;


  FUNCTION CHECK_DATE( P_Usr_No   In Number ,
                       P_BRN_NO   In Number ,
                       P_doc_date In Date , 
                       P_Scr_Type In Varchar2,
                       P_Frm_Type In Number Default 0,
                       P_chk_cls  In Number Default 1 )Return Number ;

  FUNCTION Get_Doc_Typ_Frm ( P_Frm_No FORM_DETAIL.FORM_NO%Type ) Return NUMBER  ;  
  FUNCTION Get_DocTyp_Nm (P_Doc_Typ In Number ,P_Lng_no In Number Default 1)  RETURN VARCHAR2 ;                   
  FUNCTION CHK_ACTV_SYSTEM_DBS  (P_Sys_Code  In Varchar2) RETURN NUMBER;                                                          
  FUNCTION Get_Val (SqlStr VARCHAR2)  RETURN VARCHAR2;
  FUNCTION CHK_FRM_PARENT_INACTV ( P_F_PARENT_NO FORM_DETAIL.F_PARENT_NO%TYPE, P_F_INACTIVE  FORM_DETAIL.F_INACTIVE%TYPE ) RETURN NUMBER;  
  PROCEDURE Exc_Sql ( P_SqlStr  In  Varchar2 , P_SqlErr In Out Varchar2  );
  Function Get_Numeric_Frmt_Msk ( P_Amt In Number , P_No_Of_Dcml In Number  )  Return Char;
  Function Get_Regexp_Replace_Fnc ( P_Str         In Varchar2, 
                                    P_Pttrn       In Varchar2,
                                    P_Rplcmnt_Str In Varchar2 Default Null,
                                    P_Strt_Pos    In Number   Default 1,
                                    P_Nth_Apprnc  In Number   Default 0,
                                    P_Mtch_Prmtr  In Varchar2 Default Null)  Return Varchar2;
                                    
  FUNCTION GET_NVL2_FNC(P_VAL1 VARCHAR2, P_VAL2 VARCHAR2 , P_VAL3 VARCHAR2) RETURN VARCHAR2;                                    
                                    
END YS_GEN_PKG;
/
CREATE PACKAGE Ys_Itm_Lov_Pkg AS
  TYPE T_Slct_Itms IS TABLE OF Gr_Detail%Rowtype Index By Binary_Integer;
  
  V_Slct_Itms   T_Slct_Itms;
  
  TYPE Itm_Rcrd IS RECORD ( R_COL1  VARCHAR2(1000),
                            R_COL2  VARCHAR2(1000),
                            R_COL3  VARCHAR2(1000),
                            R_COL4  VARCHAR2(1000),
                            R_COL5  VARCHAR2(1000),
                            R_COL6  VARCHAR2(1000),
                            R_COL7  VARCHAR2(1000),
                            R_COL8  VARCHAR2(1000),
                            R_COL9  VARCHAR2(1000),
                            R_COL10 VARCHAR2(1000)) ;

  V_Itm_Rcrd ITM_RCRD;  
  
  TYPE Rcrd_Cv IS REF CURSOR RETURN Itm_Rcrd;
  TYPE Rcrd_Tbl IS TABLE OF Itm_Rcrd;
    
  PROCEDURE Clr_Itm_Lst  ;
  PROCEDURE Slct_Itm   ( P_I_Code      In Gr_Detail.I_Code%Type,
                         P_Itm_Unt     In Gr_Detail.Itm_Unt%Type,
                         P_W_Code      In Gr_Detail.W_Code%Type,
                         P_Expire_Date In Gr_Detail.Expire_Date%Type,
                         P_Batch_No    In Gr_Detail.Batch_No%Type, 
                         P_I_Price     In Gr_Detail.I_Price%Type,
                         P_Itm_Inx     In OUT NUMBER ) ;
  PROCEDURE Deslct_Itm (P_Itm_Inx In Number);
  FUNCTION Pop_Slct_Data RETURN RCRD_TBL PIPELINED;    
  PROCEDURE Fetch_Slct_Itms ( SQL_CV IN OUT RCRD_CV);
END Ys_Itm_Lov_Pkg ;
/
CREATE PACKAGE Ys_Lov_Slct_Pkg AS
  
  TYPE Data_Rcrd IS RECORD ( R_Col1  VARCHAR2(2000)) ;
  TYPE T_Slct_Data IS TABLE OF Data_Rcrd Index By Binary_Integer;
  
  V_Slct_Data   T_Slct_Data;
  
  V_Data_Rcrd Data_Rcrd;
  
  TYPE Rcrd_Cv IS REF CURSOR RETURN Data_Rcrd;
  TYPE Rcrd_Tbl IS TABLE OF Data_Rcrd;
    
  PROCEDURE Clr_Data  ;
  PROCEDURE Slct_Data ( P_Col1 In Varchar2) ;
  PROCEDURE Deslct_Data (P_Col1 In Varchar2);
  FUNCTION  Pop_Slct_Data RETURN RCRD_TBL PIPELINED;    
  PROCEDURE Fetch_Slct_Data ( SQL_CV IN OUT RCRD_CV);
END Ys_Lov_Slct_Pkg;
/
CREATE PACKAGE YS_Mnd_Ac_Dtl_Pkg IS
v_lng_no            NUMBER;
v_Post_Cheque_Type  NUMBER;

PROCEDURE Get_Para(P_lng_no In NUMBER);
PROCEDURE Chk_Ac_Dtl_Trns_Prc (P_DocType In NUMBER Default Null);
PROCEDURE Chk_Ac_Dtl_Null ( P_lang_no  In NUMBER Default 1,
                            P_doc_type In NUMBER Default Null,
                            P_Doc_Post In NUMBER Default 0,
                            P_Ret_Val  In Out NUMBER,
                            F_Date     In Date Default ias_gen_pkg.get_frst_day,
                            T_Date     In Date Default ias_gen_pkg.get_final_day );
END YS_Mnd_Ac_Dtl_Pkg;
/
CREATE PACKAGE YS_MOBILE_APPRVD_PKG AS
       PROCEDURE YS_ONYXMOBIL_APPRVD (
              P_DOC_TYP      IN   NUMBER,
              P_DOC_SER      IN   NUMBER,
              P_APPRVD_FLG   IN   NUMBER DEFAULT 0,
              P_USR_NO       IN   NUMBER,
              P_APRV_DSC     IN   VARCHAR2,
              P_LVL_NO       IN   NUMBER);

       PROCEDURE NTFCATION_APPRVD_MOBILE (
              P_TOKENID   IN   VARCHAR2,
              P_MSG_SUB   IN   VARCHAR2,
              P_MSG_TXT   IN   VARCHAR2,
              P_SYS_NO    IN   NUMBER,
              P_DOC_SER   IN   VARCHAR2,
              P_DOC_TYP   IN   VARCHAR2,
              P_DOC_NM    IN   VARCHAR2,
              P_DVS_TYP   IN   NUMBER DEFAULT 1);
--##-----------------------------------------------------------------------------##--
END YS_MOBILE_APPRVD_PKG;
/
CREATE Package YS_POST_INV_TRNS_PKG As
    PROCEDURE Update_Post_tr ;
    Procedure Check_Duplicate_Tr(  P_Tr_Inout_Type Ias_Whtrns_Mst.Tr_Inout_Type%Type ,
                                   P_Tr_No         Ias_Whtrns_Mst.Tr_No%Type         ,
                                   P_Tr_Type       Ias_Whtrns_Mst.Tr_Type%Type       ,
                                   P_Tr_Ser        Ias_Whtrns_Mst.Tr_Ser%Type        ,
                                   P_Wcode         Ias_Whtrns_Mst.W_Code%Type        ); 

    PROCEDURE Check_Duplicate_SI(P_Bill_No In Number,P_Bill_Doc_Type In NUmber,P_Bill_Ser In NUmber )  ;                             
    PROCEDURE Check_Duplicate_Sr(P_Rt_Bill_No In Number,P_Rt_Bill_Doc_Type In NUmber,P_Rt_Bill_Ser In NUmber )  ;

    PROCEDURE Insert_Installemnt (P_Doc_Type    Number,
                                  P_BillNo      Number,
                                  P_billdoctype Number,
                                  P_BillSer     Number,
                                  P_Billdate    Date,
                                  P_User_Id     Number,
                                  P_billcur     Varchar2,
                                  P_CashNo      Number,
                                  P_ccode       Varchar2,
                                  P_Typ         Varchar2 Default 'D') ;

    Procedure Insert_Other_Charges (P_Billno      Number,
                                    P_Billdoctype Number,
                                    P_Billser     Number,
                                    P_Billdate    Date,
                                    P_User_Id     Number,
                                    P_Billcur     Varchar2,
                                    P_Cashno      Number,
                                    P_Ccode       Varchar2,
                                    P_Typ         Varchar2 Default 'D') ;
    Procedure Insert_Other_Charges_Sr ( P_Rt_Billno      Number,
                                        P_Rt_Billdoctype Number,
                                        P_Rt_Billser     Number,
                                        P_Rt_Billdate    Date,
                                        P_User_Id        Number,
                                        P_Rt_Billcur     Varchar2,
                                        P_Cashno         Number,
                                        P_Ccode          Varchar2,
                                        P_Typ            Varchar2 Default 'D') ;  
    PROCEDURE Check_Avl_Qty (  P_Doc_Type Number);                                                            
                                                             
    Function Get_Bill_No (  P_Invoicing_Serials In Number   ,
                            P_Si_Type           In Number   ,
                            P_Cc_Code           In Varchar2 ,                        
                            P_Bill_Doc_Type     In Number   ,
                            P_W_Code            In Number   ,
                            P_Brn_No            In Number   ) Return Number ;
   
   Function Get_Bill_No_Br (  P_Invs In Number   ,
		                          P_Si_Type           In Number   ,
		                          P_Cc_Code           In Varchar2 ,                        
		                          P_Bill_Doc_Type     In Number   ,
		                          P_W_Code            In Number   ,
		                          P_Brn_No            In Number   ) Return Number ;
                            
    Function Get_Bill_Ser ( P_Invs              In Number ,
                            P_Si_Type           In Number,
                            P_Cc_Code           In Varchar2,
                            P_Bill_No           In Number, 
                            P_Bill_Doc_Type     In Number,
                            P_W_Code            In Number,
                            P_Brn_No            In Number,
                            P_Brn_Year          IN Number) Return Number  ;   
                            
    FUNCTION Get_Rt_Bill_No ( P_Invs_Sr          In Number,
                              P_sr_Type          In Number,
                              P_Cc_Code          In Varchar2,                        
                              P_Bill_doc_type    In Number,
                              P_W_Code           In Number,
                              P_brn_no           In number) Return Number ;
   FUNCTION Get_Rt_Bill_No_Br ( P_Invs_Sr          In Number,
	                              P_sr_Type          In Number,
	                              P_Cc_Code          In Varchar2,                        
	                              P_Bill_doc_type    In Number,
	                              P_W_Code           In Number,
	                              P_brn_no           In number) Return Number ;
   FUNCTION Get_Rt_Bill_Ser (   P_Invs_Sr       IN Number,
                                P_sr_Type       IN Number,
                                P_Cc_Code       IN Varchar2,
                                P_Rt_Bill_No    IN Number, 
                                P_Bill_doc_type IN Number,
                                P_W_Code        IN Number,
                                P_brn_no        IN number,
                                P_Brn_Year      IN Number) Return Number ;
   Function Get_Gr_No_Br ( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
                           P_Ser_Type  In  Ias_Para_Inv.Incoming_Serial%Type ,
                           P_Inc_Type  In  Gr_Note.Incom_Type%Type           ,
                           P_W_Code    In  Gr_Note.W_Code%Type               ) Return Number ;

   FUNCTION Get_Out_No_Br ( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
                            P_Ser_Type  In  Ias_Para_Inv.Outgoing_Serial%Type ,
                            P_Out_Type  In  Ias_Outgoing_Mst.Out_Type%Type    ,
                            P_W_Code    In  Ias_Outgoing_Mst.W_Code%Type      ) Return Number ;
   Function Get_Out_Br_Ser ( P_Outgoing_Serial In Number ,
                             P_Out_Type        In Number,
                             P_Out_No          In Number, 
                             P_W_Code          In Number,
                             P_Brn_No          In Number,
                             P_Brn_Year        In Number) Return Number ;
 
        Function Get_Gr_Br_Ser (   P_Incoming_Serial In Number ,
                                   P_Inc_Type        In Number,
                                   P_Inc_No          In Number, 
                                   P_W_Code          In Number,
                                   P_Brn_No          In Number,
                                   P_Brn_Year        In Number) Return Number;
--##--------------------------------------------------------------------------------##--                                             
   
   Procedure Post_Incmng ( P_Doc_Ser  In Gr_Note.G_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_OutGoing ( P_Doc_Ser  In Ias_Outgoing_Mst.Out_Ser%Type   Default Null , P_Use_Adjstmnt In Number Default 0 ,P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_Out  ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_Use_Adjstmnt In Number Default 0 , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_In ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_Out_In ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   
   PROCEDURE Post_Sales_Detail ( P_Doc_Ser  In Ias_Bill_Mst.Bill_Ser%Type   Default Null , P_Use_Adjstmnt In Number Default 0 ,P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   PROCEDURE Post_Rt_Sales_Detail ( P_Doc_Ser  In Ias_Rt_Bill_Mst.Rt_Bill_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;   
   PROCEDURE Post_Sales_Sum ;
   PROCEDURE Post_Rt_Sales_Sum ( P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;   
   PROCEDURE Post_Stk_Adjstmnt ;  
   PROCEDURE Post_Jv;
   PROCEDURE Post_Vchr;
   PROCEDURE Insrt_Tax (P_Doc_Type In Number , P_Doc_Ser In Number) ;
   PROCEDURE Insrt_Point_Trns (P_Doc_Type In Number , P_Doc_Ser In Number);
   PROCEDURE Post_Serial (P_Doc_Ser In Number , P_Doc_Type In Number);
   FUNCTION Get_Card_Comm_Prcnt (P_Cr_Card_No In Number) RETURN Number;
   PROCEDURE Post_Trns_Data_Auto ;
 
End YS_POST_INV_TRNS_PKG ;
/
CREATE PACKAGE YS_SCR_Pkg as
 FUNCTION Get_Scr_Nm      ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE,P_Lng_no In Number Default 1 ) Return VARCHAR2;
 FUNCTION Get_Scr_Doc_Typ ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE ) Return NUMBER;
 FUNCTION Get_Scr_No      ( P_Doc_Typ  In FORM_DETAIL.DOC_TYP%TYPE ) Return NUMBER ;
 FUNCTION Get_Scr_Parent_No ( P_Scr_No In Form_Detail.Form_No%Type  ) Return Number ;
 FUNCTION Get_Scr_Sys_No ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE ) Return NUMBER ;
 FUNCTION Get_Scr_Orgnl ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE ) Return NUMBER ;
 FUNCTION Get_Scr_Parent_Prv ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE , P_U_ID IN USER_R.U_ID%TYPE ) Return NUMBER ;
End YS_SCR_Pkg ;
/
CREATE PACKAGE YS_SRL_SCR_PKG AS

PROCEDURE Get_Sys_Sq  ( P_TYP      IN Number, -- 1 => Get New Sequence , 2=> Check Duplicate
                        P_TBL_NM   IN Varchar2,
                        P_Fld_Sq   IN Varchar2,--Field that sequence it
                        P_Fld_Nm1  IN Varchar2 Default Null,P_Fld_Nm2 IN Varchar2 Default Null,P_Fld_Nm3 IN Varchar2 Default Null,P_Fld_Nm4 IN Varchar2 Default Null,P_Fld_Nm5 IN Varchar2 Default Null,P_Fld_Nm6 IN Varchar2 Default Null,P_Fld_Nm7 IN Varchar2 Default Null,P_Fld_Nm8 IN Varchar2 Default Null,P_Fld_Nm9 IN Varchar2 Default Null,P_Fld_Nm10 IN Varchar2 Default Null,P_Fld_Nm11 IN Varchar2 Default Null,P_Fld_Nm12 IN Varchar2 Default Null,
                        P_Fld_Val1 IN Varchar2 Default Null,P_Fld_Val2 IN Varchar2 Default Null,P_Fld_Val3 IN Varchar2 Default Null,P_Fld_Val4 IN Varchar2 Default Null,P_Fld_Val5 IN Varchar2 Default Null,P_Fld_Val6 IN Varchar2 Default Null,P_Fld_Val7 IN Varchar2 Default Null,P_Fld_Val8 IN Varchar2 Default Null,P_Fld_Val9 IN Varchar2 Default Null,P_Fld_Val10 IN Varchar2 Default Null,P_Fld_Val11 IN Varchar2 Default Null,P_Fld_Val12 IN Varchar2 Default Null,
                        P_Sq_Val   IN OUT Varchar2,
                        P_Chk_Val  IN OUT Number,
                        P_Max_Scr  In Number  Default Null, 
                        P_Mlt_Rec  In Number  Default 0);
                                                                                                                                                                     
END YS_SRL_SCR_PKG;
/
CREATE PACKAGE YS_SYS_GEN_PKG AS
  
  FUNCTION CHK_SYSTEM_NM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE ,P_LNG_NO IN NUMBER ) RETURN  VARCHAR2 ;
  FUNCTION CHK_INACTV_SYSTEM (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE,P_BRN_USR IN S_ERP_SYSTEM_Dbs.BRN_USR%TYPE) RETURN NUMBER ;
  FUNCTION CHK_ACTV_SYSTEM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE,P_BRN_USR IN S_ERP_SYSTEM_Dbs.BRN_USR%TYPE) RETURN NUMBER ;
  FUNCTION CHK_ACTV_SYSTEM_DBS  (P_Sys_Code  In Varchar2) RETURN NUMBER;
  FUNCTION GET_SYSTEM_SCR_NO  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE) RETURN NUMBER ;
  
END YS_SYS_GEN_PKG;
/
CREATE PACKAGE YS_TAX_PKG as
 FUNCTION GET_TAX_NM ( P_TAX_NO IN GNR_TAX_CODE_MST.TAX_NO%TYPE ,
                       P_LNG_NO IN NUMBER                      ) RETURN GNR_TAX_CODE_MST.TAX_L_NM%TYPE ;
 FUNCTION GET_TAX_AGNCY_NM ( P_TAX_NO   IN GNR_TAX_CODE_MST.TAX_NO%TYPE ,
                             P_AGNCY_NO IN GNR_TAX_CODE_DTL.AGNCY_NO%TYPE ,
                             P_LNG_NO   IN NUMBER                      ) RETURN GNR_TAX_CODE_DTL.AGNCY_L_NM%TYPE ;
 ----------------------------------------------------------------------------------------------------------------
 FUNCTION GET_CLC_TAX_NM ( P_CLC_TYP_NO  IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE ,
                           P_LNG_NO      IN NUMBER                              ) RETURN GNR_TAX_TYP_CLC_MST.CLC_TYP_L_NM%TYPE ;
 ----------------------------------------------------------------------------------------------------------------
 FUNCTION CHK_USE_TAX ( P_CLC_DOC_TYP IN GNR_TAX_CODE_MST.CLC_DOC_TYP%TYPE ) RETURN NUMBER ; -- CLC_DOC_TYP  1= SALES ,2 = PURCHASE , 3=BOTH
 ----------------------------------------------------------------------------------------------------------------
 FUNCTION GET_CLC_TYP_NO_DFLT ( P_BRN_NO   IN S_BRN.BRN_NO%TYPE  ) RETURN NUMBER;

FUNCTION GET_CLC_TYP_NO_TRNSPRD( P_CLC_TYP_NO  IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE ,
                                 P_BRN_NO      IN S_BRN.BRN_NO%TYPE  ) RETURN NUMBER;  
 FUNCTION GET_CLC_TYP_NO ( P_CLC_TAX_TYP IN GNR_TAX_TYP_CLC_MST.CLC_TAX_TYP%TYPE) RETURN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE ;
 ----------------------------------------------------------------------------------------------------------------
 FUNCTION GET_CLC_TYP_NO_EXMPT ( P_CLC_TYP_NO IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE) RETURN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE;
 ----------------------------------------------------------------------------------------------------------------
 FUNCTION GET_CLC_TAX_TYP ( P_CLC_TYP_NO  IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE) RETURN GNR_TAX_TYP_CLC_MST.CLC_TAX_TYP%TYPE ;  
 ----------------------------------------------------------------------------------------------------------------
 FUNCTION GET_ITM_TAX_PRCNT ( P_CLC_TYP_NO  IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE  ,
                              P_I_CODE      IN IAS_ITM_MST.I_CODE%TYPE              ,
                              P_CLC_USD_ITM IN NUMBER                     DEFAULT 1 ) RETURN NUMBER;
 ----------------------------------------------------------------------------------------------------------------
 FUNCTION GET_INPT_PRCNT ( P_CLC_TYP_NO  IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE  ,
                           P_INPT_TYP    IN GNR_TAX_INPT.INPT_TYP%TYPE  ,
                           P_INPT_CODE   IN GNR_TAX_INPT.INPT_CODE%TYPE ) RETURN NUMBER ;
 ----------------------------------------------------------------------------------------------------------------
 PROCEDURE DEL_RQ_TAX_MOVMNT ( P_DOC_TYP   IN GNR_RQ_TAX_ITM_MOVMNT.DOC_TYPE%TYPE ,
                               P_DOC_SER   IN GNR_RQ_TAX_ITM_MOVMNT.DOC_SER%TYPE  );
 PROCEDURE DEL_TAX_MOVMNT ( P_DOC_TYP   IN GNR_TAX_ITM_MOVMNT.DOC_TYPE%TYPE ,
                            P_DOC_SER   IN GNR_TAX_ITM_MOVMNT.DOC_SER%TYPE  );                            
 PROCEDURE DEL_TAX_INPT_MOVMNT ( P_DOC_TYP   IN GNR_TAX_INPT_MOVMNT.DOC_TYPE%TYPE ,
                                 P_DOC_SER   IN GNR_TAX_INPT_MOVMNT.DOC_SER%TYPE  );                           
 ----------------------------------------------------------------------------------------------------------------                            
 PROCEDURE CHK_B4_CLC_TAX (   P_CLC_TYP_NO        IN GNR_TAX_ITM_MOVMNT.CLC_TYP_NO%TYPE    ,
                               P_DOC_TYP           IN GNR_TAX_ITM_MOVMNT.DOC_TYPE%TYPE      ,  -- DOC_TYPE IN  IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS                                
                               P_DOC_SER           IN GNR_TAX_ITM_MOVMNT.DOC_SER%TYPE       ,
                               P_A_CY              IN GNR_TAX_ITM_MOVMNT.A_CY%TYPE          ,
                               P_TBL_DTL_NM        IN VARCHAR2                              ,
                               P_FLD_DOC_SER       IN VARCHAR2                              ,
                               P_CLC_DOC_TYP       IN NUMBER                                ,-- CLC_DOC_TYP  1= SALES ,2 = PURCHASE ,
                               P_LNG_NO            IN NUMBER                                );   
                                   
 ----------------------------------------------------------------------------------------------------------------
PROCEDURE CLC_ITM_TAX_AFTR_SAVE ( P_CLC_TYP_NO        IN GNR_TAX_ITM_MOVMNT.CLC_TYP_NO%TYPE    ,
                                   P_DOC_TYP           IN GNR_TAX_ITM_MOVMNT.DOC_TYPE%TYPE      ,  -- DOC_TYPE IN  IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS                                
                                   P_DOC_NO            IN GNR_TAX_ITM_MOVMNT.DOC_NO%TYPE        ,
                                   P_DOC_SER           IN GNR_TAX_ITM_MOVMNT.DOC_SER%TYPE       ,
                                   P_BILL_DOC_TYP      IN GNR_TAX_ITM_MOVMNT.BILL_DOC_TYPE%TYPE , 
                                   P_DOC_JV_TYP        IN GNR_TAX_ITM_MOVMNT.DOC_JV_TYPE%TYPE   ,
                                   P_DOC_DATE          IN GNR_TAX_ITM_MOVMNT.DOC_DATE%TYPE      ,
                                   P_A_CY              IN GNR_TAX_ITM_MOVMNT.A_CY%TYPE          ,                                   
                                   P_AC_RATE           IN GNR_TAX_ITM_MOVMNT.AC_RATE%TYPE       ,
                                   P_STK_RATE          IN GNR_TAX_ITM_MOVMNT.STK_RATE%TYPE      ,
                                   P_CALC_VAT_AMT_TYPE IN IAS_PARA_AR.CALC_VAT_AMT_TYPE%TYPE    ,
                                   P_CLC_USD_ITM       IN NUMBER  DEFAULT 1                     ,
                                   P_CLC_RTRN_DOC      IN NUMBER  DEFAULT 0                     ,
                                   P_TBL_MVMNT_NM      IN VARCHAR2                              ,
                                   P_TBL_MST_NM        IN VARCHAR2                              ,
                                   P_TBL_DTL_NM        IN VARCHAR2                              ,
                                   P_FLD_DOC_SER       IN VARCHAR2                              ,
                                   P_FLD_TAX_A_CODE    IN VARCHAR2                              ,
                                   P_FLD_W_CODE        IN VARCHAR2                              ,                                  
                                   P_FLD_I_PRICE       IN VARCHAR2                              ,                         
                                   P_FLD_FREE_QTY      IN VARCHAR2                              ,
                                   P_FLD_DISC_AMT      IN VARCHAR2                              ,
                                   P_FLD_STK_COST      IN VARCHAR2                              ,
                                   P_FLD_DOC_SEQ       IN VARCHAR2                              ,
                                   P_CLC_DOC_TYP       IN NUMBER                                ,-- CLC_DOC_TYP  1= SALES ,2 = PURCHASE ,
                                   P_LNG_NO            IN NUMBER                                );                                      
 ----------------------------------------------------------------------------------------------------------------
 PROCEDURE CLC_INPT_TAX_AFTR_SAVE ( P_CLC_TYP_NO        IN GNR_TAX_INPT_MOVMNT.CLC_TYP_NO%TYPE    ,
                                    P_DOC_TYP           IN GNR_TAX_INPT_MOVMNT.DOC_TYPE%TYPE      ,  -- DOC_TYPE IN  IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS                                
                                    P_DOC_NO            IN GNR_TAX_INPT_MOVMNT.DOC_NO%TYPE        ,
                                    P_DOC_SER           IN GNR_TAX_INPT_MOVMNT.DOC_SER%TYPE       ,
                                    P_BILL_DOC_TYP      IN GNR_TAX_INPT_MOVMNT.BILL_DOC_TYPE%TYPE , 
                                    P_DOC_JV_TYP        IN GNR_TAX_INPT_MOVMNT.DOC_JV_TYPE%TYPE   ,
                                    P_DOC_DATE          IN GNR_TAX_INPT_MOVMNT.DOC_DATE%TYPE      ,
                                    P_A_CY              IN GNR_TAX_INPT_MOVMNT.A_CY%TYPE          ,
                                    P_AC_RATE           IN GNR_TAX_INPT_MOVMNT.AC_RATE%TYPE       ,
                                    P_TBL_INPT_NM       IN VARCHAR2                               ,
                                    P_TBL_MST_NM        IN VARCHAR2                DEFAULT NULL   ,
                                    P_TBL_DTL_NM        IN VARCHAR2                DEFAULT NULL   ,                                    
                                    P_FLD_DOC_SER       IN VARCHAR2                               ,
                                    P_FLD_DOC_AMT       IN VARCHAR2                DEFAULT NULL   ,
                                    P_FLD_DOC_SER_INPT  IN VARCHAR2                               ,
                                    P_FLD_TAX_A_CODE    IN VARCHAR2                               ,
                                    P_INPT_TYP          IN NUMBER                                 ,                         
                                    P_FLD_INPT_CODE     IN VARCHAR2                               ,
                                    P_FLD_INPT_AMT      IN VARCHAR2                               ,
                                    P_FLD_DOC_SEQ       IN VARCHAR2                               ,
                                    P_CLC_DOC_TYP       IN NUMBER                                 ,-- CLC_DOC_TYP  1= SALES ,2 = PURCHASE ,
                                    P_LNG_NO            IN NUMBER                                 );           
----------------------------------------------------------------------------------------------------------------
  PROCEDURE POST_TAX ( P_POST_TYPE    IN NUMBER   DEFAULT 0
                     , P_POST_SGNL    IN NUMBER   -- (1)=DR OR (-1)-CR
                     , P_DOC_TYPE     IN NUMBER 
                     , P_DOC_NO       IN NUMBER  
                     , P_DOC_SER      IN NUMBER
                     , P_LANG_NO      In NUMBER ) ;                                                           
 
----------------------------------------------------------------------------------------------------------------
  FUNCTION GET_CLC_TYP_NO_ACTV_DATE ( P_CLC_TYP_NO IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE  , P_BRN_NO   IN S_BRN.BRN_NO%TYPE  ) RETURN DATE;
----------------------------------------------------------------------------------------------------------------   
  FUNCTION CHK_CONN_CLC_TYP_NO_BRN ( P_CLC_TYP_NO  IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE , P_BRN_NO IN S_BRN.BRN_NO%TYPE) RETURN NUMBER ;
----------------------------------------------------------------------------------------------------------------   
  FUNCTION Get_Typ_Itm_Tax (P_Icode  Ias_Itm_Mst.I_Code%Type ) Return Number ;
----------------------------------------------------------------------------------------------------------------     
  FUNCTION GET_TAX_TYP_NO ( P_CLC_TYP_NO  IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE ) RETURN GNR_TAX_TYP_CLC_MST.CLC_TAX_TYP%TYPE;
 ----------------------------------------------------------------------------------------------------------------     
	PROCEDURE DEL_TAX_INPT_MOVMNT_DTL ( P_DOC_TYP   IN GNR_TAX_INPT_MOVMNT.DOC_TYPE%TYPE ,
	                                       P_DOC_SER   IN GNR_TAX_INPT_MOVMNT.DOC_SER%TYPE ,
	                                       P_DOC_SEQ   IN GNR_TAX_INPT_MOVMNT.DOC_SEQUENCE%TYPE  ) ;   
 ----------------------------------------------------------------------------------------------------------------     
	PROCEDURE CLC_GLS_TAX_AFTR_SAVE ( P_CLC_TYP_NO        IN GNR_TAX_INPT_MOVMNT.CLC_TYP_NO%TYPE    ,
	                                P_DOC_TYP           IN GNR_TAX_INPT_MOVMNT.DOC_TYPE%TYPE      ,  -- DOC_TYPE IN  IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS                                
		                                P_DOC_NO            IN GNR_TAX_INPT_MOVMNT.DOC_NO%TYPE        ,
		                                P_DOC_SER           IN GNR_TAX_INPT_MOVMNT.DOC_SER%TYPE       ,
		                                P_RCRD_NO           IN GNR_TAX_INPT_MOVMNT.RCRD_NO%TYPE       ,
	                                P_Doc_Seq           IN GNR_TAX_INPT_MOVMNT.DOC_SEQUENCE%TYPE       ,                              
		                                P_BILL_DOC_TYP      IN GNR_TAX_INPT_MOVMNT.BILL_DOC_TYPE%TYPE , 
		                                P_DOC_JV_TYP        IN GNR_TAX_INPT_MOVMNT.DOC_JV_TYPE%TYPE   ,
		                                P_DOC_DATE          IN GNR_TAX_INPT_MOVMNT.DOC_DATE%TYPE      ,
		                                P_A_CY              IN GNR_TAX_INPT_MOVMNT.A_CY%TYPE          ,
		                                P_AC_RATE           IN GNR_TAX_INPT_MOVMNT.AC_RATE%TYPE       ,
		                                P_TBL_INPT_NM       IN VARCHAR2                               ,
		                                P_FLD_DOC_SER       IN VARCHAR2                               ,
		                                P_FLD_DOC_AMT       IN VARCHAR2                DEFAULT NULL   ,
		                                P_FLD_DOC_SER_INPT  IN VARCHAR2                               ,
		                                P_FLD_TAX_A_CODE    IN VARCHAR2                               ,
		                                P_FLD_INPT_CODE     IN VARCHAR2                               ,
		                                P_FLD_INPT_AMT      IN VARCHAR2                               ,
		                                P_FLD_DOC_SEQ       IN VARCHAR2                               ,
		                                P_LNG_NO            IN NUMBER                                 ) ; 
 ----------------------------------------------------------------------------------------------------------------     		                                    
 ----------------------------------------------------------------------------------------------------------------         
 FUNCTION CHK_TAX_ACTV ( P_CLC_TYP_NO IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE  , P_BRN_NO   IN S_BRN.BRN_NO%TYPE , P_DOC_DATE IN IAS_BILL_MST.BILL_DATE%TYPE ) RETURN NUMBER ;
 ----------------------------------------------------------------------------------------------------------------     
 ----------------------------------------------------------------------------------------------------------------     
                   
END YS_TAX_PKG;
/
CREATE Package Ys_Utl_Pkg  Is
 Procedure Tst_Dir_Path (
                          P_Type        In       Number,
                          P_Dir_Path    In       Varchar2,
                          P_Lng_No      In       Number    Default 1,
                          P_Error_Msg   In Out   Varchar2,
                          P_Succes      In Out   Number
                         );
 Procedure Exp_Usr (
                      P_Exp_Typ      In   Number    Default 0,
                      P_Owner        In   Varchar2 ,
                      P_Filename     In   Varchar2  Default Null,
                      P_File_Ext     In   Varchar   Default '.dmp',
                      P_Other_Attr   In   Varchar2  Default Null,
                      P_Ath_Usr      In   Varchar2  Default Null,
                      P_Lng_No       In   Number    Default 1,
                      P_Error_Msg    In   Out       Varchar2,
                      P_Succes       In   Out       Number
                  ) ;
 Function Tst_Proxy_Usr(P_Owner In Varchar2) Return Number;

 Procedure  Get_Onyx_Path ( P_Cmd_Path         Out Varchar2  ,
                            P_Onyx_Home_Path   Out Varchar2  ) ; 
   
End Ys_Utl_Pkg;
/
CREATE PACKAGE Ys_Yr_Re_Mov_Pkg AS
  
FUNCTION Get_Pk ( P_Tab_Nm In VARCHAR2) RETURN VARCHAR2;

FUNCTION Get_Fk_Lst ( P_Tab_Nm IN VARCHAR2) RETURN VARCHAR2;

FUNCTION Get_Tab_Name ( P_Cons_Name IN VARCHAR2) RETURN VARCHAR2;

FUNCTION Get_Fk ( P_Tab_Nm     IN   VARCHAR2, P_Cons_Nm    IN   VARCHAR2 ) RETURN VARCHAR2;

FUNCTION Get_Inactive_Whr ( P_Ias_User   IN VARCHAR2, P_tab_nm IN VARCHAR2, P_INACTIVE_VAL IN NUMBER) RETURN VARCHAR2;

END Ys_Yr_Re_Mov_Pkg;
/
CREATE Package Body IAS_Itm_Pkg as
-----------------------------------------------------------
PROCEDURE Get_Itm_Name (P_Lng_no In Number,P_icode  In Ias_Itm_Mst.I_CODE%TYPE,P_i_name Out varchar2,P_idesc Out varchar2) IS
Begin
   Select Decode(P_lng_no,1,nvl(I_name,I_e_name),nvl(I_e_name,I_name)),i_desc
     Into P_i_name,P_idesc
     From Ias_Itm_Mst
    Where i_code=P_icode
      AND ROWNUM<=1;
 Exception 
  When Others Then
	  --Raise_Application_Error(-20410,'Item Code Is Invalid = '||SqlErrm) ;
	  Raise_application_error(-20410,Ias_Gen_Pkg.Get_Msg(P_Lng_No,46)||' ,'||SqlErrm);
End Get_Itm_Name;
------------------------------------------------------------
FUNCTION  Get_Itm_Name (p_i_code  In Ias_Itm_Mst.I_CODE%TYPE, P_Lng_no In Number)  RETURN VARCHAR2 IS
V_ITM_NM Ias_Itm_Mst.I_name%TYPE ;
Begin
   Select Decode(P_lng_no,1,I_name,nvl(I_e_name,I_name))
     Into V_ITM_NM
     From Ias_Itm_Mst
    Where i_code=p_i_code
     and Rownum<=1;
 
    RETURN(V_ITM_NM);
    
 Exception 
  When Others Then
	  RETURN(NULL);
End Get_Itm_Name;
------------------------------------------------------------

PROCEDURE Get_Itm_Info ( P_Lng_no   In  Number,
                         P_icode    In  Ias_Itm_Mst.I_CODE%TYPE,
												 P_i_name   Out varchar2,
												 P_idesc    Out varchar2,
												 P_UseExpDt Out Number,
												 P_UseBtch  Out Number, 
												 P_UseSer   Out Number,
												 P_UseFrc   Out Number,
												 P_UseFree  Out Number,
												 P_UseDisc  Out Number,
												 P_Srv_Itm  Out Number,
												 P_Kit_Itm  Out Number,
												 P_Blocked  Out Number) IS
Begin
   Select Decode(P_lng_no,1,nvl(I_name,I_e_name),nvl(I_e_name,I_name)),i_desc,
          nvl(Use_Exp_date,0),nvl(Use_batch_no,0),nvl(Use_Serialno,0),
          nvl(Use_Qty_Fraction,0),nvl(Allow_Free_Qty,0),nvl(Allow_Disc,0),
          nvl(Service_Itm,0),nvl(Kit_Itm,0),nvl(Blocked,0)
     Into P_i_name,P_idesc,P_UseExpDt ,
					P_UseBtch, P_UseSer, P_UseFrc,P_UseFree,P_UseDisc,P_Srv_Itm  ,
          P_Kit_Itm,P_Blocked 
     From Ias_Itm_Mst
    Where i_code=P_icode;
 Exception 
  When others then
	  --Raise_Application_Error(-20411,'Item Code Is Invalid = '||SqlErrm) ;
	  Raise_application_error(-20411,Ias_Gen_Pkg.Get_Msg(P_Lng_No,46)||' ,'||SqlErrm);
End Get_Itm_Info ;

-----------------------------------------------------------
FUNCTION Get_Grand_Avlqty( P_Icode In Ias_Itm_Mst.I_CODE%TYPE,
                           P_Wcode In WAREHOUSE_DETAILS.W_CODE%TYPE Default null) Return NUMBER Is
 avlq NUMBER;
Begin

If  P_wcode Is Null Then
    Select Sum(avlq) 
      Into avlq 
      From ( Select sum(distinct Avl_qty) avlq,w_code  
               From Ias_Itm_Wcode
              Where Ias_Itm_Wcode.I_Code  = P_Icode
               And  Ias_Itm_Wcode.Itm_Unt = Ias_Itm_Pkg.Get_Icode_Min_Unit  (P_I_Code => I_Code ) 
              group by  w_code  );

Else
    Select Sum(distinct  Avl_qty) 
      Into avlq  From Ias_Itm_Wcode
     where Ias_Itm_Wcode.I_Code  = P_Icode
       And Ias_Itm_Wcode.Itm_Unt = Ias_Itm_Pkg.Get_Icode_Min_Unit  (P_I_Code => P_Icode )
       And Ias_Itm_Wcode.W_code  = P_wcode ;
End If;

 Return(Nvl(avlq,0));
Exception
When others then
 Return(0);
End Get_Grand_Avlqty;
-----------------------------------------------------------
/*
 FUNCTION Get_Grand_Wtavg( P_Wtavg_Type In NUMBER,
                           P_Icode      In Ias_Itm_Mst.I_CODE%TYPE ,
                           P_Wcode      In WAREHOUSE_DETAILS.W_CODE%TYPE   Default Null ) Return NUMBER Is
   V_Wtavg  NUMBER;
 Begin
   
   If   P_Icode Is Not Null Then

        If P_Wtavg_Type = 1 Then -- WtAvg Item
           Begin
              Select Nvl(I_cwtavg,0)
                Into V_Wtavg 
                From Ias_Itm_Mst 
               Where I_code=P_Icode
                 and rownum<=1;
           Exception
             When Others Then
                V_Wtavg := 0 ;
           End ;	           
        ElsIf  P_Wtavg_Type = 2  Then -- WtAvg I_Code + W_Code       
               Begin  
                  Select Nvl(I_Cwtavg,0) 
                    Into V_Wtavg 
                    From Ias_Itm_Wcode 
                   Where I_code  = P_Icode
                     And W_code  = P_Wcode
                     And Itm_Unt = Ias_Itm_Pkg.Get_Icode_Min_Unit  (P_I_Code => P_Icode )
                     and rownum<=1;
               Exception 
                 When Others Then
                      V_Wtavg := 0 ;
               End ;    
               If Nvl(V_Wtavg,0) = 0 Then
                  Begin                                       
                    Select Nvl(Primary_Cost,0) 
                      Into V_Wtavg 
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                       And W_Code    = P_Wcode
                       And Itm_Unt   = Ias_Itm_Pkg.Get_Icode_Min_Unit  (P_I_Code => P_Icode )
                       And RowNum <= 1 ;         		     
                  Exception 
                    When Others Then  
                      V_Wtavg  := 0 ;
                  End  ; 
                End If ;  
         ElsIf  P_Wtavg_Type = 3  Then -- WtAvg I_Code + Whg_Code         
                Begin                                       
                    Select Max(Nvl(I_Cwtavg,0)) 
                      Into V_Wtavg 
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                       And Whg_Code  = Ias_Wcode_Pkg.Get_Whg_Code  (P_Wcode)
                       And Itm_Unt   = Ias_Itm_Pkg.Get_Icode_Min_Unit  (P_I_Code => P_Icode )
                       And RowNum   <= 1 ;         		     
                Exception 
                    When Others Then
                      V_Wtavg :=  0 ;
                End ;
                If Nvl(V_Wtavg,0) = 0 Then
                   Begin                                       
                    Select Max(Nvl(Primary_Cost,0)) 
                      Into V_Wtavg 
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                       And Whg_Code  = Ias_Wcode_Pkg.Get_Whg_Code  (P_Wcode)
                       And Itm_Unt   = Ias_Itm_Pkg.Get_Icode_Min_Unit  (P_I_Code => P_Icode )
                       And RowNum <= 1 ;         		     
                   Exception 
                     When Others Then  
                      V_Wtavg  := 0 ;
                   End  ; 
                End If ;                         
            End If ;                                    	      

            If  Nvl(V_Wtavg,0) = 0 Then
                Begin
                   Select Nvl(Primary_Cost,0)
                    Into V_Wtavg 
                    From Ias_Itm_Mst 
                   Where I_code=P_Icode
                     and rownum<=1;
                Exception 
                   When Others Then    
                      V_Wtavg := 0 ;
                End; 
            End If ; 	    
   End If;
    
    Return(V_Wtavg);
 Exception
    When Others Then
      Raise_Application_Error(-20001,'Error In get wtavg for I_Code '||P_Icode||Chr(13)||' W_Code ='||P_Wcode||SqlErrm);
 End  Get_Grand_Wtavg;
 */
-----------------------------------------------------------
 FUNCTION Get_Grand_Wtavg( P_Wtavg_Type In NUMBER,
                           P_Icode      In Ias_Itm_Mst.I_CODE%TYPE ,
                           P_Wcode      In WAREHOUSE_DETAILS.W_CODE%TYPE   Default Null ) Return NUMBER Is
   V_Wtavg  NUMBER;
 Begin
   
   If   P_Icode Is Not Null Then

        If P_Wtavg_Type = 1 Then -- WtAvg Item
           Begin
              Select Nvl(I_cwtavg,0)
                Into V_Wtavg 
                From Ias_Itm_Mst 
               Where I_code=P_Icode
                 And Nvl(Service_Itm,0) = 0
                 And rownum<=1;
           Exception
             When Others Then
                V_Wtavg := 0 ;
           End ;	           
        ElsIf  P_Wtavg_Type = 2  Then -- WtAvg I_Code + W_Code       
               Begin  
                  Select Nvl(I_Cwtavg,0) 
                    Into V_Wtavg 
                    From Ias_Itm_Wcode 
                   Where I_code  = P_Icode
                     And W_code  = P_Wcode
                     And Itm_Unt = Ias_Itm_Pkg.Get_Icode_Min_Unit (P_I_Code => P_Icode ) 
                     and Rownum <= 1 ;
               Exception 
                 When Others Then
                      V_Wtavg := 0 ;
               End ;    
         ElsIf  P_Wtavg_Type = 3  Then -- WtAvg I_Code + Whg_Code         
                Begin                                       
                    Select Max(Nvl(I_Cwtavg,0)) 
                      Into V_Wtavg 
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                       And Whg_Code  = Ias_Wcode_Pkg.Get_Whg_Code  (P_Wcode)
                       And Itm_Unt   = Ias_Itm_Pkg.Get_Icode_Min_Unit (P_I_Code => P_Icode )  
                       And RowNum   <= 1 ;         		     
                Exception 
                    When Others Then
                      V_Wtavg :=  0 ;
                End ;                        
         End If ;                                    	      
             	    
   End If;
    
    Return(V_Wtavg);
 Exception
    When Others Then
      Raise_Application_Error(-20001,'Error In get wtavg for I_Code '||P_Icode||Chr(13)||' W_Code ='||P_Wcode||SqlErrm);
 End  Get_Grand_Wtavg;
-------------------------------------------------------------------------------------------
FUNCTION Check_Srv_Itm(P_icode In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER Is
 Cnt Number;
Begin

 Select 1 
   Into Cnt 
   From Ias_Itm_Mst
  where i_code  = P_icode
    and Service_Itm = 1
    and RowNum <=1;

  Return(Cnt);
 Exception 
 when No_Data_Found Then
    Return(0);
 when Others Then
    Raise_ApplICation_Error(-20413,'Error In Check_Srv_Itm ' || '' || SqlErrm);
End  Check_Srv_Itm;
--------------------------------------------------------------------------------------
FUNCTION Check_Kit_Itm(P_icode In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER Is
 Cnt Number;
Begin

 Select 1 
   Into Cnt 
   From Ias_Itm_Mst
  where i_code  = P_icode
    and Kit_Itm = 1
    and RowNum  <=1;

  Return(Cnt);
 Exception 
 when No_Data_Found Then
    Return(0);
 when Others Then
    Raise_ApplICation_Error(-20414,'Error In Check_Kit_Itm ' || '' || SqlErrm);
End  Check_Kit_Itm;
--------------------------------------------------------------------------------------

FUNCTION Check_NoSale_Itm(P_Icode   In Ias_Itm_Dtl.I_CODE%TYPE ,
                          P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%TYPE) Return NUMBER Is
 Cnt Number;
Begin

 Select 1 
   Into Cnt 
   From Ias_Itm_Dtl
  where I_Code  = P_Icode
    And Itm_Unt  = P_Itm_Unt
    And No_Sale = 1
    And RowNum  <=1;

  Return(Cnt);
 Exception 
 when No_Data_Found Then
    Return(0);
 when Others Then
    Raise_ApplICation_Error(-20415,'Error In Check_NoSale_Itm ' || '' || SqlErrm);
End  Check_NoSale_Itm;
--------------------------------------------------------------------------------------
FUNCTION Check_Store_Itm(P_Icode  In Ias_Itm_Mst.I_Code%Type) Return NUMBER Is
 Cnt     Number:=0;
Begin


If  P_Icode Is Not Null Then  
	 Select 1 
	   Into Cnt 
	   From Item_Movement
	  where I_Code  = P_Icode
	    and RowNum  <=1;
End If;

 Return(Cnt);

 Exception 
 when No_Data_Found Then
    Return(0);
 when Others Then
    Raise_ApplICation_Error(-20416,'Error In Check_Store_Itm ' || '' || SqlErrm);
End  Check_Store_Itm;

--------------------------------------------------------------------------------------
FUNCTION  Check_Itm_Wcode_Inactv (P_I_code In Ias_Itm_Mst.I_CODE%TYPE,P_w_code In Warehouse_details.W_CODE%TYPE) RETURN NUMBER Is
 v_Inactv  Number;
Begin
  Select nvl(Inactive,0)
    Into v_Inactv 
    From Ias_Itm_wcode
   Where i_code = P_i_code
     and w_code = P_w_code
     and RowNum<=1;
     
     Return(v_Inactv);
 Exception When Others Then
    Return(0);
End Check_Itm_Wcode_Inactv;
--------------------------------------------------------------------------------------
PROCEDURE Get_I_Code( P_Barcode In IAS_ITM_UNT_BARCODE.BARCODE%TYPE ,P_I_Code IN OUT Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt IN OUT Ias_Itm_Dtl.Itm_Unt%Type) Is
  v_icode varchar2(30);
Begin
   Select I_Code, Itm_Unt
     Into P_I_Code, P_Itm_Unt
    From Ias_Itm_Unt_Barcode
      Where Barcode = P_Barcode;
Exception
 When Others Then
   Begin
         Select I_Code, Itm_Unt
          Into P_I_Code, P_Itm_Unt
         From Ias_Itm_Dtl
          Where Barcode = P_Barcode;
   Exception
     When Others Then
       Null;
   End;
End Get_I_Code;
--------------------------------------------------------------------------------------
FUNCTION Get_Last_Incom_Date(P_I_code Ias_Itm_Mst.I_CODE%TYPE, P_W_code In Warehouse_Details.W_CODE%TYPE Default Null ) 
 Return DATE Is

v_date Date;

BEGIN
  
Select Max(Gr_Date) Into v_date 
 From Gr_Detail
 Where i_code = P_I_code
   and w_code = Decode(P_W_code,Null,w_code,P_W_code)
   and pi_type In (0,2,5);
 
 Return(v_Date);
 
Exception 
when others then
  Return(Null);
END Get_Last_Incom_Date;
--------------------------------------------------------------------------------------
PROCEDURE Get_Itm_Vndr_Price ( P_I_code   In  Ias_Itm_Mst.I_CODE%TYPE ,
                               P_V_code   In  V_DETAILS.V_CODE%TYPE ,
                               P_A_cy     In  EX_RATE.CUR_CODE%TYPE    DEFAULT NULL,
                               P_Price_Vndr_Itm_Unt_Typ In Number   ,
                               P_ITM_UNT  In Ias_Itm_Dtl.Itm_Unt%TYPE  DEFAULT NULL,
                               P_p_size   In Number     , 
                               P_I_price  out NUMBER)  Is
  v_price    Number ;
  v_a_cy     Varchar2(7);     
  V_Itm_Unt  Ias_Itm_Dtl.Itm_Unt%TYPE ; 
  Begin
  
   If P_I_Code Is Not Null And P_V_Code Is Not Null Then
      If P_Price_Vndr_Itm_Unt_Typ = 1  And  P_Itm_Unt Is Not Null              Then    ---P_Price_Vndr_Itm_Unt_Typ=1
          Begin
            Select Nvl(Vndr_Price,0),A_Cy
              Into V_Price,V_A_Cy
              From Ias_V_Vndr_Itm
             Where I_Code  = P_I_Code
               And V_Code  = P_V_Code
               And Itm_Unt = P_Itm_Unt
               And A_Cy = Decode(P_A_Cy,Null,A_Cy,P_A_Cy);            
          Exception
           When No_Data_Found Then
             V_Price :=  0 ;
          End;
        If  V_Price = 0 And P_P_Size > 1  Then    ---- When V_Price =0 Get V_Price For  Unit Size > 1
        
            V_Itm_Unt:=ias_itm_pkg.get_icode_min_unit (p_i_code => P_I_Code);           
            Begin
                Select Nvl(Vndr_Price,0),A_Cy
                      Into V_Price,V_A_Cy
                      From Ias_V_Vndr_Itm
                      Where I_Code  = P_I_Code
                      And V_Code  = P_V_Code
                      And Itm_Unt = V_Itm_Unt
                      And A_Cy = Decode(P_A_Cy,Null,A_Cy,P_A_Cy);
            End ;
             V_Price:= V_Price * Nvl(P_P_Size,0);
            End If;
             If P_A_Cy Is Not Null And V_Price > 0 Then   
                V_Price:= (V_Price * Ias_Gen_Pkg.Get_Cur_Rate(V_A_Cy)) /  Ias_Gen_Pkg.Get_Cur_Rate(P_A_Cy);
            End If;
     Elsif  P_Price_Vndr_Itm_Unt_Typ = 0 Or P_Itm_Unt Is Null  Then      -------  P_Price_Vndr_Itm_Unt_Typ = 0   
          
          V_Itm_Unt:=ias_itm_pkg.get_icode_min_unit (p_i_code => P_I_Code);
          
          Begin
                Select Nvl(Vndr_Price,0),A_Cy
                  Into V_Price,V_A_Cy
                  From Ias_V_Vndr_Itm
                Where I_Code  = P_I_Code
                And V_Code  = P_V_Code
                And Itm_Unt = V_Itm_Unt
                And A_Cy = Decode(P_A_Cy,Null,A_Cy,P_A_Cy);

             V_Price:= V_Price * Nvl(P_P_Size,0);

          Exception
           When No_Data_Found Then
             V_Price :=  0 ;
          End;
          
          If P_A_Cy Is Not Null And V_Price > 0 Then   
                V_Price:= (V_Price * Ias_Gen_Pkg.Get_Cur_Rate(V_A_Cy)) /  Ias_Gen_Pkg.Get_Cur_Rate(P_A_Cy);
          End If;
     End If ;
    End If ;

    P_I_Price:=Nvl(V_Price,0);
    
  Exception
    When Others Then
      P_I_Price:=0;
End Get_Itm_Vndr_Price; 
-------------------------------------------------------------------------------------- 
Function Fetch_Itm_Nm_Price_Order (P_I_Code In Ias_Itm_Mst.I_Code%Type )Return Varchar2 Is 
   V_I_Nm   Ias_Itm_Mst.I_Name%Type ;
 Begin
   Select Decode(1,1,Nvl(I_Name,I_E_Name),Nvl(I_E_Name,I_Name)) I_Name 
     Into V_I_Nm  
    From Ias_Itm_Mst
     Where I_Code = P_I_Code ;
   Return(V_I_Nm);
 Exception
     When Others Then
      Return(Null);
 End ;


Function Fetch_Itm_Doc_Price_Order (P_Doc_Type In Number  ,
                                    P_Doc_Ser  In  Number ,
                                    P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Number Is 
   V_Rcrd_No   Ias_Itm_Mst.I_Name%Type ;
 Begin
      If P_Doc_Type = 2 Then
         Select Rcrd_No
           Into V_Rcrd_No
          From Ias_Pi_Bill_Dtl
           Where Bill_Ser = P_Doc_Ser 
            And  I_Code   = P_I_Code ;
      ElsIf P_Doc_Type = 5 Then
         Select Rcrd_No
            Into V_Rcrd_No
          From Gr_Detail
           Where G_Ser    = P_Doc_Ser 
            And  I_Code   = P_I_Code ;
      End If ;
      Return(V_Rcrd_No);
 Exception
     When Others Then
      Return(Null);
 End ; 

FUNCTION Get_MaxGrand_Size ( P_icode  In Ias_Itm_Mst.I_CODE%TYPE) return NUMBER is
  v_gsize  NUMBER;
Begin
 select max(P_Size) into v_gsize  From Ias_Itm_Dtl where I_Code= P_Icode ;
   return(v_gsize);
exception when  others then
  return(1);
End Get_MaxGrand_Size ;

Function Get_Itm_Activity (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Number Is
   V_Actv_No Ias_Items_Activity.Activity_No%Type ;
 Begin
    Select Activity_No
     Into V_Actv_No
    From Ias_Itm_Mst 
     Where I_Code = P_I_Code ;
    Return(V_Actv_No) ;
 Exception
  When Others Then
   Return(Null);
 End ;
PROCEDURE Get_Itm_Activity_Wcode_Info (P_W_Code       In  Warehouse_Details.W_Code%Type       ,
                                       P_Itm_Actv_No  In  Ias_Items_Activity.Activity_No%Type ,
                                       P_Cc_Code      Out Cost_Centers.Cc_Code%Type           ,
                                       P_Pj_No        Out Ias_Projects.Pj_No%Type             ,
                                       P_Actv_No      Out Ias_Actvty.Actv_No%Type             ) Is
 Begin                                      
    Select Cc_Code ,
           Pj_No   ,
           Actv_No
     Into  P_Cc_Code ,
           P_Pj_No   ,
           P_Actv_No
   From   Ias_Conn_Wcode_By_Activity
    Where W_Code      = P_W_Code 
      And Activity_No = P_Itm_Actv_No 
      And RowNum     <= 1    ;
 Exception
  When Others Then
   P_Cc_Code := Null ;
   P_Pj_No   := Null ;
   P_Actv_No := Null ;
 End Get_Itm_Activity_Wcode_Info ;
 
	Function Get_Itm_Min_Qty( P_I_Code In Ias_Itm_Mst.I_Code%Type      ,
	                          P_W_Code  In Warehouse_Details.W_Code%Type
                            ) Return Number Is
	 V_Itm_Min_Qty Number;
     V_Itm_Unt ias_itm_dtl.itm_unt%type;
     v_rol_type  number;
	Begin
	    
    Begin  select Roi_Type into v_rol_type from ias_para_inv;
    exception when others then
     v_rol_type:=1;
    end;
     V_Itm_Unt:=Ias_Itm_Pkg.Get_Icode_Min_Unit (P_I_Code => P_I_Code);
	 If Nvl(v_rol_type,1)=1 Then   
         Select Nvl(I_Min_Qty,0)
           Into V_Itm_Min_Qty
           From Ias_Itm_Qty_Lmt
          Where I_Code   = P_I_Code
            And Itm_Unt  =V_Itm_Unt 
             And Rownum <= 1 ;
	 Elsif  Nvl(v_rol_type,1)=2 Then 
	         Select  Nvl(I_Min_Qty,0)
                 Into V_Itm_Min_Qty
	          From Ias_Itm_Qty_Lmt
	           Where I_Code = P_I_Code
	             And Itm_Unt=V_Itm_Unt 
	             And W_Code=P_W_Code
	             And Rownum <= 1 ;             
	/* Elsif  Nvl(v_rol_type,1)=3 Then 
	         Select  Nvl(I_Min_Qty,0)
                 Into V_Itm_Min_Qty
	          From Ias_Itm_Qty_Lmt
	           Where I_Code = P_I_Code
	             And Itm_Unt=V_Itm_Unt 
	             And W_Code=P_W_Code
	             And Brn_No=P_Brn_No
	             And Rownum  <= 1 ;*/
	 End If;	          

	Return(V_Itm_Min_Qty);

	Exception
	 When Others Then
	  Return(0);
	End  Get_Itm_Min_Qty ; 
--##----------------------------------------------------------------------------------------------##--
Function Get_Icode_One_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Itm_Unt%Type Is
  V_Itm_Unt Ias_Itm_Dtl.Itm_Unt%Type;
 Begin
     Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code  = P_I_Code;
     Return(V_Itm_Unt);
 Exception
   When Others Then
     Return (Null);
      
 End Get_Icode_One_Unit ;
--##----------------------------------------------------------------------------------------------##--    
Function Get_Icode_Unit_By_Lvl (P_I_Code  In Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type) Return Ias_Itm_Dtl.Itm_Unt%Type Is
  V_Itm_Unt Ias_Itm_Dtl.Itm_Unt%Type;
 Begin
     Select Itm_Unt Into V_Itm_Unt
       From Ias_Itm_Dtl
      Where Ias_Itm_Dtl.I_Code  = P_I_Code
        And Lvl_Unit=P_Lvl_Unit
        And RownuM<=1;
     Return(V_Itm_Unt);
 Exception
   When Others Then
   --Return (Null);
     Return(Get_Icode_Min_Unit (P_I_Code =>P_I_Code ));
      
 End Get_Icode_Unit_By_Lvl ;  
--##----------------------------------------------------------------------------------------------##--    
Function Chk_Icode_Unit ( P_I_Code  In Ias_Itm_Mst.I_Code%Type    ,
                          P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type   ) Return Number Is
   V_Cnt    Number := 1 ;
   V_Inactv Number := 0 ;
 Begin
		 Begin
			     Select Inactive Into V_Inactv
			       From Ias_Itm_Dtl
			      Where Ias_Itm_Dtl.I_Code  = P_I_Code 
			        And Ias_Itm_Dtl.Itm_Unt = P_Itm_Unt
			        And RowNum             <= 1 ;
			 Exception
			   /*When No_Data_Found Then
			     V_Cnt := 0 ;
			   When Too_Many_Rows Then
			     V_Cnt := 1 ;*/
			   When Others Then
			     V_Cnt := 0 ;
			 End ;  
			 If Nvl(V_Cnt,0) = 0 Then
			    Return (44);
			 ElsIf Nvl(V_Inactv,0) = 1 Then
			 	Return (377);
             Else
                Return (Null);   
			 End If ;
 End Chk_Icode_Unit ;
--##----------------------------------------------------------------------------------------------##-- 
Function Get_Icode_Min_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
  V_Itm_Unt Ias_Itm_Dtl.Itm_Unt%Type ;
 Begin
      Begin
			     Select Itm_Unt Into V_Itm_Unt
			      From Ias_Itm_Dtl
			       Where Ias_Itm_Dtl.I_Code           = P_I_Code
			         And Nvl(Ias_Itm_Dtl.P_Size,0)    = 1 
			         And Nvl(Ias_Itm_Dtl.Main_Unit,0) = 1 
			         And RowNum                      <= 1 ;
      Exception
         When Others Then
           Begin
						     Select Itm_Unt Into V_Itm_Unt
						      From Ias_Itm_Dtl
						       Where Ias_Itm_Dtl.I_Code        = P_I_Code
						         And Nvl(Ias_Itm_Dtl.P_Size,0) = 1 
						         And RowNum                   <= 1 ;           
           Exception
              When Others Then
                 Raise_Application_Error(-20001,'Error When Get Min Item Unit For Item Code = '||P_I_Code||chr(13)||SqlErrm);
           End ;                 
      End ;
     Return(V_Itm_Unt);
      
 End Get_Icode_Min_Unit ; 
--##----------------------------------------------------------------------------------------------##-- 
Function Get_Icode_Sales_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
  V_Itm_Unt Ias_Itm_Dtl.Itm_Unt%Type ;
 Begin
     --------------------------------------------------------
     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code
         And Nvl(Ias_Itm_Dtl.No_Sale,0)=0;
     Exception When Others Then
        V_Itm_Unt := Null;
     End;           
     --------------------------------------------------------
     If V_Itm_Unt Is Null Then
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
             And Nvl(Ias_Itm_Dtl.Sale_Unit,0) = 1
             And Nvl(Ias_Itm_Dtl.No_Sale,0)   = 0          
             And Rownum <= 1 ;
     End If;        
     --------------------------------------------------------
     Return(V_Itm_Unt);
 Exception
   When Others Then
     Return (Null);
      
 End Get_Icode_Sales_Unit ;   
--##----------------------------------------------------------------------------------------------##--
Function Get_Icode_Purch_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
  V_Itm_Unt Ias_Itm_Dtl.Itm_Unt%Type ;
 Begin

     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
        V_Itm_Unt := Null;
     End;           
     
     If V_Itm_Unt Is Null Then
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
             And Nvl(Ias_Itm_Dtl.Pur_Unit,0) = 1                       
             And Rownum <= 1 ;
     End If;        
     
     Return(V_Itm_Unt);
 Exception
   When Others Then
     Return (Null);
      
 End Get_Icode_Purch_Unit ; 
--##----------------------------------------------------------------------------------------------##-- 
Function Get_Icode_Price_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
  V_Itm_Unt Ias_Itm_Dtl.Itm_Unt%Type ;
 Begin

     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
        V_Itm_Unt := Null;
     End;           
     
     If V_Itm_Unt Is Null Then
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
             And Nvl(Ias_Itm_Dtl.Price_Unit,0) = 1                       
             And Rownum <= 1 ;
     End If;        
     
     Return(V_Itm_Unt);
 Exception
   When Others Then
     Return (Null);
      
 End Get_Icode_Price_Unit ; 
--##----------------------------------------------------------------------------------------------##-- 
Function Get_Icode_Man_Inv_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
  V_Itm_Unt Ias_Itm_Dtl.Itm_Unt%Type ;
 Begin

     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
        V_Itm_Unt := Null;
     End;           
     
     If V_Itm_Unt Is Null Then
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
             And Nvl(Ias_Itm_Dtl.Stock_Unit,0) = 1                       
             And Rownum <= 1 ;
     End If;        
     
     Return(V_Itm_Unt);
 Exception
   When Others Then
     Return (Null);
      
 End Get_Icode_Man_Inv_Unit ; 
--##----------------------------------------------------------------------------------------------##-- 
 Function Get_Icode_Vndr (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Mst.I_Code%Type Is
  V_I_Code Ias_Itm_Mst.I_Code%Type ;
 Begin
     
     If P_I_Code Is Not Null Then
         Select I_Code Into V_I_Code
           From Ias_Itm_Mst
          Where Ias_Itm_Mst.Vndr_I_Code = P_I_Code;
     End If;        
     
     Return(V_I_Code);
 Exception
   When Others Then
     Return (Null);      
 End Get_Icode_Vndr ;
--##----------------------------------------------------------------------------------------------##-- 
Function Get_Icode_Size_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type) Return Number Is
  V_Psize Number ;
 Begin
     Select P_Size Into V_Psize
      From Ias_Itm_Dtl
       Where I_Code        = P_I_Code
         And Itm_Unt=P_Itm_Unt 
         And RowNum                   <= 1 ;
     Return(V_Psize);
 Exception
   When Others Then
     Return (1);
      
 End Get_Icode_Size_Unit ;       	 
--##----------------------------------------------------------------------------------------------##--
Function Get_Icode_Rol (P_Rol_Type Number,P_I_Code  In Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type default null,P_w_code In Warehouse_Details.W_Code%Type default null,P_brn_no In s_brn.brn_no%Type default null) Return Number Is
	  V_Irol Number ;
	 Begin
	      If Nvl(P_Rol_Type,1)=1 Then   
	         Select I_Rol Into V_Irol
	          From Ias_Itm_Qty_Lmt
	           Where I_Code        = P_I_Code
	             And Itm_Unt=P_Itm_Unt 
	             And Rownum                   <= 1 ;    
	      Elsif  P_Rol_Type=2 Then 
	         Select I_Rol Into V_Irol
	          From Ias_Itm_Qty_Lmt
	           Where I_Code        = P_I_Code
	             And Itm_Unt=P_Itm_Unt 
	             And W_Code=P_W_Code
	             And Rownum                   <= 1 ;             
	      Elsif  P_Rol_Type=3 Then 
	         Select I_Rol Into V_Irol
	          From Ias_Itm_Qty_Lmt
	           Where I_Code        = P_I_Code
	             And Itm_Unt=P_Itm_Unt 
	             And W_Code=P_W_Code
	             And Brn_No=P_Brn_No
	             And Rownum                   <= 1 ;
	      End If;
	   Return(V_Irol);
	 Exception
	   When Others Then
	     Return (null);            
	 End Get_Icode_Rol;       
--##----------------------------------------------------------------------------------------------##--
		Procedure Get_Icode_Qty_Lmt (P_Rol_Type  In Number,
		                               P_I_Code    In Ias_Itm_Mst.I_Code%Type ,
		                               P_Itm_Unt   In Ias_Itm_Dtl.Itm_Unt%Type Default Null,
		                               P_W_Code    In Warehouse_Details.W_Code%Type Default Null,
		                               P_Brn_No      In S_Brn.Brn_No%Type Default Null,
		                               P_I_Rol       Out Number, 
		                               P_I_Min_Qty   Out Number,
		                               P_I_Max_Qty   Out Number,
		                               P_Asm_Ord_Qty Out Number      )  Is  
		 Begin
		      If Nvl(P_Rol_Type,1)=1 Then   
		        Select I_Rol,
		                I_Min_Qty,
		                I_Max_Qty,
		                Asm_Ord_Qty
			       Into P_I_Rol,
		                P_I_Min_Qty,
		                P_I_Max_Qty ,
		                P_Asm_Ord_Qty
		          From Ias_Itm_Qty_Lmt
		           Where I_Code        = P_I_Code
		             And Itm_Unt=P_Itm_Unt 
		             And Rownum                   <= 1 ;    
		      Elsif  P_Rol_Type=2 Then 
		        Select I_Rol,
		                I_Min_Qty,
		                I_Max_Qty,
		                Asm_Ord_Qty
			       Into P_I_Rol,
		                P_I_Min_Qty,
		                P_I_Max_Qty ,
		                P_Asm_Ord_Qty
		          From Ias_Itm_Qty_Lmt
		           Where I_Code        = P_I_Code
		             And Itm_Unt=P_Itm_Unt 
		             And W_Code=P_W_Code
		             And Rownum                   <= 1 ;             
		      Elsif  P_Rol_Type=3 Then 
		        Select I_Rol,
		                I_Min_Qty,
		                I_Max_Qty,
		                Asm_Ord_Qty
			       Into P_I_Rol,
		                P_I_Min_Qty,
		                P_I_Max_Qty ,
		                P_Asm_Ord_Qty
		          From Ias_Itm_Qty_Lmt
		           Where I_Code        = P_I_Code
		             And Itm_Unt=P_Itm_Unt 
		             And W_Code=P_W_Code
		             And Brn_No=P_Brn_No
		             And Rownum                   <= 1 ;
		      End If;   
		 Exception
		   When Others Then         
		    P_I_Rol:= 0 ;          
		 End Get_Icode_Qty_Lmt;         
--##----------------------------------------------------------------------------------------------##-- 
		Function Get_Max_Lvl_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Lvl_Unit%Type Is
		  V_Lvl_Unit Ias_Itm_Dtl.Lvl_Unit%Type ;
		Begin
		     Select Max(Lvl_Unit) Into V_Lvl_Unit
		      From Ias_Itm_Dtl
		       Where I_Code= P_I_Code;
		     Return(V_Lvl_Unit);
		 Exception
		   When Others Then
		     Return (1);
		      
		 End Get_Max_Lvl_Unt ; 
--##----------------------------------------------------------------------------------------------##--
Function Get_Icode_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Varchar2  Is
  V_Itm_Unt    Ias_Itm_Dtl.Itm_Unt%Type;  
Begin
 
           If P_Unt_Type=1  Then     --  Get Main Unit 
             Select Itm_Unt  Into  V_Itm_Unt 
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
                     And Main_Unit = 1;
           Elsif  P_Unt_Type=2  Then     --  Get Sale Unit 
             Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
                     And Sale_Unit=1;
           Elsif  P_Unt_Type=3  Then     --  Get Purchase Unit 
             Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
                     And Pur_Unit=1;
           Elsif  P_Unt_Type=4  Then  --  Get Max  Unit
           Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code 
                  And Lvl_Unit = ( Select Max(Lvl_Unit) 
                                    From Ias_Itm_Dtl
                                    Where I_Code= P_I_Code);
           Elsif  P_Unt_Type=5  Then  --  Get Specific Unit 
            Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code
                  And Lvl_Unit =Nvl(P_Lvl_Unt,1);
           End If; 
  Return(V_Itm_Unt);
 Exception
   When Others Then
    Begin
      Select Itm_Unt  Into  V_Itm_Unt 
      From Ias_Itm_Dtl
      Where I_Code= P_I_Code
      And Main_Unit = 1;
      Return(V_Itm_Unt);
    Exception
     When Others Then
       Return ' ';   
    End;   
 End Get_Icode_Unt ;     
----------------------------------------------------------
 Function Get_Icode_Size (P_I_Code    In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Number  Is
  V_Itm_Size   Ias_Itm_Dtl.P_Size%Type;  
Begin
 
           If P_Unt_Type=1  Then     --  Get Main Unit 
             Select P_Size  Into  V_Itm_Size 
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
                     And Main_Unit = 1;
           Elsif  P_Unt_Type=2  Then     --  Get Sale Unit 
             Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
                     And Sale_Unit=1;
           Elsif  P_Unt_Type=3  Then     --  Get Purchase Unit 
             Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
                     And Pur_Unit=1;
           Elsif  P_Unt_Type=4  Then  --  Get Max  Unit
           Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code 
                  And Lvl_Unit = ( Select Max(Lvl_Unit) 
                                    From Ias_Itm_Dtl
                                    Where I_Code= P_I_Code);
           Elsif  P_Unt_Type=5  Then  --  Get Specific Unit 
            Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code
                  And Lvl_Unit =Nvl(P_Lvl_Unt,1);
           End If; 
  Return(V_Itm_Size);
 Exception
   When Others Then
    Begin
      Select P_Size  Into  V_Itm_Size 
      From Ias_Itm_Dtl
      Where I_Code= P_I_Code
      And Main_Unit = 1;
      Return(V_Itm_Size);
    Exception
     When Others Then
       Return 1;   
    End;   
 End Get_Icode_Size ;     
--##----------------------------------------------------------------------------------------------##--   
 Function Get_Itm_Unt_Lvl ( P_I_Code    In  Ias_Itm_Mst.I_Code%Type    ,
                            P_Lvl_Unit  In  Ias_Itm_Dtl.Lvl_Unit%Type  ) Return Varchar2 Is
   V_Itm_Unt    Ias_Itm_Dtl.Itm_Unt%Type;                                                  
 Begin                                      
    Select Itm_Unt
     Into  V_Itm_Unt 
    From   Ias_Itm_Dtl 
     Where I_Code     = P_I_Code 
       And Lvl_Unit   = P_Lvl_Unit  
       And RowNum <= 1 ;
    Return (V_Itm_Unt) ;
 Exception
  When Others Then
     Return (' ') ;
 End Get_Itm_Unt_Lvl ;
--##----------------------------------------------------------------------------------------------##-- 
	Function Get_Itm_Price (  P_Price_Type In Ias_Para_Inv.Price_Type%Type   ,
	                          P_Itm_Code   In Ias_Itm_Mst.I_Code%Type        ,
	                          P_Itm_Unt    In Ias_Itm_Dtl.Itm_Unt%Type       ,
	                          P_Lvl_No     In Ias_Item_Price.Lev_No%Type     ,
	                          P_W_Code     In Warehouse_Details.W_Code%Type Default Null ,
	                          P_Brn_No     In S_Brn.Brn_No%Type Default Null ,                                          
	                          P_F_Qty      In Number Default Null ,
	                          P_T_Qty      In Number Default Null ) Return Number Is
	  V_Price      Number := 0 ;
	  
	  Begin
	  
	      If P_Itm_Code Is Not Null And P_Itm_Unt Is Not Null And P_Lvl_No Is Not Null Then
	         If P_Price_Type = 1 Then -- By Itm_Code 
	            Begin
	                Select Nvl(I_Price,0)
	                 Into V_Price
	                From Ias_Item_Price 
	                 Where I_Code  = P_Itm_Code
	                  And  Itm_Unt = P_Itm_Unt 
	                  And  Lev_No  = P_Lvl_No ;
	            Exception
	             When No_Data_Found Then
	                V_Price :=  0 ;
	            End;
	         ElsIf P_Price_Type = 2 Then -- By W_Code 
	            Begin
	                Select Nvl(I_Price,0)
	                 Into V_Price
	                From Ias_Item_Price 
	                 Where I_Code  = P_Itm_Code
	                  And  Itm_Unt = P_Itm_Unt 
	                  And  Lev_No  = P_Lvl_No 
	                  And  W_Code  = P_W_Code ;                                 
	            Exception
	             When No_Data_Found Then
	                V_Price :=  0 ; 
	            End ;        
	         ElsIf P_Price_Type = 3 Then -- By Qty   
	            Begin
	                Select Nvl(I_Price,0)
	                 Into V_Price
	                From Ias_Item_Price 
	                 Where I_Code    = P_Itm_Code
	                  And  Itm_Unt   = P_Itm_Unt 
	                  And  Lev_No    = P_Lvl_No 
	                  And  From_Qty  = P_F_Qty
	                  And  To_Qty    = P_T_Qty ;
	            Exception
	             When No_Data_Found Then
	                V_Price :=  0 ; 
	            End ; 
	         ElsIf P_Price_Type = 4 Then -- By W_Code + Qty   
	            Begin
	                Select Nvl(I_Price,0)
	                 Into V_Price
	                From Ias_Item_Price 
	                 Where I_Code    = P_Itm_Code
	                  And  Itm_Unt   = P_Itm_Unt 
	                  And  Lev_No    = P_Lvl_No 
	                  And  W_Code    = P_W_Code                  
	                  And  From_Qty  = P_F_Qty
	                  And  To_Qty    = P_T_Qty ;
	            Exception
	             When No_Data_Found Then
	                V_Price :=  0 ; 
	            End ; 
	         ElsIf P_Price_Type = 5 Then -- By Brn No   
	            Begin
	                Select Nvl(I_Price,0)
	                 Into V_Price
	                From Ias_Item_Price 
	                 Where I_Code    = P_Itm_Code
	                  And  Itm_Unt   = P_Itm_Unt 
	                  And  Lev_No    = P_Lvl_No 
	                  And  Brn_No    = P_Brn_No ;
	            Exception
	             When No_Data_Found Then
	                V_Price :=  0 ; 
	            End ;                                      
	         End If ;
	          

	      End If ;
	    Return (Nvl(V_Price,0));
	  Exception
	    When Others Then
	      Return (0);
	 End Get_Itm_Price ;

--##----------------------------------------------------------------------------------------------##--
Procedure Get_Itm_Wght_Data ( P_Itm_Barcode           In  Ias_Itm_Dtl.Barcode%Type ,                                                                                                                                      
	                              P_Wght_Prfx             In  Varchar2                 ,
                              P_Wght_Lngth            In  Number                   ,                                                            
	                              P_Wght_Itm_Lngth        In  Number                   , 
	                              P_Wght_Val              In  Number                   , 
	                              P_Remove_Wght_Dgt       In  Number                   ,
	                              P_Incld_Itm_Unt         In  Number Default 0         ,
	                              P_Itm_Code              Out Ias_Itm_Mst.I_Code%Type  ,
	                              P_Itm_Qty               Out Number                   ,
                              P_Itm_Unt               Out Ias_Itm_Dtl.Itm_Unt%Type )  Is                                                                            
                
  Begin
       If  Upper(Substr(P_Itm_Barcode,1,Length(P_Wght_Prfx))) = Upper(P_Wght_Prfx)  And  Length(P_Itm_Barcode)= P_Wght_Lngth Then
                                       
            P_Itm_Code:= Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth );
                                        
            If P_Incld_Itm_Unt = 0 Then
                -- Remove_Weight_Digit    1- From Right 2- From Left                               
                 If P_Remove_Wght_Dgt = 1  Then         
                     P_Itm_Qty := Substr(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1)),1,Length(To_Number(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))))-1 )/P_Wght_Val  ; 
                 Elsif P_Remove_Wght_Dgt = 2  Then                    
                     P_Itm_Qty := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2))/P_Wght_Val;             
                 Else
                     P_Itm_Qty := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))/P_Wght_Val ;
                 End If ;
            Else
                --Get Item Unit
                 Begin 
                      Select Itm_Unt Into P_Itm_Unt
                        From Ias_Itm_Dtl 
                       Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                         And Lvl_Unit=Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1,1); 
                 Exception When Others Then
                      Select Itm_Unt Into P_Itm_Unt
                        From Ias_Itm_Dtl 
                       Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                         And Main_Unit=1;              
                 End;
                -- Remove_Weight_Digit    1- From Right 2- From Left                               
                 If P_Remove_Wght_Dgt = 1  Then         
                     P_Itm_Qty := Substr(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2)),1,Length(To_Number(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))))-1 )/P_Wght_Val  ; 
                 Elsif P_Remove_Wght_Dgt = 2  Then                    
                     P_Itm_Qty := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+3))/P_Wght_Val;             
                 Else
                     P_Itm_Qty := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2))/P_Wght_Val ;
                 End If ;
            End If;                                
       End If;        
  End Get_Itm_Wght_Data ; 
--##----------------------------------------------------------------------------------------------##--
Procedure Get_Itm_QR_Code_Data (  P_QR_Code_Itm              In  Varchar2 ,                                                                                                                                      
                                  P_QR_Code_Prfx_Lngth       In  Number    ,                                                            
                                  P_QR_Code_Lngth            In  Number   ,
                                  P_QR_Code_Argmnt           In  Number   ,
                                  P_No_Of_Barcode_In_QR_Code In  Number   ,
                                  P_Itm_Code                 Out Ias_Itm_Mst.I_Code%Type )  Is                                                                                              
  Begin
       If P_QR_Code_Itm Is Not Null Then
          If  P_QR_Code_Argmnt = 1 Then -- Equal 
              If Length(P_QR_Code_Itm) = P_QR_Code_Lngth   Then                                       
                 P_Itm_Code:= Substr(P_QR_Code_Itm,P_QR_Code_Prfx_Lngth +1,P_No_Of_Barcode_In_QR_Code ); 
              End If ;                                                               
          ElsIf  P_QR_Code_Argmnt = 2 Then -- Greater
              If Length(P_QR_Code_Itm) > P_QR_Code_Lngth   Then                                       
                 P_Itm_Code:= Substr(P_QR_Code_Itm,P_QR_Code_Prfx_Lngth +1,P_No_Of_Barcode_In_QR_Code ); 
              End If ;          
          ElsIf  P_QR_Code_Argmnt = 3 Then -- Less 
              If Length(P_QR_Code_Itm) < P_QR_Code_Lngth   Then                                       
                 P_Itm_Code:= Substr(P_QR_Code_Itm,P_QR_Code_Prfx_Lngth +1,P_No_Of_Barcode_In_QR_Code ); 
              End If ;           
          ElsIf  P_QR_Code_Argmnt = 4 Then -- Greater Or Equal
              If Length(P_QR_Code_Itm) >= P_QR_Code_Lngth   Then                                       
                 P_Itm_Code:= Substr(P_QR_Code_Itm,P_QR_Code_Prfx_Lngth +1,P_No_Of_Barcode_In_QR_Code ); 
              End If ;           
          ElsIf  P_QR_Code_Argmnt = 5 Then -- Less Or Equal 
              If Length(P_QR_Code_Itm) <= P_QR_Code_Lngth   Then                                       
                 P_Itm_Code:= Substr(P_QR_Code_Itm,P_QR_Code_Prfx_Lngth +1,P_No_Of_Barcode_In_QR_Code ); 
              End If ;           
          End If;  
       End If ;      
  End Get_Itm_QR_Code_Data ;
--##----------------------------------------------------------------------------------------------##--
	Procedure Get_Srch_Itm_Crtria (   P_Srch_Itm_Crtria              In  Number ,
	                                  P_Itm                          In  Varchar2,
                                  P_Ord_Lov                      In  Number  ,                                                                                                                                      
                                  P_Whr                          Out Varchar2                                                            
                                 )  Is                                                                                              
	    V_Srch_by varchar2(500);                                                                                           
	  Begin
      /* P_Ord_LOV If  2- By Item name and if search critria is includes then search by multi colomns else search just by item name
	                     3- By Item code and Item name
	                  Else   Search by Item Code */
	    If P_Ord_Lov=2  Then
          If P_Srch_Itm_Crtria=2 Then
             V_Srch_by:=' Upper(M.I_Code||M.I_Name||M.I_E_Name||M.I_Desc||M.I_F_Desc)';
          Else
             V_Srch_by:=' Decode (:Parameter.Lang_No, 1, UPPER(M.I_Name), UPPER(M.I_E_Name))';
          End if;
        Elsif P_Ord_Lov=3 Then
           V_Srch_by:=' Upper(M.I_Code||M.I_Name)';
        Else
           V_Srch_by:=' M.I_Code';
        End if;
        
        -- Search Crtria 
        If P_Srch_Itm_Crtria =1 Then -- Search Crtria : Start With
           P_Whr :=' And '||V_Srch_by||' Like
                    Decode ('||''''||P_Itm||''''||',Null, ''%'','|| ''''||P_Itm||'%'||''''||')';
        Elsif P_Srch_Itm_Crtria =2 Then -- Search Crtria : Includes
          P_Whr :=' And '||V_Srch_by||' Like
                    Decode ('||''''||P_Itm||''''||',Null, ''%'','|| ''''||'%'||P_Itm||'%'||''''||')';
        ElsIf P_Srch_Itm_Crtria =3 Then -- Search Crtria : End With
           P_Whr :=' And '||V_Srch_by||' Like
                    Decode ('||''''||P_Itm||''''||',Null, ''%'','|| ''''||'%'||P_Itm||''''||')';
       ElsIf P_Srch_Itm_Crtria =4 Then -- Search Crtria : Equal
           P_Whr :=' And '||V_Srch_by||' Like
                    Decode ('||''''||P_Itm||''''||',Null, ''%'','|| ''''||P_Itm||''''||')';
       ElsIf P_Srch_Itm_Crtria =5 Then -- Search Crtria : Partitions Of Word
           --P_Whr :=' And DECODE('||''''||P_Itm||''''||',NULL,0,(LENGTH(M.I_Code||M.I_Name||M.I_E_Name||M.I_Desc||M.I_F_Desc) - UTL_MATCH.EDIT_DISTANCE(UPPER(M.I_Code||M.I_Name||M.I_E_Name||M.I_Desc||M.I_F_Desc),UPPER('||''''||P_Itm||''''||')) - LENGTH('||''''||P_Itm||''''||'))) = 0 ';
           P_Whr :=' And Upper(M.I_Code||M.I_Name||M.I_E_Name||M.I_Desc||M.I_F_Desc)  Like Decode ('||''''||P_Itm||''''||',Null, ''%'',Replace(Trim('||''''||'%'||P_Itm||'%'||''''||'),'' '',''%'')' ||')';
        End if;      
      End Get_Srch_Itm_Crtria ;
--##----------------------------------------------------------------------------------------------##--      
    Function Get_Unit_Lvl (P_I_Code  In Ias_Itm_Mst.I_Code%Type , P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type) Return Ias_Itm_Dtl.Lvl_Unit%Type Is
          V_Lvl_Unit Ias_Itm_Dtl.Lvl_Unit%Type;
         Begin
             Select Lvl_Unit Into V_Lvl_Unit
               From Ias_Itm_Dtl
              Where Ias_Itm_Dtl.I_Code  = P_I_Code
                And Itm_Unt=P_Itm_Unt
                And RownuM<=1;
             Return(V_Lvl_Unit);
         Exception
           When Others Then
           Return (Null);
      
 End Get_Unit_Lvl ; 
     
--##----------------------------------------------------------------------------------------------##--
Procedure Get_Itm_Wght_Data ( P_Itm_Barcode           In  Ias_Itm_Dtl.Barcode%Type ,                                                                                                                                      
	                              P_Wght_Prfx             In  Varchar2                 ,
                              P_Wght_Lngth            In  Number                   ,                                                            
	                              P_Wght_Itm_Lngth        In  Number                   , 
	                              P_Wght_Val              In  Number                   ,
                                  P_Wght_Val_Srvc         In  Number                   , 
	                              P_Remove_Wght_Dgt       In  Number                   ,
	                              P_Incld_Itm_Unt         In  Number Default 0         ,
	                              P_Itm_Code              Out Ias_Itm_Mst.I_Code%Type  ,
	                              P_Itm_Qty               Out Number                   ,
	                              P_Itm_Unt               Out Ias_Itm_Dtl.Itm_Unt%Type , 
                                  P_Wght_Srvc_Itm_Price   Out Number)  Is   
   V_Cnt Number:=0;
   V_Wght_Val_Itm Number;                                                                                                           
                
  Begin
       If  Upper(Substr(P_Itm_Barcode,1,Length(P_Wght_Prfx))) = Upper(P_Wght_Prfx)  And  Length(P_Itm_Barcode)= P_Wght_Lngth Then
                                       
            P_Itm_Code:= Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth );
            
            Begin
              Select 1 into V_Cnt
               From Ias_Itm_mst
               where I_Code=P_Itm_Code
                And Nvl(Service_Itm,0)=1
                And Nvl(Weighted,0)=1
                And Rownum<=1;
            Exception               
             When Others Then
              V_Cnt:=0;
            End;
            
            Begin
              Select Wght_Val_Itm into V_Wght_Val_Itm
               From Ias_Itm_mst
               where I_Code=P_Itm_Code
                And Nvl(Weighted,0)=1
                And Rownum<=1;
            Exception When Others Then
              V_Wght_Val_Itm:=Null;
            End;
            
            If V_Cnt=1 Then
                  
                If P_Incld_Itm_Unt = 0 Then
                    -- Remove_Weight_Digit    1- From Right 2- From Left                               
                     If P_Remove_Wght_Dgt = 1  Then         
                         P_Wght_Srvc_Itm_Price := Substr(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1)),1,Length(To_Number(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))))-1 )/Nvl(V_Wght_Val_Itm,Nvl(P_Wght_Val_Srvc,P_Wght_Val));
                         P_Itm_Qty:=1;
                     Elsif P_Remove_Wght_Dgt = 2  Then                    
                         P_Wght_Srvc_Itm_Price := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2))/Nvl(V_Wght_Val_Itm,Nvl(P_Wght_Val_Srvc,P_Wght_Val));             
                         P_Itm_Qty:=1;
                     Else
                         P_Wght_Srvc_Itm_Price := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))/Nvl(V_Wght_Val_Itm,Nvl(P_Wght_Val_Srvc,P_Wght_Val)) ;
                         P_Itm_Qty:=1;
                     End If ;
                Else
                    --Get Item Unit
                     Begin 
                          Select Itm_Unt Into P_Itm_Unt
                            From Ias_Itm_Dtl 
                           Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                             And Lvl_Unit=Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1,1); 
                     Exception When Others Then
                          Select Itm_Unt Into P_Itm_Unt
                            From Ias_Itm_Dtl 
                           Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                             And Main_Unit=1;              
                     End;
                    -- Remove_Weight_Digit    1- From Right 2- From Left                               
                     If P_Remove_Wght_Dgt = 1  Then         
                         P_Wght_Srvc_Itm_Price := Substr(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2)),1,Length(To_Number(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))))-1 )/Nvl(V_Wght_Val_Itm,Nvl(P_Wght_Val_Srvc,P_Wght_Val))  ; 
                         P_Itm_Qty:=1;
                     Elsif P_Remove_Wght_Dgt = 2  Then                    
                         P_Wght_Srvc_Itm_Price := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+3))/Nvl(V_Wght_Val_Itm,Nvl(P_Wght_Val_Srvc,P_Wght_Val));             
                         P_Itm_Qty:=1;
                     Else
                         P_Wght_Srvc_Itm_Price := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2))/Nvl(V_Wght_Val_Itm,Nvl(P_Wght_Val_Srvc,P_Wght_Val)) ;
                         P_Itm_Qty:=1;
                     End If ;
                End If;
            Else                 
                If P_Incld_Itm_Unt = 0 Then
                    -- Remove_Weight_Digit    1- From Right 2- From Left                               
                     If P_Remove_Wght_Dgt = 1  Then         
                         P_Itm_Qty := Substr(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1)),1,Length(To_Number(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))))-1 )/Nvl(V_Wght_Val_Itm,P_Wght_Val)  ; 
                     Elsif P_Remove_Wght_Dgt = 2  Then                    
                         P_Itm_Qty := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2))/Nvl(V_Wght_Val_Itm,P_Wght_Val);             
                     Else
                         P_Itm_Qty := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))/Nvl(V_Wght_Val_Itm,P_Wght_Val) ;
                     End If ;
                Else
                    --Get Item Unit
                     Begin 
                          Select Itm_Unt Into P_Itm_Unt
                            From Ias_Itm_Dtl 
                           Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                             And Lvl_Unit=Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1,1); 
                     Exception When Others Then
                          Select Itm_Unt Into P_Itm_Unt
                            From Ias_Itm_Dtl 
                           Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                             And Main_Unit=1;              
                     End;
                    -- Remove_Weight_Digit    1- From Right 2- From Left                               
                     If P_Remove_Wght_Dgt = 1  Then         
                         P_Itm_Qty := Substr(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2)),1,Length(To_Number(To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+1))))-1 )/Nvl(V_Wght_Val_Itm,P_Wght_Val)  ; 
                     Elsif P_Remove_Wght_Dgt = 2  Then                    
                         P_Itm_Qty := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+3))/Nvl(V_Wght_Val_Itm,P_Wght_Val);             
                     Else
                         P_Itm_Qty := To_Number(Substr(P_Itm_Barcode,Length(P_Wght_Prfx)+P_Wght_Itm_Lngth+2))/Nvl(V_Wght_Val_Itm,P_Wght_Val) ;
                     End If ;
                End If;                                
            End If;
       End If;        
  End Get_Itm_Wght_Data ; 
--##----------------------------------------------------------------------------------------------##--

Function Chk_Altrntv_Grp_Qty_Lmt (P_Rol_Type  In Number,-- 1- Max -2- Min
                                  P_Grp_No    In Ias_Alternative_Group.Group_No%Type,
                                  P_In_Qty    In Number 
                                 ) Return Number Is
  V_Min_Qty Number;
  V_Max_Qty Number;
  V_Grp_Avl_Qty Number:=0;
  V_Chk Number:=0;                             
Begin

  Begin
    Select Nvl(Sum(Nvl(Avl_Qty,0)),0) Into  V_Grp_Avl_Qty
    From Ias_Itm_Mst,Ias_Itm_Wcode 
    Where Ias_Itm_Mst.I_Code=Ias_Itm_Wcode.I_Code
     And Ias_Itm_Mst.Group_No Is Not Null
     And Ias_Itm_Mst.Group_No=P_Grp_No;
    Exception 
      When Others Then
       V_Grp_Avl_Qty:=0;
  End;  
                                      
  If P_Rol_Type = 1 Then
   Begin
    Select  Max_Lmt_Qty Into V_Max_Qty
     From Ias_Alternative_Group
     Where Group_No=P_Grp_No
      And Max_Lmt_Qty Is Not Null
      And Rownum<=1;
   Exception
    When Others Then         
	 V_Chk:=0;  
   End;
   
   If Nvl(V_Grp_Avl_Qty,0) + P_In_Qty > V_Max_Qty  Then
      V_Chk:=1;
   End If;   
  ElsIf P_Rol_Type = 2 Then
   Begin 
    Select  Min_Lmt_Qty Into V_Min_Qty
     From Ias_Alternative_Group
     Where Group_No=P_Grp_No
      And Min_Lmt_Qty Is Not Null
      And Rownum<=1;
   Exception
    When Others Then         
	 V_Chk:=0;  
   End; 
   If Nvl(V_Grp_Avl_Qty,0) - P_In_Qty < V_Min_Qty Then
      V_Chk:=1;
   End If;
  End If;
    
  Return (V_Chk);
Exception
  When Others Then         
	V_Chk:=0; 
End;
--##----------------------------------------------------------------------------------------------##--

Function Get_GTIN_Code (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Varchar2 Is
   V_GTIN_Code Ias_Itm_Mst.GTIN_Code%Type ;
 Begin
    Select GTIN_Code
     Into V_GTIN_Code
    From Ias_Itm_Mst 
     Where I_Code = P_I_Code ;
    Return(V_GTIN_Code) ;
 Exception
  When Others Then
   Return(P_I_Code);
 End ;
--##----------------------------------------------------------------------------------------------##-- 
Function Get_HSN_Code (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Varchar2 Is
   V_HSN_CODE Ias_Itm_Mst.HSN_CODE%Type ;
 Begin
    Select HSN_CODE
     Into V_HSN_CODE
    From Ias_Itm_Mst 
     Where I_Code = P_I_Code ;
    Return(V_HSN_CODE) ;
 Exception
  When Others Then
   Return(P_I_Code);
 End ;
--##----------------------------------------------------------------------------------------------##--
Function Get_Itm_Code_By_Barcode (P_Barcode   In Ias_Itm_Dtl.Barcode%Type , P_Use_One_Barcode_For_Itm In Ias_Para_Inv.Use_One_Barcode_For_Itm%Type) Return Varchar2 Is
   V_I_Code Ias_Itm_Mst.I_Code%Type ;
 Begin
    If Nvl(P_Use_One_Barcode_For_Itm,0)= 1 Then
        Select I_Code 
         Into V_I_Code
        From Ias_Itm_Dtl 
         Where Barcode = P_Barcode 
           And Rownum<=1;
    Else
        Select I_Code 
         Into V_I_Code
        From Ias_Itm_Unt_Barcode 
         Where Barcode = P_Barcode 
           And Rownum<=1;
    End If;
    
    Return(V_I_Code) ;
 Exception
  When Others Then
   Return(Null);
 End ;
--##----------------------------------------------------------------------------------------------##--
Function Get_Itm_Code_By_Vndr_I_Code (P_Vndr_I_Code   In Ias_Itm_Mst.Vndr_I_Code%Type ) Return Varchar2 Is
   V_I_Code Ias_Itm_Mst.HSN_CODE%Type ;
 Begin
    Select I_Code
     Into V_I_Code
    From Ias_Itm_Mst 
     Where Vndr_I_Code = P_Vndr_I_Code ;
    Return(V_I_Code) ;
 Exception
  When Others Then
   Return(Null);
 End ;
--##----------------------------------------------------------------------------------------------##--  
Function Get_Glbl_Msure_Code (P_Measure_Code In Measurement.Measure_Code%Type ) Return Varchar2 Is
   V_Measure_Code_Gb Measurement.Measure_Code_Gb%Type ;
 Begin
    Select Measure_Code_Gb
     Into V_Measure_Code_Gb
    From Measurement 
     Where Measure_Code = P_Measure_Code ;
    Return(V_Measure_Code_Gb) ;
 Exception
  When Others Then
   Return(Null);
 End ;
--##----------------------------------------------------------------------------------------------##--
Function GET_ICODE_BY_VNDR_ICODE (P_Vndr_I_Code In Ias_Itm_Mst.Vndr_I_Code%Type,P_V_Code In V_DETAILS.V_Code%Type ) Return Ias_Itm_Mst.Vndr_I_Code%Type Is
  V_I_Code Ias_Itm_Mst.I_Code%Type ;

 Begin
     
    Begin 
        Select I_Code
        Into V_I_Code                                               
        From Ias_Vndr_Itm
        Where I_Code_Vndr = P_Vndr_I_Code
        And   V_Code =P_V_Code    
        And  Rownum<=1 ;
   Exception 
    When No_Data_Found Then
    V_I_Code := Null ;     
    When Others Then 
    V_I_Code := Null ;        
   End;
    
  If V_I_Code Is  Null Then
         Select I_Code Into V_I_Code
           From Ias_Itm_Mst
          Where Ias_Itm_Mst.Vndr_I_Code = P_Vndr_I_Code
          And   V_Code = Decode(P_V_Code,Null,V_Code,P_V_Code);
  End If;        
     
     Return(V_I_Code);
 Exception
   When Others Then
     Return (Null);      
 End GET_ICODE_BY_VNDR_ICODE ;
 --##----------------------------------------------------------------------------------------------##-- 
 Function GET_VNDR_ICODE (P_I_Code In Ias_Itm_Mst.I_Code%Type,P_V_Code In V_DETAILS.V_Code%Type ) Return Ias_Itm_Mst.I_Code%Type Is
  V_I_Code Ias_Itm_Mst.I_Code%Type ;

 Begin
     
    Begin 
        Select I_CODE_VNDR
        Into V_I_Code                                               
        From Ias_Vndr_Itm
        Where I_code = P_I_Code
        And   V_Code =P_V_Code  
        And   I_CODE_VNDR Is Not Null  
        And  Rownum<=1 ;
   Exception 
    When No_Data_Found Then
    V_I_Code := Null ;     
    When Others Then 
    V_I_Code := Null ;        
   End;           
     
     Return(V_I_Code);
 Exception
   When Others Then
     Return (Null);      
 End GET_VNDR_ICODE ; 
--##----------------------------------------------------------------------------------------------##--
End  IAS_ITM_PKG;
/
CREATE PACKAGE BODY IAS_MEASURMENTS_PKG AS
/******************************************************************************
   NAME:       IAS_MEASURMENTS
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        08/11/2010             1. Created this package body.
******************************************************************************/
FUNCTION Calc_Sales_Cst_Amt(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  --- SALES _amt(1)
  Sum_Sales Number;
BEGIN 
  Select  Nvl(Sum(((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0))) * nvl(Bill_Rate,1)),0)
    InTo Sum_Sales 
    From Ias_Bill_Mst 
   Where Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
     And Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);
             
  Return(Nvl(Sum_Sales,0));
 Exception
    When Others Then
       Return(0);
END Calc_Sales_Cst_Amt ;
FUNCTION Calc_Sales_Cst_Qty(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  --- SALES _qty (2)
  Sum_Sales Number;
BEGIN 
  Select nvl(Sum(Nvl(i_Qty,0))+ Sum(Nvl(Free_Qty,0)),0)
    InTo Sum_Sales 
    From Ias_Bill_Mst,Ias_Bill_dtl
   Where Ias_Bill_Mst.bill_ser =Ias_Bill_dtl.bill_ser 
     And Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
     And Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);          

  Return(Nvl(Sum_Sales,0));
 Exception
    When Others Then
       Return(0);
END Calc_Sales_Cst_Qty ;
FUNCTION Calc_Net_Sales_Cst_Amt(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  ---NET SALES (3)
  Sum_Sales Number;
  Sum_Rt_Sales Number;
BEGIN 
  Select  Nvl(Sum(((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0))) * nvl(Bill_Rate,1)),0)
    InTo Sum_Sales 
    From Ias_Bill_Mst 
   Where Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
     And Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);
             
   Select Nvl(Sum((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0)) * nvl(Rt_Bill_Rate,1) ),0)
     InTo Sum_Rt_Sales 
     From Ias_Rt_Bill_Mst 
    Where Ias_Rt_Bill_Mst.C_Code = Nvl(CCode , Ias_Rt_Bill_Mst.C_Code)
      And Rt_Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);    

  Return(Nvl(Sum_Sales,0) - Nvl(Sum_Rt_Sales,0));
 Exception
    When Others Then
       Return(0);
END Calc_Net_Sales_Cst_Amt ;
FUNCTION Calc_Net_Sales_Cst_Qty(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  ---NET SALES  (4)
  Sum_Sales Number;
  Sum_Rt_Sales Number;
BEGIN 
  Select  nvl(Sum(Nvl(i_Qty,0))+ Sum(Nvl(Free_Qty,0)),0)
    InTo Sum_Sales 
    From Ias_Bill_Mst,Ias_Bill_dtl
   Where Ias_Bill_Mst.bill_ser =Ias_Bill_dtl.bill_ser 
     And Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
     And Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);
             
   Select nvl(Sum(Nvl(i_Qty,0))+ Sum(Nvl(Free_Qty,0)),0)
     InTo Sum_Rt_Sales 
     From Ias_Rt_Bill_Mst,Ias_Rt_Bill_Dtl 
    Where Ias_Rt_Bill_Mst.Rt_Bill_Ser=Ias_Rt_Bill_Dtl.Rt_Bill_Ser 
      And  Ias_Rt_Bill_Mst.C_Code = Nvl(CCode , Ias_Rt_Bill_Mst.C_Code)
      And Rt_Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);    

  Return(Nvl(Sum_Sales,0) - Nvl(Sum_Rt_Sales,0));
 Exception
    When Others Then
       Return(0);
END Calc_Net_Sales_Cst_Qty ;
--------------------------------------------------------------------------
FUNCTION Calc_Net_Sales_Cst_Mnth(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS   --Manthly(7)
  Sum_Sales Number;
  Sum_Rt_Sales Number;
BEGIN 
  Select  Nvl(Sum(((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0))) * nvl(Bill_Rate,1)),0)
      InTo Sum_Sales 
      From Ias_Bill_Mst 
      Where Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
        And to_char(Bill_Date,'MM') Between to_char(FDate,'MM') 
        And Decode(to_char(TDate,'MM'),Null,to_char(FDate,'MM'),to_char(TDate,'MM'));
             
       Select  Nvl(Sum((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0)) * nvl(Rt_Bill_Rate,1) ),0)
          InTo Sum_Rt_Sales 
	       From Ias_Rt_Bill_Mst 
  	      Where Ias_Rt_Bill_Mst.C_Code = Nvl(CCode , Ias_Rt_Bill_Mst.C_Code)
            And to_char(Rt_Bill_Date,'MM') Between to_char(FDate,'MM') 
            And Decode(to_char(TDate,'MM'),Null,to_char(FDate,'MM'),to_char(TDate,'MM'));    
            
  Return(Nvl(Sum_Sales,0) - Nvl(Sum_Rt_Sales,0));
 Exception
    When Others Then
       Return(0);
END Calc_Net_Sales_Cst_Mnth;
--------------------------------------------------------------------------------
FUNCTION Calc_Rec_Cst (CCode Varchar2 , FDate Date , TDate Date) RETURN Number IS --������
  Sum_Rec Number;
BEGIN
  Select Nvl(Sum(Nvl(Cr_Amt,0)),0) InTo Sum_Rec 
    From ias_post_dtl 
   Where Doc_Type In (1,2)
     And c_code is not null
     And C_Code = CCode 
     And Doc_Date Between  FDate And TDate;
   Return(Nvl(Sum_Rec,0));
 Exception
    When Others Then
       Return(0);
END Calc_Rec_Cst;
-----------------------------------------------------------------------------------
FUNCTION Calc_Stk_Cost  (CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  ---�������
  Sum_Stk_Sales Number;
  Sum_Stk_Rt_Sales Number;
BEGIN 
  Select  Sum(Nvl(Ias_Bill_Dtl.Stk_Cost,0)*Nvl(Ias_Bill_Mst.Stock_Rate,1)*(Nvl(Ias_Bill_Dtl.I_Qty,0)+Nvl(Ias_Bill_Dtl.Free_Qty,0)))
      InTo Sum_Stk_Sales 
      From Ias_Bill_Mst,Ias_Bill_Dtl  
      Where Ias_Bill_Mst.Bill_Ser=Ias_Bill_Dtl.Bill_Ser
        And Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
        And Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);
             
       Select  Sum(Nvl(Ias_Rt_Bill_Dtl.Stk_Cost,0)*Nvl(Ias_Rt_Bill_Mst.Stock_Rate,1)*(Nvl(Ias_Rt_Bill_Dtl.I_Qty,0)+Nvl(Ias_Rt_Bill_Dtl.Free_Qty,0)))
          InTo Sum_Stk_Rt_Sales 
	     From Ias_Rt_Bill_Mst,Ias_Rt_Bill_Dtl  
       Where Ias_Rt_Bill_Mst.Rt_Bill_Ser=Ias_Rt_Bill_Dtl.Rt_Bill_Ser
  	       And Ias_Rt_Bill_Mst.C_Code = Nvl(CCode , Ias_Rt_Bill_Mst.C_Code)
            And Rt_Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);    
            
   Return(Nvl(Sum_Stk_Sales,0) - Nvl(Sum_Stk_Rt_Sales,0));
 Exception
    When Others Then
       Return(0);

END Calc_Stk_Cost;
-----------------------------------------------------------------------------------
Function Dr_Rate(Local_Cur Varchar2,     -- --����� ���������
                  Cc_Code Varchar2,
                   C_Code Varchar2,
                     A_Cy Varchar2,
                    Fdate Date,
                    Tdate Date) Return Number Is
V_Avg Number;
V_Dr_Rate Number;
Begin
    V_Avg:=(Get_Bl_Cst_Fnc (Local_Cur,Null,C_Code,A_Cy,Fdate,Null )+           --����� ���������
            Get_Bl_Cst_Fnc (Local_Cur,Null,C_Code,A_Cy,Tdate,Null ))/2;  
            if   V_Avg =0 THEN
            	   V_Avg:=1;
            END IF;
    V_Dr_Rate:=ROUND(NVL(Calc_Net_Sales_Cst_Amt(C_Code ,Fdate ,Tdate ),1)/NVL(V_Avg,1),3);
  Return(V_Dr_Rate);
End Dr_Rate;
-------------------------------------------------------------------------------------
FUNCTION Calc_Rt_Sales_Cst_Percentage(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS
  Sum_Sales Number;
  Sum_Rt_Sales Number;
BEGIN 
  Select  Nvl(Sum(((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0))) * nvl(Bill_Rate,1)),0)
    InTo Sum_Sales 
    From Ias_Bill_Mst 
   Where Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
     And Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);
             
   Select Nvl(Sum((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0)) * nvl(Rt_Bill_Rate,1) ),0)
     InTo Sum_Rt_Sales 
     From Ias_Rt_Bill_Mst 
    Where Ias_Rt_Bill_Mst.C_Code = Nvl(CCode , Ias_Rt_Bill_Mst.C_Code)
      And Rt_Bill_Date Between FDate And Decode(TDate,Null,FDate,TDate);    

  Return(Nvl(Sum_Rt_Sales,0)/Nvl(Sum_Sales,0) * 100);
 Exception
    When Others Then
       Return(0);
End Calc_Rt_Sales_Cst_Percentage;
FUNCTION Get_Sale_Day_Avg (CCode Varchar2 , FDate Date , TDate Date) RETURN Number IS   --��� �����
  V_Itm_Sale_Age Number :=0;
BEGIN
--##----------------------------------------------------------------------------------##--
  Begin
  Select Round(Sum(Nvl(Get_Itm_Sales_Age (2,1,Ias_Bill_Dtl.I_Code,Ias_Bill_Dtl.Itm_Unt,FDate,TDate,Ias_Bill_Dtl.W_Code),0))/Count(1),2)
	   InTo V_Itm_Sale_Age
	   From Ias_Bill_Mst,Ias_Bill_Dtl
	   Where Ias_Bill_Mst.Bill_Ser = Ias_Bill_Dtl.Bill_Ser
	     And Ias_Bill_Mst.C_Code   = CCode
	     And Bill_Date Between  FDate And TDate;
  Exception When Others Then
  	 V_Itm_Sale_Age := 0;
  End ; 
  Return(V_Itm_Sale_Age); 
END;
--##-------------------------------------------------------------------------------##--
END IAS_MEASURMENTS_PKG;
/
CREATE Package BODY Ias_Mnd_CshBnk_Pkg IS

--=============================================
PROCEDURE Chk_CshBnk_Cnfrm (P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) Is
cnt     NUMBER;
Begin
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Not Null
            And a_code||a_cy Not In (Select Csh.a_code||Csh.a_cy From IAS_CASH_IN_HAND_DTL Csh
                                        Union All
                                     Select Bnk.a_code||Bnk.a_cy From IAS_CASH_At_Bank_DTL Bnk   ) 
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=0;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' Null
                where a_code||a_cy Not In ( Select Csh.a_code||Csh.a_cy From IAS_CASH_IN_HAND_DTL Csh
                                            Union All
                                            Select Bnk.a_code||Bnk.a_cy From IAS_CASH_At_Bank_DTL Bnk   ) 
                And '||P_Clmn_Nam   ||' Is Not Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Not Null
            And A_Code Not In ( Select Csh.A_Code From CASH_IN_HAND Csh 
                                    Union All
                                Select Bnk.a_code From CASH_At_Bank Bnk ) 
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=0;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' =Null
            Where   '||P_Clmn_Nam   ||' Is Not Null
            And A_Code Not In ( Select Csh.A_Code From CASH_IN_HAND Csh 
                                    Union All
                                Select Bnk.a_code From CASH_At_Bank Bnk ) 
            And '||P_Clmn_Nam   ||' Is Not Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
     
End Chk_CshBnk_Cnfrm;
--=============================================
PROCEDURE Fill_Cash_No  (   P_lang_no   In  NUMBER      Default 1   ,
                            P_doc_type  In  NUMBER      Default Null,
                            P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) Is
cnt     NUMBER;
Begin
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Null
            And Exists ( Select 1 From IAS_CASH_IN_HAND_DTL where a_code=Dtl.a_code And A_Cy=Dtl.A_Cy )
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=0;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' = (Select Cash_No From IAS_CASH_IN_HAND_DTL Csh where Csh.a_code=Dtl.a_code And Csh.A_Cy=Dtl.A_Cy And RowNum<=1)
                where Exists ( Select 1 From IAS_CASH_IN_HAND_DTL where a_code=Dtl.a_code and RowNum<=1)
                And a_code||a_cy In (Select Csh.a_code||Csh.a_cy From IAS_CASH_IN_HAND_DTL Csh) 
                And '||P_Clmn_Nam   ||' Is Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Null
            And Exists ( Select 1 From CASH_IN_HAND where a_code=Dtl.a_code )
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=0;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' = (Select Cash_No From CASH_IN_HAND Csh where Csh.a_code=Dtl.a_code And RowNum<=1)
                where Exists ( Select 1 From CASH_IN_HAND where a_code=Dtl.a_code and RowNum<=1)
                And a_code In (Select Csh.a_code From CASH_IN_HAND Csh) 
                And '||P_Clmn_Nam   ||' Is Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
     
End Fill_Cash_No ;
--=============================================
PROCEDURE Fill_Bank_No  (   P_lang_no   In  NUMBER      Default 1   ,
                            P_doc_type  In  NUMBER      Default Null,
                            P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) Is
cnt     NUMBER;
Begin
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Null
            And Exists ( Select 1 From IAS_CASH_AT_BANK_DTL where a_code=Dtl.a_code And A_Cy=Dtl.A_Cy )
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=0;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' = (Select Bank_No From IAS_CASH_AT_BANK_DTL Bnk where Bnk.a_code=Dtl.a_code And Bnk.A_Cy=Dtl.A_Cy And RowNum<=1)
                where Exists ( Select 1 From IAS_CASH_AT_BANK_DTL where a_code=Dtl.a_code and RowNum<=1)
                And a_code||a_cy In (Select Bnk.a_code||Bnk.a_cy From IAS_CASH_AT_BANK_DTL Bnk) 
                And '||P_Clmn_Nam   ||' Is Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Null
            And Exists ( Select 1 From CASH_AT_BANK where a_code=Dtl.a_code )
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=0;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' = (Select Cash_No From CASH_AT_BANK Bnk where Bnk.a_code=Dtl.a_code And RowNum<=1)
                where Exists ( Select 1 From CASH_AT_BANK where a_code=Dtl.a_code and RowNum<=1)
                And a_code In (Select Bnk.a_code From CASH_AT_BANK Bnk) 
                And '||P_Clmn_Nam   ||' Is Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
     
End Fill_Bank_No ;
--=======================================================================
PROCEDURE Update_CshBnk IS
	Cnt Number;
Begin
    Begin
        Ias_Mnd_CshBnk_Pkg.Chk_CshBnk_Cnfrm('IAS_POST_DTL','CASH_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Cash_No(1,Null,'IAS_POST_DTL','CASH_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Bank_No(1,Null,'IAS_POST_DTL','CASH_NO',Cnt);
    Exception When Others Then 
        Null;
    End;
    Begin
        Ias_Mnd_CshBnk_Pkg.Chk_CshBnk_Cnfrm('DETAIL_JOURNAL_V','CSH_BNK_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Cash_No(1,1,'DETAIL_JOURNAL_V','CSH_BNK_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Bank_No(1,1,'DETAIL_JOURNAL_V','CSH_BNK_NO',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CshBnk_Pkg.Chk_CshBnk_Cnfrm('VOUCHER_DETAIL','CSH_BNK_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Cash_No(1,Null,'VOUCHER_DETAIL','CSH_BNK_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Bank_No(1,Null,'VOUCHER_DETAIL','CSH_BNK_NO',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CshBnk_Pkg.Chk_CshBnk_Cnfrm('GR_NOTE','CSH_BNK_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Cash_No(1,Null,'GR_NOTE','CSH_BNK_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Bank_No(1,Null,'GR_NOTE','CSH_BNK_NO',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CshBnk_Pkg.Chk_CshBnk_Cnfrm('IAS_OUTGOING_MST','CSH_BNK_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Cash_No(1,9,'IAS_OUTGOING_MST','CSH_BNK_NO',Cnt);
        Ias_Mnd_CshBnk_Pkg.Fill_Bank_No(1,9,'IAS_OUTGOING_MST','CSH_BNK_NO',Cnt);
    Exception When Others Then 
    	Null;
    End;
END Update_CshBnk;
--=======================================================================
END Ias_Mnd_CshBnk_Pkg;
/
CREATE Package BODY Ias_Mnd_CstTrns_Pkg IS

Cnt  NUMBER;
Cnt1 NUMBER;
c    NUMBER;
d    NUMBER;
--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
PROCEDURE Chk_CstTrns_Prc (P_DocType In NUMBER Default Null) Is
 Cnt 							  NUMBER;
 Cnt1               NUMBER;
Begin
Begin
  Select nvl(post_cheque_type,0)
    Into V_Post_Cheque_Type
    From Ias_Para_GL,Ias_Para_AR;
    
 Exception 
   When others then
     V_Post_Cheque_Type:=0;
End;
--## open_bal
If P_DocType = 0 Or P_DocType Is Null Then

   Select Count(1) Into Cnt  From open_bal
    where open_bal.ac_dtl_typ=3;
   
    
   Select Count(1) Into Cnt1 From Ias_Post_dtl 
    Where doc_type=0
      and ac_dtl_typ=3;
End If;
--## Journal
If P_DocType = 1 Or P_DocType Is Null Then
Execute Immediate 
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 1 doc_type,D.ac_code_dtl c_code,a_cy a_cy,D.j_doc_no doc_no,D.jv_type jv_type ,
        M.j_ser doc_ser,D.cc_code cc_code , D.rcrd_no
   From master_journal_v M,detail_journal_v D ,Customer C
  where M.j_ser  = D.j_ser
    and D.a_code = C.c_a_code  
    and D.ac_code_dtl   = C.c_code  
    and D.ac_dtl_typ=3
    and nvl(stand_by,0) = 0
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no doc_no,jv_type jv_type, 
        doc_ser,cc_code,rcrd_no
   From Ias_Post_dtl
  where doc_type=1
    and ac_dtl_typ=3 ';
	Begin 
		 Select 1 
		   Into cnt 
		   From Ias_V_Chk_CstTrns
		  where doc_type=1 
		    and RowNum<=1;
	 Exception
     when No_Data_Found then
       Null;
	   when Others then
	    Raise_application_error(-20561,' Error In Inserting Cst. Trans From Detail_Journal_v = '||chr(13)||SqlErrm) ;
	End;
End If;
--## vouchers (Receipts)
If P_DocType = 2 Or P_DocType Is Null Then
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 2 doc_type,D.ac_code_dtl c_code,D.a_cy,D.voucher_no doc_no,
        D.voucher_pay_type jv_type,M.v_ser doc_ser,nvl(sum(abs(ac_amt)),0) amt,
        D.cc_code, D.rcrd_no
   From vouchers M,voucher_detail D,Customer C
  where D.voucher_type=1
    and M.voucher_type=D.voucher_type
    and M.v_ser=D.v_ser
    and D.a_code=C.c_a_code 
    and D.ac_code_dtl =C.c_code 
    and D.ac_dtl_typ=3
    and nvl(M.Stand_by,0)= 0
    and ( ((D.voucher_pay_type=2 and '||V_Post_Cheque_Type||'=0 and D.cheque_valued=1 and M.cheq_type In (3,4)) Or M.cheq_type in (0,1,2) Or '||v_Post_Cheque_Type||'=1 ) Or D.voucher_pay_type=1)
    group by 2 ,D.ac_code_dtl,D.a_cy,D.voucher_no,D.voucher_pay_type,M.v_ser,D.cc_code,D.rcrd_no
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,doc_ser ,nvl(sum(cr_amt),0),cc_code,rcrd_no
   From Ias_Post_dtl
  where doc_type=2 
    and ac_dtl_typ=3
  group by doc_type,ac_code_dtl,a_cy,doc_no,jv_type,doc_ser,cc_code,rcrd_no';
  Begin 
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_CstTrns
	  where doc_type=2 
	    and RowNum<=1;
	 Exception
     when No_Data_Found then
       Null;
     when Others then
	    Raise_application_error(-20562,' Error In Inserting Cst. Trans From Rec. Vouchers = '||chr(13)||SqlErrm) ;
	End;
--## Endrsmnt
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 2 doc_type,D.AC_CODE_DTL_END c_code,D.a_cy,D.voucher_no doc_no,
        D.voucher_pay_type jv_type,M.v_ser doc_ser,nvl(sum(abs(ac_amt)),0) amt,
        D.cc_code, D.rcrd_no
   From vouchers M,voucher_detail D,Customer C
  where D.voucher_type=1
    and M.voucher_type=D.voucher_type
    and M.v_ser=D.v_ser
    and M.voucher_pay_type=2 
    and D.a_code_end=C.c_a_code 
    and D.AC_CODE_DTL_END =C.c_code 
    and D.AC_DTL_TYP_END=3
    and M.cheq_type = 3
    and nvl(M.Stand_by,0)= 0
    and nvl(d.Endrsmnt,0)= 1
    and D.cheque_valued=1
    group by 2 ,D.AC_CODE_DTL_END,D.a_cy,D.voucher_no,D.voucher_pay_type,M.v_ser,D.cc_code, D.rcrd_no
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,doc_ser ,nvl(sum(dr_amt),0),cc_code,rcrd_no
   From Ias_Post_dtl
  where doc_type=2 
    and jv_type=2
    and ac_dtl_typ=3
    and nvl(dr_amt,0)>0
    and nvl(Cheque_Valued,0) <> 2
  group by doc_type,ac_code_dtl,a_cy,doc_no,jv_type,doc_ser,cc_code,rcrd_no';
 
  Begin 
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_CstTrns
	  where doc_type=2 
	    and RowNum<=1;
	 Exception
     when No_Data_Found then
       Null;
     when Others then
	    Raise_application_error(-20562,' Error In Inserting Cst. Trans From Rec. Vouchers (Endrsmnt) = '||chr(13)||SqlErrm) ;
	End;
End If;
--## vouchers (Payments)
If P_DocType = 3 Or P_DocType Is Null Then
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 3 doc_type,D.ac_code_dtl c_code,D.a_cy, D.voucher_no doc_no,
        D.voucher_pay_type jv_type ,M.v_ser doc_ser,nvl(sum(abs(ac_amt)),0) amt,
        D.cc_code, D.rcrd_no
   From vouchers M,voucher_detail D,Customer C
  where D.voucher_type=2
    and M.voucher_type=D.voucher_type
    and M.v_ser=D.v_ser
    and D.a_code=C.c_a_code 
    and D.ac_code_dtl=C.c_code 
    and D.ac_dtl_typ=3
    and nvl(M.Stand_by,0)= 0
   group by 3 ,D.ac_code_dtl,D.a_cy,D.voucher_no,D.voucher_pay_type ,M.v_ser,D.cc_code,D.rcrd_no
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type ,doc_ser,nvl(sum(dr_amt),0),cc_code,rcrd_no
   From Ias_Post_dtl
  where doc_type=3
    and ac_dtl_typ=3
  group by doc_type,ac_code_dtl,a_cy,doc_no,jv_type,doc_ser,cc_code,rcrd_no';
 Begin
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_CstTrns
	  where doc_type=3 
	    and RowNum<=1;
	 Exception
     when No_Data_Found then
       Null;
	   when Others then
	    Raise_application_error(-20563,' Error In Inserting Cst. Trans From Pay. Vouchers = '||chr(13)||SqlErrm) ;
	End;
End If;
--## bills
If P_DocType = 4 Or P_DocType Is Null Then
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 4 doc_type,c_code c_code,bill_currency a_cy,bill_no doc_no,bill_doc_type jv_type ,
        bill_ser doc_ser,cc_code,1 rcrd_no,
        Round(abs(((nvl(bill_amt,0)-nvl(disc_amt_mst,0)-nvl(disc_amt_dtl,0)+nvl(othr_amt,0)+nvl(vat_amt,0))* bill_rate)),2) bill_amt
   From Ias_Bill_Mst
  where nvl(Stand_by,0)= 0
    and bill_doc_type=4
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,
        cc_code,1 rcrd_no,Round(nvl(dr_amt,0),2)
   From Ias_Post_Dtl
  where doc_type=4
    and ac_dtl_typ=3';
  Begin
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_CstTrns
	  where doc_type=4 
	    and RowNum<=1;
	 Exception
     when No_Data_Found then
       Null;
	   when Others then
	    Raise_application_error(-20564,' Error In Inserting Cst. Trans From bills = '||chr(13)||SqlErrm) ;
	End;
End If;
--## Add_Disc_Bills
If P_DocType = 15 Or P_DocType Is Null Then
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 15 doc_type,c_code c_code,A_cy a_cy,doc_no doc_no,4  jv_type ,
        doc_ser doc_ser,cc_code,1 rcrd_no,
        Round(abs((nvl(ADD_DISC_AMT_MST,0)+nvl(ADD_DISC_AMT_DTL,0))*nvl(Doc_Rate,1)),4) disc_amt
   From IAS_BILL_MST_ADD_DISC
  where c_code Is not Null 
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,
        cc_code,rcrd_no,Round(nvl(cr_amt,0),4)
   From Ias_Post_Dtl
  where doc_type=15
    and ac_dtl_typ=3';
  Begin
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_CstTrns
	  where doc_type=15 
	    and RowNum<=1;
	 Exception
     when No_Data_Found then
       Null;
	   when Others then
	    Raise_application_error(-20564,' Error In Inserting Cst. Trans From Add_Disc_Bills = '||chr(13)||SqlErrm) ;
	End;
End If;
--## rt_bills
If P_DocType = 5 Or P_DocType Is Null Then
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 5 doc_type,c_code c_code,rt_bill_currency a_cy,rt_bill_no doc_no,
        rt_bill_doc_type jv_type ,rt_bill_ser doc_ser,cc_code cc_code,1 rcrd_no,
        Round(abs(((nvl(bill_amt,0)-nvl(disc_amt,0)+nvl(othr_amt,0)+nvl(vat_amt,0))* rt_bill_rate)),2) bill_amt
   From Ias_Rt_Bill_Mst
  where rt_bill_doc_type=4
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,1 rcrd_no,Round(nvl(cr_amt,0),2)
   From Ias_Post_Dtl
  where doc_type=5
    and ac_dtl_typ=3 ';
 Begin  
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_CstTrns
	  where doc_type=5 
	    and RowNum<=1;
  Exception
     when No_Data_Found then
       Null;
	   when Others then
	    Raise_application_error(-20565,' Error In Inserting Cst. Trans From return bills = '||chr(13)||SqlErrm) ;
	End;  
End If;
--## Purchase Return
If P_DocType = 7 Or P_DocType Is Null Then
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 7 doc_type,M.c_code,M.rt_bill_currency a_cy,M.rt_bill_no doc_no,
        M.rt_bill_doc_type jv_type, M.rt_bill_ser doc_ser,M.cc_code,1 rcrd_no
   From Ias_Pr_Bill_Mst M, Customer C
  where rt_bill_doc_type=4
    and M.a_code = C.c_a_code
    and M.c_code = C.c_code
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,1 rcrd_no
   From Ias_Post_Dtl
  where doc_type=7
    and ac_dtl_typ=3';

  Begin
		Select 1 
		  Into cnt 
		  From Ias_V_Chk_CstTrns
		 where doc_type=7 
		   and RowNum<=1;
		  If cnt > 0 Then
		     --Ias_Mnd_CstTrns_Pkg.CT_Pur_Return (1) ;
		     null;
		  End If; 

	 Exception
	   when Others then
	    Null;
	End;


End If;
   
--## Incoming
If P_DocType = 8 Or P_DocType Is Null Then

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 8 doc_type,M.ac_code_dtl c_code,M.a_cy,M.gr_no doc_no,M.Incom_Type jv_type ,
        M.g_ser doc_ser,M.cc_code,1 rcrd_no,
        Decode(m.rt_out,1,nvl(Sum(nvl(i_qty,0)*nvl(i_price,0)*M.ac_rate),0),nvl(Sum(nvl(i_qty,0)*nvl(c_price,0)*M.ac_rate),0)) gr_amt
   From gr_note M,gr_detail D, Customer C
  where M.pi_type=5
    and M.a_code=C.c_a_code
    and M.ac_code_dtl=C.c_code
    and M.ac_dtl_typ=3
    and M.gr_no=D.gr_no
    and M.pi_type=D.pi_type
    and nvl(M.g_ser,0)=nvl(D.g_ser,0)
    group by M.ac_code_dtl,M.a_cy,M.gr_no,M.Incom_Type,M.g_ser,M.cc_code,M.rt_out
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,1 rcrd_no,nvl(cr_amt,0)
   From Ias_Post_Dtl 
  where doc_type=8
    and ac_dtl_typ=3';

Begin   
		Select 1 
		  Into cnt 
		  From Ias_V_Chk_CstTrns
		 where doc_type=8 
		   and RowNum<=1;
		  --If cnt > 0 Then
		    -- Ias_Mnd_CstTrns_Pkg.CT_Incoming (1) ;
		  --End If; 

	 Exception
	   when Others then
	    Null;
	End;

End If;  
--==============================================================================
--## Outgoing
If P_DocType = 9 Or P_DocType Is Null Then

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 9 doc_type,M.ac_code_dtl c_code,M.a_cy,M.Out_no doc_no,
        out_type jv_type ,Out_ser doc_ser,M.cc_code,1 rcrd_no,
        Decode( M.pur_type,1,((nvl(M.Out_amt,0)* nvl(M.Ac_rate,1)) + (nvl(M.exp_amt,0)*nvl(M.exp_rate,1))),( nvl(M.Out_amt,0)* nvl(M.ac_rate,1) ) ) doc_amt
   From Ias_Outgoing_Mst M,Customer C
  where M.a_code=C.c_a_code
    and M.ac_code_dtl=C.c_code
    and M.ac_dtl_typ=3
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,1 rcrd_no,nvl(dr_amt,0) 
   From Ias_Post_Dtl
  Where doc_type=9
    and ac_dtl_typ=3';
 
  Begin
   
		 Select 1 
		   Into cnt 
		   From Ias_V_Chk_CstTrns
		  where doc_type=9 
		    and RowNum<=1;
		  --If cnt > 0 Then
		    -- Ias_Mnd_CstTrns_Pkg.CT_OutGoing (1) ;
		  --End If; 

	 Exception
	   when Others then
	    Null;
	End;

End If;

If P_DocType = 95 Or P_DocType Is Null Then   --prepaid airway bill no
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 95 doc_type,c_code c_code,a_cy a_cy,doc_no doc_no,bill_doc_type jv_type ,
        doc_ser doc_ser,cc_code,1 rcrd_no,
        Round(abs(((nvl(bill_amt,0)-nvl(disc_amt,0)+nvl(othr_amt,0)+nvl(vat_amt,0))* bill_rate)),2) bill_amt
   From SHP_PREPAID_SLS_MST
  where nvl(Stand_by,0)= 0
    and bill_doc_type=4
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,
        cc_code,1 rcrd_no,Round(nvl(dr_amt,0),2)
   From Ias_Post_Dtl
  where doc_type=95
    and ac_dtl_typ=3';
  Begin
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_CstTrns
	  where doc_type=95 
	    and RowNum<=1;
	 Exception
     when No_Data_Found then
       Null;
	   when Others then
	    Raise_application_error(-20564,' Error In Inserting Cst. Trans From bills = '||chr(13)||SqlErrm) ;
	End;
End If;
If P_DocType = 96 Or P_DocType Is Null Then   --billing airway bill no
Execute Immediate
'Create Or Replace Force View Ias_V_Chk_CstTrns as
 Select 96 doc_type,c_code c_code,a_cy a_cy,doc_no doc_no,bill_doc_type jv_type ,
        doc_ser doc_ser,cc_code,1 rcrd_no,
        Round(abs(((nvl(bill_amt,0)-nvl(disc_amt,0)+nvl(othr_amt,0)+nvl(vat_amt,0))* bill_rate)),2) bill_amt
   From SHP_BILLING
  where nvl(Stand_by,0)= 0
    and bill_doc_type=4
 Minus
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,
        cc_code,1 rcrd_no,Round(nvl(dr_amt,0),2)
   From Ias_Post_Dtl
  where doc_type=96
    and ac_dtl_typ=3';
  Begin
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_CstTrns
	  where doc_type=96 
	    and RowNum<=1;
	 Exception
     when No_Data_Found then
       Null;
	   when Others then
	    Raise_application_error(-20564,' Error In Inserting Cst. Trans From bills = '||chr(13)||SqlErrm) ;
	End;
End If;
  
End Chk_CstTrns_Prc;
--=============================================
---## Get_Para
PROCEDURE Get_Para (P_Lang_No In NUMBER) Is
Begin
 v_lang_no:=P_Lang_No;
 
 Select Post_Cheque_Type
   Into v_Post_Cheque_Type
   From Ias_Para_GL;
Exception 
 when others then   
   v_Post_Cheque_Type:=0;
End Get_Para;
--=============================================
PROCEDURE Chk_C_code_Null ( P_lang_no  In NUMBER Default 1,
                            P_doc_type In NUMBER Default Null,
                            P_Doc_Post In NUMBER Default 0,
                            P_Ret_Val  In Out NUMBER,
                            F_Date     In Date Default ias_gen_pkg.get_frst_day,
                            T_Date     In Date Default ias_gen_pkg.get_final_day ) Is 
cnt     NUMBER;
v_aralt NUMBER; 

Begin
  

Begin
  Select nvl(AR_AC_LINK_TYPE,1) 
    Into v_aralt 
    From ias_para_ar;
 Exception when others then
   v_aralt :=1;      
End;
If P_doc_type Is Null Or P_doc_type =1 Then -- Journal
	Begin
		Select 1 Into cnt 
		 	From Master_journal_v M,Detail_journal_v D 
		Where M.J_ser = D.J_ser
		  And D.AC_Code_DTL Is Null
      AND D.AC_DTL_TYP=3
		  And Exists ( Select 1 From Customer where c_a_code=D.a_code and RowNum<=1)
		  And nvl(M.j_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.j_post,0))
		  And M.j_date between f_date and t_date and RowNum<=1;  
	Exception when others then
		P_Ret_Val:=0;
	End;
	If cnt > 0 Then
		If v_aralt = 1 Then
			Begin
			 	Update Detail_journal_v dj Set ac_code_dtl = (Select c_code From customer where c_a_code=dj.a_code),ac_dtl_typ=3
			  	Where Exists ( Select 1 From Customer where c_a_code=dj.a_code and RowNum<=1);
			    
			  Commit;
			Exception when others then
			 	P_Ret_Val:=1;
			End;
		Else
			P_Ret_Val:=1;          
	End If;
	End If;
    
  End If;                
  If P_doc_type Is Null Or P_doc_type In ( 2 ,3) Then -- Receipt
     Begin
         Select 1 
           Into cnt 
           From Vouchers M,Voucher_Detail D 
          Where M.V_ser = D.V_ser
            And D.AC_Code_DTL Is Null
            AND D.AC_DTL_TYP=3
            and M.voucher_type = Decode (P_doc_type,2,1,3,2,M.voucher_type)
            and Exists ( Select 1 From Customer where c_a_code=D.a_code and RowNum<=1)
            and nvl(M.voucher_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.voucher_post,0))
            and M.Voucher_date between f_date and t_date
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Voucher_Detail vd Set ac_code_dtl = (Select c_code From customer where c_a_code=vd.a_code),ac_dtl_typ=3
                  where Exists ( Select 1 From Customer where c_a_code=vd.a_code and RowNum<=1);
                   
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;
  End If;
  If P_doc_type Is Null Or P_doc_type = 8 Then -- Incoming

     Begin
         Select 1 
           Into cnt 
           From Gr_Note M 
          Where M.pi_type=5 
            and M.c_code Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
            and nvl(M.gr_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.gr_post,0))
            and M.GR_DATE between f_date and t_date
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Gr_Note gn Set ac_code_dtl = (Select c_code From customer where c_a_code=gn.a_code)
                  where Exists ( Select 1 From Customer where c_a_code=gn.a_code and RowNum<=1)
                    and ac_dtl_typ=3
                    and ac_code_dtl Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;
     
     
      Begin
         Select 1 
           Into cnt 
           From Gr_Note M 
          Where M.pi_type=5 
            and M.ac_code_dtl Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
            and nvl(M.gr_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.gr_post,0))
            and M.GR_DATE between f_date and t_date
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Gr_Note gn Set ac_code_dtl = (Select c_code From customer where c_a_code=gn.a_code) , ac_dtl_typ = 3
                  where Exists ( Select 1 From Customer where c_a_code=gn.a_code and RowNum<=1)
                    and c_code Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;



  End If;
  If P_doc_type Is Null Or P_doc_type = 9 Then -- Outgoing

     Begin
         Select 1 
           Into cnt 
           From Ias_Outgoing_Mst M 
          Where M.c_code Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
            and nvl(M.out_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.out_post,0))
            and M.OUT_DATE between f_date and t_date
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Ias_Outgoing_Mst Outg Set c_code = (Select c_code From customer where c_a_code=Outg.a_code)
                  where Exists ( Select 1 From Customer where c_a_code=Outg.a_code and RowNum<=1)
                    and c_code Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;

--## ac_code_dtl

     Begin
         Select 1 
           Into cnt 
           From Ias_Outgoing_Mst M 
          Where M.ac_code_dtl Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
            and nvl(M.out_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.out_post,0))
            and M.OUT_DATE between f_date and t_date
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Ias_Outgoing_Mst Outg Set ac_code_dtl = (Select c_code From customer where c_a_code=Outg.a_code) ,ac_dtl_typ=3
                  where Exists ( Select 1 From Customer where c_a_code=Outg.a_code and RowNum<=1)
                    and ac_code_dtl Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;


  End If;




If P_doc_type In (27,28,29) Then -- garnty 

     Begin
         Select 1 
           Into cnt 
           From IAS_GRNT_DTL M 
          Where M.ac_code_dtl Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.ac_code and RowNum<=1)
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update IAS_GRNT_DTL m Set ac_code_dtl = (Select c_code From customer where c_a_code=m.ac_code) , ac_dtl_typ =3 
                  where Exists ( Select 1 From Customer where c_a_code=m.ac_code and RowNum<=1)
                    and ac_code_dtl Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;

End If;


  If P_doc_type Is Null Then -- Posting

     Begin
         Select 1 
           Into cnt 
           From Ias_Post_Dtl M 
          Where doc_type <> 0 
            and M.c_code Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Ias_Post_Dtl Pd Set c_code = (Select c_code From customer where c_a_code=Pd.a_code)
                  where Exists ( Select 1 From Customer where c_a_code=Pd.a_code and RowNum<=1)
                    and c_code Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;

Begin
         Select 1 
           Into cnt 
           From Ias_Post_Dtl M 
          Where doc_type <> 0 
            and M.ac_code_dtl Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Ias_Post_Dtl Pd Set ac_code_dtl = (Select c_code From customer where c_a_code=Pd.a_code) , ac_dtl_typ =3 
                  where Exists ( Select 1 From Customer where c_a_code=Pd.a_code and RowNum<=1)
                    and ac_code_dtl Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;

  End If;

End Chk_C_code_Null;
--=======================================================================
PROCEDURE Chk_CstCode_Prc ( P_Doc_Type In NUMBER Default Null,
                            P_Doc_Post In NUMBER Default 0,
                            P_Err_No   In Out NUMBER) Is

cnt     NUMBER;
v_aralt NUMBER; 

Begin
  
P_Err_No:=0;
--##--------------------------------------------------------------------------------------------------##---
Begin
  Select nvl(AR_AC_LINK_TYPE,1) 
    Into v_aralt 
    From ias_para_ar;
 Exception when others then
   v_aralt :=1;      
End;
--##--------------------------------------------------------------------------------------------------##---
If P_doc_type Is Null Or P_doc_type =1 Then -- Journal

    If v_aralt = 2 Then -- Group Account 
         Begin
             Select 1 Into cnt From (                           
              Select D.a_code,D.ac_code_dtl c_code,D.a_cy From Master_Journal_v M,Detail_Journal_v D  
               where M.J_ser = D.J_ser 
                 and D.ac_dtl_typ=3                 
                 and nvl(M.j_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.j_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 P_Err_No:=1;
              End If;
  
         Exception 
          when others then
            Null;      
         End;
    --========
    Else -- Multi Account
    --========

         Begin
             Select 1 Into cnt From (                           
              Select D.a_code,D.ac_code_dtl c_code,D.a_cy From Master_Journal_v M,Detail_Journal_v D  
               where M.J_ser = D.J_ser 
                 and d.ac_dtl_typ=3
                 and nvl(M.j_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.j_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 
                 Begin
                     Update Detail_journal_v dj Set ac_code_dtl = (Select c_code From customer where c_a_code=dj.a_code)
                      Where a_code||ac_code_dtl||a_cy In
                                     (Select D.a_code||D.ac_code_dtl||D.a_cy From Master_Journal_v M,Detail_Journal_v D  
                                       where M.J_ser = D.J_ser 
                                         and D.ac_dtl_typ=3
                                         and nvl(M.j_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.j_post,0))
                                       Minus
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                      
                      Commit;
                      
                 Exception 
                   when others then
                     P_Err_No:=1;
                 End;
                 P_Err_No:=1;
              End If;
  
         Exception 
          when others then
            Null;      
         End;
 
    End if;
End If;
--##--------------------------------------------------------------------------------------------------##---
If P_doc_type Is Null Or P_doc_type In ( 2 ,3 )Then -- vouchers

    If v_aralt = 2 Then -- Group Account 
         Begin
             Select 1 Into cnt From (                           
              Select D.a_code,D.ac_code_dtl,D.a_cy From Vouchers M,Voucher_Detail D  
               where M.V_ser = D.V_ser 
                 and D.ac_dtl_typ=3
                 and nvl(M.Voucher_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.Voucher_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 P_Err_No:=2;
              End If;
  
         Exception 
          when others then
            Null;      
         End;
    --========
    Else -- Multi Account
    --========

         Begin
             Select 1 Into cnt From (                           
              Select D.a_code,D.ac_code_dtl,D.a_cy From Vouchers M,Voucher_Detail D   
               where M.V_ser = D.V_ser 
                 and D.ac_dtl_typ=3 
                 and nvl(M.voucher_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.voucher_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 
                 Begin
                     Update Voucher_Detail dj Set ac_code_dtl = (Select c_code From customer where c_a_code=dj.a_code)
                      Where a_code||ac_code_dtl||a_cy In
                                     (Select D.a_code||D.ac_code_dtl||D.a_cy From Vouchers M,Voucher_Detail D  
                                       where M.V_ser = D.V_ser 
                                         and D.ac_dtl_typ=3
                                         and nvl(M.voucher_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.voucher_post,0))
                                       Minus
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                      
                      Commit;
                      
                 Exception 
                   when others then
                     P_Err_No:=2;
                 End;
                 
                 P_Err_No:=2;
                 
              End If;
  
         Exception 
          when others then
            Null;      
         End;
 
    End if;
End If;

--##--------------------------------------------------------------------------------------------------##---
If P_doc_type Is Null Or P_doc_type = 4 Then -- Sales Inv.

  
  --============================================
      Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.cash_no From Ias_Bill_Mst M,Ias_Bill_Mst D 
               where M.bill_doc_type = 1 
                 and M.bill_ser = D.bill_ser  
                 and nvl(M.bill_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.bill_post,0))
               Minus
              Select a_code,cash_no From Cash_In_Hand )
              Where RowNum <=1;

              If cnt > 0 Then
                 
                 Begin
                     Update Ias_Bill_Mst bm Set a_code = (Select a_code From Cash_In_Hand where cash_no=bm.cash_no)
                      Where bill_doc_type = 1
                        and nvl(bill_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(bill_post,0)) 
                        and Not Exists (Select 1 From Cash_In_Hand where a_code = bm.a_code and rownum<=1);

                      Commit;
                      
                 Exception 
                   when others then
                     P_Err_No:=4;
                 End;
                 
                 P_Err_No:=4;
                 
              End If;
  
      Exception 
        when others then
            Null;      
      End;
  --============================================
End If;

--##--------------------------------------------------------------------------------------------------##---
If P_doc_type Is Null Or P_doc_type = 5 Then -- Sales Return

  
  --============================================
      Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.cash_no From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Mst D 
               where M.rt_bill_doc_type=1 
                 and M.rt_bill_ser = D.rt_bill_ser  
                 and nvl(M.rt_bill_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.rt_bill_post,0))
               Minus
              Select a_code,cash_no From Cash_In_Hand )
              Where RowNum <=1;

              If cnt > 0 Then
                 
                 Begin
                     Update Ias_Rt_Bill_Mst rtbm Set a_code = (Select a_code From Cash_In_Hand where cash_no=rtbm.cash_no)
                      Where rt_bill_doc_type = 1
                        and nvl(rt_bill_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(rt_bill_post,0)) 
                        and Not Exists (Select 1 From cash_in_hand where a_code = rtbm.a_code and rownum<=1);

                      Commit;
                      
                 Exception 
                   when others then
                     P_Err_No:=5;
                 End;
                 
                 P_Err_No:=5;
                 
              End If;
  
      Exception 
        when others then
            Null;      
      End;
  --============================================
  
    If v_aralt = 2 Then -- Group Account 
         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.c_code,M.rt_bill_currency From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Mst D  
               where M.rt_bill_doc_type=4 
                 and M.rt_bill_ser = D.rt_bill_ser 
                 and M.c_code Is Not Null
                 and nvl(M.rt_bill_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.rt_bill_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 P_Err_No:=5;
              End If;
  
         Exception 
          when others then
            Null;      
         End;
    --========
    Else -- Multi Account
    --========

         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.c_code,M.rt_bill_currency From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Mst D 
               where M.rt_bill_doc_type=4 
                 and M.rt_bill_ser = D.rt_bill_ser  
                 and M.c_code Is Not Null
                 and nvl(M.rt_bill_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.rt_bill_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 
                 Begin
                     Update Ias_Rt_Bill_Mst rtbm Set c_code = (Select c_code From customer where c_a_code=rtbm.a_code)
                      Where rt_bill_doc_type=4  
                        and a_code||c_code||rt_bill_currency In
                                     (Select M.a_code||M.c_code||M.rt_bill_currency From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Mst D 
                                       where M.rt_bill_doc_type=4 
                                         and M.rt_bill_ser = D.rt_bill_ser 
                                         and M.c_code Is Not Null
                                         and nvl(M.rt_bill_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.rt_bill_post,0))
                                       Minus
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                      
                      Commit;
                      
                 Exception 
                   when others then
                     P_Err_No:=5;
                 End;
                 
                 P_Err_No:=5;
                 
              End If;
  
         Exception 
          when others then
            Null;      
         End;
 
    End if;
End If;

--##--------------------------------------------------------------------------------------------------##---
If P_doc_type Is Null Or P_doc_type = 8 Then -- Incoming

    If v_aralt = 2 Then -- Group Account 
         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.ac_code_dtl,M.a_cy From Gr_Note M,Gr_Detail D  
               where M.pi_type=5 
                 and M.g_ser = D.g_ser 
                 and M.ac_dtl_typ=3
                 and nvl(M.gr_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.gr_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 P_Err_No:=8;
              End If;
  
         Exception 
          when others then
            Null;      
         End;
    --========
    Else -- Multi Account
    --========

         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.ac_code_dtl,M.a_cy From Gr_Note M,Gr_Detail D  
               where M.pi_type=5 
                 and M.g_ser = D.g_ser  
                 and M.ac_dtl_typ=3
                 and nvl(M.gr_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.gr_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 
                 Begin
                     Update Gr_Note gn Set ac_code_dtl = (Select c_code From customer where c_a_code=gn.a_code)
                      Where pi_type=5 
                        and a_code||ac_code_dtl||a_cy In
                                     (Select M.a_code||M.c_code||M.a_cy From Gr_Note M,Gr_Detail D 
                                       where M.pi_type=5 
                                         and M.g_ser = D.g_ser 
                                         and M.ac_dtl_typ=3
                                         and nvl(M.gr_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.gr_post,0))
                                       Minus
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                      
                      Commit;
                      
                 Exception 
                   when others then
                     P_Err_No:=8;
                 End;
                 
                 P_Err_No:=8;
                 
              End If;
  
         Exception 
          when others then
            Null;      
         End;
 
    End If;
End If;

--##--------------------------------------------------------------------------------------------------##---
If P_doc_type Is Null Or P_doc_type = 9 Then -- Outgoing

    If v_aralt = 2 Then -- Group Account 
         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.ac_code_dtl,M.a_cy From Ias_Outgoing_Mst M,Ias_Outgoing_Dtl D  
               where M.out_ser = D.out_ser 
                 and M.ac_dtl_typ=3
                 and nvl(M.out_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.out_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 P_Err_No:=9;
              End If;
  
         Exception 
          when others then
            Null;      
         End;
    --========
    Else -- Multi Account
    --========

         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.ac_code_dtl,M.a_cy From Ias_Outgoing_Mst M,Ias_Outgoing_Dtl D  
               where M.out_ser = D.out_ser 
                 and M.ac_dtl_typ=3
                 and nvl(M.out_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.out_post,0))
               Minus
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;

              If cnt > 0 Then
                 
                 Begin
                     Update Gr_Note gn Set ac_code_dtl = (Select c_code From customer where c_a_code=gn.a_code)
                      Where a_code||ac_code_dtl||a_cy In
                                     (Select M.a_code||M.c_code||M.a_cy From Ias_Outgoing_Mst M,Ias_Outgoing_Dtl D  
                                       where M.out_ser = D.out_ser  
                                         and M.ac_dtl_typ=3
                                         and nvl(M.out_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.out_post,0))
                                       Minus
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                      
                      Commit;
                      
                 Exception 
                   when others then
                     P_Err_No:=9;
                 End;
                 
                 P_Err_No:=9;
                 
              End If;
  
         Exception 
          when others then
            Null;      
         End;
 
    End if;
End If;

--##--------------------------------------------------------------------------------------------------##---
--##--------------------------------------------------------------------------------------------------##---
End Chk_CstCode_Prc;
--=============================================

END Ias_Mnd_CstTrns_Pkg;
/
CREATE Package BODY Ias_Mnd_CstVnd_Pkg IS

--=============================================
PROCEDURE Chk_Cust_Cnfrm (  P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) Is
cnt     NUMBER;
Begin
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Not Null
            And a_code Not In (Select C_a_code  From Customer ) 
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=0;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' Null
                where a_code Not In (Select C_a_code  From Customer ) 
                And '||P_Clmn_Nam   ||' Is Not Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
End Chk_Cust_Cnfrm;
--=============================================
PROCEDURE Chk_Vndr_Cnfrm (  P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) Is
cnt     NUMBER;
Begin
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Not Null
            And A_Code Not In ( Select v_A_Code From V_Details) 
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=0;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' =Null
            Where   '||P_Clmn_Nam   ||' Is Not Null
            And A_Code Not In ( Select v_A_Code From V_Details)  
            And '||P_Clmn_Nam   ||' Is Not Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
     
End Chk_Vndr_Cnfrm;
--=============================================
PROCEDURE Fill_Cust_No  (   P_doc_type  In  NUMBER      Default Null,
                            P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) Is
cnt     NUMBER;
Begin
    If Nvl(V_Ar_Type,0) = 1 Then
        Begin
            Execute Immediate '
            Select 1 
                From    '||P_Tbl_Nam    ||'  Dtl
                Where   '||P_Clmn_Nam   ||' Is Null
                And Exists ( Select 1 From Customer where C_a_code=Dtl.a_code  )
                And RowNum<=1 ' Into Cnt ;  
        Exception When others then
            Cnt:=0;
        End;
        If Cnt > 0 Then
            Begin
                Execute Immediate '
                Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' = (Select C_Code From Customer Cst where Cst.c_a_code=Dtl.a_code And RowNum<=1)
                    where Exists ( Select 1 From Customer where c_a_code=Dtl.a_code and RowNum<=1)
                    And a_code In (Select Cst.c_a_code From Customer Cst) 
                    And '||P_Clmn_Nam   ||' Is Null ';
                Commit;
            Exception When others then
                P_Ret_Val:=1;
            End;
        End If;
    End If;
End Fill_Cust_No ;
--=============================================
PROCEDURE Fill_Vndr_No  (   P_doc_type  In  NUMBER      Default Null,
                            P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) Is
cnt     NUMBER;
Begin
    If Nvl(V_Ap_Type,0) = 1 Then
        Begin
            Execute Immediate '
            Select 1 
                From    '||P_Tbl_Nam    ||'  Dtl
                Where   '||P_Clmn_Nam   ||' Is Null
                And Exists ( Select 1 From V_Details where V_a_code=Dtl.a_code  )
                And RowNum<=1 ' Into Cnt ;  
        Exception When others then
            Cnt:=0;
        End;
        If Cnt > 0 Then
            Begin
                Execute Immediate '
                Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' = (Select V_Code From V_Details Vnd where Vnd.v_a_code=Dtl.a_code And RowNum<=1)
                    where Exists ( Select 1 From V_Details where v_a_code=Dtl.a_code and RowNum<=1)
                    And a_code In (Select Vnd.V_a_code From V_Details Vnd) 
                    And '||P_Clmn_Nam   ||' Is Null ';
                Commit;
            Exception When others then
                P_Ret_Val:=1;
            End;
        End If;
    End If;
End Fill_Vndr_No ;
--=======================================================================
PROCEDURE Chk_Update_Cust IS
	Cnt Number;
Begin
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Cust_Cnfrm('IAS_POST_DTL','C_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Cust_No(Null,'IAS_POST_DTL','C_CODE',Cnt);
    Exception When Others Then 
        Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Cust_Cnfrm('DETAIL_JOURNAL_V','C_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Cust_No(1,'DETAIL_JOURNAL_V','C_CODE',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Cust_Cnfrm('VOUCHER_DETAIL','C_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Cust_No(Null,'VOUCHER_DETAIL','C_CODE',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Cust_Cnfrm('GR_NOTE','C_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Cust_No(Null,'GR_NOTE','C_CODE',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Cust_Cnfrm('IAS_OUTGOING_MST','C_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Cust_No(9,'IAS_OUTGOING_MST','C_CODE',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Cust_Cnfrm('OPEN_BAL','C_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Cust_No(Null,'OPEN_BAL','C_CODE',Cnt);
    Exception When Others Then 
        Null;
    End;
END Chk_Update_Cust ;
--=======================================================================
PROCEDURE Chk_Update_Vndr IS
	Cnt Number;
Begin
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Vndr_Cnfrm('IAS_POST_DTL','V_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Vndr_No(Null,'IAS_POST_DTL','V_CODE',Cnt);
    Exception When Others Then 
        Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Vndr_Cnfrm('DETAIL_JOURNAL_V','V_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Vndr_No(1,'DETAIL_JOURNAL_V','V_CODE',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Vndr_Cnfrm('VOUCHER_DETAIL','V_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Vndr_No(Null,'VOUCHER_DETAIL','V_CODE',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Vndr_Cnfrm('GR_NOTE','V_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Vndr_No(Null,'GR_NOTE','V_CODE',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Vndr_Cnfrm('IAS_OUTGOING_MST','V_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Vndr_No(9,'IAS_OUTGOING_MST','V_CODE',Cnt);
    Exception When Others Then 
    	Null;
    End;
    Begin
        Ias_Mnd_CstVnd_Pkg.Chk_Cust_Cnfrm('OPEN_BAL','V_CODE',Cnt);
        Ias_Mnd_CstVnd_Pkg.Fill_Cust_No(Null,'OPEN_BAL','V_CODE',Cnt);
    Exception When Others Then 
        Null;
    End;
END Chk_Update_Vndr ;
--=======================================================================
PROCEDURE Chk_Fill_Cst_Vnd( P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) IS
Cnt Number;
Begin
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Not Null
            And a_code Not In (Select C_a_code From Customer
                                        Union All
                               Select V_a_code From V_Details,Customer Where V_Code= C_VENDOR) 
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=1;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' =  Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
    Begin
        Execute Immediate '
        Update '||P_Tbl_Nam    ||' Set '||P_Clmn_Nam   ||'= C_Code Where C_Code Is Not Null 
    	    And '||P_Clmn_Nam   ||' Is Null
            And A_Code In(Select C_A_Code From Customer) ';
    Exception When Others Then
    	Null;
    End;
    Begin
    	Execute Immediate '
        Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||'= 
                        (Select Customer.C_Code From Customer  Where Customer.C_VENDOR = Dtl.V_code And RowNum<=1)
    			Where V_CODE Is Not Null 
    			  And C_Code Is Null 
    			  And '||P_Clmn_Nam   ||' Is Null 
    			  And A_Code In(Select V_A_Code From V_Details) ';
    Exception When Others Then
    	Null;
    End;
End Chk_Fill_Cst_Vnd;
--=======================================================================
PROCEDURE Ac_Fill_Cst_Vnd( P_Tbl_Nam   In  VarChar2    Default Null,
                            P_Clmn_Nam  In  VarChar2    Default Null,
                            P_Ret_Val   In  Out NUMBER              ) IS
Cnt Number;
Begin
    Begin
        Execute Immediate '
        Select 1 
            From    '||P_Tbl_Nam    ||'  Dtl
            Where   '||P_Clmn_Nam   ||' Is Not Null
            And a_code Not In (Select C_a_code From Customer
                                        Union All
                               Select V_a_code From V_Details,Customer Where V_Code= C_VENDOR) 
            And RowNum<=1 ' Into Cnt ;  
    Exception When others then
        Cnt:=1;
    End;
    If Cnt > 0 Then
        Begin
            Execute Immediate '
            Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||' =  Null ';
            Commit;
        Exception When others then
            P_Ret_Val:=1;
        End;
    End If;
    Begin
        Execute Immediate '
        Update '||P_Tbl_Nam    ||' Set '||P_Clmn_Nam   ||'= C_Code Where C_Code Is Not Null 
    	    And '||P_Clmn_Nam   ||' Is Null
            And A_Code In(Select C_A_Code From Customer) ';
    Exception When Others Then
    	Null;
    End;
    Begin
    	Execute Immediate '
        Update '||P_Tbl_Nam    ||' Dtl Set '||P_Clmn_Nam   ||'= 
                        (Select Customer.C_Code From Customer  Where Customer.C_VENDOR = Dtl.V_code And RowNum<=1)
    			Where V_CODE Is Not Null 
    			  And C_Code Is Null 
    			  And '||P_Clmn_Nam   ||' Is Null 
    			  And A_Code In(Select V_A_Code From V_Details) ';
    Exception When Others Then
    	Null;
    End;
End Ac_Fill_Cst_Vnd;
--=======================================================================
--=======================================================================
END Ias_Mnd_CstVnd_Pkg;
/
CREATE Package BODY Ias_Mnd_VndTrns_Pkg IS
Cnt  NUMBER;
Cnt1 NUMBER;
c    NUMBER;
d    NUMBER;

--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
PROCEDURE Chk_VndTrns_Prc (P_DocType In NUMBER Default Null) Is
 Cnt          NUMBER;
 Cnt1         NUMBER;
 V_Apalt      NUMBER;
Begin

Begin
  Select nvl(Ap_Ac_Link_Type ,1)
    Into V_Apalt
    From Ias_Para_Ap;
 Exception when others then
    V_Apalt:=1;
End;

--## open_bal  FFF



If P_DocType = 0 Or P_DocType Is Null Then

       Select Count(1) Into Cnt From open_bal
        Where ac_code_dtl is not null
          And ac_dtl_typ=3;
        
	     Select Count(1) Into Cnt1 From ias_post_Dtl 
	      Where doc_type=0
	        and ac_code_dtl is not null
            And ac_dtl_typ=4;
	      
		    --If Cnt <> Cnt1 Then
		      -- Ias_Mnd_VndTrns_Pkg.VT_Open_Bal(V_Apalt);
		    --End if;
  

End If;

--## Journal

If P_DocType = 1 Or P_DocType Is Null Then

Execute Immediate 
'Create Or Replace Force View Ias_V_Chk_VndTrns as
 Select 1 doc_type,D.AC_CODE_DTL v_code,a_cy,D.j_doc_no ,D.jv_type jv_type ,
        M.j_ser doc_ser,D.cc_code
   From Master_journal_v M,Detail_journal_v D ,V_details C
  where M.j_ser  = D.j_ser
    and D.a_code = C.v_a_code  
    and D.AC_CODE_DTL   = C.v_code  
    and D.AC_CODE_DTL Is Not Null
    AND D.AC_DTL_TYP=4
    and nvl(stand_by,0) = 0
 Minus
 Select doc_type,AC_CODE_DTL v_code,a_cy,doc_no ,jv_type jv_type, 
        doc_ser,cc_code 
   From Ias_Post_Dtl
  where doc_type=1
    and AC_CODE_DTL Is Not Null
    AND AC_DTL_TYP=4 ';
 
 Begin
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_VndTrns
	  where doc_type=1 
	    and RowNum<=1;
	  
	  --If cnt > 0 Then
	   --  Ias_Mnd_VndTrns_Pkg.VT_Journal (1) ;
	  --End If; 

	 Exception
	   when Others then
	    Null;
	End;


End If;

--## vouchers (Receipts)

If P_DocType = 2 Then

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_VndTrns as
 Select 2 doc_type,D.AC_code_DTL v_code,D.a_cy,D.voucher_no doc_no,
        D.voucher_pay_type jv_type,M.v_ser doc_ser,nvl(sum(abs(ac_amt)),0) amt,
        D.cc_code
   From vouchers M,voucher_detail D,v_details C
  where D.voucher_type=1
    and M.voucher_type=D.voucher_type
    and M.voucher_pay_type=D.voucher_pay_type
    and M.voucher_no=D.voucher_no
    and M.Cash_no=D.Cash_no
    and D.a_code=C.v_a_code 
    and D.AC_code_DTL =C.v_code 
    and D.AC_code_DTL Is Not Null
    and D.AC_DTL_TYP=4
    and nvl(M.Stand_by,0)= 0
    and nvl(M.Move_Cheq_Py,0) = 0
    --and ( ((D.voucher_pay_type=2 and D.cheque_valued=1 and M.cheq_type In (3,4)) Or M.cheq_type in (0,1,2) ) Or D.voucher_pay_type=1)
    group by 2 ,D.AC_code_DTL,D.a_cy,D.voucher_no,D.voucher_pay_type,M.v_ser,D.cc_code
 Minus
 Select doc_type,AC_code_DTL v_code,a_cy,doc_no,jv_type,doc_ser ,nvl(sum(cr_amt),0),cc_code
   From Ias_Post_Dtl
  where doc_type=2 
    and AC_code_DTL Is Not Null
    AND AC_DTL_TYP=4
  group by doc_type,AC_code_DTL,a_cy,doc_no,jv_type,doc_ser,cc_code';
  
  Begin
		 Select 1 
		   Into cnt 
		   From Ias_V_Chk_VndTrns
		  where doc_type=2 
		    and RowNum<=1;
		  
		 -- If cnt > 0 Then
		   --  Ias_Mnd_VndTrns_Pkg.VT_Receipts (1) ;
		 -- End If; 

	 Exception
	   when Others then
	    Null;
	End;



--## Endrsmnt

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_VndTrns as
 Select 2 doc_type,D.v_code_end v_code,D.a_cy,D.voucher_no doc_no,
        D.voucher_pay_type jv_type,M.v_ser doc_ser,nvl(sum(abs(ac_amt)),0) amt,
        D.cc_code
   From vouchers M,voucher_detail D,v_details C
  where D.voucher_type=1
    and M.voucher_type=D.voucher_type
    and M.v_ser=D.v_ser
    and M.voucher_pay_type=2 
    and D.a_code_end=C.v_a_code 
    and D.v_code_end =C.v_code 
    and D.v_code_end Is Not Null
    and M.cheq_type = 3
    and nvl(M.Stand_by,0)= 0
    and nvl(d.Endrsmnt,0)= 1
    and D.cheque_valued=1
    group by 2 ,D.v_code_end,D.a_cy,D.voucher_no,D.voucher_pay_type,M.v_ser,D.cc_code
 Minus
 Select doc_type,v_code,a_cy,doc_no,jv_type,doc_ser ,nvl(sum(dr_amt),0),cc_code
   From Ias_Post_Dtl
  where doc_type=2  
    and jv_type=2
    and v_code Is Not Null
    and nvl(dr_amt,0)>0
    and nvl(Cheque_Valued,0) <> 2
  group by doc_type,v_code,a_cy,doc_no,jv_type,doc_ser,cc_code';
 
  Begin 
	 Select 1 
	   Into cnt 
	   From Ias_V_Chk_VndTrns
	  where doc_type=2 
	    and RowNum<=1;
	  
		  --If cnt > 0 Then
		   --  Ias_Mnd_VndTrns_Pkg.VT_Rec_Endrsmnt (1) ;
		  --End If; 
		  
	 Exception
     when No_Data_Found then
       Null;
     when Others then
	    Raise_application_error(-20562,' Error In Inserting Vndor_Trns From Rec. Vouchers (Endrsmnt) = '||chr(13)||SqlErrm) ;
	End;



End If;

--## vouchers (Payments)

If P_DocType = 3 Or P_DocType Is Null Then

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_VndTrns as
 Select 3 doc_type,D.v_code,D.a_cy, D.voucher_no doc_no,
        D.voucher_pay_type jv_type ,M.v_ser doc_ser,nvl(sum(abs(ac_amt)),0) amt,
        D.cc_code
   From vouchers M,voucher_detail D,v_details C
  where D.voucher_type=2
    and M.voucher_type=D.voucher_type
    and M.voucher_pay_type=D.voucher_pay_type
    and M.voucher_no=D.voucher_no
    and M.Cash_no=D.Cash_no
    and D.a_code=C.v_a_code 
    and D.v_code=C.v_code 
    and D.v_code Is Not Null
    and nvl(M.Stand_by,0)= 0
    and nvl(M.Move_Cheq_Py,0)= 0
   group by 3 ,D.v_code,D.a_cy,D.voucher_no,D.voucher_pay_type ,M.v_ser,D.cc_code
 Minus
 Select doc_type,v_code,a_cy,doc_no,jv_type ,doc_ser,nvl(sum(dr_amt),0),cc_code
   From Ias_Post_Dtl
  where doc_type=3  
    and v_code Is Not Null
  group by doc_type,v_code,a_cy,doc_no,jv_type,doc_ser,cc_code';

  Begin
		 Select 1 
		   Into cnt 
		   From Ias_V_Chk_VndTrns
		  where doc_type=3 
		    and RowNum<=1;
		  
		  --If cnt > 0 Then
		  --   Ias_Mnd_VndTrns_Pkg.VT_Payments (1) ;
		  --End If; 
		  
	 Exception
	   when Others then
	    Null;
	End;

End If;

--## Purchase

If P_DocType = 6 Or P_DocType Is Null Then

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_VndTrns as
 Select 6 doc_type,v_code,bill_currency a_cy,bill_no doc_no,bill_doc_type jv_type ,bill_ser doc_ser, 
        cc_code,Round(abs(((nvl(Ias_Pi_Bill_Mst.bill_amt,0)+ nvl(Disc_Amt_Not_Effect,0)-nvl(Ias_Pi_Bill_Mst.disc_amt,0)+nvl(Ias_Pi_Bill_Mst.vat_amt,0))* bill_rate)),2) bill_amt
   From Ias_Pi_Bill_Mst
  where pur_type=1  
    and bill_doc_type=4
    and v_code Is Not Null
 Minus
 Select doc_type,v_code,a_cy,doc_no,jv_type,Doc_Ser,
        cc_code,Round(nvl(cr_amt,0),2) 
   From Ias_Post_Dtl
  where doc_type=6
    and v_code Is Not Null';
  
  Begin
		 Select 1 
		   Into cnt 
		   From Ias_V_Chk_VndTrns
		  where doc_type=6 
		    and RowNum<=1;
		  
		  --If cnt > 0 Then
		    -- Ias_Mnd_VndTrns_Pkg.VT_bills (1) ;
		  --End If; 
	 Exception
	   when Others then
	    Null;
	End;
	  
		  
End If;

--## Purchase Return

If P_DocType = 7 Or P_DocType Is Null Then

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_VndTrns as
 Select 7 doc_type,v_code,rt_bill_currency a_cy,rt_bill_no doc_no,
        rt_bill_doc_type jv_type ,rt_bill_ser doc_ser,cc_code,
        Round(abs(((nvl(Ias_Pr_Bill_Mst.bill_amt,0)+ nvl(Disc_Amt_Not_Effect,0)-nvl(Ias_Pr_Bill_Mst.disc_amt,0))* rt_bill_rate)),2) bill_amt
   From Ias_Pr_Bill_Mst
  Where rt_bill_doc_type=4
    and v_code Is Not Null
 Minus
 Select doc_type,v_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,Round(nvl(dr_amt,0),2)
   From Ias_Post_Dtl
  Where doc_type=7
   and v_code Is Not Null';
 
  Begin  
		 Select 1 
		   Into cnt 
		   From Ias_V_Chk_VndTrns
		  where doc_type=7 
		    and RowNum<=1;
		  --If cnt > 0 Then
		   --  Ias_Mnd_VndTrns_Pkg.VT_Rt_bills (1) ;
		  --End If; 
	 Exception
	   when Others then
	    Null;
	End;
		  
End If;

   
--## Incoming
If P_DocType = 8 Or P_DocType Is Null Then

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_VndTrns as
 Select 8 doc_type,M.v_code,M.a_cy,M.gr_no doc_no,M.Incom_Type jv_type ,
        M.g_ser doc_ser,M.cc_code,Decode(M.rt_out,1,nvl(Sum(nvl(i_qty,0)*nvl(i_price,0)*M.ac_rate),0),nvl(Sum(nvl(i_qty,0)*nvl(c_price,0)*M.ac_rate),0)) gr_amt
   From gr_note M,gr_detail D,v_details V
  where M.pi_type=5
    and M.a_code=V.v_a_code
    and M.v_code=V.v_code
    and M.v_code Is Not Null
    and M.gr_no=D.gr_no
    and M.pi_type=D.pi_type
    and nvl(M.g_ser,0)=nvl(D.g_ser,0)
    group by M.v_code,M.a_cy,M.gr_no,M.Incom_Type,M.g_ser,M.cc_code,M.rt_out
 Minus
 Select doc_type,v_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,nvl(cr_amt,0)
   From Ias_Post_Dtl
   where doc_type=8
    and v_code Is Not Null';
   
   Begin
		Select 1 
		  Into cnt 
		  From Ias_V_Chk_VndTrns
		 where doc_type=8 
		   and RowNum<=1;

		  --If cnt > 0 Then
		    -- Ias_Mnd_VndTrns_Pkg.VT_Incoming (1) ;
		  --End If; 
	 Exception
	   when Others then
	    Null;
	End;
		  
End If;  
--==============================================================================
--## Outgoing
If P_DocType = 9 Or P_DocType Is Null Then

Execute Immediate
'Create Or Replace Force View Ias_V_Chk_VndTrns as
 Select 9 doc_type,M.v_code,M.a_cy,Out_no doc_no,
        out_type jv_type ,Out_ser doc_ser,M.cc_code,
        Decode( M.pur_type,1,((nvl(M.Out_amt,0)* nvl(M.Ac_rate,1)) + (nvl(M.exp_amt,0)*nvl(M.exp_rate,1))),( nvl(M.Out_amt,0)* nvl(M.ac_rate,1) ) ) doc_amt
   From Ias_Outgoing_Mst M,v_details V
  where M.a_code=V.v_a_code
    and M.v_code=V.v_code
    and M.v_code Is Not Null
 Minus
 Select doc_type,v_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,nvl(dr_amt,0) 
   From Ias_Post_Dtl
  where doc_type=9
   and v_code Is Not Null';
   
   Begin
		 Select 1 
		   Into cnt 
		   From Ias_V_Chk_VndTrns
		  where doc_type=9 
		    and RowNum<=1;
		 -- If cnt > 0 Then
		   --  Ias_Mnd_VndTrns_Pkg.VT_OutGoing (1) ;
		  --End If; 
	 Exception
	   when Others then
	    Null;
	End;
End If;
   
End Chk_VndTrns_Prc;
--================================================================
---## Get_Para
PROCEDURE Get_Para (P_Lang_No In NUMBER) Is
Begin
 v_lang_no:=P_Lang_No;
Exception 
 when others then   
  Null;
End;
--=================================================================
PROCEDURE Chk_V_code_Null ( P_lang_no  In NUMBER Default 1,
                            P_doc_type In NUMBER Default Null,
                            P_Doc_Post In NUMBER Default 0,
                            P_Ret_Val  In Out NUMBER ) Is 
cnt     NUMBER;
v_aralt NUMBER; 

Begin
  

Begin
  Select nvl(Ap_AC_LINK_TYPE,1) 
    Into v_aralt 
    From ias_para_ap;
 Exception when others then
   v_aralt :=1;      
End;



  If P_doc_type Is Null Or P_doc_type =1 Then -- Journal
     Begin
         Select 1 
           Into cnt 
           From Master_journal_v M,Detail_journal_v D 
          Where M.J_ser = D.J_ser
            and ac_code_dtl is not null
            And ac_dtl_typ=4
            and Exists ( Select 1 From v_details where v_a_code=D.a_code and RowNum<=1)
            and nvl(M.j_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.j_post,0))
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Detail_journal_v dj Set ac_code_dtl = (Select v_code From v_details where v_a_code=dj.a_code)
                  where Exists ( Select 1 From v_details where v_a_code=dj.a_code and RowNum<=1)
                    And ac_code_dtl is not null
                    And ac_dtl_typ=4;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;
     
  End If;                
  If P_doc_type Is Null Or P_doc_type In ( 2 ,3) Then -- Receipt

     Begin
         Select 1 
           Into cnt 
           From Vouchers M,Voucher_Detail D 
          Where M.V_ser = D.V_ser
            and M.voucher_type = Decode (P_doc_type,2,1,3,2,M.voucher_type)
            and D.ac_code_dtl Is Null
            And D.ac_dtl_typ=4
            and Exists ( Select 1 From v_details where v_a_code=D.a_code and RowNum<=1)
            and nvl(M.voucher_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.voucher_post,0))
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Voucher_Detail vd Set ac_code_dtl = (Select v_code From v_details where v_a_code=vd.a_code)
                  where Exists ( Select 1 From v_details where v_a_code=vd.a_code and RowNum<=1)
                    and vd.ac_code_dtl Is Null
                    And vd.ac_dtl_typ=4;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;
  End If;
  If P_doc_type Is Null Or P_doc_type = 8 Then -- Incoming

     Begin
         Select 1 
           Into cnt 
           From Gr_Note M 
          Where M.pi_type=5 
            and M.v_code Is Null
            and Exists ( Select 1 From v_details where v_a_code=M.a_code and RowNum<=1)
            and nvl(M.gr_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.gr_post,0))
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Gr_Note gn Set v_code = (Select v_code From v_details where v_a_code=gn.a_code)
                  where Exists ( Select 1 From v_details where v_a_code=gn.a_code and RowNum<=1)
                    and v_code Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;
  End If;
  If P_doc_type Is Null Or P_doc_type = 9 Then -- Outgoing

     Begin
         Select 1 
           Into cnt 
           From Ias_Outgoing_Mst M 
          Where M.v_code Is Null
            and Exists ( Select 1 From v_details where v_a_code=M.a_code and RowNum<=1)
            and nvl(M.out_post,0) = Decode(P_Doc_Post,0,0,1,1,nvl(M.out_post,0))
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Ias_Outgoing_Mst Outg Set v_code = (Select v_code From v_details where v_a_code=Outg.a_code)
                  where Exists ( Select 1 From v_details where v_a_code=Outg.a_code and RowNum<=1)
                    and v_code Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;

  End If;

  If P_doc_type Is Null Then -- Posting

     Begin
         Select 1 
           Into cnt 
           From Ias_Post_Dtl M 
          Where doc_type <> 0 
            and M.v_code Is Null
            and Exists ( Select 1 From v_details where v_a_code=M.a_code and RowNum<=1)
            and RowNum<=1;  
     
         If cnt > 0 Then
            If v_aralt = 1 Then
               Begin
                 Update Ias_Post_Dtl Pd Set v_code = (Select v_code From v_details where v_a_code=Pd.a_code)
                  where Exists ( Select 1 From v_details where v_a_code=Pd.a_code and RowNum<=1)
                    and v_code Is Null;
                  Commit;
               Exception 
                 when others then
                 P_Ret_Val:=1;
               End;
            Else
              P_Ret_Val:=1;          
            End If;
            
         End If;
     
     Exception 
      when others then
       P_Ret_Val:=0;
     End;

  End If;

End Chk_v_code_Null;
--==========================================================

END Ias_Mnd_VndTrns_Pkg;
/
CREATE PACKAGE BODY IAS_MOBILE_PI_PKG IS

FUNCTION  GET_BRN_XML( P_USR_NO  In Number
                           ,P_LNG_NO IN NUMBER DEFAULT 1) RETURN CLOB IS 

 V_CNT     NUMBER;
 V_XML_TXT CLOB;
 V_XML_TYP XMLTYPE;
 V_LNG_NO  NUMBER;
 V_SQL     VARCHAR2(4000);
  BEGIN
   
    IF P_USR_NO IS NOT NULL THEN
    
        V_SQL:='Select Brn_no,Decode('||P_LNG_NO||',1,Nvl(BRN_LNAME,BRN_FNAME),
                  Nvl(BRN_FNAME,BRN_LNAME))BRN_NAME
                From S_Brn 
                Where (('||P_USR_NO||'=1) 
                               Or Exists (select 1 From S_Brn_Usr_Priv
                                          Where U_Id = '||P_USR_NO||'                            
                                            And S_Brn_Usr_Priv.Brn_No = S_Brn.Brn_No
                                            And Nvl(Add_Flag,1) = 1 
                                            And RowNum <=1 )) 
               Order By Cmp_No , Brn_No';                                     
         
         V_XML_TXT:=DBMS_XMLGEN.GETXML(V_SQL);
          
         IF V_XML_TXT IS NOT NULL THEN
           V_XML_TYP:=XMLTYPE.CREATEXML(V_XML_TXT);
           
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
           WHEN OTHERS THEN
           NULL;
          END;
           
           
           IF NVL(V_CNT,0)>1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<BRANCH>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</BRANCH>');
           ELSIF  NVL(V_CNT,0)=1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<ROWBRANCH>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</ROWBRANCH>');
           
           END IF;
         
         
         END IF;
        
        
        END IF;
  
    RETURN V_XML_TXT;
    
  EXCEPTION
     WHEN OTHERS THEN
         RETURN NULL;
         RAISE_APPLICATION_ERROR(-20201,' Error When GET BRANCH Data. '|| CHR(13) || SQLERRM);    
 END GET_BRN_XML;
 --##-----------------------------------------------------------------------------------------------------##--
 FUNCTION  GET_PREQ_TYPES_XML( P_USR_NO  In Number
                           ,P_LNG_NO IN NUMBER DEFAULT 1) RETURN CLOB IS 

 V_CNT     NUMBER;
 V_XML_TXT CLOB;
 V_XML_TYP XMLTYPE;
 V_LNG_NO  NUMBER;
 V_SQL     VARCHAR2(4000);
  BEGIN
   
    IF P_USR_NO IS NOT NULL THEN
    
        V_SQL:='Select Pr_Type||'' -''||Decode('||P_LNG_NO||',1,nvl(pr_a_name,pr_e_name),nvl(pr_e_name,pr_a_name))PR_NAME
                    From IAS_PREQ_TYPES
                   Where '||P_USR_NO||'=1 Or Exists (select 1 from Ias_priv_ap 
                                                               where u_id='||P_USR_NO||' 
                                                                 and ap_type=1 
                                                                 and p_type=Ias_Preq_Types.pr_type 
                                                                 and add_flag=1 
                                                                 and RowNum<=1)
                   Order by PR_Type';                                     
         
         V_XML_TXT:=DBMS_XMLGEN.GETXML(V_SQL);
          
         IF V_XML_TXT IS NOT NULL THEN
           V_XML_TYP:=XMLTYPE.CREATEXML(V_XML_TXT);
           
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
           WHEN OTHERS THEN
           NULL;
          END;
           
           
           IF NVL(V_CNT,0)>1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<PREQ_TYPES>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</PREQ_TYPES>');
           ELSIF  NVL(V_CNT,0)=1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<ROWPREQ_TYPES>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</ROWPREQ_TYPES>');
           
           END IF;
         
         
         END IF;
        
        
        END IF;
  
    RETURN V_XML_TXT;
    
  EXCEPTION
     WHEN OTHERS THEN
         RETURN NULL;
         RAISE_APPLICATION_ERROR(-20201,' Error When GET PREQ TYPES Data. '|| CHR(13) || SQLERRM);    
 END GET_PREQ_TYPES_XML;
 --##-----------------------------------------------------------------------------------------------------##--  
 FUNCTION  GET_W_Code_XML( P_USR_NO  In Number
                           ,P_LNG_NO IN NUMBER DEFAULT 1) RETURN CLOB IS 

 V_CNT     NUMBER;
 V_XML_TXT CLOB;
 V_XML_TYP XMLTYPE;
 V_LNG_NO  NUMBER;
 V_SQL     VARCHAR2(4000);
  BEGIN
   
    IF P_USR_NO IS NOT NULL THEN
    
        V_SQL:='Select W_Code,Decode('||P_LNG_NO||',1,Nvl(W_Name,W_E_Name),Nvl(W_E_Name,W_Name)) W_Name 
                From Warehouse_Details  
                Where Exists (Select 1 From Privilege_Wh 
                              Where U_Id='||P_USR_NO||' 
                              And W_Code=Warehouse_Details.W_Code And Add_Flag=1)
                Order By W_Code';                                     
         
         V_XML_TXT:=DBMS_XMLGEN.GETXML(V_SQL);
          
         IF V_XML_TXT IS NOT NULL THEN
           V_XML_TYP:=XMLTYPE.CREATEXML(V_XML_TXT);
           
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
           WHEN OTHERS THEN
           NULL;
          END;
           
           
           IF NVL(V_CNT,0)>1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<WAREHOUSE>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</WAREHOUSE>');
           ELSIF  NVL(V_CNT,0)=1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<ROWWAREHOUSE>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</ROWWAREHOUSE>');
           
           END IF;
         
         
         END IF;
        
        
        END IF;
  
    RETURN V_XML_TXT;
    
  EXCEPTION
     WHEN OTHERS THEN
         RETURN NULL;
         RAISE_APPLICATION_ERROR(-20201,' Error When WAREHOUSE TYPES Data. '|| CHR(13) || SQLERRM);    
 END GET_W_Code_XML;
  --##-----------------------------------------------------------------------------------------------------##--  
 FUNCTION  GET_I_Code_XML( P_USR_NO  In Number
                           ,P_LNG_NO IN NUMBER DEFAULT 1
                           ,P_I_CODE IN VARCHAR2 DEFAULT Null
                           ,P_I_NAME IN VARCHAR2 DEFAULT Null) RETURN CLOB IS 

 V_CNT     NUMBER;
 V_XML_TXT CLOB;
 V_XML_TYP XMLTYPE;
 V_LNG_NO  NUMBER;
 V_SQL     VARCHAR2(4000);
  BEGIN
   
    IF P_USR_NO IS NOT NULL THEN
    
        V_SQL:='Select M.I_Code,Decode('||P_USR_NO||',1,nvl(I_name,I_e_name),nvl(I_e_name,I_name) ) I_name,D.Itm_Unt Unit
                from Ias_Itm_Mst M,Ias_Itm_Dtl D 
                where M.I_Code=D.I_Code
                And Nvl(D.Main_Unit,0)=1
                AND Exists (select 1 from privilege_gc where u_id='||P_USR_NO||' and g_code=M.g_code and add_flag=1 and RowNum<=1)
                And RowNum <=30
                Order By I_Code,I_Name ';                                     
         
         V_XML_TXT:=DBMS_XMLGEN.GETXML(V_SQL);
          
         IF V_XML_TXT IS NOT NULL THEN
           V_XML_TYP:=XMLTYPE.CREATEXML(V_XML_TXT);
           
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
           WHEN OTHERS THEN
           NULL;
          END;
           
           
           IF NVL(V_CNT,0)>1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<ITEMS>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</ITEMS>');
           ELSIF  NVL(V_CNT,0)=1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<ROWITEMS>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</ROWITEMS>');
           
           END IF;
         
         
         END IF;
        
        
        END IF;
  
    RETURN V_XML_TXT;
    
  EXCEPTION
     WHEN OTHERS THEN
         RETURN NULL;
         RAISE_APPLICATION_ERROR(-20201,' Error When ITEMS  Data. '|| CHR(13) || SQLERRM);    
 END GET_I_Code_XML;
  --##-----------------------------------------------------------------------------------------------------##--  
 FUNCTION  GET_V_Code_XML( P_USR_NO  In Number
                          ,P_LNG_NO IN NUMBER DEFAULT 1
                          ,P_SEARCH IN VARCHAR2 DEFAULT Null) RETURN CLOB IS 

 V_CNT     NUMBER;
 V_XML_TXT CLOB;
 V_XML_TYP XMLTYPE;
 V_Ap_Ac_Link_Type  NUMBER;
 V_SQL     VARCHAR2(4000);
  BEGIN
   
    BEGIN       
          SELECT Nvl(Ap_Ac_Link_Type,1) INTO V_Ap_Ac_Link_Type FROM Ias_Para_Ap;
          EXCEPTION
          WHEN OTHERS THEN
          V_Ap_Ac_Link_Type :=1;
    END;
    IF P_USR_NO IS NOT NULL THEN
    
        V_SQL:='Select v_details.v_code,
                       Decode ('||P_LNG_NO||',1, Nvl (v_a_name, v_e_name),
                                Nvl (v_e_name, v_a_name)) v_name
                 From v_details,Vendor_Group
                 Where v_details.V_Group_Code = Vendor_Group.V_Group_Code(+)                 
                 And (v_code  Like Nvl('||'''%'||P_SEARCH||'%'''||',v_code) 
                 or V_A_NAME  Like Nvl('||'''%'||P_SEARCH||'%'''||',v_a_name) )                
                 And (('||P_USR_NO||' = 1)
                        Or ((('||V_Ap_Ac_Link_Type||'= 1)
                          And Exists (
                                   Select 1
                                     From Priv_Acc
                                    Where U_Id = '||P_USR_NO||'
                                      And A_Code = v_details.v_a_code
                                      And Nvl(Add_Flag,0) = 1 
                                      And RowNum <=1 ))
                 Or (('||V_Ap_Ac_Link_Type||' = 2)
                            And Exists (
                                   Select 1
                                     From Ias_Priv_Vendor
                                    Where U_Id = '||P_USR_NO||'
                                      And v_code = v_details.v_code
                                      And Nvl(Add_Flag,0) = 1
                                      And RowNum <=1 ))))
                And RowNum <=100
                Order By v_code ';                                     
         
         V_XML_TXT:=DBMS_XMLGEN.GETXML(V_SQL);
          
         IF V_XML_TXT IS NOT NULL THEN
           V_XML_TYP:=XMLTYPE.CREATEXML(V_XML_TXT);
           
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
           WHEN OTHERS THEN
           NULL;
          END;
           
           
           IF NVL(V_CNT,0)>1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<ITEMS>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</ITEMS>');
           ELSIF  NVL(V_CNT,0)=1 THEN
            V_XML_TXT:=REPLACE(V_XML_TXT,'<ROW>','<ROWITEMS>');
            V_XML_TXT:=REPLACE(V_XML_TXT,'</ROW>','</ROWITEMS>');           
           END IF;                  
         END IF;                
        END IF;
    RETURN V_XML_TXT;    
  EXCEPTION
     WHEN OTHERS THEN
         RETURN NULL;
         RAISE_APPLICATION_ERROR(-20201,' Error When Vendor  Data. '|| CHR(13) || SQLERRM);    
 END GET_V_Code_XML;
   --##-----------------------------------------------------------------------------------------------------##--  
 FUNCTION  GET_AvlQty(P_I_CODE IN VARCHAR2 DEFAULT Null
                              ,P_SIZE IN NUMBER DEFAULT 1
                              ,P_W_CODE  In Number) RETURN Number IS 

 V_AvlQty     NUMBER;
  BEGIN       
    IF P_I_CODE IS NOT NULL THEN    
        Begin      
                        Select Nvl(Ias_Itm_Pkg.Get_grand_AvlQty(P_I_CODE,                                                            
                                                                P_W_CODE)/nvl(P_SIZE,1),0)
                          Into V_AvlQty
                          from Dual;
                     Exception 
                           When Others Then
                             V_AvlQty :=0;
                     End;                                             
     END IF;
    RETURN V_AvlQty ;    
  EXCEPTION
     WHEN OTHERS THEN
         RETURN NULL;
         RAISE_APPLICATION_ERROR(-20201,' Error When AvlQty  Data. '|| CHR(13) || SQLERRM);    
 END GET_AvlQty;
 --##-----------------------------------------------------------------------------------------------------##--  
 FUNCTION GET_Request_Number(P_Brn_No    In  S_Brn.Brn_No%Type                   ,
                         P_Preq_Type In  P_Request.Pr_Type%Type) Return Number Is 
   V_Pr_No P_Request.Pr_No%Type ;
   V_Ser_Type  Ias_Para_Ap.Ap_Preq_Serial%Type ;
  Begin
      BEGIN       
             SELECT NVL(Ap_Preq_Serial,1) INTO V_Ser_Type FROM Ias_Para_Ap;
              EXCEPTION
              WHEN OTHERS THEN
               V_Ser_Type:=1;
       END;  
   If V_Ser_Type = 1 Then -- Accumulated
        Begin
         Select  Nvl(Max(Pr_No),0)+1  
           Into  V_Pr_No
           From  P_Request
           Where Brn_No = P_Brn_No;
        Exception
          When Others Then
           V_Pr_No := Null ;
        End ;
     ElsIf V_Ser_Type = 2 Then -- By Type
        Begin
          Select  Nvl(Max(Pr_No),0)+1  
            Into  V_Pr_No 
            From  P_Request
            Where Brn_No  = P_Brn_No
              And Pr_Type = P_Preq_Type;
        Exception
         When Others Then
           V_Pr_No  := Null ;
         End ;
     End If ;
     Return(V_Pr_No);
  End GET_Request_Number ;
 --##-----------------------------------------------------------------------------------------------------##--  
  --##-----------------------------------------------------------------------------------------------------##--  
PROCEDURE INSRT_P_REQUEST_PRC(  P_XML in             CLOB,                       
                                P_JSON_RSLT          OUT VARCHAR    )  IS                                                                    
V_JSON_RSLT VARCHAR2(4000);
V_XML_TYPE  XMLTYPE;  
BEGIN
     
    V_JSON_RSLT:= '{"_Result": { "_Doc_No":@DOC_NO,"_ErrMsg": "@errmsg","_ErrNo": @errno } }';
    V_XML_TYPE :=XMLTYPE.CREATEXML ( P_XML);
                
    FOR M_CV IN     
                        (SELECT      EXTRACTVALUE (VALUE (XMLMSTDMY), '*/PR_TYPE             ') AS  PR_TYPE
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/PR_DATE             ') AS  PR_DATE            
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/W_CODE              ') AS  W_CODE                 
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/PR_DESC             ') AS  PR_DESC                                                      
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/SIDE_REQ            ') AS  SIDE_REQ                                              
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/REQ_AVL_DATE        ') AS  REQ_AVL_DATE                   
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/REF_NO              ') AS  REF_NO  
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/V_CODE              ') AS  V_CODE
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/AD_U_ID             ') AS  AD_U_ID            
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/AD_DATE             ') AS  AD_DATE                 
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/CMP_NO              ') AS  CMP_NO                                                      
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/BRN_NO              ') AS  BRN_NO                                              
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/BRN_YEAR            ') AS  BRN_YEAR                   
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/BRN_USR             ') AS  BRN_USR  
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/AD_TRMNL_NM         ') AS  AD_TRMNL_NM                                                                                                                                                                                                                                                                                        
                        FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE, '/P_REQUEST/P_REQUEST_MST'))) XMLMSTDMY) 
      LOOP --(1)
            -------------------------------------------------------------------------------- 
            ---------------------------------------------------------------------------------
               BEGIN                  --(2)
                                INSRT_P_REQUEST_MST( P_PR_TYPE             =>M_CV.PR_TYPE     
                                                    ,P_PR_DATE             =>TO_DATE(TO_CHAR(M_CV.PR_DATE),'DD/MM/RRRR')           
                                                    ,P_W_CODE              =>M_CV.W_CODE           
                                                    ,P_PR_DESC             =>M_CV.PR_DESC   
                                                    ,P_SIDE_REQ            =>M_CV.SIDE_REQ  
                                                    ,P_REQ_AVL_DATE        =>TO_DATE(TO_CHAR(M_CV.REQ_AVL_DATE),'DD/MM/RRRR')           
                                                    ,P_REF_NO              =>M_CV.REF_NO  
                                                    ,P_V_CODE              =>M_CV.V_CODE
                                                    ,P_AD_U_ID             =>M_CV.AD_U_ID           
                                                    ,P_AD_DATE             =>TO_DATE(TO_CHAR(M_CV.AD_DATE),'DD/MM/RRRR')   
                                                    ,P_CMP_NO              =>M_CV.CMP_NO  
                                                    ,P_BRN_NO              =>M_CV.BRN_NO           
                                                    ,P_BRN_YEAR            =>M_CV.BRN_YEAR  
                                                    ,P_BRN_USR             =>M_CV.BRN_USR
                                                    ,P_AD_TRMNL_NM         =>M_CV.AD_TRMNL_NM )  ;                                                  
                                                  
               EXCEPTION 
               WHEN OTHERS THEN
               ROLLBACK;                                      
                  RAISE_APPLICATION_ERROR(-20010,'Err when insert P_REQUEST  '||CHR(10)||SQLERRM);               
               END; --(2)                                  
    -------------------------------------------------------------------------------------------------------------------------------
              FOR D_CV IN     
                        (SELECT      EXTRACTVALUE (VALUE (XMLMSTDMY), '*/I_CODE               ') AS  I_CODE
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/ITM_UNT              ') AS  ITM_UNT            
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/P_SIZE               ') AS  P_SIZE                 
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/W_CODE               ') AS  W_CODE                                                      
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/I_QTY                ') AS  I_QTY                                              
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/I_PRICE              ') AS  I_PRICE                   
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/AVL_QTY              ') AS  AVL_QTY  
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/RCRD_NO              ') AS  RCRD_NO   
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/CMP_NO               ') AS  CMP_NO                                              
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/BRN_NO               ') AS  BRN_NO                   
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/BRN_YEAR             ') AS  BRN_YEAR  
                                    ,EXTRACTVALUE (VALUE (XMLMSTDMY), '*/BRN_USR              ') AS  BRN_USR                                                                                                                                                                                                                                                                                      
                        FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE, '/P_REQUEST/P_REQUEST_DTL'))) XMLMSTDMY) 
      LOOP --(2)
            --------------------------------------------------------------------------------       
            ---------------------------------------------------------------------------------
            BEGIN                  --(2)
                             INSRT_P_REQUEST_DTL(    P_I_CODE             =>D_CV.I_CODE     
                                                    ,P_ITM_UNT            =>D_CV.ITM_UNT          
                                                    ,P_P_SIZE             =>D_CV.P_SIZE           
                                                    ,P_W_CODE             =>D_CV.W_CODE   
                                                    ,P_I_QTY              =>D_CV.I_QTY  
                                                    ,P_I_PRICE            =>D_CV.I_PRICE           
                                                    ,P_AVL_QTY            =>D_CV.AVL_QTY  
                                                    ,P_RCRD_NO            =>D_CV.RCRD_NO
                                                    ,P_CMP_NO             =>D_CV.CMP_NO  
                                                    ,P_BRN_NO             =>D_CV.BRN_NO           
                                                    ,P_BRN_YEAR           =>D_CV.BRN_YEAR  
                                                    ,P_BRN_USR            =>D_CV.BRN_USR )  ;                                                  
               EXCEPTION 
               WHEN OTHERS THEN
               ROLLBACK;                                      
                  RAISE_APPLICATION_ERROR(-20010,'Err when insert P_REQUEST_DTL  '||CHR(10)||SQLERRM);
                 --RETURN SQLERRM;
               END; --(2)          
          END LOOP;    ------ 2
    ----------------------------------------------------------------------------------------------------------
       Begin  
                        Ys_Apprvd_Pkg.Insrt_Apprvd_Lvl( P_Doc_Typ  => 40 ,
                                                        P_Doc_Ser  => G_PR_SER,
                                                        P_Doc_No   => G_PR_NO,
                                                        P_Jv_Typ   => 0,  --Default 0 ,
                                                        P_Doc_Date => TO_DATE(TO_CHAR(M_CV.PR_DATE),'DD/MM/RRRR'),
                                                        P_Cmp_No   => M_CV.Cmp_No,
                                                        P_Brn_No   => M_CV.Brn_No,
                                                        P_Brn_Year => M_CV.Brn_Year,
                                                        P_Brn_Usr  => M_CV.Brn_Usr,
                                                        P_Ad_U_id  => M_CV.Ad_U_id,   
                                                        P_Ad_Date  => M_CV.Ad_Date);
             Exception 
               When Others Then
                Raise_Application_Error(-20002,'Err When Insert Into S_Apprvd_Mov = '||Sqlerrm);
          End ;    
    ----------------------------------------------------------------------------------------------------------      
     END LOOP; --(1) 
   ----------------------------------------------------------------------------------------------------------
   ----------------------------------------------------------------------------------------------------------   
    V_JSON_RSLT:=REPLACE(V_JSON_RSLT,'@DOC_NO', G_PR_NO);
    V_JSON_RSLT:=REPLACE(V_JSON_RSLT,'@errno',0);
    V_JSON_RSLT:=REPLACE(V_JSON_RSLT,'@errmsg','The operation accomplished successfully.');
    P_JSON_RSLT:=V_JSON_RSLT;
    
    EXCEPTION
      WHEN OTHERS
      THEN
       RAISE_APPLICATION_ERROR(-20003,'Err.' ||CHR(10)||SQLERRM) ;
End;
 --##-----------------------------------------------------------------------------------------------------##--  
 PROCEDURE INSRT_P_REQUEST_MST(      P_PR_TYPE            IN P_REQUEST.PR_TYPE%TYPE           DEFAULT NULL
                                    ,P_PR_DATE            IN P_REQUEST.PR_DATE%TYPE           DEFAULT NULL        
                                    ,P_W_CODE             IN P_REQUEST.W_CODE%TYPE            DEFAULT NULL             
                                    ,P_PR_DESC            IN P_REQUEST.PR_DESC%TYPE           DEFAULT NULL                
                                    ,P_SIDE_REQ           IN P_REQUEST.SIDE_REQ%TYPE          DEFAULT NULL        
                                    ,P_REQ_AVL_DATE       IN P_REQUEST.REQ_AVL_DATE%TYPE      DEFAULT NULL 
                                    ,P_REF_NO             IN P_REQUEST.REF_NO%TYPE            DEFAULT NULL       
                                    ,P_V_CODE             IN P_REQUEST.V_CODE%TYPE            DEFAULT NULL 
                                    ,P_AD_U_ID            IN P_REQUEST.AD_U_ID%TYPE           DEFAULT NULL        
                                    ,P_AD_DATE            IN P_REQUEST.AD_DATE%TYPE           DEFAULT NULL             
                                    ,P_CMP_NO             IN P_REQUEST.CMP_NO%TYPE            DEFAULT NULL                
                                    ,P_BRN_NO             IN P_REQUEST.BRN_NO%TYPE            DEFAULT NULL        
                                    ,P_BRN_YEAR           IN P_REQUEST.BRN_YEAR%TYPE          DEFAULT NULL 
                                    ,P_BRN_USR            IN P_REQUEST.BRN_USR%TYPE           DEFAULT NULL       
                                    ,P_AD_TRMNL_NM        IN P_REQUEST.AD_TRMNL_NM%TYPE       DEFAULT NULL ) IS
V_CNT  NUMBER :=0;
V_Ser_Type  Ias_Para_Ap.Ap_Preq_Serial%Type ;
BEGIN

    -----------------------------------------------------------------
    BEGIN       
             SELECT NVL(Ap_Preq_Serial,1),NVL(AP_WC_TYPE,1) INTO V_Ser_Type,G_AP_WC_TYPE FROM Ias_Para_Ap;
             EXCEPTION
             WHEN OTHERS THEN
               V_Ser_Type:=1;
               G_AP_WC_TYPE:=1;
    END; 
 --##-----------------------------------------------------------------------------------------------------
    
    IF V_Ser_Type = 2 AND P_PR_TYPE IS NULL THEN
       RAISE_APPLICATION_ERROR(-20021,' PR_TYPE Is Null , '||SQLERRM);
    ELSIF P_PR_DATE IS NULL THEN
       RAISE_APPLICATION_ERROR(-20022,' PR_DATE Is Null , '||SQLERRM);
    ELSIF P_BRN_NO IS NULL THEN
       RAISE_APPLICATION_ERROR(-20023,' BRN_NO Is Null , '||SQLERRM);
    ELSIF P_BRN_YEAR IS NULL THEN
       RAISE_APPLICATION_ERROR(-20024,' BRN_YEAR Is Null , '||SQLERRM);  
    END IF;
 --##-----------------------------------------------------------------------------------------------------
 IF P_Pr_Type IS NOT NULL THEN  
  BEGIN
                SELECT 1 INTO V_CNT 
                FROM   IAS_PREQ_TYPES
                WHERE  Pr_Type  =P_Pr_Type 
                AND  ROWNUM  <= 1 ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                 V_CNT := 0 ;            
            END ;
            IF  NVL(V_CNT,0) = 0 THEN
                 RAISE_APPLICATION_ERROR(-20026,'Pr_Type  Is Wrong ,Pr_Type = '||P_Pr_Type ||'--'||CHR(10)||SQLERRM) ;
            END IF;
  END IF;           
 --##----------------------------------------------------------------------------------------------------- 
 IF P_BRN_NO IS NOT NULL THEN  
  BEGIN
                SELECT 1 INTO V_CNT 
                FROM   S_BRN
                WHERE  BRN_NO  =P_BRN_NO
                AND  ROWNUM  <= 1 ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                 V_CNT := 0 ;            
            END ;
            IF  NVL(V_CNT,0) = 0 THEN
                 RAISE_APPLICATION_ERROR(-20026,'BRN_NO  Is Wrong ,BRN_NO = '||P_BRN_NO ||'--'||CHR(10)||SQLERRM) ;
            END IF;
  END IF;           
 --##----------------------------------------------------------------------------------------------------- 
 IF P_V_CODE IS NOT NULL THEN  
  BEGIN
                SELECT 1 INTO V_CNT 
                FROM   V_DETAILS
                WHERE  V_CODE  =P_V_CODE
                AND   INACTIVE =0
                AND  ROWNUM  <= 1 ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                 V_CNT := 0 ;            
            END ;
            IF  NVL(V_CNT,0) = 0 THEN
                 RAISE_APPLICATION_ERROR(-20026,'V_CODE  Is Wrong ,V_CODE = '||P_V_CODE ||'--'||CHR(10)||SQLERRM) ;
            END IF;
  END IF;           
 --##-----------------------------------------------------------------------------------------------------
    G_W_CODE :=P_W_CODE;
    IF G_AP_WC_TYPE = 2 AND G_W_CODE IS NOT NULL  THEN   
       G_W_CODE := NULL;
    ELSIF G_AP_WC_TYPE = 1 AND G_W_CODE IS NOT NULL  THEN
       BEGIN
                SELECT 1 INTO V_CNT 
                FROM   WAREHOUSE_DETAILS
                WHERE  W_CODE  =P_W_CODE 
                AND    INACTIVE =0
                AND  ROWNUM  <= 1 ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                 V_CNT := 0 ;            
            END ;
            IF  NVL(V_CNT,0) = 0 THEN
                 RAISE_APPLICATION_ERROR(-20026,'W_CODE  Is Wrong ,W_CODE = '||P_W_CODE ||'--'||CHR(10)||SQLERRM) ;
            END IF;
    END IF;
    
--##-----------------------------------------------------------------------------------------------------  
    G_PR_NO    :=GET_Request_Number(P_BRN_NO,P_PR_TYPE);
    G_PR_TYPE  :=P_PR_TYPE;
    G_CMP_NO   :=P_CMP_NO;
    G_BRN_NO   :=P_BRN_NO;
    G_BRN_YEAR :=P_BRN_YEAR;
    G_BRN_USR  :=P_BRN_USR;
--##----------------------------------------------------------------------------------------------------- 
    IF  V_Ser_Type =1 Then
          G_PR_SER:=P_BRN_YEAR||Lpad(P_BRN_NO,6,'0')||G_PR_NO;
    Else
          G_PR_SER:=P_BRN_YEAR||Lpad(P_BRN_NO,6,'0')||6||Lpad(P_PR_TYPE,5,'0')||G_PR_NO;
    End if;
--##-----------------------------------------------------------------------------------------------------      
     INSERT INTO P_REQUEST
              (  PR_NO
                ,PR_SER                   
                ,PR_TYPE
                ,PR_DATE
                ,W_CODE
                ,PR_DESC
                ,SIDE_REQ
                ,REQ_AVL_DATE
                ,REF_NO
                ,V_CODE
                ,AD_U_ID
                ,AD_DATE
                ,CMP_NO
                ,BRN_NO
                ,BRN_YEAR
                ,BRN_USR
                ,AD_TRMNL_NM
                ,PR_SELECTED
                ,APPROVED
                ,INACTIVE
              )
            VALUES
              (  G_PR_NO
                ,G_PR_SER                   
                ,G_PR_TYPE
                ,P_PR_DATE
                ,P_W_CODE
                ,P_PR_DESC
                ,P_SIDE_REQ
                ,P_REQ_AVL_DATE
                ,P_REF_NO
                ,P_V_CODE
                ,P_AD_U_ID
                ,P_AD_DATE
                ,G_CMP_NO
                ,G_BRN_NO
                ,G_BRN_YEAR
                ,G_BRN_USR
                ,P_AD_TRMNL_NM
                ,0
                ,0
                ,0  
                 ) ;                                                     
          EXCEPTION  WHEN OTHERS THEN
                       ROLLBACK;
                       RAISE_APPLICATION_ERROR (-20012,'Error When Insert Into P_REQUEST_MST  , '||CHR(10)||SQLERRM);

          END; 

PROCEDURE INSRT_P_REQUEST_DTL(   P_I_CODE           IN P_REQUEST_DETAIL.I_CODE%TYPE            DEFAULT NULL
                                ,P_ITM_UNT          IN P_REQUEST_DETAIL.ITM_UNT%TYPE           DEFAULT NULL        
                                ,P_P_SIZE           IN P_REQUEST_DETAIL.P_SIZE%TYPE            DEFAULT NULL             
                                ,P_W_CODE           IN P_REQUEST_DETAIL.W_CODE%TYPE            DEFAULT NULL                
                                ,P_I_QTY            IN P_REQUEST_DETAIL.I_QTY%TYPE             DEFAULT NULL        
                                ,P_I_PRICE          IN P_REQUEST_DETAIL.I_PRICE%TYPE           DEFAULT NULL 
                                ,P_AVL_QTY          IN P_REQUEST_DETAIL.AVL_QTY%TYPE           DEFAULT NULL       
                                ,P_RCRD_NO          IN P_REQUEST_DETAIL.RCRD_NO%TYPE           DEFAULT NULL 
                                ,P_CMP_NO           IN P_REQUEST_DETAIL.CMP_NO%TYPE            DEFAULT NULL 
                                ,P_BRN_NO           IN P_REQUEST_DETAIL.BRN_NO%TYPE            DEFAULT NULL       
                                ,P_BRN_YEAR         IN P_REQUEST_DETAIL.BRN_YEAR%TYPE          DEFAULT NULL 
                                ,P_BRN_USR          IN P_REQUEST_DETAIL.BRN_USR%TYPE           DEFAULT NULL) IS

V_Doc_Sequence  P_REQUEST_DETAIL.Doc_Sequence%TYPE  ;  
V_P_Qty         P_REQUEST_DETAIL.P_Qty%TYPE  ;  
V_W_CODE        P_REQUEST_DETAIL.W_CODE%TYPE    ; 
V_CNT   NUMBER  :=0;                          
BEGIN   
    IF P_I_CODE IS NULL THEN
       RAISE_APPLICATION_ERROR(-20021,' I_CODE Is Null , '||SQLERRM);
    ELSIF P_ITM_UNT IS NULL THEN
       RAISE_APPLICATION_ERROR(-20022,' ITM_UNT Is Null , '||SQLERRM);
    ELSIF P_P_SIZE IS NULL THEN
       RAISE_APPLICATION_ERROR(-20023,' P_SIZE FOR I_CODE Is Null , '||SQLERRM);
    ELSIF P_I_Qty IS NULL THEN
       RAISE_APPLICATION_ERROR(-20024,' I_Qty Is Null , '||SQLERRM);
    END IF;
 ----##-----------------------------------------------------------------------------------------------------##-----  
     IF P_I_CODE IS NOT NULL     THEN
     BEGIN
                SELECT 1 INTO V_CNT 
                FROM   IAS_ITM_MST
                WHERE  I_CODE  =P_I_CODE 
                AND  ROWNUM  <= 1 ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                 V_CNT := 0 ;            
            END ;
            IF  NVL(V_CNT,0) = 0 THEN
                 RAISE_APPLICATION_ERROR(-20025,'I_Code  Is Wrong ,I_CODE = '||P_I_CODE ||'--'||CHR(10)||SQLERRM) ;
            END IF;
     END IF;
----##-----------------------------------------------------------------------------------------------------##-----     
     IF P_I_CODE IS NOT NULL  AND P_ITM_UNT IS NOT NULL   THEN       
            
     BEGIN
                SELECT 1 INTO V_CNT 
                FROM   IAS_ITM_DTL
                WHERE  I_CODE  =P_I_CODE 
                AND    ITM_UNT =P_ITM_UNT
                AND  ROWNUM  <= 1 ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                 V_CNT := 0 ;            
            END ;
            IF  NVL(V_CNT,0) = 0 THEN
                 RAISE_APPLICATION_ERROR(-20026,'Itm_Unt  Is Wrong ,ITM_UNT = '||P_ITM_UNT ||'--'||CHR(10)||SQLERRM) ;
            END IF;
            
      END IF;
----##-----------------------------------------------------------------------------------------------------##----            
        V_P_Qty:=P_I_Qty * P_P_Size;
----##-----------------------------------------------------------------------------------------------------##----       
                                   --- Doc_Sequence --   
         Begin
                Select Ias_DOC_SEQ_Othr.Nextval
                  Into V_Doc_Sequence
                  From Dual;
               Exception 
                 when others Then
                   RAISE_APPLICATION_ERROR (-20012,'Error When GET DOC_SEQUENCE  , '||CHR(10)||SQLERRM);
       End;
----##-----------------------------------------------------------------------------------------------------##----  
    If G_AP_WC_TYPE = 1  and G_W_CODE IS NOT NULL Then -- Use W_code Single 
        V_W_CODE := G_W_CODE ;
    ELSIf G_AP_WC_TYPE = 2  and P_W_CODE IS NOT NULL Then  -- Use W_code MULTI 
          BEGIN
                SELECT 1 INTO V_CNT 
                FROM   WAREHOUSE_DETAILS
                WHERE  W_CODE  =P_W_CODE 
                AND    INACTIVE =0
                AND  ROWNUM  <= 1 ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                 V_CNT := 0 ;            
            END ;
            IF  NVL(V_CNT,0) = 0 THEN
                 RAISE_APPLICATION_ERROR(-20026,'W_CODE  Is Wrong ,W_CODE = '||P_W_CODE ||'--'||CHR(10)||SQLERRM) ;
            END IF;
       V_W_CODE :=P_W_CODE;
    END IF;
 --##------------------------------------------------------------------------------------------   
  INSERT INTO P_REQUEST_DETAIL(  PR_NO
                                ,PR_SER                   
                                ,PR_TYPE
                                ,I_CODE
                                ,ITM_UNT
                                ,P_SIZE
                                ,W_CODE
                                ,I_QTY
                                ,P_Qty
                                ,I_PRICE
                                ,AVL_QTY
                                ,RCRD_NO
                                ,Doc_Sequence
                                ,CMP_NO
                                ,BRN_NO
                                ,BRN_YEAR
                                ,BRN_USR
                              )
                            VALUES
                              (  G_PR_NO
                                ,G_PR_SER                   
                                ,G_PR_TYPE
                                ,P_I_CODE
                                ,P_ITM_UNT
                                ,P_P_SIZE
                                ,V_W_CODE
                                ,P_I_QTY
                                ,V_P_Qty
                                ,P_I_PRICE
                                ,P_AVL_QTY
                                ,P_RCRD_NO
                                ,V_DOC_SEQUENCE
                                ,G_CMP_NO
                                ,G_BRN_NO
                                ,G_BRN_YEAR
                                ,G_BRN_USR  
                                 ) ;                                                       
          EXCEPTION  WHEN OTHERS THEN
                       ROLLBACK;
                       RAISE_APPLICATION_ERROR (-20012,'Error When Insert Into P_REQUEST_DETAIL , '||CHR(10)||SQLERRM);
          END;           
  END;
/
CREATE PACKAGE BODY IAS_ONLINE_PKG AS

--##------------------------------------------------------------------------------------------------------------------------------------------##--
PROCEDURE GET_PARA  ( P_BRN_NO       IN SALES_ORDER.BRN_NO%TYPE       DEFAULT NULL,
                      P_W_CODE       IN SALES_ORDER.W_CODE%TYPE       DEFAULT NULL,
                      P_SHO_SYS_TYP  IN SALES_ORDER.SHO_SYS_TYP%TYPE  DEFAULT NULL)  IS

BEGIN

  SELECT CALC_VAT_AMT_TYPE ,NO_OF_DECIMAL_AR ,CLC_TAX_DSCNT2,CLC_TAX_DSCNT3
    INTO G_CALC_VAT_AMT_TYPE , G_NO_OF_DECIMAL_AR,G_CLC_TAX_DSCNT2,G_CLC_TAX_DSCNT3
    FROM IAS_PARA_AR 
   WHERE ROWNUM<=1;
   
   SELECT R.USE_PRICE_INCLUDE_VAT 
    INTO G_USE_PRICE_INCLUDE_VAT
    FROM IAS_PARA_GEN R 
   WHERE ROWNUM<=1;
   
   SELECT CUR_CODE ,SO_EXPIRE_AFTR_DAY ,AUTO_APPROVD, RSRVD_PRD_DAY,CONN_WC_MTHD
    INTO G_CUR_CODE ,G_SO_EXPIRE_AFTR_DAY, G_AUTO_APPROVD, G_RSRVD_PRD_DAY ,G_CONN_WC_MTHD
    FROM IAS_PARA_ONLINE 
   WHERE SHO_SYS_TYP = P_SHO_SYS_TYP
     AND ROWNUM<=1;
   
   BEGIN
        SELECT W.CONN_BRN_NO,W.W_CODE,NVL(W.CC_CODE,D.CC_CODE),NVL(W.PJ_NO,D.PJ_NO),NVL(W.ACTV_NO,D.ACTV_NO),NVL(W.SO_TYPE,D.SO_TYPE), NVL(W.SO_DSC,D.SO_DSC),NVL(W.SC_NO,D.SC_NO),
               NVL(W.BANK_NO,D.BANK_NO),NVL(W.REP_CODE,D.REP_CODE),NVL(W.COL_NO,D.COL_NO),NVL(W.C_CODE,D.C_CODE),NVL(W.CLC_TYP_NO_TAX,D.CLC_TYP_NO_TAX),D.LEV_NO
          INTO G_BRN_NO,G_W_CODE,G_CC_CODE,G_PJ_NO,G_ACTV_NO,G_SO_TYPE ,G_SO_DSC,G_SC_NO,G_BANK_NO,G_REP_CODE,
               G_COL_NO,G_C_CODE,G_CLC_TYP_NO_TAX,G_LEV_NO
          FROM IAS_DFLT_DATA_ONLINE D , WAREHOUSE_DETAILS W
         WHERE W.W_CODE=P_W_CODE
           AND D.SHO_SYS_TYP = P_SHO_SYS_TYP
           AND ROWNUM<=1;
    EXCEPTION WHEN OTHERS THEN
        Raise_Application_Error (-20003,'Error When Select Default Data Online , '||Sqlerrm);
    END ;   
      
    IF G_BRN_NO IS NOT NULL THEN
       G_CMP_NO := IAS_BRN_PKG.GET_BR_CMP ( G_BRN_NO);
    ELSE
       Raise_Application_Error (-20002,'Enter Brn No , '||Sqlerrm);   
    END IF;

    BEGIN
      SELECT U_ID 
        INTO G_U_ID
        FROM USER_R 
       WHERE NVL(USER_ONLINE,0)= 1 
         AND ROWNUM<=1;
         
    EXCEPTION WHEN OTHERS THEN
        Raise_Application_Error (-20003,'Error When Select Default User Online , '||Sqlerrm);
    END ;
    
   
  EXCEPTION WHEN OTHERS THEN
    Raise_Application_Error (-20003,'Error When Select Parameter Of System , '||Sqlerrm);
 END;
 
--##------------------------------------------------------------------------------------------------------------------------------------------##--
FUNCTION Get_Doc_Typ_Serial (P_DOC_TYP In NUMBER) RETURN NUMBER IS
  V_FLD_NM       VARCHAR2(60);
  V_DOC_SERIAL   NUMBER;
 BEGIN

   IF P_DOC_TYP = 52 THEN -- Quotation
      V_FLD_NM:= 'AR_QUOT_SERIAL';  
   ELSIF P_DOC_TYP = 53 THEN -- Sales Order 
      V_FLD_NM:= 'AR_SORDER_SERIAL';
   END IF;
   
   IF V_FLD_NM IS NOT NULL  THEN
      EXECUTE IMMEDIATE ('SELECT '||V_FLD_NM||' FROM IAS_PARA_AR ') INTO V_DOC_SERIAL;
   END IF;     
   
   
   RETURN (V_DOC_SERIAL);
   
  EXCEPTION WHEN OTHERS THEN
    RETURN(NULL);   
 END;
--##-------------------------------------------------------------------------------------##--
 
 FUNCTION GET_DOC_NO  (  P_DOC_TYP      IN NUMBER,
                         P_DOC_SRL_TYP  IN NUMBER         DEFAULT NULL,
                         P_BRN_YEAR     IN NUMBER,
                         P_BRN_NO       IN S_BRN.BRN_NO%TYPE,
                         P_TYP_NO       IN NUMBER          DEFAULT NULL) RETURN NUMBER IS
 
V_Doc_Srl_Typ Number := P_Doc_Srl_Typ;
V_Doc_No      Number;  
Begin

   If P_Doc_Typ Is Not Null And V_Doc_Srl_Typ Is Null Then
       V_Doc_Srl_Typ:= Get_Doc_Typ_Serial (P_DOC_TYP => P_Doc_Typ );
           
       If V_Doc_Srl_Typ Is Null Then
          Raise_Application_Error (-20001,'Error When Select Serial Typ For Document , '||Sqlerrm); 
       End If;

   End If;

   If P_Doc_Typ = 52 Then -- -- QUOTATION
       If V_Doc_Srl_Typ = 1 Then -- Accumlated By Branch
         
          Select nvl(Max(QUOT_NO),0) + 1 Into V_Doc_No 
            From QUOTATION
           where Brn_No  = P_Brn_No;
           
             
       Else -- Serial By Branch + Qt Type

          Select nvl(Max(QUOT_NO),0) + 1 Into V_Doc_No From QUOTATION
           where Brn_No  = P_Brn_No
             and Qt_Type = P_TYP_NO ;
          
       End If;
   
   ELSIF P_Doc_Typ = 53 Then -- -- Sales Order 
       If V_Doc_Srl_Typ = 1 Then -- Accumlated By Branch
         
          Select nvl(Max(order_no),0) + 1 Into V_Doc_No 
            From Sales_Order
           where Brn_No  = P_Brn_No;
           
             
       Else -- Serial By Branch + So Type

          Select nvl(Max(order_no),0) + 1 Into V_Doc_No From Sales_Order
           where Brn_No = P_Brn_No
             and So_Type = P_TYP_NO ;
          
       End If;
   ELSIF P_Doc_Typ = 139 Then -- PREPARATION SALES ORDER 
         
          Select nvl(Max(Doc_No),0) + 1 Into V_Doc_No 
            From Ias_Chk_Doc_Inout_Qty_Mst
           where Brn_No  = P_Brn_No;    
   END IF;
   
   RETURN(V_Doc_No);

END GET_DOC_NO;
--##------------------------------------------------------------------------------------------------------------------------------------------##--
 FUNCTION GET_DOC_SER(   P_DOC_TYP     IN NUMBER,
                         P_DOC_SRL_TYP  IN NUMBER         DEFAULT NULL,
                         P_BRN_YEAR     IN NUMBER,
                         P_BRN_NO       IN S_BRN.BRN_NO%TYPE,
                         P_TYP_NO       IN NUMBER          DEFAULT NULL,
                         P_DOC_NO       IN NUMBER ) RETURN NUMBER IS
   V_DOC_SER  SALES_ORDER.ORDER_SER%TYPE;
 BEGIN
   
   IF P_DOC_TYP  In (52,53) THEN
    
        If P_DOC_SRL_TYP = 1 Then         
           V_DOC_SER := P_Brn_Year||Lpad(P_Brn_No,6,'0')||P_Doc_Typ||P_DOC_No;
        Else
           V_DOC_SER := P_Brn_Year||Lpad(P_Brn_No,6,'0')||P_Doc_Typ||TO_NUMBER(LTRIM(P_DOC_NO))||ltrim(Lpad(P_Typ_No,5,'0'));    
        End If;
    
   ELSIF P_DOC_TYP =139 THEN     
        V_Doc_Ser:= P_Brn_Year||Lpad(P_Brn_No,6,'0')||P_Doc_Typ||P_Doc_No;
   END IF;
    
    
    RETURN(V_DOC_SER);  
                
 END GET_DOC_SER;
--##------------------------------------------------------------------------------------------------------------------------------------------##--
  PROCEDURE INSRT_SAL_ORDR_MST ( P_ORDER_NO       IN OUT SALES_ORDER.ORDER_NO%TYPE,
                                  P_ORDER_SER       IN OUT SALES_ORDER.ORDER_SER%TYPE, 
                                  P_ORDER_DATE      IN SALES_ORDER.ORDER_DATE%TYPE DEFAULT NULL,
                                  P_C_CODE          IN CUSTOMER.C_CODE%TYPE,
                                P_C_CODE_NM       IN CUSTOMER.C_A_NAME%TYPE,
                                P_BILL_DOC_TYPE   IN SALES_ORDER.BILL_DOC_TYPE%TYPE   DEFAULT NULL,
                                P_BILL_DUE_DATE   IN SALES_ORDER.BILL_DUE_DATE%TYPE   DEFAULT NULL,
                                P_CHEQUE_DUE_DATE IN SALES_ORDER.CHEQUE_DUE_DATE%TYPE DEFAULT NULL,
                                P_CASH_NO         IN SALES_ORDER.CASH_NO%TYPE         DEFAULT NULL,
                                P_CSTMR_TYP       IN NUMBER,
                                P_BRN_YEAR        IN SALES_ORDER.BRN_YEAR%TYPE,
                                P_BRN_USR         IN SALES_ORDER.BRN_USR%TYPE,
                                P_BRN_NO          IN SALES_ORDER.BRN_NO%TYPE          DEFAULT NULL,
                                P_W_CODE          IN SALES_ORDER.W_CODE%TYPE          DEFAULT NULL,
                                P_EMP_NO          IN SALES_ORDER.EMP_NO%TYPE          DEFAULT NULL,
                                P_C_ADDRESS       IN SALES_ORDER.C_ADDRESS %TYPE,
                                P_C_MOBILE        IN SALES_ORDER.C_MOBILE%TYPE,
                                P_REF_DOC_NO      IN SALES_ORDER.REF_DOC_NO%TYPE DEFAULT NULL,
                                P_A_DESC          IN SALES_ORDER.A_DESC%TYPE DEFAULT NULL,
                                P_NT_TRANSFR_PATH IN SALES_ORDER.NT_TRANSFR_PATH%TYPE,
                                P_LATITUDE        IN SALES_ORDER.LATITUDE%TYPE,
                                P_LONGITUDE       IN SALES_ORDER.LONGITUDE %TYPE,
                                P_DOC_AMT         IN SALES_ORDER.ORDER_AMT%TYPE       DEFAULT 0,
                                P_DISC_AMT_MST    IN SALES_ORDER.DISC_AMT%TYPE        DEFAULT 0,
                                P_DISC_AMT_DTL    IN SALES_ORDER.DISC_AMT%TYPE        DEFAULT 0,
                                P_VAT_AMT         IN SALES_ORDER.VAT_AMT%TYPE         DEFAULT 0,
                                P_OTHR_AMT        IN SALES_ORDER.OTHR_AMT%TYPE        DEFAULT 0,
                                P_PRCSSD          IN OUT SALES_ORDER.PROCESED%TYPE,-- P_PRCSSD = 0-NOT USED , 1-USED , 2-NOT FOUND
                                P_AD_TRMNL_NM     IN SALES_ORDER.AD_TRMNL_NM%TYPE     DEFAULT NULL,
                                P_CR_CARD_NO      IN SALES_ORDER.CR_CARD_NO%TYPE      DEFAULT NULL,
                                P_DISC_AMT_AFTR_VAT IN SALES_ORDER.DISC_AMT_AFTR_VAT%TYPE      DEFAULT NULL,
                                P_R_CODE          IN SALES_ORDER.R_CODE%TYPE          DEFAULT NULL,
                                P_C_CODE_CSH      IN IAS_CASH_CUSTMR.CUST_CODE%TYPE,
                                P_DRIVER_NO       IN SALES_ORDER.DRIVER_NO%TYPE DEFAULT NULL,
                                P_INACTIVE        IN SALES_ORDER.INACTIVE%TYPE DEFAULT NULL,
                                P_SHO_SYS_TYP     IN SALES_ORDER.SHO_SYS_TYP%TYPE  DEFAULT NULL
                                ) IS
  V_R_CODE             REGIONS.R_CODE%TYPE; 
  V_ORDER_EXPIRE_DATE  DATE;
  V_DISC_AMT           NUMBER;  
  V_CMP_NO             S_CMPNY.CMP_NO%TYPE;
  V_C_CODE             VARCHAR2(20); 
  V_CR_CARD_NO         SALES_ORDER.CR_CARD_NO%TYPE;
  V_CASH_NO            NUMBER(30);
  V_C_CODE_NM          CUSTOMER.C_A_NAME%TYPE:=P_C_CODE_NM;
  V_CNT                NUMBER;
 BEGIN
    
    G_BRN_YEAR := P_BRN_YEAR;
    G_BRN_USR  := P_BRN_USR;
     
    GET_PARA ( P_BRN_NO      => P_BRN_NO,
               P_W_CODE      => P_W_CODE,
               P_SHO_SYS_TYP => P_SHO_SYS_TYP);-- Get system Parameters and Default Values
    
   
    IF NVL(P_W_CODE,0)=0 THEN
       RAISE_APPLICATION_ERROR(-20001,'ENTER WCODE '||SQLERRM);
    END IF;
    
    G_W_CODE := P_W_CODE;
    
    G_BILL_DOC_TYPE := P_BILL_DOC_TYPE;
     
    BEGIN
        IF P_R_CODE IS NULL THEN
           IF P_CSTMR_TYP  = 4 THEN  -- CREDIT
              SELECT R_CODE INTO V_R_CODE FROM CUSTOMER WHERE C_CODE = P_C_CODE AND ROWNUM<=1;
           ELSE -- cash
              SELECT R_CODE INTO V_R_CODE FROM IAS_CASH_CUSTMR  WHERE CUST_CODE = P_C_CODE AND ROWNUM<=1;
           END IF;                  
        ELSE
            V_R_CODE := P_R_CODE;
        END IF;
                
    EXCEPTION WHEN OTHERS THEN
        V_R_CODE := NULL;
    END;  

     IF P_C_CODE IS NOT NULL THEN
        V_C_CODE := P_C_CODE;
     ELSE
        V_C_CODE := G_C_CODE;
     END IF;     
  
     IF V_C_CODE IS NOT NULL THEN  
       V_C_CODE_NM := Ias_Cst_Pkg.Get_C_Name(V_C_CODE,1);
     END IF;     
    
    
    BEGIN
    SELECT NVL(P_ORDER_DATE,YS_GEN_PKG.GET_SYSDATE) + NVL(G_SO_EXPIRE_AFTR_DAY,1) INTO  V_ORDER_EXPIRE_DATE FROM DUAL;
      EXCEPTION WHEN OTHERS THEN
       NULL;
    END;
    
    
    
    IF NVL(V_CNT,0)=1 AND NVL(P_PRCSSD,0)=0 THEN    
         BEGIN
            DELETE SALES_ORDER WHERE ORDER_NO=P_ORDER_NO AND ORDER_SER=P_ORDER_SER;
         EXCEPTION WHEN OTHERS THEN
            NULL;
         END;
         BEGIN
            DELETE IAS_RESERVE_MST WHERE DOC_TYPE_REF=53 AND DOC_NO_REF=P_ORDER_NO AND DOC_SER_REF=P_ORDER_SER ;
         EXCEPTION WHEN OTHERS THEN
            NULL;
         END;
         BEGIN
            DELETE OTHER_CHARGES_OTHRS WHERE BILL_NO=P_ORDER_NO AND BILL_SER=P_ORDER_SER ;
         EXCEPTION WHEN OTHERS THEN
            NULL;
         END;
         BEGIN
            DELETE IAS_ARCHIVES_MST WHERE DOC_NO=P_ORDER_NO AND DOC_SER=P_ORDER_SER;
         EXCEPTION WHEN OTHERS THEN
            NULL;
         END;                        
         BEGIN
            DELETE IAS_CHK_DOC_INOUT_QTY_MST WHERE DOC_TYPE_REF=53 AND DOC_NO_REF=P_ORDER_NO AND DOC_SER_REF=P_ORDER_SER ;
         EXCEPTION WHEN OTHERS THEN
            NULL;
         END;
         G_DOC_NO   := P_ORDER_NO;
         G_DOC_SER  := P_ORDER_SER;
         
      ELSE
         G_DOC_NO  := GET_DOC_NO ( P_DOC_TYP     =>  53,
                                  P_BRN_YEAR    => P_BRN_YEAR, 
                                  P_BRN_NO      => G_BRN_NO,
                                  P_TYP_NO      => G_SO_TYPE);
    
        G_DOC_SER := GET_DOC_SER( P_DOC_TYP     =>  53,
                                  P_BRN_YEAR    => P_BRN_YEAR, 
                                  P_BRN_NO      => G_BRN_NO,
                                  P_TYP_NO      => G_SO_TYPE,
                                  P_DOC_NO      => G_DOC_NO );
                
        P_ORDER_NO  := G_DOC_NO;
        P_ORDER_SER := G_DOC_SER;
                            
     END IF;    
    
    
    V_DISC_AMT := NVL(P_DISC_AMT_MST ,0) + NVL(P_DISC_AMT_DTL ,0);
    
    IF P_EMP_NO IS NOT NULL THEN
       G_EMP_NO := P_EMP_NO;
    ELSE
       G_EMP_NO := NULL;
    END IF;
    
    V_CMP_NO := IAS_BRN_PKG.GET_BR_CMP ( G_BRN_NO);
    
    IF NVL(P_BILL_DOC_TYPE,0) IN (2,6) THEN
       V_CASH_NO := G_BANK_NO;
    ELSE
       V_CASH_NO := NULL;
    END IF;
    
    IF NVL(P_BILL_DOC_TYPE,0)=5 THEN
       V_CR_CARD_NO := P_CR_CARD_NO;
    ELSE
       V_CR_CARD_NO := NULL;
    END IF;
    
    INSERT INTO SALES_ORDER (
               SO_TYPE,
               ORDER_NO,
               ORDER_SER,
               ORDER_DATE,
               QUOT_NO,
               QUOT_SER,
               ORDER_CUR,
               CUR_RATE,
               C_CODE,
               C_NAME,
               C_CODE_CSH,
               A_DESC,
               CC_CODE,
               PJ_NO,
               ACTV_NO,
               W_CODE,
               REP_CODE,
               COL_NO,
               PROCESED,
               STAND_BY,
               LOADED,
               REF_DOC_NO,
               REF_DOC_DATE,
               APPROVED,
               APRV_U_ID,
               APRV_DATE,
               APRV_DSC,
               PREPARE_DATE,
               REC_DEALER_DATE,
               DELIVERY_DATE,
               REPEAT_USE_IN_BILLS,
               INACTIVE,
               INACTIVE_RES,
               INACTIVE_DATE,
               INACTIVE_U_ID,
               PAPER_NO,
               PAPER_SERIAL,
               R_CODE,
               PRM_CODE,
               DRIVER_NO,
               BILL_DOC_TYPE,
               BILL_DUE_DATE,
               CASH_NO,
               ORDER_EXPIRE_DATE,
               CHEQUE_DUE_DATE,
               EXTERNAL_POST,
               PROCESS_INC_FLG,
               TRANSFER_PRODUCT,
               CR_CARD_NO,
               EXPORT,
               VAT_AMT,
               ORDER_AMT,
               DISC_AMT,
               DISC_AMT_MST,
               DISC_AMT_MST_VAT,
               DISC_AMT_DTL,
               DISC_AMT_AFTR_VAT,
               EMP_NO,
               OTHR_AMT,
               SI_TYPE,
               C_ADDRESS,
               C_MOBILE,
               NT_TRANSFR_PATH,
               LATITUDE,
               LONGITUDE,
               CLC_VAT_PRICE_TYP,
               CLC_TYP_NO_TAX,
               SHO_SYS_TYP,
               PR_REP,
               AD_U_ID,
               AD_DATE,
               AD_TRMNL_NM,
               UP_U_ID,
               UP_DATE,
               UP_CNT,
               UP_TRMNL_NM,
               CMP_NO,
               BRN_NO,
               BRN_YEAR,
               BRN_USR )
      VALUES ( G_SO_TYPE,
               G_DOC_NO,
               G_DOC_SER,
               NVL(P_ORDER_DATE,YS_GEN_PKG.GET_SYSDATE),
               NULL,
               NULL,
               G_CUR_CODE,
               YS_GEN_PKG.GET_CUR_RATE(G_CUR_CODE,0,NULL) , --CUR_RATE,
               V_C_CODE,
               V_C_CODE_NM,
               P_C_CODE_CSH,
               NVL(P_A_DESC,G_SO_DSC),
               G_CC_CODE,
               G_PJ_NO,
               G_ACTV_NO,
               G_W_CODE,
               G_REP_CODE,
               G_COL_NO,
               0, --PROCESED,
               0, --STAND_BY,
               0, --LOADED,
               P_REF_DOC_NO,
               NULL,--REF_DOC_DATE,
               NVL(G_AUTO_APPROVD,0),--APPROVED,
               DECODE(NVL(G_AUTO_APPROVD,0),1,G_U_ID,NULL),--APRV_U_ID,
               DECODE(NVL(G_AUTO_APPROVD,0),1,YS_GEN_PKG.GET_SYSDATE,NULL),--APRV_DATE,
               NULL,--APRV_DSC,
               NULL,--PREPARE_DATE,
               NULL,--REC_DEALER_DATE,
               NULL,--DELIVERY_DATE,
               0,--REPEAT_USE_IN_BILLS,
               NVL(P_INACTIVE,0),--INACTIVE,
               NULL,--INACTIVE_RES,
               NULL,--INACTIVE_DATE,
               NULL,--INACTIVE_U_ID,
               NULL,--PAPER_NO,
               NULL,--PAPER_SERIAL,
               V_R_CODE,
               NULL,--PRM_CODE,
               P_DRIVER_NO,--DRIVER_NO,
               P_BILL_DOC_TYPE,
               P_BILL_DUE_DATE,
               V_CASH_NO,
               V_ORDER_EXPIRE_DATE,
               P_CHEQUE_DUE_DATE,
               67,--EXTERNAL_POST,
               0,--PROCESS_INC_FLG,
               0,--TRANSFER_PRODUCT,
               V_CR_CARD_NO,
               0,--EXPORT,
               P_VAT_AMT,
               P_DOC_AMT,
               V_DISC_AMT,
               DECODE(NVL(G_USE_PRICE_INCLUDE_VAT,0),1,NULL,P_DISC_AMT_MST), --P_DISC_AMT_MST
               DECODE(NVL(G_USE_PRICE_INCLUDE_VAT,0),1,P_DISC_AMT_MST,NULL), --P_DISC_AMT_MST_VAT
               P_DISC_AMT_DTL,
               P_DISC_AMT_AFTR_VAT,
               P_EMP_NO,
               P_OTHR_AMT,
               NULL,--SI_TYPE,
               P_C_ADDRESS,
               P_C_MOBILE,
               P_NT_TRANSFR_PATH,
               P_LATITUDE,
               P_LONGITUDE,
               DECODE(NVL(G_USE_PRICE_INCLUDE_VAT,0),1,2,1),
               G_CLC_TYP_NO_TAX,
               P_SHO_SYS_TYP,
               0,--PR_REP,
               G_U_ID,--AD_U_ID,
               YS_GEN_PKG.GET_CURDATE ,--AD_DATE,
               P_AD_TRMNL_NM,
               NULL,
               NULL,
               0,--UP_CNT,
               NULL,--UP_TRMNL_NM,
               V_CMP_NO,
               G_BRN_NO,
               G_BRN_YEAR,
               G_BRN_USR );
              ---------------------------------------------------------------------------------------------------
               --## Insert Into S_Apprvd_Mov
               Begin
                   YS_APPRVD_PKG.DEL_APPRVD_LVL(53,G_DOC_SER);
               Exception
                    When Others Then
                       NULL;
               End;           
               ---------------------------------------------------
               Begin
                  INSERT INTO S_APPRVD_MOV (LVL_NO, DOC_TYP, DOC_SER, DOC_NO, DOC_JV_TYP, DOC_DATE,APPRVD, ORDR_NO, CMP_NO, BRN_NO,BRN_YEAR, BRN_USR)
                                     SELECT LVL_NO, DOC_TYP, G_DOC_SER ,G_DOC_NO,P_BILL_DOC_TYPE,NVL(P_ORDER_DATE,YS_GEN_PKG.GET_SYSDATE),NVL(G_AUTO_APPROVD,0), ORDR_NO,
                                            V_CMP_NO,NVL(P_BRN_NO,G_BRN_NO),G_BRN_YEAR, G_BRN_USR
                                       FROM S_APPRVD_LVL 
                                      WHERE DOC_TYP = 53;
               Exception
                  When Others Then
                     Raise_Application_Error(-20003,'Err When Insert Into S_Apprvd_Mov = '||Sqlerrm);
               End;                
              ---------------------------------------------------------------------------------------------------      
    EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20002,'Error When Insert Into Sales Order Master , '||SQLERRM);
 END INSRT_SAL_ORDR_MST;

 --##------------------------------------------------------------------------------------------------------------------------------------------##--
 
 PROCEDURE INSRT_SAL_ORDR_DTL ( P_I_CODE        IN IAS_ITM_MST.I_CODE%TYPE,
                                P_ITM_UNT       IN ORDER_DETAIL.ITM_UNT%TYPE,
                                P_I_QTY         IN NUMBER,
                                P_FREE_QTY      IN NUMBER         DEFAULT 0,
                                P_I_PRICE       IN NUMBER,
                                P_DIS_PER       IN NUMBER         DEFAULT NULL,
                                P_DIS_AMT_DTL   IN NUMBER         DEFAULT 0,
                                P_DIS_AMT_DTL2  IN NUMBER         DEFAULT 0,
                                P_DIS_AMT_DTL3  IN NUMBER         DEFAULT 0,
                                P_DIS_AMT_MST   IN NUMBER         DEFAULT 0,
                                P_VAT_PER       IN NUMBER         DEFAULT NULL,
                                P_VAT_AMT       IN NUMBER         DEFAULT NULL,
                                P_OTHR_AMT      IN NUMBER         DEFAULT 0,
                                P_W_CODE        IN SALES_ORDER.W_CODE%TYPE           DEFAULT NULL,
                                P_EXPIRE_DATE   IN ORDER_DETAIL.EXPIRE_DATE%TYPE     DEFAULT NULL,
                                P_BATCH_NO      IN ORDER_DETAIL.BATCH_NO%TYPE        DEFAULT NULL,
                                P_SUB_C_CODE    IN ORDER_DETAIL.SUB_C_CODE%TYPE      DEFAULT NULL,
                                P_DIS_AMT_AFTR_VAT IN ORDER_DETAIL.DIS_AMT_AFTR_VAT%TYPE      DEFAULT NULL                                                                
                                 ) IS
    
    V_DIS_AMT               NUMBER; 
    V_P_SIZE                IAS_ITM_DTL.P_SIZE%TYPE;   
    V_I_PRICE_VAT           NUMBER:=0;
    V_DIS_AMT_DTL_VAT       NUMBER:=0;
    V_DIS_AMT_DTL2_VAT      NUMBER:=0;
    V_DIS_AMT_DTL3_VAT      NUMBER:=0;
    V_DIS_AMT_MST_VAT       NUMBER:=0;
    V_I_PRICE               NUMBER:=0;
    V_DIS_AMT_DTL           NUMBER:=0;
    V_DIS_AMT_DTL2          NUMBER:=0;
    V_DIS_AMT_DTL3          NUMBER:=0;
    V_DIS_AMT_MST           NUMBER:=0;   
    V_DIS_PER               NUMBER:=0;                                                                                 
    V_DIS_PER2              NUMBER:=0;
    V_DIS_PER3              NUMBER:=0;
    V_VAT_AMT_DIS_DTL_VAT   NUMBER:=0;
    V_VAT_AMT_DIS_DTL2_VAT  NUMBER:=0;
    V_VAT_AMT_DIS_DTL3_VAT  NUMBER:=0;
    V_VAT_AMT_DIS_MST_VAT   NUMBER:=0;
    V_VAT_PER               NUMBER:=0;
    V_VAT_AMT               NUMBER:=0;
    V_CLC_TYP_NO            NUMBER:=0;
      
                                                      
 BEGIN
   ------------------------------------------------------------------------------------------------------------------- 
   G_RCRD_NO := NVL(G_RCRD_NO,0) + 1;
   ------------------------------------------------------------------------------------------------------------------- 
   BEGIN
     SELECT NVL(P_SIZE,1) INTO V_P_SIZE FROM IAS_ITM_DTL WHERE I_CODE = P_I_CODE AND ITM_UNT = P_ITM_UNT AND ROWNUM<=1;
     EXCEPTION WHEN OTHERS THEN
         RAISE_APPLICATION_ERROR (-20002,' Item Unt Not There ,'||SQLERRM);
   END;    
   -------------------------------------------------------------------------------------------------------------------
   IF NVL(YS_TAX_PKG.GET_CLC_TAX_TYP(P_CLC_TYP_NO => G_CLC_TYP_NO_TAX),0)=0 THEN
      V_VAT_PER := YS_TAX_PKG.GET_ITM_TAX_PRCNT ( P_CLC_TYP_NO => G_CLC_TYP_NO_TAX , P_I_CODE => P_I_CODE ,P_CLC_USD_ITM => 1);
   ELSE
      V_CLC_TYP_NO  := YS_TAX_PKG.GET_CLC_TYP_NO_EXMPT ( P_CLC_TYP_NO => G_CLC_TYP_NO_TAX );             
      V_VAT_PER     := YS_TAX_PKG.GET_ITM_TAX_PRCNT ( P_CLC_TYP_NO => V_CLC_TYP_NO , P_I_CODE => P_I_CODE ,P_CLC_USD_ITM => 1);
   END IF;   
   -------------------------------------------------------------------------------------------------------------------
   IF NVL(G_USE_PRICE_INCLUDE_VAT,0)=1 THEN        
        ------------------------------------
        V_I_PRICE_VAT      := P_I_PRICE;
        V_DIS_AMT_DTL_VAT  := P_DIS_AMT_DTL;
        V_DIS_AMT_DTL2_VAT := P_DIS_AMT_DTL2;
        V_DIS_AMT_DTL3_VAT := P_DIS_AMT_DTL3;
        V_DIS_AMT_MST_VAT  := P_DIS_AMT_MST;
        ------------------------------------
        V_I_PRICE          := NVL(P_I_PRICE,0) / ((NVL(V_VAT_PER,0)/100)+1);
        V_DIS_AMT_DTL      := NVL(P_DIS_AMT_DTL,0) / ((NVL(V_VAT_PER,0)/100)+1);
        V_DIS_AMT_DTL2     := NVL(P_DIS_AMT_DTL2,0) / ((NVL(V_VAT_PER,0)/100)+1);
        V_DIS_AMT_DTL3     := NVL(P_DIS_AMT_DTL3,0) / ((NVL(V_VAT_PER,0)/100)+1);   
        V_DIS_AMT_MST      := NVL(P_DIS_AMT_MST,0) / ((NVL(V_VAT_PER,0)/100)+1);
        ------------------------------------
        IF NVL(V_I_PRICE_VAT,0)>0 THEN
          V_DIS_PER          :=(NVL(V_DIS_AMT_DTL_VAT,0)/NVL(V_I_PRICE_VAT,0))*100;
        END IF;                                                                                   
        IF (NVL(V_I_PRICE_VAT,0)-NVL(V_DIS_AMT_DTL_VAT,0))>0 THEN
          V_DIS_PER2         :=(NVL(V_DIS_AMT_DTL2_VAT,0)/(NVL(V_I_PRICE_VAT,0)-NVL(V_DIS_AMT_DTL_VAT,0)))*100;
        END IF;
        IF (NVL(V_I_PRICE_VAT,0)-NVL(V_DIS_AMT_DTL_VAT,0)-NVL(V_DIS_AMT_DTL2_VAT,0))>0 THEN
          V_DIS_PER3         :=(NVL(V_DIS_AMT_DTL3_VAT,0)/(NVL(V_I_PRICE_VAT,0)-NVL(V_DIS_AMT_DTL_VAT,0)-NVL(V_DIS_AMT_DTL2_VAT,0)))*100;
        END IF;
        ------------------------------------                            
        V_VAT_AMT              := NVL(V_I_PRICE_VAT,0)-NVL(V_I_PRICE,0);
        V_VAT_AMT_DIS_DTL_VAT  := NVL(V_DIS_AMT_DTL_VAT,0)-NVL(V_DIS_AMT_DTL,0);
        V_VAT_AMT_DIS_DTL2_VAT := NVL(V_DIS_AMT_DTL2_VAT,0)-NVL(V_DIS_AMT_DTL2,0);
        V_VAT_AMT_DIS_DTL3_VAT := NVL(V_DIS_AMT_DTL3_VAT,0)-NVL(V_DIS_AMT_DTL3,0);
        V_VAT_AMT_DIS_MST_VAT  := NVL(V_DIS_AMT_MST_VAT,0)-NVL(V_DIS_AMT_MST,0);
        ------------------------------------     
    ELSE
        ------------------------------------
        V_I_PRICE          := NVL(P_I_PRICE,0);
        ------------------------------------
        IF G_CALC_VAT_AMT_TYPE=2 THEN
           V_VAT_AMT       :=(NVL(V_VAT_PER,0)*(NVL(V_I_PRICE,0)-NVL(P_DIS_AMT_MST,0)-NVL(P_DIS_AMT_DTL,0)))/100;
        ELSE           
           V_VAT_AMT       :=(NVL(V_VAT_PER,0)*NVL(V_I_PRICE,0))/100;
        END IF;
        ------------------------------------
        V_DIS_AMT_DTL      := NVL(P_DIS_AMT_DTL,0);
        V_DIS_AMT_DTL2     := NVL(P_DIS_AMT_DTL2,0);
        V_DIS_AMT_DTL3     := NVL(P_DIS_AMT_DTL3,0);     
        V_DIS_AMT_MST      := NVL(P_DIS_AMT_MST,0);
        ------------------------------------
        IF NVL(V_I_PRICE,0)>0 THEN
          V_DIS_PER          :=(NVL(V_DIS_AMT_DTL,0)/NVL(V_I_PRICE,0))*100;
        END IF;                                                                                   
        IF (NVL(V_I_PRICE,0)-NVL(V_DIS_AMT_DTL,0))>0 THEN
          V_DIS_PER2         :=(NVL(V_DIS_AMT_DTL2,0)/(NVL(V_I_PRICE,0)-NVL(V_DIS_AMT_DTL,0)))*100;
        END IF;
        IF (NVL(V_I_PRICE,0)-NVL(V_DIS_AMT_DTL,0)-NVL(V_DIS_AMT_DTL2,0))>0 THEN
          V_DIS_PER3         :=(NVL(V_DIS_AMT_DTL3,0)/(NVL(V_I_PRICE,0)-NVL(V_DIS_AMT_DTL,0)-NVL(V_DIS_AMT_DTL2,0)))*100;
        END IF;
        ------------------------------------   
    END IF;
    --------------------------------------------------------------------------------------------------------
    V_DIS_AMT := NVL(V_DIS_AMT_DTL,0) + NVL(V_DIS_AMT_DTL2,0) + NVL(V_DIS_AMT_DTL3,0) + NVL(V_DIS_AMT_MST,0);
    -------------------------------------------------------------------------------------------------------- 
    INSERT INTO ORDER_DETAIL ( SO_TYPE,
                               ORDER_NO,
                               ORDER_SER,
                               I_CODE,
                               ITM_UNT,
                               I_QTY,
                               FREE_QTY,
                               P_SIZE,
                               P_QTY,
                               I_PRICE,
                               I_PRICE_VAT,
                               LEV_NO,
                               W_CODE,
                               RESERVED,
                               RES_DATE,
                               RES_QTY,
                               RCRD_NO,
                               BARCODE,
                               USE_ATTCH,
                               REC_ATTCH,
                               ITEM_DESC,
                               EXTERNAL_POST,
                               CANCELED,
                               EXPIRE_DATE,
                               BATCH_NO,
                               VAT_PER,
                               VAT_AMT,
                               I_LENGTH,
                               I_WIDTH,
                               I_HEIGHT,
                               I_NUMBER,
                               FIELD_DTL1,
                               FIELD_DTL2,
                               FIELD_DTL3,
                               WT_QTY,
                               WT_UNT,
                               DIS_PER,
                               DIS_AMT_DTL,
                               DIS_AMT_DTL_VAT,
                               VAT_AMT_DIS_DTL_VAT,
                               DIS_PER2,
                               DIS_AMT_DTL2,
                               DIS_AMT_DTL2_VAT,
                               VAT_AMT_DIS_DTL2_VAT,
                               DIS_PER3,
                               DIS_AMT_DTL3,
                               DIS_AMT_DTL3_VAT,
                               VAT_AMT_DIS_DTL3_VAT,
                               DIS_AMT,
                               DIS_AMT_MST,
                               DIS_AMT_AFTR_VAT,
                               EMP_NO,
                               SUB_C_CODE,
                               MEASUR_PRICE,
                               OTHR_AMT,
                               SI_TYPE,                   
                               BILL_DOC_TYPE,
                               ARGMNT_NO ,
                               DOC_SEQ,
                               CMP_NO,
                               BRN_NO,
                               BRN_YEAR,
                               BRN_USR)
                   VALUES  (   G_SO_TYPE,
                               G_DOC_NO,
                               G_DOC_SER,
                               P_I_CODE,
                               P_ITM_UNT,
                               P_I_QTY,
                               P_FREE_QTY,
                               V_P_SIZE,
                               P_I_QTY * NVL(V_P_SIZE,1) ,--P_QTY,
                               V_I_PRICE, --P_I_PRICE
                               V_I_PRICE_VAT, --P_I_PRICE_VAT
                               G_LEV_NO,
                               G_W_CODE,
                               1,--RESERVED,
                                (YS_GEN_PKG.GET_SYSDATE+NVL(G_RSRVD_PRD_DAY,0)), --RES_DATE,
                               P_I_QTY,--RES_QTY,
                               G_RCRD_NO,
                               NULL,--BARCODE,
                               NULL,--USE_ATTCH,
                               NULL,--REC_ATTCH,
                               NULL,--ITEM_DESC,
                               67,--EXTERNAL_POST,
                               0,--CANCELED,
                               P_EXPIRE_DATE,
                               P_BATCH_NO,
                               V_VAT_PER,
                               V_VAT_AMT,
                               NULL,--I_LENGTH,
                               NULL,--I_WIDTH,
                               NULL,--I_HEIGHT,
                               NULL,--I_NUMBER,
                               NULL,--FIELD_DTL1,
                               NULL,--FIELD_DTL2,
                               NULL,--FIELD_DTL3,
                               NULL,--WT_QTY,
                               NULL,--WT_UNT,
                   
                               V_DIS_PER,
                               V_DIS_AMT_DTL,
                               V_DIS_AMT_DTL_VAT,
                               V_VAT_AMT_DIS_DTL_VAT,
                               V_DIS_PER2,
                               V_DIS_AMT_DTL2,
                               V_DIS_AMT_DTL2_VAT,
                               V_VAT_AMT_DIS_DTL2_VAT,
                               V_DIS_PER3,
                               V_DIS_AMT_DTL3,
                               V_DIS_AMT_DTL3_VAT,
                               V_VAT_AMT_DIS_DTL3_VAT,
                   
                               V_DIS_AMT,
                               P_DIS_AMT_MST,
                               P_DIS_AMT_AFTR_VAT,
                               G_EMP_NO,--EMP_NO,
                               P_SUB_C_CODE,
                               NULL,--MEASUR_PRICE=  (ROUND((NVL(P_I_QTY,0)*NVL(P_I_PRICE,0))/P_I_NUMBER,G_NO_OF_DECIMAL_AR))
                               P_OTHR_AMT,
                               NULL,--SI_TYPE,
                               G_BILL_DOC_TYPE,
                               NULL,--ARGMNT_NO ,
                               IAS_DOC_SEQ_OTHR.NEXTVAL, --DOC_SEQ,
                               G_CMP_NO,
                               G_BRN_NO,
                               G_BRN_YEAR,    
                               G_BRN_USR);
 
   EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20003,'Error When Insert Into Sales Order Detail , '||SQLERRM);   
 END INSRT_SAL_ORDR_DTL;
 --##------------------------------------------------------------------------------------------------------------------------------------------##--
 
PROCEDURE INSRT_OTHR_CHRGS_SAL_ORDR ( P_BILL_DOC_TYPE   IN SALES_ORDER.BILL_DOC_TYPE%TYPE,
                                      P_DOC_AMT         IN SALES_ORDER.ORDER_AMT%TYPE    DEFAULT 0,
                                      P_OTHR_AMT        IN SALES_ORDER.OTHR_AMT%TYPE) IS
  V_A_CODE   ACCOUNT.A_CODE%TYPE;
  V_VAT_PER  OTHER_CHARGES_OTHRS.VAT_PER%TYPE;
  V_VAT_AMT  OTHER_CHARGES_OTHRS.VAT_AMT%TYPE;
  V_OTHR_AMT  OTHER_CHARGES_OTHRS.AMT%TYPE;
BEGIN
  IF NVL(P_OTHR_AMT,0)<>0 THEN
         ------------------------------------------------------------------------------------
        BEGIN 
          SELECT A_CODE INTO V_A_CODE
            FROM SALES_CHARGES WHERE SC_NO=G_SC_NO
             AND ROWNUM<=1;
        EXCEPTION
          WHEN OTHERS THEN 
            RAISE_APPLICATION_ERROR (-20013,'Error When Retriveing Sales Charge A_CODE , '||SQLERRM);
        END;
        ------------------------------------------------------------------------------------
        IF G_CLC_TYP_NO_TAX  IS NOT NULL THEN      
           V_VAT_PER := YS_TAX_PKG.GET_INPT_PRCNT (  P_CLC_TYP_NO => G_CLC_TYP_NO_TAX  ,
                                                     P_INPT_TYP   => 1,
                                                     P_INPT_CODE  => G_SC_NO);
                               
            IF V_VAT_PER IS NOT NULL THEN
                -------------------------------------------------------------------------------------------------------------------
               IF NVL(G_USE_PRICE_INCLUDE_VAT,0)=1 THEN        
                    ------------------------------------
                    V_OTHR_AMT := NVL(P_OTHR_AMT,0) / ((NVL(V_VAT_PER,0)/100)+1);
                    V_VAT_AMT  := NVL(P_OTHR_AMT,0)-NVL(V_OTHR_AMT,0);            
                    ------------------------------------     
                ELSE
                    ------------------------------------
                    V_OTHR_AMT := NVL(P_OTHR_AMT,0);
                    V_VAT_AMT  := NVL(P_OTHR_AMT,0)*NVL(V_VAT_PER,0)/100;            
                    ------------------------------------ 
                END IF;
                --------------------------------------------------------------------------------------------------------
            ELSE
                ------------------------------------
                V_OTHR_AMT := NVL(P_OTHR_AMT,0);
                V_VAT_AMT  := 0;            
                ------------------------------------ 
            END IF;            
        ELSE
            ------------------------------------
            V_OTHR_AMT := NVL(P_OTHR_AMT,0);
            V_VAT_AMT  := 0;            
            ------------------------------------     
        END IF;
       -------------------------------------------------------------------------------------------------------------------
   
        BEGIN     
            INSERT INTO OTHER_CHARGES_OTHRS
                            (BILL_TYPE,
                             BILL_DOC_TYPE,
                             BILL_NO,
                             BILL_SER,
                             DOC_DATE,
                             SC_NO,
                             A_CODE,
                             A_CY,
                             AC_RATE,
                             AMT,
                             VAT_PER,
                             VAT_AMT,
                             INV_ITEM,
                             RCRD_NO,
                             BILL_PY,
                             EXTERNAL_POST,
                             CMP_NO,
                             BRN_NO,
                             BRN_YEAR,
                             BRN_USR
                            )
                     VALUES (53,
                             P_BILL_DOC_TYPE,
                             G_DOC_NO,
                             G_DOC_SER,
                             YS_GEN_PKG.GET_SYSDATE,
                             G_SC_NO,
                             V_A_CODE,
                             G_CUR_CODE,
                             YS_GEN_PKG.GET_CUR_RATE(G_CUR_CODE,0,NULL) , --CUR_RATE,
                             V_OTHR_AMT,
                             V_VAT_PER,
                             V_VAT_AMT,
                             0,
                             1,
                             0,
                             0,
                             G_CMP_NO,
                             G_BRN_NO,
                             G_BRN_YEAR,
                             G_BRN_USR
                            );
        EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20014,'Error When Insert Into Other Charges , '||SQLERRM);
        END ;
    
        BEGIN
           UPDATE SALES_ORDER A SET OTHR_AMT=V_OTHR_AMT,VAT_AMT_OTHR=V_VAT_AMT WHERE ORDER_SER=G_DOC_SER;
       
           UPDATE ORDER_DETAIL A SET OTHR_AMT=(SELECT (SUM(NVL(OTHER_CHARGES_OTHRS.AMT,0))/NVL(P_DOC_AMT,0))* NVL(A.I_PRICE,0) 
                                                 FROM OTHER_CHARGES_OTHRS
                                                WHERE OTHER_CHARGES_OTHRS.BILL_SER=A.ORDER_SER
                                                  AND NVL(OTHER_CHARGES_OTHRS.INV_ITEM,0)=0
                                                  AND OTHER_CHARGES_OTHRS.BILL_SER=G_DOC_SER),
                                   OTHR_AMT_DISC=(SELECT NVL(A.OTHR_AMT_DISC,0)+(SUM(NVL(OTHER_CHARGES_OTHRS.AMT,0))/NVL(P_DOC_AMT,0))* NVL(A.I_PRICE,0)*-1 FROM OTHER_CHARGES_OTHRS
                                                     WHERE OTHER_CHARGES_OTHRS.BILL_SER=A.ORDER_SER
                                                       AND NVL(OTHER_CHARGES_OTHRS.INV_ITEM,0)=0
                                                       AND OTHER_CHARGES_OTHRS.BILL_SER=G_DOC_SER
                                                       AND NVL(OTHER_CHARGES_OTHRS.AMT,0)<0
                                                       AND EXISTS(SELECT 1 FROM SALES_CHARGES
                                                              WHERE SC_NO = OTHER_CHARGES_OTHRS.SC_NO
                                                                AND NVL(USE_VAT,0)=1
                                                                AND ROWNUM<=1)),
                                   VAT_AMT_OTHR=(SELECT (SUM(NVL(OTHER_CHARGES_OTHRS.VAT_AMT,0))/NVL(P_DOC_AMT,0))* NVL(A.I_PRICE,0) 
                                                   FROM OTHER_CHARGES_OTHRS
                                                  WHERE OTHER_CHARGES_OTHRS.BILL_SER=A.ORDER_SER
                                                    AND NVL(OTHER_CHARGES_OTHRS.INV_ITEM,0)=0
                                                    AND OTHER_CHARGES_OTHRS.BILL_SER=G_DOC_SER)                         
             WHERE ORDER_SER=G_DOC_SER
               AND NVL(I_QTY,0)>0;
                                                                   
        EXCEPTION WHEN OTHERS THEN
              NULL;
        END ;
   END IF;             
 EXCEPTION WHEN OTHERS THEN
   RAISE_APPLICATION_ERROR (-20015,'Error When Insert Into Other Charges , '||SQLERRM);   
 END INSRT_OTHR_CHRGS_SAL_ORDR;

--##------------------------------------------------------------------------------------------------------------------------------------------##--
 
 PROCEDURE INSRT_TAX_MOVMNT IS 
    V_FLD_DISC           VARCHAR2(500);
 BEGIN
   -------------------------------------------------------------------------------------------------------------------   
  IF G_CLC_TYP_NO_TAX IS NOT NULL THEN
     -------------------------------------------------------------------------------------------------------
     V_FLD_DISC :='NVL(D.DIS_AMT_MST,0)+NVL(D.DIS_AMT_DTL,0)';
     IF G_CLC_TAX_DSCNT2=1 THEN
           V_FLD_DISC :=V_FLD_DISC||'+NVL(D.DIS_AMT_DTL2,0)';
     END IF;
     IF G_CLC_TAX_DSCNT3=1 THEN
           V_FLD_DISC :=V_FLD_DISC||'+NVL(D.DIS_AMT_DTL3,0)';
     END IF;
     V_FLD_DISC:='('||V_FLD_DISC||'+NVL(D.OTHR_AMT_DISC,0))';
     -------------------------------------------------------------------------------------------------------------
     BEGIN
            YS_TAX_PKG.CLC_ITM_TAX_AFTR_SAVE (  P_CLC_TYP_NO        => G_CLC_TYP_NO_TAX,             
                                                P_DOC_TYP           => 53,                                
                                                P_DOC_NO            => G_DOC_NO,             
                                                P_DOC_SER           => G_DOC_SER,             
                                                P_BILL_DOC_TYP      => G_BILL_DOC_TYPE,              
                                                P_DOC_JV_TYP        => NULL,             
                                                P_DOC_DATE          => YS_GEN_PKG.GET_SYSDATE,             
                                                P_A_CY              => G_CUR_CODE,             
                                                P_AC_RATE           => YS_GEN_PKG.GET_CUR_RATE(G_CUR_CODE,0,NULL), 
                                                P_STK_RATE          => YS_GEN_PKG.GET_CUR_RATE(IAS_GEN_PKG.Get_Stk_Cur,0,NULL),                          
                                                P_CALC_VAT_AMT_TYPE => G_CALC_VAT_AMT_TYPE,             
                                                P_CLC_USD_ITM       => 1,             
                                                P_CLC_RTRN_DOC      => 0,                          
                                                P_TBL_MVMNT_NM      => 'GNR_RQ_TAX_ITM_MOVMNT',             
                                                P_TBL_MST_NM        => 'SALES_ORDER',             
                                                P_TBL_DTL_NM        => 'ORDER_DETAIL',             
                                                P_FLD_DOC_SER       => 'M.ORDER_SER',             
                                                P_FLD_TAX_A_CODE    => 'TD.AC_CODE_AR',             
                                                P_FLD_W_CODE        => 'D.W_CODE',             
                                                P_FLD_I_PRICE       => 'D.I_PRICE',             
                                                P_FLD_FREE_QTY      => 'D.FREE_QTY',
                                                P_FLD_DISC_AMT      => V_FLD_DISC,
                                                P_FLD_STK_COST      => 'NVL(D.STK_COST,0)',
                                                P_FLD_DOC_SEQ       => 'D.DOC_SEQ',
                                                P_CLC_DOC_TYP       => 1,
                                                P_LNG_NO            => 1);
                                             
           YS_TAX_PKG.CLC_INPT_TAX_AFTR_SAVE (  P_CLC_TYP_NO        => G_CLC_TYP_NO_TAX,             
                                                P_DOC_TYP           => 53,                                
                                                P_DOC_NO            => G_DOC_NO,             
                                                P_DOC_SER           => G_DOC_SER,             
                                                P_BILL_DOC_TYP      => G_BILL_DOC_TYPE,             
                                                P_DOC_JV_TYP        => NULL,             
                                                P_DOC_DATE          => YS_GEN_PKG.GET_SYSDATE,             
                                                P_A_CY              => G_CUR_CODE,             
                                                P_AC_RATE           => YS_GEN_PKG.GET_CUR_RATE(G_CUR_CODE,0,NULL),                          
                                                P_TBL_INPT_NM       => 'OTHER_CHARGES_OTHRS',             
                                                P_TBL_MST_NM        => 'SALES_ORDER',             
                                                P_TBL_DTL_NM        => 'ORDER_DETAIL',             
                                                P_FLD_DOC_SER       => 'ORDER_SER',             
                                                P_FLD_DOC_AMT       => 'ORDER_AMT',             
                                                P_FLD_DOC_SER_INPT  => 'M.BILL_SER',             
                                                P_FLD_TAX_A_CODE    => 'TD.AC_CODE_AR',             
                                                P_INPT_TYP          => 1,             
                                                P_FLD_INPT_CODE     => 'M.SC_NO',             
                                                P_FLD_INPT_AMT      => 'M.AMT',
                                                P_FLD_DOC_SEQ       => NULL,
                                                P_CLC_DOC_TYP       => 1 ,
                                                P_LNG_NO            => 1);
       EXCEPTION WHEN OTHERS THEN
          RAISE_APPLICATION_ERROR (-20015,'Error When Tax Movement , '||SQLERRM);
       END;  
       
                                                     
  END IF;
END INSRT_TAX_MOVMNT;
--##------------------------------------------------------------------------------------------------------------------------------------------##--
 PROCEDURE INSRT_RSRVD_TBL IS
   V_RSRV_NO  IAS_RESERVE_MST.DOC_NO%TYPE;
   V_RSRV_SER IAS_RESERVE_MST.DOC_SER%TYPE;
 BEGIN
   IF G_DOC_SER IS NOT NULL THEN    
         ---------------------------------------------------------------------------------                      
           BEGIN    
             SELECT NVL(MAX(DOC_NO),0)+1 INTO V_RSRV_NO FROM IAS_RESERVE_MST WHERE DOC_TYPE_REF = 53 ;
            EXCEPTION WHEN OTHERS THEN
                 V_RSRV_NO:= 1 ;
            END;    
            V_RSRV_SER := G_BRN_YEAR||2||LPAD(G_BRN_NO,6,'0')||V_RSRV_NO;
            ---------------------------------------------------------------------------------
            BEGIN
               INSERT INTO IAS_RESERVE_MST ( DOC_TYPE, 
                                             DOC_NO, 
                                             DOC_SER,
                                             DOC_NO_REF,
                                             DOC_TYPE_REF,
                                             DOC_SER_REF,
                                             C_CODE,
                                             BRN_NO, 
                                             CMP_NO, 
                                             BRN_USR, 
                                             BRN_YEAR)
                                      SELECT 2, 
                                             V_RSRV_NO, 
                                             V_RSRV_SER,
                                             ORDER_NO,
                                             53,
                                             ORDER_SER,
                                             C_CODE,
                                             BRN_NO, 
                                             CMP_NO, 
                                             BRN_USR, 
                                             BRN_YEAR
                                        FROM SALES_ORDER
                                       WHERE ORDER_NO  = G_DOC_NO
                                         AND ORDER_SER = G_DOC_SER
                                         AND ROWNUM<=1;                                 
             EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20004,'Error When Insert Into Ias_Reserve_Mst , '||SQLERRM);
             END;
             ---------------------------------------------------------------------------------
            BEGIN
               INSERT INTO IAS_RESERVE_DTL( DOC_TYPE     ,
                                            DOC_NO       ,  
                                                  DOC_SER      , 
                                            DOC_NO_REF   , 
                                            DOC_TYPE_REF ,
                                            DOC_SER_REF  ,
                                            I_CODE       ,
                                            ITM_UNT      ,
                                            W_CODE       ,
                                            EXPIRE_DATE  ,
                                            BATCH_NO     ,
                                            I_QTY        ,
                                            P_SIZE       ,
                                            P_QTY        ,
                                            CP_QTY       ,
                                            RESERVED     ,
                                            C_CODE       ,
                                            T_DATE       ,
                                            DOC_SEQUENCE , 
                                            RCRD_NO      ,
                                            ITEM_DESC    ,
                                            AD_U_ID      ,
                                            AD_DATE      ,
                                            BRN_NO       ,  
                                            BRN_YEAR     , 
                                            CMP_NO       ,
                                            BRN_USR      )
                                     SELECT 2                            , 
                                            V_RSRV_NO                    ,
                                            V_RSRV_SER                   ,
                                            G_DOC_NO         ,
                                            53                             ,
                                            G_DOC_SER        ,
                                            D.I_CODE           ,    
                                            D.ITM_UNT          ,
                                            D.W_CODE ,
                                            D.EXPIRE_DATE,
                                              NVL(D.BATCH_NO,'0'),
                                              D.I_QTY            ,
                                              D.P_SIZE           ,
                                              NVL(D.P_QTY,0)+(NVL(D.FREE_QTY,0) * NVL(D.P_SIZE,1)),
                                              NVL(D.P_QTY,0)+(NVL(D.FREE_QTY,0) * NVL(D.P_SIZE,1)),
                                              NVL(D.RESERVED,0) ,
                                              M.C_CODE            ,
                                            D.RES_DATE         ,    
                                            NULL                           ,
                                            D.RCRD_NO          ,
                                            D.ITEM_DESC        ,
                                            M.AD_U_ID,
                                            M.AD_DATE,
                                            M.BRN_NO            ,
                                            M.BRN_YEAR          ,
                                            M.CMP_NO            ,
                                            M.BRN_USR           
                                       FROM SALES_ORDER M,ORDER_DETAIL D
                                      WHERE M.ORDER_SER=D.ORDER_SER
                                        AND M.ORDER_NO  = G_DOC_NO
                                        AND M.ORDER_SER = G_DOC_SER;                               
             EXCEPTION WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR (-20005,'Error When Insert Into Ias_Reserve_Dtl , '||SQLERRM);
             END;   
      END IF;
 END;
 

PROCEDURE INSRT_ARCHV_TBL ( P_FILE_DESC IN IAS_ARCHIVES_MST.FILE_DESC%TYPE , P_FILE_NM1 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE ,P_FILE_NM2 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE DEFAULT NULL,P_FILE_NM3 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE DEFAULT NULL) IS
   V_FILE_NO  IAS_ARCHIVES_MST.FILE_NO%TYPE;   
 BEGIN
   IF G_DOC_SER IS NOT NULL THEN    
         ---------------------------------------------------------------------------------                      
           BEGIN    
             SELECT NVL(MAX(FILE_NO),0)+1 INTO V_FILE_NO FROM IAS_ARCHIVES_MST;
            EXCEPTION WHEN OTHERS THEN
                 V_FILE_NO:= 1 ;
            END;
            ---------------------------------------------------------------------------------
            BEGIN
               INSERT INTO IAS_ARCHIVES_MST ( FILE_NO,
                                              FILE_DATE,
                                              FILE_DESC, 
                                              FILE_NOTE,
                                              DOC_TYPE,
                                              DOC_NO, 
                                              DOC_SER,
                                              AD_U_ID,
                                              AD_DATE, 
                                              UP_U_ID,
                                              UP_DATE,
                                              UP_CNT, 
                                              CMP_NO,
                                              BRN_NO,
                                              BRN_YEAR, 
                                              BRN_USR,
                                              PR_REP,
                                              AD_TRMNL_NM, 
                                              UP_TRMNL_NM)
                                       SELECT V_FILE_NO,
                                              ORDER_DATE,
                                              P_FILE_DESC, 
                                              NULL,
                                              53,
                                              G_DOC_NO, 
                                              G_DOC_SER,
                                              AD_U_ID,
                                              AD_DATE, 
                                              UP_U_ID,
                                              UP_DATE,
                                              UP_CNT, 
                                              CMP_NO,
                                              BRN_NO,
                                              BRN_YEAR, 
                                              BRN_USR,
                                              PR_REP,
                                              AD_TRMNL_NM, 
                                              UP_TRMNL_NM
                                         FROM SALES_ORDER
                                        WHERE ORDER_NO  = G_DOC_NO
                                          AND ORDER_SER = G_DOC_SER
                                          AND ROWNUM<=1;                                 
             EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20006,'Error When Insert Into Ias_Archives_Mst , '||SQLERRM);
             END;
             ---------------------------------------------------------------------------------
            BEGIN
               INSERT INTO IAS_ARCHIVES_DTL( FILE_NO, 
                                             --FILE_ATTACH,
                                             FILE_PATH,
                                             AD_U_ID,
                                             AD_DATE,
                                             CMP_NO,
                                             BRN_NO,
                                             BRN_YEAR,
                                             BRN_USR,
                                             UP_CNT )
                                      SELECT V_FILE_NO, 
                                             --FILE_ATTACH, 
                                             P_FILE_NM1,
                                             AD_U_ID,
                                             AD_DATE,
                                             CMP_NO,
                                             BRN_NO,
                                             BRN_YEAR,
                                             BRN_USR,
                                             UP_CNT
                                        FROM SALES_ORDER
                                       WHERE ORDER_NO  = G_DOC_NO
                                         AND ORDER_SER = G_DOC_SER
                                         AND ROWNUM<=1; 
                                                                      
             EXCEPTION WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR (-20007,'Error When Insert Into Ias_Archives_Dtl , '||SQLERRM);
             END;   
             
             IF P_FILE_NM2 IS NOT NULL THEN
               BEGIN
                   INSERT INTO IAS_ARCHIVES_DTL( FILE_NO, 
                                                 FILE_PATH,
                                                 AD_U_ID,
                                                 AD_DATE,
                                                 CMP_NO,
                                                 BRN_NO,
                                                 BRN_YEAR,
                                                 BRN_USR,
                                                 UP_CNT )
                                          SELECT V_FILE_NO, 
                                                 P_FILE_NM2,
                                                 AD_U_ID,
                                                 AD_DATE,
                                                 CMP_NO,
                                                 BRN_NO,
                                                 BRN_YEAR,
                                                 BRN_USR,
                                                 UP_CNT
                                            FROM SALES_ORDER
                                           WHERE ORDER_NO  = G_DOC_NO
                                             AND ORDER_SER = G_DOC_SER
                                             AND ROWNUM<=1; 
                                                                          
                 EXCEPTION WHEN OTHERS THEN
                    RAISE_APPLICATION_ERROR (-20008,'Error When Insert Into Ias_Archives_Dtl , '||SQLERRM);
                 END;
             END IF;
              IF P_FILE_NM3 IS NOT NULL THEN
               BEGIN
                   INSERT INTO IAS_ARCHIVES_DTL( FILE_NO, 
                                                 FILE_PATH,
                                                 AD_U_ID,
                                                 AD_DATE,
                                                 CMP_NO,
                                                 BRN_NO,
                                                 BRN_YEAR,
                                                 BRN_USR,
                                                 UP_CNT )
                                          SELECT V_FILE_NO, 
                                                 P_FILE_NM3,
                                                 AD_U_ID,
                                                 AD_DATE,
                                                 CMP_NO,
                                                 BRN_NO,
                                                 BRN_YEAR,
                                                 BRN_USR,
                                                 UP_CNT
                                            FROM SALES_ORDER
                                           WHERE ORDER_NO  = G_DOC_NO
                                             AND ORDER_SER = G_DOC_SER
                                             AND ROWNUM<=1; 
                                                                          
                 EXCEPTION WHEN OTHERS THEN
                    RAISE_APPLICATION_ERROR (-20009,'Error When Insert Into Ias_Archives_Dtl , '||SQLERRM);
                 END;
             END IF;
                
      END IF;
 END; 
PROCEDURE INSRT_PRPRTN_SAL_ORDR_MST ( P_DOC_NO_REF      IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_NO_REF%TYPE,
                                       P_DOC_SER_REF     IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_SER_REF%TYPE,
                                       P_REF_NO          IN IAS_CHK_DOC_INOUT_QTY_MST.REF_NO%TYPE,
                                       P_DOC_DSC         IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_DSC%TYPE,
                                       P_BRN_YEAR        IN IAS_CHK_DOC_INOUT_QTY_MST.BRN_YEAR%TYPE,
                                       P_BRN_USR         IN IAS_CHK_DOC_INOUT_QTY_MST.BRN_USR%TYPE,
                                       P_BRN_NO          IN IAS_CHK_DOC_INOUT_QTY_MST.BRN_NO%TYPE   DEFAULT NULL,
                                       P_AD_TRMNL_NM     IN SALES_ORDER.AD_TRMNL_NM%TYPE     DEFAULT NULL) IS
  V_CMP_NO     S_CMPNY.CMP_NO%TYPE;                            
 BEGIN
    
     
    --GET_PARA; -- Get system Parameters and Default Values
        
        
    G_DOC_NO  := GET_DOC_NO ( P_DOC_TYP     =>  139,
                              P_DOC_SRL_TYP => 1,
                              P_BRN_YEAR    => P_BRN_YEAR, 
                              P_BRN_NO      => P_BRN_NO,
                              P_TYP_NO      => G_SO_TYPE);
    
    G_DOC_SER := GET_DOC_SER( P_DOC_TYP     =>  139,
                              P_DOC_SRL_TYP => 1,
                              P_BRN_YEAR    => P_BRN_YEAR, 
                              P_BRN_NO      => P_BRN_NO,
                              P_TYP_NO      => G_SO_TYPE,
                              P_DOC_NO      => G_DOC_NO );
    
    
    IF P_BRN_NO IS NULL THEN
       V_CMP_NO := G_CMP_NO;
    ELSE
       V_CMP_NO := IAS_BRN_PKG.GET_BR_CMP ( P_BRN_NO);
    END IF;
   
   INSERT INTO IAS_CHK_DOC_INOUT_QTY_MST ( DOC_NO,
                                           DOC_SER,
                                           DOC_DATE,
                                           A_CODE,
                                           AC_CODE_DTL,
                                           AC_NM,
                                           DOC_DSC,
                                           REF_NO, 
                                           DOC_TYPE_REF,
                                           DOC_JV_TYPE_REF,
                                           DOC_NO_REF,
                                           DOC_SER_REF,
                                           PRCSSD_FLG,
                                           EXTERNAL_POST,
                                           APPROVED,
                                           APRV_DATE,
                                           APRV_DSC,
                                           APRV_U_ID,
                                           AD_U_ID,
                                           AD_DATE, 
                                           CMP_NO,
                                           BRN_NO,
                                           BRN_YEAR,
                                           BRN_USR,
                                           AD_TRMNL_NM)
                                    SELECT G_DOC_NO,
                                           G_DOC_SER,
                                           YS_GEN_PKG.GET_SYSDATE,
                                           IAS_CST_PKG.GET_ACODE ( P_C_CODE => C_CODE),
                                           C_CODE,
                                           C_NAME,
                                           NVL(P_DOC_DSC,A_DESC),
                                           NVL(P_REF_NO,REF_DOC_NO), 
                                           53,
                                           SO_TYPE,
                                           P_DOC_NO_REF,
                                           P_DOC_SER_REF,
                                           0,
                                           67,
                                           0,--APPROVED,
                                           NULL,--APRV_DATE,
                                           NULL,--APRV_DSC,
                                           NULL,--APRV_U_ID,
                                           G_U_ID,
                                           YS_GEN_PKG.GET_CURDATE, 
                                           V_CMP_NO,
                                           P_BRN_NO,
                                           P_BRN_YEAR,
                                           P_BRN_USR,
                                           P_AD_TRMNL_NM    
                                      FROM SALES_ORDER
                                     WHERE ORDER_NO  = P_DOC_NO_REF
                                       AND ORDER_SER = P_DOC_SER_REF  
                                       AND ROWNUM<=1;    
     
                   
    EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20010,'Error When Insert Into Ias_Chk_Doc_Inout_Qty_Mst , '||SQLERRM);
 END INSRT_PRPRTN_SAL_ORDR_MST;
 
 PROCEDURE INSRT_PRPRTN_SAL_ORDR_DTL (  P_DOC_NO_REF    IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_NO_REF%TYPE,
                                        P_DOC_SER_REF   IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_SER_REF%TYPE,
                                        P_I_CODE        IN IAS_ITM_MST.I_CODE%TYPE,
                                        P_ITM_UNT       IN IAS_ITM_DTL.ITM_UNT%TYPE,                                        
                                        P_EXPIRE_DATE   IN IAS_CHK_DOC_INOUT_QTY_DTL.EXPIRE_DATE%TYPE DEFAULT NULL,
                                        P_BATCH_NO      IN IAS_CHK_DOC_INOUT_QTY_DTL.BATCH_NO%TYPE DEFAULT NULL,
                                        P_I_QTY         IN IAS_CHK_DOC_INOUT_QTY_DTL.I_QTY%TYPE,
                                        P_BARCODE       IN IAS_CHK_DOC_INOUT_QTY_DTL.BARCODE%TYPE,
                                        P_W_CODE        IN IAS_CHK_DOC_INOUT_QTY_DTL.W_CODE%TYPE,                               
                                        P_RCRD_NO_REF   IN IAS_CHK_DOC_INOUT_QTY_DTL.W_CODE%TYPE
                                         ) IS
   V_P_SIZE    IAS_ITM_DTL.P_SIZE%TYPE;   
    
                                                      
 BEGIN
    
   BEGIN
     SELECT NVL(P_SIZE,1) INTO V_P_SIZE FROM IAS_ITM_DTL WHERE I_CODE = P_I_CODE AND ITM_UNT = P_ITM_UNT AND ROWNUM<=1;
     EXCEPTION WHEN OTHERS THEN
         RAISE_APPLICATION_ERROR (-20011,' Item Unt Not There ,'||SQLERRM);
   END;
    
   G_RCRD_NO := NVL(G_RCRD_NO,0) + 1; 
     
   
     INSERT INTO IAS_CHK_DOC_INOUT_QTY_DTL ( DOC_NO,
                                             DOC_SER,
                                             I_CODE,
                                             ITM_UNT,
                                             P_SIZE,
                                             P_QTY,
                                             W_CODE,
                                             EXPIRE_DATE,
                                             BATCH_NO,
                                             I_QTY,
                                             RCRD_NO,
                                             BARCODE,
                                             DOC_TYPE_REF,
                                             DOC_JV_TYPE_REF,
                                             DOC_NO_REF,
                                             DOC_SER_REF,
                                             CMP_NO,
                                             BRN_NO,
                                             BRN_YEAR,
                                             BRN_USR,
                                             RCRD_NO_REF,
                                             DOC_SEQ,
                                             EXTERNAL_POST)
                                  VALUES  (  G_DOC_NO,
                                             G_DOC_SER,
                                             P_I_CODE,
                                             P_ITM_UNT,
                                             V_P_SIZE,
                                             P_I_QTY * NVL(V_P_SIZE,1),
                                             G_W_CODE,
                                             P_EXPIRE_DATE,
                                             P_BATCH_NO,
                                             P_I_QTY,
                                             G_RCRD_NO,
                                             P_BARCODE,
                                             53,
                                             NULL,
                                             P_DOC_NO_REF,
                                             P_DOC_SER_REF,
                                             G_CMP_NO,
                                             G_BRN_NO,
                                             G_BRN_YEAR,    
                                             G_BRN_USR,
                                             P_RCRD_NO_REF,
                                             IAS_DOC_SEQ_OTHR.NEXTVAL,
                                             67);
                   
   EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20012,'Error When Insert Into Ias_Chk_Doc_Inout_Qty_Dtl , '||SQLERRM);   
 END INSRT_PRPRTN_SAL_ORDR_DTL;

 FUNCTION GET_SAL_ORDR_STAT ( P_ORDER_NO   IN SALES_ORDER.ORDER_NO%TYPE,
                              P_ORDER_SER  IN SALES_ORDER.ORDER_SER%TYPE) RETURN NUMBER IS 
  V_STAT   NUMBER;  
 BEGIN
  
--0    Not Approved
--1    Approved
--2    Refuse
--3    In Progress
--4    Used In Invoice


          BEGIN
            SELECT DECODE(NVL(PROCESED,0),1,4,NVL(APPROVED,0)) INTO V_STAT FROM SALES_ORDER WHERE ORDER_NO=P_ORDER_NO AND ORDER_SER=P_ORDER_SER AND EXTERNAL_POST=67;
          EXCEPTION WHEN OTHERS THEN
            V_STAT :=0;
          END;
       
    RETURN (V_STAT);
   
  EXCEPTION WHEN OTHERS THEN
    RETURN(NULL);   
 END GET_SAL_ORDR_STAT;

FUNCTION GET_ICODE_AVLQTY ( P_ICODE   IN   IAS_ITM_MST.I_CODE%TYPE,
                            P_PSIZE   IN   NUMBER,
                            P_WCODE   IN   WAREHOUSE_DETAILS.W_CODE%TYPE   DEFAULT NULL,
                            P_BRN_NO  IN   S_BRN.BRN_NO%TYPE  DEFAULT NULL,
                            P_TDATE   IN   DATE     DEFAULT NULL ) RETURN NUMBER IS
   V_AVLQTY   NUMBER:=0;
   V_RES_QTY  NUMBER:=0;
BEGIN
--=======================================================
   
       BEGIN          
                  
          IF P_WCODE IS NOT NULL THEN --(1)
              SELECT SUM(NVL(I.AVL_QTY,0))/P_PSIZE
                 INTO V_AVLQTY  
                 FROM IAS_ITM_WCODE I,WAREHOUSE_DETAILS W
                WHERE I.I_CODE  = P_ICODE
                  AND I.W_CODE  = W.W_CODE
                  AND I.W_CODE  = P_WCODE
                  AND NVL(W.SHO_WC_TYP,0)<>0;
          ELSIF P_BRN_NO IS NOT NULL THEN --(2)
              SELECT SUM(NVL(I.AVL_QTY,0))/P_PSIZE
                 INTO V_AVLQTY  
                 FROM IAS_ITM_WCODE I,WAREHOUSE_DETAILS W
                WHERE I.I_CODE  = P_ICODE
                  AND I.W_CODE  = W.W_CODE
                  AND NVL(W.CONN_BRN_NO,0) = P_BRN_NO
                  AND NVL(W.SHO_WC_TYP,0)<>0;
          ELSE        
             SELECT SUM(NVL(I.AVL_QTY,0))/P_PSIZE
                 INTO V_AVLQTY  
                 FROM IAS_ITM_WCODE I,WAREHOUSE_DETAILS W
                WHERE I.I_CODE  = P_ICODE
                  AND I.W_CODE  = W.W_CODE
                  AND NVL(W.SHO_WC_TYP,0)<>0;
          END IF;  
       EXCEPTION WHEN OTHERS THEN
             V_AVLQTY:=0;
       END;
                          
       BEGIN
          IF P_WCODE IS NOT NULL THEN --(1)
              SELECT NVL(SUM(NVL(R.CP_QTY,0)),0) /NVL( P_PSIZE,1)
                   INTO V_RES_QTY
                    FROM IAS_RESERVE_DTL R,WAREHOUSE_DETAILS W
                   WHERE R.W_CODE             = W.W_CODE
                     AND R.I_CODE             = P_ICODE
                     AND NVL(R.W_CODE,0)      = P_WCODE
                     AND R.T_DATE            >= DECODE(P_TDATE,NULL,T_DATE,P_TDATE) 
                     AND NVL(R.RESERVED,0)    = 1 
                     AND NVL(R.CP_QTY,0)     >= 0 
                     AND NVL(W.SHO_WC_TYP,0)<>0;  
          ELSIF P_BRN_NO IS NOT NULL THEN --(2)
              SELECT NVL(SUM(NVL(R.CP_QTY,0)),0) /NVL( P_PSIZE,1)
                INTO V_RES_QTY
                FROM IAS_RESERVE_DTL R,WAREHOUSE_DETAILS W
               WHERE R.W_CODE             = W.W_CODE
                 AND R.I_CODE             = P_ICODE
                 AND NVL(W.CONN_BRN_NO,0) = P_BRN_NO
                 AND R.T_DATE            >= DECODE(P_TDATE,NULL,R.T_DATE,P_TDATE) 
                 AND NVL(R.RESERVED,0)    = 1 
                 AND NVL(R.CP_QTY,0)     >= 0 
                 AND NVL(W.SHO_WC_TYP,0)<>0;            
          ELSE
              SELECT NVL(SUM(NVL(R.CP_QTY,0)),0) /NVL( P_PSIZE,1)
                INTO V_RES_QTY
                FROM IAS_RESERVE_DTL R,WAREHOUSE_DETAILS W
               WHERE R.W_CODE             = W.W_CODE
                 AND R.I_CODE             = P_ICODE
                 AND R.T_DATE            >= DECODE(P_TDATE,NULL,R.T_DATE,P_TDATE) 
                 AND NVL(R.RESERVED,0)    = 1 
                 AND NVL(R.CP_QTY,0)     >= 0 
                 AND NVL(W.SHO_WC_TYP,0)<>0;   
          END IF; 
       EXCEPTION WHEN OTHERS THEN
             V_RES_QTY:=0;
       END;   
       
       V_AVLQTY := NVL(V_AVLQTY,0)-NVL(V_RES_QTY,0);
                      
       IF NVL(V_AVLQTY,0)>=0 THEN
         RETURN(V_AVLQTY);
       ELSE
         RETURN(0);
       END IF;
EXCEPTION WHEN OTHERS THEN
         RETURN(0);
END GET_ICODE_AVLQTY;       

FUNCTION GET_SYS_GUID RETURN VARCHAR2 IS
  V_SYS_GUID VARCHAR2(500);
BEGIN
  SELECT SYS_GUID() INTO V_SYS_GUID FROM DUAL;          
  RETURN V_SYS_GUID;  
EXCEPTION WHEN OTHERS THEN
    RETURN NULL;
END GET_SYS_GUID;

FUNCTION CHK_UPD_ITM ( P_I_CODE      IN IAS_ITM_MST.I_CODE%TYPE ,
                       P_W_CODE      IN WAREHOUSE_DETAILS.W_CODE%TYPE) RETURN NUMBER IS              
  V_CNT  NUMBER:=0;              
BEGIN
    ---------------------------------------------------------------------
    BEGIN
      SELECT 1 INTO V_CNT FROM IAS_PARA_ONLINE WHERE SHO_SYS_TYP=1 AND NVL(USE_AUTO_UPD,0)=1 AND ROWNUM<=1;
    EXCEPTION WHEN OTHERS THEN
      V_CNT :=0 ;
    END;
    ---------------------------------------------------------------------
    IF NVL(V_CNT,0)>0 THEN      
      -------------------------------------------------------------------
      BEGIN
        SELECT 1 INTO V_CNT FROM IAS_ITM_ONLINE WHERE I_CODE=P_I_CODE AND ROWNUM<=1;
      EXCEPTION WHEN OTHERS THEN
        V_CNT :=0 ;
      END;
      -------------------------------------------------------------------
      /*IF NVL(V_CNT,0)>0 AND P_W_CODE IS NOT NULL THEN      
          BEGIN
            SELECT 1 INTO V_CNT FROM IAS_V_ITM_WCODE_ONLINE WHERE I_CODE=P_I_CODE AND W_CODE=P_W_CODE AND ROWNUM<=1;
          EXCEPTION WHEN OTHERS THEN
            V_CNT :=0 ;
          END;
      END IF;*/
      -------------------------------------------------------------------
    END IF;
    ---------------------------------------------------------------------
    RETURN V_CNT;       
    ---------------------------------------------------------------------
EXCEPTION WHEN OTHERS THEN
    RETURN 0;
END CHK_UPD_ITM;  

FUNCTION CALL_API_UPD ( P_I_CODE    IN  IAS_ITM_MST.I_CODE%TYPE ,
                        P_W_CODE    IN  WAREHOUSE_DETAILS.W_CODE%TYPE) RETURN VARCHAR2 IS
              
              V_URL     VARCHAR2 (250);
              V_RQST    UTL_HTTP.REQ;
              V_RSPNS   UTL_HTTP.RESP;              
              V_BUFFER  VARCHAR2 (32000);
              V_CNTNT   VARCHAR2 (4000) :='{"I_CODE":"'|| P_I_CODE|| '","W_CODE":"'||P_W_CODE||'"}';
              V_RUSLT   NUMBER;
              PRAGMA    AUTONOMOUS_TRANSACTION;
              
       BEGIN
           ---------------------------------------------------------------------
           BEGIN
             SELECT UPD_API_URL INTO V_URL FROM IAS_PARA_ONLINE WHERE SHO_SYS_TYP=1 AND ROWNUM<=1;
           EXCEPTION WHEN OTHERS THEN 
             V_URL := NULL;
           END;                          
           ---------------------------------------------------------------------
           V_URL := V_URL ||'/UpdateItem';
           ---------------------------------------------------------------------
           V_RQST := UTL_HTTP.BEGIN_REQUEST (V_URL, 'POST',UTL_HTTP.HTTP_VERSION_1_1);--, 'HTTP/1.1');
           UTL_HTTP.SET_HEADER (V_RQST, 'content-type', 'application/json; charset=utf-8');
           UTL_HTTP.SET_HEADER (V_RQST, 'Content-Length', LENGTH (V_CNTNT) );
           UTL_HTTP.WRITE_TEXT (V_RQST, V_CNTNT);
           V_RSPNS := UTL_HTTP.GET_RESPONSE (V_RQST);
           ---------------------------------------------------------------------
           BEGIN
              -----------------------------------------------------------------
              LOOP
                 UTL_HTTP.READ_LINE (V_RSPNS, V_BUFFER);
                 DBMS_OUTPUT.PUT_LINE (SUBSTR (V_BUFFER, 1, 220));
                 IF SUBSTR (V_BUFFER, 1, 220) = '{"_ErrMsg":"004","_ErrNo":0}'  THEN          
                    V_RUSLT :='1';                        
                 ELSE           
                    V_RUSLT :='0';
                 END IF;                 
              END LOOP;
              ---------------------------------------------------------------- 
              DBMS_OUTPUT.PUT_LINE (V_RSPNS.STATUS_CODE);
              UTL_HTTP.END_RESPONSE (V_RSPNS);
              ----------------------------------------------------------------
           EXCEPTION WHEN UTL_HTTP.END_OF_BODY THEN
                 DBMS_OUTPUT.PUT_LINE (V_RSPNS.STATUS_CODE);                                 
                 V_RUSLT := V_BUFFER; 
                 UTL_HTTP.END_RESPONSE (V_RSPNS);                 
           END;
           ---------------------------------------------------------------------
           RETURN V_RUSLT;
           ---------------------------------------------------------------------
  EXCEPTION WHEN OTHERS THEN
           UTL_HTTP.END_RESPONSE (V_RSPNS);
           RETURN -1;
  END;   
  
End IAS_ONLINE_PKG;
/
CREATE PACKAGE Body IAS_PJ_Pkg as

--================================================================
FUNCTION Get_PJ_Name (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE,P_Lng_no In Number) RETURN VARCHAR2 Is
  v_name IAS_PROJECTS.PJ_A_NAME%TYPE;
 Begin
	 select Decode(P_Lng_no,1,pj_a_name,nvl(Pj_e_name,Pj_a_name)) 
	   Into v_name 
	   From IAS_PROJECTS
	  where Pj_No=P_Pj_No
	    and RowNum<=1;
	 RETURN(v_name);
	Exception 
	when others then
	  RETURN(Null);
End Get_PJ_Name ;
--===========================================================================================
FUNCTION Get_PJ_Sub (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER Is
  cnt Number;
 Begin
	 Select nvl(Pj_Sub,0) 
	   Into cnt 
	   From IAS_PROJECTS
	  where Pj_No=P_Pj_No
	    and RowNum<=1;
	 RETURN(cnt);
	Exception 
	when others then
	  RETURN(Null);
End Get_PJ_Sub;
--===========================================================================================
FUNCTION Get_Grp_PJ_Name (P_Grp_No In IAS_PROJECTS_GROUP.GROUP_NO%TYPE,P_Lng_no In Number) RETURN VARCHAR2 Is
  v_name IAS_PROJECTS_GROUP.GROUP_A_NAME%TYPE;
 Begin
	 select Decode(P_Lng_no,1,group_a_name,nvl(group_e_name,group_a_name)) 
	   Into v_name 
	   From IAS_PROJECTS_GROUP
	  where GROUP_NO=P_Grp_No;
	 RETURN(v_name);
	Exception 
	when others then
	  RETURN(Null);
End Get_Grp_PJ_Name ;
--===========================================================================================
FUNCTION  Check_Ac_PJ (P_a_code In ACCOUNT.A_CODE%TYPE,P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER Is
cnt     Number;
v_pj_ac Number;
Begin
  
 
 Begin 
   Select 1 
    Into cnt 
    From IAS_ACCOUNT_PJ
   Where a_code = P_a_code
     and RowNum<=1;
 Exception 
  When Others Then
    cnt:=0;
  End;
 
 If P_Pj_No Is Not Null Then     
 
	 If cnt > 0 Then     
	  Select 1 
	    Into v_pj_ac 
	    From IAS_ACCOUNT_PJ
	   Where a_code = P_a_code
	     and pj_no= P_Pj_No
	     and RowNum<=1;
	 Else
	   v_pj_ac:=2;
 End if;
 Else
    if cnt = 0 Then
       v_pj_ac:=2;
    else
       v_pj_ac:=cnt;
    end if;   
 End If;
      
 RETURN(v_pj_ac);
 
 Exception 
  When Others Then
    RETURN(0);
End;
--===========================================================================================
 FUNCTION Get_PJ_S_M (P_PJ_S_M In IAS_PROJECTS.PJ_SUB%TYPE) RETURN Number Is
cnt Number;
 Begin
	 Select Decode(Count(Distinct PJ_LEVEL),1,0,Min(PJ_Level))  
	   Into cnt
	   From IAS_PROJECTS
	  where Pj_Sub=P_Pj_s_m;
	 RETURN(cnt);
 Exception 
	when others then
	  RETURN(null);
End Get_PJ_S_M ;
--===========================================================================================
FUNCTION  Check_Use_Actv	(P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER Is
 V_Use_Actv Number;
Begin
  Select nvl(Use_Actv,1)
    Into v_Use_Actv 
    From Ias_Projects
   Where Pj_No = P_Pj_No
     and RowNum<=1;
     
     Return(v_Use_Actv);
 Exception When Others Then
    Return(1);
End Check_Use_Actv;
--===========================================================================================
FUNCTION Check_Pj_Actv (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE,P_Actv_No In IAS_ACTVTY.ACTV_NO%TYPE) RETURN 
NUMBER IS
 V_Cnt       Number;
 V_Pj_Actv Number;
Begin 
 
     Begin 
       Select 1 
        Into V_Cnt 
        From IAS_Pj_Actv
       Where Pj_No = P_Pj_No
         and RowNum<=1;
     Exception 
      When Others Then
        V_Cnt:=0;
      End;
 
     If P_Actv_No Is Not Null Then     
 
    	 If V_Cnt > 0 Then     
    	  Select 1 
    	    Into v_pj_actv 
    	    From IAS_Pj_Actv
    	   Where Pj_No = P_Pj_No
    	     and Actv_no= P_Actv_No
    	     and RowNum<=1;
    	 Else
    	   v_pj_actv:=2;
    	 End if;
     Else
        if V_cnt = 0 Then
           v_pj_actv:=2;
        else
           v_pj_actv:=v_cnt;
        end if;   
     End If;
      
     RETURN(v_pj_actv);
 
 Exception 
  When Others Then
    RETURN(0);
End Check_Pj_Actv ;
--===========================================================================================
FUNCTION Get_One_Pj_Actv (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE,P_Usr_no In NUMBER) RETURN VARCHAR2 Is
  
   v_Actv VARCHAR2(15);
 Begin
  
	Select Actv_No Into v_Actv From Ias_Pj_Actv where Pj_No=P_Pj_No;
		   	 
	RETURN(v_Actv);
 Exception 
	when others then
	  RETURN(Null);
End Get_One_Pj_Actv ;
--===========================================================================================
FUNCTION Get_One_Cc_Pj (P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN VARCHAR2 Is  
   v_Cc VARCHAR2(30);
 Begin  
	Select Cc_Code Into v_Cc From Ias_Cc_Pj where Pj_No=P_Pj_No;
		   	 
	RETURN(v_Cc);
 Exception 
	when others then
	  RETURN(Null);
End Get_One_Cc_Pj;
--===========================================================================================
PROCEDURE Chk_Pj_No ( P_Pj_No      In IAS_PROJECTS.PJ_NO%TYPE,
                      P_Lng_No     In LANG_DEF.LANG_NO%TYPE,
                      P_Usr_No     In USER_R.U_ID%TYPE,
                      P_Scr_Typ    In NUMBER DEFAULT 1,
                      P_Doc_Date   In DATE   DEFAULT NULL,
                      P_A_CODE     In ACCOUNT.A_CODE%TYPE  DEFAULT NULL,
                      P_CC_CODE    In COST_CENTERS.CC_CODE%TYPE     DEFAULT NULL,
                      P_ACTV_NO    In IAS_ACTVTY.ACTV_CODE%TYPE  DEFAULT NULL,
                      P_Pj_Nm      In Out IAS_PROJECTS.PJ_A_NAME%TYPE,
                      P_Msg_No     In Out NUMBER  ) Is

v_Inc            Number;
v_prv_scr        Number;
v_prv_rprt       Number;

 -- P_Scr_Typ = ( 1,2,3 = SCR , 4 = Report , 5 = Query)

BEGIN
  IF P_USR_NO = 1 THEN  -- USR ADMIN
      
      Select Decode(P_Lng_No,1,M.PJ_A_NAME,nvl(M.PJ_A_NAME,M.PJ_E_NAME)), nvl(M.INACTIVE,0), 1 ADD_FLAG,1 VIEW_FLAG
        Into P_pj_Nm,v_Inc,v_prv_scr,v_prv_rprt
        From IAS_PROJECTS M
       Where M.PJ_NO   = P_PJ_NO
         and M.PJ_SUB = 1
         and RowNum<=1;
  ELSE

      Select Decode(P_Lng_No,1,M.PJ_A_NAME,nvl(M.PJ_A_NAME,M.PJ_E_NAME)), nvl(M.INACTIVE,0), nvl(D.ADD_FLAG,0),nvl(D.VIEW_FLAG,0)
        Into P_pj_Nm,v_Inc,v_prv_scr,v_prv_rprt
        From IAS_PROJECTS M,IAS_PRIV_PROJECTS D
       Where M.PJ_NO = D.PJ_NO
         and M.PJ_SUB = 1
         and M.PJ_NO = P_PJ_NO
         and D.U_ID  = P_Usr_No
         and RowNum<=1;
  
  END IF;
   
    IF P_scr_typ Not In (4,5) and v_Inc <> 0 THEN
       P_Msg_No:=1306 ;
    END IF;
  
      
    IF P_scr_typ not in (4,5) and v_prv_scr = 0 THEN
       P_Msg_No:=983;
    ElsIF P_scr_typ In (4,5) and v_prv_rprt = 0 THEN
       P_Msg_No:=983;
    END IF;
    
    IF P_scr_typ Not In ( 4 ,5)  Then
       IF   P_A_CODE IS NOT NULL AND P_PJ_NO IS NOT NULL THEN
              
             IF IAS_ACODE_Pkg.Chk_Ac_Conn  (P_CONN_TYP => 2  ,P_a_code =>P_A_CODE, P_conn_code =>  P_PJ_NO)  = 0 THEN
                 P_Msg_No:=1304; 
             END IF;
               
       END IF;

       IF   P_CC_CODE IS NOT NULL AND P_PJ_NO IS NOT NULL THEN
              
             IF Ias_Cc_Code_Pkg.Check_Cc_Pj (P_Cc_Code => P_CC_CODE ,P_Pj_No =>  P_PJ_NO) = 0 THEN
                P_Msg_No:=736; 
          END IF;
               
       END IF;

    End If;
        
 Exception 
  When Others Then 
    P_Msg_No:=1305;
END Chk_Pj_No;
--===========================================================================================
End IAS_PJ_Pkg;
/
CREATE Package Body IAS_POSTING_AP_PKG Is
--=====================================================================
--## Get_Para
Procedure Get_Para ( P_Lang_no      In Pls_Integer     Default 1    ,
                                         P_User_No      In Pls_Integer    ,
                     P_Post_Type In NUMBER             Default 0    ) Is
Begin
  V_Lang_No:=P_Lang_no;
  V_User_No:=P_User_No;

 Begin

  Select Cur_code 
    Into V_Local_Cur 
    From Ex_Rate 
   Where L_f=1;

  Exception When Others Then
    Raise_application_error(-20601,ias_gen_pkg.Get_Msg(v_lang_no,227)||SqlErrm) ;
 End;
