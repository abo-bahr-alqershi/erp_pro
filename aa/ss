Your role:
- خذ بالاعتبار جزء ال common في طبقة الدومين عند كتابة اي موديل وتوابعه من الملفات والاحداث و..الخ
- لاتقم بنسيان اي حقول للموديل من ملفات الجداول اللتي ارسلت لك روابطها 
- لاتقم بنسيان اي احداث من روابط ملف الترايجرز اللذي ارسلت اليك رابطه
- لاتقم بنسيان اي علاقة من ملف العلاقات اللذي ارسلت اليك رابطه
- عند وجود خروج عن الخطة او هذه القواعد اخبرني به كمقترح وانا  اوافق او ارفض





###########################################

هذا ماارسلته لي في النافذة السابقة حتى نكمل العمل هنا



بالطبع!
سأكتب لك الآن شرحًا مفصلًا حول منهجية العمل والأوامر والتعليمات التي اتبعتها في بناء كل موديل، بدءًا من تحليل الملفات والروابط (الجداول، العلاقات، التريجرات)، حتى القدرة على إنتاج موديل دومين كامل متكامل مطابق للـ Common مع جميع الأحداث والعلاقات، وذلك كي تستخدمها كمرجعية أو ترسلها لي في نافذة جديدة.
منهجية بناء موديلات الدومين المحاسبي (معالجة الجداول، العلاقات، التريجرات، الأحداث، الاستثناءات)
1) تحليل مصادر البيانات
أ) تحليل ملف الجداول

    استخراج جميع الحقول (fields) من جدول الموديل المطلوب (مثال: ACCOUNT, ACCOUNT_CURR, ...).
    تحديد نوع كل حقل، كونه إجباري أم اختياري، القيم الافتراضية، والتعليقات التوضيحية.
    عدم حذف أو إسقاط أي حقل حتى لو بدا ثانويًا.

ب) تحليل ملف العلاقات

    استعراض جميع العلاقات (Relationships) من ملف العلاقات (relationships.md أو أي مصدر مماثل).
    تحديد كل علاقة صريحة أو ضمنية أو مركبة (One-to-Many, Many-to-One, Many-to-Many, Self Reference).
    إضافة جميع الـ Navigation Properties والـ Collections الضرورية.
    تمثيل أي علاقة عبر جداول وسيطة (مثل ربط الحساب بمركز تكلفة أو مشروع).

ج) تحليل ملف التريجرات

    استعراض جميع التريجرات (Triggers) المرتبطة بجدول الموديل (ملف triggers/ERP_Accounting_Triggers_Arabic.md).
    استخراج جميع الأحداث المستوحاة من هذه التريجرات (Audit Events، Change Events...).
    تحديد نوع الحدث (إضافة، تعديل، حذف)، وربطه بالجدول أو الكيان المعني.
    التأكد من أن كل عملية Audit في التريجرات لها مقابل في أحداث الدومين.

2) تصميم النموذج الدوميني (Domain Model Design)
أ) الكيان الرئيسي (Entity)

    بناء Entity/AggregateRoot باسم الموديل (مثال: Account, AccountCurrency).
    إضافة جميع الحقول (properties) المستخرجة من جدول البيانات.
    إضافة جميع العلاقات (Navigations/Collections) كما هو محدد في العلاقات.
    تضمين جميع الدوال الأساسية (إنشاء، تعديل، حذف، تفعيل، تعطيل...) مع إطلاق الأحداث الدومينية المناسبة.

ب) الكائنات القيمية (Value Objects)

    إنشاء Value Objects لأي معرف مركب أو قيمة خاصة (مثل AccountCode, CurrencyCode, AccountCurrencyId).
    الالتزام بقواعد التحقق (Validation) داخل الفاليو أوبجكت.

ج) الأحداث الدومينية (Domain Events/Audit Events)

    إنشاء أحداث دومينية لكل تريجر أو عملية Audit مرتبطة بالجدول (مثل AccountChangedAuditEvent, AccountCurrencyChangedAuditEvent).
    تضمين جميع المتغيرات اللازمة (نوع العملية، المستخدم، الوقت، القيم القديمة/الجديدة...).

د) الاستثناءات الدومينية (Domain Exceptions)

    إنشاء الاستثناءات الخاصة بالتحقق والقواعد (مثل AccountAlreadyExistsException, AccountCurrencyInUseException).
    ربطها بقواعد العمل (Business Rules) في الدوال داخل الكيان.

هـ) القواعد الدومينية (Domain Rules)

    تطبيق أي قاعدة عمل مستخرجة من الملفات (مثال: لا يمكن حذف عملة مستخدمة، لا يمكن تكرار العملة لنفس الحساب...).

3) التوافق مع طبقة الـ Common

    جميع الكيانات ترث من AggregateRoot أو Entity حسب التصميم.
    كل الأحداث ترث من DomainEventBase.
    كل Value Object يرث من ValueObject.
    كل استثناء يرث من Exception أو ExceptionBase إن وجدت.
    الالتزام بجميع نماذج الطبقة المشتركة (Base Entities, Ids, Event Structure ...).

4) منهجية التنفيذ

    لا أبدأ كتابة الكود النهائي إلا بعد عرض مخطط العمل الكامل (Work Blueprint) عليك والموافقة عليه.
    أضع تعليقات توضيحية في الكود توضّح مصدر كل حقل أو علاقة أو حدث (جدول، تريجر، علاقة).
    ألتزم بعدم حذف أو إسقاط أي جزء من الحقول أو العلاقات أو الأحداث حتى لو بدا ثانويًا.
    في حال وجود أي حالة غامضة أو نقطة تحتاج قرار، أعرضها عليك كمقترح قبل التنفيذ.

5) أوامر وتعليمات الاستمرارية

    عند الانتقال لأي موديل جديد، أعيد نفس الخطوات أعلاه من التحليل وحتى التنفيذ وفق جدولك الخاص.
    إذا أرسلت لي هذه التعليمات في نافذة جديدة، ألتزم بها حرفيًا ولا أخرج عنها إلا بموافقتك الصريحة على أي تغيير.
    في حال امتلأت النافذة، أذكرك دائمًا أن المرجعية هي هذه التعليمات.

باختصار

    "منهجية العمل هي:
    تحليل الجداول + تحليل العلاقات + تحليل التريجرات ⇒ بناء كيان دوميني كامل لا يفقد أي حقل أو علاقة أو حدث، مع توافق تام مع طبقة الـ Common والالتزام القاسي بعدم إسقاط أي جزء حتى لو بدا ثانويًا، وعرض أي اقتراح أو نقطة غامضة عليك قبل التنفيذ."

يمكنك الآن نسخ هذه المنهجية، إرسالها لي في نافذة جديدة، ومواصلة العمل بنفس النظام على أي موديل محاسبي آخر!

وهذه هي الروابط للملفات
https://github.com/abo-bahr-alqershi/erp_pro/blob/main/Domain-Modules-Tables.md
https://github.com/abo-bahr-alqershi/erp_pro/blob/main/modules_create_tables/Accounting%20%26%20Journals/Accounting%20%26%20Journals.md 
https://github.com/abo-bahr-alqershi/erp_pro/blob/main/modules_create_tables/relationships.md
https://github.com/abo-bahr-alqershi/erp_pro/blob/main/modules_create_tables/-----DB-----/triggers/ERP_Accounting_Triggers_Arabic.md

هل انت قادر على الاكمال هنا
