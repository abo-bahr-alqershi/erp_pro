INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_4','L_TOTAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_4','L_T_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_4','L_T_DATE','2','To Month','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_AVGTOTAL','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_DATE','2','Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_F_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_F_DATE','2','From date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_PRODUCT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_PRODUCT','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_PRODUCTS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_PRODUCTS','2','Products','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_QTY','2','Quantity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_SHIFT_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_SHIFT_CODE','2','Shifts','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_SCRAP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_SCRAP','2','Scrap','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_TOTAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_T_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_7','L_T_DATE','2','To date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_AVGTOTAL','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_DATE','2','Month','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_F_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_F_DATE','2','From Month','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_PRODUCT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_PRODUCT','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_CONSUMPTION_QTY','2','Consumption Quantiy','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_COST_V','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_COST_V','2','Variance %','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_F_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_F_DATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_ITEM','2','Material Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_ITEMCODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_ITEMCODE','2','Matial No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_ITEMDESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_ITEMDESC','2','Material Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPR
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_QTY_A','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_QTY_A','2','Actual','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_QTY_S','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_QTY_S','2','Standerd','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_QTY_V','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_QTY_V','2','Variance','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_SHF','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_SHF','2','Shop Floor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_SHIFT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_SHIFT','2','Shift','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_T_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_T_DATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_UNIT_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_UNIT_COST','2','Unit Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_UOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_UOM','2','UOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_WORK_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','L_WORK_ORDER','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES 
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','QTY','2','Quantity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','TOTAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2_P','TOTAL','2','TOTAL','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_Var_Const_C','VAR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_Var_Const_C','VAR','2','VAR','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_Var_Const_C','VRS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_Var_Const_C','VRS','2','Variance','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_Var_Const_C','YEAR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_Var_Const_C','YEAR','2','Year','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS21','ITEM_PROD','2','Final Product Accounts','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS21','CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','CC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','CC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','ACC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','ACC_CODE','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','ACC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','COST','2','Amount','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','ACC','2','Element  cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','CC','2','Cost center','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM035_4','CC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','CC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','CC','2','Cost Centers','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC','2','Element cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC_CODE','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','ACC','2','Element Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','ACC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','ACC_CODE','2','code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','ACC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','ACT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','ACT','2','ACT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','AVRG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','AVRG','2','Average','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','COST','2','Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','FC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','FC','2','From Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','CC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','CC','2','Cost Centers','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','P1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','P1','2','From Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','P2','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','P2','2','To Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','STD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','STD','2','STD','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','TC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','TC','2','To Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','VRS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','VRS','2','VAR','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC',
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC','YEAR','2','Year','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','CC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','CC','2','Cost Centers','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','CC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','CC_CODE','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','CC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','STD','2','STD','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','STD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','ACT','2','ACT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','ACT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','VRS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','VRS','2','VAR','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','COST','2','Cost','0')
INSERT INTO MRP_REP_
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC0','CC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_shop','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_shop','2','Shop Floor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_BRN_NO','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_BRN_NO','2','Branch','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_SHIFT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_SHIFT','2','Shift','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_INV_CODE','2','Inventory Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_INV_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_INV_SQ','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_INV_SQ','2','Inventory Seq','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_WORK_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_WORK_ORDER','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_INV_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_INV_DATE','2','Inventory Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_SEQ','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_ITEM_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_FDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_FDATE
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_TDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_DET2','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_TDATE','2','To','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_ITEM_CODE','2','Material Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_ITEM_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_DET1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_DET1','2','Inventory Details Ar','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_DET2','2','Inventory Details Ar','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_PERIOD','2','Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_INV_REF','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_INV_REF','2','Refrence No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_SEQ','2','Sequence','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_ITEM_DESC','2','Material Name','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_UOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_UOM','2','Unit','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_WH_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_WH_CODE','2','WareHouse Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_WH_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_WH_DESC','2','WareHouse','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_B_QTY','2','Beginning Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_B_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_R_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_R_QTY','2','Recive Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_I_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_I_QTY','2','Consumption Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_E_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_E_QTY','2','Ending Balance','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_D_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_D_QTY','2','different','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_A_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC028','L_A_QTY','2','Actual Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC026','L_B_QTY','2','Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC026','L_REMARK','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC026','L_REMARK','2','Nots','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC026','L_ADJ_CODE','2','Adjasment Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC026','L_ADJ_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC026','L_ADJ_SEQ','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC026','L_ADJ_SEQ','2',' Adjesment Seq','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2','L_CONSUMPTION_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2','L_CONSUMPTION_QTY','2','Consumption Quantiy','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046_2','L_COST_V','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','H_BOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','H_BOM','2','BOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','H_ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','H_ITEM','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','H_RQ_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','H_RQ_QTY','2','Req.Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','H_WIP_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','H_WIP_QTY','2','WIP Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_CUST_NAME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_CUST_NAME','2','Customer','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_CUST_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_CUST_ORDER','2','Cust.Req.No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_DETLS_A','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_DETLS_A','2','Arabic Detail','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_DETLS_E','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_DETLS_E','2','E- Detail','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_F_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_F_DATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_REQ_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_REQ_DATE','2','Req Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_T_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS03','L_T_DATE','2','To Date',
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','H_BOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','H_BOM','2','BOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','H_ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','H_ITEM','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','H_RQ_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','H_RQ_QTY','2','Req.Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','H_WIP_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','H_WIP_QTY','2','WIP Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_DETLS_A','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_DETLS_A','2','Arabic Detail','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_DETLS_E','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_DETLS_E','2','E- Detail','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_F_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPR
EPMPS04','L_F_DATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_INVO_NAME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_INVO_NAME','2','Customer','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_INVO_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_INVO_ORDER','2','Cust.Req.No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_REQ_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_REQ_DATE','2','Req Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_T_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS04','L_T_DATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_PRODUCTS','2','Products','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_QTY','2','Quantity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_SHIFT_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_SHIFT_CODE','2','Shifts','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_SCRAP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_SCRAP','2','Scrap','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_TOTAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_T_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC052_8','L_T_DATE','2','To Month','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS06','L_DA
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS06','L_DATE','2','Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS06','L_STS','2','Work Order Status','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS06','L_STS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS06','L_WORK','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS06','L_WORK','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC043','L_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC043','L_DATE','2','Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC043','L_SEQ','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC043','L_SEQ','2','Sequence','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC043','L_TRN_TYP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC043','L_TRN_TYP','2','Transaction Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC043','L_WORK','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC043','L_WORK','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TOTAL1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TOTAL1','2','Total By Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ACC_PRD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ACC_PRD','2','Final product account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ACC','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','STD','2','STD','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','STD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ACT','2','ACT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ACT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','VRS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','VRS','2','VAR','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','COST0','2','Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','COST0','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','PERIOD','2','Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','FACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MR
PREPPCM_VAR_AS0','FACC','2','From Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','TACC','2','To Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','TACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ACC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','QTY','2','QTY','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ACCOUNT_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ACCOUNT_PROD','2','Account of finish Good','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ACC','2','Element cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ACC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ACC_CODE','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ACC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ITEM','2','Final product account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ACC','2','Element Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ACC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','AVRG','2','Average','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','AVRG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ACC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ACC_CODE','2','code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','STD','2','STD','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','STD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ACT','2','ACT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','ACT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','VRS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','VRS','2','VAR','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','COST','2','Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','COST','1','
INSERT INTO MRP_REP_LAB (TAB_N
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','YEAR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','FACC','2','From Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','FACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','TACC','2','To Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','TACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CURR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','LOAD_STD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','LOAD_STD','2','Specified cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','TOT','1','
INSERT INTO MRP_REP_LAB 
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','COST1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CURR','2','Currency','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CURR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ELMNT_CLASS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ELMNT_CLASS','2','Cost is classified by','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CLS_PRP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CLS_PRP','2','Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CLS_PROD','2','DRT/INDRT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CLS_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CLS_FUNC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CLS_FUNC','2','Functional','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CLS_QTY','2','Activity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CLS_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CLS_FUNC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CLS_FUNC','2','Functional','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CLS_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CLS_PROD','2','DRT/INDRT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CLS_PRP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CLS_PRP','2','Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CLS_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','CLS_QTY','2','Activity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS','PERIOD','2','Cost Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','CLS_FUNC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','CLS_FUNC','2','Functional','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','CLS_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','CLS_PROD','2','DRT/INDRT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','CLS_PRP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','CLS_PRP','2','Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','CLS_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','CLS_QTY','2','Activity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','PERIOD','2','Cost Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ACC','2','Element cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ACC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ACC_CODE','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ACC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ACT_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ACT_COST','2','Actual Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CLS_FUNC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CLS_FUNC','2','Functional','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CLS_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CLS_PROD','2','DRT/INDRT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CLS_PRP','1','
INSERT INTO MRP_REP_LAB (T
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CLS_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CLS_QTY','2','Activity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','COME_ACT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','COME_ACT','2','Movables costs','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CURR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','CURR','2','Currency','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ELMNT_CLASS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ELMNT_CLASS','2','Cost is classified by','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','FACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','FACC','2','From Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','ITEM','2','Products','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','LOAD_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','LOAD_COST','2','Loaded Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CLS_FUNC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CLS_FUNC','2','Functional','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','PERIOD','2','Period cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','QTY','2','Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CLS_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CLS_PROD','2','DRT/INDRT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','TACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','TACC','2','To account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','TOT','2','Products Totals','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','TOT_ACT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','TOT_ACT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CLS_PRP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CLS_PRP','2','Type','0')
INSERT INTO MRP_RE
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CLS_QTY','2','Activity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','TOT_ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2_ALL','TOT_ACC','2','Total Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','STG_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','STG_PRODBOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','STG_PROD','2','Stage Produact','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','STG_PRODBOM','2','Stage Produact BOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','FINAL_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','FINAL_PROD','2','Final Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','FINAL_PRODBOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','FINAL_PRODBOM','2','Final Product BOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','ITEM_ROW_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSF
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','ITEM_ROW_CODE1','2','Row Material','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','ITEM_ROW_CODE1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','QTY_D','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','QTY_D','2','Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','QTY_W','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_1','QTY_W','2','On_hand_qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ELMNT_CLASS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','ELMNT_CLASS','2','Cost is classified by','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ELMNT_CLASS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS2','ELMNT_CLASS','2','Cost is classified by','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ACC','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ACC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ACC_PRD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ACC_PRD','2','Final product account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VAL
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ACT','2','ACT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CLS_FUNC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CLS_FUNC','2','Functional','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CLS_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CLS_PROD','2','DRT/INDRT','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CLS_PRP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CLS_PRP','2','Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CLS_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CLS_QTY','2','Activity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','COST0','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','COST0','2','Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','COST1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','COST1','2','Unit cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CURR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','CURR','2','Cuurency','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ELMNT_CLASS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','ELMNT_CLASS','2','Cost is classified by','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','FACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','FACC','2','From Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','PERIOD','2','Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','QTY','2','QTY','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','TACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','TACC','2','To Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS00','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ITEM','2','Products','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VAL
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ACC_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ACC_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ACC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ACC_CODE','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ACT_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','ACT_COST','2','Actual Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','COME_ACT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','COME_ACT','2','Movables costs','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','LOAD_COST','2','Loaded Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','LOAD_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TOT_ACT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TOT_ACT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','STD_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','STD_COST','2','Standard Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','COME_STD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','COME_STD','2','Movables cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','FPER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','FPER','2','From Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','ITEM','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','ITEM_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','ITEM_CODE','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','ITEM_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','ITEM_DESC','2','Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PALN-PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PER','2','Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PERIOD','2','From Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002',
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PERIOD2','2','To Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PLAN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PLAN','2','Planned','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PROD','2','Products','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','TARGET','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','TARGET','2','Target','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','TOTAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','TOTAL','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','TPER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','TPER','2','To Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TOT_STD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TOT_STD','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','QTY','2','Qty','0')
INSERT INTO MRP_REP_LAB (TAB
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','VAR','2','Deviation','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TOT','2','Products Totals','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','PERIOD','2','Period cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CURR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CURR','2','Currency','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','FACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','FACC','2','From Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TACC','2','To acconut','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CURR','2','Cuurency','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Acc','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Acc','2','Element cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Acc_desc','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Acc_desc','2','Descrption','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_CC','2','Cost Center','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_COST','2','Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_COST_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_COST_DESC','2','Cost Center','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_CREDIT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_CREDIT','2','Credit','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Dept','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Dept','2','Dept','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Remark','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Remark','2','Remark','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TOTAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TOTAL','2','Total By Stage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TRANS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TRANS','2','Trans No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TRANS_date','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TRANS_date','2','Trans Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TRANS_ref','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_TRANS_ref','2','Trans Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_acc_code','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_acc_code','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_date','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_date','2','Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','l_cc1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','l_cc1','2','Cost Center Descrption','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_REC_NO','2','Trn No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_REC_NO','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_WORK_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_WORK_ORDER','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_DATE','2','Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_STAG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VAL
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_AMT','2','Amount','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_AMT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPTRN004','L_USERID','2','User Name','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPTRN001_0)','L_USERID','2','User Name','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPTRN001_2','L_USERID','2','User Name','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPTRN001_0','L_USERID','2','User Name','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPTRN001_1','L_USERID','2','User Name','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','DATE','2','Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','FDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','FDATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','FROM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','FROM','2','From','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','FTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','FTIME','2','From Time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_SHF','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_SHF','2','Shop Floor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_STG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_STG','2','Stage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_STOP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_STOP','2','Breakdown','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','RESOURCE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','RESOURCE','2','Resource','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_JOB','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_JOB','2','Operation','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','TDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','TDATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','TIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','TIME','2','Time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_ENTDOWN','1',' 
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_ENTDOWN','2','Allowable Breakdown','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_EXDOWN','2','Not Allowable Breakdown','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_STOP_TYPE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','L_STOP_TYPE','2','  Breakdown Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','SHIFT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','SHIFT','2','  Shift ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','BTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','BTIME','2','  Breakdown Time ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','COUNT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003','COUNT','2','  Count ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','ACTUALHOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_REC_TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_REC_TOT','2','Total by Resource','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STG_TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STG_TOT','2','Total by Stage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LA
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_SHF_TOT','2','Total by shop floor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','ACTUALHOURS','2','Hours Producte planned Approve','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AVG','1','  (
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AVG','2','(Unit/Hour)%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AVGCAPCITY','1','%
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AVGCAPCITY','2','Producte planned Approve%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AVGPLANDCAPCITY','1','%
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AVGPLANDCAPCITY','2','Planned%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AVTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AVTIME','2','Available time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','CAPACITY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','CAPACITY','2','Capacity Rate','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','EFFICIENCY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','EFFICIENCY','2','Efficiency%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','ENTDOWN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','ENTDOWN','2','Entrtnal Down','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','FDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','FDATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','FROM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','FROM','2','From','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','HOURS','2','Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_PRODUCT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_PRODUCT','2','Actual Production','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_PRODUCTIVITY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_PRODUCTIVITY','2','actual efficiency%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_AVILABLETIMERUN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_AVILABLETIMERUN','2','Available to Run','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_DEVIANCE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_DEVIANCE','2','efficiency deviance%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ENTDOWN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ENTDOWN','2',' Allowable Down','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EXEPECTED_PRD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EXEPECTED_PRD','2','expected product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EXTDOWN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EXTDOWN','2',' Not  Allowable Down','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_HOURS','2','Time in hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_MINUTES','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_MINUTES','2','Time in Minutes','0')
INSERT INTO MR
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_OVERTIME','2','Overtime','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PLANED_PRODUCT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PLANED_PRODUCT','2','Planned Production','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PRODUCTE_PLANED','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PRODUCTE_PLANED','2','plan product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PRODUCTIVITY_PLANED','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PRODUCTIVITY_PLANED','2','efficiency plan%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_SHIFT_RUN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_SHIFT_RUN','2','Shift Run','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STANDERDH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STANDERDH','2',' Standerd  production quantity in hours*','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STANDERDM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STANDERDM','2',' Standerd  production quantity in Minuts*','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STG','2','Stage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','OFFTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','OFFTIME','2','Official Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','OVERTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','OVERTIME','2','Over Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','PERIOD','2','Hours Work','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','PRODUCT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','PRODUCT','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','PRODUCTIVITY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','PRODUCTIVITY','2','%Productivity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','PROD_UNIT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','PROD_UNIT','2','Production Unit-Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','RESOURCE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','RESOURCE','2','Resource
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','RUNTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','RUNTIME','2','Actual Running','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','SHIFT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','SHIFT','2','Shift','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','STANDARD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','STANDARD','2','  (Unit/Hour)','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','TDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','TDATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','TO','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','TO','2','To','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','UTILIZATION','1','%
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','UTILIZATION','2','Utilization%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_SHF','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_SHF','2','Shop Floor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EXDOWN_PRSNTAG','2','Percentage not allowd Lossing time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_N
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EXDOWN','2','Not Allowed Lossing time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EXDOWN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ENTDOWN_PRSNTAG','1',' 
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ENTDOWN_PRSNTAG','2','Percentage  allowd Lossing time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_CF_LOSSING_TIME_PRSNTAG','2','Percentage  Lossing time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_CF_LOSSING_TIME_PRSNTAG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','CF_LOSSING_TIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','CF_LOSSING_TIME','2','Lossing time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','CF_PROFORMANCE_EFFICINCY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','CF_PROFORMANCE_EFFICINCY','2','Actual efficiency  Utilization','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PROFORMMANCE','2','performance%','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','LOSS_TOT_BYSTG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','LOSS_TOT_BYSTG','2','Loss Time By Stage','0')
INSERT INTO MRP_REP_LAB (TAB_N
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','LOSS_TOT_BYSHF','2','Loss Time By Shop floor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','LOSS_TOT_BYREP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','LOSS_TOT_BYREP','2','Loss Time By Shop Report','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_PRODUCT_TIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_PRODUCT_TIME','2','Actual Production Time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PROFORMMANCE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_JOB','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_JOB','2','operation','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AL_BIAN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','AL_BIAN','2','declaration','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_SCRAP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_SCRAP','2','Actual Scrap','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STANDERD_SCRAP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STANDERD_SCRAP','2','Allowed Scrap','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_SCRAP_PER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ACTUAL_SCRAP_PER','2','Actual Scrap percentage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STANDERD_SCRAP_PER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_STANDERD_SCRAP_PER','2','Allowed Scrap percentage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_DEVIANCE_PER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_DEVIANCE_PER','2',' deviance Scrap percentage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_NOT_ALLOWD_QTY_SCRAP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_NOT_ALLOWD_QTY_SCRAP','2','  Scrap not allowd Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_SHIFT_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_SHIFT_PRODP','2',' Production Of Shifts','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_OVER_PRODP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_OVER_PRODP','2',' Production Of Overtime','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ALL_PRODP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ALL_PRODP','2',' 
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ALL_SCRAP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_ALL_SCRAP','2',' Total Scrap Production ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_TOT_SCRAP_PER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_TOT_SCRAP_PER','2','  Scrap  Percentage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EFFICINCY_AVG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_EFFICINCY_AVG','2','  efficiency  Average','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PROD_participation_PER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_PROD_participation_PER','2',' Percentage of participation in Production  ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM062','ASSEMB1','2','From Assembler','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM062','ASSEMB1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM062','ASSEMB2','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM062','ASSEMB2','2','To Assembler','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM011','DV1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM011','DV1','2','From Variable','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM011','DV2','2','To Variable','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM011','DV2','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM011','MONTH1','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM011','MONTH1','2','To Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM011','MONTH2','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM011','MONTH2','2','To Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM015','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM015','PERIOD','2','Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_1','TTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_1','TTIME','2','To time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_1','HOURS','2','Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_1','HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_4','HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_4','HOURS','2','Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_4','TTIME','2','To Time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_4','TTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_5','TTIME','2','To Time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_5','HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_5','HOURS','2','Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_2','TTIME','2','To Time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_2','TTIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_2','HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_2','HOURS','2','Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_3','HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS003_3','HOURS','2','Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','L_SHIFT_PROD','2','Shift Produce','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','EXTDOWN','2','External down','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010','L_END_BAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010','L_OPEN_BAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010','L_OPEN_BAL','2','Open day  Balance','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010','L_END_BAL','2','End day Balance','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010','L_GET_BAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010','L_GET_BAL','2
','draw From Warehouse','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010','L_DATE','2','Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010','L_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','COST','2','Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ACTUALCONSUPTION751H','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ACTUALCONSUPTION751H','2','Actual Consumption','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_CONSUMPTION','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_CONSUMPTION','2','Consumption','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_CONSUMPTION_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_CONSUMPTION_COST','2','Consumption Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_CONSUMPTION_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_CONSUMPTION_QTY','2','Consumption Quantiy','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_COST_V','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_COST_V','2','Variance %','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SHF','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ITEM','2','Material Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ITEMCODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ITEMCODE','2','Matial No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ITEMDESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ITEMDESC','2','Material Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ITEM_COSTQ','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ITEM_COSTQ','2','Material Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_PROD_COST_R','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_PROD_COST_R','2','Production Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_QTY_A','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_QTY_A','2','Actual','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_QTY_S','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_QTY_S','2','Standerd','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_QTY_V','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_QTY_V','2','Variance','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_RCVB','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_RCVB','2','Receive form General Warehouse','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SCRAPK','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SCRAPK','2','Scrap Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SCRAP_COSTALLOWD_T','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SCRAP_COSTALLOWD_T','2','Cost Of Allowed Scrap','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SCRAP_COSTNOTALLOWD_W','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SCRAP_COSTNOTALLOWD_W','2','Cost Of Not Allowed Scrap','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SCRAP_COST_S','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SCRAP_COST_S','2','Scrap Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_STANDERDCONSUMJ','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_STANDERDCONSUMJ','2','Standerd Consumption For Actual Production','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_STANDERDCONSUMSCRPL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_STANDERDC
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ScrapdiscretionaM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_ScrapdiscretionaM','2','Scrap discretional Parentage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_TRANS31F','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_TRANS31F','2','Transferee From','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_TRANS32C','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_TRANS32C','2','Transferee To','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_TRANS3D','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_TRANS3D','2','refund To General Warehouse','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_UNIT_COST','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_UNIT_COST','2','Unit Cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_UOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_UOM','2','UOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_deviance_ACCUAL_N','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_WORK_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_WORK_ORDER','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_T_DATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_T_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_F_DATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_F_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SHIFT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_SHIFT','2','Shift','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_PRODUCT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_PRODUCT','2','Products','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_BOM','2','BOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_BOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','l_P_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','l_P_QTY','2','Prduce Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS002','PALN-PROD','2','Plan Execute average','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES 
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','L_deviance_ACCUAL_N','2','Actual  Deviance Parentage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','TOTAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC046','TOTAL','2','TOTAL','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS006_1_A','EXTDOWN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC','2','Element cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AC2','ACC_CODE','2','Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC030','L_BATCH_NO','1','
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC030','L_BATCH_NO','2','Producte Batch','0')
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC030','L_ITMCLS','1','
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC030','L_ITMCLS','2','Item Class','0')
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC030','L_PROD','1','
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC030','L_PROD','2','Producte','0')
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC031','L_BATCH_NO','1','
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC031','L_BATCH_NO','2','Producte Batch','0')
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC031','L_ITMCLS','1','
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC031','L_ITMCLS','2','Item Class','0')
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC031','L_PROD','1','
INSERT INTO MRP_REP_LAB ( TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ('MRPREPSFC031','L_PROD','2','Producte','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','BATCH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','BATCH','2','Batch','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','DATE','2',' The Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','ENTDOWN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','ENTDOWN','2','Enternal Down','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','EXTDOWN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','FDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','FDATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','JOB','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','JOB','2','operation ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','L_PROD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','L_PROD','2','Production ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','L_SCRAP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','L_SCRAP','2','Scrap ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','L_SCRAP_PER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','L_SCRAP_PER','2','Scrap percentage ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','L_SHF_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','L_SHF_CODE','2','SHOP FLOOR','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','MACHINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','MACHINE','2','Resource','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','PRODUCT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','PRODUCT','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','QTY','2','Quantity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','RUN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','RUN','2','Running','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','SHIFT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','SHIFT','2','Shift','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','STG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','STG','2','Stage ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','TDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','TDATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','UNIT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','UNIT','2','UOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','WH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MR
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','WO','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS008','WO','2','Work Order ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','ATT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','ATT','2','Attachment','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','BATCH','1','
INSERT INTO MRP_REP_LAB (TAB_NME
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','CUSTOMER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','CUSTOMER','2','Cust Order No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','DATE','2',' The Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','DESC','2',' Description','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','FDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','FDATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','LINE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','LINE','2','Line','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','L_SHF_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','L_SHF_CODE','2','SHOP FLOOR','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','L_SOURCE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','L_SOURCE','2','release source','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','PLAN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','PLAN','2','Plan No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','PRODUCT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','PRODUCT','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','QTY','2','Quantity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','SHIFT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','SHIFT','2','Shift','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','TDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','TDATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS009','WO','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR)
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM029_1','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM029_1','QTY','2','Quantity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM029_1','CC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM029_1','CC','2','Cost Center','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM029_1','ITM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM029_1','ITM','2','Products','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM029_1','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM029_1','TOT','2','Total','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010_1','L_BAL','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010_1','L_BAL','2',' Balance','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010_1','L_TRANS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010_1','L_TRANS','2','Warehouse Trnsaction','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010_1','L_WH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC010_1','L_WH','2','Warehouse ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ( 'MRPREPMPS006_1_A', 'TOTAL_TIME', 1, '
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ( 'MRPREPMPS006_1_A', 'TOTAL_TIME', 2, 'Total time', 0
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ( 'MRPREPMPS006_1_A', 'L_SHIFT_RUN', 1, ' 
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ( 'MRPREPMPS006_1_A', 'L_SHIFT_RUN', 2, '  Shift  Run', 0
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ( 'MRPREPMPS006_1_A', 'AVG_TOT', 1, '   
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ( 'MRPREPMPS006_1_A', 'AVG_TOT', 2, '(Unit/Hour)% / Total Time', 0
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ( 'MRPREPMPS006_1_A', 'AVG_RUN', 1, '   
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR ) VALUES ( 'MRPREPMPS006_1_A', 'AVG_RUN', 2, '(Unit/Hour)% /   Available Time', 0
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_BATCH_NO','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_BATCH_NO','2','Batch No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_BOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_BOM','2','BOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_F_SF_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_F_SF_DATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_F_SF_TIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_F_SF_TIME','2','From Time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_ITEM_OTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_ITEM_SCRAP_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_ITEM_SCRAP_QTY','2','Scrap Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_JOB_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_JOB_CODE','2','Operation','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_LAB_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_LAB_CODE','2','Supervisor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_LN_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_LN_CODE','2','Product Line ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_PERIOD','2','Wc Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_PRODUCTS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_PRODUCTS','2','Products','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_RCE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_RCE','2','Resource','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SCRAP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SCRAP','2','Scraps','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_CODE','2','WC Code.','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_DATE','2','WC Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_DETAILS_A','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_DETAILS_A','2','Local Details','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_DETAILS_F','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_DETAILS_F','2','Forigen details','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_SEQ','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SF_SEQ','2','WC Seq.','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SITEM_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SITEM_CODE','2','Scrap Source','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SPRD_TYPE_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_SPRD_TYPE_DESC','2','Scrap Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_STG_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_T_SF_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_T_SF_DATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_T_SF_TIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_T_SF_TIME','2','To time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_WH','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_WH','2','Warehouse','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_WORK_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_WORK_ORDER','2','Work order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_YPRD_TYPE_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_YPRD_TYPE_DESC','2','Product Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_Y_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_3','L_Y_QTY','2','Product Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','BATCH_HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','BATCH_HOURS','2','Batches Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','BATCH_MINUS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','BATCH_MINUS','2','Batches Mintus','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_ALT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_ALT','2','Alternate','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_BATCH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_BATCH','2','Batch No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_BOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_BOM','2','BOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_BTCH_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_BTCH_QTY','2','Batch Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_FDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_FDATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_ITEM','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_ITEM_R','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_ITEM_R','2','Items Row','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_ITEM_RG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_LEADHOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_LEADHOURS','2','Stage Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_LEADMINTS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_LEADMINTS','2','Stage Mintus','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_QTY','2','Product Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_R_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_R_QTY','2','Net qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_SCRAP_PER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_SCRAP_PER','2','Scrap %','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_SCRAP_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_SCRAP_QTY','2','Scrap Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_STG','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_STG','2','Stage','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_TDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_TDATE','2','To Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_TOT_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_TOT_QTY','2','Total Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_UNIT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_UNIT','2','UOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_APP_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_APP_DATE','2','Approve Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_DETLS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_DETLS','2','Order Detaile','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_INPUT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_INPUT','2','Entry Source','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_SHOP_FLOOR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_SHOP_FLOOR','2','Shop Floor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_STATUS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_STATUS','2','Status','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_WORK_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_WORK_ORDER','2','Work Order',
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','l_RELASE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','l_RELASE','2','Relase Source','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','l_RELASE_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','l_RELASE_DATE','2','Relase Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','EXP_PRIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','EXP_PRIOD','2','Expected Production Period','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_R_ITMQTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_R_ITMQTY','2','Row required Qty to produce remain Qty of product  ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_W_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_W_QTY','2','Qty in WIP ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_P_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_P_QTY','2','Produce Qty ','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_REST_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_REST_QTY','2','Remain from Required Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_R_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_R_QTY','2','Qty Required for  Production','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','WORK_HOURS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','WORK_HOURS','2','Work order Hours','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','WORK_MINUS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','WORK_MINUS','2','Work Order Mintus','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_BATCH','2','Batch No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_BOM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_BOM','2','BOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_FDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_FDATE','2','From Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_ITEM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_ITEM','2','Product','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_QTY','2','Product Quntity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_TDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_TDATE','2','To 
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_UNIT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','H_UNIT','2','UOM','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_ACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_ACC','2','Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_BATCH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_COMMIT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_COMMIT','2','Mr /Warehouse supervisor for receive Production by Export Movement','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_DETLS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_DETLS','2','Order Detaile','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_INPUT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_INPUT','2','Entry Source','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_MTSQ','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_MTSQ','2','Export Seq','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_MT_OERDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_MT_OERDER','2','Export Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_SHOP_FLOOR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_SHOP_FLOOR','2','Shop Floor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_STATUS','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_STATUS','2','Status','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_SUPRSHF','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_SUPRSHF','2','Shop floor supervisor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_WCRD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_WCRD','2','Work Card','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_WITCH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_WITCH','2','Production supervisor','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_WORK_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','L_WORK_ORDER','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','WORK_MINUS','2','Work Order Mintus','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','l_RELASE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','l_RELASE','2','Relase Source','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','l_RELASE_DATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC021_3','l_RELASE_DATE','2','Relase Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_BATCH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_BATCH','2','Batch','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_CRD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_CRD','2','Card No','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_CRDDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_CRDDATE','2','Card Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_CRTDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_CRTDATE','2','Create Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_DIF','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_DIF','2','Different','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_ITM','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_ITM','2','Material','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_NEW','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_NEW','2','New Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_ONHAND','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_ONHAND','2','On hand Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_SYSDATE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_SYSDATE','2','System Date','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_TRNTYP','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_TRNTYP','2','Trans Type','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_WH','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_WH','2','Warehouse','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_WO','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC025_2','L_WO','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_V_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','H_V_QTY','2','Qty in Onyx','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_D_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS001','L_D_QTY','2','Remain  Qty','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS004','QTY_PLN','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS004','QTY_PLN','2','Qty. Plan','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS004','QTY_PRD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS004','QTY_DVTION','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPMPS004','QTY_DVTION','2','Qty. Divition','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_LAB_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_LAB_CODE','2',' Labore','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_LAB_DSC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_LAB_DSC','2','Descreption','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_ITEM_CODE','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_ITEM_CODE','2','Material Code','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_ITEM_DESC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_ITEM_DESC','2','Item Name','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_WORK_ORDER','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_WORK_ORDER','2','Work Order','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_QTY','2','Quantity','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_TIME','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_TIME','2','Time','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_JOB','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC022_1','L_JOB','2','Operations','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','QTY','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','QTY','2','Qty','0')
INSERT INTO MRP_REP_LAB (TAB
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','VAR','2','Deviation','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TOT','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TOT','2','Products Totals','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','PERIOD','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','PERIOD','2','Period cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CURR','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','CURR','2','Currency','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','FACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','FACC','2','From Account','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TACC','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS_ALL','TACC','2','To acconut','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPPCM_VAR_AS0','CURR','2','Cuurency','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Acc','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Acc','2','Element cost','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Acc_desc','1','
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG_NO, DSC, L_USR) VALUES ('MRPREPSFC055','L_Acc_desc','2','Descrption','0')
INSERT INTO MRP_REP_LAB (TAB_NME, LAB_NME, LNG
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CNTRY_NO','99')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_ADES','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_ASHT','599')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_EDES','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_ESHT','598')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_MAIL','597')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_ADDR','595')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_FTEL','594')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_STEL','593')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_FAX','592')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5201','S_COMPNY','CMP_URL','596')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7101','MRP_PCM_COST_CENTER','CC_CODE','33')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7101','MRP_PCM_COST_CENTER','PERIOD','35')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7101','MRP_PCM_COSTCENTER_CRITERIONS','ACC_LP','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7101','MRP_PCM_COSTCENTER_CRITERIONS','DCR_CODE','329')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7101','MRP_PCM
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7101','MRP_PCM_COSTCENTER_CRITERIONS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7101','MRP_PCM_DISTRIBUTION_EFFECT','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7102','MRP_PCM_COST_CENTER','CC_CODE','40')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7102','MRP_PCM_COST_CENTER','PERIOD','35')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7102','MRP_PCM_COSTCENTER_CRITERIONS','ACC_LP','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7102','MRP_PCM_COSTCENTER_CRITERIONS','DCR_CODE','330')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7102','MRP_PCM_COSTCENTER_CRITERIONS','DIS_EFFECT','37')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7102','MRP_PCM_COSTCENTER_CRITERIONS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7102','MRP_PCM_DISTRIBUTION_EFFECT','ITEM_CODE','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_DISTRIBUTION_VARIABLES','DV_CODE','324')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_DISTRIBUTION_VARIABLES','UNIT_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_DISTRIBUTION_VARIABLES','BASEDON','323')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_DISTRIBUTION_VARIABLES','IND_CALCULAT','307')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_DISTRIBUTION_VARIABLES','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_DISTRIBUTION_VARIABLES','IND_ONCE','45')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_VARIABLES_VALUES','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_VARIABLES_VALUES','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7103','MRP_PCM_VARIABLES_VALUES','CV_VALUE','48')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_COSTING_SUMMARY','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_COSTING_SUMMARY','ACC_CODE','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_COSTING_SUMMARY','AMTL','61')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VA
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_VARIANCE','AMT','63')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_VARIANCE','VRCC_CODE','342')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_VARIANCE','VRC_CODE','343')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_VARIANCE','NOTE','147')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_VARIANCE','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_VARIANCE','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_VARIANCE','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7107','MRP_PCM_VARIANCE','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','RECORD_NO','659')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','J_DATE','792')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','IND_STATE','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_DLS','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_DLS','ACC_CODE','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_DLS','CUR_CODE','830')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_DLS','AMT_DEP','475')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_DLS','AMT_CRD','476')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7104','MRP_PCM_MRP_RECORDS_DLS','J_DESC','88')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7064','MRP_PCM_VARIANCE_REASONS','VRC_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7064','MRP_PCM_VARIANCE_REASONS','VRC_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7064','MRP_PCM_VARIANCE_REASONS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7064','MRP_PCM_VARIANCE_REASONS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7064','MRP_PCM_VARIANCE_REASONS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7064','MRP_PCM_VARIANCE_REASONS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7064','MRP_PCM_VARIANCE_REASONS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7063','MRP_PCM_VARIANCE_CLASS','VRCC_CODE','342')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7063','MRP_PCM_VARIANCE_CLASS','VRCC_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7063','MRP_PCM_VARIANCE_CLASS','VRCC_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7063','MRP_PCM_VARIANCE_CLASS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7063','MRP_PCM_VARIANCE_CLASS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7063','MRP_PCM_VARIANCE_CLASS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7063','MRP_PCM_VARIANCE_CLASS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7063','MRP_PCM_VARIANCE_CLASS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONSTANT','SEQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONSTANT','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONSTANT','ACC_CODE','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONSTANT','CUR_CODE','830')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONSTANT','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONSTANT','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONSTANT','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONSTANT','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONS_PERIOD','AMT','344')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONS_PERIOD','PERIOD_CODE','419')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7062','MRP_PCM_STD_COST_CONS_PERIOD','DESC_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','DV_CODE','324')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','DV_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','DV_DESC_E','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','IND_USG_UO
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','UNIT_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','BASEDON','323')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','IND_CALCULAT','307')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','IND_ASSIGN','311')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','IND_ONCE','306')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7059','MRP_PCM_DISTRIBUTION_VARIABLES','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7058','MRP_PCM_DISTRIBUTION_GROUP','DGROUP_CODE','630')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7058','MRP_PCM_DISTRIBUTION_GROUP','DGROUP_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7058','MRP_PCM_DISTRIBUTION_GROUP','DGROUP_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7058','MRP_PCM_DISTRIBUTION_GROUP','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7058','MRP_PCM_DISTRIBUTION_GROUP','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7058','MRP_PCM_DISTRIBUTION_GROUP','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7058','MRP_PCM_DISTRIBUTION_GROUP','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7058','MRP_PCM_DISTRIBUTION_GROUP','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5207','S_USERROLE','FORM_NO','4')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5207','S_USERROLE','FORM_NAME','6')
 INSERT INTO  MRP_TRAC_DICTIONARY_D
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5207','S_USERROLE','S_FG_PRN','1026')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5207','S_USERROLE','S_FG_ENT','17')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5207','S_USERROLE','S_FG_QRY','14')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5207','S_USERROLE','S_FG_DEL','15')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5207','S_USERROLE','S_FG_UPD','16')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5408','S_REP_LAB','LAB_NME','172')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5408','S_REP_LAB','DSC','173')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5408','S_REP_LAB','LNG_NO','171')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_TAB_NAME','183')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_COL_NAME','184')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_SEQ_TYP','186')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_INCRBY_VAL','182')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_INIT_VAL','193')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_SEQ_CONC','529')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','TRIG_NAME','530')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_COL1','531')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_COL2','532')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_COL3','533')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_COL4','534')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_COL5','535')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5405','S_SEQ_CTL','S_COL6','536')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5404','S_FLAGS','FLG_CODE','25')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5404','S_FLAGS','FLG_VALUE','26')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5404','S_FLAGS','LANG_NO','11')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5404','S_FLAGS','FLG_DESC','604')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5404','S_FLAGS','FLG_ST','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','JOB_CODE','405')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','CMP
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','JOB_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','JOB_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','JOB_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','JOB_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','STG_CODE','409')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','UNIT_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6059','MRP_CRP_OPERATIONS_JOBS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','YER_CODE','422')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','BPM_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','BPM_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','BPM_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','PERIOD_TYPE','807')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_DTLS','PLAN_NO','234')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_DTLS','PERIOD_NO','419')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_DTLS','QTR','255')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_DTLS','PERIOD_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_DTLS','PERIOD_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_DTLS','F_DATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_DTLS','T_DATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , C
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_DTLS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_ITEMS','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_ITEMS','ITEM_CODE','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_ITEMS','ITEM_QTY_R','239')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_ITEMS','ITEM_QTY_A','238')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_ITEMS','ITEM_CST','237')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6612','MRP_MPS_BRNCH_PLN_ITEMS','ITEM_QTY_WIP','241')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CUST_ORDER','223')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CUST_DATE','222')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CUST_DATE_F','268')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CUST_DATE_T','269')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CUST_ID','413')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CUST_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CUST_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','P_CLS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','CRT_USR','1
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_DTLS','BOM_CODE','401')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_DTLS','ITEM_QTY_WIP','257')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_MPS_CSTMR_ORDR_DTLS','ITEM_QTY_RE','240')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_SGS_GENERAL_PARAMETARS','MRP_ONX_VERSION','318')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6691','MRP_SGS_GENERAL_PARAMETARS','MRP_BOM_USE_COLOR','312')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','LN_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','LN_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','LN_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','LN_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6056','MRP_SGS_LINES_CODING','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','STG_CODE','409')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','STG_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','STG_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','CRT_U
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6057','MRP_SGS_STAGES_DEFINITION','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','STG_CODE','409')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','STG_MAIN','700')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','STG_LVL','207')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','UNIT_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','STG_PRIORITY','253')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6058','MRP_SGS_STAGES_CODING','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','SR_CODE','274')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','SR_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','SR_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','UP_USR','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','UP_DATE','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6451','MRP_CRP_SCRAP_RSON_COD','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FO
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6452','MRP_CRP_UNITS_COST','UNT_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6452','MRP_CRP_UNITS_COST','UNT_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6452','MRP_CRP_UNITS_COST','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6452','MRP_CRP_UNITS_COST','CR_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6452','MRP_CRP_UNITS_COST','UP_USR','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_N
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6452','MRP_CRP_UNITS_COST','UP_DATE','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','ITEMS_CLAS','801')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','CLAS_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','CLAS_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','UP_DATE','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','PU_USR','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6453','MRP_CRP_ITEMS_CLASS','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','ITEM_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','ITEM_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','UNIT_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','DIVISIBILITY','810')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','ITEMS_CLAS','801')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','LOTSIZE','273')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','ITEM_SIZE','629')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','REORER','631')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','CST_BEGIN','302')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','CST_AVG','271')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','CST_LAST_PROD','208')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','CST_STANDR','213')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','BACH_USE','319')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','EXPIRE_USE','320')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','MULTI_BOM','321')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_DETAILS','PQC_CTR','322')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_CATEGORY','CTGR','802')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_CLASS_OPTIONS','ITEM_OPTION','308')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_CLASS_OPTIONS','OFFSET','205')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6454','MRP_CRP_ITEMS_CLASS_OPTIONS','PRIORITY','253')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6455','MRP_BOM_SCRAPS','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6455','MRP_BOM_SCRAPS','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6455','MRP_BOM_SCRAPS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','BM_CODE','400')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','BM_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','BM_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','BM_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','BM_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6456','MRP_BOM_BOM_METHOD','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','BOM_CODE','401')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','BOM_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','BOM_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','ITEM_CODE','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','BM_CODE','400')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','BOM_QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','BOM_CLAS','801')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','LEAD_TIME','613')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','EMP_ID','608')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','IND_DEFAULT','309')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','BOM_COLOR','809')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','FRM_DATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','T_DATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','CRT_USER','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_MSTR','MRP_BOM_USE_COLOR','312')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_STAGES','STG_CODE','409')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_STAGES','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_STAGES','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','M
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_OPERATIONS','JOB_CODE','405')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_OPERATIONS','LVL_JOB','207')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_OPERATIONS','EQUAL_STG_PER','205')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_OPERATIONS','REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_OPERATIONS','OPTIONAL','314')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_ROW','ROW_ORDER','200')
 INSERT INTO  MRP_TRAC_DI
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_ROW','BOM_ROW','606')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_ROW','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_ROW','SCRAP_PER','212')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_ROW','OPTIONAL','314')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6457','MRP_BOM_BOM_ROW','ATP','300')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL','LS_CODE','426')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL','LS_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL','LS_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL','LS_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL','LS_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL_RATE','LS_RATE','639')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL_RATE','FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6251','MRP_CRP_LABORS_SKILL_RATE','TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','LAB_CODE','501')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  ,
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','LAB_NAME_F','647')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','LAB_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','LAB_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','P_MULTI_SHIFT','374')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','LS_CODE','426')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','EMP_ID','648')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','P_MULTI_LOC','373')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','LAB_TYPE','813')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','LAB_CATG','801')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','LAB_CONTRACT','817')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','UP_DATE','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABORS_CODING','UP_USR','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABOR_RATE_PIECES','ITEM_CODE','651')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABOR_RATE_PIECES','MCH_CODE','503')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABOR_RATE_PIECES','DATE_F','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABOR_RATE_PIECES','DATE_T','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABOR_RATE_PIECES','RAT_CST','119')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABOR_RATE_TIME','DATE_F','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABOR_RATE_TIME','DATE_T','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6252','MRP_CRP_LABOR_RATE_TIME','RAT_CST','118')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','GRP_NO','630')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_C
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','GRP_ADES','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','GRP_EDES','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','GRP_UP','692')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','CR_USER','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','UP_USER','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','CR_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6254','MRP_CRP_RESCOURCES_GRP','UP_DATE','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','RCE_SER','506')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','RCE_ADES','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','RCE_EDES','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','GRP_NO','630')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','STG_CODE','409')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','JOB_CODE','405')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','MAXRATE','697')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','MINRATE','698')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','FIN_PROD','375')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','AVLBLE_ALL','393')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','RCE_MACH','814')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','UP_USR','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOURCES','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESOU
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RECE_SHIFTS','SHIFT_CODE','421')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RECE_SHIFTS','SHF_NOTE','684')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_ITEMS_FRM_RES','ITEM_CODE','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_ITEMS_FRM_RES','RATE_PRCNT','291')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_ITEMS_FRM_RES','V_QTY','198')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_ITEMS_FRM_RES','POOR_EFF','197')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES (
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_ITEMS_FRM_RES','POOR_PROD','195')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_ITEMS_FRM_RES','POOR_CONS','194')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_ITMSDAM_FRM_RES','ITEM_SCRAP','508')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_ITMSDAM_FRM_RES','SCRAP_QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RES_SKILL','LS_CODE','426')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RES_SKILL','LS_COUNT','199')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESONABLE_DOWN','SHIFT_CODE','421')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESONABLE_DOWN','BDD_CODE','701')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6256','MRP_CRP_RESONABLE_DOWN','BD_HW','658')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','BDD_CODE','505')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','BDD_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','BDD_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','BDD_LEGAL','833')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','IND_NEED_MAINT','372')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6253','MRP_CRP_BRKDOWN_RESON','UP_DATE','1013')
 INSERT INTO  MRP_TRAC_
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','ITEM_VIEW','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','ITEM_VIEW','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','ITEM_VIEW','ITEM_CODE','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','ITEM_VIEW','YER_CODE','422')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','PERIOD_DESC','604')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','PLAN_QTY','239')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','OPEN_QTY','251')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','ACTUAL_SEALS','214')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','SALES_PALN','260')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','AVIL_QTY','216')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','REQ_QTY','240')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','QTY_END_PER','256')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','PERIOD_NO','419')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6613','PERIOD_QTY','CUSTORD_SEALS','224')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6651','MRP_SGS_PERIOD_COSTONG','PERIOD_CODE','419')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6651','MRP_SGS_PERIOD_COSTONG','PERIOD_NAME_F','604')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6651','MRP_SGS_PERIOD_COSTONG','P_CLS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6651','MRP_SGS_PERIOD_COSTONG','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6652','MRP_MPS_WORK_ORDR_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6652','MRP_MPS_WORK_ORDR_MSTR','RELASE_DATE','258')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6652','MRP_MPS_WORK_ORDR_MSTR','FORCAST_T','266')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6652','MRP_MPS_WORK_ORDR_MSTR','IND_STATUS','805')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6652','MRP_MPS_WORK_ORDR_MSTR','CLS_DATE','267')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','INVO_ORDER','416')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','INVO_DATE','222')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','INVO_DATE_T','269')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','INVO_ID','415')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','INVO_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','INVO_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','P_CLS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_DTLS','BOM_CODE','401')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_DTLS','ITEM_QTY_WIP','257')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6692','MRP_MPS_INVO_ORDR_DTLS','ITEM_QTY_RE','240')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','RELASE_DATE','258')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','WO_PRIORETY','253')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','IND_RELEAS','804')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','PLAN_NO','234')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','CUST_ORDER','223')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','INVO_ORDER','416')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','WO_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','WO_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','IND_STATUS','805')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALU
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_DTLS','ITEM_MAIN','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_DTLS','BOM_CODE','401')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_DTLS','QTY_REC','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_DTLS','QTY_ON_HAND','257')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_WORK_ORDR_DTLS','PRIORITY','253')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_BATCHES','BATCH_NO','411')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_BATCHES','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_BATCHES','FORCAST_F','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_BATCHES','FORCAST_T','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_MPS_BATCHES','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_SGS_GENERAL_PARAMETARS','MRP_MPS_PR_WO_APPROVE','248')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_BATCH_USED','250')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6693','MRP_SGS_GENERAL_PARAMETARS','MRP_MPS_WO_FORMAT','249')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6694','MRP_MPS_WORK_ORDR_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6694','MRP_MPS_WORK_ORDR_MSTR','RELASE_DATE','258')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6694','MRP_MPS_WORK_ORDR_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6694','MRP_MPS_WORK_ORDR_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6694','MRP_MPS_WORK_ORDR_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VA
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6694','MRP_SGS_GENERAL_PARAMETARS','MRP_MPS_MULTI_WORK_ORDER','247')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6734','MRP_SFC_MATERIALS_REQUEST_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6734','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_ORDER','425')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6734','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_DATE','222')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6734','MRP_SFC_MATERIALS_REQUEST_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6734','MRP_SFC_MATERIALS_REQUEST_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6734','MRP_SFC_MATERIALS_REQUEST_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6734','MRP_SFC_MATERIALS_REQUEST_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6734','MRP_SFC_MATERIALS_REQUEST_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SFC_MATERIALS_RECEIVE_MSTR','MRC_ORDER','246')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SFC_MATERIALS_RECEIVE_MSTR','MR_ORDER','425')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SFC_MATERIALS_RECEIVE_MSTR','MRC_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SFC_MATERIALS_RECEIVE_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SFC_MATERIALS_RECEIVE_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SFC_MATERIALS_RECEIVE_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SFC_MATERIALS_RECEIVE_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SFC_MATERIALS_RECEIVE_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6735','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PQC_REC','396')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6737','MRP_CRP_BD_MST','BD_TRX_NO','412')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6737','MRP_CRP_BD_MST','BD_TRX_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6737','MRP_CRP_BD_MST','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6737','MRP_CRP_BD_MST','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6737','MRP_CRP_BD_MST','CR_USER','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6737','MRP_CRP_BD_MST','CR_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6736','MRP_SFC_WIP_MASTER','SF_CODE','420')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6736','MRP_SFC_WIP_MASTER','SF_DATE','1031')
 INSERT INTO  MRP_T
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6736','MRP_SFC_WIP_MASTER','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6736','MRP_SFC_WIP_MASTER','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6736','MRP_SFC_WIP_MASTER','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6736','MRP_SFC_WIP_MASTER','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6738','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_ORDER','418')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6738','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6738','MRP_SFC_MATERIALS_TRANSMT_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6738','MRP_SFC_MATERIALS_TRANSMT_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6738','MRP_SFC_MATERIALS_TRANSMT_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6738','MRP_SFC_MATERIALS_TRANSMT_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6739','MRP_SFC_WIP_INVENTORY_MSTR','INV_CODE','414')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6739','MRP_SFC_WIP_INVENTORY_MSTR','INV_DATE','235')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6739','MRP_SFC_WIP_INVENTORY_MSTR','FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6739','MRP_SFC_WIP_INVENTORY_MSTR','TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6739','MRP_SFC_WIP_INVENTORY_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6739','MRP_SFC_WIP_INVENTORY_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6739','MRP_SFC_WIP_INVENTORY_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6739','MRP_SFC_WIP_INVENTORY_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SFC_WIP_ADJUSTMENT_MSTR','ADJ_CODE','423')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SFC_WIP_ADJUSTMENT_MSTR','INV_SEQ','272')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SFC_WIP_ADJUSTMENT_MSTR','ADJ_DATE','215')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SFC_WIP_ADJUSTMENT_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SFC_WIP_ADJUSTMENT_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SFC_WIP_ADJUSTMENT_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SFC_WIP_ADJUSTMENT_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SGS_G
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6740','MRP_SGS_GENERAL_PARAMETARS','MRP_PCM_SEPARATED','842')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6731','MRP_SFC_MATERIALS_BEGN_MSTR','MRB_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6731','MRP_SFC_MATERIALS_BEGN_MSTR','MRB_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6731','MRP_SFC_MATERIALS_BEGN_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6731','MRP_SFC_MATERIALS_BEGN_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6731','MRP_SFC_MATERIALS_BEGN_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6731','MRP_SFC_MATERIALS_BEGN_MSTR','A
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6731','MRP_SFC_MATERIALS_BEGN_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','WC_CODE','844')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','WC_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','WC_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6851','MRP_CRP_WAREHOUSES_CLASS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_ORDER','425')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_DATE','222')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','ITEM_CODE','
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','BATCH_NO','411')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','ITEMS_CLAS','836')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','P_STS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','P_CLS','837')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_DTLS','WH_CODE','526')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_DTLS','QTY','240')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_DTLS','QTY_ON_HAND','257')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SFC_MATERIALS_REQUEST_DTLS','QTYS','704')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MR_APPROVE','394')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRQ_FORMAT','838')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6901','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRQ_LVL','839')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','MRC_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','MRC_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','MR_ORDER','425')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','BILL_NO','246')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','ITEM_CODE','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','BATCH_NO','411')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','MRC_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','MRC_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_DTLS','QTY','710')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_DTLS','WH_CODE','526')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_DTLS','QTY_SENT','704')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_DTLS','QTY_REQ','240')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SFC_MATERIALS_RECEIVE_DTLS','TOT','956')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SGS_GENERAL_PARAMETARS','MRP_PCM_SEPARATED','842')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MRC_APPROVE','395')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL  
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRC_FORMAT','841')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6903','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PQC_REC','396')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','P_CLS','837')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_ORDER','425')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_DATE','222')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','ITEM_CODE','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','BATCH_NO','411')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','ITEMS_CLAS','836')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','MR_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FO
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_DTLS','QTY','240')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_DTLS','QTY_ON_HAND','257')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_DTLS','QTYS','704')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SFC_MATERIALS_REQUEST_DTLS','TOT','956')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MR_APPROVE','394')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_REQ_BOM_RES','840')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRQ_FORMAT','838')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6902','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRQ_LVL','839')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','SF_CODE','517')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','SF_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','SF_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','BATCH_NO','411')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','SHIFT_CODE','421')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','SF_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','SF_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','SF_SEQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LAB
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_STG','STG_CODE','409')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_STG','STG_ELAPSED','264')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_STG','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_STG','STG_BD','412')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_STG','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_STG','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_STG','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_JOB','JOB_CODE','405')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_JOB','JOB_ELAPSED','264')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_JOB','JOB_BD','262')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_JOB','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_JOB','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_JOB','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_JOB','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','RCE_SER','506')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','PRD_TYPE','822')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','ITEM_CODE','304')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','BOM_CODE','401')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','CST','607')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','FTIME','231')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','TTIME','265')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','CRT_USR','
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','SEXPIRT_DATE','726')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_YIELD','EEXPIRT_DATE','703')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','SCRAP_TYPE','727')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','RCE_SER','506')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','ITEM_SCRAP','508')
 INSERT INTO 
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','BOM_CODE','729')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','PRD_TYPE','822')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','FTIME','231')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','TTIME','655')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','SR_CODE','730')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MAT_CONSUMP','WH_CODE','526')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_SFC_APPROVE','398')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_INCCST_TYPE','827')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_SFC_FORMAT','828')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PQC_CARDWIP','383')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_STEP_CNTRL','825')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_ORDER','528')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_DTLS','WH_CODE','526')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_DTLS','QTY_ON_HAND_F','257')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_DTLS','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_DTLS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_DTLS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_DTLS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SFC_MATERIALS_TRANSMT_DTLS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6906','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRF_FORMAT','826')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_ORDER','514')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DETAILS_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DETAILS_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_DTLS','WH_CODE','526')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_DTLS','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_DTLS','QTY_ON_HAND_F','257')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_DTLS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_DTLS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_DTLS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SFC_MATERIALS_TRANSMT_DTLS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6907','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRR_FORMAT','829')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','TRANS_TYPE','806')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_ORDER','418')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','WH_CODE_F','769')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','MT_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','IND_INPUT','803')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','WH_CODE','769')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','WH_CODE_T','770')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','QTY_ON_HAND_F','767')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','QTY_ON_HAND_T','768')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SFC_MATERIALS_TRANSMT_DTLS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MT_APPROVE','761')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6908','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MT_FORMAT','823')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','INV_CODE','414')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','INV_DATE','235')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','INV_SEQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','INV_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','INV_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','INV_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','ITEMS_CLAS','836')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','SHIFT_CODE','421')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','CRT_
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','WH_CODE','526')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','B_QTY','775')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','R_QTY','710')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','I_QTY','776')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','E_QTY','256')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','A_QTY','238')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','N_QTY','772')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SFC_WIP_INVENTORY_DTLS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SGS_GENERAL_PARAMETARS','SFC_INVENTORY_SHEET_BSD','820')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_INV_APPROVE','777')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6909','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_INV_FORMAT','824')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','ADJ_CODE','423')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','ADJ_SEQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','ADJ_DATE','215')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','INV_SEQ','272')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','ADJ_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','ADJ_DETAILS_A','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','ADJ_DETAILS_F','602')
 INSERT INTO  MRP_TRAC_DICTIONA
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_DTLS','WH_CODE','526')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_DTLS','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_DTLS','ADJ_DESC','604')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_DTLS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_DTLS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SFC_WIP_ADJUSTMENT_DTLS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SGS_GENERAL_PARAMETARS','SFC_INVENTORY_SHEET_BSD','820')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_ADJ_APPROVE','778')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6910','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_ADJ_FORMAT','821')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','LN_CODE','406')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','SHIFT_CODE','421')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','ITEMS_CLAS','836')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, T
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','T_DATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_M','CONS_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_D','ITEM_OPTIN','308')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_D','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_D','UNIT','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_D','QTY_S','781')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SFC_CONSUMPTION_TRANS_D','QTY_A','782')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6911','MRP_SGS_GENERAL_PARAMETARS','SFC_INVENTORY_SHEET_BSD','820')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','SHF_CODE','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','ASS_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','ASS_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','ASS_FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','ASS_TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','ASS_DETAILS_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','ASS_DETAILS_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','AS_SQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','CRT_USER','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_MST','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_DTL','LAB_CODE','501')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6913','MRP_SFC_LABOR_SHIFT_ASIGN_DTL','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LAB
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','BD_TRX_DATE','217')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','LAB_CODE','654')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','BD_TRX_DESC','739')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','CR_USER','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','CR_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','UP_USER','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_MST','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_LNSTGOP','SHIFT_CODE','421')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_LNSTGOP','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_RCRD','BDD_CODE','742')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_RCRD','BD_REC_DESC','745')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_RCRD','RCE_SER','506')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_RCRD','BD_REC_FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_RCRD','BD_REC_FTIME','231')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_RCRD','BD_REC_TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_RCRD','BD_REC_TTIME','655')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_CRP_BD_RCRD','TOT','744')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6905','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MBD_APPROVE','746')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6914','MRP_MPS_WORK_ORDR_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6914','MRP_MPS_WORK_ORDR_MSTR','RELASE_DATE','258')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6914','MRP_MPS_WORK_ORDR_MSTR','FORCAST_T','266')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7051','MRP_PCM_MRP_ONX_ACCOUNTS','BRNCH_CODE','524')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7051','MRP_PCM_MRP_ONX_ACCOUNTS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7051','MRP_PCM_MRP_ONX_ACCOUNTS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7051','MRP_PCM_MRP_ONX_ACCOUNTS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7051','MRP_PCM_MRP_ONX_ACCOUNTS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7051','MRP_PCM_MRP_ONX_ACCOUNTS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7056','MRP_PCM_MRP_ONX_CCCONTROL','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7056','MRP_PCM_MRP_ONX_CCCONTROL','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7056','MRP_PCM_MRP_ONX_CCCONTROL','A_CODE','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7056','MRP_PCM_MRP_ONX_CCCONTROL','CC_CODE','512')
 INSERT INTO 
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7056','MRP_PCM_MRP_ONX_CCCONTROL','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7056','MRP_PCM_MRP_ONX_CCCONTROL','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7056','MRP_PCM_MRP_ONX_CCCONTROL','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6733','MRP_MPS_WORK_ORDR_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6733','MRP_MPS_WORK_ORDR_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6733','MRP_MPS_WORK_ORDR_MSTR','APP_USR','1033')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6733','MRP_MPS_WORK_ORDR_MSTR','APP_DATE','1034')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_NEW_CST','298')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_CST','284')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_PER','695')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_NO','696')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','DEPR
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','IND_DEPR_STP','834')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','IND_SYNONYM','801')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','CRT_USER','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','UP_USER','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7453','MRP_PQC_HOLD_REASONS','RES_CODE','505')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7453','MRP_PQC_HOLD_REASONS','RES_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7453','MRP_PQC_HOLD_REASONS','RES_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7453','MRP_PQC_HOLD_REASONS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7453','MRP_PQC_HOLD_REASONS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7453','MRP_PQC_HOLD_REASONS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7453','MRP_PQC_HOLD_REASONS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7453','MRP_PQC_HOLD_REASONS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','STS_CODE','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','STS_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','STS_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','RES_CODE','505')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','PRODUCTION','1220')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','REJECTED','741')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','SHIPPING','740')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAM
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7454','MRP_PQC_STATUS_CONTROL','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7456','MRP_PQC_ASSAY_LOV','ASL_GRP','630')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6733','MRP_MPS_WORK_ORDR_MSTR','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6733','MRP_MPS_WORK_ORDR_MSTR','RELASE_DATE','258')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7456','MRP_PQC_ASSAY_LOV','ASL_CODE','743')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7456','MRP_PQC_ASSAY_LOV','ASL_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7456','MRP_PQC_ASSAY_LOV','ASL_DESC_B','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7456','MRP_PQC_ASSAY_LOV','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7456','MRP_PQC_ASSAY_LOV','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7456','MRP_PQC_ASSAY_LOV','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7456','MRP_PQC_ASSAY_LOV','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7455','MRP_PQC_UOM','UOM_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7455','MRP_PQC_UOM','UOM_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7455','MRP_PQC_UOM','UOM_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7455','MRP_PQC_UOM','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7455','MRP_PQC_UOM','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7455','MRP_PQC_UOM','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7455','MRP_PQC_UOM','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7455','MRP_PQC_UOM','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','ASS_CODE','748')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','ASS_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','ASS_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','CLS_CODE','801')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_A
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','UOM_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','VAL','752')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','HVAL','750')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','LVAL','751')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','ASL_GRP','630')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','ASL_CODE','752')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','LASL','751')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','HASL','750')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7458','MRP_PQC_ASSAY_TYPE','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','CLS_CODE','801')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','CLS_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','CLS_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES_D','SUB_CLS_CODE','845')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES_D','SUB_CLS_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES_D','SUB_CLS_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7457','MRP_PQC_PROC_CLASSES_D','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7459','MRP_PQM_REPORTS','REP_CODE','754')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7459','MRP_PQM_REPORTS','REP_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7459','MRP_PQM_REPORTS','REP_TYPE','982')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7459','MRP_PQM_REPORTS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7459','MRP_PQM_REPORTS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7459','MRP_PQM_REPORTS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7459','MRP_PQM_REPORTS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','BOM_CODE','401')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','WH_CODE','415')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','LOC_CODE','502')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_M','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','ASS_CODE','748')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','UOM_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','PROC_INTERVAL','737')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','REP_CODE','754')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','FDATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','TDATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','HASL','750')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','LASL','751')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFI
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','HVAL','750')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','LVAL','751')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','STD_HR','756')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','HHR','757')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','LHR','758')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_D','SEQ','200')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_MTR','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_MTR','STD_QTY','755')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_MTR','HQTY','209')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_MTR','LQTY','210')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_TOLS','MCH_CODE','503')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_TOLS','STD_HR','756')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_TOLS','HHR','757')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7460','MRP_PQC_P_SPECIFICATIONS_TOLS','LHR','758')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SML_CODE','766')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','NOTE_NO','762')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SML_DATE','1031')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SML_TIME','1032')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SML_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SML_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','BOM_CODE','401')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SHIFT_CODE','421')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','WORK_ORDER','424')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','BATCH_NO','220')
 INSERT INTO  MRP_TRAC_DICT
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','UOM_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','REP_CODE','754')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','LOC_CODE','502')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SMLR','846')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','SMLR_A','847')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','INVO_A','851')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','ADD1','684')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','ADD2','684')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7502','MRP_PQC_P_SAMPLING','ADD3','684')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','MAIN_BRN','588')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','CNTRY_NO','99')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','CITY_NO','587')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_ADES','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_ASHT','599')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_EDES','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_ESHT','598')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_MAIL','597')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_AADD','590')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_EADD','589')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_FTEL','594')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_STEL','593')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_FFAX','592')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_FLAG','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_CNTCT_PRSN','648')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_PRSN_TITLE','604')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','BRN_PRSN_PSTION','502')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5202','S_BRN','COST_CNTR_NO','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5203','S_SYSTEM','FORM_NO','4')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5203','S_SYSTEM','F_FILE_NAME','5')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5203','S_SYSTEM','F_INACTIVE','637')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5203','S_SYSTEM','F_ORDER_NO','206')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5203','S_SYSTEM_NAME','FORM_NO','4')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5203','S_SYSTEM_NAME','LANG_NO','11')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5203','S_SYSTEM_NAME','FORM_NAME','6')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_USERNO','877')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_USERID','876')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','USER_ANM','878')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','USER_ENM','879')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_PASSWORD','683')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_STIME','174')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_ETIME','175')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_SDATE','176')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_EDATE','177')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_PAUSE','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_PUSEDT','178')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_UPDPASSW','180')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','S_DAYPASSW','179')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','AP_EMPNO','181')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC','P_HINT','13')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5206','S_MAINSEC_BRN','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL  
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5403','S_MSGS','MSG_NUM','19')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5403','S_MSGS','LANG_NO','11')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5403','S_MSGS','MSG_TEXT','20')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5403','S_MSGS','MSG_STYLE','24')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5403','S_MSGS','MSG_BUT1','21')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5403','S_MSGS','MSG_BUT2','22')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5403','S_MSGS','MSG_BUT3','23')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5407','S_LABELS','LABEL_NO','480')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5407','S_LABELS','LANG_NO','171')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5407','S_LABELS','CAPTION_DET','604')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '5407','S_LABELS','FLD_TYPE','833')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '8202','TRAC_PROG_M','TRAC_FLAG','485')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '8202','TRAC_PROG_D','TRAC_FLG','485')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_LVL','207')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_CTGRY','801')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_MAIN','1')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','UNIT_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_RANK','850')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CC_SRT','206')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_COST_CENTER','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_CNTR_PRODUCTS','ITEM_CODE','304')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_CNTR_PRODUCTS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_CNTR_ELMNTS','ACC_CODE','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7055','MRP_PCM_CNTR_ELMNTS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_PCM_TRNS_FT_ACC','482')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_PCM_CST_THEORY','49')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_PCM_ONX_ACC_MAIN','481')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRQ_LVL','839')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','SFC_INVENTORY_SHEET_BSD','820')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MR
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PQC_REC','396')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PQC_CARDWIP','383')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_MPS_PR_WO_APPROVE','248')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_MPS_MULTI_WORK_ORDER','247')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_MPS_WO_FORMAT','249')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_BATCH_USED','319')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MBD_APPROVE','746')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MT_APPROVE','761')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MRR_APPROVE','753')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MRF_APPROVE','759')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MR_APPROVE','394')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_MRC_APPROVE','841')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_INV_APPROVE','777')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_ADJ_APPROVE','778')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PROD_CONS','399')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRF_FORMAT','826')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRR_FORMAT','829')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_INV_FORMAT','824')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_ADJ_FORMAT','821')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MT_FORMAT','823')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRC_FORMAT','841')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_MRQ_FORMAT','838')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_SFC_FORMAT','828')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_CALENDAR_DATE','478')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_NOTIFY_BACKUP','477')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_REQ_BOM_RES','840')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_ONX_VERSION','318')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_USE_ITEM_PART','133')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_BOM_USE_COLOR','134')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','BRNCH_CODE','524')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','BRANCH_NAME_A','681')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','BRANCH_NAME_F','680')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','BRANCH_USER','682')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','BRANCH_PASSWORD','683')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','BRANCH_SERVICES','684')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONA
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6051','MRP_PCM_MRP_ONX_BRNCH','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','YER_CODE','422')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','YER_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','YER_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','PERIOD_PARTITIONS','807')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','MNTH_FRM','218')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','MNTH_TO','219')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','YR_FRM','675')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','YR_TO','676')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_PCM_CST_CNTR_LNK','843')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7851','MRP_SGS_GENERAL_PARAMETARS','MRP_PCM_SEPARATED','479')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','P_CLS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','UP_USER','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_YEAR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','PERIOD_CODE','419')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','PERIOD_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','PERIOD_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','QTR','255')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','DATE_F','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','DATE_T','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','P_CLS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','S_CLS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6053','MRP_SGS_PERIOD_COSTONG','S_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_CODE','525')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','YER_CODE','422')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','P_CLS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_SATURDAY','685')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_SUNDAY','686')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_MONDAY','687')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES (
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_WEDNESDAY','689')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_THURSDAY','690')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','SC_FRIDAY','691')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','UP_USER','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_DTLS','FRM_DATE','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_DTLS','TO_DATE','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_DTLS','VC_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6052','MRP_SGS_SCHDUL_CLNDR_DTLS','VC_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','SHF_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','SHF_NAME_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FO
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','SHF_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6054','MRP_SGS_SHOPS_FLOOR_CODING','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','CMP_NO','1000')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','SHIFT_CODE','421')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','SHIFT_DETAILS_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','SHIFT_DETAILS_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','TIME_F','231')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','TIME_T','243')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','SHIFT_PRIORITY','253')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','IND_OVERTIME','833')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','SHF_CODE','408')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAST','PU_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAINT','TIME_F','231')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAINT','TIME_T','243')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAINT','DATE_F','609')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAINT','DATE_T','618')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6055','MRP_SGS_SHIFTS_MAINT','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','M
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','BRN_NO','1001')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','YER_CODE','422')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','BPM_REF','616')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','PERIOD_TYPE','807')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','BPM_DETAILS_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','BPM_DETAILS_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_MSTR','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_DTLS','PLAN_NO','234')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_DTLS','PERIOD_NO','419')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_DTLS','QTR','255')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_DTLS','PERIOD_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_DTLS','PERIOD_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_DTLS','P_CLS','808')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_DTLS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_ITEMS','ITEM_CODE','402')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_ITEMS','ITEM_QTY_R','239')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6611','MRP_MPS_CMPNY_PLN_ITEMS','ITEM_QTY_A','238')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','ACC_CLAS','630')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','ACC_CODE','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','ACC_NAME_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','ACC_NAME_E','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','ACC_LVL','207')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','E_RANK','8
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','ACC_MAIN','773')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','ACC_CTGRY','774')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','CLS_PROD','853')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','CLS_FUNC','854')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','CLS_QTY','855')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7053','MRP_PCM_ACCOUNTS_DEF','CLS_PRP','852')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '70
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7057','MRP_PCM_PRODUCTS_ACCOUNTS','UNIT','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7057','MRP_PCM_PRODUCTS_ACCOUNTS','MRP_ACC_CODE','2')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7057','MRP_PCM_PRODUCTS_ACCOUNTS','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7057','MRP_PCM_PRODUCTS_ACCOUNTS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7057','MRP_PCM_PRODUCTS_ACCOUNTS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7057','MRP_PCM_PRODUCTS_ACCOUNTS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7057','MRP_PCM_PRODUCTS_ACCOUNTS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTRIBUTION_CRITERION','DCR_CODE','329')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTRIBUTION_CRITERION','DCR_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTRIBUTION_CRITERION','DCR_DESC_E','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTRIBUTION_CRITERION','DGROUP_CODE','630')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTRIBUTION_CRITERION','BASEDON','331')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTRIBUTION_CRITERION','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTRIBUTION_CRITERION','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTR
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7060','MRP_PCM_DISTRIBUTION_CRITERION','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_MSTR','ASSEMBLER','612')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_MSTR','YER_CODE','422')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_MSTR','ACC_CODE','523')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_MSTR','DATE_F','419')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_MSTR','QTY','203')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_MSTR','BM_CODE','400')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','ASSEMBLY','336')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','ACC_CODE','500')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','CUR_CODE','830')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','UNIT_CODE','410')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_DLS','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_PERIOD','PERIOD_CODE','419')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_PERIOD','AMT','213')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_PERIOD','DESC_A','600')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7061','MRP_PCM_STD_COST_VAR_PERIOD','DESC_F','601')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7054','MRP_PCM_MRP_ONX_COST_CSENTER','CC_CODE','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7054','MRP_PCM_MRP_ONX_COST_CSENTER','CC_CODE_ONX','512')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7054','MRP_PCM_MRP_ONX_COST_CSENTER','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7054','MRP_PCM_MRP_ONX_COST_CSENTER','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7054','MRP_PCM_MRP_ONX_COST_CSENTER','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','PROC_CODE','624')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  ,
 COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','PROC_DESC_A','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','PROC_DESC_F','603')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','P_CNTU','800')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','PROC_INTERVAL','737')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','CRT_DATE','1010')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7451','MRP_PQM_PROCEDURES','CRT_USR','1011')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_CODE','503')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_NAME_F','602')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '7452','MRP_CRP_MACHIN_COD','MCH_NAME_A','603')
MRP_FUNCTION_PKG
MRP_PROCEDURE_PKG
SELECT COUNT(1)   FROM MRP_SGS_PARAMETARS_CHECK"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_SFC_PR_INVENTORY_POLICY'',''MRP_SFC_WHM_ITEMS_MOVE'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_SFC_PR_INV_BQTY_LSTUS'',''MR
P_SFC_WIP_INVENTORY_MSTR'',''APP_USR IS NOT NULL''  )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_SFC_PR_INV_EQTY_CURUS'',''MRP_SFC_WIP_INVENTORY_MSTR'',''APP_USR IS NOT NULL''  )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_SFC_PR_INCCST_TYPE'',''MRP_SFC_WHM_ITEMS_MOVE'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_SFC_PR_INCCST_E_TYPE'',''MRP_SFC_WHM_ITEMS_MOVE'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_SFC_PROD_CONS'',''MRP_SFC_WIP_MAT_CONSUMP'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_SFC_SCRP_CONS'',''MRP_SFC_WIP_MASTER_SCRAP'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_SFC_CONS_NG'',''MRP_SFC_WHM_ITEMS_MOVE'',''TRANS_TYPE=7''  )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_SEPARATED'',''MRP_PCM_DAILY_TRANS_MAST'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_ASS_CST_PRD'',''MRP_PCM_DAILY_TRANS_MAST'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_ASS_CST_PROD'',''MRP_PCM_DAILY_TRANS_MAST'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_ASS_CST_FUNC'',''MRP_PCM_DAILY_TRANS_MAST'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_ASS_CST_QTY'',''MRP_PCM_DAILY_TRANS_MAST'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''SFC_INVENTORY_SHEET_PER_T'',''MRP_SFC_WIP_INVENTORY_MSTR'',''APP_USR IS NOT NULL''  )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''SFC_INVENTORY_SHEET_PER'',''MRP_SFC_WIP_INVENTORY_MSTR'',''APP_USR IS NOT NULL''  )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_TRNS_FT_TYPE'',''MRP_PCM_DAILY_TRANS_MAST'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_TRNS_FT_ACC'',''MRP_PCM_DAILY_TRANS_MAST'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_CST_THEORY'',''MRP_PCM_DAILY_TRANS_MAST'', NULL   )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_ONX_ACC_SMLR'',''MRP_PCM_DAILY_TRANS_DETAILS'',''TRAN_TYPE=''''1''''''  )"INSERT INTO MRP_SGS_PARAMETARS_CHECK ( PARA_NAME,TABLE_RLT,TABLE_CDTION )  VALUES ( ''MRP_PCM_ONX_ACC_MAIN'',''MRP_PCM_DAILY_TRANS_DETAILS'',''TRAN_TYPE=1''  )"
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','UP_DATE','1012')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MASTER_SCRAP','UP_USR','1013')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SFC_WIP_MAT_CONSUMP','WH_CODE','526')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_SFC_APPROVE','398')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PR_INCCST_TYPE','827')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_SFC_FORMAT','828')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL_NAME  , COL_LABEL   )VALUES ( '6904','MRP_SGS_GENERAL_PARAMETARS','MRP_SFC_PQC_CARDWIP','383')
 INSERT INTO  MRP_TRAC_DICTIONARY_D (FORM_NO, TABLE_NAME   ,COL
MRP_PROCEDURE_PKG
MRP_PROCEDURE_PKG
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'WIP_SCRAP_QTY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'WIP_SCRAP_QTY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'WIP_SCRAP_QTY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'WIP_SCRAP_QTY', 'Manual', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'WIP_SCRAP_QTY', 'Auto updated', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'WIP_SCRAP_QTY', 'Auto no updated', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'BOM_ROW_INPUT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'BOM_ROW_INPUT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'BOM_ROW_INPUT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'BOM_ROW_INPUT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'BOM_ROW_INPUT', 'Auto optional', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'BOM_ROW_INPUT', 'Auto mandatory', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'BOM_ROW_INPUT', 'Manwal optional', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'BOM_ROW_INPUT', 'Manwal mandatory', 1)
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CARD_JOB_LOAD', '
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CARD_JOB_LOAD', 'All Jobs', 1)
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CARD_JOB_LOAD', '
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CARD_JOB_LOAD', 'Linked items', 1)
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CNS_REP_TYP', '
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CNS_REP_TYP', 'Approval consumption', 1)
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CNS_REP_TYP', '
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CNS_REP_TYP', 'Transaction consumption', 1)
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'LAB_QTY_BY', '
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'LAB_QTY_BY', 'Products', 1)
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'LAB_QTY_BY', '
INSERT into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'LAB_QTY_BY', 'Jobs', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'INCNTV_DPND', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'INCNTV_DPND', 'QTY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'INCNTV_DPND', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'INCNTV_DPND', 'TIME', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'INCNTV_CLASS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'INCNTV_CLASS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'INCNTV_CLASS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'INCNTV_CLASS', 'Not used', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'INCNTV_CLASS', 'By Class', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'INCNTV_CLASS', 'Class implementer', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'AGT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'AGT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'AGT_STATUS', 'Active', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'AMND_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'AMND_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'AMND_STATUS', 'Non Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'AMND_STATUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'AOUTOMATIC', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'AOUTOMATIC', 'Manual', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'AOUTOMATIC', 'Automatic', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'APPROVE_STS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'APPROVE_STS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'APPROVE_STS', 'Approvment', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'APPROVE_STS', 'Unapprovment', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'ASSAYTYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'ASSAYTYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'ASSAYTYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'ASSAYTYPE', 'Unique Value', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'ASSAYTYPE', ' List of Specifications', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'ASSAYTYPE', 'Numeric Range', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'ASSIGNMENT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'ASSIGNMENT', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'ASSIGNMENT', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'ASSIGNMENT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'ASSIGNMENT', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'ASSIGNMENT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'ASSIGNMENT', 'Shift', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'ASSIGNMENT', 'Work order', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'ASSIGNMENT', 'Period', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'ASSIGNMENT', 'Action', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'ASSIGNMENT', 'Batch', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'ASSIGNMENT', 'Fixed Forever', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'CALCULATION', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'CALCULATION', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'CALCULATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'CALCULATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'CALCULATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'CALCULATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 10, 10, 'CALCULATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CALCULATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CALCULATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'CALCULATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CALCULATION', 'Sum of previous', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CALCULATION', 'Sum of perion', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'CALCULATION', 'First of period', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'CALCULATION', 'Max of period', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'CALCULATION', 'Last of previous', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'CALCULATION', 'Max of previous', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'CALCULATION', 'Avg of period', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'CALCULATION', 'Avg of previous', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 10, 10, 'CALCULATION', 'First of previous', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'CALCULATION', 'Last of period', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 15, 15, 'CHART_TYPE', 'OG_Bar_3d', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'CHART_TYPE', 'OG_Column_Shadow', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 35, 35, 'CHART_TYPE', 'OG_Doubley_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 42, 42, 'CHART_TYPE', 'OG_Scatter_Symbol', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 56, 56, 'CHART_TYPE', 'OG_Table_Depth', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 13, 13, 'CHART_TYPE', 'OG_Bar_Zero', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 14, 14, 'CHART_T
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 18, 18, 'CHART_TYPE', 'OG_Line_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 23, 23, 'CHART_TYPE', 'OG_Step_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 28, 28, 'CHART_TYPE', 'OG_Spline_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 29, 29, 'CHART_TYPE', 'OG_Mixed_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'CHART_TYPE', 'OG_Column_3d', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 26, 26, 'CHART_TYPE', 'OG_Spline_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 27, 27, 'CHART_TYPE', 'OG_Spline_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 31, 31, 'CHART_TYPE', 'OG_Mixed_Spline', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 32, 32, 'CHART_TYPE', 'OG_Mixed_Spfill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 36, 36, 'CHART_TYPE', 'OG_Doubley_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 38, 38, 'CHART_TYPE', 'OG_Highlow_Spike', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 46, 46, 'CHART_TYPE', 'OG_Scatter_Loglog', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 48, 48, 'CHART_TYPE', 'OG_Gantt', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 41, 41, 'CHART_TYPE', 'OG_Highlow_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 44, 44, 'CHART_TYPE', 'OG_Scatter_Linear', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 54, 54, 'CHART_TYPE', 'OG_Table', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CHART_TYPE', 'OG_Column', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'CHART_TYPE', 'OG_Bar', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 22, 22, 'CHART_TYPE', 'OG_Step_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 24, 24, 'CHART_TYPE', 'OG_Step_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 30, 30, 'CHART_TYPE', 'OG_Mixed_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 34, 34, 'CHART_TYPE', 'OG_Doubley_Overlap', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 45, 45, 'CHART_TYPE', 'OG_Scatter_Log', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 53, 53, 'CHART_TYPE', 'OG_Pie_Depth', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 55, 55, 'CHART_TYPE', 'OG_Table_Shadow', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 10, 10, 'CHART_TYPE', 'OG_Bar_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 12, 12, 'CHART_TYPE', 'OG_Bar_Pct', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 16, 16, 'CHA
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 39, 39, 'CHART_TYPE', 'OG_Highlow_Both', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'CHART_TYPE', 'OG_Column_Overlap', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'CHART_TYPE', 'OG_Column_Zero', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 11, 11, 'CHART_TYPE', 'OG_Bar_Overlap', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 17, 17, 'CHART_TYPE', 'OG_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 37, 37, 'CHART_TYPE', 'OG_Highlow_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 47, 47, 'CHART_TYPE', 'OG_Scatter_Connect', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 51, 51, 'CHART_TYPE', 'OG_Pie', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CHART_TYPE', 'OG_Column_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'CHART_TYPE', 'OG_Column_Pct', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'CHART_TYPE', 'OG_Column_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 19, 19, 'CHART_TYPE', 'OG_Line_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 20, 20, 'CHART_TYPE', 'OG_Line_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 25, 25, 'CHART_TYPE', 'OG_Spline', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 40, 40, 'CHART_TYPE', 'OG_Highlow_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 43, 43, 'CHART_TYPE', 'OG_Scatter_Curvefit', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 49, 49, 'CHART_TYPE', 'OG_Gantt_Shadow', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 50, 50, 'CHART_TYPE', 'OG_Gantt_Depth', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 52, 52, 'CHART_TYPE', 'OG_Pie_Shadow', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 21, 21, 'CHART_TYPE', 'OG_Step', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 23, 23, 'CHART_TYPE', 'OG_Step_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 33, 33, 'CHART_TYPE', 'OG_Doubley_Column', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 52, 52, 'CHART_TYPE', 'OG_Pie_Shadow', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 53, 53, 'CHART_TYPE', 'OG_Pie_Depth', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 55, 55, 'CHART_TYPE', 'OG_Table_Shadow', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'CHART_TYPE', 'OG_Column_Overlap', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Val
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 12, 12, 'CHART_TYPE', 'OG_Bar_Pct', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 24, 24, 'CHART_TYPE', 'OG_Step_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 26, 26, 'CHART_TYPE', 'OG_Spline_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 28, 28, 'CHART_TYPE', 'OG_Spline_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 32, 32, 'CHART_TYPE', 'OG_Mixed_Spfill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 42, 42, 'CHART_TYPE', 'OG_Scatter_Symbol', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'CHART_TYPE', 'OG_Column_Zero', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'CHART_TYPE', 'OG_Column_3d', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 16, 16, 'CHART_TYPE', 'OG_Bar_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 27, 27, 'CHART_TYPE', 'OG_Spline_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 29, 29, 'CHART_TYPE', 'OG_Mixed_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 45, 45, 'CHART_TYPE', 'OG_Scatter_Log', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 46, 46, 'CHART_TYPE', 'OG_Scatter_Loglog', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 47, 47, 'CHART_TYPE', 'OG_Scatter_Connect', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CHART_TYPE', 'OG_Column_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 15, 15, 'CHART_TYPE', 'OG_Bar_3d', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 25, 25, 'CHART_TYPE', 'OG_Spline', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 37, 37, 'CHART_TYPE', 'OG_Highlow_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 41, 41, 'CHART_TYPE', 'OG_Highlow_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 51, 51, 'CHART_TYPE', 'OG_Pie', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 56, 56, 'CHART_TYPE', 'OG_Table_Depth', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'CHART_TYPE', 'OG_Column_Shadow', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'CHART_TYPE', 'OG_Bar_Overlap', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 31, 31, 'CHART_TYPE', 'OG_Mixed_Spline', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 43, 43, 'CHART_TYPE', 'OG_Scatter_Curvefit', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 49, 49, 'CHART_TYPE', 'OG_Gantt_Shadow', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 54, 54, 'CHART_TYPE', 'OG_Table', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 13, 13, 'CHART_TYPE', 'OG_Bar_Zero', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 19, 19, 'CHART_TYPE', 'OG_Line_Stacked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CHART_TYPE', 'OG_Column', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'CHART_TYPE', 'OG_Bar', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 14, 14, 'CHART_TYPE', 'OG_Bar_Shadow', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 36, 36, 'CHART_TYPE', 'OG_Doubley_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 38, 38, 'CHART_TYPE', 'OG_Highlow_Spike', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 39, 39, 'CHART_TYPE', 'OG_Highlow_Both', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 48, 48, 'CHART_TYPE', 'OG_Gantt', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 50, 50, 'CHART_TYPE', 'OG_Gantt_Depth', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'CHART_TYPE', 'OG_Column_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 18, 18, 'CHART_TYPE', 'OG_Line_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 20, 20, 'CHART_TYPE', 'OG_Line_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 21, 21, 'CHART_TYPE', 'OG_Step', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 22, 22, 'CHART_TYPE', 'OG_Step_Symbol', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 30, 30, 'CHART_TYPE', 'OG_Mixed_Fill', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 34, 34, 'CHART_TYPE', 'OG_Doubley_Overlap', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 35, 35, 'CHART_TYPE', 'OG_Doubley_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 40, 40, 'CHART_TYPE', 'OG_Highlow_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 17, 17, 'CHART_TYPE', 'OG_Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 44, 44, 'CHART_TYPE', 'OG_Scatter_Linear', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'CNTRY_CNTNT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CNTRY_CNTNT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'CNTRY_CNTNT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'CNTRY_CNTNT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CNTRY_CNTNT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'CNTRY_CNTNT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CNTRY_CNT
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'CNTRY_CNTNT', 'South America', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'CNTRY_CNTNT', 'Europe', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CNTRY_CNTNT', 'Asia', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'CNTRY_CNTNT', 'Australia', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'CNTRY_CNTNT', 'North America', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CONS_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FL
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CONS_TP', 'Product', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CONS_TP', 'Scrap', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'COST_CATG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'COST_CATG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'COST_CATG', 'CON', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'COST_CATG', 'VAR', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'COST_CENTER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'COST_CENTER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'COST_CENTER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'COST_CENTER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'COST_CENTER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'COST_CENTER', 'Asset', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'COST_CENTER', 'Department', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'COST_CENTER', 'Branch', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'COST_CENTER', 'Unit', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'COST_CENTER', 'Location', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'COST_CNTR_INTG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'COST_CNTR_INTG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'COST_CNTR_INTG', 'Cost Center', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'COST_CNTR_INTG', 'Account', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'COST_THEORIES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'COST_THEORIES', '
Insert into IAS_SYS.MRP_FLAGS 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'COST_THEORIES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'COST_THEORIES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'COST_THEORIES', 'Direct Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'COST_THEORIES', 'Activities Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'COST_THEORIES', 'Variable Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'COST_THEORIES', 'Total Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'COST_THEORIES', 'Utilized Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'CST-REP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CST-REP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CST-REP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'CST-REP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'CST-REP', 'Standard Cost', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'CST-REP', 'Constant and Variable Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CST-REP', 'Variable Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CST-REP', 'Constant Cost', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CURR_DEAL_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CURR_DEAL_FLAG', 'Specified', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CUSTS_ACCTS_LVL', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CUSTS_ACCTS_LVL', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CUSTS_ACCTS_LVL', 'One Main Account', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CUSTS_ACCTS_LVL', 'One For Each Customers', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CUST_GNDR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CUST_GNDR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CUST_GNDR', 'Male', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CUST_GNDR', 'Female', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CUST_NTUR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CUST_NTUR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE,
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CUST_NTUR', 'Person', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'CUST_TYP_CAT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'CUST_TYP_CAT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'CUST_TYP_CAT', 'Local Exchanger', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'CUST_TYP_CAT', 'Agent', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 1, 'DAYS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 7, 'DAYS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 3, 'DAYS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 2, 'DAYS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 4, 'DAYS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 6, 'DAYS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 5, 'DAYS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 7, 'DAYS', 'FRIDAY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 5, 'DAYS', 'WEDNESDAY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 4, 'DAYS', 'TUESDAY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 6, 'DAYS', 'THURSDAY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 2, 'DAYS', 'SUNDAY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 1, 'DAYS', 'SATARDAY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 3, 'DAYS', 'MONDAY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'DEST_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'DEST_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'DEST_FLG', 'PRINTER', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'DEST_FLG', 'SCREEN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'DISTRIBUTION EFFECT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'DISTRIBUTION EFFECT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'DISTRIBUTION EFFECT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'DISTRIBUTION EFFECT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'DISTRIBUTION EFFECT', 'Some Prod. centers', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'DISTRIBUTION EFFECT', 'All centers', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'DISTRIBUTION EFFECT', 'All prod. centers', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'DIST_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'DIST_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'DIST_TP', 'Centers Distribution Per', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'DIST_TP', 'Products Distribution Per', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VA
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'DOC_TYPE', 'Matiral Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'EMP_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'EMP_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'EMP_STATUS', 'Inactive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'EMP_STATUS', 'Active', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'FLD_TYPE', 'LOV_COL_TITLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'FLD_TYPE', 'PROMPT', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'FLD_TYPE', 'Radio Button Lable', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'FLD_TYPE', 'WINDOW_TITLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'FLD_TYPE', 'TAB_TITLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'FLD_TYPE', 'TOOLTIP', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'FLD_TYPE', 'LOV_TITLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'FLD_TYPE', 'LABLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'FLD_TYPE', 'Radio Button Lable', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'FLD_TYPE', 'Window_Title', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'FLD_TYPE', 'PROMPT', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'FLD_TYPE', 'TOOLTIP', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'FLD_TYPE', 'Lov_Title', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'FLD_TYPE', 'Tab_Title', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'FLD_TYPE', 'LABLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'FLD_TYPE', 'Lov_Col_Title', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'FRAC_VAL_FLG'
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'FRAC_VAL_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'FRAC_VAL_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'FRAC_VAL_FLG', 'Around to one Digit', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'FRAC_VAL_FLG', 'Around to integer value', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'FRAC_VAL_FLG', 'Around to two digits', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'GENDER_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'GENDER_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'GENDER_TYPES', 'Male', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'GENDER_TYPES', 'Female', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 12, 12, 'HALF', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'HALF', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 12, 12, 'HALF', 'Scond Half', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'HALF', 'Frist Half', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'HLD_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'HLD_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'HLD_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'HLD_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'HLD_STATUS', 'aproved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'HLD_STATUS', 'active', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'HLD_STATUS', 'new', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'HLD_STATUS', 'updated', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'HOURS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 60, 60, 'HOURS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 60, 60, 'HOURS', 'Minutes', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'HOURS', 'Hours', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'ID_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'ID_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'ID_TYPES', 'Passport', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'ID_TYPES', 'ID Card', 1)
Insert into IAS_SYS.MRP_FLAGS 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 10, 10, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 12, 12, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 11, 11, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'INDICATORS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 10, 10, 'INDICATORS', 'Operational Performance Loss', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'INDICATORS', 'Preventative Maintenance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'INDICATORS', 'Line Utilization', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'INDICATORS', 'Line  Quality', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'INDICATORS', 'Line Productivity', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'INDICATORS', 'Equipment Performance Loss', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'INDICATORS', 'Line Efficiencey', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'INDICATORS', 'Line Loading', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'INDICATORS', 'Unrecorded downtime', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 12, 12, 'INDICATORS', 'Line Consumption', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'INDICATORS', 'Line Constraint Loss', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'INDICATORS', 'Planned Stoppage', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'IND_STATE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'IND_STATE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'IND_STATE', 'Approve', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_D
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'INVENTORY_PERIOD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'INVENTORY_PERIOD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'INVENTORY_PERIOD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'INVENTORY_PERIOD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'INVENTORY_PERIOD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'INVENTORY_PERIOD', 'Shift', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'INVENTORY
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'INVENTORY_PERIOD', 'Monthly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'INVENTORY_PERIOD', 'Daily', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'INVENTORY_PERIOD', 'Periodically', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'INVO_CTGR', 'RESOURCE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'INVO_CTGR', 'OTHER', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'INVO_CTGR', 'SERVICE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'INVO_CTGR', 'SUBASSEMBLEY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'INVO_CTGR', 'SCRAP FOR SALE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'INVO_CTGR', 'ROW', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'INVO_CTGR', 'SUPPORTER', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'INVO_CTGR', 'ASSEMBLY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'IN_AMND_SRC_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'IN_AMND_SRC_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'IN_AMND_SRC_F
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'IN_AMND_SRC_FLAG', 'Company', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'IN_AMND_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'IN_AMND_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'IN_AMND_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'IN_AMND_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'IN_AMND_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'IN_AMND_TYPES', 'Financial Changes', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'IN_AMND_TYPES', 'Stop Rem', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'IN_AMND_TYPES', 'Cancled Rem', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'IN_AMND_TYPES', 'Non Finaincial Changes', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'IN_AMND_TYPES', 'Cancel Stop Rem.', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'IN_FEE_DED_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'IN_FEE_DED_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'IN_FEE_DED_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'IN_FEE_DED_FLAG', 'Non Dedection', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'IN_FEE_DED_FLAG', 'Dedected', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'IN_FEE_DED_FLAG', 'No Fess', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'IN_REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'IN_REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'IN_REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'IN_REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'IN_REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'IN_REMIT_STATUS', 'Stoped', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'IN_REMIT_STATUS', 'Canceled', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'IN_REMIT_STATUS', 'Remit', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'IN_REMIT_STATUS', 'Paid', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'IN_REMIT_STATUS', 'Recvied', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'LABOR_CONTRACT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'LABOR_CONTRACT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'LABOR_CONTRACT', 'Salary', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'LABOR_CONTRACT', 'Time', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'LABOR_CONTRACT', 'Production', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'LAB_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'LAB_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'LAB_TYPE', 'Labor', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'LAB_TYPE', 'Operator', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'LANG_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'LANG_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'LANG_FLAG', 'Arabic', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'LANG_FLAG', 'English', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MACHINE_CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MACHINE_CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MACHINE_CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MACHINE_CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MACHINE_CATEGORY', 'Production', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MACHINE_CATEGORY', 'Quality', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MACHINE_CATEGORY', 'Stock equipment', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MACHINE_CATEGORY', 'Service equipment', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MAINT_LVL', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MAINT_LVL', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MAINT_LVL', 'Resource', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MAINT_LVL', 'Machine', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MAINT_POS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MAINT_POS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MAINT_POS', 'External Maintanance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MAINT_POS', 'Enternal Maintanance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MAINT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MAINT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MAINT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MAINT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MAINT_STATUS', 'End with success', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MAINT_STATUS', 'In Maintenance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MAINT_STATUS', 'End with failure', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MAINT_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MAINT_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MAINT_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MAINT_TYPE', 'Adventitious Maintanance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MAINT_TYPE', 'Preventative Maintanance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MAINT_TYPE', 'Periodical Maintanance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MAIN_TRSR_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MAIN_TRSR_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MAIN_TRSR_FLAG', 'Payments Treasury', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MAIN_TRSR_FLAG', 'Main Treasury', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MATCH_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MATCH_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MATCH_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MATCH_FLAG', 'Name Match', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MATCH_FLAG', 'Name Smaler  Match', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MATCH_FLAG', 'Exact Match Nmae And ID', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MMS_RESULT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MMS_RESULT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MMS_RESULT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MMS_RESULT', 'Unsuccessful', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MMS_RESULT', 'In Maintenance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MMS_RESULT', 'Successful', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 11, 11, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 10, 10, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 12, 12, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 12, 12, 'MONTH', 'December', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MONTH', 'May', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MONTH', 'February', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'MONTH', 'August', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'MONTH', 'July', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MONTH', 'June', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 10, 10, 'MONTH', 'October', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MONTH', 'March', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'MONTH', 'November', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'MONTH', 'September', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MONTH', 'April', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MONTH', 'January', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_ACTIVITY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_ACTIVITY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_ACTIVITY', 'Active', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_ACTIVITY', 'Inactive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, F
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_ALTERNATE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_ALTERNATE', 'Alternate', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_ALTERNATE', 'Primary', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_AOUTMATIC', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_AOUTMATIC', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_AOUTMATIC', 'Automatic', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_AOUTMATIC', 'Manual', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_ASSIGNMET', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_ASSIGNMET', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_ASSIGNMET', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MRP_ASSIGNMET', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'MRP_ASSIGNMET', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_ASSIGNMET', 'Shift', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_ASSIGNMET', 'Work order', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_ASSIGNMET', 'Period', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MRP_ASSIGNMET', 'Batch', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MRP_ASSIGNMET', 'Action', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_ASS_REP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_ASS_REP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_ASS_REP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_ASS_REP_TYPE', 'QTY', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_ASS_REP_TYPE', 'Time', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_ASS_REP_TYPE', 'QTYS', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_BEGINNING', 'UN.Beginning', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_BEGINNING', 'BEGINNING', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_BEGINNING', 'Beginning', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_BEGINNING', 'Un.Beginning', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_BOM_CLASS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, F
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_BOM_CLASS', 'Model', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_BOM_CLASS', 'Standard', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_BRANCH_FACT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_BRANCH_FACT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_BRANCH_FACT', 'Factory', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_BRANCH_FACT', 'Branch', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_BREAKDOWN_D', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_BREAKDOWN_D', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_BREAKDOWN_D', 'Machine', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_BREAKDOWN_D', 'Both', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_BREAKDOWN_D', 'Labor', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_BREAKDOWN_L', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_BREAKDOWN_L', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_BREAKDOWN_L', 'Unlegal', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_BREAKDOWN_L', 'Legal', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_CC_ITEM_DTR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_CC_ITEM_DTR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_CC_ITEM_DTR', 'Some centers products', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_CC_ITEM_DTR', 'All centers products', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_CLOSE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_CLOSE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_CLOSE', 'Open', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_CLOSE', 'Close', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_COMPER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_COMPER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MRP_COMPER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_COMPER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'MRP_COMPER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_COMPER', '<=', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_COMPER', '=', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_COMPER', '>=', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MRP_COMPER', '<>', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MRP_COMPER', '>', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_COMPER', '<', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_COST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_COST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_COST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_COST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_COST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_COST', 'Average Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_COST', 'Beginning Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_COST', 'Standard Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_COST', 'Last Production Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_COST', 'Average Cost in Onyx', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_COST CENTER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_COST CENTER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_COST CENTER', 'Services', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_COST CENTER', 'Production', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_COST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_COST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_COST_TYPE', 'Fixed', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_COST_TYPE', 'Variable', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_CRITERION BASEDON', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_CRITERION BASEDON', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_CRITERION BASEDON', 'Cost Center', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_DEPRITATION_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_DEPRITATION_TYPE', 'Percentage', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_DEPR_STOP', 'ON', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_DEPR_STOP', 'On', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_DERP_STOP', 'OFF', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_DERP_STOP', 'Off', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_DFULT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_DFULT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_DFULT', 'Un Default', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_DFULT', 'Default', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_DIVISIBILITY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_DIVISIBILITY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_DIVISIBILITY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_DIVISIBILITY', 'SCRUP DIVISIBLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_DIVISIBILITY', 'DIVISIBLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_DIVISIBILITY', 'INDIVISIBLE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_ELEMENT_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_ELEMENT_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_ELEMENT_TYPE', 'Constan', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_ELEMENT_TYPE', 'Variable', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_ENT_EXT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_ENT_EXT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_ENT_EXT', 'Reasonable', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_ENT_EXT', 'Unreasonable', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 11, 11, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 10, 10, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'MRP_INCOMCOST_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'MRP_INCOMCOST_TYPE', 'Direct Materials cost + Indirect cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 10, 10, 'MRP_INCOMCOST_TYPE', 'Direct Materials cost + Percentage', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'MRP_INCOMCOST_TYPE', 'Estimate Materials Cost', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_INCOMCOST_TYPE', 'Standard Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MRP_INCOMCOST_TYPE', 'Direct Materials cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_INCOMCOST_TYPE', 'AVG Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'MRP_INCOMCOST_TYPE', 'Estimate Entrance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_INCOMCOST_TYPE', 'Beginning Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MRP_INCOMCOST_TYPE', 'Direct Cost', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_INCOMCOST_TYPE', 'Last Production Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'MRP_INCOMCOST_TYPE', 'Estimate Cost', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 11, 11, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FL
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 10, 10, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 12, 12, 'MRP_INVO_CTGR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_INVO_CTGR', 'Semi Product', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 10, 10, 'MRP_INVO_CTGR', 'Scrap must be Recycle', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'MRP_INVO_CTGR', 'Useless Scrap', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_INVO_CTGR', 'Raw material', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 12, 12, 'MRP_INVO_CTGR', 'Quality Supporter', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'MRP_INVO_CTGR', 'Packing Material', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_INVO_CTGR', 'Production Supporter', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'MRP_INVO_CTGR', 'Class Has Alternative rows', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MRP_INVO_CTGR', 'Scrap For Sale', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_INVO_CTGR', ' Finish Product', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_INVO_CTGR', 'Others', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_INVO_POLICY', 'LIFO', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_INVO_POLICY', 'FIFO', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_INVO_POLICY', 'AVG', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_INVO_POLICY', 'LIFO', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_INVO_POLICY', 'AVG', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_INVO_POLICY', 'FIFO', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_LABOR_CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_LABOR_CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_LABOR_CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_LABOR_CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_LABOR_CATEGORY', 'Production', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_LABOR_CATEGORY', 'Quality', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_LABOR_CATEGORY', 'Unlimeted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_LABOR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_LABOR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_LABOR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_LABOR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_LABOR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_LABOR_TYPE', 'Labor', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_LABOR_TYPE', 'Operator', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_LABOR_TYPE', 'Unlimited', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_LABOR_TYPE', 'Supervisor', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_LABOR_TYPE', 'Productive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_LAB_MOV_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_LAB_MOV_TYP', 'Begennig', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_LANG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_LANG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_LANG', 'Local', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_LANG', 'Forgien', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_LEVELS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_LEVELS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_LEVELS', 'Accumulative', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_LEVELS', 'Analytic', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_MACHINE_SYNONYM', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_MACHINE_SYNONYM', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_MACHINE_SYNONYM', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_MACHINE_SYNONYM', 'Actualty', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_MACHINE_SYNONYM', 'Synonm Labor', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_MACHINE_SYNONYM', 'Synonm Assembl', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_MMS_ACTIVITY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_MMS_ACTIVITY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_MMS_ACTIVITY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_MMS_ACTIVITY', 'Active', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_MMS_ACTIVITY', 'In Maintenance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_MMS_ACTIVITY', 'Inactive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 12, 12, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 10, 10, 'MRP_MONTH', '
Insert into IA
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_MONTH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'MRP_MONTH', 'November', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_MONTH', 'January', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MRP_MONTH', 'May', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'MRP_MONTH', 'August', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 10, 10, 'MRP_MONTH', 'October', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_MONTH', 'March', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_MONTH', 'April', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 12, 12, 'MRP_MONTH', 'December', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_MONTH', 'February', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MRP_MONTH', 'June', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'MRP_MONTH', 'September', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'MRP_MONTH', 'July', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_MPS_WO_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_MPS_WO_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_MPS_WO_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_MPS_WO_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_MPS_WO_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_MPS_WO_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_MPS_WO_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_MPS_WO_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_MPS_WO_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_OPREATION_JOB_CATEGORY', 'Products Produce', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_OPREATION_JOB_CATEGORY', 'Production On Servies', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_OPREATION_JOB_CATEGORY', 'Products Services', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_OPREATION_JOB_CATEGORY', 'Products Produce', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_OPREATION_JOB_CATEGORY', 'Products Services', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_OPREATION_JOB_CATEGORY', 'Production On Servies', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_ORDER_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_ORDER_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_ORDER_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_ORDER_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_ORDER_STATUS', 'Finish with Success', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_ORDER_STATUS', 'Finish with Failure', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_ORDER_STATUS', 'In Maintenance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_ORDER_STATUS', 'New', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_OVER_TIME', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_OVER_TIME', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_OVER_TIME', 'Over Time', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_OVER_TIME', 'Official', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_PCM_TRNS_FT_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_PCM_TRNS_FT_TYPE', 'Multi Accounts', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_PCM_TRNS_FT_TYPE', 'One Account', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'MRP_PERIOD_PARTITION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_PERIOD_PARTITION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_PERIOD_PARTITION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MRP_PERIOD_PARTITION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_PERIOD_PARTITION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_PERIOD_PARTITION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_PERIOD_PARTITION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_PERIOD_PARTITION', 'Daily', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MRP_PERIOD_PARTITION', 'Yearly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MRP_PERIOD_PARTITION', 'others', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_PERIOD_PARTITION', 'Half Yearly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_PERIOD_PARTITION', 'Quarterly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_PERIOD_PARTITION', 'Weekly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_PERIOD_PARTITION', 'Monthly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_POSITION_PALCE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_POSITION_PALCE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_POSITION_PALCE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_POSITION_PALCE', 'FronT', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_POSITION_PALCE', 'Back', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_POSITION_PALCE', 'Inside', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_POST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_POST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_POST', 'Post', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_POST', 'Un post', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_PQC_AGREE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_PQC_AGREE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_PQC_AGREE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_PQC_AGREE', 'Accepted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_PQC_AGREE', 'Rejected', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_PQC_AGREE', 'Waiting Status', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_PQC_PRAMT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_PQC_PRAMT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_PQC_PRAMT', 'Parameters', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_PQC_PRAMT', 'No Parameters', 1)
Insert into IAS_SY
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_PQC_RESULT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_PQC_RESULT', 'Positive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_PQC_RESULT', 'Negative', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_PQC_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_PQC_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_PQC_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_PQC_STATUS', 'Checked', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_PQC_STATUS', 'Release', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_PQC_STATUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_PQC_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_PQC_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_PQC_TYP', 'Shop Floor Card', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_PQC_TYP', 'Received Materials', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_PRIORETY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_PRIORETY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_PRIORETY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_PRIORETY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_PRIORETY', 'Important', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_PRIORETY', 'Ordinary', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_PRIORETY', 'Not Important', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_REPTYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_REPTYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_REPTYPE', 'Report', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_REPTYPE', 'Graph', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_REP_FONT_STYLE', 'Bold', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_REP_FONT_STYLE', 'Normal', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_REP_FONT_STYLE', 'Bold', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_REP_FONT_STYLE', 'Normal', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_REP_NUM_DIGIT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_REP_NUM_DIGIT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_REP_NUM_DIGIT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_REP_NUM_DIGIT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_REP_NUM_DIGIT', 'HThousand', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_REP_NUM_DIGIT', 'None', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_REP_NUM_DIGIT', 'Million', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_REP_NUM_DIGIT', 'Thousand', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_REP_ORIENTATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_REP_ORIENTATION', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_REP_ORIENTATION', 'Landscape', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_REP_ORIENTATION', 'Portrait', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_REP_PARM_SHOW', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_REP_PARM_SHOW', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_REP_PARM_SHOW', 'First page', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_REP_PARM_SHOW', 'All page', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 0, 'MRP_RESTRICT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 1, 'MRP_RESTRICT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 1, 'MRP_RESTRICT', 'Restrict', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 0, 'MRP_RESTRICT', 'UnRestrict', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SCHEDUALING_REPEAT_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SCHEDUALING_REPEAT_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MRP_SCHEDUALING_REPEAT_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDUALING_REPEAT_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'MRP_SCHEDUALING_REPEAT_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCHEDUALING_REPEAT_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCHEDUALING_REPEAT_STYLE', 'Daily', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SCHEDUALING_REPEAT_STYLE', 'Monthly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MRP_SCHEDUALING_REPEAT_STYLE', 'Number of Repetition', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SCHEDUALING_REPEAT_STYLE', 'Weekly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCHEDUALING_REPEAT_STYLE', 'Interval', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MRP_SCHEDUALING_REPEAT_STYLE', 'No Repetition', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCHEDUALING_SEND_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDUALING_SEND_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCHEDUALING_SEND_STYLE', 'Spesefic Date', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCHEDUALING_SEND_STYLE', 'Immediately', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCHEDULIND_CHECK_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDULIND_CHECK_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCHEDULIND_CHECK_TYPE', 'Database Triggers', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCHEDULIND_CHECK_TYPE', 'Timer Interval', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SCHEDULING_RECEIVE_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDULING_RECEIVE_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCHEDULING_RECEIVE_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SCHEDULING_RECEIVE_STYLE', 'Both', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCHEDULING_RECEIVE_STYLE', 'Accepted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDULING_RESPONDS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCHEDULING_RESPONDS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SCHEDULING_RESPONDS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCHEDULING_RESPONDS', 'Read', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SCHEDULING_RESPONDS', 'Close', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCHEDULING_RESPONDS', 'Ignore', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCHEDULING_SENDING', '
Insert into IAS_SYS.MRP_FLAGS 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDULING_SENDING', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCHEDULING_SENDING', 'SMS', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SCHEDULING_SENDING', 'Email', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCHEDULING_SENDING', 'Local Net', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCRAP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCRAP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SCRAP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SCRAP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCRAP_TYPE', 'Scrap For Sale', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCRAP_TYPE', 'Scrap For Raw', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SCRAP_TYPE', 'Scrap For Production', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SCRAP_TYPE', 'Bad Scarp', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SCTORS CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCTORS CATEGORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCTORS CATEGORY', 'Un Production', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SCTORS CATEGORY', 'Production', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_ADJ_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VA
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_ADJ_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_ADJ_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_ADJ_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_ADJ_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_ADJ_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_ADJ_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_ADJ_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_ADJ_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_BATCH_USED', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_BATCH_USED', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_BATCH_USED', 'Yes', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_BATCH_USED', 'No', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_INV_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_INV_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_INV_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_INV_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_INV_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_INV_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_INV_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_INV_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_INV_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_INV_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_MRC_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_MRC_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_MRC_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_MRC_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_MRC_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MRC_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_MRC_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MRC_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_MRC_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_MRF_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_MRF_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_MRF_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_MRF_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_MRF_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MRF_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_MRF_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_MRF_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_MRF_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MRF_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_MRQ_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_MRQ_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_MRQ_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_MRQ_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_MRQ_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_MRQ_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_MRQ_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_MRQ_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MRQ_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MRQ_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_MRQ_LVL', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_MRQ_LVL', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VA
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_MRQ_LVL', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_MRQ_LVL', 'Batches of produts', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_MRQ_LVL', 'Work orders', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MRQ_LVL', 'Products inside work orders', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MRQ_LVL', 'Classification of materials', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_MRR_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_MRR_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_MRR_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_MRR_FORMAT', 'TR.
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_MRR_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_MRR_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MRR_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_MRR_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MRR_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_MRR_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_MT_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_MT_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_MT_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_MT_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_MT_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_MT_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_MT_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_MT_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MT_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MT_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_SFC_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_SFC_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_SFC_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_SFC_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_SFC_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_SFC_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_SFC_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_SFC_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_SFC_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_TRAN_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_TRAN_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_TRAN_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_TRAN_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_TRAN_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_TRAN_TYPE', 'Request Incom', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_TRAN_TYPE', 'Translate', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_TRAN_TYPE', 'Request Outcom', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_TRAN_TYPE', 'Production', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_TRAN_TYPE', 'Adjustment', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_WHERHOUS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_WHERHOUS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_WHERHOUS_TYPE', 'Wip', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_WHERHOUS_TYPE', 'Maintenance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_YES_NO', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_YES_NO', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_YES_NO', 'No', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_YES_NO', 'Yes', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRS_SOURCE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRS_SOURCE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRS_SOURCE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRS_SOURCE', 'Receive Matiral', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRS_SOURCE', 'Reqest Matiral', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRS_SOURCE', 'Standerd Consumption', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRS_SOURCE', 'Close Work Order', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRS_TYPE', 'Onyx', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRS_TYPE', 'MRP', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MSG_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MSG_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MSG_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MSG_STYLE', 'Caution', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MSG_STYLE', 'Note', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MSG_STYLE', 'Stop', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'MTX_TRX_TYPS', '5', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MTX_TRX_TYPS', '3', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'MTX_TRX_T
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MTX_TRX_TYPS', 'Inward Cash', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MTX_TRX_TYPS', 'P Check-Ext', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MTX_TRX_TYPS', 'Outward Cash', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MTX_TRX_TYPS', 'Other Financial Transactions', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'MTX_TRX_TYPS', '6', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MTX_TRX_TYPS', '1', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'MTX_TRX_TYPS', '2', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'NO0_YES1', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'NO0_YES1', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'NO0_YES1', 'Yes', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'N
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'NONE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'NONE', 'None', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'OCHK_AUTO_SER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'OCHK_AUTO_SER', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'OCHK_AUTO_SER', 'Automatic', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'OCHK_AUTO_SER', 'Manualy', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'OP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'OP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'OP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'OP', 'Insert', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'OP', 'Delete', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'OP', 'Update', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'ORDER_REF', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'ORDER_REF', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'ORDER_REF', 'Maintenance Planning', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'ORDER_REF', 'Unexpected Maintenance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'ORIENT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'ORIENT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'ORIEN
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'ORIENT', 'Landscape', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'OS_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'OS_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'OS_FLAG', 'Not Stoped', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'OS_FLAG', 'Stoped', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'OUT_B_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'OUT_B_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'OUT_B_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'OUT_B_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'OUT_B_STATUS', 'Sended', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'OUT_B_STATUS', 'Aproved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'OUT_B_STATUS', 'Canceled', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'OUT_B_STATUS', 'New', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'OUT_CHK_PYMNT_MTHD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'OUT_CHK_PYMNT_MTHD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'OUT_CHK_PYMNT_MTHD', 'Account', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'OUT_CHK_PYMNT_MTHD', 'Cash', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'OUT_PYMT_MTHD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'OUT_PYMT_MTHD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'OUT_PYMT_MTHD', 'Cash', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'OUT_PYMT_MTHD', 'On Account', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'OVRD_BLK_LST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'OVRD_BLK_LST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'OVRD_BLK_LST', 'CanT Override Black List', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'OVRD_BLK_LST', 'Override Black List', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PASS_RSN_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PASS_RSN_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PASS_RSN_FLAG', 'Change Remit', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE,
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 0, 'PCM_CLOSE', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 1, 'PCM_CLOSE', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 0, 'PCM_CLOSE', 'Not Calcalted Yet', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 1, 'PCM_CLOSE', 'Costing Calcalted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 54, 2, 'PCM_TRANS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 53, 1, 'PCM_TRANS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 55, 3, 'PCM_TRANS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 53, 1, 'PCM_TRANS_TYPE', 'Account Balance in G.L', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 54, 2, 'PCM_TRANS_TYPE', 'Servece Centers on Production centers', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 55, 3, 'PCM_TRANS_TYPE', 'Production centers on its Products', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'PHONE_FAX_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PHONE_FAX_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PHONE_FAX_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'PHONE_FAX_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PHONE_FAX_FLAG', 'Telephone', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PHONE_FAX_FLAG', 'Fax', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'PHONE_FAX_FLAG', 'Email', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'PHONE_FAX_FLAG', 'Post Box', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'PLOTTYPE', 'OG_LABEL_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'PLOTTYPE', 'OG_FILL_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PLOTTYPE', 'OG_NONE_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'PLOTTYPE', 'OG_SYMBOL_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'PLOTTYPE', 'OG_LINE_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PLOTTYPE', 'OG_BAR_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'PLOTTYPE', 'OG_SPIKE_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'PLOTTYPE', 'OG_LINE_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Val
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'PLOTTYPE', 'OG_SPIKE_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PLOTTYPE', 'OG_BAR_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'PLOTTYPE', 'OG_LABEL_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'PLOTTYPE', 'OG_FILL_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'PLOTTYPE', 'OG_SYMBOL_PLOTTYPE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'POST_TRSR_TRX', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'POST_TRSR_TRX', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'POST_TRSR_TRX', 'Not Allowed', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'POST_TRSR_TRX', 'Allowed', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PRD_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PRD_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'PRD_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'PRD_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'PRD_FLG', 'Quarter', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PRD_FLG', 'Per Two Months', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PRD_FLG', 'Monthly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'PRD_FLG', 'Per Sex Months', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'PRD_FLG', 'Per Year', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PRD_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'PRD_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'PRD_TYPE', 'Semi item', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PRD_TYPE', 'Final Item', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PRICE_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PRICE_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PRICE_TYPE', 'By Item', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PRICE_TYPE', 'By Item and Warehouse', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'PROD_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'P
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PROD_TYPE', 'For Recycle', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'PROD_TYPE', 'For Producing', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PUR_EXCH_HIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PUR_EXCH_HIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PUR_EXCH_HIDE', 'Hide', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PUR_EXCH_HIDE', 'Visible', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PYMNT_MTHD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PYMNT_MTHD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PYMNT_MTHD', 'Cheque', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PYMNT_MTHD', 'Cash', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PYMNT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PYMNT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PYMNT_STATUS', 'Not Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PYMNT_STATUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PYMT_MTX_TRX', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'PYMT_MTX_TRX', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'PYMT_MTX_TRX', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PYMT_MTX_TRX', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PYMT_MTX_TRX', 'Outward Remittances', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'PYMT_MTX_TRX', 'Outward Remittances Modifications', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'PYMT_MTX_TRX', 'Outward Checks', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PYMT_MTX_TRX', 'Inward Remittances', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'PYMT_STSTUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'PYMT_STSTUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'PYMT_STSTUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'PYMT_STSTUS', 'Non Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'P_REP_PERIOD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'P_REP_PERIOD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'P_REP_PERIOD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'P_REP_PERIOD', 'Quarter', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'P_REP_PERIOD', 'Week', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'P_REP_PERIOD', 'Month', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'P_REP_PERIOD', 'Year', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'P_STS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'P_STS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'P_STS', 'New', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'P_STS', 'Approved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'QRTR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'QRTR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'QRTR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 12, 12, 'QRTR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 12, 12, 'QRTR', 'Fourth Q', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'QRTR', 'Frist Q', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'QRTR', 'Third Q', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'QRTR', 'Scond Q', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'RCE_MACH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'RCE_MACH', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'RCE_MACH', 'Not Machinery', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'RCE_MACH', 'Machinery', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'RECORDSTATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'RECORDSTATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'RECORDSTATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'RECORDSTATUS', 'Approved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'RECORDSTATUS', 'Hold', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'RECORDSTATUS', 'Disapproved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REC_ST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'REC_ST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'REC_ST', 'Hold', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REC_ST', 'Disapproved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REC_ST', 'approved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'REF_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REF_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'REF_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REF_TYPE', 'Remitance  Way', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'REF_TYPE', 'Voucher Notes', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'REF_TYPE', 'Site Address', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'REMIT_STATUS', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'REMIT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'REMIT_STATUS', 'Cancelled', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REMIT_STATUS', 'New', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'REMIT_STATUS', 'Reversed', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'REMIT_STATUS', 'Approved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REMIT_STATUS', 'Sent To Teller', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'REMIT_STATUS', 'Paid', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'REMIT_STATUS', 'Sent', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'REMIT_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'REMIT_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'REMIT_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'REMIT_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REMIT_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'REMIT_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'REMIT_TRX_TYPS', 'Outward Checks', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REMIT_TRX_TYPS', 'Inward Remittance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'REMIT_TRX_TYPS', 'Outward Checks  (National)', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'REMIT_TRX_TYPS', 'Checks Purchasing', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REMIT_TRX_TYPS', 'Outward Cash Remittance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'REMIT_TRX_TYPS', 'Inward Remittance  (National)', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'REMIT_TRX_TYPS', 'Outward Cash Remittance (National)', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REPRNT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REPRNT_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REPRNT_STATUS', 'NON POSTED', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REPRNT_STATUS', 'POSTED', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REP_LINE_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'REP_LINE_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REP_LINE_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'REP_LINE_FLG', 'Without lines', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REP_LINE_FLG', 'Point lines', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REP_LINE_FLG', 'Appearance Line', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REP_LINK', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'REP_LINK', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REP_LINK', 'Is Link', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'REP_LINK', 'Is not Link', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 66, 66, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 52, 52, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 51, 51, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 32, 32, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 31, 31, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_D
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REP_MOVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REP_MOVE', 'Export -', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REP_MOVE', 'Receive +', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'REP_MOVE', 'Product Scrap+', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'REP_MOVE', 'Consumption Scarp -', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'REP_MOVE', 'Product+', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 66, 66, 'REP_MOVE', 'beginning Balcane +', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'REP_MOVE', 'Refound -', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 31, 31, 'REP_MOVE', 'Transmitted to -', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 32, 32, 'REP_MOVE', 'Transmitted from', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 51, 51, 'REP_MOVE', 'Adjustment -', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 52, 52, 'REP_MOVE', 'Adjustment +', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'REP_MOVE', 'Standerd Consumption -', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'REP_TRN_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'REP_TRN_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REP_TRN_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'REP_TRN_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REP_TRN_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'REP_TRN_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 31, 'REP_TRN_TYP', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REP_TRN_TYP', 'Expot Product', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REP_TRN_TYP', 'Matiral Recive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'REP_TRN_TYP', 'Working Card', 1)
Insert into IAS_SYS.MR
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 31, 'REP_TRN_TYP', 'Transmit Materials', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'REP_TRN_TYP', 'Matiral Refound', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'REP_TRN_TYP', 'Stoping Resource', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'REP_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REP_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'REP_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REP_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'REP_TYPES', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'REP_TYPES', 'Unit time', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'REP_TYPES', 'Unit', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'REP_TYPES', 'Others', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REP_TYPES', 'Time', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REQ_DOCS_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REQ_DOCS_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REQ_DOCS_FLAG', 'Not Requested', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REQ_DOCS_FLAG', 'Requested', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'REQ_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'REQ_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'REQ_STATUS', 'Waiting', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'REQ_STATUS', 'Closed', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'RE_SEND_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'RE_SEND_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'RE_SEND_STATUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'RE_SEND_STATUS', 'New', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SAL_EXCH_HIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SAL_EXCH_HIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SAL_EXCH_HIDE', 'Hide', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VA
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SATISFACTORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SATISFACTORY', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SATISFACTORY', 'Not Satisfactory', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SATISFACTORY', 'Satisfactory', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SCRAP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SCRAP_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SCRAP_TYPE', 'Product', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SCRAP_TYPE', 'Matiral Row', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SEARCH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SEARCH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SEARCH_TYPE', 'Name Criteria', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SEARCH_TYPE', 'Id Critria', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'SERVICES_DISTRIBUTION_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SERVICES_DISTRIBUTION_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SERVICES_DISTRIBUTION_STYLE', 'Original Account', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'SERVICES_DISTRIBUTION_STYLE', 'Intermediate Account', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SFC_INVENTORY_SHEET_BSD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'SFC_INVENTORY_SHEET_BSD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'SFC_INVENTORY_SHEET_BSD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'SFC_INVENTORY_SHEET_BSD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SFC_INVENTORY_SHEET_BSD', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SFC_INVENTORY_SHEET_BSD', 'Shop Floor', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'SFC_INVENTORY_SHEET_BSD', 'Lines', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'SFC_INVENTORY_SHEET_BSD', 'Shifts', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SFC_INVENTORY_SHEET_BSD', 'Branch', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'SFC_INVENTORY_SHEET_BSD', 'Work Orders', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'SFC_INV_SHT_PER_T', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'SFC_INV_SHT_PER_T', 'Schrduling', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SHOW_HDR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SHOW_HDR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SHOW_HDR', 'SHOW', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SHOW_HDR', 'NOT SHOW', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SND_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SND_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SND_STATUS', 'Non Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SND_STATUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SP_STS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SP_STS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'SP_STS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'SP_STS', 'NEW', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SP_STS', 'APPROVED', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SP_STS', 'RECYCLED', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SRC_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SRC_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'SRC_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SRC_FLAG', 'Finanical Trx', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SRC_FLAG', 'By Hand', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'SRC_FLAG', 'Black List', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'STK_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'STK_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'STK_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'STK_STATUS', 'Result Entered', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'STK_STATUS', 'Approved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'STK_STATUS', 'NEW', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'STS_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'STS_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'S
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'STS_FLG', 'Approved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'STS_FLG', 'Paid', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'STS_FLG', 'Disapproved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'ST_YEAR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'ST_YEAR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'ST_YEAR', 'Closed', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'ST_YEAR', 'Opened', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SYS_MODE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'SYS_MODE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SYS_MODE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SYS_MODE', 'Production Managment only', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SYS_MODE', 'Production and Costing Managment', 1)
Insert into IAS_SYS.MRP_FLAGS 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'S_ACTIVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'S_ACTIVE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'S_ACTIVE', 'Inactive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'S_ACTIVE', 'Active', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'S_PRG_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'S_PRG_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'S_PRG_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'S_PRG_TYP', 'Maintanance', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'S_PRG_TYP', 'Report', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'S_PRG_TYP', 'Query', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'S_SEQ_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'S_SEQ_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'S_SEQ_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'S_SEQ_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'S_SEQ_TYP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'S_SEQ_TYP', '
Insert into IAS_SY
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'S_SEQ_TYP', 'Sequance Table Level', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'S_SEQ_TYP', 'Five Fileds', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'S_SEQ_TYP', 'Two Fields', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'S_SEQ_TYP', 'Four Fields', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'S_SEQ_TYP', 'Three Fields', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'S_SEQ_TYP', 'Sex Fields', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'S_SEQ_TYP', 'One Field', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRANS_CATEG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRANS_CATEG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRANS_CATEG', 'Issuee', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRANS_CATEG', 'Recieve', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 31, 31, 'TRANS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 11, 11, 'TRANS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 41, 41, 'TRANS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 21, 21, 'TRANS_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 41, 41, 'TRANS_TYPE', ' Materials FG', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'TRANS_TYPE', 'Materials IN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 31, 31, 'TRANS_TYPE', 'Material Transmutation', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 21, 21, 'TRANS_TYPE', 'Materials Refund', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRANS_USERS', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'TRANS_USERS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRANS_USERS', 'User has initialize before', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'TRANS_USERS', 'User has no initialize before', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'TRAN_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'TRAN_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'TRAN_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRAN_TYPE', '
Insert into IA
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'TRAN_TYPE', 'REQEST_INCOM', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'TRAN_TYPE', 'REQEST_OUTCOM', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'TRAN_TYPE', 'PRODUCTION', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRAN_TYPE', 'ADJUSTMENT', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRAN_TYPE', 'TRANSLATE', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRSR_TRX_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRSR_TRX_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRSR_TRX_STATUS', 'Non Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRSR_TRX_STATUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRSR_TRX_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRSR_TRX_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRSR_TRX_TYPE', 'Depositing', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRSR_TRX_TYPE', 'Drawing', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRVL_CNCL_NOTIF_SIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRVL_CNCL_NOTIF_SIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'TRVL_CNCL_NOTIF_SIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRVL_CNCL_NOTIF_SIDE', 'Company', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'TRVL_CNCL_NOTIF_SIDE', 'Others', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRVL_CNCL_NOTIF_SIDE', 'Bank', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRVL_CNCL_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRVL_CNCL_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRVL_CNCL_TYPE', 'Check Damage', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRVL_CNCL_TYPE', 'Check Loss', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRV_PUR_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRV_PUR_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'TRV_PUR_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'TRV_PUR_STATUS', 'Paid', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE,
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRV_PUR_STATUS', 'New', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'TRX_LVL_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRX_LVL_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRX_LVL_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'TRX_LVL_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRX_LVL_FLAG', 'All Trx', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRX_LVL_FLAG', 'For One Trx', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'TRX_LVL_FLAG', 'Last Period', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'TRX_LVL_FLAG', 'Last Specific No Trx', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'TRX_PRP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRX_PRP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'TRX_PRP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'TRX_PRP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'TRX_PRP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 9, 9, 'TRX_PRP', 'Others', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRX_PRP', 'Loss', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'TRX_PRP', 'Out', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRX_PRP', 'Givting', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'TRX_PRP', 'Damage', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'TRX_PRP', 'Sall', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'TRX_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRX_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRX_STATUS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'TRX_STATUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRX_STATUS', 'Approved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRX_STATUS', 'NEW', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'TRX_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'TRX_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'TRX_TYPE', 'Paid Trx', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'TRX_TYPE', 'Recivable Trx', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'USE_BLK_LST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'USE_BLK_LST', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'USE_BLK_LST', 'Not Use Black List', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'USE_BLK_LST', 'Use Black List', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 21, 21, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 53, 53, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 33, 33, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 52, 52, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 51, 51, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 41, 41, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 30, 30, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 54, 55, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 55, 56, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 53, 54, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 40, 40, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 20, 20, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 11, 11, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 50, 50, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 34, 34, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 32, 32, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 31, 31, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 10, 10, 'VAR_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 41, 41, 'VAR_TYPE', 'Outgoing cost of Spare parts', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 40, 40, 'VAR_TYPE', 'Outgoing cost of Raw materials', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 33, 33, 'VAR_TYPE', 'Outgoing count of Raw materials', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 50, 50, 'VAR_TYPE', 'Raw materials cost in Bom', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 34, 34, 'VAR_TYPE', 'Work orders count', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 52, 52, 'VAR_TYPE', 'Bill of Materials cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 32, 32, 'VAR_TYPE', 'Products count', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 31, 31, 'VAR_TYPE', 'Machines count', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 21, 21, 'VAR_TYPE', 'Breakdown Hours', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 55, 56, 'VAR_TYPE', 'Net Weight', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 54, 55, 'VAR_TYPE', 'Average Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 53, 54, 'VAR_TYPE', 'Last Production cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'VAR_TYPE', 'Scrap Qty', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 53, 53, 'VAR_TYPE', 'Standard Cost', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 51, 51, 'VAR_TYPE', 'Packing Materials cost in Bom', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 10, 10, 'VAR_TYPE', 'Production Qty', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 20, 20, 'VAR_TYPE', 'Production Hours', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'WEEKS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'WEEKS', 'The Week', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 3, 'WH_TRANS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 2, 'WH_TRANS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 1, 'WH_TRANS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'WH_TRANS', 'Form Wh To Wh', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 2, 'WH_TRANS', 'From Wh To Multi WH', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 3, 'WH_TRANS', 'From Mulit Wh to Multi Wh', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 51, 51, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 42, 42, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 22, 22, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VA
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 41, 41, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 52, 52, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 21, 21, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 11, 11, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 32, 32, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 12, 12, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 31, 31, 'WH_TRN_TP', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 51, 51, 'WH_TRN_TP', 'Adjustment (-)', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FL
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 31, 31, 'WH_TRN_TP', 'Warehouse Transfer-From', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 32, 32, 'WH_TRN_TP', 'Warehouse Transfer-To', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 52, 52, 'WH_TRN_TP', 'Adjustment (+)', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'WH_TRN_TP', 'Source of Scrap', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'WH_TRN_TP', 'Materials Export', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 12, 12, 'WH_TRN_TP', 'Warehouse IN To', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 22, 22, 'WH_TRN_TP', 'Warehouse Refund-To', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'WH_TRN_TP', 'Materials Recieve', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 42, 42, 'WH_TRN_TP', 'Warehouse FG-To', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'WH_TRN_TP', 'Materials Scrap', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 41, 41, 'WH_TRN_TP', 'Warehouse FG-From', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'WH_TRN_TP', 'Production Produce', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 11, 11, 'WH_TRN_TP', 'Warehouse IN From', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'WH_TRN_TP', 'Production Consume', 2)
Insert into IAS_SY
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'WH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'WH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'WH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'WH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'WH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'WH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'WH_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'WH_TYPE', 'Adjustment(+)', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'WH_TYPE', 'Adjustment(-)', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'WH_TYPE', 'Warehouse Transmutation-From', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'WH_TYPE', 'Warehouse Transmutation-To', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'WH_TYPE', 'Materials receive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'WH_TYPE', 'Materials Export', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'WH_TYPE', 'Production Transaction', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'WIN_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'WIN_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'WIN_FLG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'WIN_FLG', 'Nothing', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'WIN_FLG', 'Profit', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'WIN_FLG', 'Loss', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'WO_SCHDL', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'WO_SCHDL', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'WO_SCHDL', ' 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'WO_SCHDL', 'Not Schedul yet', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'WO_SCHDL', 'All', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'WO_SCHDL', 'Currently Scheduling', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'W_O_R', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'W_O_R', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'W_O_R', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'W_O_R', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'W_O_R', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'W_O_R', 'inventory order', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'W_O_R', 'Customer Order', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'W_O_R', 'Multi Customer Orders', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'W_O_R', 'Work plan', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'W_O_R', 'Automatic order', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'W_O_R', 'Subcontract', 2)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'W_O_S', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'W_O_S', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'W_O_S', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'W_O_S', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'W_O_S', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'W_O_S', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'W_O_S', 'Released', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'W_O_S', 'Approved', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'W_O_S', 'Inactive', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'W_O_S', 'Close', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'W_O_S', 'WIP', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'W_O_S', 'Completed', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'YEAR', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'YEAR', 'Yearly', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'YES_NO_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'YES_NO_FLAG', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'YES_NO_FLAG', 'No', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'YES_NO_FLAG', 'Yes', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 0, 'MRP_RESTRICT', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 1, 'MRP_RESTRICT', '
ALTER TABLE 
SELECT CONSTRAINT_NAME,TABLE_NAME   FROM ALL_CONSTRAINTS  WHERE OWNER = :b1  AND CONSTRAINT_TYPE = ''R''  AND TABLE_NAME IN (SELECT TABLE_NAME   FROM MRP_TRNS_TABLE )"
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDUALING_SEND_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCHEDUALING_SEND_STYLE', 'Spesefic Date', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCHEDUALING_SEND_STYLE', 'Immediately', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCHEDULIND_CHECK_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDULIND_CHECK_TYPE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SCHEDULIND_CHECK_TYPE', 'Database Triggers', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SCHEDULIND_CHECK_TYPE', 'Timer Interval', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SCHEDULING_RECEIVE_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SCHEDULING_RECEIVE_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SCHEDULING_RECEIVE_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SCHEDULING_RECEIVE_STYLE', 'Both', 1)
CREATE OR REPLACE PACKAGE WEIGHT_PKG AS
  FUNCTION FNC_GET_BASE_WEIGHT_UNT RETURN VARCHAR2;
  FUNCTION FNC_WEIGHT_UNT         (P_UNIT_CODE IN MRP_CRP_UNITS_COST.UNIT_CODE%TYPE) RETURN NUMBER;
  FUNCTION FNC_FACTOR_WEIGHT_UNT  (P_UNIT_CODE IN MRP_CRP_UNITS_COST.UNIT_CODE%TYPE) RETURN NUMBER;
  FUNCTION FNC_GET_ITEM_QTY_WEIGHT(P_CMP_NO IN NUMBER, P_BRN_NO IN NUMBER  , P_ITEM_CODE IN MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE, P_QTY IN NUMBER DEFAULT 1) RETURN NUMBER;
  FUNCTION FNC_GET_BOM_WEIGHT     ( P_CMP_NO IN NUMBER, P_BRN_NO IN NUMBER , P_BOM_CODE IN MRP_BOM_BOM_MSTR.BOM_CODE%TYPE, P_ITEM_CODE IN MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE, P_WEIGHT_TYPE IN NUMBER) RETURN NUMBER;
  FUNCTION FNC_IS_ITEM_WEIGHT_UNT ( P_CMP_NO IN NUMBER, P_BRN_NO IN NUMBER , P_ITEM_CODE IN MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN NUMBER;
CREATE OR REPLACE PACKAGE BODY WEIGHT_PKG AS
  FUNCTION FNC_GET_BASE_WEIGHT_UNT  RETURN VARCHAR2 IS
  BEGIN
            SELECT UNIT_CODE INTO V_UNIT_CODE
            FROM  MRP_CRP_UNITS_COST
            WHERE    NVL(WEIGHTED,0) = 1 AND NVL(BASE_WEIGHTED,0) = 1 AND
    EXCEPTION WHEN OTHERS THEN
  FUNCTION FNC_WEIGHT_UNT( P_UNIT_CODE IN MRP_CRP_UNITS_COST.UNIT_CODE%TYPE) RETURN NUMBER IS
  BEGIN
         SELECT NVL(WEIGHTED,0) INTO V_WEIGHTED
            FROM  MRP_CRP_UNITS_COST
            WHERE   UNIT_CODE = P_UNIT_CODE AND
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_FACTOR_WEIGHT_UNT( P_UNIT_CODE IN MRP_CRP_UNITS_COST.UNIT_CODE%TYPE) RETURN NUMBER IS
  BEGIN
         SELECT NVL(FACTOR_WEIGHT,0) INTO V_FACTOR_WEIGHT
            FROM  MRP_CRP_UNITS_COST
            WHERE   UNIT_CODE = P_UNIT_CODE AND
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_GET_ITEM_QTY_WEIGHT(P_CMP_NO IN NUMBER, P_BRN_NO IN NUMBER , P_ITEM_CODE IN MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE, P_QTY IN NUMBER DEFAULT 1 ) RETURN NUMBER IS
  BEGIN
            SELECT UNIT_CODE,ITEM_WEIGHT  
            FROM MRP_CRP_ITEMS_DETAILS
            WHERE  CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
       EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_GET_BOM_WEIGHT( P_CMP_NO IN NUMBER, P_BRN_NO IN NUMBER ,  P_BOM_CODE IN MRP_BOM_BOM_MSTR.BOM_CODE%TYPE, P_ITEM_CODE IN MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE, P_WEIGHT_TYPE IN NUMBER) RETURN NUMBER IS
  BEGIN
           (   SELECT CMP_NO, BRN_NO, ITEM_ROW , QTY, 
               FROM MRP_BOM_BOM_ROW
               WHERE CMP_NO = P_CMP_NO AND
          EXCEPTION WHEN OTHERS THEN RETURN 0;         
  FUNCTION FNC_IS_ITEM_WEIGHT_UNT ( P_CMP_NO IN NUMBER, P_BRN_NO IN NUMBER , P_ITEM_CODE IN MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN NUMBER IS
   BEGIN
            SELECT 1  INTO V_WEIGHTED
            FROM MRP_CRP_ITEMS_DETAILS
            WHERE  CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
          EXCEPTION WHEN OTHERS THEN
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_MRQ_LVL', 'Work orders', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MRQ_LVL', 'Products inside work orders', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MRQ_LVL', 'Classification of materials', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_MRR_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_MRR_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_MRR_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_MRR_FORMAT', 'TR.
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_MRR_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_MRR_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MRR_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_MRR_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MRR_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_MRR_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MRP_SFC_MT_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MRP_SFC_MT_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_MT_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MRP_SFC_MT_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MRP_SFC_MT_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MRP_SFC_MT_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'MRP_SFC_MT_FORMAT', 'TR.YY.NNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRP_SFC_MT_FORMAT', '', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'MRP_SFC_MT_FORMAT', 'TR.YY.MM.NNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MRP_SFC_MT_FORMAT', 'TR.NNNNNN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MRP_SFC_SFC_FORMAT', 'TR.YY.MM.W.DD.NN', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST)
CREATE OR REPLACE PACKAGE TRAC_PKG AS
/*This Procedure Will called in screen and get the user number 
PROCEDURE SET_USR(USR    NUMBER  ,
PROCEDURE   ALL_VAL_OP ( VTABLE_NAME VARCHAR2 ,VOP NUMBER,VCOL VARCHAR2,VNEW VARCHAR2,VOLD VARCHAR2,VPK1 VARCHAR2 DEFAULT NULL,
CREATE OR REPLACE PACKAGE BODY TRAC_PKG AS
/*This Procedure Will called in screen and get the user number and the program no 
 PROCEDURE SET_USR(USR    NUMBER,
 BEGIN
      BEGIN
     SELECT U_ID
     FROM   USER_R
     WHERE  U_ID =USR ;
     END;
PROCEDURE  ALL_VAL_OP ( VTABLE_NAME VARCHAR2 ,VOP NUMBER,VCOL VARCHAR2,VNEW VARCHAR2,VOLD VARCHAR2,VPK1 VARCHAR2 DEFAULT NULL,
BEGIN  
SELECT NVL(MAX(D_ID ),0)+1
FROM  ALL_COL_HISTORY;
INSERT INTO   MRP_ALL_COL_HISTORY(   D_ID ,TABLE_NAME   ,OP   ,USERID      ,USERNAME    ,CHANGDATE,PROGNAME         ,COL ,NEW ,OLD     )
 END;        
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MRS_TYPE', 'MRP', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MSG_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MSG_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MSG_STYLE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 0, 0, 'MSG_STYLE', 'Caution', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'MSG_STYLE', 'Note', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'MSG_STYLE', 'Stop', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 4, 4, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 5, 5, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 0, 0, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 8, 8, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 7, 7, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 9, 9, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 3, 3, 'MTX_TRX_TYPS', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 8, 8, 'MTX_TRX_TYPS', '5', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 6, 6, 'MTX_TRX_TYPS', '3', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 7, 7, 'MTX_TRX_T
CREATE OR REPLACE PACKAGE RPS_PKG IS
--PROCEDURE INSRT_PRORTY(PT IN OUT PRORTY,PRT PRORTY_REC,VIC VARCHAR2,VPRTY NUMBER,N NUMBER);
PROCEDURE READ_PR(PT IN OUT PRORTY,PRT PRORTY_REC);
--PROCEDURE SORT_PROPRT (PT IN OUT PRORTY,PRT PRORTY_REC);
  PROCEDURE INSRT_MA(MA IN OUT MTR_ARY,MAR MTR_ARY_R,V_MAIN VARCHAR2,
  PROCEDURE READ_MA(MA IN OUT MTR_ARY,MAR MTR_ARY_R);
  PROCEDURE INSRT_ME(MEA IN OUT ME_ARY,MER ME_R,V_ME  VARCHAR2,
  PROCEDURE INSRT_MAIN(MNA IN OUT MAIN_ARY,MNR MAIN_R,V_MAIN VARCHAR2,
  PROCEDURE INSRT_SUB_MAIN(SMA IN OUT SUB_MAIN_ARY,SMR SUB_MAIN_R,V_SUB VARCHAR2,
  PROCEDURE MAIN_PROG(PT IN OUT PRORTY,PRT PRORTY_REC,CMP NUMBER,BRN NUMBER,USR VARCHAR2,WIP VARCHAR2,INV VARCHAR2,FRC VARCHAR2);
  PROCEDURE TEMP(ITM VARCHAR2,QY NUMBER);
  FUNCTION CATG(ITM_ROW VARCHAR2) RETURN NUMBER;
  FUNCTION DIVISIBILITY( Req_QTY NUMBER,IROW VARCHAR2) RETURN NUMBER;
  PROCEDURE CHK_CLAS;
  PROCEDURE INSRT_ON_HAND;
  PROCEDURE CHK_ME;
  PROCEDURE CALC_ON_HAND;
  PROCEDURE POSSIBLE_PRODUCTION_QTY;
  PROCEDURE UNGROUP_ON_HAND_QTY_FOR_SUB_PR;
  PROCEDURE SUB_PRODUCT(IC VARCHAR2,BM VARCHAR2,DFT NUMBER);
  PROCEDURE POSSIBLE_QTY_PRODUCER(T_MAN VARCHAR,T_QTY NUMBER);
  FUNCTION CHK_SIZED_MTR( MTR VARCHAR2, TYP NUMBER)RETURN NUMBER;
  FUNCTION ON_HAND_FORCAST(MRT VARCHAR2,FLG NUMBER) RETURN NUMBER;
  FUNCTION ON_HAND_ONYX( MRT VARCHAR2,FLG NUMBER ) RETURN NUMBER;
  FUNCTION On_Hand_WIP( MRT VARCHAR2,FLG NUMBER )RETURN NUMBER;
  PROCEDURE RESERVED(V_QTY NUMBER);
  PROCEDURE INSRT_SIZED_MTR( MTR VARCHAR2, TYP NUMBER, V_QTY NUMBER);
  PROCEDURE UPDT_SIZED_MTR( MTR VARCHAR2, TYP NUMBER, V_QTY NUMBER);
  FUNCTION DEFAULT_BOM(ITM VARCHAR2)RETURN VARCHAR2;
  PROCEDURE DISASSMEBLY(ICOD VARCHAR2);
CREATE OR REPLACE PACKAGE BODY RPS_PKG IS
 PROCEDURE INSRT_MA(MA IN OUT MTR_ARY,MAR MTR_ARY_R, V_MAIN VARCHAR2,
 BEGIN
 PROCEDURE INSRT_ME(MEA IN OUT ME_ARY,MER ME_R,V_ME  VARCHAR2,
 BEGIN
 PROCEDURE INSRT_MAIN(MNA IN OUT MAIN_ARY,MNR MAIN_R,V_MAIN VARCHAR2,
 BEGIN
 PROCEDURE INSRT_SUB_MAIN(SMA IN OUT SUB_MAIN_ARY,SMR SUB_MAIN_R,V_SUB  VARCHAR2,
 BEGIN
 PROCEDURE MAIN_PROG(PT IN OUT PRORTY,PRT PRORTY_REC,CMP NUMBER,BRN NUMBER,USR VARCHAR2,WIP VARCHAR2,INV VARCHAR2,FRC VARCHAR2) IS
 BEGIN
DELETE FROM MRP_MRP_PRODUCTION_QTY_TEMP
WHERE  USR_NAME = P_USR
INSERT INTO  MRP_MRP_PRODUCTION_QTY_TEMP
   EXCEPTION WHEN OTHERS THEN
 PROCEDURE TEMP(ITM VARCHAR2,QY NUMBER) IS
 BEGIN
      UPDATE MRP_MRP_SEIZED_MATERIALS
      WHERE  USR_NAME = P_USR
      WHERE  USR_NAME = P_USR
      UPDATE MRP_MRP_SEIZED_MATERIALS
      WHERE  USR_NAME = P_USR||'*'||P_USR
 EXCEPTION WHEN OTHERS THEN
 FUNCTION CATG(ITM_ROW VARCHAR2) RETURN NUMBER IS
 BEGIN
SELECT CTGR
FROM   MRP_CRP_ITEMS_CATEGORY
WHERE  ITEM_CODE = ITM_ROW
EXCEPTION WHEN OTHERS THEN
 FUNCTION DIVISIBILITY( Req_QTY NUMBER,IROW VARCHAR2) RETURN NUMBER IS
 BEGIN
SELECT DIVISIBILITY
FROM   MRP_CRP_I
WHERE  ITEM_CODE = IROW;
 PROCEDURE CHK_CLAS IS
 BEGIN
 FOR K IN ( SELECT ITEM_OPTION,OFFSET FROM MRP_CRP_ITEMS_CLASS_OPTIONS
                  WHERE  MRP_ITEM_CODE = MA(I).MRT
                  ORDER  BY PRIORITY ASC ) LOOP
                                                 0            , --// Addition from Sub Assembly
EXCEPTION WHEN OTHERS THEN
 PROCEDURE INSRT_ON_HAND IS
 BEGIN
  BEGIN
  SELECT DISTINCT LVL
  FROM   MRP_MRP_BOM_ROW_TEMP
  WHERE  USR_NAME  = P_USR
  SELECT NVL(QTY_N,0)
  FROM   MRP_MRP_BOM_ROW_TEMP
  WHERE  USR_NAME  = P_USR                  
  EXCEPTION WHEN OTHERS THEN
  END;
   EXCEPTION WHEN OTHERS THEN
 PROCEDURE CHK_ME IS
 BEGIN
EXCEPTION WHEN OTHERS THEN
 PROCEDURE CALC_ON_HAND IS
 BEGIN
EXCEPTION WHEN OTHERS THEN
 PROCEDURE POSSIBLE_PRODUCTION_QTY IS
 BEGIN
EXCEPTION WHEN OTHERS THEN
 PROCEDURE UNGROUP_ON_HAND_QTY_FOR_SUB_PR IS
 BEGIN
 SELECT ITEM_CODE,QTY,SM_TYPE
 FROM 
 WHERE  QTY <> 0
 SELECT DISTINCT  ITEM_CODE
 FROM   MRP_MRP_BOM_ROW_TEMP
 WHERE  CMP_NO  = P_CMP_NO
   AND  BOM_CODE IN(   SELECT BOM_ROW
   FROM   MRP_MRP_BOM_ROW_TEMP
   WHERE  USR_NAME = P_USR
 FOR J IN ( SELECT ITEM_ROW,QTY_N
FROM   MRP_MRP_BOM_ROW_TEMP
WHERE  CMP_NO   = P_CMP_NO
                                BEGIN
SELECT QTY
WHERE  ITEM_CODE = J.ITEM_ROW
                                    EXCEPTION WHEN OTHERS THEN
                                END;
EXCEPTION WHEN OTHERS THEN
 PROCEDURE SUB_PRODUCT(IC VARCHAR2,BM VARCHAR2,DFT NUMBER) IS
 BEGIN
FOR J IN (SELECT R.ITEM_CODE,R.ITEM_ROW,R.BOM_ROW,
  FROM 
  WHERE  M.ITEM_CODE   = R.ITEM_CODE                      AND
                                            0         , --// Addition from Sub Assembly
      EXCEPTION WHEN OTHERS THEN
 PROCEDURE POSSIBLE_QTY_PRODUCER(T_MAN VARCHAR,T_QTY NUMBER) IS
 BEGIN
  --// Insert possible quantity producer from the sub product
 FUNCTION CHK_SIZED_MTR( MTR VARCHAR2, TYP NUMBER)RETURN NUMBER IS
 BEGIN
SELECT QTY
FROM   MRP_MRP_SEIZED_MATERIALS
WHERE  USR_NAME  = P_USR
EXCEPTION WHEN NO_DATA_FOUND THEN
 PROCEDURE RESERVED(V_QTY NUMBER)
 BEGIN
    EXCEPTION WHEN OTHERS THEN
 PROCEDURE INSRT_SIZED_MTR( MTR VARCHAR2, TYP NUMBER, V_QTY NUMBER) IS
 BEGIN
SELECT NVL(MAX(SQE)+1,1)
FROM   MRP_MRP_SEIZED_MATERIALS;
INSERT INTO  MRP_MRP_SEIZED_MATERIALS
    EXCEPTION WHEN OTHERS THEN
     DELETE FROM MRP_MRP_SEIZED_MATERIALS
     WHERE  SM_REF   = MTR||TYP
     INSERT INTO  MRP_MRP_SEIZED_MATERIALS
 FUNCTION ON_HAND_FORCAST(MRT VARCHAR2,FLG NUMBER) RETURN NUMBER IS
 BEGIN
    SELECT COUNT(MRT)       -- Check If Row Qty used by anther BOM
FROM   MRP_MRP_SEIZED_MATERIALS
WHERE  ITEM_CODE = MRT AND SM_TYPE = 5
 BEGIN
   SEL := 'SELECT SUM(P_ORDER_DETAIL.I_QTY)-SUM(GRN_DETAIL.I_QTY)R_QTY
               FROM GRN_DETAIL,P_ORDER,
   WHERE P_ORDER.PO_NO=P_ORDER_DETAIL.PO_NO
 AND P_ORDER_DETAIL.I_CODE='''||MRT||'''GROUP BY P_ORDER_DETAIL.I_CODE';
                          SEL := 'SELECT SUM(D.I_QTY) 
                           FROM IAS_PI_BILL_MST M,
                                  WHERE M.PUR_TYPE = D.PUR_TYPE AND
EXCEPTION WHEN OTHERS THEN
       END;
 SELECT SUM(QTY)
 FROM   MRP_MRP_SEIZED_MATERIALS
 WHERE  ITEM_CODE = MRT AND SM_TYPE = 5
 FUNCTION ON_HAND_ONYX( MRT VARCHAR2,FLG NUMBER ) RETURN NUMBER IS
 BEGIN
    SELECT COUNT(MRT)       -- Check If Row Qty used by anther BOM
FROM   MRP_MRP_SEIZED_MATERIALS
WHERE  ITEM_CODE = MRT AND SM_TYPE = 4
 SEL := 'SELECT NVL(SUM(AVL_QTY),0) FROM STORAGE
     WHERE I_CODE = '''|| MRT ||'''';
 BEGIN
SELECT NVL(SUM(QTY),0)
FROM   MRP_SFC_MAT_RESERV
WHERE  ITEM_CODE = MRT
EXCEPTION WHEN OTHERS THEN
 SELECT SUM(QTY)
 FROM   MRP_MRP_SEIZED_MATERIALS
 WHERE  ITEM_CODE = MRT AND SM_TYPE = 4
 FUNCTION On_Hand_WIP( MRT VARCHAR2,FLG NUMBER )RETURN NUMBER IS
 BEGIN
    SELECT COUNT(MRT)       -- Check If Row Qty used by anther BOM
FROM   MRP_MRP_SEIZED_MATERIALS
WHERE  ITEM_CODE = MRT AND SM_TYPE = 3
   BEGIN
SELECT NVL(ROUND(SUM(QTY),7),0)
  FROM   MRP_SFC_WHM_ITEMS_MOVE
  WHERE  ITEM_CODE = MRT;
    BEGIN
   SELECT NVL(SUM(QTY),0)
   FROM   MRP_SFC_MAT_RESERV
   WHERE  ITEM_CODE = MRT
   EXCEPTION WHEN OTHERS THEN
  END;
  EXCEPTION WHEN OTHERS THEN
   END;
 SELECT SUM(QTY)
 FROM   MRP_MRP_SEIZED_MATERIALS
 WHERE  ITEM_CODE = MRT AND SM_TYPE = 3
 PROCEDURE UPDT_SIZED_MTR( MTR VARCHAR2, TYP NUMBER, V_QTY NUMBER) IS
 BEGIN
UPDATE MRP_MRP_SEIZED_MATERIALS
     WHERE USR_NAME  = P_USR
    EXCEPTION WHEN OTHERS THEN
 PROCEDURE READ_PR(PT IN OUT PRORTY,PRT PRORTY_REC) IS
 BEGIN
 PROCEDURE READ_MA(MA IN OUT MTR_ARY,MAR 
 BEGIN
 FUNCTION DEFAULT_BOM(ITM VARCHAR2) RETURN VARCHAR2 IS
 BEGIN
SELECT BOM_CODE
FROM   MRP_BOM_BOM_MSTR
  WHERE  CMP_NO = P_CMP_NO
 PROCEDURE DISASSMEBLY(ICOD VARCHAR2) IS
 BEGIN
   FOR J IN (SELECT R.ITEM_CODE,R.ITEM_ROW,R.BOM_ROW,
 FROM 
 WHERE  M.ITEM_CODE   = R.ITEM_CODE   AND
                                             0          , --// Addition from Sub Assembly
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'RE_SEND_STATUS', 'Posted', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'RE_SEND_STATUS', 'New', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 1, 1, 'SAL_EXCH_HIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 2, 2, 'SAL_EXCH_HIDE', '
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SAL_EXCH_HIDE', 'Hide', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VA
CREATE OR REPLACE PACKAGE REP_PKG AS
FUNCTION PRC_GET_WO_QTY_PRD(P_CMP_NO     S_CMPNY.CMP_NO%TYPE,
CREATE OR REPLACE PACKAGE BODY REP_PKG  IS
FUNCTION PRC_GET_WO_QTY_PRD(P_CMP_NO     S_CMPNY.CMP_NO%TYPE,
/* This function used in MRPREPMPS001_3 REPORT*/
     SELECT SUM(QTY)
     FROM MRP_SFC_WIP_MASTER_YIELD
     WHERE  
     GROUP BY    CMP_NO,BRN_NO,SHF_CODE,WORK_ORDER;
 EXCEPTION WHEN NO_DATA_FOUND THEN 
      END;
   BEGIN
     SELECT SUM(ITEM_QTY)
     FROM MRP_SFC_WIP_MASTER_SCRAP
     WHERE 
     GROUP BY    CMP_NO,BRN_NO,SHF_CODE,WORK_ORDER ;
EXCEPTION WHEN NO_DATA_FOUND THEN 
EXCEPTION WHEN NO_DATA_FOUND THEN 
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 2, 2, 'SFC_INVENTORY_SHEET_BSD', 'Shop Floor', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 3, 3, 'SFC_INVENTORY_SHEET_BSD', 'Lines', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 4, 4, 'SFC_INVENTORY_SHEET_BSD', 'Shifts', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 1, 1, 'SFC_INVENTORY_SHEET_BSD', 'Branch', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (2, 5, 5, 'SFC_INVENTORY_SHEET_BSD', 'Work Orders', 1)
Insert into IAS_SYS.MRP_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) Values (1, 6, 6, 'SFC_INV_SHT_PER_T', '
CREATE OR REPLACE PACKAGE PCM_PKG is
  --  LAST UPDATE IN 22-01-2013 ;26-08-2012 , 03-05-2011 17:20 ; 04/03/2011 
       PROCEDURE  FUNCTIONS DEFINATION PART
FUNCTION GET_STD_COST_FROM_OUTG(p_cmp_no    NUMBER, 
FUNCTION GET_STD_COST_FROM_MOV(p_cmp_no    NUMBER, 
PROCEDURE Chk_Distribute_cost_centers(Cmp  In Number   , 
PROCEDURE CHK_Distribute_Products( Cmp  In Number , Brn In Number ,
PROCEDURE  Get_Error_msgs (Cmp  In Number   ,  
FUNCTION  Get_Formula_Descrp( P_Dcr Varchar2, P_Lang NUMBER) RETURN Varchar2;
FUNCTION ACC_CLASS( P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_ACC_CODE  IN VARCHAR2, P_CLASS_NO NUMBER ) RETURN VARCHAR2 ;   
FUNCTION GET_CURRENCY( P_BRN  IN VARCHAR2 ) RETURN VARCHAR2 ;
FUNCTION GET_STOCK_CURRENCY( P_BRN  IN VARCHAR2 ) RETURN VARCHAR2 ;
FUNCTION STOCK_RATE_CURR( P_BRN IN VARCHAR2 ) RETURN NUMBER ;
FUNCTION GET_RATE_CURR( P_BRN  IN NUMBER, P_CURR IN VARCHAR2 ) RETURN NUMBER ;
FUNCTION DISTR_VAR_USED_IN_CRITER(P_DV IN VARCHAR2 ) Return number;
Function DISTR_VAR_USED_IN_ITEM_CC(P_DV IN VARCHAR2) Return number;
Function DISTR_VAR_Has_Trans(P_DV IN VARCHAR2, P_YEAR NUMBER, P_PERIOD NUMBER   ) Return number;
---------- FUNCTION  OF PERIOD AND DATE 
 Function GET_PERIOD_STATUS(P_CMP_NO NUMBER, P_BRN_NO NUMBER,P_YER Number,P_PRD Number) Return number;
 PROCEDURE GET_YEAR_PERIOD(p_cmp_no Number, p_brn_no Number, V_DATE DATE, V_YER  IN OUT Number, V_PRD  IN OUT Number) ;
 FUNCTION DATE_IN_ACTIVE_PERIOD(p_cmp_no Number, p_brn_no Number, V_DATE DATE) RETURN NUMBER ;
 Procedure Return_Date(p_cmp_no Number, p_brn_no Number, Period In number,Yer In number,F_Date Out Date,T_Date Out Date);
---------- FUNCTION OF COSTING VARIABLES------------------------------------------------
FUNCTION MRP_FUNC_GET_VARIABLE_VALUE (  V_CMP       NUMBER ,
FUNCTION RUN_SELECT( SEL  IN VARCHAR2 ) RETURN NUMBER ;
------------------- FUNCTION AND PROCEDURE OF CLOSING PERIOD OF COSTING 
FUNCTION MRP_FUNC_GET_FORMULA_VAR_VALUE
FUNCTION MRP_FUNC_GET_FORMULA_RESULT(F_TEXT VARCHAR2) RETURN NUMBER ;
--FUNCTION IS_CLOSED_ONX_PERIOD(P_YEAR IN NUMBER, P_PERIOD IN NUMBER) RETURN NUMBER;
PROCEDURE Confirm_Before_Onx_trans ( Brn In Number, Year  In Number, Period  In Number , ERR IN OUT NUMBER, ERR_CODE IN OUT VARCHAR2);
        PROCEDURE POPULATE_ONYX_JOURNAL( Brn In Number, Year  In Number, Period  In Number , ERR IN OUT NUMBER);
        Function  Period_of_varible(P_CMP_NO  NUMBER, P_BRN_NO NUMBER, Period in number , Year in Number,calc in number ) return number ;
        FUNCTION  GET_VAR_VALUE( P_CMP_NO NUMBER, P_BRN_NO NUMBER, V_CODE IN VARCHAR2 , ind_calculat IN NUMBER,PERIOD IN NUMBER, YEAR IN NUMBER) RETURN NUMBER ;
PROCEDURE INSERT_F_ONX_TRAN( P_PERIOD IN NUMBER,P_YER_CODE NUMBER,P_BRN_NO IN NUMBER , P_Theory in Number , Err  in out Number );
          PROCEDURE INSERT_DAILY(CC_ACC IN VARCHAR2 ,V_Tran_id VARCHAR2 , ACCT_COD VARCHAR2, CC_CODE_VAR VARCHAR2,Amt_var NUMBER ,TRAN_TYPE_VAR VARCHAR2, P_BRN_NO NUMBER, CC_ACTIVE IN NUMBER);
PROCEDURE Distribute_cost_centers(P_USER IN NUMBER , Cmp  In Number , Brn In Number ,
         PROCEDURE Reset_cal(Cmp  In Number , Brn In Number , Yer In Number , Period In Number,F In Number  );
         FUNCTION  F_BENF_SOME_CNTR(P_USER IN NUMBER , CMP IN NUMBER, BRN IN NUMBER, YER IN NUMBER, PERIOD IN NUMBER  ,V_SEQ NUMBER , V_CC_CODE VARCHAR2 , F_TEXT VARCHAR2 , V_DCR_CODE VARCHAR2 , V_E_CODE VARCHAR2 ,V_Acc_lp varchar2) RETURN NUMBER ;
         FUNCTION  F_BENF_ALL_CNTR (P_USER IN NUMBER , CMP IN NUMBER, BRN IN NUMBER, YER IN NUMBER, PERIOD IN NUMBER  ,V_SEQ NUMBER , V_CC_CODE VARCHAR2 , F_TEXT VARCHAR2 , V_EFFECT NUMBER , V_DCR_CODE VARCHAR2 , V_E_CODE VARCHAR2 ,V_Acc_lp varchar2) RETURN NUMBER ;
PROCEDURE Distribute_Products(P_USER IN NUMBER , Cmp  In Number , Brn In Number ,
          FUNCTION  F_BENF_SOME_PRD(P_USER IN NUMBER , CMP IN NUMBER, BRN IN NUMBER, YER IN NUMBER, PERIOD IN NUMBER  ,V_SEQ NUMBER , V_CC_CODE VARCHAR2 , F_TEXT VARCHAR2 , V_DCR_CODE VARCHAR2 , V_E_CODE VARCHAR2 ,V_ACC_LP VARCHAR2) RETURN NUMBER ;
          FUNCTION  F_BENF_ALL_PRD (P_USER IN NUMBER , CMP IN NUMBER, BRN IN NUMBER, YER IN NUMBER, PERIOD IN NUMBER  ,V_SEQ NUMBER , V_CC_CODE VARCHAR2 , F_TEXT VARCHAR2 , V_EFFECT NUMBER , V_DCR_CODE VARCHAR2 , V_E_CODE VARCHAR2,V_ACC_LP VARCHAR2 ) RETURN NUMBER ;
          FUNCTION  TOTAL_VAL_SOME_ITEMS_FOR_CC(P_USER IN NUMBER , CMP IN NUMBER, BRN IN NUMBER, YER IN NUMBER, PERIOD IN NUMBER  ,V_SEQ NUMBER , V_CC_CODE VARCHAR2 , F_TEXT VARCHAR2 , V_DCR_CODE VARCHAR2 , V_ACC_LP VARCHAR2) RETURN NUMBER ;
          FUNCTION  TOTAL_VAL_ITEMS_FOR_CC (P_USER IN NUMBER , CMP IN NUMBER, BRN IN NUMBER, YER IN NUMBER, PERIOD IN NUMBER  ,V_SEQ NUMBER , V_CC_CODE VARCHAR2 , F_TEXT VARCHAR2 , V_EFFECT NUMBER , V_DCR_CODE VARCHAR2 , V_ACC_LP VARCHAR2 ) RETURN NUMBER ;
Function Exact_Percent(cmp number, BRN IN NUMBER,
PROCEDURE Cost_Center_TRAN (P_BRN_NO  IN NUMBER, P_PERIOD IN NUMBER, P_YER_CODE NUMBER, Err  in out Number   );
PROCEDURE Cost_Center_Item_TRAN (P_PERIOD IN NUMBER , P_YER_CODE NUMBER , P_BRN_NO   IN NUMBER, Err  in out Number);
PROCEDURE Close_Cost_Center_TRAN (P_BRN    IN NUMBER  ,
Procedure Fill_Summary_Yeild (P_CMP   IN NUMBER   ,
-- FILL SUMMARY FROM TRANS DAILY_DETAILS WITH DOC TYPE = 1 AND COST TYPE = 3
PROCEDURE GET_PRODUCT_ACCOUNT(  P_CMP  IN NUMBER DEFAULT 1,
          PROCEDURE FILL_SUMMARY_PRODUCTS( ITEM_CODE  IN VARCHAR2 , MRP_ACC  IN VARCHAR2,
PROCEDURE GET_STANDARD_CONST_ACCOUNT(  P_CMP  IN NUMBER , P_BRN IN NUMBER ,
PROCEDURE GET_STANDARD_VAR_ACCOUNT(  P_CMP  IN NUMBER DEFAULT 1,
PROCEDURE CALC_COST_FRM_PREVIOUS_STGS(  P_CMP  IN NUMBER DEFAULT 1,
              PROCEDURE BUILD_STD_VAR_STD_FROM_ACT_CST( P_BRN_NO IN NUMBER,
CREATE OR REPLACE PACKAGE BODY PCM_PKG  IS
FUNCTION GET_STD_COST_FROM_OUTG(p_cmp_no    NUMBER, 
 BEGIN            
             SELECT  AVG( D.CST)  INTO V_STD_CST
             FROM MRP_SFC_MATERIALS_TRANSMT_MSTR M, 
             WHERE  M.MT_SQ = D.MT_SQ        AND
   EXCEPTION WHEN OTHERS THEN
FUNCTION GET_STD_COST_FROM_MOV(P_CMP_NO    NUMBER, 
 BEGIN            
          SELECT  SUM(CST*QTY)/SUM(QTY) CST  INTO V_STD_CST
               FROM MRP_SFC_WHM_ITEMS_MOVE
             WHERE  CMP_NO = P_CMP_NO  AND 
   EXCEPTION WHEN OTHERS THEN
PROCEDURE Chk_Distribute_cost_centers(Cmp  In Number   , 
      SELECT A.SEQ , A.CC_CODE  , A.E_CODE  , A.DCR_CODE , A.DIS_EFFECT ,
      FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
      WHERE   A.CMP_NO   = Cmp
           and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                              where CMP_NO = CMP AND BRN_NO = BRN AND  p_cntu = 0 ) and
           ( Select CMP_NO, BRN_NO, acc_code from MRP_PCM_ACCOUNTS_DEF DF
             WHERE  CMP_NO = CMP AND BRN_NO = BRN AND
      SELECT A.SEQ , A.CC_CODE  , A.E_CODE  , A.DCR_CODE , A.DIS_EFFECT ,
      FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
      WHERE     A.CMP_NO   = Cmp
           and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                              where CMP_NO = CMP AND BRN_NO = BRN AND p_cntu = 0  ) and
 Begin
            SELECT Count(YER_CODE) InTo C
            FROM   MRP_SGS_PERIOD_COSTONG
                                  FOR J IN ( SELECT CC_CODE  
                                                FROM  MRP_PCM_COST_CENTER
                                                WHERE   CMP_NO   = CMP
                                                 AND  EXISTS (SELECT 1  FROM MRP_PCM_VARIABLES_VALUES
                                                                    WHERE  cmp_no      =Cmp  and
                               FOR J IN (  SELECT CC_CODE  
                                                FROM  MRP_PCM_DISTRIBUTION_EFFECT
                                                WHERE CMP_NO   = CMP
                                                 AND  EXISTS (SELECT 1  FROM MRP_PCM_VARIABLES_VALUES
                                                                    WHERE  cmp_no      =Cmp  and
                 INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM,MSG_NOTES) VALUES(V_MSG_COD,6,V_MSG_NOTE);
 EXCEPTION WHEN OTHERS THEN
               INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM,MSG_NOTES) VALUES(V_MSG_COD,3,NULL);
PROCEDURE CHK_Distribute_Products( Cmp  In Number , Brn In Number ,
      SELECT SEQ , CC_CODE , E_CODE, DCR_CODE, DIS_EFFECT , ACC_CODE , ACC_LP, TYP, TXT_FORMULA
                  SELECT A.SEQ      , A.CC_CODE  , A.E_CODE , A.DCR_CODE , A.DIS_EFFECT ,
                  FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
                  WHERE  A.CMP_NO       = CMP
                    and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                                       where CMP_NO = CMP  AND BRN_NO = BRN AND p_cntu = 0 ) and
                       ( Select DF.CMP_NO, DF.BRN_NO, DF.acc_code from MRP_PCM_ACCOUNTS_DEF DF
                       SELECT A.SEQ      , A.CC_CODE  , A.E_CODE , A.DCR_CODE , A.DIS_EFFECT ,
                      FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
                      WHERE  A.CMP_NO   = CMP
                        and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                                           where CMP_NO = CMP  AND BRN_NO = BRN AND  p_cntu = 0 ) and
                 CC_CODE IN  (SELECT DISTINCT CC_CODE  FROM MRP_PCM_VARIABLES_VALUES
                                       WHERE  cmp_no      =Cmp  and
                                                       (SELECT 1 FROM MRP_PCM_DISTRIBUTION_VARIABLES 
                                                        WHERE DV_TYPE = 10 AND BASEDON  = 2 AND DV_CODE = MRP_PCM_VARIABLES_VALUES.DV_CODE
 Begin
       FOR I in   (SELECT DISTINCT item_code
                                                       FROM   MRP_PCM_CNTR_PRODUCTS 
                                                       WHERE cc_code     = REC.CC_CODE
                                                        AND EXISTS (SELECT 1  FROM MRP_PCM_VARIABLES_VALUES
                                                                    WHERE   cmp_no      =Cmp  and
                                                                           (SELECT 1 FROM MRP_PCM_DISTRIBUTION_VARIABLES 
                                                                            WHERE DV_TYPE = 10 AND BASEDON  = 2 AND DV_CODE = MRP_PCM_VARIABLES_VALUES.DV_CODE 
                                   FOR I in   ( SELECT DISTINCT ITEM_CODE 
                                                FROM MRP_PCM_DISTRIBUTION_EFFECT 
                                                WHERE CMP_NO       = CMP
                                                     AND EXISTS (SELECT 1  FROM MRP_PCM_VARIABLES_VALUES
                                                                         WHERE  cmp_no      =Cmp  and
                     INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM,MSG_NOTES) VALUES(V_MSG_COD,6,V_MSG_NOTE);
      EXCEPTION WHEN OTHERS THEN
                 INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM,MSG_NOTES) VALUES(V_MSG_COD,3,NULL);
PROCEDURE  Get_Error_msgs (Cmp  In Number   ,  
  Begin
       --  In the Begingin suppose that there is no error
       BEGIN
                INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,28);
      BEGIN
      Select 
      From MRP_SGS_GENERAL_PARAMETARS
      WHERE cmp_no = Cmp  AND BRN_NO = BRN;
      EXCEPTION WHEN NO_DATA_FOUND THEN
      END;
           INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,3);
          Select Count(*) into C
          from MRP_PCM_COST_CENTER
          where p_cntu   = 0   AND 
               INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,13);
          Select COUNT(DISTINCT CC_CODE) INTO C2
          from MRP_PCM_MRP_ONX_COST_CSENTER
          WHERE  cmp_no = Cmp and BRN_NO  = BRN AND
                 CC_CODE IN ( Select  CC_CODE
                                           FROM MRP_PCM_COST_CENTER
                                           WHERE CC_LVL = 1  and p_cntu = 0  AND BRN_NO = BRN ) ;
               INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,14);
                    SELECT COUNT(*) INTO V_CNT
                    FROM MRP_PCM_MSG_ERRORS
                    WHERE MSG_CODE = 'PRP' AND MSG_NUM = V_ERR;
                         INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,V_ERR);
       Select count(*) into C
       from MRP_PCM_MRP_ONX_ACCOUNTS
       WHERE cmp_no = Cmp and BRN_NO = BRN ;
               INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,15);
       Select COUNT(A_CODE) INTO C2 
       From  MRP_PCM_MRP_ONX_ACCCONTROL
       WHERE  cmp_no = Cmp and  BRN_NO  = BRN AND 
              ACC_CODE IN ( Select DISTINCT ACC_CODE
                                      FROM MRP_PCM_CNTR_ELMNTS
                                      WHERE cmp_no = Cmp and BRN_NO = BRN AND 
                    SELECT  A_CODE 
                    From  MRP_PCM_MRP_ONX_ACCCONTROL
                    WHERE     cmp_no = Cmp and 
                              ACC_CODE NOT  IN ( Select DISTINCT ACC_CODE
                                                 FROM MRP_PCM_CNTR_ELMNTS
                                                 WHERE cmp_no = Cmp and BRN_NO = BRN AND 
                  INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM,MSG_NOTES) VALUES(V_MSG_COD,16,V_MSG_NOTE);
      Select COUNT(*) INTO C from MRP_PCM_COST_CENTER
      WHERE  cmp_no = Cmp and BRN_NO = BRN AND
             EXISTS (SELECT 1 FROM MRP_PCM_VARIABLES_VALUES
                          WHERE  cmp_no       = Cmp  and
                                       (SELECT 1 FROM MRP_PCM_DISTRIBUTION_VARIABLES 
                                        WHERE DV_TYPE = 10 AND BASEDON  = 2 AND DV_CODE = MRP_PCM_VARIABLES_VALUES.DV_CODE
               INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,17);
      SELECT COUNT(distinct cc_code )   INTO C2 
  FROM  MRP_PCM_COSTCENTER_CRITERIONS
      WHERE BRN_NO = BRN AND  TYP = 2 and p_cntu = 0 AND
                   EXISTS (SELECT 1  FROM MRP_PCM_VARIABLES_VALUES
                                WHERE  cmp_no =Cmp  and
                         SELECT CC_CODE
                         FROM MRP_PCM_COST_CENTER
                         WHERE cmp_no = Cmp and BRN_NO = BRN AND
                               CC_CODE NOT IN (SELECT DISTINCT CC_CODE
                                               FROM MRP_PCM_COSTCENTER_CRITERIONS
                                               WHERE cmp_no = Cmp and BRN_NO = BRN AND  
             INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM,MSG_NOTES) VALUES(V_MSG_COD,31,V_MSG_NOTE);
      Select COUNT( CC_CODE) INTO C2 
      from MRP_PCM_COST_CENTER
      WHERE cmp_no = Cmp and BRN_NO = BRN AND
             ( Select 1  FROM MRP_PCM_CNTR_PRODUCTS
               WHERE cmp_no = Cmp and BRN_NO = BRN AND P_CNTU = 0 AND 
              EXISTS (SELECT 1  FROM MRP_PCM_VARIABLES_VALUES
                                WHERE  cmp_no      =Cmp  and
                                               (SELECT 1 FROM MRP_PCM_DISTRIBUTION_VARIABLES 
                                                WHERE DV_TYPE = 10 AND BASEDON  = 2 AND DV_CODE = MRP_PCM_VARIABLES_VALUES.DV_CODE 
                            (   Select  CC_CODE 
                                 From MRP_PCM_COST_CENTER
                                 WHERE cmp_no = Cmp and BRN_NO = BRN AND
                                         ( Select 1  FROM MRP_PCM_CNTR_PRODUCTS
                                           WHERE cmp_no = Cmp and BRN_NO = BRN AND P_CNTU = 0 AND 
                                              EXISTS (SELECT 1  FROM MRP_PCM_VARIABL
                                                      WHERE  cmp_no      =Cmp  and
                                                               (SELECT 1 FROM MRP_PCM_DISTRIBUTION_VARIABLES 
                                                                WHERE DV_TYPE = 10 AND BASEDON  = 2 AND DV_CODE = MRP_PCM_VARIABLES_VAL
              INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM,MSG_NOTES)  VALUES(V_MSG_COD,18,V_MSG_NOTE);
          SELECT COUNT(DISTINCT ITEM_CODE) INTO C
          FROM MRP_PCM_CNTR_PRODUCTS
          WHERE cmp_no = Cmp and BRN_NO = BRN AND P_CNTU = 0  ;
               INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,20);
          SELECT COUNT(DISTINCT ITEM_CODE) INTO C2
          FROM MRP_PCM_CNTR_PRODUCTS
          WHERE cmp_no = Cmp and BRN_NO = BRN  AND  P_CNTU = 0 AND
               ITEM_CODE IN (SELECT DISTINCT ITEM_CODE
                             FROM MRP_PCM_PRODUCTS_ACCOUNTS
                             WHERE cmp_no = Cmp and BRN_NO = BRN AND P_CNTU = 0 );
               INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM) VALUES(V_MSG_COD,21);
      SELECT COUNT(*) INTO C FROM MRP_PCM_COST_CENTER
      WHERE cmp_no      = Cmp and 
         begin
                 SELECT COUNT(*) INTO C2 FROM MRP_PCM_COST_CENTER
                 WHERE cmp_no = Cmp and 
                       (SELECT DISTINCT CC_CODE FROM MRP_PCM_COSTCENTER_CRITERIONS
                        WHERE cmp_no = Cmp and BRN_NO = BRN and 
                      FOR I IN ( SELECT CC_CODE FROM MRP_PCM_COST_CENTER
                                     WHERE   cmp_no = Cmp and BRN_NO   = BRN AND
                                                   (SELECT DISTINCT CC_CODE FROM MRP_PCM_COSTCENTER_CRITERIONS
                                                    WHERE cmp_no = Cmp and BRN_NO = BRN and TYP = 1 AND p_cntu = 0 AND YER_CODE = YEAR AND PERIOD_CODE = PERIOD)
                      INSERT INTO MRP_PCM_MSG_ERRORS(MSG_CODE, MSG_NUM,MSG_NOTES)  VALUES(V_MSG_COD,25,V_MSG_NOTE);
         SELECT COUNT(*) INTO V_CNT
         FROM MRP_PCM_MSG_ERRORS ;
       EXCEPTION WHEN OTHERS THEN RAISE;
FUNCTION  Get_Formula_Descrp( P_Dcr Varchar2, P_Lang NUMBER) RETURN Varchar2 IS
     BEGIN
          SELECT TXT_FORMULA INTO V_FORMULA 
          FROM MRP_PCM_DISTRIBUTION_CRITERION
          WHERE DCR_CODE = P_DCR ;
          EXCEPTION WHEN OTHERS THEN
     SELECT COUNT(*) INTO X    --- check if this formula is there or not
     FROM  MRP_PCM_DISTRIBUTION_CR_LINK
     WHERE DCR_CODE = P_Dcr ;
       FOR I IN(SELECT DV_CODE 
                FROM MRP_PCM_DISTRIBUTION_CR_LINK
                WHERE DCR_CODE = P_Dcr ) 
       LOOP --- select all accoding value to fomula
             BEGIN
                SELECT Decode(P_Lang,1,DV_DESC_A ,NVL(DV_DESC_E,DV_DESC_A) )   INTO DISC  -- catch the according varible
                FROM MRP_PCM_DISTRIBUTION_VARIABLES
                WHERE DV_CODE = I.DV_CODE;
                SELECT REPLACE(TEMP_FROMLA,FORMULA,DISC) 
                FROM  MRP_PCM_DISTRIBUTION_CRITERION
                WHERE MRP_PCM_DISTRIBUTION_CRITERION.DCR_CODE = P_Dcr ; 
             EXCEPTION WHEN OTHERS THEN
  EXCEPTION WHEN OTHERS THEN RETURN('');
FUNCTION ACC_CLASS( P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_ACC_CODE  IN VARCHAR2, P_CLASS_NO NUM
   BEGIN
        SELECT DECODE(P_CLASS_NO ,1,CLS_PRP 
        FROM MRP_PCM_ACCOUNTS_DEF 
        WHERE ACC_CODE = P_ACC_CODE AND
        EXCEPTION WHEN OTHERS THEN RETURN NULL;                                
   END;
FUNCTION GET_CURRENCY( P_BRN  IN VARCHAR2 ) RETURN VARCHAR2 IS
     SELECT cur_code  INTO RES FROM EX_RATE WHERE L_F = 1 ;
     EXCEPTION WHEN OTHERS THEN
FUNCTION GET_STOCK_CURRENCY( P_BRN  IN VARCHAR2 ) RETURN VARCHAR2 IS
           SELECT cur_code INTO RES FROM EX_RATE WHERE STOCK_CUR = 1 ;
     EXCEPTION WHEN OTHERS THEN
FUNCTION STOCK_RATE_CURR( P_BRN IN VARCHAR2 ) RETURN NUMBER IS
           SELECT CUR_RATE INTO V_RATE  FROM EX_RATE WHERE STOCK_CUR = 1 ;
        EXCEPTION WHEN OTHERS THEN
FUNCTION GET_RATE_CURR( P_BRN  IN NUMBER, P_CURR IN VARCHAR2 ) RETURN NUMBER IS
        SELECT CUR_RATE INTO V_RATE FROM EX_RATE WHERE UPPER(CUR_CODE) = UPPER(P_CURR);
        EXCEPTION WHEN OTHERS THEN
Function DISTR_VAR_USED_IN_CRITER(P_DV IN VARCHAR2 ) Return number IS
     BEGIN
             SELECT COUNT(B.txt_formula) INTO C
             FROM   MRP_PCM_DISTRIBUTION_CRITERION  B,
             WHERE B.DCR_CODE = A.DCR_CODE AND
     END;
     BEGIN
             SELECT COUNT(*) INTO C
             FROM   MRP_PCM_DISTRIBUTION_CRITERION
             WHERE  upper(txt_formula) LIKE '%'||Upper(P_DV)||'%' ;
     END;
     EXCEPTION WHEN OTHERS THEN
 Function DISTR_VAR_USED_IN_ITEM_CC(P_DV IN VARCHAR2 ) Return number IS
  BEGIN
       SELECT COUNT(*) INTO C
       FROM   MRP_PCM_STD_VARIABLES
       WHERE  UPPER(DV_CODE) = UPPER(P_DV) ;
       EXCEPTION WHEN OTHERS THEN
 Function DISTR_VAR_Has_Trans(P_DV IN VARCHAR2, P_YEAR NUMBER, P_PERIOD NUMBER ) Return number is
 Begin
       SELECT COUNT(*) INTO C
       FROM   MRP_PCM_VARIABLES_VALUES
       WHERE  UPPER(DV_CODE) = UPPER(P_DV) AND
       EXCEPTION WHEN OT
Function  Period_of_varible(P_CMP_NO  NUMBER, P_BRN_NO NUMBER, Period in number , Year in Number,calc in number ) return number is
        SELECT  period_code
        FROM MRP_SGS_PERIOD_COSTONG
        where yer_code = Year AND
        ORDER BY 1 ;
FUNCTION  GET_VAR_VALUE(P_CMP_NO NUMBER, P_BRN_NO NUMBER,  V_CODE IN VARCHAR2 , ind_calculat IN NUMBER,
        SELECT COUNT(*) INTO CC
         FROM MRP_PCM_VARIABLES_VALUES V
         WHERE  V.CMP_NO = P_CMP_NO AND
         BEGIN
                        SELECT YER_CODE , PERIOD_CODE
                        FROM  MRP_SGS_PERIOD_COSTONG
                        WHERE  CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
                                     SEQ = (SELECT MAX(SEQ)
                                      FROM  MRP_SGS_PERIOD_COSTONG
                                      WHERE  CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
                  EXCEPTION WHEN NO_DATA_FOUND THEN
                                             SELECT YER_CODE , PERIOD_CODE
                                            FROM  MRP_SGS_PERIOD_COSTONG
                                            WHERE  CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
                                                         SEQ = (SELECT MAX(SEQ)
                                                          FROM  MRP_SGS_PERIOD_COSTONG
                                                          WHERE  CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
              FROM MRP_PCM_VARIABLES_
              WHERE V.CMP_NO = P_CMP_NO AND
                SELECT CV_VALUE
                FROM MRP_PCM_VARIABLES_VALUES V
                WHERE V.CMP_NO = P_CMP_NO AND
                            ( SELECT  MAX(CV_SQE)  FROM MRP_PCM_VARIABLES_VALUES V
                              WHERE   V.CMP_NO = P_CMP_NO AND
                SELECT CV_VALUE
                FROM MRP_PCM_VARIABLES_VALUES V
                WHERE V.dv_code =  V_CODE AND
                            ( SELECT  MIN(CV_SQE)  FROM MRP_PCM_VARIABLES_VALUES V
                              WHERE   V.CMP_NO = P_CMP_NO AND
    EXCEPTION WHEN NO_DATA_FOUND THEN
Procedure Return_Date(p_cmp_no Number, p_brn_no Number, Period In number,Yer In number,F_Date Out Date,T_Date Out Date) is
    SELECT  DATE_F , DATE_T
    FROM  MRP_SGS_PERIOD_COSTONG
    WHERE PERIOD_CODE = PERIOD AND
   EXCEPTION
PROCEDURE POPULATE_ONYX_JOURNAL( Brn IN NUMBER, YEAR  IN NUMBER, Period  IN NUMBER, ERR IN OUT NUMBER)  IS
      SELECT MRP_PCM_cst_cntr_lnk
      FROM MRP_SGS_GENERAL_PARAMETARS 
      WHERE CMP_NO = 1 AND BRN_NO = BRN ;
      /*SELECT COUNT (*) INTO   X
      FROM   MRP_PCM_MRP_ONX_BRNCH
      WHERE  P_CNTU = 0  AND BRN_NO = BRN ;
          BEGIN
               SELECT COUNT(*) INTO X
               FROM   ALL_USERS
               WHERE  UPPER(USERNAME) = UPPER(I.BRANCH_USER) ;
            BEGIN
                         ( SELECT CN.CMP_NO, CN.BRN_NO,  D.A_CODE, SUM(D.AMT) AMT  , 
                             FROM IAS_POST_DTL D , MRP_PCM_MRP_ONX_ACCCONTROL CN
                           WHERE  D.A_CODE = CN.A_CODE 
                             AND  D.A_CODE IN (SELECT A_CODE FROM MRP_PCM_MRP_ONX_ACCOUNTS
                                                WHERE P_CNTU = 0 AND BRN_NO = '||BRN ||') 
                            GROUP BY CN.CMP_NO, CN.BRN_NO, D.A_CODE HAVING  SUM(D.AMT) <> 0)'; 
             BEGIN
                         ( SELECT CC.CMP_NO, CC.BRN_NO, D.A_CODE,D.CC_CODE COST_CNTR_NO,CC.CC_CODE , SUM(D.AMT) AMT  , 
                             FROM IAS_POST_DTL D , MRP_PCM_MRP_ONX_COST_CSENTER CC
                                  D.A_CODE   IN (SELECT A_CODE FROM MRP_PCM_MRP_ONX_ACCOUNTS
                                                WHERE P_CNTU = 0 AND BRN_NO = '||BRN ||' ) AND
                            GROUP BY CC.CMP_NO, CC.BRN_NO, D.A_CODE,D.CC_CODE ,CC.cc_code
                       SELECT CMP_NO, BRN_NO, A_CODE,  AMT  ,  PERIOD , YER_CODE
                        FROM ' ||V_JOURNAL ;
                      SELECT CMP_NO, BRN_NO, A_CODE, COST_CNTR_NO, CC_CODE ,   AMT  ,   PERIOD ,  YER_CODE
                        FROM ' ||V_JOURNAL ;
    EXCEPTION WHEN OTHERS THEN
PROCEDURE  Confirm_Before_Onx_trans ( Brn In Number, Year  In Number,
  Begin
       --  In the Begingin suppose that there is no error
       BEGIN
      Select 
      From MRP_SGS_GENERAL_PARAMETARS
      WHERE CMP_NO = 1 AND BRN_NO = BRN;
          Select count(*) into C
          from MRP_PCM_MRP_ONX_ACCOUNTS
          WHERE BRN_NO = BRN;
          Select Count(*) into C
          from MRP_PCM_COST_CENTER
          where p_cntu = 0   AND 
          Select COUNT(DISTINCT CC_CODE) INTO C2
          from MRP_PCM_MRP_ONX_COST_CSENTER
          WHERE  BRN_NO  = BRN AND
                 CC_CODE IN ( Select  CC_CODE
                              FROM MRP_PCM_COST_CENTER
                              WHERE CC_LVL = 1  and p_cntu = 0  AND BRN_NO = BRN ) ;
       Select count(*) into C
       from MRP_PCM_MRP_ONX_ACCOUNTS
       WHERE BRN_NO = BRN;
       Select COUNT(A.A_CODE) INTO C2 
       from MRP_PCM_MRP_ONX_ACCOUNTS A ,
      WHERE  A.BRN_NO = L.BRN_NO AND
             F.ACC_CODE IN ( Select DISTINCT ACC_CODE
                             FROM MRP_PCM_CNTR_ELMNTS
                             WHERE BRN_NO = BRN AND 
      Select COUNT(*) INTO C from MRP_PCM_COST_CENTER
      WHERE  BRN_NO = BRN AND
      Select COUNT(CC_CODE) INTO C2 
      from MRP_PCM_COST_CENTER
      WHERE BRN_NO = BRN AND
            CC_CODE IN ( Select Distinct CC_CODE
                         FROM MRP_PCM_CNTR_PRODUCTS
                         WHERE BRN_NO = BRN AND P_CNTU = 0 );
          SELECT COUNT(ITEM_CODE) INTO C
          FROM MRP_PCM_CNTR_PRODUCTS
          WHERE BRN_NO = BRN AND P_CNTU = 0  ;
          SELECT COUNT(ITEM_CODE) INTO C2
          FROM MRP_PCM_CNTR_PRODUCTS
          WHERE BRN_NO = BRN  AND  P_CNTU = 0 AND
               ITEM_CODE IN (SELECT DISTINCT ITEM_CODE
                             FROM MRP_PCM_PRODUCTS_ACCOUNTS
                             WHERE BRN_NO = BRN AND P_CNTU = 0 );
      SELECT COUNT(*) INTO C FROM MRP_PCM_COST_CENTER
      WHERE BRN_NO = BRN AND
         begin
                 SELECT COUNT(*) INTO C2 FROM MRP_PCM_COST_CENTER
                 WHERE BRN_NO   = BRN AND
                       (SELECT DISTINCT CC_CODE FROM MRP_PCM_COSTCENTER_CRITERIONS
                        WHERE TYP = 1 AND BRN_NO = BRN and p_cntu = 0 AND YER_CODE = YEAR AND PERIOD_CODE = PERIOD);
      SELECT COUNT(*) INTO C FROM MRP_PCM_COST_CENTER
      WHERE BRN_NO = BRN AND CC_CTGRY = 0 AND CC_LVL = 1 and p_cntu = 0 ;
      SELECT COUNT(*) INTO C2 FROM MRP_PCM_COST_CENTER
      WHERE BRN_NO = BRN AND
            CC_CODE IN (SELECT DISTINCT CC_CODE
                        FROM MRP_PCM_COSTCENTER_CRITERIONS
                        WHERE BRN_NO = BRN AND  TYP = 2 and p_cntu = 0 AND YER_CODE = YEAR AND PERIOD_CODE = PERIOD);
       EXCEPTION WHEN OTHERS THEN ERR:= 0;
PROCEDURE INSERT_F_ONX_TRAN(P_PERIOD IN NUMBER,P_YER_CODE NUMBER,P_BRN_NO IN NUMBER , P_Theory in Number , Err in out Number )
               --- DECLERATION PART OF PROCEDURE ---------
              ---END DECLERATION PART OF PROCEDURE ---------
 BEGIN
      Select mrp_pcm_cst_cntr_lnk ,
      From MRP_SGS_GENERAL_PARAMETARS
      WHERE CMP_NO = 1 AND BRN_NO = P_BRN_NO;
      DELETE From MRP_PCM_DAILY_TRANS_DETAILS D
      Where BRN_NO = P_BRN_NO
        AND D.TRAN_ID IN ( SELECT TRAN_ID FROM MRP_PCM_DAILY_TRANS_MAST
                            WHERE  CMP_NO  = 1
      DELETE FROM MRP_PCM_DAILY_TRANS_MAST
      WHERE  CMP_NO  = 1
        ( SELECT DISTINCT TRAN_ID FROM MRP_PCM_DAILY_TRANS_DETAILS
          WHERE CMP_NO  = 1
         INSERT INTO MRP_PCM_DAILY_TRANS_MAST
                SELECT COUNT(*) INTO K
                FROM  VIEW_JOURNAL1
                WHERE  BRN_NO = P_BRN_NO;
               ( SELECT BRN_NO,  A_CODE , AMT FROM VIEW_JOURNAL1
                 WHERE  BRN_NO = P_BRN_NO AND
                    ( SELECT ACC.A_CODE
                      FROM MRP_PCM_MRP_ONX_ACCCONTROL ACC,
                      WHERE  ACC.CMP_NO = 1 AND ACC.BRN_NO = P_BRN_NO AND
                   SELECT  DISTINCT CC_CODE  INTO CC_CODE_VAR
                   FROM    MRP_PCM_MRP_ONX_CCCONTROL
                   WHERE   CMP_NO  = 1 AND
                           CC_CODE IN ( SELECT DISTINCT CC_CODE FROM MRP_PCM_COST_CENTER
                                        WHERE CMP_NO = 1 AND BRN_NO = P_BRN_NO );
                  SELECT  COUNT(*)
                  FROM    MRP_PCM_MRP_ONX_ACCCONTROL
                  WHERE   CMP_NO  =1 AND
                          ACC_CODE IN ( SELECT ACC_CODE FROM MRP_PCM_ACCOUNTS_DEF WHERE CMP_NO = 1 AND BRN_NO = P_BRN_NO  );
                        SELECT  DISTINCT ACC_CODE
                        FROM    MRP_PCM_MRP_ONX_ACCCONTROL
                        WHERE   CMP_NO = 1 AND 
                                ACC_CODE IN ( SELECT ACC_CODE FROM MRP_PCM_ACCOUNTS_DEF
                                              WHERE CMP_NO =1 AND  BRN_NO = P_BRN_NO   );
                SELECT COUNT(*) INTO K
                FROM  VIEW_JOURNAL2
                WHERE  BRN_NO = P_BRN_NO;
            FOR J IN ( SELECT DISTINCT
                       FROM VIEW_JOURNAL2
                       WHERE BRN_NO = P_BRN_NO AND
                            ( SELECT OA.CMP_NO , OA.BRN_NO, OA.A_CODE  , E.CC_CODE
                              FROM MRP_PCM_MRP_ONX_ACCCONTROL  OA ,
                              WHERE OA.CMP_NO = E.CMP_NO  AND
                     SELECT  DISTINCT ACC_CODE
                             FROM    MRP_PCM_MRP_ONX_ACCCONTROL
                             WHERE   A_CODE = J.A_CODE AND CMP_NO = 1 AND BRN_NO = P_BRN_NO ;
    EXCEPTION
Procedure Reset_Cal(Cmp  In Number , Brn In Number , Yer In Number , Period In Number , F In Number  )  Is
  Begin
          SELECT NVL(COUNT(*) ,0) INTO  C
          FROM  MRP_PCM_CRITERIONS_CAL
          WHERE    CMP_NO      = Cmp
              Delete  FROM  MRP_PCM_CRITERIONS_CAL
              WHERE    CMP_NO      = Cmp
         SELECT NVL(COUNT(*) ,0) INTO  C
          FROM  MRP_PCM_CRITERIONS_CAL
          WHERE    CMP_NO      = Cmp
              Delete  FROM  MRP_PCM_CRITERIONS_CAL
              WHERE    CMP_NO      = Cmp
PROCEDURE INSERT_DAILY(CC_ACC IN VARCHAR2 , V_Tran_Id VARCHAR2 , ACCT_COD VARCHAR2, CC_CODE_VAR VARCHAR2,Amt_var NUMBER ,TRAN_TYPE_VAR VARCHAR2, P_BRN_NO NUMBER, CC_ACTIVE IN NUMBER) IS
  BEGIN
        BEGIN
              SELECT  acc_name_a, acc_name_e
              FROM mrp_pcm_accounts_def
              Where acc_code = ACCT_COD AND CMP_NO = 1 AND BRN_NO = P_BRN_NO ;
              EXCEPTION WHEN NO_DATA_FOUND THEN
        END;
        BEGIN
              SELECT  acc_name_a, acc_name_e
              FROM mrp_pcm_accounts_def
              Where acc_code = CC_ACC AND  CMP_NO = 1 AND BRN_NO = P_BRN_NO;
              EXCEPTION WHEN NO_DATA_FOUND THEN
        END;
           MSG2:='Balance of '||ACC_E ||' from '||MACC_E ;
        INSERT INTO MRP_PCM_DAILY_TRANS_DETAILS
FUNCTION F_BENF_ALL_CNTR(P_USER NUMBER , CMP IN NUMBER, BRN IN NUMBER,
    SELECT CC_CODE B_CC_CODE
    FROM  MRP_PCM_COST_CENTER
    WHERE   CMP_NO   = CMP
       AND  EXISTS (SELECT 1  FROM MRP_PCM_VARIABLES_VALUES
          WHERE  cmp_no      =Cmp  and
      SELECT COUNT(CC_CODE) InTo C
      FROM  MRP_PCM_COST_CENTER
      WHERE CMP_NO = CMP
       AND  EXISTS (SELECT 1  FROM MRP_PCM_VARIABLES_VALUES
                    WHERE  cmp_no      =Cmp  and
                  INSERT INTO MRP_PCM_CRITERIONS_CAL
  EXCEPTION    WHEN OTHERS THEN
FUNCTION F_BENF_SOME_CNTR(P_USER IN NUMBER , CMP IN NUMBER,  BRN IN NUMBER,
   SELECT CC_CODE B_CC_CODE
    FROM  MRP_PCM_DISTRIBUTION_EFFECT
    WHERE CMP_NO   = CMP
      SELECT COUNT(*) INTO C
      FROM  MRP_PCM_DISTRIBUTION_EFFECT
      WHERE  CMP_NO   = CMP
      begin
     end;
           INSERT INTO MRP_PCM_CRITERIONS_CAL (     CMP_NO           ,
    EXCEPTION WHEN OTHERS THEN
    END;
PROCEDURE Distribute_cost_centers(P_USER IN NUMBER , Cmp  In Number , Brn In Number ,
      SELECT A.SEQ , A.CC_CODE  , A.E_CODE  , A.DCR_CODE , A.DIS_EFFECT ,
      FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
      WHERE   A.CMP_NO   = Cmp
           and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                              where CMP_NO = CMP AND BRN_NO = BRN AND  p_cntu = 0 ) and
           ( Select CMP_NO, BRN_NO, acc_code from MRP_PCM_ACCOUNTS_DEF DF
             WHERE  CMP_NO = CMP AND BRN_NO = BRN AND
      SELECT A.SEQ , A.CC_CODE  , A.E_CODE  , A.DCR_CODE , A.DIS_EFFECT ,
      FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
      WHERE     A.CMP_NO   = Cmp
           and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                              where CMP_NO = CMP AND BRN_NO = BRN AND p_cntu = 0  ) and
 Begin
            SELECT Count(YER_CODE) InTo C
            FROM   MRP_SGS_PERIOD_COSTONG
 EXCEPTION WHEN OTHERS THEN
FUNCTION TOTAL_VAL_ITEMS_FOR_CC(P_USER   NUMBER , CMP IN NUMBER, BRN IN NUMBER,
       SELECT  DISTINCT V.item_code 
       FROM   MRP_PCM_VARIABLES_VALUES V ,
       WHERE V.ITEM_CODE IS NOT NULL 
    EXCEPTION WHEN OTHERS THEN RETURN(0);
FUNCTION F_BENF_ALL_PRD(P_USER NUMBER , CMP IN NUMBER, BRN IN NUMBER,
       SELECT  DISTINCT V.item_code
       FROM   MRP_PCM_VARIABLES_VALUES V ,
       WHERE V.ITEM_CODE IS NOT NULL 
        BEGIN
                 begin
                 end;
                             INSERT INTO MRP_PCM_CRITERIONS_CAL( CMP_NO           ,
  EXCEPTION    WHEN OTHERS THEN
FUNCTION TOTAL_VAL_SOME_ITEMS_FOR_CC(P_USER IN NUMBER , CMP IN NUMBER, BRN IN NUMBER,
    SELECT DISTINCT V.ITEM_CODE
    FROM  MRP_PCM_VARIABLES_VALUES V ,
    WHERE D.CMP_NO  = CMP
      SELECT count(*) into c_items
      FROM  MRP_PCM_DISTRIBUTION_EFFECT    
      WHERE CMP_NO   = CMP
    EXCEPTION WHEN OTHERS THEN
 FUNCTION F_BENF_SOME_PRD(P_USER IN NUMBER , CMP IN NUMBER, BRN IN NUMBER,
    SELECT DISTINCT V.ITEM_CODE 
    FROM  MRP_PCM_VARIABLES_VALUES V ,
    WHERE D.CMP_NO  = CMP
        SELECT COUNT(V.ITEM_CODE) INTO C_ITEMS 
        FROM  MRP_PCM_VARIABLES_VALUES V ,
        WHERE D.CMP_NO  = CMP
               INSERT INTO MRP_PCM_CRITERIONS_CAL(CMP_NO          ,
    EXCEPTION WHEN OTHERS THEN
    END;
PROCEDURE Distribute_Products(P_USER IN NUMBER , Cmp  In Number , Brn In Number ,
      SELECT SEQ , CC_CODE , E_CODE, DCR_CODE, DIS_EFFECT , ACC_CODE , ACC_LP, TYP, TXT_FORMULA
                  SELECT A.SEQ      , A.CC_CODE  , A.E_CODE , A.DCR_CODE , A.DIS_EFFECT ,
                  FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
                  WHERE  A.CMP_NO       = CMP
                    and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                                       where CMP_NO = CMP  AND BRN_NO = BRN AND p_cntu = 0 ) and
                       ( Select DF.CMP_NO, DF.BRN_NO, DF.acc_code from MRP_PCM_ACCOUNTS_DEF DF
                       SELECT A.SEQ      , A.CC_CODE  , A.E_CODE , A.DCR_CODE , A.DIS_EFFECT ,
                      FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
                      WHERE  A.CMP_NO   = CMP
                        and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                                           where CMP_NO = CMP  AND BRN_NO = BRN AND  p_cntu = 0 ) and
                 CC_CODE IN  (SELECT DISTINCT CC_CODE  FROM MRP_PCM_VARIABLES_VALUES
                                       WHERE  cmp_no      =Cmp  and
 Begin
      EXCEPTION WHEN OTHERS THEN
Procedure Fill_Summary_Yeild      (P_CMP    IN NUMBER,
   ----------   Begin Procedure
     select mrp_pcm_separated 
     from MRP_SGS_GENERAL_PARAMETARS
     WHERE CMP_NO = P_CMP AND BRN_NO = P_BRN;
    WHERE   Y.YER_CODE    = P_YEAR and
     BEGIN
              SELECT dv_code
              FROM MRP_PCM_DISTRIBUTION_VARIABLES 
              WHERE DV_TYPE = 10 AND BASEDON  = 2;
              EXCEPTION WHEN OTHERS THEN
    BEGIN
           SELECT COUNT(DISTINCT P.item_code)
           FROM   mrp_pcm_cntr_products p
           WHERE  P.brn_no  =  P_BRN  ;
    FOR j IN (SELECT V.cc_code,V.item_code, SUM( Nvl(V.CV_VALUE,0) ) VAL
              FROM  MRP_PCM_VARIABLES_VALUES V 
              WHERE      V.CMP_NO  = P_CMP
              Group By    V.cc_code,V.item_code
             begin  
                    INSERT INTO MRP_PCM_COSTING_SUMMARY_YIELD     (cmp_no         ,
               END;           
    FOR FG IN  (  SELECT DISTINCT P.item_code, P.cc_code
                  FROM   mrp_pcm_cntr_products P,
                  WHERE  P.brn_no  =  V.BRN_NO  AND P.CMP_NO    = V.CMP_NO  AND
                      ( select CMP_NO , BRN_NO, I
tem_code From MRP_CRP_ITEMS_CATEGORY
                        Where  CTGR = 1 AND brn_no  =  V.BRN_NO  AND CMP_NO    = V.CMP_NO )  AND
                      ( select  CMP_NO , BRN_NO, Item_code From MRP_CRP_ITEMS_CATEGORY
                        Where  CTGR = 2 AND   brn_no  =  V.BRN_NO  AND CMP_NO    = V.CMP_NO)
                    FOR SP IN (  SELECT V.item_code ,O.OFFSET , SUM(NVL(V.cv_value,0))  Val
                                 FROM   MRP_PCM_VARIABLES_VALUES V  ,
                                           ( SELECT DISTINCT assembler 
                                             FROM  MRP_PCM_COSTING_SUMMARY_YIELD
                                             where assembler = V.ITEM_CODE AND
                                             GROUP BY V.item_code,O.OFFSET
                        Update   MRP_PCM_COSTING_SUMMARY_YIELD
                         Where  Assembler = FG.Item_Code AND
     EXCEPTION WHEN OTHERS THEN
PROCEDURE GET_STANDARD_CONST_ACCOUNT(  P_CMP  IN NUMBER , P_BRN    IN NUMBER ,
               SELECT DISTINCT
               FROM MRP_PCM_STD_COST_CONSTANT C ,
               WHERE C.seq = P.seq              AND
                 ORDER BY 1,2,3,4,5,6;
              SELECT DISTINCT
              FROM MRP_PCM_STD_COST_CONSTANT C ,
              WHERE C.seq          = P.seq      AND
                ORDER BY 1,2,3,4,5,6;
BEGIN 
       SELECT Count(*) into C
       FROM MRP_PCM_STD_COST_CONSTANT C ,
      WHERE C.seq = P.seq              AND
     SELECT DISTINCT CUR_CODE  INTO STD_CURR
     FROM MRP_PCM_STD_COST_CONSTANT WHERE CMP_NO = P_CMP AND BRN_NO = P_BRN ;
     SELECT MAX(NVL(sum_sq,0)) INTO S
     FROM MRP_PCM_COSTING_SUMMARY;
           FOR Q IN ( SELECT  ca.cc_beneficial, CA.Item_Beneficiary , CA.ACC_CODE,
                      FROM   MRP_PCM_CRITERIONS_CAL CA
                      WHERE  ca.CMP_NO = J.CMP_NO            And
              SELECT COUNT(*) INTO C
              FROM   MRP_PCM_COSTING_SUMMARY
              WHERE   J.CMP_NO      = CMP_NO      AND
                  UPDATE MRP_PCM_COSTING_SUMMARY
                  WHERE   J.CMP_NO      = CMP_NO      AND
          FOR K IN (  SELECT  ca.cc_beneficial, CA.CC_BENEFICIARY , CA.ACC_CODE,
                      FROM   MRP_PCM_CRITERIONS_CAL CA
                      WHERE  ca.CMP_NO = H.CMP_NO            And
             BEGIN
                 FOR G IN ( SELECT  ca.cc_beneficial, CA.Item_Beneficiary , CA.ACC_CODE,
                            FROM   MRP_PCM_CRITERIONS_CAL CA
                            WHERE  ca.CMP_NO = H.CMP_NO            And
                       BEGIN
                             FROM  MRP_PCM_COSTING_SUMMARY
                             WHERE  CMP_NO      = H.CMP_NO         AND
                                 BEGIN
                                    UPDATE MRP_PCM_COSTING_SUMMARY
                                    WHERE   CMP_NO = H.CMP_NO  AND
                                 END;
                       EXCEPTION WHEN OTHERS THEN
    EXCEPTION WHEN OTHERS THEN
PROCEDURE GET_STANDARD_VAR_ACCOUNT(  P_CMP  IN NUMBER DEFAULT 1,
  BEGIN
         SELECT  COUNT(*) INTO C  
           FROM MRP_PCM_STD_COST_VAR_MSTR
          WHERE cmp_no = P_CMP
         SELECT DISTINCT CUR_CODE  INTO STD_CURR
           FROM MRP_PCM_STD_COST_VAR_DLS 
          WHERE BRN_NO=P_BRN;
            SELECT MAX(NVL(sum_sq,0)) I
            FROM MRP_PCM_COSTING_SUMMARY;
            FOR I IN ( SELECT CMP_NO, BRN_NO, CC_CODE, ASSEMBLER, ACC_CODE, YER_CODE,PERIOD_CODE
                           FROM MRP_PCM_COSTING_SUMMARY    
                           WHERE BRN_NO=P_BRN AND YER_CODE =P_YER  AND PERIOD_CODE = P_PER AND
                           ORDER BY CMP_NO, BRN_NO, CC_CODE, ASSEMBLER, ACC_CODE
                 BEGIN
                       BEGIN
                                   SELECT  QTY  INTO Q --  Yield_Qty 3/6/2009  
                                   FROM MRP_PCM_STD_COST_VAR_MSTR
                                   WHERE cmp_no = I.CMP_NO AND
                                         EXCEPTION WHEN OTHERS THEN QTY:= 0; 
                               BEGIN
                                       SELECT P.amt/ Q  INTO V_AMT
                                       FROM  MRP_PCM_STD_COST_VAR_DLS  D ,
                                       WHERE I.cmp_no        = d.cmp_no       AND
                                              EXCEPTION WHEN OTHERS THEN V_AMT := 0;                
                               BEGIN
                                           SELECT DISTINCT ACT_QTY  INTO V_QTYF --  Yield_Qty 3/6/2009  
                                           FROM MRP_PCM_COSTING_SUMMARY_YIELD
                                           WHERE cmp_no = I.CMP_NO AND
                               EXCEPTION WHEN NO_DATA_FOUND THEN
                                              UPDATE MRP_PCM_COSTING_SUMMARY
      EXCEPTION 
   END;
Function GET_PERIOD_STATUS(P_CMP_NO NUMBER, P_BRN_NO NUMBER,P_YER Number,P_PRD Number) Return number IS
    Select NVL(P_CLS,1)
    From   MRP_SGS_PERIOD_COSTONG
    Where  YER_CODE=p_YER
  Exception
Procedure GET_YEAR_PERIOD(p_cmp_no Number, p_brn_no Number, V_DATE DATE, V_YER  IN OUT Number, V_PRD  IN OUT Number) IS
        SELECT D.YER_CODE , D.PERIOD_CODE
         FROM  MRP_SGS_PERIOD_COSTONG D,
         WHERE 
  Exception
  End;
FUNCTION MRP_FUNC_GET_VARIABLE_VALUE(   V_CMP             NUMBER ,
                 SELECT IND_CALCULAT, IND_ONCE
                 FROM  MRP_PCM_DISTRIBUTION_VARIABLES
                 WHERE DV_CODE = V_DV_CODE  ;
                      BEGIN
                                 BEGIN              
                                      SELECT YER_CODE , PERIOD_CODE
                                                FROM  MRP_SGS_PERIOD_COSTONG
                                                WHERE  CMP_NO = V_CMP AND BRN_NO = V_BRN  AND
                                                             (SELECT MAX(SEQ)
                                                              FROM  MRP_SGS_PERIOD_COSTONG
                                                              WHERE  CMP_NO = V_CMP AND BRN_NO = V_BRN AND
                                 EXCEPTION WHEN NO_DATA_FOUND THEN
                                                                SELECT YER_CODE , PERIOD_CODE
                                                                FROM  MRP_SGS_PERIOD_COSTONG
                                                                WHERE  CMP_NO = V_CMP AND BRN_NO = V_BRN AND
                                                                             SEQ = (SELECT MAX(SEQ)
                                                                              FROM  MRP_SGS_PERIOD_COSTONG
                                                                              WHERE  CMP_NO = V_CMP AND BRN_NO = V_BRN AND
                      EXCEPTION WHEN OTHERS THEN RETURN(0);
                           SELECT MAX(CV_SQE)
                           FROM  MRP_PCM_VARIABLES_VALUES
                           WHERE CMP_NO      = V_CMP
                                   SELECT CV_VALUE
                                   FROM  MRP_PCM_VARIABLES_VALUES
                                   WHERE        CV_SQE    = V_VAR_SEQ
                       BEGIN
                                       SELECT  DECODE(V_IND_CALC ,
                                        FROM  MRP_PCM_VARIABLES_VALUES
                                        WHERE CMP_NO        = V_CMP
                                        SELECT V.CV_VALUE
                                        FROM MRP_PCM_VARIABLES_VALUES V
                                        WHERE V.CMP_NO = V_CMP AND
                                                    ( SELECT  MAX(CV_SQE)  FROM MRP_PCM_VARIABLES_VALUES
                                                      WHERE   CMP_NO           = V_CMP  AND
                                        SELECT CV_VALUE
                                        FROM MRP_PCM_VARIABLES_VALUES V
                                        WHERE V.CMP_NO         = V_CMP  AND
                                              ( SELECT  MIN(CV_SQE)  FROM MRP_PCM_VARIABLES_VALUES
                                                WHERE   CMP_NO            = V_CMP AND
                       END;
   EXCEPTION
Last update in 7/2/2011
FUNCTION MRP_FUNC_GET_FORMULA_VAR_VALUE
                 SELECT IND_CALCULAT, IND_ONCE
                 FROM  MRP_PCM_DISTRIBUTION_VARIABLES
                 WHERE DV_CODE = V_DV_CODE  ;
                      BEGIN
                                 BEGIN              
                                                SELECT YER_CODE , PERIOD_CODE
                                                FROM  MRP_SGS_PERIOD_COSTONG
                                                WHERE  CMP_NO = V_CMP AND BRN_NO = V_BRN  AND
                                                             (SELECT MAX(SEQ)
                                                              FROM  MRP_SGS_PERIOD_COSTONG
                                                              WHERE CMP_NO = V_CMP AND BRN_NO = V_BRN AND
                                 EXCEPTION WHEN NO_DATA_FOUND THEN
                                                                SELECT YER_CODE , PERIOD_CODE
                                                                FROM  MRP_SGS_PERIOD_COSTONG
                                                                WHERE  CMP_NO = V_CMP AND BRN_NO = V_BRN AND
                                                                       SEQ = (SELECT MAX(SEQ)
                                                                        FROM  MRP_SGS_PERIOD_COSTONG
                                                                        WHERE  CMP_NO = V_CMP AND BRN_NO = V_BRN AND
                      EXCEPTION WHEN OTHERS THEN RETURN(0);
                           SELECT MAX(CV_SQE)
                           FROM  MRP_PCM_VARIABLES_VALUES
                           WHERE CMP_NO      = V_CMP
                                   SELECT CV_VALUE
                                   FROM  MRP_PCM_VARIABLES_VALUES
                                   WHERE        CV_SQE    = V_VAR_SEQ
                       BEGIN
                                       SELECT  DECODE(V_IND_CALC ,
                                        FROM  MRP_PCM_VARIABLES_VALUES
                                        WHERE CMP_NO      = V_CMP
                                        SELECT V.CV_VALUE
                                        FROM MRP_PCM_VARIABLES_VALUES V
                                        WHERE V.CMP_NO = V_CMP AND
                                                    ( SELECT  MAX(CV_SQE)  FROM MRP_PCM_VARIABLES_VALUES
                                                      WHERE   CMP_NO            = V_CMP  AND
                                        SELECT CV_VALUE
                                        FROM MRP_PCM_VARIABLES_VALUES V
                                        WHERE V.CMP_NO         = V_CMP  AND
                                                    ( SELECT  MIN(CV_SQE)  FROM MRP_PCM_VARIABLES_VALUES
                                                      WHERE   CMP_NO            = V_CMP AND
             END;
      ---> IF THERE'S ANY ERROR RETURN ERROR AND END FUNCTION
    EXCEPTION WHEN OTHERS then
FUNCTION MRP_FUNC_GET_FORMULA_RESULT(F_TEXT VARCHAR2) RETURN NUMBER IS
   FORMULA_TEXT   VARCHAR2(2000) := ' SELECT ' || F_TEXT || ' FROM DUAL ' ;
EXCEPTION when zero_divide Then
FUNCTION DATE_IN_ACTIVE_PERIOD(p_cmp_no Number, p_brn_no Number, V_DATE DATE) RETURN NUMBER IS
    SELECT COUNT(*)
     FROM  MRP_SGS_PERIOD_COSTONG
     WHERE P_CLS  = 0
EXCEPTION
PROCEDURE Cost_Center_TRAN ( P_BRN_NO   IN NUMBER , P_PERIOD IN NUMBER, P_YER_CODE NUMBER,Err In Out Number )   IS
    -----------------  Begin Process  ------------------------------------------
     Select MRP_PCM_SC_DIS
     From MRP_SGS_GENERAL_PARAMETARS
     WHERE CMP_NO = 1 AND BRN_NO = P_BRN_NO ;
         SELECT Count(*) InTo C_records
               FROM  MRP_PCM_DAILY_TRANS_DETAILS DETL ,
               WHERE   MAST.TRAN_ID     =  DETL.TRAN_ID
                    (Select DISTINCT C.CC_BENEFICIAL
                     From   MRP_PCM_CRITERIONS_CAL C
                     WHERE  C.TYP = 1  -- 
    FOR j in ( SELECT MAST.BRANCH_ID ,  -- ONYX BRANCH NO 
               FROM   MRP_PCM_DAILY_TRANS_DETAILS DETL ,
               WHERE   MAST.TRAN_ID     =  DETL.TRAN_ID
                    (Select DISTINCT C.CC_BENEFICIAL
                     From   MRP_PCM_CRITERIONS_CAL C
                     WHERE  C.TYP = 1  -- 
              GROUP BY MAST.BRANCH_ID ,
              Order by DETL.ACC_CODE  ,
                    INSERT INTO MRP_PCM_DAILY_TRANS_MAST(CMP_NO           , 
           MSG_CR_ENG        := ' Due of '|| ACC_E||' from Center: '||j.cc_name_f ;
                    INSERT INTO MRP_PCM_DAILY_TRANS_DETAILS
          SELECT Count(DCR_CODE) INTO COUNT_DCR
          FROM MRP_PCM_CRITERIONS_CAL
          WHERE CC_BENEFICIAL = CC_CODE_C_VAR AND
                    FOR I in (SELECT  DISTINCT
                              From     MRP_PCM_CRITERIONS_CAL CA,
                              WHERE   CA.TYP = 1  -- 
                                    ( 1 <= ( select count(*)
                                             from   MRP_PCM_CRITERIONS_CAL
                                             where  acc_code = J.ACC_CODE
                                       ( 0 = ( select count(*)
                                               from MRP_PCM_CRITERIONS_CAL
                                               where   Acc_code = J.ACC_CODE
                              ORDER BY 1,2,5)
                               BEGIN
                                  SELECT Distinct ACC_CODE INTO ACCT_DEP
                                  FROM MRP_PCM_COSTCENTER_CRITERIONS
                                  WHERE   TYP=1
                                  EXCEPTION WHEN OTHERS THEN
                               END;
                                               INSERT INTO MRP_PCM_DAILY_TRANS_DETAILS
          If  round(Cost_Cntr_Tran_Amt + T_Cal_Tran_Amt,2)  = 0  THEN -- UPDATE IN 6/2/2007 OR (Act_parameter IS NULL) Then
    EXCEPTION WHEN OTHERS THEN
---THIS PROCEDURE IS FOR TRANSCTION BETWEEN PRODUCT WHICH NOT CLOSED AND THERE CLOSING ACCOUNTS IN MRP_PCM_ACCOUNT_CLOSING
---THIS PROCEDURE IS FOR TRANSCTION BETWEEN PRODUCT WHICH NOT CLOSED AND THERE CLOSING ACCOUNTS IN MRP_PCM_ACCOUNT_CLOSING
PROCEDURE Close_Cost_Center_TRAN (P_BRN  IN NUMBER ,
 BEGIN
     DELETE  MRP_PCM_COSTING_SUMMARY WHERE DOC_TYPE = 2 AND
     SELECT MAX(sum_sq) INTO SEQ_MRY
     FROM MRP_PCM_COSTING_SUMMARY ;
     FOR I  IN( Select P.CMP_NO, P.BRN_NO, P.CC_CODE, d.item_code , d.A_qty 
                From MRP_SFC_WIP_INVENTORY_MSTR m,
                 WHERE  m.INV_SEQ  = d.inv_seq and d.a_qty > 0 and
                       (D.BRN_NO, d.item_code) in ( select BRN_NO,item_code from mrp_crp_items_category where ctgr = 2) And
                       ORDER BY 2,1
                  FOR J IN (SELECT ACC_CODE ,
                            FROM 
                            Select 
                              SELECT  S.cmp_no, S.brn_no, 
                              FROM MRP_PCM_COSTING_SUMMARY S, 
                              WHERE 
                               GROUP BY S.CMP_NO, S.BRN_NO,T.CC_CODE, T.ITEM_CODE, S.ACC_CODE,  S.ASSEMBLER,T.LVL, S.CC_CODE ,T.ROW_QTY,s.YER_CODE 
                             GROUP   BY ACC_CODE )
                       BEGIN
                           SELECT DISTINCT MRP_ACC_CODE
                          FROM    MRP_PCM_PRODUCTS_ACCOUNTS
                          WHERE   ITEM_CODE = I.ITEM_CODE  and
                           INSERT INTO MRP_PCM_COSTING_SUMMARY
                       EXCEPTION WHEN OTHERS THEN
                       END; 
    EXCEPTION WHEN OTHERS THEN
Function Exact_Percent(cmp number, BRN  IN NUMBER,
      select count(*) INTO C
      From MRP_PCM_CRITERIONS_CAL
      where      CMP_NO  = cmp
     EXCEPTION WHEN OTHERS THEN
---THIS PROCEDURE IS FOR TRANSCTION BETWEEN PRODUCT CENTERS AND PRODUCTS
PROCEDURE Cost_Center_Item_TRAN (P_PERIOD IN NUMBER,  P_YER_CODE NUMBER, P_BRN_NO  IN NUMBER, Err In Out Number )
      SELECT COUNT(*)
      FROM  MRP_PCM_DAILY_TRANS_DETAILS DETL  ,
      WHERE 
         AND DETL.CC_CODE  IN (  SELECT    C.CC_BENEFICIAL
                            FROM      MRP_PCM_CRITERIONS_CAL C
                            WHERE     C.TYP = 2
       ---------  BEGIN PROCESS  -----------------
       FOR j IN( SELECT MAST.BRANCH_ID ,
                 FROM MRP_PCM_DAILY_TRANS_DETAILS DETL  ,
                 WHERE MAST.TRAN_ID     =  DETL.TRAN_ID
                   AND DETL.CC_CODE  IN (  SELECT    C.CC_BENEFICIAL
                                           FROM      MRP_PCM_CRITERIONS_CAL C
                                           WHERE     C.TYP = 2
                  GROUP BY  MAST.BRAN
                  Order by  DETL.ACC_CODE, DETL.CC_CODE)
                  INSERT INTO MRP_PCM_DAILY_TRANS_MAST
               BEGIN
                  SELECT DISTINCT REF_CC_CODE
                  FROM MRP_PCM_DAILY_TRANS_MAST MAST,
                  EXCEPTION  WHEN no_data_found THEN
              END;
              INSERT INTO MRP_PCM_DAILY_TRANS_DETAILS
            SELECT COUNT(*) INTO COUNT_DCR
            FROM MRP_PCM_CRITERIONS_CAL
            WHERE    CC_BENEFICIAL = J.CC_CODE  AND
            FOR I in( Select  C.CC_BENEFICIAL     ,
                      From    MRP_PCM_CRITERIONS_CAL C ,
                      Where   C.TYP = 2
                                    ( 1 <= (select count(*)
                                from MRP_PCM_CRITERIONS_CAL CAL
                                               where  CAL.acc_code      = J.ACC_CODE
                                    ( 0 = (select count(*)
                                           from MRP_PCM_CRITERIONS_CAL CL
                                           where  acc_code = J.ACC_CODE
                              Order By 1,2,3)
             BEGIN
                  SELECT DISTINCT MRP_ACC_CODE
                  FROM    MRP_PCM_PRODUCTS_ACCOUNTS
                  WHERE    CMP_NO = 1 AND
                  EXCEPTION    WHEN NO_DATA_FOUND THEN
             END;
                    INSERT INTO MRP_PCM_DAILY_TRANS_DETAILS (Tran_Id     ,
    EXCEPTION WHEN OTHERS THEN
/*FUNCTION IS_CLOSED_ONX_PERIOD(P_YEAR IN NUMBER, P_PERIOD IN NUMBER) RETURN NUMBER IS
  BEGIN
       SELECT PRD_CLS  INTO C FROM S_PRD_BRN_CLS
                WHERE  PRD_NO = P_PERIOD AND
      exception when others then
  END;*/
PROCEDURE GET_PRODUCT_ACCOUNT( P_CMP  IN NUMBER,
    --- this procedure for getting finish products costing
            SELECT DISTINCT ITEM_CODE,  MRP_ACC_CODE
            FROM MRP_PCM_PRODUCTS_ACCOUNTS
            WHERE CMP_NO = P_CMP AND BRN_NO = P_BRN AND
                   ( SELECT DISTINCT d.ACC_CODE
                     FROM MRP_PCM_DAILY_TRANS_MAST m ,
                     WHERE m.Tran_id = d.tran_id a
     BEGIN
          BEGIN
              WHERE SUM_SQ IN
                  ( SELECT SUM_SQ FROM MRP_PCM_COSTING_SUMMARY
                    WHERE  CMP_NO = P_CMP AND BRN_NO = P_BRN AND
              WHERE CMP_NO = P_CMP AND BRN_NO = P_BRN AND
              SELECT MAX(NVL(sum_sq,0)) INTO SEQ_MRY
              FROM MRP_PCM_COSTING_SUMMARY;
              EXCEPTION WHEN NO_DATA_FOUND THEN
          END;
          EXCEPTION WHEN OTHERS THEN
     END;
   PROCEDURE FILL_SUMMARY_PRODUCTS( ITEM_CODE  IN VARCHAR2 , MRP_ACC  IN VARCHAR2,
     BEGIN
                   SELECT  D.Tran_id,D.TRAN_AMT,D.TRAN_TYPE
                   FROM mrp_pcm_daily_trans_details D,
                   WHERE D.tran_id     = M.tran_id AND
                         SELECT D.Acc_code, D.CC_CODE,D.REF_CC_CODE, D.TRAN_TYPE
                         FROM mrp_pcm_daily_trans_details D,
                         WHERE D.tran_id = M.tran_id AND
                     SELECT COUNT(*) INTO C
                     FROM   MRP_PCM_COSTING_SUMMARY
                     WHERE CMP_NO        = P_CMP  AND
                       BEGIN
                           UPDATE  MRP_PCM_COSTING_SUMMARY
                            WHERE ACC_CODE    = J.ACC_CODE AND
                           EXCEPTION WHEN OTHERS THEN
                       END;
                      BEGIN
                           INSERT INTO MRP_PCM_COSTING_SUMMARY
                       EXCEPTION WHEN OTHERS THEN
                       END;
        EXCEPTION WHEN OTHERS THEN
  FUNCTION RUN_SELECT( SEL  IN VARCHAR2 ) RETURN NUMBER IS
   BEGIN
       EXCEPTION WHEN OTHERS THEN
FUNCTION ActiveDateCheck( DAT  IN DATE, TYP NUMBER ) RETURN BOOLEAN IS
         SELECT DATE_F, LAST_DAY(DATE_T) INTO DF , DT
         FROM MRP_SGS_PERIOD_COSTONG WHERE P_CNTU = 0 AND ROWNUM<=1 ;
    SELECT DATE_F, LAST_DAY(DATE_T) INTO DF , DT
         FROM MRP_SGS_PERIOD_COSTONG WHERE S_CNTU = 0 AND ROWNUM<=1 ;
          /* FOR I IN (SELECT * FROM MRP_SGS_PERIOD_COSTONG WHERE P_CNTU = 0)LOOP
           FOR I IN (SELECT * FROM MRP_SGS_PERIOD_COSTONG WHERE S_CNTU = 0)LOOP
      EXCEPTION WHEN NO_DATA_FOUND THEN
 FUNCTION RUN_VAR_SELECT( SEL  IN VARCHAR2 ) RETURN VARCHAR IS
 BEGIN
PROCEDURE CALC_COST_FRM_PREVIOUS_STGS(  P_CMP  IN NUMBER DEFAULT 1,
        Select 
        From MRP_PCM_COSTING_SUMMARY_YIELD Y, 
        WHERE S.CC_CODE  = Y.CC_CODE   AND
        Order by 1,2,3,4,5;
     SELECT MRP_PCM_SEPARATED INTO V_MRP
     FROM MRP_SGS_GENERAL_PARAMETARS
     WHERE CMP_NO = P_CMP AND BRN_NO = P_BRN AND ROWNUM<=1;
     SELECT MAX(SUM_SQ) INTO SEQ_MRY
     FROM MRP_PCM_COSTING_SUMMARY;
       SELECT MRP_ACC_CODE INTO MRP_ACC
       FROM MRP_PCM_PRODUCTS_ACCOUNTS
       WHERE ITEM_CODE = I.ASSEMBLER AND
       SELECT COUNT(*) INTO V_C 
       FROM MRP_BOM_BOM_ROW 
         BEGIN
              FOR J IN (  SELECT CMP_NO, BRN_NO, ITEM_ROW, CC_ROW, ROW_QTY QTY
                          FROM MRP_PCM_ITEMS_TREE
                          WHERE CMP_NO    = I.CMP_NO     AND
                                  ( SELECT DISTINCT CMP_NO, BRN_NO, assembler,CC_CODE 
                                    FROM MRP_PCM_COSTING_SUMMARY_YIELD 
                                    WHERE CMP_NO      = I.CMP_NO AND 
                           /* SELECT R.CMP_NO, R.BRN_NO, R.ITEM_ROW , 
                           FROM MRP_BOM_BOM_ROW R, 
                                  ( SELECT DISTINCT CMP_NO, BRN_NO, assembler FROM MRP_PCM_COSTING_SUMMARY_YIELD 
                                    WHERE CMP_NO   = I.CMP_NO AND 
                      FOR Q IN ( SELECT DISTINCT 
                             FROM MRP_PCM_COSTING_SUMMARY
                             WHERE 
                             GROUP BY  ACC_CODE ,
                           BEGIN
                               INSERT INTO MRP_PCM_COSTING_SUMMARY
                                   EXCEPTION WHEN OTHERS THEN
                           END;
    EXCEPTION WHEN OTHERS THEN
PROCEDURE BUILD_STD_VAR_STD_FROM_ACT_CST( P_BRN_NO IN NUMBER,
        SELECT DISTINCT s.CMP_NO, s.BRN_NO, s.YER_CODE,s.PERIOD_CODE ,s.ASSEMBLER , bm.bom_code, bm.Bom_qty , s.ASS_ACCOUNT, s.CC_CODE, s.CUR_CODE,
        FROM   MRP_PCM_COSTING_SUMMARY s ,
        WHERE 
              (SELECT CMP_NO, BRN_NO, CC_CODE, ASSEMBLER, YER_CODE, Bom_code 
                 FROM MRP_PCM_STD_COST_VAR_MSTR
                WHERE BRN_NO = P_BRN_NO) 
        Order by 1,2,3,4,6;
      SELECT NVL(MAX(SEQ_SCVD),0)  INTO V_SQ
      FROM  MRP_PCM_STD_COST_VAR_DLS;
            INSERT INTO MRP_PCM_STD_COST_VAR_MSTR
                                      SELECT  CC_CODE,BRN_NO,ITEM_CODE ,  ACC_CODE ,CUR_CODE, SUM( distinct Qty)  QTY, 
                                                            From 
                                                            SELECT S.CMP_NO, S.BRN_NO, T.CC_CODE , 
                                                            FROM MRP_PCM_COSTING_SUMMARY S, 
                                                            WHERE 
                                                                      ( SELECT CMP_NO, BRN_NO, ASSEMBLER, CC_CODE, YER_CODE
                                                                        FROM MRP_PCM_STD_COST_VAR_MSTR
                                                                         WHERE   YER_CODE = I.YER_CODE ) AND
                                                                            GROUP BY  S.CMP_NO, S.BRN_NO,T.CMP_NO, t.BRN_NO, T.CC_CODE, T.ITEM_CODE,S.ACC_CODE, S.CUR_CODE,  
                                                            WHERE BRN_NO=P_BRN_NO
                                                            Group by  CC_CODE, BRN_NO,ITEM_CODE ,ACC_CODE,CUR_CODE, YER_CODE, PERIOD_CODE
                                        BEGIN  
                                                    INSERT INTO  MRP_PCM_STD_COST_VAR_DLS
                                                    EXCEPTION WHEN OTHERS THEN
                                           FOR Q IN ( SELECT  P.YER_CODE , P.PERIOD_CODE 
                                                      FROM    MRP_SGS_PERIOD_COSTONG P 
                                                      ORDER BY 1,2  )
                                             BEGIN
                                                    INSERT INTO MRP_PCM_STD_COST_VAR_PERIOD 
                                                          EXCEPTION WHEN OTHERS THEN
    EXCEPTION WHEN OTHERS THEN
                    and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                                       where CMP_NO = CMP  AND BRN_NO = BRN AND p_cntu = 0 ) and
                       ( Select DF.CMP_NO, DF.BRN_NO, DF.acc_code from MRP_PCM_ACCOUNTS_DEF DF
                       SELECT A.SEQ      , A.CC_CODE  , A.E_CODE , A.DCR_CODE , A.DIS_EFFECT ,
                      FROM  MRP_PCM_COSTCENTER_CRITERIONS A ,
                      WHERE  A.CMP_NO   = CMP
                        and a.cc_code in ( select cc_code from mrp_pcm_cost_center
                                           where CMP_NO = CMP  AND BRN_NO = BRN AND  p_cntu = 0 ) and
                 CC_CODE IN  (SELECT DISTINCT CC_CODE  FROM MRP_PCM_VARIABLES_VALUES
                                       WHERE  cmp_no      =Cmp  and
 Begin
MRP_PROCEDURE_PKG
MRP_PROCEDURE_PKG
CREATE OR REPLACE PACKAGE MRP_PRC_PKG is
PROCEDURE BUILD_ITEM_TREE( P_BRN_NO IN        NUMBER,
PROCEDURE BUILD_PRODUCTS_ACCOUNTS(P_BRN IN NUMBER);
PROCEDURE CALC_STANDARD_VAR_COST( P_BRN_NO IN NUMBER,
PROCEDURE SET_PRODUCTS_ACCOUNTS(P_BRN IN NUMBER ) ;    
PROCEDURE FILL_ITEM_TREE(P_BRN_NO IN NUMBER, P_BOM_CODE IN VARCHAR2 DEFAULT NULL, P_ITEM_CODE IN VARCHAR2 DEFAULT NULL);                                                                             
CREATE OR REPLACE PACKAGE BODY MRP_PRC_PKG 
PROCEDURE SET_PRODUCTS_ACCOUNTS(P_BRN IN NUMBER ) IS
           select  item_code
           from mrp_crp_items_Details
           Where Item_code not in
               ( select item_code From mrp_pcm_products_accounts
                  WHERE BRN_NO = P_BRN  ) AND
                  ( SELECT ITEM_CODE
                    FROM MRP_CRP_ITEMS_CATEGORY
                    WHERE CTGR  IN( 1, 2 ) );
            BEGIN
                    Select ac.acc_code into Acc_Fg
                    From Mrp_Pcm_Accounts_def AC
                    Where AC.BRN_NO = P_BRN AND AC.ACC_CLAS = 'PROD' AND 
                    EXCEPTION WHEN OTHERS THEN
            END;          
              Insert InTo mrp_pcm_products_accounts
   EXCEPTION
PROCEDURE CALC_STANDARD_VAR_COST( P_BRN_NO IN NUMBER,
            SELECT M.CMP_NO , M.BRN_NO, 
            FROM MRP_BOM_BOM_MSTR M,
            WHERE M.ITEM_CODE  = T.ITEM_CODE  AND
                  ( SELECT CC_CODE, BOM_CODE, ASSEMBLER,CMP_NO,  BRN_NO -- 31/5/2010
                    FROM MRP_PCM_STD_COST_VAR_MSTR
                    WHERE BRN_NO = P_BRN_NO ); -- CHANGE THE BRANCH NO
       BEGIN
             SELECT MIN(DATE_F) , MAX(DATE_T)
             FROM MRP_SGS_PERIOD_COSTONG
             WHERE YER_CODE = Y ;
             EXCEPTION WHEN OTHERS THEN
       BEGIN
           EXCEPTION WHEN OTHERS THEN
           INSERT INTO MRP_PCM_STD_COST_VAR_MSTR
                      SELECT  DISTINCT
                      FROM  MRP_MRP_BOM_ROW_TEMP R
                      WHERE R.FINAL_BOM  = B.F_BOM   AND
                      ORDER BY R.LVL
                      SELECT  DISTINCT
                      FROM MRP_MRP_BOM_ROW_TEMP R ,
                      ORDER  BY R.LVL
             SELECT MAX(SEQ_SCVD) INTO SQ
             FROM MRP_PCM_STD_COST_VAR_DLS ;
             FOR J IN ( SELECT  STG.CC_CODE  ,
                       ORDER BY 1, 2
                 BEGIN
                     INSERT INTO MRP_PCM_STD_COST_VAR_DLS
                     EXCEPTION WHEN OTHERS THEN
                 END;
                     FOR H IN ( SELECT YR.YER_CODE, P.PERIOD_CODE
                                FROM  MRP_SGS_PERIOD_COSTONG P,
                                WHERE YR.YER_CODE = P.YER_CODE AND
                         INSERT INTO MRP_PCM_STD_COST_VAR_PERIOD
    EXCEPTION WHEN OTHERS THEN
PROCEDURE BUILD_PRODUCTS_ACCOUNTS(P_BRN IN NUMBER)  IS
           select *
           from mrp_crp_items_Details
           Where BRN_NO = P_BRN AND
                 Item_code not in ( select item_code From mrp_pcm_products_accounts) and
                 ( select Item_code From MRP_CRP_ITEMS_CATEGORY
                   Where  CTGR in (1,2) ) and
                   item_code ||'/1' not in ( select acc_code From mrp_pcm_accounts_def)  ;
          INSERT INTO MRP_PCM_Accounts_def
           'PROD',  -- CHANGE FROM USER TO ANOTHER
PROCEDURE  BUILD_ITEM_TREE( P_BRN_NO IN        NUMBER,
            SELECT distinct 
            FROM MRP_BOM_BOM_MSTR M  ,
            WHERE  
     WHERE  UPPER(USR_NAME) = UPPER(P_COM_USR);
               INSERT INTO MRP_PCM_ITEMS_TREE
                              SELECT  DISTINCT
                              FROM  MRP_MRP_BOM_ROW_TEMP R,
                              WHERE R.CMP_NO     = 1             AND
                              ORDER BY R.LVL
                          Select Count(*) InTo v_count
                          From mrp_crp_items_category
                          Where Item_code = B1.Item_row And
                              Select Count(*) InTo v_count
                              From mrp_crp_items_category
                              Where Item_code = B1.Item_row And
                              begin
                                  SELECT DISTINCT SS.CC_CODE 
                                  FROM  MRP_PCM_COST_CENTER_SOURCE SS,
                                  WHERE    
                              exception when no_data_found then
                              end;
                                BEGIN   
                                SELECT 1 INTO V_CNT
                                FROM MRP_PCM_ITEMS_TREE
                                WHERE CMP_NO    =  B.CMP_NO    AND 
                                      EXCEPTION WHEN OTHERS THEN V_CNT := 0;
                                        INSERT INTO MRP_PCM_ITEMS_TREE
       WHERE  CMP_NO = 1            AND
    EXCEPTION WHEN OTHERS THEN
PROCEDURE FILL_ITEM_TREE(P_BRN_NO IN NUMBER, P_BOM_CODE IN VARCHAR2 DEFAULT NULL, P_ITEM_CODE IN VARCHAR2 DEFAULT NULL)IS
  CURSOR T_ITM IS SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE, STG_CODE FROM MRP_BOM_BOM_STAGES
                    WHERE BRN_NO = P_BRN_NO 
       SELECT DISTINCT CMP_NO, BRN_NO, BOM_CODE, BOM_ROW, ITEM_CODE, ITEM_ROW, QTY, STG_CODE, ROW_ORDER
            FROM MRP_BOM_ROW_VIEW
             WHERE (CMP_NO, BRN_NO, ITEM_CODE, BOM_CODE)IN
                  (SELECT CMP_NO, BRN_NO, ITEM_CODE, BOM_CODE FROM MRP_BOM_ROW_VIEW
                           ORDER BY ROW_ORDER DESC;
  BEGIN
    DELETE FROM MRP_BOM_BOM_TREE 
          WHERE BRN_NO =P_BRN_NO
      INSERT INTO MRP_BOM_BOM_TREE(CMP_NO, BRN_NO, STG_CODE, BOM_CODE, ITEM_CODE, BOM_ROW, ITEM_ROW, ROW_QTY, LVL) VALUES
        SELECT STG_CODE INTO V_STG FROM MRP_BOM_BOM_STAGES WHERE BRN_NO = P_BRN_NO
        INSERT INTO MRP_BOM_BOM_TREE(CMP_NO, BRN_NO, STG_CODE, BOM_CODE, ITEM_CODE, BOM_ROW, ITEM_ROW, ROW_QTY, LVL) VALUES
    EXCEPTION
  END;
 WHERE  CMP_NO = V_CMP AND BRN_NO = V_BRN AND
                      EXCEPTION WHEN OTHERS THEN RETURN(0);
CREATE OR REPLACE PACKAGE MRP_PKG is
  FUNCTION  MRP_PARAMETER(MRP_PR_NAME VARCHAR2) RETURN NUMBER;
  PROCEDURE MRP_PROC_UPDATE_AVGCST(V_ITEM_CODE VARCHAR2,
  FUNCTION  MRP_FUNC_GET_ITEM_AVGCST(V_ITM_COD Varchar2,
  FUNCTION  MRP_FUNC_GET_ITEM_LSTCST(ITEM_CODE VARCHAR2,
  FUNCTION  MRP_FUNC_GET_ITEM_QTYHND(V_ITEM_CODE VARCHAR2,
  Procedure MRP_PROC_CHK_IM_TRN_VALID(V_CMP         Number,
  Procedure MRP_PROC_GET_ITEM_SIZE(CMP Number,
  Procedure MRP_FUNC_GET_G_SIZE(CMP Number,
  Function MRP_FUNC_GET_GSIZE(CMP Number,
  Function MRP_FUNC_GET_ITM_SIZE(CMP Number,
  Function MRP_FUNC_GET_GQTY(CMP Number,
Function MRP_FUNC_GET_PERSTATUS(YER Number,
Function MRP_FUNC_WO_STATUS(V_CMP Number,
PROCEDURE MRP_FUNC_GET_YERPRD(V_DATE DATE,
Procedure MRP_PROC_BACK_AVGCST(CMP          Number,
Procedure MRP_PROC_LST_INCM_DATE(V_CMP       Number,
FUNCTION MRP_FUNC_SET_DEFAULT_VALUE(TABLENAME VARCHAR2,COL_NAME VARCHAR2,OWNN VARCHAR2) RETURN NUMBER;
FUNCTION MRP_FUNC_CRP_GET_STGBD(V_CMP        NUMBER   ,
FUNCTION MRP_FUNC_CRP_GET_JOBBD(V_CMP        NUMBER   ,
FUNCTION MRP_FUNC_GET_MCOST(V_ITEM_CODE  VARCHAR2,
FUNCTION MRP_FUNC_GET_IGRAND(V_CMP  NUMBER , V_BRN  NUMBER , V_ITEM_CODE  VARCHAR2)  RETURN VARCHAR2 ;
PROCEDURE MRP_FUNC_GET_SHIFT_TIME(V_CMP  NUMBER , V_BRN  NUMBER , V_SHF NUMBER , V_SHIFT_CODE  NUMBER , V_FTIME  IN OUT DATE , V_TTIME  IN OUT DATE)  ;
PROCEDURE MRP_PROC_GET_YR_PRD(V_DATE IN DATE , V_YR OUT NUMBER , V_PRD OUT NUMBER) ;
/*FUNCTION MRP_FUNC_GET_FORMULA_VAR_VALUE(V_CMP       NUMBER ,
FUNCTION MRP_FUNC_GET_FORMULA_RESULT(F_TEXT VARCHAR2) RETURN VARCHAR2 ;
FUNCTION MRP_FUNC_CHECK_VPDATE(V_DATE DATE) RETURN NUMBER ;
FUNCTION  MRP_FUNC_GET_ONX_MJOURNAL(V_SQL VARCHAR2) RETURN NUMBER ;
FUNCTION  MRP_FUNC_GET_ONX_DJOURNAL(V_SQL VARCHAR2) RETURN NUMBER ;
FUNCTION MRP_FUNC_GET_DESC(V_FLD  VARCHAR2 , V_TBL  VARCHAR2 , V_WRN1 VARCHAR2 , V_WRN2 VARCHAR2 , V_WRN3 VARCHAR2 ,
         This Function Get the report title .
    FUNCTION GET_REP_DESC ( REP_NAME IN VARCHAR2, LANG IN NUMBER )
         This Function Get the report Footer .
    FUNCTION GET_REP_TAIL( REP_NAME IN VARCHAR2,
         This Function Get the report Orientation .
    FUNCTION GET_REP_ORIENTATION  ( REP_NAME IN VARCHAR2 )
         This Function Get the font Name for the Address or Footer note Section of Report .
                               1 Function return Font Name to Address Setion
                               2 Function return Font Name to Footer note Setion
    FUNCTION GET_BFONT ( B_NO IN VARCHAR2, FLG IN NUMBER )
         This Function Get the font Size for the Address or Footer  Section of Report .
                               1 Function return Font Size to Address Setion
                               2 Function return Font Size to Footer  Setion
    FUNCTION GET_BFONT_S ( B_NO IN NUMBER, FLG IN NUMBER )
         This Function Get the font Name for the Title , Header , Details , Summation or Footer note Section of Report .
                               0 Function return Font Name to Title Setion
                               1 Function return Font Name to Header  Setion
                               2 Function return Font Name to Details Setion
                               3 Function return Font Name to Summition  Setion
                               4 Function return Font Name to Footer Note  Setion
    FUNCTION GET_FONT( REP_NAME IN VARCHAR2, FLG IN NUMBER )
         This Function Get the font size for the Title , Header , Details , Summation or Footer note Section of Report .
                               0 Function return Font size to Title Setion
                               1 Function return Font size to Header  Setion
                               2 Function return Font size to Details Setion
                               3 Function return Font size to Sumition  Setion
                               4 Function return Font size to Footer Note  Setion
    FUNCTION GET_FONT_S ( REP_NAME IN VARCHAR2, FLG IN NUMBER )
         This Function Get the font Wieght (Bold or not) for the Title , Header , Details , Summation or Footer note Section of Report .
                               0 Function return Font Wieght (Bold or not) to Title Setion
                               1 Function return Font Wieght (Bold or not) to Header  Setion
                               2 Function return Font Wieght (Bold or not) to Details Setion
                               3 Function return Font Wieght (Bold or not) to Summition  Setion
                               4 Function return Font Wieght (Bold or not) to Footer Note  Setion
    FUNCTION GET_FONT_B ( REP_NAME IN VARCHAR2, FLG IN NUMBER )
         This Function Get the Digit Wieght (1000 or 1000,000 or Noranl Wieght)
    FUNCTION GET_DIGIT ( REP_NAME IN VARCHAR2, FV IN NUMBER )
       This Function Get Number Value that Determined
    FUNCTION IS_PARAM_SHOW ( REP_NAME IN VARCHAR2 )
       This Function Get The Color Name of Reports Parts
    FUNCTION GET_COLOR( B_NO IN VARCHAR2, FLG IN NUMBER )
    FUNCTION GET_LABLE(REP_NAME IN VARCHAR2 , LAB IN VARCHAR2, DL IN VARCHAR2 ,LNG IN NUMBER )
     FUNCTION RUN_SELECT( SEL  IN VARCHAR2 ) RETURN NUMBER ;
    ----------------------END OF ABDULLAH OMAR PROCEDURES
     Procedure Return_Date(Period In number,Yer In number,F_Date Out Date,T_Date Out Date);
   ----------------------END OF ABDULLAH OMAR PROCEDURES
   FUNCTION MRP_FUNC_GET_MRP_MSG (V_MSG_CODE IAS_SYS.MRP_MSGS.MSG_CODE%type,V_MSG_NUM IAS_SYS.MRP_MSGS.MSG_NUM%TYPE)RETURN IAS_SYS.MRP_MSGS.MSG_TEXT%type;
-- 1-CST_AVG/ 2- CST_BEGIN / 3-CST_LAST_PROD / 4-CST_STANDR
   FUNCTION MRP_FUNC_GET_ITEM_COST(V_ITEM_CODE MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE , V_CST_TYPE NUMBER) RETURN NUMBER ;
 FUNCTION ActiveDateCheck( DAT  IN DATE, TYP NUMBER ) RETURN BOOLEAN ;
   FUNCTION RUN_VAR_SELECT ( SEL  IN VARCHAR2 ) RETURN VARCHAR ;
CREATE OR REPLACE PACKAGE BODY MRP_PKG IS
FUNCTION  GET_VAR_VALUE(V_CODE IN VARCHAR2 , ind_calculat IN NUMBER,
         SELECT COUNT(*) INTO CC
         FROM MRP_PCM_VARIABLES_VALUES V
         WHERE V.dv_code =  V_CODE AND
              FROM MRP_PCM_VARIABLES_VALUES V
              WHERE V.dv_code =  V_CODE AND
                SELECT CV_VALUE
                FROM MRP_PCM_VARIABLES_VALUES V
                WHERE V.dv_code =  V_CODE AND
                SELECT CV_VALUE
                FROM MRP_PCM_VARIABLES_VALUES V
  WHERE V.dv_code =  V_CODE AND
    EXCEPTION WHEN NO_DATA_FOUND THEN
Procedure Return_Date(Period In number,Yer In number,F_Date Out Date,T_Date Out Date) is
SELECT  DATE_F , DATE_T
    FROM  MRP_SGS_PERIOD_COSTONG
    WHERE PERIOD_CODE = PERIOD AND
   EXCEPTION
 -------------  END ABDULLA OMAR PROCEDURES
  FUNCTION  MRP_PARAMETER(MRP_PR_NAME VARCHAR2) RETURN NUMBER IS
  Begin
Select  MRP_SFC_PR_MBD_APPROVE
From    MRP_SGS_GENERAL_PARAMETARS;
  End;
  PROCEDURE MRP_PROC_UPDATE_AVGCST(V_ITEM_CODE VARCHAR2,
--[Update the new avreg cost on Item_Details Table ]
  Begin
--[Update the new avreg cost on Item_Details Table ]
    Update MRP_CRP_ITEMS_DETAILS
    Where  cmp_no    = V_cmp
    End;
    Begin
    Update MRP_SFC_WHM_ITEMS_MOVE
    Where  cmp_no = V_cmp
    End;
  End;
  FUNCTION  MRP_FUNC_GET_ITEM_AVGCST(V_ITM_COD Varchar2,
  Begin
Select  CST_AVG
From    MRP_CRP_ITEMS_DETAILS
Where   cmp_no = CMP
  EXCEPTION WHEN NO_DATA_FOUND THEN  --SAWSAN ANWER 14-2-2007
  End;
  FUNCTION  MRP_FUNC_GET_ITEM_LSTCST(ITEM_CODE VARCHAR2,
  Begin
Select  CST
    From    MRP_SFC_MATERIALS_RECEIVE_DTLS
    Where   cmp_no   = CMP
    EXCEPTION WHEN NO_DATA_FOUND THEN  --SAWSAN ANWER 14-2-2007
  End;
  FUNCTION  MRP_FUNC_GET_ITEM_QTYHND(V_ITEM_CODE VARCHAR2,
  Begin
   ' Select  NVL(SUM(NVL(QTY,0)),0)
 From    MRP_SFC_WHM_ITEMS_MOVE
 Where   cmp_no    = :V_CMP
Exception
--  Raise_application_error(-20021,'Error in Selecting FroM MRP_PROC_SET_ITEM_MOVE :101'||sqlerrm);
  End;
  Procedure MRP_PROC_GET_ITEM_SIZE(CMP Number,
  Begin
Select ITEM_SIZE,
From   MRP_CRP_ITEMS_DETAILS
Where  ITEM_CODE = V_ITEM_CODE
Exception
  --[ Pocedure to check last incom date from recieve screen
  Procedure MRP_PROC_LST_INCM_DATE(V_CMP       Number,
  Begin
Select Count(0) Into V_COUNT
 From   MRP_SFC_WHM_ITEMS_MOVE
 Where  TRANS_DATE > V_TRAN_DATE
  Exception
  Raise_application_error(-20021,'Error in Selecting From MRP_SFC_WHM_ITEMS_MOVE :207'||sqlerrm);
  End;
  --[Procedure for Check the validation of warehouse movement transaction ]
  Procedure MRP_PROC_CHK_IM_TRN_VALID(V_CMP         Number,
  BEGIN
    SELECT NVL(COUNT(*),0)
     FROM  MRP_SFC_WHM_ITEMS_MOVE
     WHERE CMP_NO = V_CMP
  Exception
ELSE   -->  -- IF UPDATE OR DELETE
 Raise_application_error(-20021, 'Can not update or delete record because Quantity of item become minus : ' || SQLERRM);
    SELECT  NVL(COUNT(*),0)
     FROM  MRP_SFC_WHM_ITEMS_MOVE
     WHERE CMP_NO = V_CMP
 Raise_application_error(-20021,'Can not update or delete  record because there is transaction after this date: ' || SQLERRM);
  Exception
  --[Procedure for Update the warehouse movement table ]
Procedure MRP_FUNC_GET_G_SIZE(CMP Number,
  Begin
Select NVL(G_SIZE,1)
From   MRP_CRP_ITEMS_DETAILS
Where  CMP_NO = CMP
Exception
  Raise_application_error(-20021,'Error in Select From MRP_CRP_ITEMS_DETAILS :20'||sqlerrm);
  Raise_application_error(-20021,'Error in Select From MRP_CRP_ITEMS_DETAILS :30'||sqlerrm);
-----------------------Update G_Size In The MRP_CRP_ITE
Update MRP_CRP_ITEMS_DETAILS
Where  CMP_NO = CMP
Exception
  Raise_application_error(-20021,'Error in Select From MRP_CRP_ITEMS_DETAILS :60'||sqlerrm);
Function MRP_FUNC_GET_GSIZE(CMP Number,
  Begin
Select NVL(G_SIZE,1)
From   MRP_CRP_ITEMS_DETAILS
Where  CMP_NO    = CMP
Exception
--  Raise_application_error(-20021,'Error in Select G_SIZE From MRP_CRP_ITEMS_DETAILS :70'||sqlerrm);
  Raise_application_error(-20021,'Error in Select G_SIZE From MRP_CRP_ITEMS_DETAILS :80'||sqlerrm);
  --[Function for Retrieve the Item Size From MRP_CRP_ITEMS_DETAILS Table ]
  Function MRP_FUNC_GET_ITM_SIZE(CMP Number,
  Begin
Select NVL(ITEM_SIZE,0)
From   MRP_CRP_ITEMS_DETAILS
Where  CMP_NO    = CMP
Exception
  Raise_application_error(-20021,'Error in Select G_SIZE From MRP_CRP_ITEMS_DETAILS :141'||sqlerrm);
  Raise_application_error(-20021,'Error in Select G_SIZE From MRP_CRP_ITEMS_DETAILS :142'||sqlerrm);
  Function MRP_FUNC_GET_GQTY(CMP Number,
  Begin
Select QTY* nvl(G_SIZE,0)
From   MRP_CRP_ITEMS_DETAILS
Where  CMP_NO    = CMP
Exception
  Raise_application_error(-20021,'Error in Select G_SIZE From MRP_CRP_ITEMS_DETAILS :70'||sqlerrm);
  Raise_application_error(-20021,'Error in Select G_SIZE From MRP_CRP_ITEMS_DETAILS :80'||sqlerrm);
Function MRP_FUNC_GET_PERSTATUS(YER Number,
Select NVL(P_CLS,1)
From   MRP_SGS_PERIOD_COSTONG
Where  YER_CODE=YER
  Exception
  Raise_application_error(-20021,'Error in Select G_SIZE From MRP_CRP_ITEMS_DETAILS :70'||sqlerrm);
  Raise_application_error(-20021,'Error in Select G_SIZE From MRP_CRP_ITEMS_DETAILS :80'||sqlerrm);
Function MRP_FUNC_WO_STATUS(V_CMP Number,
Procedure MRP_FUNC_GET_YERPRD(V_DATE DATE , V_YER  IN OUT Number , V_PRD  IN OUT Number) IS
SELECT D.YER_CODE , D.PERIOD_CODE
 FROM  MRP_SGS_PERIOD_COSTONG D,MRP_YEAR M -- ADD BY SAWSAN 27-1-2007
 WHERE DATE_T      >= V_DATE
  Exception
  Raise_application_error(-20021,'Error in Procedure MRP_FUNC_GET_YERPRD  :70'||sqlerrm);
  Raise_application_error(-20021,'Error in Procedure MRP_FUNC_GET_YERPRD :80'||sqlerrm);
  End;
--[For UPDATE the MRP_CRP_ITEMS_DETAILS TABLE ,IF THER IS A TRANSACTION DELETED
Procedure MRP_PROC_BACK_AVGCST(CMP          Number,
  Begin
Select Count(0)
From   MRP_SFC_WHM_ITEMS_MOVE
Where  ITEM_CODE = V_ITEM_CODE
Exception
    Update MRP_CRP_ITEMS_DETAILS
    Where  cmp_no    = cmp
--- this function used for getting to default value for any feild from data base --*/
FUNCTION MRP_FUNC_SET_DEFAULT_VALUE(TABLENAME VARCHAR2,COL_NAME VARCHAR2,OWNN VARCHAR2) RETURN NUMBER IS
 --SELECT DATA_DEFAULT INTO NEW_DEFUALT
  --FROM  DBA_TAB_COLUMNS
  --WHERE TABLE_NAME = UPPER(TABLENAME) AND COLUMN_NAME = UPPER(COL_NAME) AND OWNER = UPPER(OWNN);
EXCEPTION
/* FUNCTION RETURN DOWNTIME STAGE BREAKDOWN */
FUNCTION MRP_FUNC_CRP_GET_STGBD(V_CMP        NUMBER   ,
  BEGIN
/* FUNCTION RETURN DOWNTIME JOB BREAKDOWN */
FUNCTION MRP_FUNC_CRP_GET_JOBBD(V_CMP        NUMBER   ,
  BEGIN
/* FUNCTION RETURN */
FUNCTION MRP_FUNC_GET_MCOST(V_ITEM_CODE  VARCHAR2,
/* FUNCTION RETURN 
FUNCTION MRP_FUNC_GET_IGRAND(V_CMP  NUMBER , V_BRN  NUMBER , V_ITEM_CODE  IN VARCHAR2)  RETURN VARCHAR2 IS
  SELECT ITEM_GRAND
   FROM  MRP_CRP_ITEMS_DETAILS
   WHERE CMP_NO    = V_CMP
EXCEPTION
PROCEDURE MRP_FUNC_GET_SHIFT_TIME(V_CMP  NUMBER , V_BRN  NUMBER , V_SHF NUMBER , V_SHIFT_CODE  NUMBER , V_FTIME  IN OUT DATE , V_TTIME  IN OUT DATE)  IS
  SELECT TIME_F , TIME_T
   FROM  MRP_SGS_SHIFTS_MAST
   WHERE CMP_NO   = V_CMP
EXCEPTION
/* GET THE YER_CODE  FROM DATE */
PROCEDURE MRP_PROC_GET_YR_PRD(V_DATE IN DATE , V_YR OUT NUMBER , V_PRD OUT NUMBER) IS
  SELECT M.YER_CODE , PERIOD_CODE
 FROM  MRP_SGS_PERIOD_COSTONG D,MRP_YEAR M -- ADD BY SAWSAN 27-1-2007
 WHERE DATE_T      >= V_DATE
EXCEPTION
FUNCTION MRP_FUNC_CHECK_VPDATE(V_DATE DATE) RETURN NUMBER IS
SELECT COUNT(*)
 FROM  MRP_SGS_PERIOD_COSTONG
 WHERE P_CLS  = 0
EXCEPTION
FUNCTION MRP_FUNC_GET_ONX_MJOURNAL(V_SQL VARCHAR2) RETURN NUMBER IS
EXCEPTION
FUNCTION MRP_FUNC_GET_ONX_DJOURNAL(V_SQL VARCHAR2) RETURN NUMBER IS
EXCEPTION
FUNCTION MRP_FUNC_GET_DESC(V_FLD  VARCHAR2 , V_TBL  VARCHAR2 , V_WRN1 VARCHAR2 , V_WRN2 VARCHAR2 , V_WRN3 VARCHAR2 ,
FORMULA_TEXT   := ' SELECT ' || V_FLD || ' FROM ' || V_TBL || '
                     WHERE ' || V_WRN1 || ' = ''' || V_WRV1 || '''' ;
EXCEPTION
Function genTranId return VARCHAR2 IS
  begin
  begin
 select max(substr(TRAN_ID,4,6))
  from  MRP_PCM_DAILY_TRANS_MAST
  where substr(TRAN_ID,1,3)='PCM';
  Exception
  end;
FUNCTION GET_REP_DESC ( REP_NAME IN VARCHAR2 , LANG IN NUMBER) RETURN VARCHAR2 IS
   BEGIN
           SELECT 
           FROM MRP_REPORTS
           WHERE UPPER(REP_CODE) = UPPER(REP_NAME); 
        EXCEPTION
   END;
FUNCTION GET_REP_TAIL ( REP_NAME IN VARCHAR2 , LANG IN NUMBER) RETURN VARCHAR2 IS
   BEGIN
         SELECT DECODE( LANG,1,rep_footnote_a,rep_footnote_f) INTO R_TAIL
         FROM MRP_REPORTS
         WHERE UPPER(REP_CODE) = UPPER(REP_NAME);
   EXCEPTION
   END;
FUNCTION GET_REP_ORIENTATION ( REP_NAME IN VARCHAR2 ) RETURN  VARCHAR2 IS
   BEGIN
        SELECT REP_ORIENTATION INTO R_ORIENT
        FROM MRP_REPORTS
        WHERE UPPER(REP_CODE) = UPPER(REP_NAME);
       EXCEPTION
   END;
FUNCTION GET_BFONT( B_NO IN VARCHAR2, FLG IN NUMBER ) RETURN  VARCHAR2 IS
   BEGIN
        /*SELECT DECODE(FLG,1,REPADDFONT,REPFNFONT)INTO FT
        FROM S_BRN
        WHERE BRN_NO = B_NO;
       EXCEPTION
   END;
FUNCTION GET_BFONT_S( B_NO IN NUMBER, FLG IN NUMBER ) RETURN  NUMBER IS
   BEGIN
        /*SELECT DECODE(FLG,1,REPADDFONT_S,REPFNFONT_S) INTO SZ
        FROM S_BRN
        WHERE BRN_NO = B_NO;
       EXCEPTION
   END;
FUNCTION GET_FONT( REP_NAME IN VARCHAR2, FLG IN NUMBER ) RETURN  VARCHAR2 IS
   BEGIN
        SELECT DECODE(FLG , 0 , REP_TIT_FONT,
        FROM MRP_REPORTS
        WHERE UPPER(REP_CODE) = UPPER(REP_NAME);
       EXCEPTION
   END;
FUNCTION GET_FONT_S( REP_NAME IN VARCHAR2, FLG IN NUMBER ) RETURN  NUMBER IS
   BEGIN
        SELECT DECODE(FLG , 0 , REP_TIT_FONT_S,
        FROM MRP_REPORTS
        WHERE UPPER(REP_CODE) = UPPER(REP_NAME);
       EXCEPTION
   END;
FUNCTION GET_FONT_B( REP_NAME IN VARCHAR2, FLG IN NUMBER ) RETURN  NUMBER IS
   BEGIN
        SELECT DECODE(FLG , 0 , REP_TIT_FONT_B,
        FROM MRP_REPORTS
        WHERE UPPER(REP_CODE) = UPPER(REP_NAME);
       EXCEPTION
   END;
FUNCTION GET_DIGIT ( REP_NAME IN VARCHAR2, FV IN NUMBER ) RETURN  NUMBER IS
   BEGIN
        select Rep_Num_digit InTo R_NUM
        From MRP_REPORTS
        WHERE UPPER(REP_CODE) = UPPER(REP_NAME);
       EXCEPTION
   END;
FUNCTION IS_PARAM_SHOW ( REP_NAME IN VARCHAR2 ) RETURN  NUMBER IS
   BEGIN
        Select rep_parm_show InTo R_SHOW
        From  MRP_REPORTS
        Where UPPER(REP_CODE) = UPPER(REP_NAME);
       EXCEPTION
   END;
--------- Last Function --------------------------------------------------------
 FUNCTION GET_COLOR( B_NO IN VARCHAR2, FLG IN NUMBER ) RETURN  VARCHAR2 IS
   BEGIN
        /*SELECT DECODE(FLG,1,NVL(REPCLRHED,'gray12') ,
        FROM S_BRN
        WHERE BRN_NO = B_NO;
       EXCEPTION
   END;
 FUNCTION GET_LABLE(REP_NAME IN VARCHAR2 , LAB IN VARCHAR2,
   Begin
       SELECT DSC INTO R_LAB
       FROM MRP_REP_LAB
       WHERE UPPER(TAB_NME) = UPPER(REP_NAME) AND
      EXCEPTION WHEN no_data_found THEN
  FUNCTION RUN_SELECT( SEL  IN VARCHAR2 ) RETURN NUMBER IS
   BEGIN
       EXCEPTION WHEN OTHERS THEN
FUNCTION ActiveDateCheck( DAT  IN DATE, TYP NUMBER ) RETURN BOOLEAN IS
     SELECT DATE_F, LAST_DAY(DATE_T) INTO DF , DT
 FROM MRP_SGS_PERIOD_COSTONG WHERE P_CNTU = 0 ;
SELECT DATE_F, LAST_DAY(DATE_T) INTO DF , DT
 FROM MRP_SGS_PERIOD_COSTONG WHERE S_CNTU = 0 ;
/* FOR I IN (SELECT * FROM MRP_SGS_PERIOD_COSTONG WHERE P_CNTU = 0)LOOP
T * FROM MRP_SGS_PERIOD_COSTONG WHERE S_CNTU = 0)LOOP
      EXCEPTION WHEN NO_DATA_FOUND THEN
 FUNCTION RUN_VAR_SELECT( SEL  IN VARCHAR2 ) RETURN VARCHAR IS
 BEGIN
FUNCTION MRP_FUNC_GET_MRP_MSG (V_MSG_CODE IAS_SYS.MRP_MSGS.MSG_CODE%type,V_MSG_NUM IAS_SYS.MRP_MSGS.MSG_NUM%TYPE)RETURN IAS_SYS.MRP_MSGS.MSG_TEXT%type  as
   SELECT MSG_TEXT --DECODE(MSG_ARABIC,1,MSG_LATIN)
    FROM IAS_SYS.MRP_MSGS
    WHERE MSG_CODE=V_MSG_CODE
   EXCEPTION
FUNCTION MRP_FUNC_GET_ITEM_COST(V_ITEM_CODE MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE , V_CST_TYPE NUMBER) RETURN NUMBER IS
 SELECT DECODE(V_CST_TYPE,
2,CST_BEGIN,
 FROM MRP_CRP_ITEMS_DETAILS
 WHERE ITEM_CODE=V_ITEM_CODE;
EXCEPTION
                 FROM MRP_PCM_DAILY_TRANS_DETAILS DETL  ,
                 WHERE MAST.TRAN_ID     =  DETL.TRAN_ID
                   AND DETL.CC_CODE  IN (  SELECT    C.CC_BENEFICIAL
                                           FROM      MRP_PCM_CRITERIONS_CAL C
                                           WHERE     C.TYP = 2
                  GROUP BY  MAST.BRAN
CREATE OR REPLACE PACKAGE MRP_FNC_PKG is
FUNCTION Acc_Class(P_CMP  NUMBER DEFAULT 1, P_BRN NUMBER, P_ACC VARCHAR2, P_CLS NUMBER, P_LANG  NUMBER DEFAULT 1 ) RETURN VARCHAR2;
FUNCTION ACC_TAB( P_CMP  NUMBER DEFAULT 1, P_BRN NUMBER, P_ACC IN VARCHAR2 , P_TAB_TYPE IN NUMBER) RETURN VARCHAR2;
FUNCTION CALC_ITEM_BAL_COST(P_CMP  NUMBER , 
FUNCTION COST_CENTER_DESC(f_lang        varchar2,f_cc_code_onx varchar2) return varchar2 ;                            
FUNCTION cc_is_root(P_CC_CODE VARCHAR2) RETURN NUMBER;
FUNCTION CHK_APP_TRX(V_CMP  NUMBER , V_BRN  NUMBER , V_DATE  DATE , TRX_ST NUMBER) RETURN NUMBER;
FUNCTION DOWN_HOURS(FTIME IN DATE ,
FUNCTION ENTERNAL_DOWN(D_DATE  IN DATE, 
FUNCTION EXTERNAL_DOWN(D_DATE  IN DATE, 
FUNCTION Formula_Description(P_LANG NUMBER,  P_Dcr Varchar2 ) RETURN Varchar2;
FUNCTION GET_ACC_NAME(A_CODE VARCHAR2) RETURN VARCHAR2 ;
FUNCTION GET_FLAG_DESC(F_CODE VARCHAR2, F_VAL NUMBER, F_LANG NUMBER) RETURN VARCHAR2;
Function get_it (a_str varchar2 ) return varchar2;
FUNCTION GET_ITEM_BAL_COST(P_CMP  NUMBER , P_BRN NUMBER , 
FUNCTION GET_ITEM_FQTY(P_CMP_NO   IN NUMBER,
FUNCTION GET_ITEM_FQTY_D(P_CMP_NO   IN NUMBER,
FUNCTION GET_ITEM_YQTY(P_CMP_NO NUMBER, P_BRN_NO NUMBER , 
FUNCTION GET_ITEM_YQTY2( P_CMP_NO     IN NUMBER, P_BRN_NO IN NUMBER,
FUNCTION GET_ITEM_YQTY_NEW(P_ASSEMBLER IN VARCHAR2, P_CC_CODE IN VARCHAR2 DEFAULT NULL ,
FUNCTION GET_MAT_BAL(V_CMP      NUMBER ,
Function get_new_seq(s_TAB    VarChar2,
FUNCTION GET_OFFICIAL_TIME ( Shift IN NUMBER ,fdate in date ,tdate in date ,ftime in date , ttime in date ) RETURN  Number;
FUNCTION GET_OVER_QTY ( Shift IN NUMBER ,fdate in date ,tdate in date ,ftime in date , ttime in date, QTY IN NUMBER ) RETURN  Number;
FUNCTION GET_OVER_TIME ( Shift IN NUMBER ,fdate in date ,tdate in date ,ftime
FUNCTION GET_RANDOM RETURN VARCHAR2;
FUNCTION GET_TYPE(Ownr Varchar2
FUNCTION GIVE_AVG_COST(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_ITEM VARCHAR2, PFDATE DATE , PTDATE DATE) RETURN NUMBER;
FUNCTION NULL_SHIFT RETURN NUMBER;
FUNCTION PARA_CHK(T_NAME VARCHAR2,CON_SEARCH VARCHAR2) RETURN NUMBER;
Function Pcm_Item_Bal_Qty( P_cmp Number, p_brn_no Number , 
FUNCTION R_SL( SEL  IN VARCHAR2 ) RETURN NUMBER;
FUNCTION SET_DATA_DEFAULT(TABLENAME VARCHAR2,
FUNCTION SET_DEFAULT_VALUE(TABLENAME VARCHAR2,COL_NAME VARCHAR2,OWNN VARCHAR2) RETURN NUMBER;
Function validate_pass(pass varchar2) return varchar2;
Function GET_EMP_WRK_HRS_MNTH(P_Emp_No  number, P_F_DATE DATE,P_T_DATE DATE) Return Number;
Function GET_WIP_ST(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_WORK_ORDER VARCHAR2, P_SF_SEQ  NUMBER) RETURN NUMBER;
CREATE OR REPLACE PACKAGE BODY MRP_FNC_PKG 
Function validate_pass(pass varchar2) return varchar2 is
            Begin
            END;
Function SET_DEFAULT_VALUE(TABLENAME VARCHAR2,COL_NAME VARCHAR2,OWNN VARCHAR2) RETURN NUMBER IS
            BEGIN
             SELECT DATA_DEFAULT INTO NEW_DEFUALT
              FROM  all_TAB_COLUMNS
              WHERE TABLE_NAME = UPPER(TABLENAME) AND COLUMN_NAME = UPPER(COL_NAME) AND OWNER = UPPER(OWNN);
            EXCEPTION
            END;
Function SET_DATA_DEFAULT(TABLENAME VARCHAR2,
            BEGIN
             SELECT DATA_DEFAULT INTO NEW_DEFUALT
              FROM  ALL_TAB_COLUMNS
              WHERE TABLE_NAME = UPPER(TABLENAME) AND COLUMN_NAME = UPPER(COL_NAME) AND OWNER = UPPER(OWNN);
            EXCEPTION
            END;
Function R_SL( SEL  IN VARCHAR2 ) RETURN NUMBER IS
    BEGIN
       EXCEPTION WHEN OTHERS THEN
Function  Pcm_Item_Bal_Qty( P_cmp Number, p_brn_no Number , 
      Begin
                  Select shf_code into V_Shf
                  From   mrp_pcm_cost_center_source
                  Where  Cmp_no = p_cmp and Brn_no = P_brn_no and
       Exception When others then    V_SHF  := -1;
     End;
     Select  Sum(D.a_qty) InTo V_Qty 
     from MRP_SFC_WIP_INVENTORY_MSTR m,
     Where M.INV_SEQ  = d.inv_seq and d.a_qty > 0 and
          ( Select CMP_NO, BRN_NO, ITEM_CODE 
            From mrp_crp_items_category 
            where ctgr = 2);
    Exception When No_data_found Then
Function PARA_CHK(T_NAME VARCHAR2,CON_SEARCH VARCHAR2) RETURN NUMBER
            BEGIN
            'SELECT COUNT(*)  FROM '||X
            'SELECT COUNT(*)  FROM '||X
            END;
Function NULL_SHIFT
            BEGIN 
                SELECT COUNT(*) INTO C
                FROM MRP_SGS_SHIFTS_MAINT;
            EXCEPTION
            END;
Function GIVE_AVG_COST(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_ITEM VARCHAR2, PFDATE DATE , PTDATE DATE) RETURN NUMBER IS
                BEGIN
                   SELECT COUNT(*) INTO V 
                   FROM MRP_SFC_MATERIALS_RECEIVE_DTLS D,
                   WHERE M.MRC_SQ  = D.MRC_SQ AND
                      SELECT AVG(CST) INTO tmpVar
                      FROM MRP_SFC_MATERIALS_RECEIVE_DTLS D,
                      WHERE M.MRC_SQ  = D.MRC_SQ AND
                    BEGIN 
                     SELECT AVG(CST) INTO tmpVar
                      FROM MRP_SFC_MATERIALS_RECEIVE_DTLS D,
                   WHERE M.MRC_SQ  = D.MRC_SQ AND
                       ( SELECT ITEM_OPTION FROM MRP_CRP_ITEMS_CLASS_OPTIONS WHERE MRP_ITEM_CODE = P_ITEM ) ;
                       EXCEPTION WHEN OTHERS THEN TMPVAR:= 0;
                   EXCEPTION
Function GET_TYPE(Ownr Varchar2
            Begin
             Begin
               Select  UPPER(Data_Type)
                 From  all_tab_columns --Dba_Tab_Columns
                Where  Owner       = Ownr
             Exception
              End;
            End;
Function GET_RANDOM RETURN VARCHAR2 IS
            BEGIN
              SELECT SYS_GUID() INTO V_RND FROM DUAL ;
            END;
Function GET_OVER_TIME ( Shift IN NUMBER ,fdate in date ,tdate in date ,ftime in date , ttime in date ) RETURN  Number IS
            BEGIN 
                SELECT COUNT(*) INTO C
                FROM MRP_SGS_SHIFTS_MAINT M
                Where  SHIFT_CODE = SHIFT AND
                     SELECT to_number(to_char(m.time_f,'HH24.MI')),
                     FROM MRP_SGS_SHIFTS_MAINT M
                     Where  SHIFT_CODE = SHIFT AND
                SELECT  to_number(to_char(m.time_f,'HH24.MI')),
                FROM MRP_SGS_SHIFTS_MAST M
                Where  SHIFT_CODE = SHIFT ;
              ----------  BEGIN CALALUE OFICIAL TIIME -----------------
            EXCEPTION
            END;
Function GET_OVER_QTY ( Shift IN NUMBER ,fdate in date ,tdate in date ,ftime in date , ttime in date, QTY IN NUMBER ) RETURN  Number IS
            BEGIN 
                SELECT COUNT(*) INTO C
                FROM MRP_SGS_SHIFTS_MAINT M
                Where  SHIFT_CODE = SHIFT AND
                     SELECT to_number(to_char(m.time_f,'HH24.MI')),
                     FROM MRP_SGS_SHIFTS_MAINT M
                     Where  SHIFT_CODE = SHIFT AND
                SELECT  to_number(to_char(m.time_f,'HH24.MI')),
                FROM MRP_SGS_SHIFTS_MAST M
                Where  SHIFT_CODE = SHIFT ;
              ----------  BEGIN CALALUE OFICIAL TIIME -----------------
            EXCEPTION
            END;
Function       GET_OFFICIAL_TIME ( Shift IN NUMBER ,fdate in date ,tdate in date ,ftime in date , ttime in date ) RETURN  Number IS
            BEGIN 
                SELECT COUNT(*) INTO C
                FROM MRP_SGS_SHIFTS_MAINT M
                Where  SHIFT_CODE = SHIFT AND
                     SELECT to_number(to_char(m.time_f,'HH24.MI')),
                     FROM MRP_SGS_SHIFTS_MAINT M
                     Where  SHIFT_CODE = SHIFT AND
                SELECT  to_number(to_char(m.time_f,'HH24.MI')),
                FROM MRP_SGS_SHIFTS_MAST M
                Where  SHIFT_CODE = SHIFT ;
              ----------  BEGIN CALALUE OFICIAL TIIME -----------------
            EXCEPTION
            END;
Function get_new_seq(s_TAB    VarChar2,
            Begin
               Begin
                            Begin
                             Select nvl(S_SEQ_VAL,0)   + nvl( S_INCRBY_VAL,0)
                                  From  S_SEQ_VALUES
                                  Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                             Update  S_SEQ_VALUES
                                  Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                 Exception
                                        INSERT INTO
                 End;
                Begin
                 Select  S_SEQ_VAL   + S_INCRBY_VAL
                       From  S_SEQ_VALUES
                      Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                 Update S_SEQ_VALUES
                      Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
               Exception
                            INSERT INTO
               End;
                Begin
                         Select  S_SEQ_VAL   + S_INCRBY_VAL
                               From  S_SEQ_VALUES
                              Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                         Update S_SEQ_VALUES
                              Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                 Exception
                                        INSERT INTO
                 End;
                Begin
                         Select  S_SEQ_VAL   +  S_INCRBY_VAL
                               From  S_SEQ_VALUES
                              Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                         Update  S_SEQ_VALUES
                              Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                 Exception
                                        INSERT INTO
                       End;
                Begin
                             Select S_SEQ_VAL   + S_INCRBY_VAL
                                  From  S_SEQ_VALUES
                                 Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                         Update  S_SEQ_VALUES
                                Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                 Exception
                                      INSERT INTO
                               End;
                Begin
                             Select  S_SEQ_VAL   + S_INCRBY_VAL
                                   From  S_SEQ_VALUES
                                   Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                         Update  S_SEQ_VALUES
                                Where  UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                 Exception
                                        INSERT INTO
                           End;
                   Begin
                                   Select  S_SEQ_VAL   + S_INCRBY_VAL
                                         From  S_SEQ_VALUES
                                        Where  UPPER(S_TAB_NAME) =   UPPER(S_TAB)
                                     Update S_SEQ_VALUES
                                         Where UPPER(S_TAB_NAME)  =   UPPER(S_TAB)
                 Exception
                                        INSERT INTO
                               End;
            END;
Function GET_MAT_BAL(V_CMP      NUMBER ,
              ' SELECT NVL(SUM(QTY),0)
                 FROM  MRP_SFC_WHM_ITEMS_MOVE
                 WHERE DECODE(:V_CMP_NO     , 0        , 0        , CMP_NO)    = DECODE(:V_CMP_NO1     , 0        , 0        , :V_CMP_NO2    )
            BEGIN
            EXCEPTION
            END;
Function       GET_ITEM_YQTY_NEW(P_ASSEMBLER IN VARCHAR2, P_CC_CODE IN VARCHAR2 DEFAULT NULL ,
   BEGIN
        SELECT CC_LVL INTO C_LVL FROM MRP_PCM_COST_CENTER
        WHERE CC_CODE = P_CC_CODE ;
     SELECT MRP_PCM_SEPARATED INTO V_MRP 
     FROM MRP_SGS_GENERAL_PARAMETARS
     WHERE ROWNUM<= 1;
                  SELECT SUM( ACT_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD 
                     WHERE  ASSEMBLER = P_ASSEMBLER AND
                         SELECT SUM( Y.ACT_QTY) INTO Q
                         FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                         WHERE Y.CMP_NO = S.CMP_NO   AND
                     SELECT SUM(Y.ACT_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE T.CC_CODE = Y.CC_CODE AND
                     SELECT SUM(Y.ACT_QTY) INTO Q 
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE T.CC_CODE = Y.CC_CODE AND 
     EXCEPTION
Function  GET_ITEM_YQTY2( P_CMP_NO     IN NUMBER, P_BRN_NO IN NUMBER,
   BEGIN
        SELECT CC_LVL INTO C_LVL FROM MRP_PCM_COST_CENTER
        WHERE  CC_CODE = P_CC_CODE AND 
     SELECT MRP_PCM_SEPARATED INTO V_MRP 
     FROM MRP_SGS_GENERAL_PARAMETARS
     WHERE    CMP_NO = P_CMP_NO   AND 
                  SELECT SUM( ACT_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD 
                     WHERE  CMP_NO    = P_CMP_NO AND
                         SELECT SUM(DISTINCT Y.ACT_QTY) INTO Q
                         FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                         WHERE Y.CMP_NO    = P_CMP_NO    AND
                     SELECT SUM(Y.ACT_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE Y.CMP_NO    = P_CMP_NO    AND
                     SELECT SUM(DISTINCT Y.ACT_QTY) INTO Q 
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE Y.CMP_NO    = P_CMP_NO    AND
     EXCEPTION
Function  GET_ITEM_YQTY(P_CMP_NO NUMBER, P_BRN_NO NUMBER , P_ASSEMBLER IN VARCHAR2, P_CC_CODE IN VARCHAR2 DEFAULT NULL ,P_SHF_CODE NUMBER default null, P_LN_CODE VARCHAR2 default null , P_STG_CODE VARCHAR2 default null , P_YER IN NUMBER, P_CODE NUMBER) RETURN NUMBER IS
   BEGIN
        SELECT CC_LVL INTO C_LVL FROM MRP_PCM_COST_CENTER
        WHERE CC_CODE = P_CC_CODE AND
    SELECT MRP_PCM_SEPARATED INTO V_MRP 
     FROM MRP_SGS_GENERAL_PARAMETARS
     WHERE    CMP_NO  = P_CMP_NO AND 
                  SELECT SUM( ACT_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD 
                     WHERE  ASSEMBLER = P_ASSEMBLER AND
                         SELECT SUM( Y.ACT_QTY) INTO Q
                         FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                         WHERE Y.CMP_NO      = P_CMP_NO    AND 
                     SELECT SUM(Y.ACT_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE Y.CMP_NO    = P_CMP_NO    AND 
                     SELECT SUM(Y.ACT_QTY) INTO Q 
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE Y.CMP_NO    = P_CMP_NO      AND 
     EXCEPTION
Function  GET_ITEM_FQTY(P_CMP_NO   IN NUMBER,
   BEGIN
        SELECT CC_LVL INTO C_LVL FROM MRP_PCM_COST_CENTER
        WHERE CC_CODE = P_CC_CODE AND
     SELECT MRP_PCM_SEPARATED INTO V_MRP 
     FROM   MRP_SGS_GENERAL_PARAMETARS
     WHERE  CMP_NO  = P_CMP_NO  AND 
                  SELECT SUM( Y.ACT_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD  Y,
                     WHERE  Y.CMP_NO    = P_CMP_NO    AND
                         SELECT SUM( Y.ACT_QTY) INTO Q
                         FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                         WHERE   
                     SELECT SUM(DISTINCT Y.ACT_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE Y.CMP_NO     = P_CMP_NO     AND
                     SELECT SUM(DISTINCT Y.ACT_QTY) INTO Q 
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE Y.CMP_NO      = P_CMP_NO  AND
     EXCEPTION
FUNCTION GET_ITEM_FQTY_D(P_CMP_NO   IN NUMBER,
   BEGIN
        SELECT CC_LVL INTO C_LVL FROM MRP_PCM_COST_CENTER
        WHERE CC_CODE = P_CC_CODE AND
     SELECT MRP_PCM_SEPARATED INTO V_MRP 
     FROM   MRP_SGS_GENERAL_PARAMETARS
     WHERE  CMP_NO  = P_CMP_NO  AND 
                  SELECT SUM( Y.ACT_QTY*T.ROW_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD  Y,
                     WHERE  Y.CMP_NO    = P_CMP_NO    AND
                         SELECT SUM( Y.ACT_QTY*T.ROW_QTY) INTO Q
                         FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                         WHERE   
                     SELECT SUM(DISTINCT Y.ACT_QTY*TT.ROW_QTY) INTO Q
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE Y.CMP_NO     = P_CMP_NO     AND
                     SELECT SUM(DISTINCT Y.ACT_QTY*TT.ROW_QTY) INTO Q 
                     FROM MRP_PCM_COSTING_SUMMARY_YIELD Y,
                     WHERE Y.CMP_NO      = P_CMP_NO  AND
     EXCEPTION
Function  GET_ITEM_BAL_COST(P_CMP  NUMBER , P_BRN NUMBER , 
SELECT SUM(AMT) INTO V_AMT
WHERE 
 EXCEPTION WHEN OTHERS THEN
Function get_it (a_s
            BEGIN
              execute immediate ' select '|| a_str ||' from dual ' into v_rslt;
            END;
Function GET_FLAG_DESC(F_CODE VARCHAR2, F_VAL NUMBER, F_LANG NUMBER) RETURN VARCHAR2 IS
            BEGIN
                SELECT   S.FLG_DESC 
                FROM IAS_SYS.MRP_FLAGS S
                WHERE S.FLG_CODE  = F_CODE AND
               EXCEPTION
Function       GET_ACC_NAME(A_CODE VARCHAR2) RETURN VARCHAR2 IS
     SELECT ACC_NAME_A INTO V_NAME FROM MRP_PCM_ACCOUNTS_DEF
     WHERE ACC_CODE = A_CODE ;
   EXCEPTION
Function Formula_Description(P_LANG NUMBER,  P_Dcr Varchar2 ) RETURN Varchar2 IS
            BEGIN
                 BEGIN
                      SELECT TXT_FORMULA INTO V_FORMULA 
                      FROM MRP_PCM_DISTRIBUTION_CRITERION
                      WHERE DCR_CODE = P_DCR ;
                      EXCEPTION WHEN OTHERS THEN
                 SELECT COUNT(*) INTO X    --- check if this formula is there or not
                 FROM  MRP_PCM_DISTRIBUTION_CR_LINK
                 WHERE DCR_CODE = P_Dcr ;
                   FOR I IN(SELECT DV_CODE 
                            FROM MRP_PCM_DISTRIBUTION_CR_LINK
                            WHERE DCR_CODE = P_Dcr ) 
                   LOOP --- select all accoding value to fomula
                         BEGIN
                            SELECT   DECODE(P_LANG,1,DV_DESC_A,NVL(DV_DESC_E,DV_DESC_A) )   INTO DISC  -- catch the according varible
                            FROM MRP_PCM_DISTRIBUTION_VARIABLES
                            WHERE DV_CODE = I.DV_CODE;
                            SELECT REPLACE(TEMP_FROMLA,FORMULA,DISC) 
                            FROM  MRP_PCM_DISTRIBUTION_CRITERION
                            WHERE MRP_PCM_DISTRIBUTION_CRITERION.DCR_CODE = P_Dcr ; 
                         EXCEPTION WHEN OTHERS THEN
              EXCEPTION WHEN OTHERS THEN RETURN('');
            END;
Function EXTERNAL_DOWN
            BEGIN 
                    Select SUM( down ) INTO RES
                    From ( SELECT  bd_rec_fdate ,
                          FROM view_repmps006_d
                          Where reason_type   = 1  AND
            EXCEPTION
            END;
Function ENTERNAL_DOWN
            BEGIN 
                    Select SUM( down ) INTO RES
                    From ( SELECT  bd_rec_fdate ,
                          FROM view_repmps006_d
                          Where reason_type   = 0  AND
            EXCEPTION WHEN NO_DATA_FOUND THEN
            END;
Function DOWN_HOURS
            BEGIN 
            EXCEPTION
            END;
Function COST_CENTER_DESC(f_lang        varchar2,f_cc_code_onx varchar2) return varchar2 is
                v_select           varchar2(1000);
            begin
             v_select := ' select decode(:f_lang,1,CC_A_NAME,CC_E_NAME) ' ||
                         ' from cost_centers ' ||
                           ' where CC_CODE = '''|| f_cc_code_onx  || '''' ||
                           ' and   c_s_m in (select cc_type from cost_center_types '||
                                     '                 where affected_by_trans=1) ' ;
            exception
                  raise_application_error(-20021,'error in selecting from cost_centers   :101'||sqlerrm);
            end;
Function CHK_APP_TRX(V_CMP  NUMBER , V_BRN  NUMBER , V_DATE  DATE , TRX_ST NUMBER) RETURN NUMBER IS
            BEGIN
              SELECT NVL(COUNT(*),0)
                 FROM  MRP_SFC_MATERIALS_RECEIVE_MSTR
                 WHERE CMP_NO    = V_CMP
              SELECT NVL(COUNT(*),0)
                 FROM  MRP_SFC_MATERIALS_TRANSMT_MSTR
                 WHERE CMP_NO   = V_CMP
              SELECT NVL(COUNT(*),0)
                 FROM  MRP_SFC_MATERIALS_TRANSMT_MSTR
                 WHERE CMP_NO   = V_CMP
              SELECT NVL(COUNT(*),0)
                 FROM  MRP_SFC_MATERIALS_TRANSMT_MSTR
                 WHERE CMP_NO   = V_CMP
              SELECT NVL(COUNT(*),0)
                 FROM  MRP_SFC_WIP_MASTER
                 WHERE CMP_NO   = V_CMP
              SELECT NVL(COUNT(*),0)
                 FROM  MRP_SFC_WIP_ADJUSTMENT_MSTR
                 WHERE CMP_NO   = V_CMP
            EXCEPTION
                 Raise_application_error(-20021,'Error in FUNCTION CHK_APP_TRX  :255' || sqlerrm);
            END;
Function CHECK_ONYX_PRIVILAGE(P_MRP_BRN NUMBER,  P_ONYX_USR IN VARCHAR2 ) RETURN NUMBER IS
        SELECT MRP_PCM_SEPARATED,MRP_ONX_VERSION 
        FROM  MRP_SGS_GENERAL_PARAMETARS WHERE BRN_NO = P_MRP_BRN ;
                  select COUNT(*) INTO C
                  from all_tab_privs
                  where    UPPER(table_schema) = UPPER(P_ONYX_USR)
                   select COUNT(*) INTO C
                   from all_tab_privs
                   where    UPPER(table_schema) = UPPER(P_ONYX_USR)
                  select COUNT(*) INTO C
                  from all_tab_privs
                  where    UPPER(table_schema) = UPPER(P_ONYX_USR)
                  select COUNT(*) INTO C
                  from all_tab_privs
                  where    UPPER(table_schema) = UPPER(P_ONYX_USR)
                  select COUNT(*) INTO C
                  from all_tab_privs
                where    UPPER(table_schema) = UPPER(P_ONYX_USR)
                          select COUNT(*) INTO C
                          from all_tab_privs
                          where    UPPER(table_schema) = UPPER(P_ONYX_USR)
EXCEPTION WHEN OTHERS THEN RETURN(0);
Function cc_is_root(P_CC_CODE VARCHAR2) RETURN NUMBER IS
     BEGIN
         Select cc_main into V_cc_main
         From   MRP_PCM_COST_CENTER
         WHERE  CC_CODE = P_CC_CODE ;
     END;
   EXCEPTION
Function       CALC_ITEM_BAL_COST(P_CMP  NUMBER , 
SELECT 
Select 
SELECT  T.CC_CODE , 
FROM MRP_PCM_COSTING_SUMMARY S, 
WHERE 
GROUP BY  S.CMP_NO, S.BRN_NO,T.CC_CODE, T.ITEM_CODE,   S.ASSEMBLER,T.LVL, S.CC_CODE ,T.ROW_QTY,s.YER_CODE 
 EXCEPTION WHEN OTHERS THEN
Function ACC_TAB( P_CMP  NUMBER DEFAULT 1, P_BRN NUMBER, P_ACC IN VARCHAR2 , P_TAB_TYPE IN NUMBER) RETURN VARCHAR2 IS
                            BEGIN
                                  SELECT   CASE  WHEN P_TAB_TYPE = 1 THEN CLS_PRP 
                                    FROM MRP_PCM_ACCOUNTS_DEF 
                                    WHERE ACC_CODE  = P_ACC   AND
                               EXCEPTION
Function Acc_Class(P_CMP  NUMBER DEFAULT 1, P_BRN NUMBER, P_ACC VARCHAR2, P_CLS NUMBER, P_LANG  NUMBER DEFAULT 1 ) RETURN VARCHAR2 IS
      SELECT DECODE(P_LANG,1,NVL(C.CLS_DESC_A,C.CLS_DESC_F) ,NVL(C.CLS_DESC_F,C.CLS_DESC_A) )  
        FROM MRP_PCM_ACCOUNTS_DEF D ,
        WHERE D.ACC_CODE = P_ACC  AND
   EXCEPTION
Function GET_EMP_WRK_HRS_MNTH(P_Emp_No  number, P_F_DATE DATE,P_T_DATE DATE) Return Number is
  SELECT M.WRK_HRS_MNTH INTO V_HRS
    FROM S_EMP M
   WHERE EMP_NO = P_Emp_No;
EXCEPTION WHEN OTHERS THEN 
Function GET_WIP_ST(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_WORK_ORDER VARCHAR2, P_SF_SEQ  NUMBER) RETURN NUMBER IS
  SELECT APP_USR INTO V_APP_USER 
    FROM MRP_SFC_WIP_MASTER
   WHERE CMP_NO = P_CMP_NO
 SELECT DECODE(V_CST_TYPE,
2,CST_BEGIN,
 FROM MRP_CRP_ITEMS_DETAILS
 WHERE ITEM_CODE=V_ITEM_CODE;
EXCEPTION
                 FROM MRP_PCM_DAILY_TRANS_DETAILS DETL  ,
                 WHERE MAST.TRAN_ID     =  DETL.TRAN_ID
                   AND DETL.CC_CODE  IN (  SELECT    C.CC_BENEFICIAL
                                           FROM      MRP_PCM_CRITERIONS_CAL C
                                           WHERE     C.TYP = 2
                  GROUP BY  MAST.BRAN
CREATE OR REPLACE PACKAGE MRPSFC_PKG    
FUNCTION FNC_GET_ALTRNTV_ITM_CONS ( P_CMP_NO     S_CMPNY.CMP_NO%TYPE   ,  
FUNCTION FNC_GET_WEIGHT_ITEM_TRANS(P_CMP          S_CMPNY.CMP_NO%TYPE,
   -- 1 avrage  cost 2--lastproduct cost 3  standers cost 4 --begin cost 5- COST PERCENTAGE 6- INDERTCT COST 
FUNCTION FNC_GET_ITM_CST ( P_CMP_NO     S_CMPNY.CMP_NO%TYPE                  ,            P_BRN_NO     S_BRN.BRN_NO%TYPE                     ,                           P_LANG       LANG_DEF.LANG_NO%TYPE               ,                              P_ITEM_CODE  MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE  ,                           P_CST_TYP    NUMBER                          ) RETURN NUMBER;
FUNCTION MRP_FUNC_GET_ITEM_QTYHND (      P_ITEM   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE,      V_CMP         NUMBER,      V_BRN         NUMBER,      V_WH_CODE     VARCHAR2 DEFAULT NULL,      V_SIGN        VARCHAR2 DEFAULT NULL   )      RETURN NUMBER;
/*This procedure insert item movement into item_move table */
 FUNCTION MRP_PROC_SET_ITEM_MOVE (P_CMP     S_CMPNY.CMP_NO%TYPE, P_BRN    S_BRN.BRN_NO%TYPE      ,V_ITEM_CODE    VARCHAR2, V_QTY          NUMBER, V_CST          NUMBER,V_WH_CODE      VARCHAR2,V_TRANS_TYPE   NUMBER,V_TRANS_DATE   DATE,V_TRANS_CODE   VARCHAR2,V_TRANSM_SEQ   NUMBER,V_TRANSD_SEQ   NUMBER,V_WORK_ORDER   VARCHAR2,V_SHIFT_CODE   NUMBER,V_SHF_CODE     NUMBER,V_LN_CODE      VARCHAR2,V_STG_CODE     VARCHAR2,V_JOB_CODE     VARCHAR2,V_RCE_SER      NUMBER,V_ITEM_YIELD   VARCHAR2,V_ITEM_SCRAP   VARCHAR2,V_SR_CODE      NUMBER,V_YER_CODE     NUMBER,V_PRD_CODE     NUMBER,V_FT           DATE,V_TT           DATE,V_BOM_CODE     VARCHAR2,V_PRD_TYPE     NUMBER ,VITEM_GRAND    VARCHAR2 DEFAULT NULL,P_MSG_NO OUT NUMBER                                                              )RETURN NUMBER;
PROCEDURE MRP_FUNC_GET_SHIFT_TIME (      V_CMP                   NUMBER,      V_BRN                   NUMBER,      V_SHF                   NUMBER,      V_SHIFT_CODE            NUMBER,      V_FTIME        IN OUT   DATE,      V_TTIME        IN OUT   DATE   );
PROCEDURE FNC_GET_PRD_YR (P_CMP       S_CMPNY.CMP_NO%TYPE  ,P_BRN        S_BRN.BRN_NO%TYPE,P_DATE DATE ,      PO_YR OUT MRP_YEAR.YER_CODE%TYPE,  PO_PRD  OUT MRP_SGS_PERIOD_COSTONG.PERIOD_CODE%TYPE ,PO_MSG_NO OUT NUMBER);
FUNCTION FNC_CHK_VDATE(P_CMP       S_CMPNY.CMP_NO%TYPE  ,P_BRN        S_BRN.BRN_NO%TYPE,P_DATE DATE ,      PO_MSG_NO OUT  NUMBER) RETURN NUMBER ;
/* This function return number vaule from dynamic select
FUNCTION FNC_RN_SLCT (P_SELL IN VARCHAR2)     RETURN NUMBER;
FUNCTION FNC_CHK_DATE_IN_INV_PRD (P_CMP_NO     S_BRN.CMP_NO%TYPE,  P_BRN_NO     S_BRN.BRN_NO%TYPE,   P_SHF_CODE   MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE ,P_TRN_DATE    DATE            ) RETURN BOOLEAN;
/*This function return items Quantity On Hande */
FUNCTION MRP_FUNC_GET_ITEM_QTYHND1 (    V_ITEM_CODE   MRP_SFC_WHM_ITEMS_MOVE.ITEM_CODE%TYPE,      
FUNCTION MRP_FUNC_GET_ITEM_QTYHND2 (    V_ITEM_CODE   VARCHAR2,
/*This Function Return Items Class */
FUNCTION GET_ITEM_CLASS (VCMP_NO S_BRN.CMP_NO%TYPE,VBRN_NO S_BRN.BRN_NO%TYPE,ITEM VARCHAR2)      RETURN VARCHAR2;         
FUNCTION FNC_GET_ITM_SCRP_PRCNTG   (P_CMP_NO      S_BRN.CMP_NO%TYPE,  P_BRN_NO      S_BRN.BRN_NO%TYPE,  P_ITEM_CODE   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE, P_ITEM_SCRP   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE       )RETURN NUMBER;                                
/*This Function return Warehouse Coding Name  which  related with stage or line or shop floor By passing Company no ,Brn No , Shop floor , Line ,stage , Language for mulitlanguage message*/
FUNCTION GET_WH_CODE_PRO (      VCMP        MRP_CRP_WAREHOUSES_DTLS.CMP_NO%TYPE,      VBRN_NO     MRP_CRP_WAREHOUSES_DTLS.BRN_NO%TYPE,      VSHF_CODE   MRP_CRP_WAREHOUSES_DTLS.SHF_CODE%TYPE,      VLN_CODE    MRP_CRP_WAREHOUSES_DTLS.LN_CODE%TYPE,      VSTG_CODE   MRP_CRP_WAREHOUSES_DTLS.STG_CODE%TYPE,      P_LANG      NUMBER   )      RETURN VARCHAR2;
PROCEDURE UPDATE_MOVE(VCMP_NO      S_BRN.CMP_NO%TYPE, VBRN_NO      S_BRN.BRN_NO%TYPE, PROCESS     NUMBER           ,  VSP_SQ      MRP_SFC_SP_MSTR.SP_SQ%TYPE       ,
PROCEDURE MRP_UPDATE_AVGCST_PRC ( VCMP_NO      S_BRN.CMP_NO%TYPE,VBRN_NO      S_BRN.BRN_NO%TYPE,VITEM_CODE   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE,    VNEWCST_AVG  MRP_CRP_ITEMS_DETAILS.CST_AVG%TYPE  , VTRANS_TYPE  MRP_SFC_WHM_ITEMS_MOVE.TRANS_TYPE%TYPE,VTRANSM_SEQ  MRP_SFC_WHM_ITEMS_MOVE.TRANSM_SEQ%TYPE  , VTRANSD_SEQ  MRP_SFC_WHM_ITEMS_MOVE.TRANSD_SEQ%TYPE  , VWH_CODE     MRP_SFC_WHM_ITEMS_MOVE.WH_CODE%TYPE  ,  OP NUMBER      );
FUNCTION FNC_GET_MRP_CST (   P_CMP         S_BRN.CMP_NO%TYPE,
FUNCTION  FNC_MRP_UPDATE_AVGCST ( P_CMP                S_BRN.CMP_NO%TYPE, 
FUNCTION  ITEM_CATEGRY( VCMP_NO      S_BRN.CMP_NO%TYPE                 ,  VBRN_NO      S_BRN.BRN_NO%TYPE                  , VITEM_CODE   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE   ,    VCTGR        MRP_CRP_ITEMS_CATEGORY.CTGR%TYPE           )  RETURN NUMBER;
FUNCTION FINAL_PRODUCT_INWO ( VCMP_NO      S_BRN.CMP_NO%TYPE                      ,
FUNCTION MRP_FUNC_GET_SCRP_QTYHND (
    FUNCTION MRP_FUNC_GET_SCRP_QTYHND1 (
FUNCTION  FNC_CHK_MVQTY_VLD(P_CMP      S_BRN.CMP_NO%TYPE  ,P_BRN      S_BRN.BRN_NO%TYPE  , P_ITM   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE   , P_WH     MRP_SFC_WHM_ITEMS_MOVE.WH_CODE%TYPE    ,VNEWQTY      MRP_SFC_WHM_ITEMS_MOVE.QTY%TYPE        , P_WORK_ORDER MRP_MPS_WORK_ORDR_MSTR.WORK_ORDER%TYPE  DEFAULT NULL , P_TRANS_TYPE MRP_SFC_WHM_ITEMS_MOVE.TRANS_TYPE%TYPE  ,P_MSG_NO OUT NUMBER   )RETURN BOOLEAN ;
FUNCTION  FNC_CHK_MOV_CODE_DPLCT     (P_STM VARCHAR2 ) RETURN BOOLEAN ;
PROCEDURE PRC_SET_COST_BY_COSTTYPE (   P_CMP_NO     S_CMPNY.CMP_NO%TYPE, 
PROCEDURE PRC_SET_LAST_ADJ(P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,
PROCEDURE PRC_SET_WH    ( P_CMP_NO      S_CMPNY.CMP_NO%TYPE                    
PROCEDURE PRC_GET_MATERIAL_CONS(P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,
PROCEDURE PRC_DEL_MATERIAL_CONS(  P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,
PROCEDURE PRC_SET_CST ( P_CMP_NO      S_CMPNY.CMP_NO%TYPE     ,
FUNCTION  FNC_GET_SCRP_QTY(  P_CMP_NO     S_BRN.CMP_NO%TYPE,
 FUNCTION FNC_GET_ITM_QTYHND ( P_CMP     S_BRN.CMP_NO%TYPE, P_BRN     S_BRN.BRN_NO%TYPE, P_ITM  MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE ,P_WH MRP_CRP_WAREHOUSES_MSTR.WH_CODE%TYPE DEFAULT NULL)   RETURN NUMBER  ;
 FUNCTION FNC_GET_CRD_BATCH   (P_CMP     S_BRN.CMP_NO%TYPE, P_BRN     S_BRN.BRN_NO%TYPE, P_SHF   MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE  ,P_SF_SQ MRP_SFC_WIP_MASTER.SF_SEQ%TYPE) RETURN VARCHAR2 ;
 FUNCTION FNC_GET_ITM_QTYHND_CRD ( P_CMP     S_BRN.CMP_NO%TYPE, P_BRN     S_BRN.BRN_NO%TYPE,P_WH MRP_CRP_WAREHOUSES_MSTR.WH_CODE%TYPE DEFAULT NULL, P_ITM  MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE , P_WO            MRP_MPS_WORK_ORDR_MSTR.WORK_ORDER%TYPE,P_SFCRD MRP_SFC_WIP_MASTER.SF_SEQ%TYPE )   RETURN NUMBER ;
 FUNCTION FNC_GET_ITM_QTYHND_CRD_SCRP ( P_CMP     S_BRN.CMP_NO%TYPE, P_BRN     S_BRN.BRN_NO%TYPE,P_WH MRP_CRP_WAREHOUSES_MSTR.WH_CODE%TYPE DEFAULT NULL, P_ITM  MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE , P_WO            MRP_MPS_WORK_ORDR_MSTR.WORK_ORDER%TYPE,P_SFCRD MRP_SFC_WIP_MASTER.SF_SEQ%TYPE )   RETURN NUMBER ;
 PROCEDURE  PRC_UPDT_ITEM_MOVE  (   P_CMP          S_CMPNY.CMP_NO%TYPE,
 PROCEDURE PRC_INSRT_MINS_VAL (P_CMP      S_CMPNY.CMP_NO%TYPE   , 
CREATE OR REPLACE PACKAGE BODY MRPSFC_PKG   
FUNCTION FNC_GET_ALTRNTV_ITM_CONS ( P_CMP_NO     S_CMPNY.CMP_NO%TYPE   ,  
  SELECT  SUM(TOT_QTY) INTO V_QTY
    FROM MRP_SFC_WIP_MAT_CONSUMP
   WHERE CMP_NO = P_CMP_NO
       SELECT ITEM_OPTION FROM  MRP_CRP_ITEMS_CLASS_OPTIONS 
        WHERE CMP_NO = P_CMP_NO
EXCEPTION
 /* This Function To Get The Cost Value For Items FORM mrp_crp_items_details B y  Cost  type   1 avrage  cost 2--lastproduct cost 3  standers cost 4 --begin cost*/
FUNCTION FNC_GET_ITM_CST ( P_CMP_NO     S_CMPNY.CMP_NO%TYPE   ,  P_BRN_NO     S_BRN.BRN_NO%TYPE       ,  P_LANG       LANG_DEF.LANG_NO%TYPE  ,    P_ITEM_CODE  MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE  ,      P_CST_TYP    NUMBER             /* 1 avrage  cost 2--lastproduct cost 3  standers cost 4 --begin cost 5- COST PERCENTAGE 6- INDERTCT COST*/   ) RETURN NUMBER
  SELECT DECODE (P_CST_TYP ,1, CST_AVG, 2, CST_LAST_PROD,3, CST_STANDR, 4, CST_BEGIN,5, CST_PER , 6, CST_INDRCT  )
    FROM MRP_CRP_ITEMS_DETAILS
   WHERE CMP_NO = P_CMP_NO
EXCEPTION
   /*This Function return  item Quantiy on hand  by  specific warehouse  if it is specify or all warehouses if not*/
FUNCTION MRP_FUNC_GET_ITEM_QTYHND (  P_ITEM    MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE ,      
   BEGIN
     EXECUTE IMMEDIATE  ' Select  NVL(SUM(NVL(QTY,0)),0)
       From    MRP_SFC_WHM_ITEMS_MOVE
       Where   cmp_no    = :V_CMP
   EXCEPTION
   END;
FUNCTION FNC_GET_WEIGHT_ITEM_TRANS(P_CMP          S_CMPNY.CMP_NO%TYPE,
 BEGIN
     Select Decode(P_TRANS_TYPE,1,'MRP_SFC_MATERIALS_TRANSMT_DTLS',
     From Dual;
       EXECUTE IMMEDIATE    ' Select  NVL(SUM(NVL('||v_weight_fld||',0)),0)
       From    '||v_tbl_nm||'
       Where       cmp_no          = :P_CMP
     EXCEPTION WHEN OTHERS THEN RETURN 0;
/*This procedure insert item movement into item_move table */
   FUNCTION MRP_PROC_SET_ITEM_MOVE (   P_CMP          S_CMPNY.CMP_NO%TYPE,
   BEGIN
            BEGIN
                             BEGIN
                                                         UPDATE MRP_ITEM_ATTACH_MOVES
                                               WHERE 
                                EXCEPTION WHEN OTHERS THEN 
               EXCEPTION WHEN OTHERS THEN 
            END;
   END;
 this procedure return old avrage cost for the item_code ,seq which  passing  In item_details 
PROCEDURE PRC_SET_AVGCST_MOVE (      CMP            NUMBER,      BRN            NUMBER,      TRAN_TYP       NUMBER,      V_ITEM_CODE    VARCHAR2,      V_ITEM_GRAND   VARCHAR2,      CST_BEF        NUMBER,      V_SQ           NUMBER
   BEGIN
      BEGIN
         SELECT COUNT (0)
           FROM MRP_SFC_WHM_ITEMS_MOVE  --
          WHERE ITEM_CODE = V_ITEM_CODE
      EXCEPTION
      END;
      BEGIN
      update in item_detal by item_code 
         UPDATE MRP_CRP_ITEMS_DETAILS
          WHERE CMP_NO = CMP AND BR
      END;
   END;
   PROCEDURE MRP_PROC_BACK_AVGCST (      CMP            NUMBER,      BRN            NUMBER,      TRAN_TYP       NUMBER,      V_ITEM_CODE    VARCHAR2,      V_ITEM_GRAND   VARCHAR2,      CST_BEF        NUMBER,      V_SQ           NUMBER
   BEGIN
      BEGIN
         SELECT COUNT (0)
           FROM MRP_SFC_WHM_ITEMS_MOVE  --
          WHERE ITEM_CODE = V_ITEM_CODE
      EXCEPTION
      END;
      BEGIN
      update in item_detal by item_code 
         UPDATE MRP_CRP_ITEMS_DETAILS
          WHERE CMP_NO = CMP AND BRN_NO = BRN AND ITEM_CODE = V_ITEM_CODE;
      END;
   END;
this procedure will return the time from and time to from shift table  by pass shift 
   PROCEDURE MRP_FUNC_GET_SHIFT_TIME (      V_CMP                   NUMBER,      V_BRN                   NUMBER,      V_SHF                   NUMBER,      V_SHIFT_CODE            NUMBER,      V_FTIME        IN OUT   DATE,      V_TTIME        IN OUT   DATE
   BEGIN
      SELECT TIME_F, TIME_T
        FROM MRP_SGS_SHIFTS_MAST
       WHERE CMP_NO = V_CMP
   EXCEPTION
   END;
This procedure return year and period of passed date  by condition that year and period is open and active 
  PROCEDURE FNC_GET_PRD_YR (P_CMP       S_CMPNY.CMP_NO%TYPE  ,P_BRN        S_BRN.BRN_NO%TYPE,P_DATE DATE ,      PO_YR OUT MRP_YEAR.YER_CODE%TYPE,  PO_PRD  OUT MRP_SGS_PERIOD_COSTONG.PERIOD_CODE%TYPE ,PO_MSG_NO OUT NUMBER)
  BEGIN
      SELECT  M.YER_CODE, D.PERIOD_CODE
        FROM   MRP_SGS_PERIOD_COSTONG D,MRP_YEAR M  ---
       WHERE  M.CMP_NO    =  D.CMP_NO
   EXCEPTION
                                                               --Entry Date Dont have Year Or Period Active Or Open Or It not in Production Periods So Make sure From Production Period 
FUNCTION FNC_CHK_VDATE(P_CMP       S_CMPNY.CMP_NO%TYPE  ,P_BRN        S_BRN.BRN_NO%TYPE,P_DATE DATE ,      PO_MSG_NO OUT  NUMBER) RETURN NUMBER IS
    SELECT 1
     FROM  MRP_SGS_PERIOD_COSTONG D,  MRP_YEAR M
      WHERE  M.CMP_NO    =  D.CMP_NO
  EXCEPTION     WHEN NO_DATA_FOUND      THEN  
/* This function return number vaule from dynamic select
FUNCTION FNC_RN_SLCT (P_SELL IN VARCHAR2)     RETURN NUMBER
EXCEPTION
FUNCTION FNC_CHK_DATE_IN_INV_PRD (P_CMP_NO     S_BRN.CMP_NO%TYPE, P_BRN_NO     S_BRN.BRN_NO%TYPE, P_SHF_CODE   MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE , P_TRN_DATE    DATE                                 ) RETURN BOOLEAN
   SELECT 1
     FROM MRP_SFC_WIP_INVENTORY_MSTR
    WHERE CMP_NO = P_CMP_NO 
EXCEPTION
This function return items Quantity On Hande 
   FUNCTION MRP_FUNC_GET_ITEM_QTYHND1 (
   BEGIN
        SELECT NVL (SUM (NVL (QTY, 0)), 0)
        ( SELECT CMP_NO, BRN_NO, IM_SQ, QTY
         FROM MRP_SFC_WHM_ITEMS_MOVE
         WHERE CMP_NO  = V_CMP
   EXCEPTION
   END;
 FUNCTION MRP_FUNC_GET_ITEM_QTYHND2 (
   BEGIN
        SELECT NVL (SUM (NVL (QTY, 0)), 0)
        ( SELECT CMP_NO, BRN_NO, IM_SQ, QTY
         FROM MRP_SFC_WHM_ITEMS_MOVE
         WHERE CMP_NO     = V_CMP
   EXCEPTION
   END;
This Function Return Items Class */
   FUNCTION GET_ITEM_CLASS (VCMP_NO S_BRN.CMP_NO%TYPE,VBRN_NO S_BRN.BRN_NO%TYPE,ITEM VARCHAR2)
   BEGIN
      SELECT ITEMS_CLAS
        FROM MRP_CRP_ITEMS_DETAILS                         --
       WHERE ITEM_CODE = ITEM
   EXCEPTION
   END;
This Function Return Percentage the scrap matiral from source matiral
FUNCTION FNC_GET_ITM_SCRP_PRCNTG   (P_CMP_NO      S_BRN.CMP_NO%TYPE,P_BRN_NO      S_BRN.BRN_NO%TYPE, P_ITEM_CODE   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE,P_ITEM_SCRP   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE
   -- quantity of source material which resulting from source  material 
   BEGIN
      SELECT NVL (QTY, 1), NVL (QTYS, 1)
        FROM MRP_BOM_SCRAPS                                             -- 
       WHERE ITEM_CODE = P_ITEM_CODE AND ITEM_SCRAP = P_ITEM_SCRP
   EXCEPTION
   END;
This Function return Warehouse Coding Name  which  related with stage or line or shop floor By passing Company no ,Brn No , Shop floor , Line ,stage , Language for mulitlanguage message
   FUNCTION GET_WH_CODE_PRO (     VCMP        MRP_CRP_WAREHOUSES_DTLS.CMP_NO%TYPE,      VBRN_NO     MRP_CRP_WAREHOUSES_DTLS.BRN_NO%TYPE,      VSHF_CODE   MRP_CRP_WAREHOUSES_DTLS.SHF_CODE%TYPE,      VLN_CODE    MRP_CRP_WAREHOUSES_DTLS.LN_CODE%TYPE,      VSTG_CODE   MRP_CRP_WAREHOUSES_DTLS.STG_CODE%TYPE,
   IS                             -- add by sawsan 4-11-2008 order by abdallah
                    --to get where err happend  
   BEGIN
      BEGIN
/*select if there warehouse on stage level if there is no warehouse it will select on line level if there is no warehouse it will  select by shop floor level
         SELECT WH_CODE
           FROM MRP_CRP_WAREHOUSES_MSTR
          WHERE CMP_NO = VCMP
                   SELECT WH_CODE
                     FROM MRP_CRP_WAREHOUSES_DTLS
                    WHERE CMP_NO = VCMP
      EXCEPTION
            BEGIN
               SELECT WH_CODE
                 FROM MRP_CRP_WAREHOUSES_MSTR
                WHERE CMP_NO = VCMP
                         SELECT WH_CODE
                           FROM MRP_CRP_WAREHOUSES_DTLS
                          WHERE CMP_NO = VCMP
            EXCEPTION
                  BEGIN
                     SELECT WH_CODE
                       FROM MRP_CRP_WAREHOUSES_MSTR
                      WHERE CMP_NO = VCMP
                  EXCEPTION
                  END;
            END;
      END;
   END;
  This procedure for the Reproducing Products Scraps to the Its Assemblyes .
  Update The Records of Trans Type  = 4 As following
                  Update the field " SP_SQ" By the field "SP_SQ" in table of MRP_SFC_SP_MSTR " .
PROCEDURE UPDATE_MOVE(VCMP_NO      S_BRN.CMP_NO%TYPE,                      VBRN_NO      S_BRN.BRN_NO%TYPE,                      PROCESS     NUMBER           ,                      VSP_SQ      MRP_SFC_SP_MSTR.SP_SQ%TYPE       ,                      VIM_SQ      MRP_SFC_WHM_ITEMS_MOVE.IM_SQ%TYPE DEFAULT NULL ,                      VTRANSM_SEQ MRP_SFC_WHM_ITEMS_MOVE.TRANSM_SEQ%TYPE  DEFAULT NULL ,
IF PROCESS =1 THEN  -- IN INSERT  TO UPDATE ALL TRANSATION RELATED WITH DETAILS 
       UPDATE  MRP_SFC_WHM_ITEMS_MOVE
  WHERE   IM_SQ      = VIM_SQ
   UPDATE MRP_SFC_WHM_ITEMS_MOVE
       WHERE  IM_SQ     =VIM_SQ
UPDATE MRP_SFC_WHM_ITEMS_MOVE
       WHERE  IM_SQ     =VIM_SQ
       UPDATE MRP_SFC_WHM_ITEMS_MOVE
       WHERE  
       UPDATE MRP_SFC_WHM_ITEMS_MOVE
       WHERE  CMP_NO     =VCMP_NO
PROCEDURE MRP_UPDATE_AVGCST_PRC ( 
  BEGIN
          BEGIN
             UPDATE MRP_CRP_ITEMS_DETAILS
             WHERE  CMP_NO  = VCMP_NO 
          END;
          BEGIN
            UPDATE  MRP_SFC_WHM_ITEMS_MOVE 
            WHERE  CMP_NO =VCMP_NO 
          END;
       SELECT AVGCST_BEFOR
       FROM   MRP_SFC_WHM_ITEMS_MOVE
       WHERE  CMP_NO =VCMP_NO 
             UPDATE MRP_CRP_ITEMS_DETAILS
             WHERE  CMP_NO  = VCMP_NO 
FUNCTION FNC_GET_MRP_CST (   P_CMP         S_BRN.CMP_NO%TYPE,
FUNCTION  FNC_MRP_UPDATE_AVGCST (  P_CMP                S_BRN.CMP_NO%TYPE, 
        BEGIN
                UPDATE MRP_CRP_ITEMS_DETAILS
                 WHERE  CMP_NO  = P_CMP 
        END;
                 BEGIN
                UPDATE  MRP_SFC_WHM_ITEMS_MOVE 
                WHERE  CMP_NO =P_CMP 
              END;
       BEGIN
           SELECT AVGCST_BEFOR
           FROM    MRP_SFC_WHM_ITEMS_MOVE
           WHERE     CMP_NO =P_CMP 
                      PO_MSG_NO :=0;--err from sqlerrm
        END;
        BEGIN
           UPDATE MRP_CRP_ITEMS_DETAILS
             WHERE  CMP_NO  = P_CMP 
        END;  
FUNCTION  ITEM_CATEGRY( VCMP_NO      S_BRN.CMP_NO%TYPE                 ,
 BEGIN
    SELECT  1
    FROM    MRP_CRP_ITEMS_CATEGORY
    WHERE   CMP_NO    = VCMP_NO
 FUNCTION FINAL_PRODUCT_INWO ( VCMP_NO      S_BRN.CMP_NO%TYPE                      ,
 BEGIN
    SELECT  1
    FROM   MRP_MPS_WORK_ORDR_DTLS 
    WHERE  CMP_NO =VCMP_NO
    EXCEPTION WHEN OTHERS THEN 
 FUNCTION MRP_FUNC_GET_SCRP_QTYHND (
   BEGIN
      EXECUTE IMMEDIATE    ' Select  NVL(SUM(NVL(QTY,0)),0)
       From    MRP_SFC_WHM_ITEMS_MOVE
       Where   cmp_no    = :V_CMP
   EXCEPTION
 FUNCTION MRP_FUNC_GET_SCRP_QTYHND1 (
   BEGIN
      SELECT NVL (SUM (NVL (QTY, 0)), 0)
        FROM MRP_SFC_WHM_ITEMS_MOVE
       WHERE CMP_NO = V_CMP
   EXCEPTION
FUNCTION  FNC_CHK_MVQTY_VLD(P_CMP      S_BRN.CMP_NO%TYPE  ,P_BRN      S_BRN.BRN_NO%TYPE  , P_ITM   MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE   , P_WH     MRP_SFC_WHM_ITEMS_MOVE.WH_CODE%TYPE    ,VNEWQTY      MRP_SFC_WHM_ITEMS_MOVE.QTY%TYPE        , P_WORK_ORDER MRP_MPS_WORK_ORDR_MSTR.WORK_ORDER%TYPE  DEFAULT NULL , P_TRANS_TYPE MRP_SFC_WHM_ITEMS_MOVE.TRANS_TYPE%TYPE  ,P_MSG_NO OUT NUMBER   )RETURN BOOLEAN 
FUNCTION FNC_CHK_MOV_CODE_DPLCT     (P_STM VARCHAR2 ) RETURN BOOLEAN IS 
EXCEPTION WHEN NO_DATA_FOUND THEN 
PROCEDURE PRC_SET_COST_BY_COSTTYPE (     P_CMP_NO     S_CMPNY.CMP_NO%TYPE, 
 SELECT  QTY_REC 
 FROM    MRP_MPS_WORK_ORDR_MSTR M ,MRP_MPS_WORK_ORDR_DTLS D 
 WHERE   M.WORK_ORDER =  P_WORK_ORDER
             EXCEPTION WHEN OTHERS THEN
 BEGIN
 SELECT  QTY_REC /NVL(VMAIN_QTY,0)
 FROM    MRP_MPS_WORK_ORDR_MSTR M ,MRP_MPS_WORK_ORDR_DTLS D 
 WHERE   M.WORK_ORDER =  P_WORK_ORDER
                           EXCEPTION WHEN OTHERS THEN
                BEGIN
SELECT QTY   
FROM   MRP_MPS_BATCHES 
WHERE  BATCH_NO   =  P_BATCH_NO
EXCEPTION WHEN OTHERS THEN
SELECT  (QTY_REC/VMAIN_QTY)*VBATCH_QTY
  FROM    MRP_MPS_WORK_ORDR_MSTR M ,
  WHERE   M.WORK_ORDER =  P_WORK_ORDER
  EXCEPTION WHEN OTHERS THEN
                        END; 
           FOR I IN ( SELECT ITEM_ROW ,SUM(QTY_R+QTY_S) QTY_R
             FROM   MRP_MRP_BOM_ROW_TEMP 
             WHERE  USR_NAME    = GNR_PKG.FNC_SET_TRMNLUSR  
                          GROUP BY ITEM_ROW
            BEGIN
                  BEGIN
                   SELECT  1
            FROM   MRP_SFC_WHM_ITEMS_MOVE 
            WHERE  CMP_NO      = P_CMP_NO
           EXCEPTION WHEN OTHERS THEN
              BEGIN
                    SELECT  MV.ITEM_CODE
              FROM   MRP_SFC_WHM_ITEMS_MOVE  MV,
              WHERE  MV.CMP_NO    = P_CMP_NO
             EXCEPTION WHEN OTHERS THEN
              END;
           BEGIN  
               SELECT  NVL(AVG( NVL(CST,0)),0) * NVL(I.QTY_R,0)  
            FROM   MRP_SFC_WHM_ITEMS_MOVE
            WHERE  CMP_NO      = P_CMP_NO
           EXCEPTION WHEN OTHERS THEN
   BEGIN
      --PARAMETER 5 IN THIS FUNCTION TO GET THE PERCENT OF P_ITEM_CODE IN ITEM_DETAILS TABLE.
         END;
              BEGIN
                   --PARAMETER 5 IN THIS FUNCTION TO GET THE INDIRECT OF P_ITEM_CODE IN ITEM_DETAILS TABLE.
          END;
PROCEDURE PRC_SET_LAST_ADJ(P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,  P_BRN_NO     S_BRN.BRN_NO%TYPE        ,  P_LANG       LANG_DEF.LANG_NO%TYPE  ,  PO_FDATE     OUT DATE,    PO_TDATE        OUT DATE) IS
  SELECT MAX(ADJ_DATE) 
  FROM   MRP_SFC_WIP_ADJUSTMENT_MSTR
  WHERE  INV_SEQ IS NOT NULL   
 BEGIN
  SELECT MAX(ADJ_DATE) 
  FROM   MRP_SFC_WIP_ADJUSTMENT_MSTR
  WHERE INV_SEQ IS  NULL  
  AND    ADJ_DATE  > ( SELECT MAX(ADJ_DATE) 
                                               FROM   MRP_SFC_WIP_ADJUSTMENT_MSTR
                                               WHERE  INV_SEQ IS NOT NULL
  EXCEPTION 
EXCEPTION WHEN OTHERS THEN    
PROCEDURE PRC_SET_WH  ( P_CMP_NO      S_CMPNY.CMP_NO%TYPE                     ,
  --FOR FRONT, WH FROM RAW MATRIAL 
 --FOR BEHIND, WH FROM FINAL MATRIAL                                         
 SELECT WH_CODE , DECODE(P_LANG , 1 , WH_NAME_A , WH
  FROM  MRP_CRP_WAREHOUSES_MSTR
  WHERE CMP_NO = P_CMP_NO
   AND  WH_CODE IN (SELECT WH_CODE
                     FROM  MRP_CRP_WAREHOUSES_DTLS
                     WHERE CMP_NO = P_CMP_NO
  EXCEPTION
        BEGIN
   SELECT WH_CODE , DECODE(P_LANG , 1 , WH_NAME_A , WH_NAME_F)
  FROM  MRP_CRP_WAREHOUSES_MSTR
  WHERE CMP_NO = P_CMP_NO
   AND  WH_CODE IN (SELECT WH_CODE
                     FROM  MRP_CRP_WAREHOUSES_DTLS
                     WHERE CMP_NO = P_CMP_NO
  EXCEPTION
        BEGIN
  SELECT WH_CODE , DECODE(P_LANG , 1 , WH_NAME_A , WH_NAME_F)
  FROM  MRP_CRP_WAREHOUSES_MSTR
  WHERE CMP_NO = P_CMP_NO
   AND  WH_CODE IN (SELECT WH_CODE
                     FROM  MRP_CRP_WAREHOUSES_DTLS
                     WHERE CMP_NO = P_CMP_NO
        EXCEPTION        
           BEGIN
   SELECT WH_CODE , DECODE(P_LANG , 1 , WH_NAME_A , WH_NAME_F)
  FROM  MRP_CRP_WAREHOUSES_MSTR
  WHERE CMP_NO = P_CMP_NO
   AND  WH_CODE IN (SELECT WH_CODE
                     FROM  MRP_CRP_WAREHOUSES_DTLS
                     WHERE  CMP_NO = P_CMP_NO
           EXCEPTION        
END;    
PROCEDURE PRC_GET_MATERIAL_CONS(       P_CMP_NO        S_CMPNY.CMP_NO%TYPE     ,
BEGIN  
         BEGIN
              SELECT BATCH_NO   , FDATE  , TDATE 
              FROM MRP_SFC_WIP_MASTER
              WHERE CMP_NO = P_CMP_NO AND 
              SELECT ITEM_CODE INTO V_ITEM_MAIN
              FROM MRP_MPS_BATCHES 
              WHERE CMP_NO   = P_CMP_NO AND 
              EXCEPTION WHEN OTHERS THEN
         END;
                   SELECT COUNT(*) 
                    FROM   MRP_MRP_BOM_ROW_TEMP
                    WHERE  ( Nvl(QTY_R,0) - Nvl(MIN_QTY ,0) ) - Nvl(QTY_W,0) > 0   --
                   SELECT COUNT(*) 
                    FROM   MRP_MRP_BOM_ROW_TEMP
                    WHERE ( Nvl(QTY_R,0) - Nvl(MIN_QTY ,0) ) - Nvl(QTY_W,0) > 0   --
                            SELECT  COUNT(*) 
                            FROM   MRP_MRP_BOM_ROW_TEMP
                                WHERE ( Nvl(QTY_R,0) - Nvl(MIN_QTY ,0) ) - Nvl(QTY_W,0) > 0 -- NVL(ROUND(QTY_D,3),0) > 0
                              ( SELECT 1
                                FROM MRP_BEST_CLASS_OPTIONS_TEMP
                                WHERE  CMP_NO  = P_CMP_NO
                                GROUP BY CMP_NO, BRN_NO,MRP_ITEM_CODE
                          FROM    MRP_MRP_BOM_ROW_TEMP
                          WHERE   USR_NAME    = V_TERM_USR
                         SELECT                
                              SUM(D.QTY_W)   OVER(PARTITION BY D.CMP_NO, D.BRN_NO,D.MRP_ITEM_CODE,D.USR_NAME  ORDER BY D.CMP_NO, D.BRN_NO,D.MRP_ITEM_CODE,D.USR_NAME)  QTY_W2,
                          FROM     MRP_MRP_BOM_ROW_TEMP M ,
                          WHERE M.USR_NAME    = V_TERM_USR
  BEGIN
                     SELECT D.CST , MAX(D.MRC_D_SQ) 
                     FROM MRP_SFC_MATERIALS_RECEIVE_DTLS D ,
                     WHERE M.CMP_NO    = D.CMP_NO    AND
                             SELECT 1 FROM MRP_SFC_MATERIALS_REQUEST_MSTR
                             WHERE CMP_NO     = D.CMP_NO      AND
                        GROUP BY D.CST  ;
                    EXCEPTION WHEN OTHERS THEN 
                END;
                 INSERT  INTO MRP_SFC_WIP_MAT_CONSUMP   (    CMP_NO , BRN_NO  ,   CON_SEQ   ,
                                SELECT SUM(QTY_W)  INTO V_SUM_QTY_W
          FROM MRP_BEST_CLASS_OPTIONS_TEMP
         WHERE CMP_NO        = P_CMP_NO
                                    FOR J IN ( SELECT ITEM_OPTION, QTY_W
                                                    FROM MRP_BEST_CLASS_OPTIONS_TEMP
                                                    WHERE        CMP_NO               = P_CMP_NO
                                                           ORDER BY NVL(PRIORITY,1) ASC )
                                               INSERT  INTO MRP_SFC_WIP_MAT_CONSUMP
  EXCEPTION WHEN OTHERS THEN     RAISE_APPLICATION_ERROR                  (-20021,' PRC_GET_Material_cons' || SUBSTR(SQLCODE,1,3) ||  SUBSTR(SQLERRM,1,70) );
PROCEDURE PRC_DEL_MATERIAL_CONS(  P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,
    SELECT COUNT(*) 
     FROM MRP_SFC_WIP_MAT_CONSUMP
     WHERE  DECODE(P_YS,1,YIELD_SEQ,2,SCAP_SEQ)=P_SEQ
        WHERE  DECODE(P_YS,1,YIELD_SEQ,2,SCAP_SEQ)=P_SEQ
 EXCEPTION
PROCEDURE PRC_SET_CST (P_CMP_NO     S_CMPNY.CMP_NO%TYPE ,P_BRN_NO     S_BRN.BRN_NO%TYPE        ,  P_LANG       LANG_DEF.LANG_NO%TYPE  ,  P_ITEM_MAIN  MRP_MPS_WORK_ORDR_DTLS.ITEM_CODE%TYPE ,  P_WORK_ORDER MRP_MPS_WORK_ORDR_MSTR.WORK_ORDER%TYPE, P_ITEM_CODE  MRP_MPS_WORK_ORDR_DTLS.ITEM_CODE%TYPE , P_BOM_CODE   MRP_MPS_WORK_ORDR_DTLS.BOM_CODE%TYPE  ,        P_BATCH_NO   MRP_MPS_BATCHES.BATCH_NO%TYPE   , PO_CST       OUT NUMBER ,P_DATE DATE DEFAULT NULL     )IS 
          4-BEGINning cost 
                    SELECT IAS_ITM_PKG.GET_GRAND_WTAVG(1,V_INV_I_CODE, NULL) INTO PO_CST FROM DUAL;
                    SELECT Get_Wcode_Revaluate_Cost (V_INV_I_CODE, P_DATE, NULL)  INTO PO_CST FROM DUAL;
             SELECT LAST_INCOMING_PRICE(1,V_INV_I_CODE, 1,NULL,1) INTO PO_CST FROM DUAL;
     BEGIN
         SELECT DECODE(  V_COST_TYP  , 6,V_COST,
         FROM DUAL;                   
FUNCTION  FNC_GET_SCRP_QTY( P_CMP_NO     S_BRN.CMP_NO%TYPE, P_BRN_NO     S_BRN.BRN_NO%TYPE, P_ITEM_CODE  MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE,P_ITEM_SCRAP MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE,  P_QTY        MRP_SFC_WIP_MASTER_SCRAP.QTY%TYPE ) RETURN NUMBER  IS
    BEGIN
           SELECT QTY,QTYS
           FROM   MRP_BOM_SCRAPS
           WHERE  ITEM_CODE    = P_ITEM_CODE
    EXCEPTION WHEN OTHERS  THEN 
    END;
  BEGIN
     EXECUTE IMMEDIATE    ' SELECT   NVL(SUM(NVL(QTY,0)),0)
                                           FROM    MRP_SFC_WHM_ITEMS_MOVE
                                           WHERE  CMP_NO      = :P_CMP
   EXCEPTION
FUNCTION FNC_GET_CRD_BATCH   (P_CMP     S_BRN.CMP_NO%TYPE, P_BRN     S_BRN.BRN_NO%TYPE, P_SHF   MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE  ,P_SF_SQ MRP_SFC_WIP_MASTER.SF_SEQ%TYPE) RETURN VARCHAR2 IS
 SELECT BATCH_NO
 FROM    MRP_SFC_WIP_MASTER
 WHERE CMP_NO=P_CMP
EXCEPTION WHEN OTHERS THEN 
FUNCTION FNC_GET_ITM_QTYHND_CRD ( P_CMP     S_BRN.CMP_NO%TYPE, P_BRN     S_BRN.BRN_NO%TYPE,P_WH MRP_CRP_WAREHOUSES_MSTR.WH_CODE%TYPE DEFAULT NULL, P_ITM  MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE , P_WO            MRP_MPS_WORK_ORDR_MSTR.WORK_ORDER%TYPE,P_SFCRD MRP_SFC_WIP_MASTER.SF_SEQ%TYPE )   RETURN NUMBER  IS 
  BEGIN
     EXECUTE IMMEDIATE    ' SELECT   NVL(SUM(NVL(QTY,0)),0)
                                           FROM    MRP_SFC_WHM_ITEMS_MOVE
                                           WHERE  CMP_NO      = :P_CMP
           EXECUTE IMMEDIATE    ' SELECT   NVL(SUM(NVL(QTY,0)),0)
                                           FROM    MRP_SFC_WHM_ITEMS_MOVE
                                           WHERE  CMP_NO      = :P_CMP
   EXCEPTION
   FUNCTION FNC_GET_ITM_QTYHND_CRD_SCRP ( P_CMP     S_BRN.CMP_NO%TYPE, P_BRN     S_BRN.BRN_NO%TYPE,P_WH MRP_CRP_WAREHOUSES_MSTR.WH_CODE%TYPE DEFAULT NULL, P_ITM  MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE , P_WO            MRP_MPS_WORK_ORDR_MSTR.WORK_ORDER%TYPE,P_SFCRD MRP_S
  BEGIN
     EXECUTE IMMEDIATE    ' SELECT   NVL(SUM(NVL(QTY,0)),0)
                                           FROM    MRP_SFC_WHM_ITEMS_MOVE
                                           WHERE  CMP_NO      = :P_CMP
           EXECUTE IMMEDIATE    ' SELECT   NVL(SUM(NVL(QTY,0)),0)
                                           FROM    MRP_SFC_WHM_ITEMS_MOVE
                                           WHERE  CMP_NO      = :P_CM
   EXCEPTION
   PROCEDURE  PRC_UPDT_ITEM_MOVE  (   P_CMP          S_CMPNY.CMP_NO%TYPE,
  BEGIN
           UPDATE MRP_SFC_WHM_ITEMS_MOVE   SET  SF_SEQ =P_SF_SEQ
           WHERE   CMP_NO =P_CMP
 PROCEDURE PRC_INSRT_MINS_VAL (P_CMP      S_CMPNY.CMP_NO%TYPE   , 
BEGIN   
FOR I IN (SELECT  CMP_NO,BRN_NO,SF_SEQ,WORK_ORDER,LN_CODE,SF_DATE,SHF_CODE,YER_CODE,PERIOD_CODE ,BATCH_NO,CRT_DATE,APP_DATE,SF_CODE,SHIFT_CODE             
                    FROM MRP_SFC_WIP_MASTER                 WHERE  SF_SEQ  =P_SF_SEQ             AND CMP_NO   =P_CMP             AND  BRN_NO         =P_BRN         AND   WORK_ORDER   =P_WO AND  SHF_CODE=P_SHF    ) LOOP
       FOR J IN (SELECT  YIELD_SEQ, ITEM_CODE,QTY,WH_CODE,CST,BOM_CODE,RCE_SER,PRD_TYPE,STG_CODE,JOB_CODE,ITEM_MAIN                     FROM    MRP_SFC_WIP_MASTER_YIELD   WHERE   CMP_NO =I.CMP_NO              AND  BRN_NO   =I.BRN_NO         AND   WORK_ORDER=I.WORK_ORDER    AND  SHF_CODE=P_SHF   AND       SF_SEQ         =I.SF_SEQ ORDER BY YIELD_SEQ )            LOOP
      FOR  J IN (SELECT  SCAP_SEQ,ITEM_CODE,ITEM_SCRAP,QTY,WH_CODE,CST,BOM_CODE,RCE_SER,SCRAP_TYPE,  PRD_TYPE,ITEM_MAIN,STG_CODE,JOB_CODE                                 FROM    MRP_SFC_WIP_MASTER_SCRAP                                 WHERE   CMP_NO        =I.CMP_NO                                 AND       BRN_NO         =I.BRN_NO                                 AND       WORK_ORDER=I.WORK_ORDER                         AND  SHF_CODE=P_SHF          AND       SF_SEQ         =I.SF_SEQ     ORDER B
FOR J IN (  SELECT CMP_NO,BRN_NO,ITEM_CODE,WH_CODE,TOT_QTY,YIELD_SEQ   ,SCAP_SEQ,STG_CODE,JOB_CODE,RCE_SER,CON_SEQ    FROM  MRP_SFC_WIP_MAT_CONSUMP          WHERE CMP_NO=I.CMP_NO  AND   BRN_NO=I.BRN_NO    AND   WORK_ORDER=I.WORK_ORDER            AND  SHF_CODE=P_SHF   AND   SF_SEQ=I.SF_SEQ  ORDER BY CON_SEQ )LOOP
       INSERT INTO MRP_SFC_MINS_VALUE(CMP_NO,BRN_NO,SHF_CODE,ITEM_CODE,WH_CODE,WORK_ORDER ,ONHANDQTY,NEWQTY ,SEQ_M/*,TRANS_TYPE,SEQ_D ,*/,USR_NM,SF_DATE,BATCH_NO,CRT_DATE,APP_DATE,YER_CODE,PERIOD_CODE,SF_CODE,SHIFT_CODE,LN_CODE /*,ITEM_MAIN,*/,DIFQTY           )       
 PROCEDURE PRC_INSRT_MINS_VAL (P_CMP      S_CMPNY.CMP_NO%TYPE   , 
CREATE OR REPLACE PACKAGE MPS_PKG  
FUNCTION FNC_TRNS_USED(P_CMP_NO IN NUMBER, P_BRN_NO IN NUMBER, P_TRN_TYPE IN  NUMBER, P_TRN_SEQ IN  NUMBER) RETURN NUMBER ;
FUNCTION FNC_ITS_OPN_ACTV_YR  ( P_CMP    S_CMPNY.CMP_NO%TYPE, P_BRN    S_BRN.BRN_NO%TYPE,P_DATE DATE,PO_MSGNO OUT NUMBER   ) RETURN NUMBER;
FUNCTION FNC_WO_STS                  (P_CMP    S_CMPNY.CMP_NO%TYPE, P_BRN    S_BRN.BRN_NO%TYPE, P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE,P_WO MRP_MPS_WORK_ORDR_MSTR.WORK_ORDER%TYPE ,P_TYP NUMBER DEFAULT NULL ,PO_MSGNO OUT NUMBER   )RETURN BOOLEAN ;
FUNCTION FNC_CHK_OBJ_FOUND      (P_OBJ   USER_OBJECTS.OBJECT_NAME%TYPE,           P_TYP   USER_OBJECTS.OBJECT_TYPE%TYPE   )      RETURN BOOLEAN;
FUNCTION FNC_CHK_MOV_DLT         (P_TAB        VARCHAR2,P_WHR        VARCHAR2,P_WHR2       VARCHAR2, P_ERR_TYP    OUT NUMBER)      RETURN NUMBER;
FUNCTION FNC_CHK_ALL_OBJ_FOUND(P_TYP NUMBER) RETURN BOOLEAN;
FUNCTION  FNC_CHK_ALL_MOV_DLT (P_TYP NUMBER,P_CMP    S_CMPNY.CMP_NO%TYPE, P_BRN    S_BRN.BRN_NO%TYPE, P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE,P_TRNNO       NUMBER,P_ERR OUT NUMBER)RETURN NUMBER ;
FUNCTION  FNC_CHK_WH_TYP (P_CMP    S_CMPNY.CMP_NO%TYPE,P_BRN    S_BRN.BRN_NO%TYPE,P_TYP    NUMBER  )RETURN BOOLEAN;
/*This Function return PQC Check For Receive items       true if all item checked and all them good material 
 FUNCTION FNC_CHK_PQC_NOT_STS (P_CMP    S_CMPNY.CMP_NO%TYPE,
This Procedure called to approved in sfc ,mps screen
PROCEDURE approve_trn (      trn_type     NUMBER,  vcmp_no    S_CMPNY.CMP_NO%TYPE, vbrn_no    S_BRN.BRN_NO%TYPE,     vworkorder   VARCHAR2,      trn_no       NUMBER,      trn_date     DATE,      vapp_date    DATE,      vapp_user    NUMBER,      vtrn_nob     NUMBER DEFAULT NULL,      vshf_code    NUMBER DEFAULT NULL,vmt_type     NUMBER DEFAULT NULL,      P_APP_UNAPP    NUMBER,      trn_code     VARCHAR2 DEFAULT NULL,PO_MSGNO OUT NUMBER   );
FUNCTION chk_batches_found (vcmp_no NUMBER, vbrn_no NUMBER, wo VARCHAR2) RETURN BOOLEAN;
This Function return true if there is item in inventory dtls for specific inventory
--FUNCTION found_dtl (vcmp_no NUMBER, vbrn_no NUMBER, trn_no NUMBER)      RETURN BOOLEAN;
   FUNCTION get_previos_adjorinvsheet (      vcmp_no    NUMBER,      vbrn_no    NUMBER,      vf_date    DATE,      vt_date    DATE,      vitem      VARCHAR2,      vwh_code   VARCHAR2,      vinv_seq   NUMBER   )  
to update stop in card
   PROCEDURE update_stoping_in_card (      procapp_unapp   NUMBER,      cmp             NUMBER,      brn             NUMBER,      shf             NUMBER,      stopno          NUMBER   );
this procedure return found_=1 if there is card in same time of stoping
PROCEDURE get_card_in_time ( cmp            NUMBER,  brn            NUMBER,      shf            NUMBER,      stopno         NUMBER,      found_   OUT   NUMBER,     vfd      OUT   DATE,      vft      OUT   VARCHAR2,      vtd      OUT   DATE,      vtt      OUT   VARCHAR2   );
FUNCTION is_adj_done_to_inv (      vinv_seq   VARCHAR2,      vcmp_no    NUMBER,      vbrn_no    NUMBER   )      RETURN BOOLEAN;
FUNCTION get_result (sel IN VARCHAR2) RETURN VARCHAR2;
PROCEDURE get_yy_mm_w_dd_fromdate (      indate         DATE,      yy       OUT   VARCHAR2,      mm       OUT   VARCHAR2,      w        OUT   VARCHAR2,      dd       OUT   VARCHAR2   );
this Procedure return the formate of transaction by tran type and trans date
PROCEDURE PRC_SET_FRMT(P_CMP  S_CMPNY.CMP_NO%TYPE  ,P_BRN   S_BRN.BRN_NO%TYPE  ,P_TRN_TYP NUMBER ,      PO_TRN_FRMT   OUT   VARCHAR2,      trn_date           DATE DEFAULT NULL   );
--PROCEDURE  Set_Format  (trn_type           NUMBER,      trn_format   OUT   VARCHAR2,      trn_date           DATE DEFAULT NULL   );
PROCEDURE  insert_update_op_qty ( vcmp_no      s_brn.cmp_no%TYPE,      vbrn_no      s_brn.brn_no%TYPE,      op           NUMBER DEFAULT -1,      vitem_code   mrp_sfc_request_opt_qty.item_code%TYPE,      vqty         NUMBER,      vmropt_sq    NUMBER DEFAULT NULL   );
PROCEDURE  insert_opt (vcmp_no                number,
FUNCTION    check_opt_qty (      vcmp_no            s_brn.cmp_no%TYPE,      vbrn_no            s_brn.brn_no%TYPE,      vitem_code         mrp_sfc_request_opt_qty.item_code%TYPE,      vqty2        OUT   NUMBER,      vmropt_sq    OUT   NUMBER   )      RETURN BOOLEAN;
PROCEDURE  chk_item_in_request_sfc_found (      vcmp_no   mrp_sfc_materials_request_dtls.cmp_no%TYPE,      vbrn_no   mrp_sfc_materials_request_dtls.brn_no%TYPE,      vmr_sq    mrp_sfc_materials_request_dtls.mr_sq%TYPE,      vmrc_sq   mrp_sfc_materials_receive_mstr.mrc_sq%TYPE,      userno    NUMBER  );
This  procedure update  the salse quantity of items in production Plan from sales table Onyx System
PROCEDURE update_actual_seales (      onyxver   NUMBER,cmp       mrp_mps_cmpny_
this Function will return messgae by message no ,message code from general message table
FUNCTION mrp_func_get_mrp_msg (      v_msg_code   IAS_SYS.MRP_MSGS.msg_code%TYPE,      v_msg_num    IAS_SYS.MRP_MSGS.msg_num%TYPE   )      RETURN IAS_SYS.MRP_MSGS.msg_text%TYPE;
--FUNCTION get_genparameter (para VARCHAR2)      RETURN VARCHAR2;
--FUNCTION objectfound (      obj   user_objects.object_name%TYPE,      typ   user_objects.object_type%TYPE   )      RETURN BOOLEAN;
--FUNCTION  chk_front_wh(TYP  NUMBER,   VCMP S_CMPNY.CMP_NO%TYPE,    VBRN S_BRN.BRN_NO%TYPE )  RETURN BOOLEAN;       
--FUNCTION chk_move_dtls_data_func (      tab          VARCHAR2,      whr          VARCHAR2,      whr2         VARCHAR2,   err    OUT   NUMBER   ) RETURN NUMBER;
CREATE OR REPLACE PACKAGE BODY MPS_PKG     
FUNCTION FNC_TRNS_USED(P_CMP_NO IN NUMBER, P_BRN_NO IN NUMBER, P_TRN_TYPE IN  NUMBER, P_TRN_SEQ IN  NUMBER) RETURN NUMBER IS
                      SELECT 1 INTO V_USED
                                   FROM MRP_SFC_MATERIALS_RECEIVE_MSTR m
                                  WHERE   m.MRC_SQ = P_TRN_SEQ
                                                       ( SELECT 1 FROM MRP_SFC_WIP_MASTER
                                                         WHERE CMP_NO = P_CMP_NO
                                  SELECT 1 INTO V_USED
                                   FROM MRP_SFC_MATERIALS_RECEIVE_MSTR m,
                                  WHERE   m.MRC_SQ = P_TRN_SEQ
                                                       ( SELECT 1 FROM MRP_SFC_WIP_MASTER_YIELD
                                                         WHERE CMP_NO = P_CMP_NO
                                  SELECT 1 INTO V_USED
 FROM MRP_SFC_MATERIALS_RECEIVE_MSTR m,
                                  WHERE   m.MRC_SQ = P_TRN_SEQ
                                                       ( SELECT 1 FROM MRP_SFC_WIP_MASTER
                                                         WHERE CMP_NO = P_CMP_NO
               SELECT 1 INTO V_USED
               FROM MRP_SFC_MATERIALS_REQUEST_MSTR m
               WHERE     m.MR_SQ = P_TRN_SEQ  
                      ( SELECT 1 FROM MRP_SFC_MATERIALS_RECEIVE_MSTR
                          WHERE  MR_SQ = m.MR_SQ
       EXCEPTION WHEN OTHERS THEN
/* This Function check That   the date in open active year and period  return 1 if its in open active year and period  */
FUNCTION FNC_ITS_OPN_ACTV_YR ( P_CMP    S_CMPNY.CMP_NO%TYPE, P_BRN    S_BRN.BRN_NO%TYPE,P_DATE DATE,PO_MSGNO OUT NUMBER   ) RETURN NUMBER
   BEGIN
        SELECT 1
        FROM    MRP_YEAR M, MRP_SGS_PERIOD_COSTONG  D
        WHERE  M.CMP_NO    =   D.CMP_NO
   EXCEPTION   WHEN OTHERS  THEN 
  /*This Function return false if the work order IS  3 Completed ,4 Close      ,5 Inactive   else return true */
FUNCTION FNC_WO_STS (P_CMP    S_CMPNY.CMP_NO%TYPE, P_BRN    S_BRN.BRN_NO%TYPE, P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE,P_WO MRP_MPS_WORK_OR
          BEGIN
                 SELECT IND_STATUS
                  FROM  MRP_MPS_WORK_ORDR_MSTR
                  WHERE CMP_NO         = P_CMP
          EXCEPTION
FUNCTION FNC_CHK_OBJ_FOUND (P_OBJ    USER_OBJECTS.OBJECT_NAME%TYPE, P_TYP    USER_OBJECTS.OBJECT_TYPE%TYPE) RETURN BOOLEAN
 BEGIN
     SELECT  1
     FROM   USER_OBJECTS
     WHERE  OBJECT_TYPE = P_TYP AND OBJECT_NAME = P_OBJ  AND ROWNUM <= 1;
 EXCEPTION
FUNCTION FNC_CHK_MOV_DLT (P_TAB        VARCHAR2,P_WHR        VARCHAR2,P_WHR2       VARCHAR2, P_ERR_TYP    OUT NUMBER)      RETURN NUMBER
   BEGIN
      EXECUTE IMMEDIATE 'SELECT COUNT (*) FROM  ' || P_TAB || '   WHERE   ' || P_WHR     INTO VCNT;
          EXECUTE IMMEDIATE 'SELECT COUNT (*) FROM  ' || P_TAB || '   WHERE   ' || P_WHR2     INTO VCNT1;
   EXCEPTION
FUNCTION FNC_CHK_ALL_OBJ_FOUND(P_TYP NUMBER) RETURN BOOLEAN
FUNCTION  FNC_CHK_ALL_MOV_DLT(P_TYP NUMBER,P_CMP    S_CMPNY.CMP_NO%TYPE, P_BRN    S_BRN.BRN_NO%TYPE, P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE,P_TRNNO       NUMBER,P_ERR OUT NUMBER)RETURN NUMBER 
FUNCTION FNC_CHK_WH_TYP (P_CMP    S_CMPNY.CMP_NO%TYPE,                            P_BRN    S_BRN.BRN_NO%TYPE,                            P_TYP    NUMBER)
 BEGIN
         BEGIN
            SELECT  DISTINCT 1
              FROM   MRP_CRP_WAREHOUSES_DTLS
             WHERE     WH_POSITION IN (0, 2)                    --Inside FRONT
         EXCEPTION
         END;
         BEGIN
            SELECT DISTINCT 1
              FROM mrp_crp_warehouses_dtls
             WHERE     wh_position IN (2, 1)                     --Inside BACK
         EXCEPTION
         END;
         BEGIN
            SELECT DISTINCT 1
              FROM mrp_crp_warehouses_dtls
             WHERE     wh_position IN (2, 1, 0)            --Inside BACK front
         EXCEPTION
         END;
   This Procedure called to approved in sfc ,mps screen
PROCEDURE approve_trn ( trn_type      NUMBER,          
  Vgnprmrp_sfc_inv_off_on    MRP_SGS_GENERAL_PARAMETARS.MRP_SFC_INV_OFF_ON%TYPE        := GNR_PKG.FNC_GET_PRMTR_VAL (vcmp_no,vbrn_no,'MRP_SFC_INV_OFF_ON');        --  The order from onyx or get what you order 1 -- from order 0 - from onyx
       BEGIN
       END;
                                 BEGIN
                                        UPDATE MRP_SFC_MATERIALS_REQUEST_MSTR
                                         WHERE     cmp_no = vcmp_no
                                 EXCEPTION       WHEN OTHERS  THEN  raise_application_error (-20009, SQLERRM);
                                 END;
                                 BEGIN
                                 END;*/
                              BEGIN
                                 BEGIN--There is Receive done to this request
                                     SELECT NVL (COUNT ( * ), 0)
                                      FROM  MRP_SFC_MATERIALS_RECEIVE_MSTR
                                     WHERE    mr_order = trn_code
                                 EXCEPTION  WHEN NO_DATA_FOUND      THEN
                              END;
                             IF VRECCNT = 0   THEN --    update   app_usr = NULL,  app_date = NULL          in     MRP_SFC_MATERIALS_REQUEST_MSTR   
                                  BEGIN
                                       UPDATE MRP_SFC_MATERIALS_REQUEST_MSTR
                                     WHERE   cmp_no = vcmp_no
                                  EXCEPTION
                                 END;
                                                      --There is Recive Transaction For This Reques So You Cant Update It.....
                              END;
                          SELECT cmp_no,  brn_no, mrc_sq,mrc_d_sq, item_code,qty, qty_sent, qty_req,item_grand, g_qty,   wh_code,  wh_onyx,   cst, CRT_DATE, CRT_USR, up_date, UP_USR
                            FROM mrp_sfc_materials_receive_dtls
                           WHERE cmp_no = vcmp_no
                             AND EXISTS (SELECT 1 FROM MRP_CRP_ITEMS_DETAILS WHERE ITEM_CODE=mrp_sfc_materials_receive_dtls.ITEM_CODE AND PQC_CTR=0)  
                           ORDER BY mrc_d_sq;
                  BEGIN
                                   THEN        --          This Function return PQC Check For Receive items                          true if all item checked and all them good material                          
                                 BEGIN                                   -- check if threre is receive b4 this receive trans by check the date and those receives not approve                                    so you must approve those receive b4 current receive                                     
                                    SELECT NVL (COUNT ( * ), 0)
                                      FROM mrp_sfc_materials_receive_mstr
                                     WHERE     cmp_no = vcmp_no
                                       LOOP  --To Calculata the spent Qty from item in the same request b4 the                                          current receive and put it in the  qty_sent field for each item
                                                   BEGIN
                                                     SELECT NVL (SUM (b.qty), 0)
                                                       FROM mrp_sfc_materials_receive_mstr a,
                                                      WHERE     a.cmp_no = vcmp_no
                                                  EXCEPTION
                                                  END;
                                          UPDATE mrp_sfc_materials_receive_dtls
                                           WHERE cmp_no = c_dtl.cmp_no
                                       BEGIN
                                             UPDATE mrp_sfc_materials_request_dtls
                                              WHERE     cmp_no = vcmp_no
                                             IN (SELECT NVL (SUM (qty), 0)
                                                   FROM mrp_sfc_materials_request_dtls
                                                  WHERE     cmp_no = vcmp_no
                                             UPDATE MRP_SFC_MATERIALS_REQUEST_MSTR
                                              WHERE     cmp_no = vcmp_no
                                             UPDATE MRP_SFC_MATERIALS_REQUEST_MSTR
                                              WHERE     cmp_no = vcmp_no
                                          UPDATE mrp_sfc_materials_receive_mstr
                                           WHERE     cmp_no = vcmp_no
                                       END;
                                 END;
                              BEGIN
                                 SELECT NVL (COUNT ( * ), 0)
                                   FROM mrp_sfc_mater
                                  WHERE     cmp_no = vcmp_no
       SELECT NVL (SUM (qty), 0)
                                      FROM mrp_sfc_materials_receive_dtls
                                     WHERE     cmp_no = vcmp_no
                                       BEGIN
                                          SELECT NVL (SUM (b.qty), 0)
                                            FROM mrp_sfc_materials_receive_mstr a,
                                           WHERE     a.cmp_no = vcmp_no
                                       EXCEPTION
                                       END;
                                       UPDATE mrp_sfc_materials_receive_dtls
                                        WHERE     cmp_no = c_dtl.cmp_no
                                    BEGIN
                                          UPDATE mrp_sfc_materials_request_dtls
                                           WHERE     c
                                          IN (SELECT NVL (SUM (qty), 0)
                                                FROM mrp_sfc_materials_request_dtls
                                               WHERE     cmp_no = vcmp_no
                                          UPDATE MRP_SFC_MATERIALS_REQUEST_MSTR
                                           WHERE     cmp_no = vcmp_no
                                          UPDATE MRP_SFC_MATERIALS_REQUEST_MSTR
                                           WHERE     cmp_no = vcmp_no
                                       UPDATE mrp_sfc_materials_receive_mstr
                                        WHERE     cmp_no = vcmp_no
                                    END;
                              END;
                        BEGIN
                           SELECT NVL (COUNT ( * ), 0)
                             FROM mrp_sfc_materials_receive_mstr
                            WHERE     cmp_no = vcmp_no
                              BEGIN
                              EXCEPTION
                              END;
                                 SELECT NVL (COUNT ( * ), 0)
                                   FROM mrp_sfc_materials_receive_mstr
                                  WHERE     cmp_no = vcmp_no
                                          IN (SELECT cmp_no, brn_no, mropt_sq, item_code, qty_req, qty_rec, CRT_DATE, CRT_USR mr_sq, req_close
                                                FROM mrp_sfc_materials_request_opt
                                               WHERE     mr_sq = (vtrn_nob)
                                          UPDATE mrp_sfc_materials_request_dtls
                                           WHERE     cmp_no = vcmp_no
                                        WHERE     mr_sq = (vtrn_nob)
                                    UPDATE mrp_sfc_materials_receive_dtls
                                     WHERE     cmp_no = c_dtl.cmp_no
                                 UPDATE MRP_SFC_MATERIALS_REQUEST_MSTR
                                  WHERE     cmp_no = vcmp_no
                                 UPDATE mrp_sfc_materials_receive_mstr
                                  WHERE     cmp_no = vcmp_no
                                    UPDATE mrp_sfc_materials_request_dtls
                                     WHERE     cmp_no = vcmp_no
                        END;
                  END;
         BEGIN
                  /*UPDATE  9-10-2010*/
                     BEGIN
                        SELECT NVL (COUNT ( * ), 0)
                          FROM mrp_sfc_wip_master
                         WHERE     cmp_no = vcmp_no
                               BEGIN
                                                                         SELECT 1 INTO V_CNT FROM MRP_SFC_WIP_MASTER_YIELD
                                                                         WHERE  SF_SEQ   = trn_no AND
                                                                        EXCEPTION WHEN OTHERS THEN V_CNT := 0;  
                                                                    END;
                                  This Function return PQC Check For Receive items or Wip Card
                                 UPDATE mrp_sfc_wip_master
                                  WHERE     cmp_no = vcmp_no
                              UPDATE mrp_sfc_wip_master
                               WHERE     cmp_no = vcmp_no
                     END;
                     BEGIN
                     END;
                  BEGIN
                     SELECT NVL (COUNT ( * ), 0)
                       FROM mrp_sfc_wip_master
                      WHERE     cmp_no = vcmp_no
                        UPDATE mrp_sfc_wip_master
                         WHERE     cmp_no = vcmp_no
                  END;
         END;
                       BEGIN
                    SELECT NVL (COUNT ( * ), 0)
                        FROM mrp_sfc_materials_transmt_mstr
                       WHERE     cmp_no = vcmp_no
                         UPDATE mrp_sfc_materials_transmt_mstr
                          WHERE     cmp_no = vcmp_no
                   END;
                BEGIN
                   SELECT NVL (COUNT ( * ), 0)
                     FROM mrp_sfc_materials_transmt_mstr
                    WHERE     cmp_no = vcmp_no
                              BEGIN
                                 V_ONYX_TRN := NVL(MRP_PKG.RUN_SELECT('SELECT 1 FROM Gr_Note WHERE BRN_NO = '||vbrn_no||' AND PI_TYPE= 5 AND  Mrp_Mt_Sq = '||trn_no||' AND Nvl(Mrp_Mt_Type,0) = '||vmt_type|| ' AND ROWNUM<=1' ),0);
                                 SELECT NVL (onx_flg, 0)
                                   FROM mrp_sfc_materials_transmt_mstr
                                  WHERE     cmp_no = vcmp_no
                              EXCEPTION
                              END;
                                    UPDATE mrp_sfc_materials_transmt_mstr
                                     WHERE     cmp_no = vcmp_no
                END;
         BEGIN
                        SELECT m.fdate,                                  m.tdate,                                  d.cmp_no,                                  d.brn_no,                                  d.inv_seq,                                  inv_d_seq,                                  wh_code,                                  item_code,                                  mrp_item_code,                                  g_qty,                                  b_qty,                                  r_qty,                                  i_qty,                                  e_qty,                                  a_qty,                                  n_qty
                          FROM mrp_sfc_wip_inventory_dtls d,
                         WHERE     d.cmp_no = vcmp_no
                  BEGIN
                        UPDATE mrp_sfc_wip_inventory_mstr
                         WHERE     cmp_no = vcmp_no
                  END;
                  UPDATE mrp_sfc_wip_inventory_mstr
                   WHERE     cmp_no = vcmp_no
         END;
            BEGIN
              SELECT NVL (COUNT ( * ), 0)
                FROM mrp_sfc_wip_adjustment_mstr
               WHERE     cmp_no = vcmp_no
                 UPDATE mrp_sfc_wip_adjustment_mstr
                  WHERE     cmp_no = vcmp_no
            END;
             SELECT NVL (COUNT ( * ), 0)
               FROM mrp_sfc_wip_adjustment_mstr
              WHERE     cmp_no = vcmp_no
                UPDATE mrp_sfc_wip_adjustment_mstr
                 WHERE     cmp_no = vcmp_no
         BEGIN
                        BEGIN
                           UPDATE mrp_crp_bd_mst
                            WHERE     cmp_no = vcmp_no
                        END;
                     BEGIN
                        UPDATE mrp_crp_bd_mst
                         WHERE     cmp_no = vcmp_no
                     END;
         END;
            UPDATE mrp_mps_work_ordr_mstr
             WHERE     cmp_no = vcmp_no
               UPDATE mrp_mps_work_ordr_mstr
                WHERE     cmp_no = vcmp_no
               UPDATE mrp_sfc_sp_mstr
                WHERE     cmp_no = vcmp_no
             UPDATE mrp_sfc_sp_mstr
              WHERE     cmp_no = vcmp_no
           UPDATE mrp_sfc_re_mstr
            WHERE cmp_no = vcmp_no
           UPDATE mrp_sfc_re_mstr
            WHERE     cmp_no = vcmp_no
   FUNCTION chk_batches_found (vcmp_no NUMBER, vbrn_no NUMBER, wo VARCHAR2)
         SELECT cmp_no,
           FROM mrp_mps_work_ordr_dtls
          WHERE     mrp_mps_work_ordr_dtls.cmp_no = vcmp_no
   BEGIN
         BEGIN
            SELECT DISTINCT 1
              FROM mrp_mps_batches
             WHERE     mrp_mps_batches.cmp_no = i.cmp_no
         EXCEPTION
         END;
   END;
   FUNCTION get_previos_adjorinvsheet (vcmp_no     NUMBER,                                       vbrn_no     NUMBER,                                       vf_date     DATE,                                       vt_date     DATE,                                       vitem       VARCHAR2,                                       vwh_code    VARCHAR2,                                       vinv_seq    NUMBER)      RETURN BOOLEAN
   BEGIN
      SELECT 1
        FROM mrp_sfc_wip_inventory_mstr m, mrp_sfc_wip_inventory_dtls d    --,
       WHERE     m.cmp_no = m.cmp_no
   EXCEPTION
   END;
   to update stop in card
   PROCEDURE update_stoping_in_card (procapp_unapp    NUMBER,cmp NUMBER,         brn              NUMBER,                 shf              NUMBER,                   stopno           NUMBER)
         SELECT work_order,
           FROM mrp_crp_bd_lnstgop
          WHERE     cmp_no = cmp
           SELECT SUM (tot) totsum,
             FROM mrp_crp_bd_rcrd d, mrp_crp_bd_lnstgop m
            WHERE     m.cmp_no = cmp
         GROUP BY DECODE (groupby, 0, m.stg_code, m.job_code),
         SELECT m.sf_seq
           FROM mrp_sfc_wip_master m
          WHERE     m.cmp_no = cmp
   BEGIN
               UPDATE mrp_sfc_wip_master_stg stg
                WHERE     cmp_no = cmp
               UPDATE mrp_sfc_wip_master_job
                WHERE     cmp_no = cmp
   END;
   This Function return PQC Check For Receive items
FUNCTION FNC_CHK_PQC_NOT_STS (P_CMP      S_CMPNY.CMP_NO%TYPE,
   BEGIN
      BEGIN
         SELECT STATUS            --   cheeck status  -- 0 not post yet   1 it is posted
           FROM MRP_SFC_PQC_NOTEM           --
          WHERE 
      EXCEPTION
      END;
         BEGIN
            SELECT  1
              FROM mrp_sfc_pqc_noted
             WHERE     item_status != 0
            EXCEPTION WHEN OTHERS THEN
   END;
   this procedure return found_=1 if there is card in same time of stoping
   PROCEDURE get_card_in_time (cmp          NUMBER,
         SELECT m.work_order,
           FROM mrp_crp_bd_rcrd d, mrp_crp_bd_lnstgop m
          WHERE     m.cmp_no = cmp
   BEGIN
            BEGIN
               SELECT 1,
                 FROM mrp_sfc_wip_master
                WHERE     mrp_sfc_wip_master.cmp_no = cmp
            EXCEPTION
            END;
   END;
   FUNCTION is_adj_done_to_inv (vinv_seq    VARCHAR2,
   BEGIN
      SELECT 1
        FROM mrp_sfc_wip_inventory_mstr m,
       WHERE     m.cmp_no = m1.cmp_no
   EXCEPTION
   END;
   FUNCTION get_result (sel IN VARCHAR2)
   BEGIN
   EXCEPTION
   END;
   PROCEDURE get_yy_mm_w_dd_fromdate (indate       DATE,
   BEGIN
      SELECT TO_CHAR (indate, 'YY'),
        FROM DUAL;
   EXCEPTION
   END;
   this Procedure return the formate of transaction by tran type and trans date
   PROCEDURE PRC_SET_FRMT (P_CMP       S_CMPNY.CMP_NO%TYPE  ,P_BRN        S_BRN.BRN_NO%TYPE         , P_TRN_TYP NUMBER        ,
   BEGIN
      BEGIN
         SELECT DECODE (P_TRN_TYP,
           FROM DUAL;
      END;
      BEGIN
         SELECT DECODE (P_TRN_TYP,
           FROM DUAL;
      END;
      BEGIN
         SELECT DECODE (P_TRN_TYP,
           FROM DUAL;
      END;
            TO_NUMBER(get_result(   'SELECT Count(*) From  '
                                 || ' where BRN_NO = '||P_BRN || ' AND '
               get_result(   'SELECT LPAD(MAX(SUBSTR('
                          || ')  From   '
                          || ' where BRN_NO = '||P_BRN || ' AND '
            TO_NUMBER(get_result(   'SELECT Count(*) From   '
                                 || ' where BRN_NO = '||P_BRN || ' AND '
               get_result(   'SELECT LPAD(MAX(SUBSTR('
                          || ')  From  '
                          || ' where BRN_NO = '||P_BRN || ' AND '
            TO_NUMBER(get_result(   'SELECT Count(*) From   '
                                 || ' where BRN_NO = '||P_BRN || ' AND '
               get_result(   'SELECT LPAD(MAX(SUBSTR('
                          || ')  From   '
                          || ' where BRN_NO = '||P_BRN || ' AND '
            TO_NUMBER(get_result(   'SELECT Count(*) From  '
                                 || ' where BRN_NO = '||P_BRN || ' AND '
               get_result(   'SELECT LPAD(MAX(SUBSTR('
                          || ')  From   '
                          || ' where BRN_NO = '||P_BRN || ' AND '
   END;
   FUNCTION check_opt_qty (
   BEGIN
      SELECT qty, mropt_sq
        FROM mrp_sfc_request_opt_qty
       WHERE item_code = vitem_code AND cmp_no = vcmp_no AND brn_no = vbrn_no;
   EXCEPTION
   END;
   this procedure insert into  mrp_sfc_materials_request_opt table
   PROCEDURE insert_opt (
   BEGIN
      SELECT NVL (MAX (mropt_sq), 0) + 1
        FROM mrp_sfc_materials_request_opt
       WHERE cmp_no = vcmp_no AND brn_no = vbrn_no;
      INSERT INTO mrp_sfc_materials_request_opt (cmp_no,
   END;
   PROCEDURE chk_item_in_request_sfc_found (
         SELECT qty,
           FROM mrp_sfc_materials_request_dtls d,
         SELECT qty,
           FROM mrp_sfc_materials_request_dtls d,
          WHERE     d.cmp_no = vcmp_no
         SELECT qty,
           FROM mrp_sfc_materials_receive_dtls d,
          WHERE     d.cmp_no = vcmp_no
         SELECT qty,
           FROM mrp_sfc_materials_receive_dtls d,
          WHERE     d.cmp_no = vcmp_no
                         (SELECT d.item_code
                            FROM mrp_sfc_materials_request_dtls d,
                           WHERE     d.cmp_no = vcmp_no
         SELECT DISTINCT item_option, offset
           FROM mrp_crp_items_class_options
          WHERE mrp_item_code IN (SELECT mrp_item_code
                                    FROM mrp_crp_items_class_options
                                   WHERE item_option = vitem_option)
                         (SELECT item_code
                            FROM mrp_sfc_materials_request_opt
                           WHERE     cmp_no = vcmp_no
   BEGIN
               UPDATE mrp_sfc_materials_request_opt
                WHERE     mropt_sq = vmropt_sq2
            UPDATE mrp_sfc_materials_request_opt
             WHERE     mropt_sq = vmropt_sq2
             WHERE     item_code = l.item_code
         IN (  SELECT SUM (qty_rec) qty_rec, mr_item_sq, item_code
                 FROM mrp_sfc_materials_request_opt
                WHERE     mr_sq = (vmr_sq)
             GROUP BY item_code, mr_item_sq)
         UPDATE mrp_sfc_materials_request_dtls
          WHERE     cmp_no = vcmp_no
   EXCEPTION
   END;
   PROCEDURE insert_update_op_qty (
   BEGIN
         BEGIN
            SELECT 1
              FROM mrp_sfc_request_opt_qty
             WHERE     item_code = vitem_code
         EXCEPTION
               INSERT INTO mrp_sfc_request_opt_qty (cmp_no,
         END;
         UPDATE mrp_sfc_request_opt_qty
          WHERE     item_code = vitem_code
      BEGIN
         SELECT qty
           FROM mrp_sfc_request_opt_qty
          WHERE     item_code = vitem_code
             WHERE     item_code = vitem_code
      EXCEPTION
      END;
   END;
   This  procedure update  the salse quantity of items in production Plan from sales table Onyx System
   PROCEDURE update_actual_seales (
   /*last Update 10-8-2009 Sawsan Anwar */
   BEGIN
         IN (SELECT mrp_mps_cmpny_pln_mstr.cmp_no,
               FROM mrp_mps_cmpny_pln_items,
              WHERE mrp_mps_cmpny_pln_items.plan_no =
            BEGIN
              Select Qty from Bill tables */
               SELECT  SUM(NVL(D.I_QTY,0)) INTO actual_qty1
    FROM  IAS_BILL_MST  M, IAS_BILL_DTL  D  
WHERE M.BILL_SER  =D.BILL_SER
GROUP BY D.I_CODE ,TO_CHAR(M.BILL_DATE ,'MM');
            EXCEPTION
            END;
            /*UPDATE THE SEALSE QTY IN SALES PLANE */
            UPDATE mrp_mps_cmpny_pln_items --Plan ites table 
             WHERE     item_code = i.item_code
   EXCEPTION
   END;
   this Function will return messgae by message no ,message code from general message table
   FUNCTION mrp_func_get_mrp_msg (v_msg_code    IAS_SYS.MRP_msgs.msg_code%TYPE,
   BEGIN
      SELECT msg_text
        FROM IAS_SYS.MRP_msgs
       WHERE msg_code = v_msg_code AND msg_num = v_msg_num AND lang_no = 1;
   EXCEPTION
   END;
FUNCTION chk_batches_found (vcmp_no NUMBER, vbrn_no NUMBER, wo VARCHAR2) RETURN BOOLEAN;
This Function return true if there is item in inventory dtls for specific inventory
--FUNCTION found_dtl (vcmp_no NUMBER, vbrn_no NUMBER, trn_no NUMBER)      RETURN BOOLEAN;
   FUNCTION get_previos_adjorinvsheet (      vcmp_no    NUMBER,      vbrn_no    NUMBER,      vf_date    DATE,      vt_date    DATE,      vitem      VARCHAR2,      vwh_code   VARCHAR2,      vinv_seq   NUMBER   )  
CREATE OR REPLACE PACKAGE GNR_PKG AS
  FUNCTION FNC_USR_NM (P_USR_NO USER_R.U_ID%TYPE, P_LANG NUMBER) RETURN VARCHAR2;
  FUNCTION FNC_MCHN_SHFTS_HRS(P_CMP_NO  NUMBER   , P_BRN_NO NUMBER , P_SHF_CODE MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_RCE_SER MRP_CRP_RESOURCES.RCE_SER%TYPE) RETURN  NUMBER;  
  FUNCTION FNC_GET_TIME_HRS(FTIME DATE , TTIME DATE ) RETURN NUMBER;
  FUNCTION FNC_ONX_ITEM(P_CMP_NO NUMBER , P_BRN_NO NUMBER, P_ITEM_CODE VARCHAR2) RETURN  NUMBER ;
  FUNCTION FNC_DAY_OFF(P_CMP_NO  NUMBER   , P_BRN_NO NUMBER , P_DATE  DATE ) RETURN  NUMBER;
  FUNCTION FNC_SHFTS_HRS(P_CMP_NO  NUMBER   , P_BRN_NO NUMBER , P_SHF_CODE MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE) RETURN  NUMBER;
  FUNCTION FNC_GET_ITEM_TYPE(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  NUMBER;
  FUNCTION FNC_MRP_BRN_NO(P_ONX_USR VARCHAR2 , P_ONX_BRN NUMBER) RETURN  NUMBER;
  FUNCTION FNC_Item_PQC_CTRL(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  NUMBER; 
  FUNCTION FNC_is_Item_class_option(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  BOOLEAN ;
  FUNCTION FNC_Item_USE_BATCH(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  BOOLEAN;
  FUNCTION FNC_Get_Item_lotsize(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  NUMBER;
  FUNCTION FNC_GET_PRMTR_VAL (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_FLD VARCHAR2 ) RETURN VARCHAR2 ;
  FUNCTION FNC_GET_BOM_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_BOM MRP_BOM_BOM_MSTR.BOM_CODE%TYPE) RETURN VARCHAR2; 
  FUNCTION FNC_GET_ITM_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_ITM MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GET_UOM_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_ITM MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN VARCHAR2; 
  FUNCTION FNC_GET_BMOTHD_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_BM MRP_BOM_BOM_METHOD.BM_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GET_LAB_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_LAB MRP_CRP_LABORS_CODING.LAB_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GET_SHF_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GET_WH_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_WH_CODE MRP_CRP_WAREHOUSES_MSTR.WH_CODE%TYPE) RETURN VARCHAR2 ;
  FUNCTION FNC_GET_LN_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE, P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GET_STG_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG IN  MRP_SGS_STAGES_CODING.STG_CODE%TYPE ) RETURN VARCHAR2;
  FUNCTION FNC_GET
  FUNCTION FNC_GET_JOB_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG MRP_SGS_STAGES_CODING.STG_CODE%TYPE, P_JOB IN MRP_CRP_OPERATIONS_JOBS.JOB_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GET_UOM_JOB (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG MRP_SGS_STAGES_CODING.STG_CODE%TYPE, P_JOB IN MRP_CRP_OPERATIONS_JOBS.JOB_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GET_RCE_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG IN  MRP_SGS_STAGES_CODING.STG_CODE%TYPE DEFAULT NULL ,P_JOB IN MRP_CRP_OPERATIONS_JOBS.JOB_CODE%TYPE DEFAULT NULL,P_RCE_SER MRP_CRP_RESOURCES.RCE_SER%TYPE) RETURN VARCHAR2 ;
  PROCEDURE PRC_DEL_TEMP(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE, P_USR MRP_MRP_BOM_ROW_TEMP.USR_NAME%TYPE);
  FUNCTION FNC_SET_TRMNLUSR RETURN VARCHAR2 ;
  FUNCTION FNC_CMP_ADESC (P_CMP S_CMPNY.CMP_NO%TYPE ) RETURN VARCHAR2;
  FUNCTION FNC_CMP_EDESC (P_CMP S_CMPNY.CMP_NO%TYPE ) RETURN VARCHAR2;
  FUNCTION FNC_BRN_ADESC (P_CMP S_CMPNY.CMP_NO%TYPE ,P_BRN S_BRN.BRN_NO%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_BRN_EDESC (P_CMP S_CMPNY.CMP_NO%TYPE ,P_BRN S_BRN.BRN_NO%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GET_LABEL(LBLNO NUMBER,LNGNO NUMBER ) RETURN VARCHAR2 ;
  PROCEDURE PRC_UPDT_ITM_DTD_FROM_ONYX(P_CMP S_CMPNY.CMP_NO%TYPE ,P_BRN S_BRN.BRN_NO%TYPE);
  FUNCTION FNC_MULTI_BOM(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_ITM MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN NUMBER;
  FUNCTION FNC_RSON_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_RS MRP_CRP_SCRAP_RSON_COD.SR_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_GRP_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_GRP MRP_CRP_RESCOURCES_GRP.GRP_UP%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_LBR_SKLL_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_LS MRP_CRP_LABORS_SKILL.LS_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_BDD_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_BDD MRP_CRP_BRKDOWN_RESON.BDD_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_UOM_COST_DSC(P_LANG LANG_DEF.LANG_NO%TYPE,P_UOM VARCHAR2) RETURN VARCHAR2;
  FUNCTION FNC_ITM_CLS_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_CLS MRP_CRP_ITEMS_CLASS.ITEMS_CLAS%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_PRC_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_PRC MRP_PQM_PROCEDURES.PROC_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_HOLD_RSN_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_HLD MRP_PQC_HOLD_REASONS.RES_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_FLG_DSC(P_LANG LANG_DEF.LANG_NO%TYPE,P_FLG_CODE    IAS_SYS.MRP_FLAGS.FLG_CODE%TYPE,P_FLG_VALUE IAS_SYS.MRP_FLAGS.FLG_VALUE%TYPE   ) RETURN VARCHAR2;
  FUNCTION FNC_SHFT_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE,P_SHIFT_CODE MRP_SGS_SHIFTS_MAST.SHIFT_CODE%TYPE   ) RETURN VARCHAR2;
  FUNCTION FNC_GET_CUST_ID(P_CMP S_CMPNY.CMP_NO%TYPE, 
  FUNCTION FNC_GET_CUST_NM(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG NUMBER,P_CUST_ID VARCHAR  ) RETURN VARCHAR2 ;
  PROCEDURE PRC_GET_MAT_BOM (P_CMP   S_CMPNY.CMP_NO%TYPE ,P_BRN  S_BRN.BRN_NO%TYPE , P_L
  FUNCTION    FNC_CHK_ITM_DEF_IN_MRP( P_CMP  S_CMPNY.CMP_NO%TYPE    ,  P_BRN          S_BRN.BRN_NO%TYPE       ,   P_ITM         MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE ,         P_MSG_NO       OUT NUMBER  ) RETURN BOOLEAN  ;
  FUNCTION FNC_CLS_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_PQC_PROC_CLASSES.SHF_CODE%TYPE,P_CLS MRP_PQC_PROC_CLASSES.CLS_CODE%TYPE) RETURN VARCHAR2;
  FUNCTION FNC_CHK_REC_HAVE_ALL_SHIFT (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_RCE_SER MRP_CRP_RESOURCES.RCE_SER%TYPE) RETURN NUMBER;
  FUNCTION FNC_RUN_SEL(P_SEL VARCHAR2) RETURN VARCHAR2;
  FUNCTION FNC_GET_ACTV_YER(P_CMP_NO NUMBER, P_BRN_NO NUMBER) RETURN NUMBER;
  /* Procedure Added By Mohammad Ali Allaw  03/01/2016.  To Get INV_I_CODE , UNIT Of An Item */
  PROCEDURE PRC_GET_ITEM_INV_DATA (P_ITM_CODE   IN  VARCHAR2, 
  FUNCTION GET_ITM_QTY (P_ITM_CODE  VARCHAR2) RETURN NUMBER;
  FUNCTION GET_ITM_SIZE (P_ITM_CODE  VARCHAR2) RETURN NUMBER;
  FUNCTION PRC_GET_ITEM_CODE (P_BRN_NO NUMBER, P_INV_I_CODE IN  VARCHAR2, P_UNIT_CODE IN  VARCHAR2) RETURN VARCHAR2;
  FUNCTION GET_ITM_CST(P_WTAVG_TYPE NUMBER, P_ITM_CODE VARCHAR2, P_W_CODE NUMBER DEFAULT NULL) RETURN NUMBER;
CREATE OR REPLACE PACKAGE BODY GNR_PKG AS
     FUNCTION FNC_USR_NM (P_USR_NO USER_R.U_ID%TYPE, P_LANG NUMBER) RETURN VARCHAR2 IS
      BEGIN
           SELECT DECODE(P_LANG ,1,U_A_NAME, NVL(U_E_NAME,U_A_NAME) ) INTO V_USR_NAME
           FROM USER_R 
           WHERE U_ID = P_USR_NO
          EXCEPTION WHEN OTHERS THEN
     FUNCTION   FNC_MCHN_SHFTS_HRS(P_CMP_NO  NUMBER   , P_BRN_NO NUMBER , P_SHF_CODE MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_RCE_SER MRP_CRP_RESOURCES.RCE_SER%TYPE) RETURN  NUMBER IS
     BEGIN
              SELECT SUM(M.SHIFT_HRS) INTO V_HRS 
              FROM MRP_SGS_SHIFTS_MAST M 
              WHERE CMP_NO = P_CMP_NO        AND
                         ( SELECT SHF_CODE, SHIFT_CODE 
                            FROM MRP_CRP_RECE_SHIFTS 
                            WHERE CMP_NO = P_CMP_NO        AND
              EXCEPTION WHEN OTHERS THEN 
     FUNCTION  FNC_GET_TIME_HRS(FTIME DATE , TTIME DATE ) RETURN NUMBER IS
         BEGIN
                             EXCEPTION WHEN OTHERS THEN
     FUNCTION FNC_ONX_ITEM(P_CMP_NO NUMBER , P_BRN_NO NUMBER, P_ITEM_CODE VARCHAR2) RETURN  NUMBER IS
     BEGIN
       BEGIN
          SELECT 1 INTO V_CNT FROM IAS_V_ITM_UNT
           WHERE I_CODE  = V_INV_I_CODE
           Exception When Others Then
       Exception When Others Then     
     FUNCTION   FNC_DAY_OFF(P_CMP_NO  NUMBER   , P_BRN_NO NUMBER , P_DATE  DATE ) RETURN  NUMBER IS
       BEGIN
            FOR I IN ( SELECT 
            FROM MRP_SGS_SCHDUL_CLNDR_MSTR
            WHERE CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO  AND 
                  YER_CODE IN ( SELECT YER_CODE FROM MRP_YEAR WHERE P_CNTU = 0 AND P_CLS = 0  AND CMP_NO = P_CMP_NO AND BRN_NO =  P_BRN_NO)
          SELECT COUNT(*) INTO V_RET
          FROM MRP_SGS_SCHDUL_CLNDR_DTLS
          WHERE BRN_NO = P_BRN_NO AND P_DATE BETWEEN FRM_DATE AND TO_DATE AND ROWNUM<=1;
      EXCEPTION WHEN OTHERS THEN
   FUNCTION   FNC_SHFTS_HRS(P_CMP_NO  NUMBER   , P_BRN_NO NUMBER , P_SHF_CODE MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE) RETURN  NUMBER IS
     BEGIN
              SELECT SUM(M.SHIFT_HRS) INTO V_HRS 
              FROM MRP_SGS_SHIFTS_MAST M 
              WHERE CMP_NO = P_CMP_NO        AND
              EXCEPTION WHEN OTHERS THEN 
   FUNCTION FNC_GET_ITEM_TYPE(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  NUMBER IS
      Begin
             Select COUNT(*) into v_cnt
             From MRP_CRP_ITEMS_CATEGORY
             Where  CMP_NO = P_CMP
    /* THIS FUNCTION CREATED FOR USE ONLY IN ONYX SCHEMA IN OUTGOING AND INCOMING SCREEN ONLY*/
   FUNCTION FNC_MRP_BRN_NO(P_ONX_USR VARCHAR2 , P_ONX_BRN NUMBER) RETURN  NUMBER IS
   BEGIN
              /* BEGIN
                   V_SLCT :=   'SELECT  BRN_NO FROM MRP_PCM_MRP_ONX_BRNCH WHERE BRANCH_USER = '''||P_ONX_USR ||
                   Exception When Others Then
          Exception When Others Then     
   FUNCTION FNC_Item_PQC_CTRL(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  NUMBER IS
      BEGIN
              Select PQC_CTR into V_PQC_CTR
              From MRP_CRP_ITEMS_DETAILS
             Where CMP_NO = P_CMP
               EXCEPTION WHEN OTHERS THEN -- NO PQC CTRL 
      END;
   FUNCTION FNC_is_Item_class_option(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  BOOLEAN IS
      Begin
             Select 1 into v_ctgr
             From MRP_CRP_ITEMS_CATEGORY
             Where CMP_NO = P_CMP
               EXCEPTION WHEN OTHERS THEN
   FUNCTION FNC_Item_USE_BATCH(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  BOOLEAN IS
      Begin
             Select BACH_USE into v_BACH_USE
             From MRP_CRP_ITEMS_DETAILS
             Where CMP_NO = P_CMP
               EXCEPTION WHEN OTHERS THEN
   FUNCTION FNC_Get_Item_lotsize(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_Item_code MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN  NUMBER IS
      Begin
             Select LOTSIZE into v_lot
             From MRP_CRP_ITEMS_DETAILS
             Where CMP_NO = P_CMP
               EXCEPTION WHEN OTHERS THEN
   FUNCTION FNC_GET_PRMTR_VAL(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_FLD VARCHAR2 ) RETURN VARCHAR2 IS
   BEGIN
      EXECUTE IMMEDIATE    'SELECT '|| P_FLD || '  FROM  MRP_SGS_GENERAL_PARAMETARS WHERE CMP_NO = '||P_CMP || ' AND BRN_NO ='|| P_BRN INTO RESULT;
   EXCEPTION
  FUNCTION FNC_GET_BOM_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_BOM MRP_BOM_BOM_MSTR.BOM_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
      SELECT DECODE(P_LANG,1,BOM_NAME_A,NVL(BOM_NAME_F,BOM_NAME_A) )
      FROM   MRP_BOM_BOM_MSTR
      WHERE  BOM_CODE = P_BOM
      EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_ITM_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_ITM MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN VARCHAR2 IS 
  BEGIN
      SELECT DECODE(P_LANG,1,ITEM_NAME_A,NVL(ITEM_NAME_F,ITEM_NAME_A) )
      FROM   MRP_CRP_ITEMS_DETAILS
      WHERE  ITEM_CODE = P_ITM
      EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_UOM_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_ITM MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
      SELECT UNIT_CODE
      FROM   MRP_CRP_ITEMS_DETAILS 
      WHERE  ITEM_CODE = P_ITM
      EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_BMOTHD_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_BM MRP_BOM_BOM_METHOD.BM_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
     SELECT DECODE(P_LANG,1,BM_NAME_A,NVL(BM_NAME_F,BM_NAME_A) ) BM_NAME
     FROM   MRP_BOM_BOM_METHOD
     WHERE  CMP_NO  = P_CMP
     EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_LAB_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_LAB MRP_CRP_LABORS_CODING.LAB_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
     SELECT DECODE(P_LANG,1,LAB_NAME_A,NVL(LAB_NAME_F,LAB_NAME_A) )
     FROM   MRP_CRP_LABOR
     WHERE  CMP_NO  = P_CMP
     EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_SHF_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
    SELECT DECODE(P_LANG,1,SHF_NAME_A ,NVL(SHF_NAME_F,SHF_NAME_A) )
    FROM   MRP_SGS_SHOPS_FLOOR_CODING
    WHERE  CMP_NO   = P
    EXCEPTION WHEN NO_DATA_FOUND THEN
   FUNCTION FNC_GET_WH_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_WH_CODE MRP_CRP_WAREHOUSES_MSTR.WH_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
    SELECT DECODE(P_LANG,1,WH_NAME_A,NVL(WH_NAME_F,WH_NAME_A) )
    FROM   MRP_CRP_WAREHOUSES_MSTR
    WHERE  CMP_NO   = P_CMP
    EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_LN_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE, P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
    SELECT DECODE(P_LANG,1, LN_NAME_A, NVL(LN_NAME_F,LN_NAME_A) )
    FROM   MRP_SGS_LINES_CODING
    WHERE  CMP_NO   = P_CMP
    EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_STG_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG IN  MRP_SGS_STAGES_CODING.STG_CODE%TYPE ) RETURN VARCHAR2 IS
  BEGIN
    SELECT DECODE(P_LANG,1,STG_NAME_A,NVL(STG_NAME_F,STG_NAME_A) )
    FROM   MRP_SGS_STAGES_CODING A , MRP_SGS_STAGES_DEFINITION B
    WHERE  A.CMP_NO   = P_CMP
    EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_UOM_STG (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG IN  MRP_SGS_STAGES_CODING.STG_CODE%TYPE ) RETURN VARCHAR2 IS
  BEGIN
    SELECT A.UNIT_CODE
    FROM   MRP_SGS_STAGES_CODING A 
    WHERE  A.CMP_NO   = P_CMP
    EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_JOB_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG MRP_SGS_STAGES_CODING.STG_CODE%TYPE, P_JOB IN MRP_CRP_OPERATIONS_JOBS.JOB_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
    SELECT  DECODE(P_LANG,1,JOB_NAME_A,NVL(JOB_NAME_F,JOB_NAME_A) )
    FROM    MRP_CRP_OPERATIONS_JOBS
    WHERE   CMP_NO    = P_CMP
    EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_UOM_JOB (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG MRP_SGS_STAGES_CODING.STG_CODE%TYPE, P_JOB IN MRP_CRP_OPERATIONS_JOBS.JOB_CODE%TYPE) RETURN VARCHAR2 IS
  BEGIN
    SELECT  UNIT_CODE
    FROM    MRP_CRP_OPERATIONS_JOBS
    WHERE   CMP_NO    = P_CMP
    EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_GET_RCE_DSC (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE, P_LN MRP_SGS_LINES_CODING.LN_CODE%TYPE,P_STG IN  MRP_SGS_STAGES_CODING.STG_CODE%TYPE DEFAULT NULL ,P_JOB IN MRP_CRP_OPERATIONS_JOBS.JOB_CODE%TYPE DEFAULT NULL,P_RCE_SER MRP_CRP_RESOURCES.RCE_SER%TYPE) RETURN VARCHAR2 IS
  BEGIN
    SELECT DISTINCT 
    FROM   MRP_CRP_RESOURCES M, MRP_CRP_RESOURCES_LOC D 
    WHERE  M.CMP_NO   = P_CMP
    EXCEPTION WHEN NO_DATA_FOUND THEN
  PROCEDURE PRC_DEL_TEMP(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE, P_USR MRP_MRP_BOM_ROW_TEMP.USR_NAME%TYPE) IS
  BEGIN
        DELETE FROM MRP_MRP_BOM_ROW_TEMP
        WHERE  USR_NAME = P_USR
        DELETE FROM MRP_MRP_SEIZED_MATERIALS
        WHERE  USR_NAME = P_USR
  END;
  FUNCTION FNC_SET_TRMNLUSR RETURN VARCHAR2 IS
  BEGIN
  END;
 FUNCTION FNC_CMP_ADESC (P_CMP S_CMPNY.CMP_NO%TYPE ) RETURN VARCHAR2 IS
      BEGIN
      SELECT CMP_LNAME
      FROM S_CMPNY 
      WHERE CMP_NO =P_CMP;
  EXCEPTION WHEN NO_DATA_FOUND THEN
 FUNCTION FNC_CMP_EDESC (P_CMP S_CMPNY.CMP_NO%TYPE ) RETURN VARCHAR2 IS
 BEGIN
      SELECT CMP_FNAME 
      FROM S_CMPNY 
      WHERE CMP_NO =P_CMP;
  EXCEPTION WHEN NO_DATA_FOUND THEN
  FUNCTION FNC_BRN_ADESC (P_CMP S_CMPNY.CMP_NO%TYPE ,P_BRN S_BRN.BRN_NO%TYPE) RETURN VARCHAR2 IS
      BEGIN
     SELECT CMP_LNAME
     FROM   S_BRN 
     WHERE  CMP_NO=P_CMP
  EXCEPTION WHEN NO_DATA_FOUND THEN
FUNCTION FNC_BRN_EDESC (P_CMP S_CMPNY.CMP_NO%TYPE ,P_BRN S_BRN.BRN_NO%TYPE) RETURN VARCHAR2 IS
      BEGIN
     SELECT CMP_FNAME
     FROM   S_BRN 
     WHERE  CMP_NO=P_CMP
  EXCEPTION WHEN NO_DATA_FOUND THEN
FUNCTION FNC_GET_LABEL(LBLNO NUMBER,LNGNO NUMBER ) RETURN VARCHAR2 IS
  BEGIN
        SELECT CAPTION_DET 
          FROM IAS_SYS.MRP_LABELS
         WHERE LABEL_NO= LBLNO 
  EXCEPTION WHEN OTHERS THEN 
PROCEDURE PRC_UPDT_ITM_DTD_FROM_ONYX(P_CMP S_CMPNY.CMP_NO%TYPE ,P_BRN S_BRN.BRN_NO%TYPE) IS
BEGIN                                                                         
        /*FOR I IN ( SELECT I_CODE,PRIMARY_COST,AVG_COST
                   FROM     VW_SFC_ITM_IN_ONX  
        UPDATE MRP_CRP_ITEMS_DETAILS
        SET    CST_BEGIN = I.PRIMARY_COST,
        WHERE  ITEM_CODE = I.I_CODE
FUNCTION FNC_MULTI_BOM(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_ITM MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE) RETURN NUMBER IS
  SELECT MULTI_BOM
  FROM   MRP_CRP_ITEMS_DETAILS
  WHERE  CMP_NO = P_CMP
  EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_RSON_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_RS MRP_CRP_SCRAP_RSON_COD.SR_CODE%TYPE) RETURN VARCHAR2 IS
    SELECT DECODE(P_LANG,1,SR_NAME_A,NVL(SR_NAME_F,SR_NAME_A) )
    FROM   MRP_CRP_SCRAP_RSON_COD
    WHERE  SR_CODE = P_RS
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_GRP_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_GRP MRP_CRP_RESCOURCES_GRP.GRP_UP%TYPE) RETURN VARCHAR2 IS
    SELECT DECODE(P_LANG,1,GRP_ADES,NVL(GRP_EDES,GRP_ADES) )
    FROM   MRP_CRP_RESCOURCES_GRP
    WHERE  GRP_NO = P_GRP
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_LBR_SKLL_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_LS MRP_CRP_LABORS_SKILL.LS_CODE%TYPE) RETURN VARCHAR2 IS
    SELECT DECODE(P_LANG,1,LS_NAME_A,NVL(LS_NAME_F,LS_NAME_A) )
    FROM   MRP_CRP_LABORS_SKILL
    WHERE  LS_CODE = P_LS
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_BDD_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_BDD MRP_CRP_B
    SELECT DECODE(P_LANG,1,BDD_NAME_A,NVL(BDD_NAME_F,BDD_NAME_A) )
    FROM   MRP_CRP_BRKDOWN_RESON
    WHERE  BDD_CODE = P_BDD
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_UOM_COST_DSC(P_LANG LANG_DEF.LANG_NO%TYPE,P_UOM VARCHAR2) RETURN VARCHAR2 IS
    SELECT MEASURE
    FROM   MEASUREMENT
    WHERE  MEASURE_CODE = P_UOM;
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_ITM_CLS_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_CLS MRP_CRP_ITEMS_CLASS.ITEMS_CLAS%TYPE) RETURN VARCHAR2 IS
    SELECT DECODE(P_LANG,1,CLAS_DESC_A,NVL(CLAS_DESC_F,CLAS_DESC_A) )
    FROM   MRP_CRP_ITEMS_CLASS
    WHERE  ITEMS_CLAS = P_CLS
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_PRC_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_PRC MRP_PQM_PROCEDURES.PROC_CODE%TYPE) RETURN VARCHAR2 IS
  PRC_DSC MRP_PQM_PROCEDURES.PROC_DESC_A%TYPE;
    SELECT DECODE(P_LANG,1,PROC_DESC_A,NVL(PROC_DESC_F,PROC_DESC_A) )
    FROM   MRP_PQM_PROCEDURES
    WHERE  PROC_CODE = P_PRC
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_HOLD_RSN_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_HLD MRP_PQC_HOLD_REASONS.RES_CODE%TYPE) RETURN VARCHAR2 IS
    SELECT DECODE(P_LANG,1,RES_DESC_A,NVL(RES_DESC_F,RES_DESC_A))
    FROM   MRP_PQC_HOLD_REASONS
    WHERE  RES_CODE = P_HLD
    EXCEPTION WHEN OTHERS THEN
FUNCTION FNC_FLG_DSC(P_LANG LANG_DEF.LANG_NO%TYPE,P_FLG_CODE    IAS_SYS.MRP_FLAGS.FLG_CODE%TYPE,P_FLG_VALUE IAS_SYS.MRP_FLAGS.FLG_VALUE%TYPE   ) RETURN VARCHAR2 IS
    SELECT FLG_DESC
    FROM   IAS_SYS.MRP_FLAGS
    WHERE  FLG_CODE = P_FLG_CODE
    EXCEPTION WHEN OTHERS THEN
  FUNCTION FNC_SHFT_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_SGS_SHOPS_FLOOR_CODING.SHF_CODE%TYPE,P_SHIFT_CODE MRP_SGS_SHIFTS_MAST.SHIFT_CODE%TYPE   ) RETURN VARCHAR2
  BEGIN
                    SELECT DECODE(P_LANG,1,SHIFT_DETAILS_A,NVL(SHIFT_DETAILS_F,SHIFT_DETAILS_A) )
                    FROM  MRP_SGS_SHIFTS_MAST A
                    WHERE CMP_NO    =P_CMP
    EXCEPTION WHEN OTHERS THEN
  FUNCTION FNC_GET_CUST_ID(P_CMP S_CMPNY.CMP_NO%TYPE, 
   BEGIN
           SELECT CUST_ID INTO V_CUST_ID
           FROM MRP_MPS_CSTMR_ORDR_MSTR
           WHERE  CMP_NO     = P_CMP
   EXCEPTION
  FUNCTION FNC_GET_CUST_NM(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG NUMBER,P_CUST_ID VARCHAR ) RETURN VARCHAR2 IS
   BEGIN
      SELECT DECODE( P_LANG,1,C_A_NAME, nvl(C_E_NAME,C_A_NAME)) INTO RESULT FROM CUSTOMER
                                          WHERE C_CODE  =P_CUST_ID;
   EXCEPTION
PROCEDURE PRC_GET_MAT_BOM (P_CMP          S_CMPNY.CMP_NO%TYPE    ,
  SELECT   BOM_CODE   , DECODE(P_LANG,1,BOM_NAME_A,NVL(BOM_NAME_F,BOM_NAME_A) ) BOM_NAME 
  FROM     MRP_CRP_ITEMS_DETAILS ITM ,  MRP_BOM_BOM_MSTR MST
  WHERE    
  EXCEPTION WHEN NO_DATA_FOUND THEN 
         BEGIN               
                      SELECT   BOM_CODE   , DECODE(P_LANG,1,BOM_NAME_A,NVL(BOM_NAME_F,BOM_NAME_A) ) BOM_NAME 
                    FROM     MRP_CRP_ITEMS_DETAILS ITM ,  MRP_BOM_BOM_MSTR MST
                      WHERE    
         EXCEPTION WHEN NO_DATA_FOUND THEN 
          END;
FUNCTION  FNC_CHK_ITM_DEF_IN_MRP( P_CMP          S_CMPNY.CMP_NO%TYPE    , P_BRN          S_BRN.BRN_NO%TYPE       ,    P_ITM         MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE ,
     SELECT  1       
     FROM    MRP_CRP_ITEMS_
     WHERE  CMP_NO    = P_CMP
EXCEPTION WHEN NO_DATA_FOUND THEN 
FUNCTION FNC_CLS_DSC(P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_LANG LANG_DEF.LANG_NO%TYPE,P_SHF MRP_PQC_PROC_CLASSES.SHF_CODE%TYPE,P_CLS MRP_PQC_PROC_CLASSES.CLS_CODE%TYPE) RETURN VARCHAR2
  BEGIN
    SELECT DECODE(P_LANG,1,CLS_DESC_A,NVL(CLS_DESC_F,CLS_DESC_A) ) 
    FROM   MRP_PQC_PROC_CLASSES
    WHERE  CLS_CODE = P_CLS
    EXCEPTION WHEN OTHERS THEN
 FUNCTION FNC_CHK_REC_HAVE_ALL_SHIFT (P_CMP S_CMPNY.CMP_NO%TYPE, P_BRN S_BRN.BRN_NO%TYPE,P_RCE_SER MRP_CRP_RESOURCES.RCE_SER%TYPE) RETURN NUMBER
 BEGIN
      SELECT AVLBLE_ALL
      FROM   MRP_CRP_RESOURCES
      WHERE CMP_NO =P_CMP 
 EXCEPTION WHEN OTHERS THEN 
 FUNCTION FNC_RUN_SEL(P_SEL VARCHAR2) RETURN VARCHAR2 IS
 BEGIN
    EXCEPTION WHEN OTHERS THEN
 FUNCTION FNC_GET_ACTV_YER(P_CMP_NO NUMBER, P_BRN_NO NUMBER) RETURN NUMBER IS
  BEGIN
       SELECT YER_CODE INTO V_YER_CODE 
       FROM MRP_YEAR 
       WHERE CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND P_CLS = 0 AND P_CNTU = 0 AND ROWNUM<=1;
       EXCEPTION WHEN NO_DATA_FOUND THEN
  END; 
  /* Procedure Added By Mohammad Ali Allaw  03/01/2016.  To Get INV_I_CODE , UNIT Of An Item */
  PROCEDURE PRC_GET_ITEM_INV_DATA (P_ITM_CODE   IN  VARCHAR2, 
   BEGIN
  SELECT INV_I_CODE, UNIT_CODE
       FROM  MRP_CRP_ITEMS_DETAILS
       WHERE ITEM_CODE = P_ITM_CODE 
   EXCEPTION
  FUNCTION PRC_GET_ITEM_CODE (P_BRN_NO NUMBER, P_INV_I_CODE IN  VARCHAR2, P_UNIT_CODE IN  VARCHAR2) RETURN VARCHAR2 IS 
   BEGIN
        SELECT ITEM_CODE
         FROM  MRP_CRP_ITEMS_DETAILS
         WHERE BRN_NO = P_BRN_NO
   EXCEPTION
 FUNCTION GET_ITM_QTY (P_ITM_CODE  VARCHAR2) RETURN NUMBER IS 
 BEGIN
      SELECT NVL(SUM(AVL_QTY),0) INTO V_QTY FROM IAS_ITM_WCODE 
       WHERE I_CODE = V_INV_I_CODE
   EXCEPTION WHEN OTHERS THEN
 FUNCTION GET_ITM_SIZE (P_ITM_CODE  VARCHAR2) RETURN NUMBER IS 
   BEGIN
     SELECT G_SIZE INTO V_SIZE FROM MRP_CRP_ITEMS_DETAILS
   WHERE ITEM_CODE = P_ITM_CODE
   EXCEPTION WHEN OTHERS THEN
FUNCTION GET
 BEGIN
      SELECT IAS_ITM_PKG.GET_GRAND_WTAVG(P_WTAVG_TYPE, V_INV_I_CODE, P_W_CODE) INTO V_CST FROM DUAL;
   EXCEPTION WHEN OTHERS THEN
                                           WHERE     cmp_no = vcmp_no
                                          UPDATE MRP_SFC_MATERIALS_REQUEST_MSTR
                                           WHERE     cmp_no = vcmp_no
                                       UPDATE mrp_sfc_materials_receive_mstr
                                        WHERE     cmp_no = vcmp_no
                                    END;
                              END;
                        BEGIN
                           SELECT NVL (COUNT ( * ), 0)
                             FROM mrp_sfc_materials_receive_mstr
                            WHERE     cmp_no = vcmp_no
CREATE OR REPLACE PACKAGE Formula_PKG IS
FUNCTION TOTAL_TIME_FNC (OFFICIAL_TIME NUMBER ,OVER_TIME NUMBER ) RETURN NUMBER ;
FUNCTION AVALIVALE_TIME_FNC (  OFFICIAL_TIME NUMBER ,OVER_TIME NUMBER, ALLOWSTOP_TIME NUMBER  ) RETURN NUMBER ;
FUNCTION EXPECTED_PRODUCTION_FNC (  Standerd NUMBER , AVALIVALE_TIME NUMBER  ) RETURN NUMBER;
FUNCTION PLAND_PRODUCTION_FNC (  EXPECTED_PRODUCTION NUMBER , PRODUCTIVITY_PLANED NUMBER  ) RETURN NUMBER;
FUNCTION ACTUAL_PRODUCTIVITY_FNC (  ACTUAL_PRODUCTION NUMBER ,EXPECTED_PRODUCTION NUMBER  ) RETURN NUMBER ;
FUNCTION SHIFT_HOURS(   VCMP_NO        S_BRN.CMP_NO%TYPE,
CREATE OR REPLACE PACKAGE BODY Formula_PKG IS
FUNCTION TOTAL_TIME_FNC (OFFICIAL_TIME NUMBER ,OVER_TIME NUMBER ) RETURN NUMBER IS
FUNCTION AVALIVALE_TIME_FNC (  OFFICIAL_TIME NUMBER ,OVER_TIME NUMBER, ALLOWSTOP_TIME NUMBER  ) RETURN NUMBER IS
FUNCTION EXPECTED_PRODUCTION_FNC (  Standerd NUMBER , AVALIVALE_TIME NUMBER  ) RETURN NUMBER IS
FUNCTION PLAND_PRODUCTION_FNC (  EXPECTED_PRODUCTION NUMBER , PRODUCTIVITY_PLANED NUMBER  ) RETURN NUMBER IS
FUNCTION ACTUAL_PRODUCTIVITY_FNC (  ACTUAL_PRODUCTION NUMBER ,EXPECTED_PRODUCTION NUMBER  ) RETURN NUMBER IS
FUNCTION deviance_PRODUCTIVITY_FNC (  ACTUAL_PRODUCTIVITY NUMBER ,EXPECTED_PRODUCTIVITY NUMBER  ) RETURN NUMBER IS
FUNCTION SHIFT_HOURS(   VCMP_NO    S_BRN.CMP_NO%TYPE,
 BEGIN
  SELECT ROUND(TO_NUMBER(TO_DATE(TO_CHAR(TIME_T,'HH24:MI'),'HH24:MI')-
  FROM  MRP_SGS_SHIFTS_MAST
    EXCEPTION WHEN NO_DATA_FOUND THEN
         BEGIN
         SELECT ROUND(TO_NUMBER(TO_DATE(TO_CHAR(TIME_T,'HH24:MI'),'HH24:MI')-
           FROM MRP_SGS_SHIFTS_MAINT
           WHERE 
         EXCEPTION WHEN NO_DATA_FOUND THEN
         END;
  END;
END;    
         BEGIN
                  /*UPDATE  9-10-2010*/
CREATE OR REPLACE PACKAGE BOM_PKG_NEW AS
    PROCEDURE  REMOVE_TEMP_CALCULATION(P_CMP_NO NUMBER,
    --Procedure to Set All General Varaible Which is defined in this Package
    PROCEDURE SET_GENERAL_VARIBLES(P_FP_REC FINAL_PRODUCT_REC) ;
    -- Function to run Query that retrun only one Numuric Value
    FUNCTION RUN_SELECT( SEL  IN VARCHAR2 ) RETURN NUMBER;
    -- Function to Get the Shf_code field Value of the Produt or subproduct from the Bom Stage table 
    FUNCTION  FNC_GET_SHF_CODE_BOM(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_BOM IN VARCHAR2, P_ITEM  VARCHAR2 ) RETURN NUMBER;
    -- Function To Get The Bom Qty Value of Product or sub Product From the Bom Master Table.
    FUNCTION FNC_GET_MSTR_BOM_QTY(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_ITEM_CODE VARCHAR2 , P_BOM_CODE VARCHAR2) RETURN NUMBER;
    -- Function to Get the Yield Qty of Product Or SubProduct , This only use when there is A work order. 
    FUNCTION FNC_GET_QTY_YIELD(P_CMP_NO NUMBER, P_BRN_NO NUMBER,
    -- Function to Get the Scrap Qty of Product Or SubProduct , This only use when there is A work order.                                                
    FUNCTION FNC_GET_QTY_SCRAP(P_CMP_NO NUMBER, P_BRN_NO NUMBER,
    -- Function to Get the Net Wip Qty of Product Or SubProduct .                            
    FUNCTION FNC_GET_QTY_WIP(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_ITEM_ROW VARCHAR2 ,  P_BOM_ROW VARCHAR2 ,P_FP_REC FINAL_PRODUCT_REC)  RETURN  NUMBER;
    /* The Procedure Used Only for Alternative rows , Any Raw materilas defined  as "Has Alternative Rows" 
    PROCEDURE PRC_GET_BEST_CLASS_OPTION(  P_CMP_NO NUMBER, P_BRN_NO NUMBER, 
      This is the Actual Procedure that  Analyses and give all requirements materials or the products List .
  PROCEDURE PRC_START_CALCULATION (    FP  FINAL_PRODUCT,
     This Procedure is Called from the Screens of system to analys the Produrtcs list 
  PROCEDURE PRC_CALCULATE_ROW_ITEMS( FP  FINAL_PRODUCT,
CREATE OR REPLACE PACKAGE BODY BOM_PKG_NEW AS
 PROCEDURE  REMOVE_TEMP_CALCULATION(P_CMP_NO NUMBER, P_BRN_NO NUMBER) IS
  BEGIN
        DELETE FROM MRP_MRP_BOM_ROW_TEMP
        WHERE CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
  DELETE FROM MRP_BEST_CLASS_OPTIONS_TEMP
        WHERE CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
        EXCEPTION WHEN OTHERS THEN
    FUNCTION RUN_SELECT( SEL  IN VARCHAR2 ) RETURN NUMBER IS
    BEGIN
       EXCEPTION WHEN OTHERS THEN
  FUNCTION FNC_GET_MSTR_BOM_QTY(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_ITEM_CODE VARCHAR2 , P_BOM_CODE VARCHAR2) RETURN NUMBER IS
    BEGIN
             SELECT BOM_QTY INTO V_BOM_QTY
             FROM MRP_BOM_BOM_MSTR
             WHERE CMP_NO = P_CMP_NO AND
    EXCEPTION WHEN OTHERS THEN 
  FUNCTION  FNC_GET_SHF_CODE_BOM(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_BOM IN VARCHAR2, P_ITEM  VARCHAR2 ) RETURN NUMBER IS
  BEGIN
          SELECT SHF_CODE INTO V_SHF_CODE
          FROM MRP_BOM_BOM_STAGES
          WHERE CMP_NO = P_CMP_NO AND 
         EXCEPTION WHEN OTHERS THEN 
  FUNCTION FNC_GET_QTY_YIELD(P_CMP_NO NUMBER, P_BRN_NO NUMBER,
     BEGIN
                     SELECT SUM(D.QTY)
                     FROM   MRP_SFC_WIP_MASTER_YIELD D,
                     WHERE    M.CMP_NO          = D.CMP_NO
    EXCEPTION WHEN OTHERS THEN 
    FUNCTION FNC_GET_QTY_SCRAP(P_CMP_NO NUMBER, P_BRN_NO NUMBER,
    BEGIN
                     SELECT SUM(D.QTY)
                     FROM   MRP_SFC_WIP_MASTER_SCRAP D,
                     WHERE    M.CMP_NO          = D.CMP_NO
    EXCEPTION WHEN OTHERS THEN RETURN  0;   
  FUNCTION FNC_GET_QTY_WIP(P_CMP_NO NUMBER, P_BRN_NO NUMBER, P_ITEM_ROW VARCHAR2 ,  P_BOM_ROW VARCHAR2 ,P_FP_REC   FINAL_PRODUCT_REC) RETURN  NUMBER IS
            V_QTY              NUMBER := 0;   -- QTY FROM ITEM MOVE TABLE 
            V_QTY_CONSPTION    NUMBER := 0;            -- QTY OF CONSUMPTION FROM CONSUPTION TABLE
   BEGIN
                     SELECT NVL(SUM(QTY),0)
                     FROM   MRP_SFC_WHM_ITEMS_MOVE
                     WHERE  CMP_NO          = P_CMP_NO
                     SELECT NVL(SUM(QTY),0)
                     FROM   MRP_SFC_WHM_ITEMS_MOVE
                     WHERE  CMP_NO       = P_CMP_NO
                           SELECT NVL(SUM(TOT_QTY),0)
                           FROM   MRP_SFC_WIP_MAT_CONSUMP
                           WHERE  CMP_NO      = P_CMP_NO
                              (SELECT CMP_NO,BRN_NO,WORK_ORDER,SF_SEQ,SHF_CODE
                                    FROM   MRP_SFC_WIP_MASTER
                                    WHERE  APP_USR IS NULL
              EXCEPTION WHEN OTHERS THEN RETURN 0;       
 PROCEDURE PRC_GET_BEST_CLASS_OPTION(  P_CMP_NO NUMBER, P_BRN_NO NUMBER, 
                                     SELECT CMP_NO, BRN_NO, MRP_ITEM_CODE, ITEM_OPTION ,OFFSET ,PRIORITY       
                                      FROM   MRP_CRP_ITEMS_CLASS_OPTIONS
                                      WHERE  MRP_ITEM_CODE = P_ITEM_ROW
                                      ORDER BY NVL(PRIORITY,1) ASC;
   BEGIN
                   DELETE FROM MRP_BEST_CLASS_OPTIONS_TEMP
                   WHERE CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
           BEGIN
                                       BEGIN
                                            EXCEPTION WHEN OTHERS THEN V_QTY_W := 0;
                                                BEGIN
                                                          EXCEPTION WHEN OTHERS THEN V_QTY_V := 0;
                                                END;
                                      INSERT INTO MRP_BEST_CLASS_OPTIONS_TEMP(USR_NAME, CMP_NO, BRN_NO, PRIORITY, OFFSET, MRP_ITEM_CODE, ITEM_OPTION,QTY_W, QTY_V, QTY_N)
                   END;       
                        BEGIN
                                 SELECT COUNT(*) INTO V_CNT
                                 FROM MRP_BEST_CLASS_OPTIONS_TEMP
                                 WHERE CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
                                  SELECT ITEM_OPTION, MAX(QTY_W), MAX(QTY_V), MAX(QTY_N) 
                                   FROM MRP_BEST_CLASS_OPTIONS_TEMP
                                   WHERE CMP_NO = P_CMP_NO AND BRN_NO = P_BRN_NO AND
                                    GROUP BY ITEM_OPTION     ;
                                                      SELECT DISTINCT  ITEM_OPTION    
                                                              FROM   MRP_CRP_ITEMS_CLASS_OPTIONS
                                                              WHERE  MRP_ITEM_CODE = P_ITEM_ROW
                                                                  AND EXISTS (    SELECT NVL(MIN(NVL(PRIORITY,1) ),1)  FROM     MRP_CRP_ITEMS_CLASS_OPTIONS
                                                                                          WHERE  MRP_ITEM_CODE = P_ITEM_ROW
                 END;
   EXCEPTION WHEN OTHERS THEN
 PROCEDURE SET_GENERAL_VARIBLES(P_FP_REC FINAL_PRODUCT_REC)  IS
   BEGIN
              EXCEPTION WHEN OTHERS THEN
  PROCEDURE PRC_START_CALCULATION( FP  FINAL_PRODUCT,
    VEXP_INSERT_FAILD  EXCEPTION;
  BEGIN
                      FOR J IN ( SELECT  CMP_NO, BRN_NO, 
                                     FROM   MRP_BOM_BOM_ROW
                                     WHERE     CMP_NO       = V_FP_REC.CMP
                                       ORDER BY CMP_NO, BRN_NO, ITEM_CODE, BOM_CODE, 
                                   BEGIN    
                                               INSERT INTO MRP_MRP_BOM_ROW_TEMP(CMP_NO, 
                                   END;
                EXCEPTION WHEN VEXP_INSERT_FAILD THEN
  PROCEDURE PRC_CALCULATE_ROW_ITEMS( FP IN FINAL_PRODUCT,
  BEGIN
      BEGIN
      From MRP_SGS_GENERAL_PARAMETARS
      WHERE ROWNUM<=1;
      EXCEPTION WHEN NO_DATA_FOUND THEN
      END;
                DELETE FROM MRP_MRP_BOM_ROW_TEMP
                WHERE  USR_NAME = USR
                DELETE FROM MRP_MRP_SEIZED_MATERIALS  
                WHERE  USR_NAME = USR
                 DELETE FROM MRP_BEST_CLASS_OPTIONS_TEMP
                   WHERE USR_NAME = USR
  END;
         SELECT qty,
           FROM mrp_sfc_materials_request_dtls d,
          WHERE     d.cmp_no = vcmp_no
         SELECT qty,
           FROM mrp_sfc_materials_receive_dtls d,
          WHERE     d.cmp_no = vcmp_no
         SELECT qty,
           FROM mrp_sfc_materials_receive_dtls d,
          WHERE     d.cmp_no = vcmp_no
                         (SELECT d.item_code
                            FROM mrp_sfc_materials_request_dtls d,
                           WHERE     d.cmp_no = vcmp_no
         SELECT DISTINCT item_option, offset
           FROM mrp_crp_items_class_options
          WHERE mrp_item_code IN (SELECT mrp_item_code
                                    FROM mrp_crp_items_class_options
                                   WHERE item_option = vitem_option)
                         (SELECT item_code
                            FROM mrp_sfc_materials_request_opt
                           WHERE     cmp_no = vcmp_no
CREATE OR REPLACE PACKAGE BOM_PKG IS
  PROCEDURE INSERT_FINAL_PRODUCT( FP IN OUT FINAL_PRODUCT,FPR  IN OUT  FINAL_PRODUCT_REC,
    PROCEDURE INSRT_OPERATION( OP IN OUT OPRTON ,OPR INSRT_OPRTON,V_BOM VARCHAR2,V_ITM VARCHAR2,
  PROCEDURE INSRT_ITM_OPTN( X IN OUT  OPTN ,Y INSRT_REC, VITM VARCHAR2, VWIP NUMBER,
  -- Some procedure to rollup the requirement analysis
  PROCEDURE LISTING_ITEM_ROW_FROM_MAIN_BOM(FP IN OUT FINAL_PRODUCT,TYP NUMBER,
  -- This function analysis the requirement of sub products
  FUNCTION LISTING_ITEM_ROW_FROM_SUB_BOM (TYP NUMBER,USR VARCHAR2,P_LANG NUMBER,W_ORD VARCHAR2) RETURN 
  -- This procedure rollup the material requirement for doing products
  PROCEDURE SEL_MATERIAL(BOM VARCHAR2,IROW VARCHAR2,IJOB VARCHAR2,ICODE VARCHAR2,
  -- This procedure rollup the material requirement of sub product after subtract the require from the onhand
  PROCEDURE CHK_WIP_SCT_MTRL_RQMNT(IC VARCHAR2,NET NUMBER,BR VARCHAR2,IR VARCHAR2,
  -- This procedure rollup the material requirement of sub product
  PROCEDURE SCT_MTRL_RQMNT(RQTY NUMBER,SCRAP NUMBER,BR VARCHAR2,IR VARCHAR2,
  -- This procedure update demand qty after subtract from wip onhand,
  -- and put overplus from wip onhand in material size table to uses it again in another product analysis
  PROCEDURE UPDT_DLT_IR_BOM(IC VARCHAR2,SQTY NUMBER,NET NUMBER,IR VARCHAR2,BR VARCHAR2,
  -- This procedure call another procedures to calculate the requirement quantity of materials
  -- and it call another procedure rollup the item option
  PROCEDURE CALCULATE_ROW_STANDARD_QTY(TYP NUMBER,USR VARCHAR2,P_LANG NUMBER,W_ORD VARCHAR2);
  FUNCTION ROW_CLASS_OPTION( CMP NUMBER,BRN NUMBER,BC VARCHAR2,IC VARCHAR2,SHF NUMBER,
  -- This function calculate the wip onhand quantity of item option
  FUNCTION CALCU_WIP_INVTRY( ITM_OPTN VARCHAR2,SRG NUMBER,TYP NUMBER,BC VARCHAR2,
  -- This procedure check the requirement quantity of item option and compare it with wip onhand
  PROCEDURE CHECK_WIP_INV(ITM_OPTN VARCHAR2,V_QTY NUMBER,SRG NUMBER,USR VARCHAR2);
  FUNCTION CALC_FORCAST(IROW VARCHAR2,V_PLN NUMBER,SNDR NUMBER)RETURN NUMBER;
  -- This fuction run the select statement where its come as string
  FUNCTION RUN_SELECT( SEL  IN VARCHAR2 ) RETURN NUMBER;
  -- This procedure calculate materials requirement for SFC system
  PROCEDURE CALC_SFC_REQ (FP IN OUT FINAL_PRODUCT,TYP NUMBER,USR VARCHAR2,W_ORD VARCHAR2);
  -- This function check the item inside the work order or not
  FUNCTION CHK_MTRL_BOM(WR_ODR VARCHAR2,IRW VARCHAR2,USR VARCHAR2,CMP NUMBER, BRN NUMBER)RETURN BOOLEAN;
  -- This function give the description of item
  FUNCTION GIVE_ITEM_DESCRIPTION (IRW VARCHAR2,P_LANG NUMBER,CMP NUMBER, BRN NUMBER) RETURN VARCHAR;
  -- This procedure update the quantity in QTY_D field
  PROCEDURE UDAT_QTY_D(REQ NUMBER,CMP NUMBER,BRN NUMBER,BC VARCHAR2,IC VARCHAR2,SHF NUMBER,
  -- This function uses to calculate the requirement for WIP Card screen
  FUNCTION CARD_WIP( BC VARCHAR2,IC VARCHAR2,SHF NUMBER,LN VARCHAR2,STG VARCHAR2,
  -- This function calculate the requirement for Consumption screen
  FUNCTION CONSUMPTION_WIP( IC VARCHAR2 ) RETURN NUMBER;
  -- This procedure calculate the requirement for PCM Sytem
  PROCEDURE CALC_PCM_REQ (FP IN OUT FINAL_PRODUCT,USR VARCHAR2);
  -- This function give the item unit
  FUNCTION GIVE_UOM (IRW VARCHAR2,P_LANG NUMBER,CMP NUMBER,BRN NUMBER) RETURN VARCHAR;
  -- This function give the BOM description
  FUNCTION GIVE_BOM_DESCRIPTION (BOM VARCHAR2,P_LANG NUMBER,CMP NUMBER,BRN NUMBER) RETURN VARCHAR;
  -- This procedure add the attachment to the analysis
  PROCEDURE ATTACHMENET (USR VARCHAR2);
  -- This function will calculte the qty that receive to WIP for each product. After that the qty will use to calculte the direct cost
    FUNCTION COST_WIP (IC VARCHAR2) RETURN NUMBER;
CREATE OR REPLACE PACKAGE BODY BOM_PKG IS
  PROCEDURE INSRT_OPERATION( OP IN OUT OPRTON ,OPR INSRT_OPRTON,V_BOM VARCHAR2,V_ITM VARCHAR2,
  BEGIN
  END;
  PROCEDURE INSRT_ITM_OPTN( X IN OUT  OPTN ,Y   INSRT_REC, VITM VARCHAR2, VWIP NUMBER,
  BEGIN
  END;
  ---- Some procedure to rollup the requirement analysis
  PROCEDURE LISTING_ITEM_ROW_FROM_MAIN_BOM(FP IN OUT FINAL_PRODUCT,TYP NUMBER,USR VARCHAR2
  BEGIN
        DELETE FROM MRP_MRP_BOM_ROW_TEMP
        WHERE  USR_NAME = USR
        DELETE FROM MRP_MRP_SEIZED_MATERIALS -- 
        WHERE  USR_NAME = USR
              FOR J IN ( SELECT DISTINCT BOM_CODE,ITEM_CODE,JOB_CODE
                         FROM   MRP_BOM_BOM_ROW
                         WHERE  ITEM_CODE = FP(N).F_ASS
              FOR I IN ( SELECT R.CMP_NO,R.BRN_NO,R.BOM_CODE,R.ITEM_CODE,
                         FROM   MRP_BOM_BOM_ROW R,
                         WHERE  M.ITEM_CODE = R.ITEM_CODE  AND
                         GROUP BY R.CMP_NO,R.BRN_NO,R.BOM_CODE,R.ITEM_CODE,
                             INSERT INTO MRP_MRP_BOM_ROW_TEMP
              -- This function analysis the requirement of sub products
    EXCEPTION WHEN OTHERS THEN
  END;
  -- This function analysis the requirement of sub products
  FUNCTION LISTING_ITEM_ROW_FROM_SUB_BOM(TYP NUMBER,USR VARCHAR2,P_LANG NUMBER,W_ORD VARCHAR2) RETURN NUMBER IS
  BEGIN
                SELECT COUNT(BOM_ROW)
                FROM   MRP_MRP_BOM_ROW_TEMP
                WHERE  FLAGE = 0
                   FOR Y IN ( SELECT CMP_NO,BRN_NO,BOM_CODE,ITEM_CODE,
                              FROM   MRP_MRP_BOM_ROW_TEMP
                              WHERE  BOM_ROW IS NOT NULL
                              SELECT COUNT(BOM_CODE) -- 
                              FROM   MRP_MRP_BOM_ROW_TEMP
                              WHERE  FINAL_ITEM = Y.FINAL_ITEM
                                 BEGIN
                                   SELECT 1
                                   FROM   MRP_BOM_BOM_MSTR
                                   WHERE  ITEM_CODE = 2;
                                   EXCEPTION WHEN NO_DATA_FOUND THEN
                                 END;
                                 SELECT COUNT(ITEM_CODE) -- Check If Row Qty used by another BOM -- 
                                 FROM   MRP_MRP_SEIZED_MATERIALS
                                 WHERE  ITEM_CODE = Y.ITEM_ROW
                                                                                      -- And Its from typ 0 or 3.
                              SELECT (MAX(LVL)+1)
                              FROM   MRP_MRP_BOM_ROW_TEMP
                              WHERE  ITEM_CODE  = Y.ITEM_CODE
                              -- Calcu the requirement quantity from sub product
                                       BEGIN
                                         SELECT NVL(SUM(QTY),0) -- 
                                         FROM   MRP_SFC_WHM_ITEMS_MOVE
                                         WHERE  ITEM_CODE = Y.ITEM_ROW
                                         BEGIN
                                           SELECT NVL(SUM(QTY),0) -- 
                                           FROM   MRP_SFC_MAT_RESERV
                                           WHERE  ITEM_CODE = Y.ITEM_CODE
                                           EXCEPTION WHEN OTHERS THEN
                                         END;
 --// Subtract the onhand from reserved
                                         EXCEPTION WHEN OTHERS THEN
                                       END;
                              -- Calcu the onhand qty from material according to WIP card
                                         -- Calcu the onhand qty from material according to substract first by first
   -- This function will calculte the qty that receive to WIP for each product. After that the qty will use to calculte the direct cost
                                            -- To Import the storage from ONX for each Row
                                                 BEGIN
                                                    SELECT NVL(SUM(QTY),0) -- 
                                                    FROM   MRP_SFC_MAT_RESERV
                                                    WHERE  ITEM_CODE = Y.ITEM_CODE
                                                    EXCEPTION WHEN OTHERS THEN
                                                 END;
                                     SELECT NVL(MAX(SQE)+ 1,1)
                                     FROM   MRP_MRP_SEIZED_MATERIALS
                                     WHERE  CMP_NO = G_CMP
                                     INSERT INTO MRP_MRP_SEIZED_MATERIALS
                                     -- This procedure rollup the material requirement of sub product after subtract the require from the onhand
                                                      --//Last update in  27/10/2007*/
                                     -- This procedure rollup the material requirement of sub product
                                                      --//Last update in  25/11/2007
                                  SELECT QTY -- 
 --// To select the rest from the onhand
                                  FROM   MRP_MRP_SEIZED_
                                  WHERE  ITEM_CODE = Y.ITEM_ROW
                                  -- This procedure rollup the material requirement for doing products
                                     -- This procedure rollup the material requirement of sub product after subtract the require from the onhand
                                                           --//Last update in  27/10/2007
                                     -- This procedure rollup the material requirement of sub product
                                                           --//Last update in  25/11/2007
      exception when others then return(1);
  END;
  -- This procedure rollup the material requirement for doing products
  PROCEDURE SEL_MATERIAL(BOM VARCHAR2,IROW VARCHAR2,IJOB VARCHAR2,ICODE VARCHAR2,
  BEGIN
                                                       -- This condition will run if analysis come from WIP card or substract or consumption
           BEGIN
               SELECT DISTINCT 1,BOM_ROW,SHF_CODE,LN_CODE,STG_CODE
               FROM   MRP_MRP_BOM_ROW_TEMP
               WHERE  BOM_CODE   = BOM
                  -- This function uses to calculate the requirement for WIP Card screen
                                                                    --      1.Shop Floor Card From WIP
                                                                    --      2.Standard Subtract From WIP
                     -- This function calculate the requirement for Consumption screen
     -- This function will calculte the qty that receive to WIP for each product. After that the qty will use to calculte the direct cost
             EXCEPTION WHEN OTHERS THEN
                     SELECT DISTINCT 1,BOM_ROW,SHF_CODE,LN_CODE,STG_CODE
                       FROM   MRP_MRP_BOM_ROW_TEMP
                       WHERE  BOM_CODE   = BOM
     -- This function will calculte the qty that receive to WIP for each product. After that the qty will use to calculte the direct cost
           END;
              -- Select Qty of Row from WIP Storage
              BEGIN
                  SELECT NVL(SUM(QTY),0)
                  FROM   MRP_SFC_WHM_ITEMS_MOVE
                  WHERE  ITEM_CODE = IROW
                  BEGIN
 -- Calcu the reserve from the material
                     SELECT NVL(SUM(QTY),0)
                     FROM   MRP_SFC_MAT_RESERV
                     WHERE  ITEM_CODE = IROW
                     EXCEPTION WHEN OTHERS THEN
                  END;
                  EXCEPTION WHEN OTHERS THEN
              END;
                      -- This fuction run the select statement where its come as string
                  BEGIN
                    SELECT NVL(SUM(QTY),0)
                    FROM   MRP_SFC_MAT_RESERV
                    WHERE  ITEM_CODE = IROW
                    EXCEPTION WHEN OTHERS THEN
                  END;
      SELECT QTY_R,QTY_S
      --SELECT QTY_R,QTY_R * QTY_S --//OLD
      FROM   MRP_MRP_BOM_ROW_TEMP
      WHERE  ITEM_ROW   = IROW
        SELECT DIVISIBILITY -- 
        FROM   MRP_CRP_ITEMS_DETAILS
        WHERE  ITEM_CODE = IROW
        BEGIN
                EXCEPTION WHEN OTHERS THEN
        UPDATE MRP_MRP_BOM_ROW_TEMP
        WHERE  ITEM_ROW = IROW
    END;
    -- This procedure rollup the material requirement of sub product after subtract the require from the onhand
    PROCEDURE CHK_WIP_SCT_MTRL_RQMNT(IC VARCHAR2,NET NUMBER,BR VARCHAR2,IR VARCHAR2,
    BEGIN
        -- To select overplus of Qty from Inventory
        SELECT QTY -- 
        FROM   MRP_MRP_SEIZED_MATERIALS
        WHERE  ITEM_CODE = IC
        IF RSLT > 0 THEN -- If we need more Qty from Inventory and This Row has BOM,
              UPDATE MRP_MPS_WORK_ORDR_DTLS
              WHERE  BOM_CODE   = BR
           FOR J IN ( SELECT R.CMP_NO,R.BRN_NO,R.BOM_CODE,R.ITEM_CODE,
                      FROM   MRP_BOM_BOM_ROW R,
                      WHERE  M.CMP_NO    = C.CMP_NO    AND
                      GROUP BY R.CMP_NO,R.BRN_NO,R.BOM_CODE,R.ITEM_CODE,
                      INSERT INTO MRP_MRP_BOM_ROW_TEMP
                      FOR K IN ( SELECT DISTINCT BOM_CODE,ITEM_CODE,JOB_CODE
                                 FROM   MRP_BOM_BOM_ROW
                                 WHERE  ITEM_CODE = J.ITEM_CODE
           -- This procedure update demand qty after subtract from wip onhand,
           -- and put overplus from wip onhand in material size table to uses it again in another product analysis
           -- This procedure update demand qty after subtract from wip onhand,
           -- and put overplus from wip onhand in material size table to uses it again in another product analysis
    END;
    -- This procedure rollup the material requirement of sub product
    PROCEDURE SCT_MTRL_RQMNT(RQTY NUMBER,SCRAP NUMBER,BR VARCHAR2,IR VARCHAR2,
    BEGIN
        FOR J IN ( SELECT R.CMP_NO,R.BRN_NO,R.BOM_CODE,R.ITEM_CODE,
                          --(R.SCRAP_PER*DECODE(SCRAP,0,1,SCRAP)) SCR, -- UPDATE BY ABDULLAH OMAR IN 22/10/2007
                   FROM   MRP_BOM_BOM_ROW R,
                   WHERE  M.ITEM_CODE = R.ITEM_CODE AND
                   GROUP BY R.CMP_NO,R.BRN_NO,R.BOM_CODE,R.ITEM_CODE,
                   INSERT INTO MRP_MRP_BOM_ROW_TEMP
                   FOR K IN ( SELECT DISTINCT BOM_CODE,ITEM_CODE,JOB_CODE
                              FROM   MRP_BOM_BOM_ROW
                              WHERE  ITEM_CODE = J.ITEM_CODE
        -- After Listing the Row of sub BOM.System will update the maim Row that it has B
        UPDATE MRP_MRP_BOM_ROW_TEMP
        WHERE  ITEM_ROW   = IR
    END;
    -- This procedure update demand qty after subtract from wip onhand,
    -- and put overplus from wip onhand in material size table to uses it again in another product analysis
    PROCEDURE UPDT_DLT_IR_BOM(IC VARCHAR2,SQTY NUMBER,NET NUMBER,IR VARCHAR2,BR VARCHAR2,
    BEGIN
      -- Update overplus Qty, after taking the Net -- 
      UPDATE MRP_MRP_SEIZED_MATERIALS
      WHERE  ITEM_CODE = IC
      UPDATE MRP_MRP_BOM_ROW_TEMP -- 
      WHERE  ITEM_ROW   = IR
    END;
    -- This procedure call another procedures to calculate the requirement quantity of materials
    -- and it call another procedure rollup the item option
    PROCEDURE CALCULATE_ROW_STANDARD_QTY(TYP NUMBER,USR VARCHAR2,P_LANG NUMBER,W_ORD VARCHAR2) IS
    BEGIN/*
      DELETE FROM OP_TEMP;COMMIT;
            INSERT INTO OP_TEMP(BOM,ITEM,JOB,PLN)
                           FROM MRP_MRP_BOM_ROW_TEMP
                           WHERE  JOB_CODE  = OP(J).JOB_COD
                       -- This procedure rollup the material requirement for doing products
        FOR I IN ( SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE,
                   FROM   MRP_MRP_BOM_ROW_TEMP
                   WHERE  USR_NAME = USR
            BEGIN -- To check If the Row has Items Option
               SELECT CTGR -- 
               FROM   MRP_CRP_ITEMS_CATEGORY
               WHERE  ITEM_CODE = I.ITEM_ROW
               FOR J IN ( SELECT ITEM_OPTION FROM MRP_CRP_ITEMS_CLASS_OPTIONS
                          WHERE  MRP_ITEM_CODE = I.ITEM_ROW
                          ORDER  BY PRIORITY ASC ) LOOP
                   -- This function calculate the wip onhand quantity of item option
                   UPDATE MRP_MRP_BOM_ROW_TEMP
                   WHERE  CMP_NO    = I.CMP_NO
               EXCEPTION WHEN NO_DATA_FOUND THEN
            END;
        -- This function analysis the requirement of sub products
            FOR N IN ( SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE,
                       FROM   MRP_MRP_BOM_ROW_TEMP
                       WHERE  JOB_CODE  = OP(J).JOB_COD
                   -- This procedure rollup the material requirement for doing products
        FOR G IN ( SELECT ITEM_ROW,HEAD,QTY_R,ATTACH FROM MRP_MRP_BOM_ROW_TEMP  -- ADDED IN 06-11-2008
                   WHERE  USR_NAME = USR
               DELETE FROM MRP_MRP_BOM_ROW_TEMP
               WHERE  ITEM_ROW = G.ITEM_ROW
    END;
    FUNCTION ROW_CLASS_OPTION( CMP NUMBER,BRN NUMBER,BC VARCHAR2,IC VARCHAR2,SHF NUMBER,
    BEGIN
      FOR I IN ( SELECT ITEM_OPTION, OFFSET, PRIORITY
                 FROM   MRP_CRP_ITEMS_CLASS_OPTIONS
                 WHERE  MRP_ITEM_CODE = IR
                 ORDER  BY PRIORITY ASC ) LOOP
             -- This function calculate the wip onhand quantity of item option
             IGNOR := CALCU_WIP_INVTRY(I.ITEM_OPTION,SRG,TYP,BC,IC,SHF,LN,STG,JOB); -- To calculate Items Option Qty from Inventory
          BEGIN
             SELECT BOM_CODE -- 
             FROM   MRP_BOM_BOM_MSTR
             WHERE  ITEM_CODE = IRW
             EXCEPTION WHEN OTHERS THEN
          END;
his function calculate the wip onhand quantity of item option
             WP := CALCU_WIP_INVTRY(I.ITEM_OPTION,1,TYP,BC,IC,SHF,LN,STG,JOB); -- To calculate Items Option Qty from Inventory
          --// Calculate the requirement quantity from the option item after multiply with offset
 --// Calculate the require from the onhand
             UPDATE MRP_MRP_BOM_ROW_TEMP -- 
             WHERE  CMP_NO    = G_CMP
             --// This condition will achieve when function is called by calculated Onyx onhand
                UPDATE  MRP_MRP_BOM_ROW_TEMP
                 WHERE  CMP_NO    = G_CMP
                    --// Update the requirement quantity from the onhand in temporary table
                    UPDATE MRP_MRP_BOM_ROW_TEMP -- 
                    WHERE  CMP_NO    = G_CMP
             --// This condition will achieve when function is called by calculated the WIP onhand
                --// Insert the option items from calss option
                INSERT INTO MRP_MRP_BOM_ROW_TEMP
             --// Calculate the overplus requirement quantity from option item where priority equal one
                SELECT ITEM_OPTION
                FROM   MRP_CRP_ITEMS_CLASS_OPTIONS
                WHERE  MRP_ITEM_CODE = IR
                    UPDATE MRP_MRP_BOM_ROW_TEMP
                    WHERE  CMP_NO     = G_CMP
                -- This procedure check the requirement quantity of item option and compare it with wip onhand
                   -- This function give the description of item
                   INSERT INTO MRP_MRP_BOM_ROW_TEMP
                BEGIN
                EXCEPTION WHEN OTHERS THEN
                      UPDATE MRP_MRP_BOM_ROW_TEMP
                      WHERE  CMP_NO    = G_CMP
                   -- This procedure check the requirement quantity of item option and compare it with wip onhand
                     UPDATE MRP_MRP_BOM_ROW_TEMP
                     WHERE  CMP_NO    = G_CMP
         --// Select the item option that it related to the same class option and their priority equal one
         SELECT ITEM_OPTION,OFFSET -- 
         FROM   MRP_CRP_ITEMS_CLASS_OPTIONS
         WHERE  MRP_ITEM_CODE = IR
         BEGIN
            SELECT BOM_CODE -- 
            FROM   MRP_BOM_BOM_MSTR
            WHERE  ITEM_CODE = IRW
            EXCEPTION WHEN OTHERS THEN
         END;
            -- This function calculate the wip onhand quantity of item option
            IGNOR := CALCU_WIP_INVTRY(IRW,SRG,TYP,BC,IC,SHF,LN,STG,JOB); -- To calculate Items Option Qty from Inventory
         UPDATE MRP_MRP_BOM_ROW_TEMP -- 
         WHERE  CMP_NO    = G_CMP
        BEGIN
        EXCEPTION WHEN OTHERS THEN
        --// Update the requirement quantity from item option, also the onyx storage
        UPDATE MRP_MRP_BOM_ROW_TEMP -- 
        WHERE  CMP_NO     = G_CMP
           -- This procedure check the requirement quantity of item option and compare it with wip onhand
            BEGIN
               SELECT BOM_CODE
               FROM   MRP_BOM_BOM_MSTR
               WHERE  ITEM_CODE = X(1).ITM_OPTN
               EXCEPTION WHEN OTHERS THEN
            END;
            UPDATE MRP_MRP_BOM_ROW_TEMP
            WHERE  CMP_NO    = G_CMP
            INSERT INTO MRP_MRP_BOM_ROW_TEMP
            UPDATE MRP_MRP_BOM_ROW_TEMP
            WHERE  CMP_NO    = G_CMP
            INSERT INTO MRP_MRP_BOM_ROW_TEMP
      EXCEPTION WHEN OTHERS THEN
    END;
    -- This function calculate the wip onhand quantity of item option
    FUNCTION CALCU_WIP_INVTRY( ITM_OPTN VARCHAR2,SRG NUMBER,TYP NUMBER,BC VARCHAR2,
    BEGIN
      -- To calculate Items Option Qty from Inventory
         BEGIN
           SELECT NVL(SUM(QTY),0) -- 
 -- calcu the onhand from WIP
           FROM   MRP_SFC_WHM_ITEMS_MOVE
           WHERE  ITEM_CODE = ITM_O
           BEGIN
             SELECT NVL(SUM(QTY),0) -- 
             FROM   MRP_SFC_MAT_RESERV
             WHERE  ITEM_CODE = ITM_OPTN
             EXCEPTION WHEN OTHERS THEN
           END;
 -- subtract the reserved from the onhand
           EXCEPTION WHEN OTHERS THEN
         END;
            -- This function will calculte the qty that receive to WIP for each product. After that the qty will use to calculte the direct cost
                BEGIN
                   SELECT NVL(SUM(QTY),0) -- 
                   FROM   MRP_SFC_MAT_RESERV
                   WHERE  ITEM_CODE = ITM_OPTN
                   EXCEPTION WHEN OTHERS THEN
                END;
 -- subtract the reserved from Onyx onhand
    END;
    -- This procedure check the requirement quantity of item option and compare it with wip onhand
    PROCEDURE CHECK_WIP_INV(ITM_OPTN VARCHAR2,V_QTY NUMBER,SRG NUMBER,USR VARCHAR2) IS
    BEGIN
      SELECT COUNT(ITM_OPTN) -- Check If Row Qty used by anther BOM
      FROM   MRP_MRP_SEIZED_MATERIALS
      WHERE  ITEM_CODE = ITM_OPTN
         SELECT NVL(MAX(SQE)+ 1,1)
         FROM   MRP_MRP_SEIZED_MATERIALS;
         INSERT INTO MRP_MRP_SEIZED_MATERIALS
      -- If it is false will update the onhand
         UPDATE MRP_MRP_SEIZED_MATERIALS
         WHERE  ITEM_CODE = ITM_OPTN
    END;
    FUNCTION CALC_FORCAST(IROW VARCHAR2,V_PLN NUMBER,SNDR NUMBER)RETURN NUMBER IS
    BEGIN
         SELECT TO_CHAR(P.DATE_F,'DD-MM-YYYY'),TO_CHAR(P.DATE_T,'DD/MM/YYYY')
         FROM   MRP_SGS_PERIOD_COSTONG P,MRP_YEAR Y
         WHERE  P.PERIOD_CODE = V_PLN
         SELECT TO_CHAR(P.DATE_T,'DD/MM/YYYY')
         FROM   MRP_SGS_PERIOD_COSTONG P,MRP_YEAR Y
         WHERE  P.PERIOD_CODE IN( SELECT MAX(PERIOD_CODE)
                                  FROM   MRP_SGS_PERIOD_COSTONG P ,MRP_YEAR Y
                                  WHERE  P.YER_CODE    = Y.YER_CODE
         SELECT TO_CHAR(P.DATE_F,'DD-MM-YYYY')
         FROM   MRP_SGS_PERIOD_COSTONG P,MRP_YEAR Y
         WHERE  P.PERIOD_CODE IN
                 (SELECT MIN(PERIOD_CODE)
                  FROM   MRP_SGS_PERIOD_COSTONG P ,MRP_YEAR Y
                    WHERE  P.YER_CODE    = Y.YER_CODE
      -- calculate the onhand from item in forecast storage
             SEL :=  'SELECT SUM(P_ORDER_DETAIL.I_QTY)-SUM(GRN_DETAIL.I_QTY)R_QTY
                      FROM GRN_DETAIL,P_ORDER,
                      WHERE P_ORDER.PO_NO=P_ORDER_DETAIL.PO_NO
             SEL := 'SELECT SUM(D.I_QTY)
                     FROM IAS_PI_BILL_MST M,
                     WHERE M.PUR_TYPE = D.PUR_TYPE AND
          FRCST := FRCST + RUN_SELECT( SEL );  -- This fuction run the select statement where its come as string
      EXCEPTION WHEN OTHERS THEN
    END;
    -- This procedure calculate materials requirement for SFC system
    PROCEDURE CALC_SFC_REQ (FP IN OUT FINAL_PRODUCT,TYP NUMBER,USR VARCHAR2,W_ORD VARCHAR2)IS
    BEGIN
        -- Some procedure to rollup the requirement analysis
        -- This procedure call another procedures to calculate the requirement quantity of materials
        -- and it call another procedure rollup the item option
        IF TYP = 1 THEN -- From WIP and Onyx -- 
           FOR V IN ( SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE,
                      FROM   MRP_MRP_BOM_ROW_TEMP
                      WHERE  USR_NAME = USR AND ROW_TYP <> 1
               -- This procedure update the quantity in QTY_D field
        ELSIF TYP = 8 THEN -- From WIP only -- 
           FOR V IN ( SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE,
                      FROM   MRP_MRP_BOM_ROW_TEMP
                      WHERE  USR_NAME = USR AND ROW_TYP <> 1
               -- This procedure update the quantity in QTY_D field
        ELSIF TYP = 2 THEN -- From Onyx only -- 
              FOR V IN ( SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE,
                         FROM   MRP_MRP_BOM_ROW_TEMP
                         WHERE  USR_NAME = USR
                  -- This procedure update the quantity in QTY_D field
        ELSIF (TYP = 4 OR TYP = 6 )THEN -- To calculate the Requirement Qty for shop floor card from WIP
                    FOR V IN ( SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE,
                               FROM   MRP_MRP_BOM_ROW_TEMP
                               WHERE  USR_NAME = USR AND ROW_TYP <> 1
                    -- This procedure update the quantity in QTY_D field
                              -- Consumption and Standard subtract from WIP
                    FOR V IN ( SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE,
                               FROM   MRP_MRP_BOM_ROW_TEMP
                    -- This procedure update the quantity in QTY_D field
              FOR V IN ( SELECT CMP_NO, BRN_NO, BOM_CODE, ITEM_CODE,
                         FROM   MRP_MRP_BOM_ROW_TEMP
                         WHERE  USR_NAME = USR AND ROW_TYP <> 1
                    -- This procedure update the quantity in QTY_D field
    END;
    -- This fuction run the select statement where its come as string
    FUNCTION RUN_SELECT( SEL  IN VARCHAR2 ) RETURN NUMBER IS
    BEGIN
       EXCEPTION WHEN OTHERS THEN
  -- This function give the item unit
  FUNCTION GIVE_UOM (IRW VARCHAR2,P_LANG NUMBER,CMP NUMBER,BRN NUMBER) RETURN VARCHAR IS
  BEGIN
      SELECT D.UNIT_CODE
      FROM   MRP_CRP_ITEMS_DETAILS D
      WHERE  ITEM_CODE = IRW
      EXCEPTION WHEN NO_DATA_FOUND THEN
  END;
  -- This function give the BOM description
  FUNCTION GIVE_BOM_DESCRIPTION (BOM VARCHAR2,P_LANG NUMBER,CMP NUMBER,BRN NUMBER) RETURN VARCHAR IS
  BEGIN
      SELECT DECODE(P_LANG,1,BOM_NAME_A,BOM_NAME_F)
      FROM   MRP_BOM_BOM_MSTR
      WHERE  BOM_CODE = BOM
      EXCEPTION WHEN NO_DATA_FOUND THEN
  END;
  -- This function give the description of item
  FUNCTION GIVE_ITEM_DESCRIPTION (IRW VARCHAR2,P_LANG NUMBER, CMP NUMBER,BRN NUMBER) RETURN VARCHAR IS
  BEGIN
      SELECT DECODE(P_LANG,1,ITEM_NAME_A,ITEM_NAME_F)
      FROM   MRP_CRP_ITEMS_DETAILS
      WHERE  ITEM_CODE = IRW
      EXCEPTION WHEN NO_DATA_FOUND THEN
  END;
  -- This function check the item inside the work order or not
  FUNCTION CHK_MTRL_BOM(WR_ODR VARCHAR2,IRW VARCHAR2,USR VARCHAR2,CMP NUMBER,BRN NUMBER) RETURN BOOLEAN IS
  BEGIN
       FOR I IN ( SELECT ITEM_CODE,BOM_CODE FROM MRP_MPS_WORK_ORDR_DTLS -- 
                  WHERE  WORK_ORDER = WR_ODR
       -- Some procedure to rollup the requirement analysis
           -- This procedure call another procedures to calculate the requirement quantity of materials
           -- and it call another procedure rollup the item option
       FOR J IN ( SELECT DISTINCT ITEM_ROW FROM MRP_MRP_BOM_ROW_TEMP
                  WHERE  ROW_TYP <> 1 AND USR_NAME = USR
       FOR Y IN ( SELECT DISTINCT ITEM_ROW FROM MRP_MRP_BOM_ROW_TEMP
                  WHERE  ROW_TYP = 1 AND USR_NAME = USR
           FOR N IN ( SELECT ITEM_OPTION  FROM MRP_CRP_ITEMS_CLASS_OPTIONS
                      WHERE  MRP_ITEM_CODE = Y.ITEM_ROW
    END;
    -- This procedure update the quantity in QTY_D field
    PROCEDURE UDAT_QTY_D(REQ NUMBER,CMP NUMBER,BRN NUMBER,BC VARCHAR2,IC VARCHAR2,SHF NUMBER,
    BEGIN
       UPDATE MRP_MRP_BOM_ROW_TEMP
       WHERE  CMP_NO    = G_CMP
    END;
    -- This function uses to calculate the requirement for WIP Card screen
    FUNCTION CARD_WIP( BC VARCHAR2,IC VARCHAR2,SHF NUMBER,
    BEGIN
          BEGIN
              SELECT NVL(SUM(QTY),0) QTY
                FROM MRP_SFC_WIP_MASTER_YIELD,MRP_SFC_WIP_MASTER,
               WHERE ITEM_CODE                         = IC
                EXCEPTION WHEN OTHERS THEN
          END;
           SELECT MRP_SFC_PR_INCCST_TYPE
           FROM   MRP_SGS_GENERAL_PARAMETARS;
              BEGIN
                  BEGIN
                     SELECT NVL(SUM(QTY),0)
                     FROM   MRP_SFC_WHM_ITEMS_MOVE
                     WHERE  CMP_NO     = G_CMP
                     EXCEPTION WHEN OTHERS THEN
                  END;
                  BEGIN
                     SELECT NVL(SUM(QTY),0)
                     FROM   MRP_SFC_WHM_ITEMS_MOVE
                     WHERE  CMP_NO     = G_CMP
                     EXCEPTION WHEN OTHERS THEN
                  END;
                  BEGIN
                     SELECT NVL(SUM(TOT_QTY),0)
                     FROM   MRP_SFC_WIP_MAT_CONSUMP
                     WHERE  CMP_NO     = G_CMP
                       AND  DECODE(G_YLD,NULL,'1',YIELD_SEQ)<>DECODE(G_YLD,NULL,'2',G_YLD)     -- AND IN 8/5/2010--To check incase update product qty  in working card
                           (SELECT CMP_NO,BRN_NO,WORK_ORDER,SF_SEQ,SHF_CODE
                            FROM   MRP_SFC_WIP_MASTER
                            WHERE  APP_USR IS NULL
                     EXCEPTION WHEN OTHERS THEN
                  END;
                                 SELECT SUM(QTY)
                                    FROM   MRP_SFC_WHM_ITEMS_MOVE
                                    WHERE  CMP_NO     = G_CMP
                                    EXCEPTION WHEN OTHERS THEN
                         END;
           END;
           BEGIN
                     SELECT SUM(QTY)
                     FROM   MRP_SFC_WIP_MASTER_YIELD -- 
                     WHERE  CMP_NO    = G_CMP
                       AND  WORK_ORDER IN ( SELECT WORK_ORDER
                                            FROM   MRP_SFC_WIP_MASTER
                                            WHERE  CMP_NO = G_CMP
             EXCEPTION WHEN OTHERS THEN
           END;
             BEGIN
                     SELECT SUM(QTY)
                     FROM   MRP_SFC_WIP_MASTER_scrap -- 
                     WHERE  CMP_NO    = G_CMP
                       AND  WORK_ORDER IN ( SELECT WORK_ORDER
                                            FROM   MRP_SFC_WIP_MASTER
                                            WHERE  CMP_NO = G_CMP
             EXCEPTION WHEN OTHERS THEN
             END;
           BEGIN -- 
                SELECT NVL(SUM(QTY),0)
                FROM   MRP_SFC_M
                WHERE  D.CMP_NO = M.CMP_NO
                  AND  MR_SQ IN ( SELECT MR_SQ
                                  FROM   MRP_SFC_MATERIALS_REQUEST_MSTR
                                  WHERE  ITEM_CODE = G_FASS
                  AND G_ASS IN  (SELECT ITEM_CODE FROM MRP_MPS_WORK_ORDR_DTLS
                                         WHERE WORK_ORDER = G_WRK
                EXCEPTION WHEN OTHERS THEN
           END;
    END; -- 14-01-2008*/
    -- This function calculate the requirement for Consumption screen
    FUNCTION CONSUMPTION_WIP( IC VARCHAR2 ) RETURN NUMBER IS
    BEGIN
       ( SELECT SUM(QTY)*-1
         FROM   MRP_SFC_WHM_ITEMS_MOVE
        WHERE  TRANS_TYPE IN (51,7)
          and  ITEM_CODE NOT IN (SELECT ITEM_CODE
                                 FROM   MRP_SFC_WHM_ITEMS_MOVE
                                 WHERE  PRD_TYPE = 0
    ( SELECT SUM(M.QTY)*-1
      FROM   MRP_SFC_WHM_ITEMS_MOVE M, MRP_CRP_ITEMS_CATEGORY G
        WHERE  M.TRANS_TYPE = 2
          AND  M.ITEM_CODE  IN (  SELECT Y.ITEM_CODE
                                  FROM MRP_CRP_ITEMS_CATEGORY Y
                                  WHERE Y.CTGR = 2) )
    FROM DUAL;
      EXCEPTION WHEN OTHERS THEN
    END; -- 16-01-2008*/
    -- This procedure calculate the requirement for PCM Sytem
    PROCEDURE CALC_PCM_REQ (FP IN OUT FINAL_PRODUCT,USR VARCHAR2)IS
    BEGIN
        -- Some procedure to rollup the requirement analysis
              -- This procedure call another procedures to calculate
              -- and it call another procedure rollup the item option
    END;
    -- This procedure add the attachment to the analysis
    PROCEDURE ATTACHMENET (USR VARCHAR2)IS
    BEGIN
        FOR I IN ( SELECT DISTINCT FINAL_ITEM,FINAL_BOM,PLN,ATTACH,USR_NAME
                   FROM   MRP_MRP_BOM_ROW_TEMP
                   WHERE  ATTACH IS NOT NULL AND USR_NAME = USR
            FOR J IN ( SELECT DISTINCT ITEM_CODE,BOM_CODE,ITEM_ROW,ITEM_MAIN,
                       FROM   MRP_BOM_ROW_ATTACH
                       WHERE  ITEM_CODE = I.FINAL_ITEM AND BOM_CODE = I.FINAL_BOM
                BEGIN
                    SELECT (T.QTY_R/D.QTY)/M.BOM_QTY,T.CMP_NO,T.BRN_NO,
                    FROM   MRP_MRP_BOM_ROW_TEMP T,MRP_BOM_BOM_MSTR M,MRP_BOM_BOM_ROW D
                    WHERE  T.ITEM_CODE = J.ITEM_CODE
                    WHERE  ITEM_CODE = J.ITEM_CODE
                EXCEPTION WHEN OTHERS THEN
                END;
                   INSERT INTO MRP_MRP_BOM_ROW_TEMP (CMP_NO,BRN_NO,ITEM_CODE,BOM_CODE,
            FOR L IN ( SELECT DISTINCT ITEM_ROW FROM   MRP_BOM_SUB_ITEMS
                       WHERE  ITEM_CODE = I.FINAL_ITEM
                BEGIN
                    SELECT DISTINCT BOM_CODE
                    FROM   MRP_MRP_BOM_ROW_TEMP
                    WHERE  ITEM_CODE = L.ITEM_ROW
                    EXCEPTION WHEN OTHERS THEN
                END;
                FOR J IN ( SELECT DISTINCT ITEM_CODE,BOM_CODE,ITEM_ROW,ITEM_MAIN,
                           FROM   MRP_BOM_ROW_ATTACH
                           WHERE  ITEM_CODE = L.ITEM_ROW AND BOM_CODE = BCOD
                    BEGIN
                        SELECT (T.QTY_R/D.QTY)/M.BOM_QTY,T.CMP_NO,T.BRN_NO,
                        FROM   MRP_MRP_BOM_ROW_TEMP T,MRP_BOM_BOM_MSTR M,MRP_BOM_BOM_ROW D
                        WHERE  T.ITEM_CODE = J.ITEM_CODE
                        UPDATE MRP_M
                        WHERE  ITEM_CODE = J.ITEM_CODE
                        EXCEPTION WHEN OTHERS THEN
                    END;
                       INSERT INTO MRP_MRP_BOM_ROW_TEMP (CMP_NO,BRN_NO,ITEM_CODE,BOM_CODE,
    END;
    -- This function will calculte the qty that receive to WIP for each product. After that the qty will use to calculte the direct cost
    FUNCTION COST_WIP (IC VARCHAR2) RETURN NUMBER IS
    BEGIN
           BEGIN -- 
                SELECT NVL(SUM(QTY),0)
                FROM   MRP_SFC_MATERIALS_RECEIVE_MSTR M,
                WHERE  D.CMP_NO = M.CMP_NO
                  AND  MR_SQ IN ( SELECT MR_SQ
                                  FROM   MRP_SFC_MATERIALS_REQUEST_MSTR
                                  WHERE  ITEM_CODE = G_FASS
                  AND G_ASS IN  (SELECT ITEM_CODE FROM MRP_MPS_WORK_ORDR_DTLS
                                         WHERE WORK_ORDER = G_WRK
                EXCEPTION WHEN OTHERS THEN
           END;
    END;
  PROCEDURE INSERT_FINAL_PRODUCT( FP IN OUT FINAL_PRODUCT,FPR  IN OUT  FINAL_PRODUCT_REC,
    PROCEDURE INSRT_OPERATION( OP IN OUT OPRTON ,OPR INSRT_OPRTON,V_BOM VARCHAR2,V_ITM VARCHAR2,
  PROCEDURE INSRT_ITM_OPTN( X IN OUT  OPTN ,Y INSRT_REC, VITM VARCHAR2, VWIP NUMBER,
  -- Some procedure to rollup the requirement analysis
  PROCEDURE LISTING_ITEM_ROW_FROM_MAIN_BOM(FP IN OUT FINAL_PRODUCT,TYP NUMBER,
  -- This function analysis the requirement of sub products
  FUNCTION LISTING_ITEM_ROW_FROM_SUB_BOM (TYP NUMBER,USR VARCHAR2,P_LANG NUMBER,W_ORD VARCHAR2) RETURN 
CREATE OR REPLACE PACKAGE ATT_PKG AS
FUNCTION FNC_GET_ATT_NAME (P_BRN            S_BRN.BRN_NO%TYPE ,
PROCEDURE PRC_GET_ROW_IN_ATT_BOM (   P_CMP_NO      S_BRN.CMP_NO%TYPE ,
PROCEDURE  PRC_ITM_ATTCH_FLEX      ( P_CMP_NO  S_BRN.CMP_NO%TYPE, P_BRN_NO  S_BRN.BRN_NO%TYPE, 
FUNCTION FNC_ITM_ATTCH_CNT(P_CMP_NO    S_BRN.CMP_NO%TYPE, P_BRN_NO      S_BRN.BRN_NO%TYPE, P_ITEM_CODE MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE ) RETURN NUMBER ;
FUNCTION IS_CSTMER_ATT  (P_BRN_NO IN S_BRN.BRN_NO%TYPE,ATTNO VIEW_ATTACHS.ATTCH_NO%TYPE ,ATTDESC VIEW_ATTACHS_DETAILS.ATTCH_DESC_NO%TYPE ) RETURN NUMBER ;
  FUNCTION GET_ATT_NAME (P_BRN_NO  S_BRN.BRN_NO%TYPE,LNG NUMBER ,ATTN VIEW_ATTACHS_DETAILS.ATTCH_NO%TYPE )RETURN VARCHAR2 ;
FUNCTION GET_ATT_DESC (P_BRN_NO  S_BRN.BRN_NO%TYPE,LNG NUMBER ,ATTN VIEW_ATTACHS_DETAILS.ATTCH_NO%TYPE ,ATTDESC VIEW_ATTACHS_DETAILS.ATTCH_DESC_NO%TYPE )RETURN VARCHAR2 ;
  FUNCTION IS_ATT_IN_BOM ( VATT       MRP_ITEM_ATTACH_ORDERS.ATT%TYPE      , 
 FUNCTION FNC_IS_STG_PRODECT_ATT (P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,
FUNCTION  FNC_CHK_IS_ITEM_ATTC(  P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,
FUNCTION  GET_ALL_ATT_DESC(LNG NUMBER,ATT VARCHAR2 ) RETURN VARCHAR2;
FUNCTION FUNC_GET_ATT_QTY (VITEM      MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE,  
FUNCTION FNC_CHK_ATT_IN_WO ( P_CMP_NO           S_BRN.CMP_NO%TYPE,
FUNCTION FNC_GET_ATT_CNTCT (P_BRN            S_BRN.BRN_NO%TYPE ,
PROCEDURE   PRC_UPT_YILD_SCRP_ATT_QTY (P_CMP_NO           S_BRN.CMP_NO%TYPE,
CREATE OR REPLACE PACKAGE BODY ATT_PKG IS
FUNCTION FNC_GET_ATT_NAME ( P_BRN            S_BRN.BRN_NO%TYPE ,
EXCEPTION WHEN OTHERS THEN R
PROCEDURE PRC_GET_ROW_IN_ATT_BOM ( P_CMP_NO     S_BRN.CMP_NO%TYPE ,
          BEGIN
                  SELECT 1 INTO V_CNT
                  FROM MRP_BOM_ROW_ATTACH
                  WHERE CMP_NO = P_CMP_NO AND
                  EXCEPTION WHEN NO_DATA_FOUND THEN V_CNT := 0;
              BEGIN
                          SELECT ITEM_ROW ,
                          FROM MRP_BOM_ROW_ATTACH
                          WHERE CMP_NO = P_CMP_NO AND
                          EXCEPTION WHEN NO_DATA_FOUND THEN 
               END;  
          EXCEPTION WHEN OTHERS THEN 
END;   
PROCEDURE  PRC_ITM_ATTCH_FLEX   (  P_CMP_NO  S_BRN.CMP_NO%TYPE, P_BRN_NO  S_BRN.BRN_NO%TYPE, 
         SELECT FLEX_NO,FLEX_FIELD INTO V_FLEX_NO, V_FLEX_FLD
         FROM VIEW_ITEMS_ATTACHS
         WHERE   CMP_NO = P_CMP_NO AND 
         EXCEPTION WHEN NO_DATA_FOUND THEN 
FUNCTION FNC_ITM_ATTCH_CNT(P_CMP_NO  S_BRN.CMP_NO%TYPE, P_BRN_NO  S_BRN.BRN_NO%TYPE, P_ITEM_CODE MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE ) RETURN NUMBER  IS
         SELECT COUNT(*) INTO V_CNT
         FROM VIEW_ITEMS_ATTACHS
         WHERE CMP_NO = P_CMP_NO AND MRP_BRN = P_BRN_NO AND
         EXCEPTION WHEN NO_DATA_FOUND THEN RETURN 0;
FUNCTION IS_
        SELECT NVL(CONN_C_CODE,0) INTO V_CONN_C_CODE 
        FROM VIEW_ATTACHS_DETAILS 
        WHERE MRP_BRN = P_BRN_NO AND  
         EXCEPTION WHEN NO_DATA_FOUND THEN RETURN 0;
END;   
FUNCTION GET_ATT_NAME (P_BRN_NO  S_BRN.BRN_NO%TYPE, LNG NUMBER ,ATTN VIEW_ATTACHS_DETAILS.ATTCH_NO%TYPE )RETURN VARCHAR2 IS
 BEGIN
         SELECT DECODE(LNG ,1,ATTCH_A_NAME,NVL(ATTCH_E_NAME,ATTCH_A_NAME) )
         FROM   VIEW_ATTACHS
         WHERE  ATTCH_NO =ATTN AND MRP_BRN = P_BRN_NO;
 EXCEPTION WHEN NO_DATA_FOUND THEN 
FUNCTION GET_ATT_DESC (P_BRN_NO  S_BRN.BRN_NO%TYPE, LNG NUMBER ,ATTN VIEW_ATTACHS_DETAILS.ATTCH_NO%TYPE ,ATTDESC VIEW_ATTACHS_DETAILS.ATTCH_DESC_NO%TYPE )RETURN VARCHAR2 
 BEGIN
         SELECT DECODE(LNG ,1,ATTCH_DESC_A_NAME,NVL(ATTCH_DESC_E_NAME,ATTCH_DESC_A_NAME) )
         FROM   VIEW_ATTACHS_DETAILS
         WHERE  ATTCH_NO =ATTN
 EXCEPTION WHEN NO_DATA_FOUND THEN 
 END; 
FUNCTION FNC_GET_ATT_DSC (P_CMP_NO           S_BRN.CMP_NO%TYPE,
 BEGIN
         SELECT DECODE(P_LANG ,1,ATTCH_DESC_A_NAME,NVL(ATTCH_DESC_E_NAME,ATTCH_DESC_A_NAME) )
         FROM   VIEW_ATTACHS_DETAILS
         WHERE  ATTCH_NO      =P_ATTCH_NO 
 EXCEPTION WHEN NO_DATA_FOUND THEN 
 END; 
FUNCTION IS_ATT_IN_BOM ( VATT       MRP_ITEM_ATTACH_ORDERS.ATT%TYPE      , 
     FOR I IN (SELECT  ITEM_ROW  FROM MRP_MRP_BOM_ROW_TEMP WHERE    
      FOR J IN (    SELECT ITEM_MAIN,A
                    FROM   MRP_BOM_ROW_ATTACH
                    WHERE  
      FOR K IN ( SELECT  ITEM_ROW,BOM_ROW,QTY_N  FROM MRP_MRP_BOM_ROW_TEMP 
                 WHERE    
                FOR J IN (    SELECT ITEM_MAIN,ATT                    
                    FROM   MRP_BOM_ROW_ATTACH
                    WHERE  
 FUNCTION FNC_IS_STG_PRODECT_ATT (P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,
 BEGIN
         SELECT  1 
         FROM    MRP_BOM_SUB_ITEMS
         WHERE   ITEM_CODE =Decode(P_ITEM_CODE,NULL,ITEM_CODE,P_ITEM_CODE)
         EXCEPTION WHEN NO_DATA_FOUND  THEN 
FUNCTION  GET_ALL_ATT_DESC(LNG NUMBER,ATT VARCHAR2) RETURN VARCHAR2 IS 
        BEGIN  
                SELECT DECODE(LNG,1,ATTCH_DESC_A_NAME,NVL(ATTCH_DESC_E_NAME,ATTCH_DESC_A_NAME) )
                FROM   VIEW_ATTACHS_DETAILS
                WHERE  ATTCH_NO      =TO_NUMBER(DECODE(I,1,SUBSTR(ATT,1,1) ,2,SUBSTR(ATT,5,1),3,SUBSTR(ATT,9 ,1) ,4,SUBSTR(ATT,12,1),5,SUBSTR(ATT,15,1)) )
                EXCEPTION WHEN OTHERS THEN 
        END;
  EXCEPTION WHEN OTHERS THEN 
 FUNCTION FUNC_GET_ATT_QTY (VITEM      MRP_CRP_ITEMS_DETAILS.ITEM_CODE%TYPE,  
   BEGIN
      EXECUTE IMMEDIATE    ' Select  NVL(SUM(NVL(QTY,0)),0)
       From    MRP_ITEM_ATTACH_MOVES
       Where   cmp_no    = :VCMP_NO
   EXCEPTION
   END;  
Function To Chk If The ITems is Related with Attachment 
FUNCTION  FNC_CHK_IS_ITEM_ATTC(  P_CMP_NO     S_CMPNY.CMP_NO%TYPE     ,
    BEGIN
          SELECT USE_ATTCH
          FROM  MRP_CRP_ITEMS_DETAILS
          WHERE ITEM_CODE =P_ITEM_CODE
        EXCEPTION WHEN OTHERS THEN 
        END;
FUNCTION FNC_CHK_ATT_IN_WO ( P_CMP_NO           S_BRN.CMP_NO%TYPE,
   BEGIN 
     SELECT  1
   FROM    MRP_ITEM_ATTACH_ORDERS
   WHERE   WORK_ORDER  =P_WORK_ORDER
    EXCEPTION WHEN NO_DATA_FOUND THEN 
    END;
FUNCTION FNC_GET_ATT_CNTCT (P_BRN            S_BRN.BRN_NO%TYPE ,
EXCEPTION WHEN OTHERS THEN RETURN NULL;
PROCEDURE   PRC_UPT_YILD_SCRP_ATT_QTY (P_CMP_NO           S_BRN.CMP_NO%TYPE,
        UPDATE MRP_SFC_WIP_MASTER_YIELD
        WHERE  
        UPDATE MRP_SFC_WIP_MASTER_SCRAP
        WHERE  
  EXCEPTION WHEN OTHERS THEN 
MRP_FUNCTION_PKG
MRP_FUNCTION_PKG
MRP_FUNCTION_PKG
MRP_PROCEDURE_PKG
SELECT 1   FROM ALL_OBJECTS  WHERE OWNER = :b1  AND OBJECT_TYPE = :b2  AND OBJECT_NAME = :b3  AND ROWNUM <= 1"
MRP_FUNCTION_PKG
MRP_FUNCTION_PKG
MRP_FUNCTION_PKG
MRP_PROCEDURE_PKG
MRP_PROCEDURE_PKG
MRP_PROCEDURE_PKG
MRP_FUNCTION_PKG
MRP_PROCEDURE_PKG
MRP_PROCEDURE_PKG
MRP_PROCEDURE_PKG
MRP_PROCEDURE_PKG
"MRP_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
MRP_FUNCTION_PKG
MRP_PROCEDURE_PKG
MRP_FUNCTION_PKG
"MRP_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/MRP_GNR_LIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/GLSLIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (2, 5, 5, 'TB_GROUP', 'Account No and Project No',     1, 0, NULL, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (1, 6, 6, 'TB_GROUP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (2, 6, 6, 'TB_GROUP', 'Activity No',    1, 0, NULL, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (1, 7, 7, 'TB_GROUP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values  (1, 4, 4, 'TB_GROUP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values  (2, 4, 4, 'TB_GROUP', 'Project No',   1, 0, NULL, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (1, 5, 5, 'TB_GROUP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (2, 7, 7, 'TB_GROUP', 'Account No and Activity No',   1, 0, NULL, NULL)
UPDATE IAS_AC_CNFRM_BLNC_DTL SET AC_CODE_DTL =C_CODE,AC_DTL_TYP=3 WHERE C_CODE IS NOT NULL
UPDATE IAS_AC_CNFRM_BLNC_DTL SET AC_CODE_DTL =V_CODE,AC_DTL_TYP=4 WHERE V_CODE IS NOT NULL
ALTER  TABLE IAS_GNR_CODE_DTL ADD CONSTRAINT IAS_GNR_CODE_DTL_PK PRIMARY KEY (MAIN_CODE,SUB_NO)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 0, 'CNFRM_GRP_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 1, 0, 'CNFRM_GRP_TYP', 'All',     1, 0, 2325)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 2, 1, 'CNFRM_GRP_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 2, 1, 'CNFRM_GRP_TYP', 'Group by Account and Account Detail',     1, 0, 2325)
 Where 1=1 
update S_ALRT_SYS_MST set ALRT_SLCT='Select 1 From Vouchers M Where  Rownum<=1',ALRT_SLCT_WHR=' And M.Voucher_Type=2  And M.Stand_By =1 ' ,ALRT_HIDE_WHR='And M.Voucher_Date >' where ALRT_NO=6
UPDATE IAS_FORM_NAME SET FORM_NAME= '
' WHERE FORM_NO=2000 AND LANG_NO=1
UPDATE IAS_FORM_NAME SET FORM_NAME= 'Pakiages Shipping System' WHERE FORM_NO=2000 AND LANG_NO=2
UPDATE IAS_FORM_NAME SET FORM_NAME= '
' WHERE FORM_NO=78 AND LANG_NO=1
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (1, 10, 9, 'COMPARE', '<>',  1, 0, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (2, 10, 9, 'COMPARE', '<>',  1, 0, NULL)
UPDATE S_FLAGS SET FLG_DESC='Diff Currency' where FLG_CODE='STMNT_TYP_D' And FLG_VALUE=4 and LANG_NO=2
UPDATE S_FLAGS SET FLG_DESC='
' where FLG_CODE='STMNT_TYP_D' And FLG_VALUE=4 and LANG_NO=1
CREATE TABLE GLS_ACCNT_DTL_GRPS
CREATE TABLE GLS_ACCNT_DTL
CREATE TABLE   GLS_ACCNT_DTL_CURR
CREATE TABLE  GLS_ACCNT_DTL_PRIV
    ALTER TABLE GLS_ACCNT_DTL_GRPS ADD (
    ALTER TABLE GLS_ACCNT_DTL ADD (
    ALTER TABLE GLS_ACCNT_DTL_CURR ADD (
    ALTER TABLE GLS_ACCNT_DTL_PRIV ADD (
ALTER TABLE IAS_GL_CSHFLW_DTL ADD RCRD_F_NM VARCHAR2(250)
ALTER TABLE IAS_GL_CSHFLW_AC ADD A_ANALYSIS NUMBER(10)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 0, 0, 'VCHR_BNK_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 0, 0, 'VCHR_BNK_TYP', 'Cheque',  1, 0, 1608)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values  (2, 1, 1, 'VCHR_BNK_TYP', 'Transfer',  1, 0, 1608)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values  (1, 1, 1, 'VCHR_BNK_TYP', '
ALTER TABLE IAS_RQ_VCHR_MST MODIFY Transfer NUMBER DEFAULT NULL
UPDATE IAS_RQ_VCHR_MST SET Transfer=NULL WHERE Voucher_pay_type=1
ALTER TABLE VOUCHERS MODIFY Transfer NUMBER DEFAULT NULL
UPDATE VOUCHERS SET Transfer=NULL WHERE Voucher_pay_type=1
UPDATE S_FLAGS set FLG_DESC='
 ' where   FLG_CODE='CASH_CHQ' and LANG_NO=1 and FLG_VALUE=2
UPDATE S_FLAGS set FLG_DESC='Bankable' where FLG_CODE ='CASH_CHQ' and  LANG_NO=2 and FLG_VALUE=2
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (1, 1, 1, 'JRNL_SEQ_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'JRNL_SEQ_TYP', 'By type',  1, 0, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (1, 2, 2, 'JRNL_SEQ_TYP', ' 
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (2, 2, 2, 'JRNL_SEQ_TYP', 'By period and type',  1, 0, NULL)
ALTER TABLE IAS_AC_CC_LMT DROP CONSTRAINT IASACCCLMT_PK
ALTER TABLE IAS_AC_CC_LMT ADD ( CONSTRAINT ACCLMT_CC_FK  FOREIGN KEY (CC_CODE) REFERENCES COST_CENTERS (CC_CODE))
ALTER TABLE IAS_AC_CC_LMT ADD ( CONSTRAINT ACCLMT_PJ_FK  FOREIGN KEY (PJ_NO) 
ALTER TABLE IAS_AC_CC_LMT ADD ( CONSTRAINT ACCLMT_AC_FK  FOREIGN KEY (A_CODE)  REFERENCES ACCOUNT (A_CODE))
UPDATE OPEN_BAL SET VALUE_DATE =YS_GEN_PKG.GET_FRST_DAY WHERE AC_DTL_TYP IN(3,4) AND VALUE_DATE IS NULL AND AC_CODE_DTL IS NOT NULL
 ALTER TABLE GLS_ACCNT_DTL ADD (
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2, 0, 0, 'POST_DOC_TYPE', 'Open Balance', 1, 1)
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 0, 0, 'POST_DOC_TYPE', '
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,  F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,    SCR_TYP, DOC_TYP) 
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 407, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 407, 'Others Debit and Credit Accounts Groups')
UPDATE FORM_DETAIL SET F_ORDER_NO=71 WHERE FORM_NO=107
UPDATE FORM_DETAIL SET F_ORDER_NO=73 WHERE FORM_NO=108
UPDATE IAS_FORM_NAME SET FORM_NAME='
' WHERE FORM_NO=107  AND LANG_NO=1
UPDATE IAS_FORM_NAME SET FORM_NAME='Link the Others Debit and Credit ' WHERE FORM_NO=107  AND LANG_NO=2
CREATE TABLE GLS_AC_CODE_DTL_GRPS
    ALTER TABLE GLS_AC_CODE_DTL_GRPS ADD (
ALTER TABLE GLS_ACCNT_DTL MODIFY GRP_CODE   NUMBER(10) NOT NULL
ALTER TABLE GLS_ACCNT_DTL drop  CONSTRAINT GLS_ACCNT_DTL_FK
SELECT 1 FROM GLS_AC_CODE_DTL_GRPS WHERE GRP_CODE IS NOT NULL  
CREATE TABLE GLS_AC_CODE_DTL_GRPS_PRIV
    ALTER TABLE GLS_AC_CODE_DTL_GRPS_PRIV ADD (
CREATE TABLE IAS_GNR_CODE_PRV
CREATE TABLE S_BRN_DOCS
    ALTER TABLE S_BRN_DOCS ADD (
SELECT COUNT(*) FROM S_BRN_DOCS WHERE CODE_NO IS NOT NULL 
INSERT INTO S_BRN_DOCS(CODE_NO  ,  BRN_NO ,   DOC_NO   ,  FIELD1  ,  FIELD2 ,  FIELD3 ,FIELD4 ,AD_U_ID,AD_DATE)
                      SELECT 1,BRN_NO,RC_CODE,BRN_TAX_CODE,NAI_TAX,NIS_CODE,CAPITAL ,1,YS_GEN_PKG.GET_CURDATE FROM S_BRN WHERE RC_CODE IS   NOT NULL
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 9, 9, 'STMNT_REP_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 9, 9, 'STMNT_REP_TYPE', 'By date and doc typ
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO)  Values   (1, 1, 1, 'AC_DTL_SEQ', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 2, 2, 'AC_DTL_SEQ', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'AC_DTL_SEQ', 'By Account type',  1, 0, 12966)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 2, 2, 'AC_DTL_SEQ', 'By Account group',  1, 0, 12966)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values  (1, 1, 1, 'FILE_TYPE_ASTMNT', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 2, 2, 'FILE_TYPE_ASTMNT', '
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'FILE_TYPE_ASTMNT', 'Exceel File',1, 0, NULL)
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values  (2, 2, 2, 'FILE_TYPE_ASTMNT', 'Text File',  1, 0
Insert into IAS_GNR_CODE_MST (MAIN_CODE, MAIN_L_NAME, MAIN_F_NAME, INACTV, CODE_TYP,TBL_NM, FLG_CODE) Values (8, '
Insert into IAS_GNR_CODE_DTL (RCRD_NO, SUB_NO, SUB_L_NAME, SUB_F_NAME, INACTV, INACTV_RSON, INACTV_DATE, INACTV_U_ID, MAIN_CODE, SUBNO_LNGTH, SUBNO_D_TYPE, SUBNO_START, HAS_PRV)
Insert into IAS_GNR_CODE_DTL (RCRD_NO, SUB_NO, SUB_L_NAME, SUB_F_NAME, INACTV, INACTV_RSON, INACTV_DATE, INACTV_U_ID, MAIN_CODE, SUBNO_LNGTH, SUBNO_D_TYPE, SUBNO_START, HAS_PRV)
Insert into S_ALRT_SYS_MST
    4867, 10, 'SELECT 1 FROM   s_brn_docs D  WHERE ROWNUM<=1', 2, NULL, 
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 2, 2, 'VAT_PST_MTHD', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 1, 1, 'VAT_PST_MTHD', 'By Local currency',   1, 0, NULL)
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 2, 2, 'VAT_PST_MTHD', 'By Document currency',    1, 0, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 1, 'VAT_PST_MTHD', '
CREATE TABLE IAS_ACCOUNT_ACTV
    ALTER TABLE IAS_ACCOUNT_ACTV ADD (
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,   LBL_NO)    Values   (2, 2, 2, 'PRNT_AUD_PRICE', 'Avarage Currencies Price',  1, 0,   5520)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV,  LBL_NO) Values   (1, 2, 2, 'PRNT_AUD_PRICE', '
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV,  LBL_NO) Values   (2, 1, 1, 'PRNT_AUD_PRICE', 'Currencies Price Auditing',  1, 0,  5520)
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,    FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 1, 'PRNT_AUD_PRICE', '
Insert into  S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV,   LBL_NO) Values   (2, 3, 3, 'PRNT_AUD_PRICE', 'The Daily Currencies Pricing List',    1, 0,  5520)
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,  LBL_NO) Values   (1, 3, 3, 'PRNT_AUD_PRICE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,  LBL_NO) Values  (2, 2, 2, 'INPT_CNTR_BR_TYP', 'From Branch',   1, 0,  10472)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,  LBL_NO) Values   (1, 2, 2, 'INPT_CNTR_BR_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV,  LBL_NO) Values (2, 1, 1, 'INPT_CNTR_BR_TYP', 'From Head Office', 1, 0,   10472)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV,  LBL_NO) Values (1, 1, 1, 'INPT_CNTR_BR_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (1, 0, 0, 'BAL_TYPE', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 0, 0, 'BAL_TYPE', 'Balance Befor Posting', 1, 1, 1772)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (1, 2, 2, 'BAL_TYPE', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 2, 2, 'BAL_TYPE', 'All', 1, 1, 1772)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (1, 1, 1, 'BAL_TYPE', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 1, 1, 'BAL_TYPE', 'Balance After Posting', 1, 1, 1772)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (6, 2, 2, 'BAL_TYPE', 'All', 1, 1, 1772)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (6, 1, 1, 'BAL_TYPE', 'Balance After Posting', 1, 1, 1772)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP )
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES (1, 450, '
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES (2, 450, 'Documents Approval')
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ('MIS', 140, 451, 2202, 'GLSQ001', 0, 0, 61, NULL, NULL, 5, NULL)
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES (1, 451, '
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES (2, 451, 'Accounts statments')
ALTER TABLE IAS_VOUCHR_TYPE MODIFY V_TYPE NUMBER(5)
UPDATE IAS_EXCH_CUR_MST SET AC_CODE_DTL=CSH_BNK_NO WHERE AC_CODE_DTL IS NULL AND CSH_BNK_NO IS NOT NULL 
ALTER TABLE IAS_EXCH_CUR_MST MODIFY CSH_BNK_NO NUMBER(10)  NULL
ALTER TABLE IAS_EXCH_CUR_MST MODIFY AC_CODE_DTL VARCHAR2(30) NOT  NULL 
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES ( 1, 1, 1, 'EXCHHG_CUR_SEQ', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (1, 2, 2, 'EXCHHG_CUR_SEQ', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 1, 1, 'EXCHHG_CUR_SEQ', 'Cumulative', 1, 0, NULL)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 2, 2, 'EXCHHG_CUR_SEQ', 'By Account Type', 1, 0, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 5, 98, 'CASH_TYPE', '
Insert into S_FLA
INSERT INTO IAS_VOUCHR_TYPE ( V_TYPE, V_TYPE_NO, V_TYPE_A_NAME, V_TYPE_E_NAME, CONN_VCHR_REQ,TRNS_TYPE, VAT_DFRD_PRVDR ) VALUES ( 98, 1, '
Update IAS_POST_MST M Set AUDIT_REF=(SELECT AUDIT_REF FROM IAS_POST_DTL WHERE DOC_SER=M.DOC_SER AND AUDIT_REF=1 AND ROWNUM<=1) 
Update IAS_POST_MST M Set AUDIT_REF_DATE=(SELECT AUDIT_REF_DATE FROM IAS_POST_DTL WHERE DOC_SER=M.DOC_SER AND AUDIT_REF=1 AND ROWNUM<=1) 
Update IAS_POST_MST M SET AUDIT_REF_U_ID =(SELECT AUDIT_REF_U_ID  FROM IAS_POST_DTL WHERE DOC_SER=M.DOC_SER AND AUDIT_REF=1 AND ROWNUM<=1)
Update IAS_POST_MST M Set AUDIT_REF_DESC=(SELECT AUDIT_REF_DESC FROM IAS_POST_DTL WHERE DOC_SER=M.DOC_SER AND AUDIT_REF=1 AND ROWNUM<=1) 
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values  (1, 2, 2, 'VCHR_BNK_TYP', '
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values  (2, 2, 2, 'VCHR_BNK_TYP', 'Cash Deposit',  1, 0, 1608)
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO, DOC_TYPE, DOC_TYPE_NAME, DOC_PST, FLG_ST,DOC_APPRVD_FLG ) VALUES ( 1, 102, '
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO, DOC_TYPE, DOC_TYPE_NAME, DOC_PST, FLG_ST,DOC_APPRVD_FLG ) VALUES (2, 102, 'EXCHANGE CURRENCY REQUEST', 0, 1, 1)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) 
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES (1, 499, '
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES (2, 499, 'Exchange Currency Request')
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (1, 4, 4, 'GL_REQ', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (2, 4, 4, 'GL_REQ', 'Exchange Currency Request', 1, 0)
INSERT INTO IAS_GLRQ_TYPES ( RQ_DOC_TYPE, RQ_TYPE, RQ_NAME, RQ_E_NAME, SEQUENCED, PAY_REC,REP_SMPLE ) VALUES ( 102, 1, '
CREATE TABLE GLS_RQ_EXCH_CUR_MST
ALTER TABLE GLS_RQ_EXCH_CUR_MST ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_MST ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_MST ADD (
CREATE TABLE GLS_RQ_EXCH_CUR_DTL
ALTER TABLE GLS_RQ_EXCH_CUR_DTL ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_DTL ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_DTL ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_DTL ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_DTL ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_DTL ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_DTL ADD (
ALTER TABLE GLS_RQ_EXCH_CUR_DTL ADD (
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values  (1, 3, 3, 'VCHR_BNK_TYP', '
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values  (2, 3, 3, 'VCHR_BNK_TYP', 'Credit Card',   1, 0, 1608)
UPDATE FORM_DETAIL SET F_BT_PRIV=1 WHERE F_BT_PRIV=0 AND FORM_NO IN(458,499) 
Insert into FORM_DETAIL  (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_N
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values  (1, 452, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values  (2, 452, 'Link Flow types with Accounts Analysis')
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values  (2, 1, 1, 'EXPNS_TAX_FLG', 'Tax Correction', 1, 0, 2298, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (2, 2, 2, 'EXPNS_TAX_FLG', 'Deferred of Tax Provider', 1, 0, 2298, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (2, 3, 3, 'EXPNS_TAX_FLG', 'Provider Of Reverse Tax', 1, 0, 2298, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (2, 4, 4, 'EXPNS_TAX_FLG', 'Input -PurchaseTax', 1, 0, 2298, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (1, 1, 1, 'EXPNS_TAX_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (1, 2, 2, 'EXPNS_TAX_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (1, 3, 3, 'EXPNS_TAX_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (1, 4, 4, 'EXPNS_TAX_FLG', '
UPDATE IAS_VOUCHR_TYPE SET EXPNS_TAX_FLG =2 WHERE VAT_DFRD_PRVDR=1 AND EXPNS_TAX_FLG IS NULL 
UPDATE JV_TYPES SET EXPNS_TAX_FLG =1 WHERE VAT_CORRECTION=1 AND EXPNS_TAX_FLG IS NULL  
UPDATE JV_TYPES SET EXPNS_TAX_FLG =2 WHERE VAT_DFRD_PRVDR=1 AND EXPNS_TAX_FLG IS NULL  
UPDATE JV_TYPES SET EXPNS_TAX_FLG =3 WHERE VAT_PRVDR_RVRS=1 AND EXPNS_TAX_FLG IS NULL  
CREATE TABLE GLS_CRNCY_USR_LMT (  CUR_CODE        VARCHAR2(7),
CREATE TABLE GLS_TAX_ACC ( A_CODE        VARCHAR2(30) NOT NULL,
ALTER TABLE GLS_CRNCY_USR_LMT MODIFY CUR_RATE NUMBER
ALTER TABLE GLS_CRNCY_USR_LMT MODIFY MAX_CUR_RATE NUMBER
ALTER TABLE GLS_CRNCY_USR_LMT MODIFY MIN_CUR_RATE NUMBER
ALTER TABLE GLS_CRNCY_USR_LMT MODIFY MAX_PYMNT_RATE NUMBER
ALTER TABLE GLS_CRNCY_USR_LMT MODIFY MIN_RCVD_RATE NUMBER
ALTER TABLE GUARN_ISSUE DROP COLUMN AC_COD_DTL_SUB
ALTER TABLE GUARN_ACCOUNT DROP COLUMN AC_COD_DTL_SUB
ALTER TABLE GLS_CRNCY_USR_LMT DROP COLUMN MAX_PYNMT_RATE
update s_flags set 
FLG_VALUE=4 where FLG_CODE='GL_REQ' and FLG_VALUE=201 
CREATE TABLE GLS_VCHR_TYP_PRV(
Delete S_FLAGS where FLG_VALUE in (4,5) and lang_no in(1,2) and  FLG_CODE='JV_CLS_ZERO_AC_TYP'
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 5, 5, 'JV_CLS_ZERO_AC_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 5, 5, 'JV_CLS_ZERO_AC_TYP', 'Closing Linked Vendors Balance into Balance as Customer  ',  1, 0, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 4, 4, 'JV_CLS_ZERO_AC_TYP', 'Closing linked Customers with Vendors Less Balance into the Bigger Balance',   1, 0, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 4, 4, 'JV_CLS_ZERO_AC_TYP', '
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) Values   ('STP', 10, 474, 347, 'GENS013', 1, 0, 27, NULL, NULL,  1, NULL)
Insert into  IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 474, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 474, 'Projects additional Information')
update FORM_DETAIL set F_FILE_NAME='GENS013' where form_no=7004
update IAS_FORM_NAME set FORM_NAME='Projects additional Information' where lang_no=2 and form_no=7004
SELECT 1 FROM GLS_VCHR_TYP_PRV WHERE ROWNUM<=1
INSERT INTO GLS_VCHR_TYP_PRV (V_TYP, V_TYP_NO, U_ID,ADD_FLAG, VIEW_FLAG, AD_DATE, AD_U_ID )
 (SELECT I.V_TYPE, I.V_TYPE_NO, u.U_ID,1 ADD_FLAG,1 VIEW_FLAG,SYSDATE AD_DATE,1 AD_U_ID
  FROM IAS_VOUCHR_TYPE I,user_r u
  where u.INACTIVE=0
     AND u.U_ID IN (select ad_u_id from ias_post_dtl
                                                     where doc_type in(2,3,98)
UPDATE IAS_GLRQ_TYPES SET ALLW_UPDT_INSL_AMT=0 WHER NOT_ALLW_UPDT_INSL_AMT=1 AND ALLW_UPDT_INSL_AMT=0
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) Values   ('GLS', 30, 453, 7, 'GLSI017',  1, 0, 13, NULL, NULL, 2, NULL)
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values  (1, 453, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values  (2, 453, 'Link 
update form_detail set SCR_ORGNL=FORM_NO 
 WHERE SCR_ORGNL IS NULL AND F_SYS IN ('GLS','SHP','JRS','GRNT') 
update form_detail set SCR_ORGNL=null where form_no=26
update form_detail set SCR_ORGNL=21 where form_no=137
update form_detail set SCR_ORGNL=23 where form_no IN(168,5211)
update form_detail set SCR_ORGNL=20 where form_no=5235
UPDATE IAS_DOCJV_TYPE_SYSTEMS_MST SET DOC_PST=0 WHERE DOC_TYPE=118
alter table IAS_RQ_VCHR_DTL drop constraint 
alter table IAS_RQ_VCHR_DTL add constraint PK_IAS_RQ_VCHR_DTL PRIMARY KEY (DOC_SEQUENCE)
Update form_detail set F_FILE_NAME='GLSI017' WHERE FORM_NO=453 AND F_FILE_NAME<>'GLSI017'
ALTER TABLE IAS_RQ_VCHR_MST  MODIFY V_TYPE_NO NUMBER(4)
Insert into  FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP)
Insert into  IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 502, '
Insert into  IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 502, 'Exchange Currencies Reports')
UPDATE form_detail SET F_INACTIVE=1 WHERE F_FILE_NAME='GLSR024' AND FORM_NO=286 AND F_INACTIVE=0
Update S_Flags Set FLG_ST=1   Where
Update S_Flags Set FLG_ST=1   Where
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 1, 'RCPT_SRL_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (1, 2, 2, 'RCPT_SRL_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 3, 3, 'RCPT_SRL_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 1, 1, 'RCPT_SRL_TYP', 'By Sequence',    1, 0, 15392)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, F
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 3, 3, 'RCPT_SRL_TYP', 'By Representative',    1, 0, 15392)
update account set a_analysis=null where a_analysis is not null and  A_S_M<>(SELECT ACCOUNT_TYPE FROM ACCOUNT_TYPES  Where Nvl(affected_by_trans,0)=1)
update account set FLOW_TYPE=null where FLOW_TYPE is not null and  A_S_M<>(SELECT ACCOUNT_TYPE FROM ACCOUNT_TYPES  Where Nvl(aff
update account set a_analysis=null, FLOW_TYPE=null where a_analysis in (select ANLS_NO From IAS_ACCOUNT_ANLSYS
                                                                       Where MN_SUB=0)
update IAS_GL_CSHFLW_AC set a_analysis=null, FLOW_TYPE=null where a_analysis in (select ANLS_NO From IAS_ACCOUNT_ANLSYS
                                                                       Where MN_SUB=0)
update  Priv_Cash set add_flag=1 where NVL(add_flag,0)=0 and ( nvl(PYMNT,0)=1 or  nvl(RCVD,0)=1)
CREATE TABLE GLS_VCHR_TYP_ACNT
CREATE TABLE S_APPRVD_USR_DTL
delete IAS_PRIV_NOTE_TYPES where VIEW_FLAG =0 and add_FL
Insert into  FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)
Insert into  IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 503, '
Insert into  IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 503, 'Exchange Currencies Requests Reports')
delete IAS_SYS.GNR_DDC_TBL where doc_typ in (20,30,39,50,71,736,775,805,1038,1039,87001,87002,87003,87004,87005,87006)
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Alter table S_BRN Modify ( CMP_LNAME VARCHAR2(100),
UPDATE GLS_CRNCY_USR_LMT SET CONN_BRN_NO=IAS_BRN_PKG.Get_Brn_Usr_Con( P_UserNo  =>USER_NO )
CREATE TABLE PMS_COD_PROJECTS_ADD_FLDS
ALTER TABLE  PMS_COD_PROJECTS_ADD_FLDS ADD (
UPDATE  GNR_DDC_TBL SET DOC_PST=1
    WHERE DOC_TYP=72
UPDATE FORM_DETAIL SET F_PARENT_NO=348 
      WHERE FORM_NO=452
UPDATE IAS_FORM_NAME SET FORM_NAME='
      WHERE FORM_NO=452
UPDATE IAS_FORM_NAME SET FORM_NAME='Link the Accounts with Analysis and Cash flow'
      WHERE FORM_NO=452
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,  LBL_NO) Values (2, 1, 1, 'BLNC_BRN_TYP', 'Center Revenue Journal', 1, 1,  14481)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,  LBL_NO) Values (1, 1, 1, 'BLNC_BRN_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,  LBL_NO) Values   (2, 2, 2, 'BLNC_BRN_TYP', 'Center Costing Journal',  1, 1,   14481)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,  LBL_NO) Values   (1, 2, 2, 'BLNC_BRN_TYP', '
delete from S_FLAGS where FLG_CODE='AC_DTL_SEQ' and FLG_VALUE=1
Insert into  FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,    SCR_TYP, DOC_TYP) Values ('STP', 10, 522, 348, 'GENI007',  0, 0, 52, NULL, NULL,  2, NULL)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 522, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 522, 'Default Account List')
DROP TABLE GLS_ACCNT_DFLT
alter table IAS_BANK_ADJUST_dtl drop column c_code
alter table IAS_BANK_ADJUST_dtl drop column v_code
alter table IAS_BANK_ADJUST_MST Add
alter table IAS_BANK_ADJUST_dtl Add
CREATE TABLE GLS_ADVNC_EXPNS_RVNU_MST
CREATE TABLE GLS_ADVNC_EXPNS_RVNU_DTL 
ALTER TABLE  GLS_ADVNC_EXPNS_RVNU_MST ADD (
ALTER TABLE GLS_ADVNC_EXPNS_RVNU_DTL ADD (
EXCEPTION 
EXCEPTION 
delete gnr_ddc_tbl where doc_typ=23
delete IAS_DOCJV_TYPE_SYSTEMS_MST where doc_type=23
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO,ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO,ARCHV_FLG)
Insert into GNR_DDC_TBL (DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST, DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM, TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_NM, TBL_TYPNO_NM, LOV_NM, RPRT_NM, FORM_NO, SYS_NO, F_SYS, TBL_DOCPST_NM)
Insert into GNR_DDC_TBL (DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST,DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM, TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_NM, TBL_TYPNO_NM, LOV_NM,RPRT_NM, FORM_NO, SYS_NO, F_SYS, TBL_DOCPST_NM)
Insert into GNR_DDC_TBL (DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST, DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM, TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_NM, TBL_TYPNO_NM, LOV_NM, RPRT_NM, FORM_NO, SYS_NO, F_SYS, TBL_DOCPST_NM)
Insert into GNR_DDC_TBL(DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST, DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM, TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_N
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO)
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) Values ('GLS', 30, 478, 8, 'GLST023', 1, 0, 34, NULL, NULL, 3, 77)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values  (1, 478, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values  (2, 478, 'Banks cash deposit check')
DELETE * FROM IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
DELETE * FROM  IAS_DFLT_DATA.GLS_ACCNT_DFLT_MST
update form_detail set F_FILE_NAME= 'GENI017' WHERE FORM_NO=453 AND F_FILE_NAME='GENI004'
ALTER TABLE S_BRN DROP COLUMN P_BRN_NO
ALTER TABLE S_BRN DROP COLUMN P_BRN_YEAR
ALTER TABLE S_BRN DROP COLUMN P_BRN_USR
insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) Values ('GLS', 30, 476, 8, 'GLST022',  1, 0, 84, NULL, NULL, 3, 36)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 476, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 476, 'Advance Expenses Settlement')
insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,  SCR_TYP, DOC_TYP) Values('GLS', 30, 477, 8, 'GLST022', 1, 0, 85, NULL, NULL, 3, 3
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 477, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 477, 'Advance Revenues Settlement')
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD1', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD2', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD3', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD4', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD5', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 20, 'DETAIL_JOURNAL_V', 'FLD1', 'Filed1', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 20, 'DETAIL_JOURNAL_V', 'FLD2', 'Filed2', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (3, 21, 'DETAIL_JOURNAL_V', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 21, 'DETAIL_JOURNAL_V', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 21, 'DETAIL_JOURNAL_V', 'FLD5', 'Filed5', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD1', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD2', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD3', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD4', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD5', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD1', 'Filed1', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD2', 'Filed2', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (3, 298, 'IAS_RQ_JRNL_DTL', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD5', 'Filed5', 1)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO)Values   (2, 0, 0, 'DUE_FLG', 'Under Due',1, 1, 74)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (1, 0, 0, 'DUE_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'DUE_FLG', 'Due', 1, 1, 74)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (1, 1, 1, 'DUE_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(2, 2, 2, 'DUE_FLG', 'Cancel',1, 1, 74)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (1, 2, 2, 'DUE_FLG', '
UPDATE IAS_FORM_NAME SET FORM_NAME='Post Receivable Dated Cheuque - Manual' WHERE FORM_NO=27 AND LANG_NO=2
UPDATE IAS_FORM_NAME SET FORM_NAME='
' WHERE FORM_NO=27 AND LANG_NO=1
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values(2, 481, 'Post Payment Dated Cheuque - Manual')
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (1, 481, '
INSERT INTO PRIVILEGE (
SELECT  PST_FLAG, VRFY_FLAG, UP_U_ID, 
   U_ID FROM  PRIVILEGE
   WHERE FORM_NO=27
INSERT INTO PRIVILEGE (
SELECT  PST_FLAG, VRFY_FLAG, UP_U_ID, 
   U_ID FROM  PRIVILEGE
   WHERE FORM_NO=27
UPDATE S_FLAGS SET FLG_PRIV=1 WHERE FLG_PRIV=0 AND FLG_CODE='CHEQ_VALUED'
INSERT INTO S_FLAGS_PRIV ( PRIV_FLAG, FLG_VALUE,FLG_CODE, U_ID) 
SELECT  1, FLG_VALUE,'CHEQ_VALUED', D.U_ID
FROM S_FLAGS M,USER_R D
WHERE FLG_CODE='CHEQ_VALUED'
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 0, 0, 'CHK_BGT_AMT', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 1, 'CHK_BGT_AMT', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(1, 2, 2, 'CHK_BGT_AMT', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 0, 0, 'CHK_BGT_AMT', 'Not used', 1, 0, 6090)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_D
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (2, 2, 2, 'CHK_BGT_AMT', 'Branch Budget', 1, 0, 6090)
Insert into IAS_SIGNATURE(LANG_NO, FORM_NO, DOC_TYPE, JV_TYPE, DOC_TYPE_A_NAME,DOC_TYPE_E_NAME, SIGNATURE1, SIGNATURE2, SIGNATURE3, SIGNATURE4,SIGNATURE5, SIGNATURE6)
Insert into IAS_SIGNATURE(LANG_NO, FORM_NO, DOC_TYPE, JV_TYPE, DOC_TYPE_A_NAME,DOC_TYPE_E_NAME, SIGNATURE1, SIGNATURE2, SIGNATURE3, SIGNATURE4,SIGNATURE5, SIGNATURE6)
ALTER TABLE GLS_BNK_IDNTF_MST   RENAME COLUMN PPROVED TO APPROVED
ALTER TABLE GLS_BNK_IDNTF_MST   ADD APRV_DSC  VARCHAR2(500 CHAR)
UPDATE Voucher_Detail D 
    SET D.CRD_WTHDRW_AMT=((NVL(AC_AMT,0)*-1)+(NVL(CRD_COMM_AMT,0)*NVL((SELECT EX_RATE FROM VOUCHERS WHERE V_SER=D.V_SER AND TRANSFER=3),1)))/(SELECT EX_RATE FROM VOUCHERS WHERE V_SER=D.V_SER AND TRANSFER=3)
    WHERE NVL(CRD_COMM_CALC_TYP,0)=1
UPDATE Voucher_Detail D 
  SET D.CRD_WTHDRW_AMT=(NVL(AC_AMT,0)*-1)/(SELECT EX_RATE FROM VOUCHERS WHERE V_SER=D.V_SER AND TRANSFER=3)
  WHERE NVL(CRD_COMM_CALC_TYP,0)=0
delete S_FLAGS where FLG_CODE='ADVNC_EXPNS_RVNU_FLG' 
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 2, 2, 'ADVNC_EXPNS_RVNU_FLG', 'Due Expens or Revenue',  1, 0, 16471)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 1, 1, 'ADVNC_EXPNS_RVNU_FLG', 'Advance Expens or Revenue',  1, 0, 16471)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values  (1, 2, 2, 'ADVNC_EXPNS_RVNU_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 1, 1, 'ADVNC_EXPNS_RVNU_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 0, 0, 'ADVNC_EXPNS_RVNU_FLG', 'Not Transitional', 1, 0, 16471)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 0, 0, 'ADVNC_EXPNS_RVNU_FLG', '
insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, DOC_PST, FLG_ST,DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, DOC_PST, FLG_ST,DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, J
Insert into IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME, FLG_ST, DOC_PST, ARCHV_FLG)
UPDATE FORM_DETAIL SET DOC_TYP=NULL WHERE DOC_TYP IN(36,37) AND FORM_NO IN(236,237) AND F_FILE_NAME IN('INVT013','INVT014')
UPDATE GNR_DDC_TBL SET AUDIT_FLG=1 
            WHERE AUDIT_FLG <>1 AND DOC_PST=1 AND DOC_TYP  IN(1,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,23,27,28,29,36,3745,83,84,500,501,502,504)
UPDATE FORM_DETAIL SET SCR_TYP=3,  DOC_TYP = 300 WHERE  F_FILE_NAME ='PMST062'
UPDATE FORM_DETAIL SET SCR_TYP=3,  DOC_TYP = 301 WHERE  F_FILE_NAME ='PMST063'
UPDATE FORM_DETAIL SET SCR_TYP=3,  DOC_TYP = 302 WHERE  F_FILE_NAME ='PMST068'
UPDATE FORM_DETAIL SET SCR_TYP=3,  DOC_TYP = 303 WHERE  F_FILE_NAME ='PMST069'
UPDATE GNR_DDC_TBL SET FLG_ST = 1 WHERE DOC_TYP IN (300,301,302,303) AND F_SYS = 'PMS'
UPDATE IAS_DOCJV_TYPE_SYSTEMS_MST SET DOC_APPRVD_FLG=0 where doc_type=2
UPDATE GNR_DDC_TBL SET DOC_APPRVD_FLG=0 where doc_type=2 
update GNR_DDC_TBL set AUDIT_FLG=1 where doc_typ in (1203,1204,1206,1207)
update FORM_DETAIL set SCR_TYP=3 where doc_typ in (1203,1204,1206,1207))
update GNR_DDC_TBL set AUDIT_FLG=0,doc_pst=0 where doc_typ in (735,737)
update IAS_DOCJV_TYPE_SYSTEMS_MST set doc_pst=0 where doc_type in (735,737)
UPDATE FORM_DETAIL SET F_BT_PRIV=1 WHERE FORM_NO=106
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 1, 1, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 1, 1, 'ASTMNT_TYPE', 'For Accounts', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 2, 2, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 2, 2, 'ASTMNT_TYPE', 'For Cost Cntr', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 3, 3, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 3, 3, 'ASTMNT_TYPE', 'For Cash', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 4, 4, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 4, 4, 'ASTMNT_TYPE', 'For Banks', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 5, 5, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 5, 5, 'ASTMNT_TYPE', 'For Customer', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 6, 6, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 6, 6, 'ASTMNT_TYPE', 'For Vendor', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 7, 7, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 7, 7, 'ASTMNT_TYPE', 'For Lc.', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values  (1, 8, 8, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values  (2, 8, 8, 'ASTMNT_
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values  (1, 9, 9, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values  (2, 9, 9, 'ASTMNT_TYPE', 'For Vendor Conn. Cusromer', 1,1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 10, 10, 'ASTMNT_TYPE', 'Projects', 1, 1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 10, 10, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 11, 11, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 11, 11, 'ASTMNT_TYPE', 'Activities', 1, 1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,FLG_PRIV  ) VALUES ( 1, 12, 12, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,FLG_PRIV  ) VALUES ( 2, 12, 12, 'ASTMNT_TYPE', 'Branches', 1,1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,FLG_PRIV  ) VALUES ( 1, 13, 13, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,FLG_PRIV  ) VALUES ( 2, 13, 13, 'ASTMNT_TYPE', 'Campanies', 1,1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ,FLG_PRIV ) VALUES ( 1, 14, 14, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ,FLG_PRIV ) VALUES ( 2, 14, 14, 'ASTMNT_TYPE', 'Employees', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 15, 15, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,  FLG_PRIV, LBL_NO) Values   (2, 15, 15, 'ASTMNT_TYPE', 'Sales man',  1, 1, 488)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 16, 16, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST,FLG_PRIV, LBL_NO) Values   (2, 16, 16, 'ASTMNT_TYPE', 'Collectors',     1, 1, 2459)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 17, 17, 'ASTMNT_TYPE', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 17, 17, 'ASTMNT_TYPE', 'Sub. Analysis',  1, 1, 3299)
ALTER TABLE IAS_PARA_GL DROP COLUMN MNDTRY_BILL_NO_PAYMNT
Insert  into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values(1, 1, 1, 'RPRT_HDR_TYP', '
Insert  into S_FLAGS (LANG_NO, F
Insert  into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values  (2, 3, 3, 'RPRT_HDR_TYP', 'Empty Header',  1, 0)
Insert  into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values  (2, 1, 1, 'RPRT_HDR_TYP', 'Reports Adresses - data',   1, 0)
Insert  into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 2, 2, 'RPRT_HDR_TYP', 'Reports Adresses - Image', 1, 0)
Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 3, 3, 'RPRT_HDR_TYP', '
UPDATE IAS_FORM_NAME SET FORM_NAME='
' WHERE FORM_NO=453 AND LANG_NO=1
UPDATE FORM_DETAIL SET F_BT_PRIV=1,DOC_TYP=27 WHERE FORM_NO = 454"UPDATE FORM_DETAIL SET F_BT_PRIV=1,DOC_TYP=66 WHERE FORM_NO = 29"UPDATE FORM_DETAIL SET F_BT_PRIV=1,DOC_TYP=67 WHERE FORM_NO = 30"UPDATE FORM_DETAIL SET F_BT_PRIV=1,DOC_TYP=68 WHERE FORM_NO = 31"UPDATE FORM_DETAIL SET DOC_TYP=2 WHERE F_FILE_NAME = ''GLST004''"UPDATE FORM_DETAIL SET DOC_TYP=3 WHERE F_FILE_NAME = ''GLST002''"UPDATE S_FLAGS SET FLG_ST=1 WHERE FLG_CODE IN ( ''POST_DOC_TYPE'',''UNPOST_DOC_TYPE''  ) AND FLG_VALUE IN ( 27,28,29  )"UPDATE DETAIL_JOURNAL_V SET DOC_TYPE_REF=135 WHERE DOC_TYPE_REF = 73"UPDATE IAS_CHEQ_TRACE SET AC_CODE_DTL=NVL(C_CODE,NVL(V_CODE,CSH_BNK_NO))"UPDATE IAS_CHEQ_TRACE SET AC_CODE_DTL_END=NVL(C_CODE_END,V_CODE_END)"UPDATE IAS_CHEQ_TRACE SET AC_DTL_TYP=YS_AC_DTL_PKG.GET_AC_DTL_TYP(A_CODE)"UPDATE IAS_CHEQ_TRACE SET AC_DTL_TYP_END=YS_AC_DTL_PKG.GET_AC_DTL_TYP(AC_CODE_DTL)"UPDATE COST_CENTERS SET USE_PJ=0 WHERE USE_PJ = 2"SELECT NVL(USE_BGT_APPRVL,0)   FROM IAS_PARA_GL"UPDATE FORM_DETAIL SET F_INACTIVE=1 WHERE FORM_NO = 462"UPDATE IAS_DOCJV_TYPE_SYSTEMS_MST SET FLG_ST=0 WHERE DOC_TYPE = 76"UPDATE IAS_DOCJV_TYPE_SYSTEMS SET FLG_ST=0 WHERE DOC_TYPE = 76"UPDATE PRIV_CASH SET PYMNT=1,RCVD=1 WHERE ADD_FLAG = 1  AND PYMNT IS NULL  AND PYMNT IS NULL"UPDATE ACCOUNT SET USE_CC=0 WHERE USE_CC != 0  AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_CC=1 WHERE USE_CC IS NULL  AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_CC=2 WHERE USE_CC != 2  AND A_REPORT IN (SELECT REPORT_TYPE   FROM ACCOUNT_REPORT_TYPE  WHERE NVL(REPORT_BS,0) = 0 ) AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_CC=1 WHERE USE_CC != 1  AND A_REPORT IN (SELECT REPORT_TYPE   FROM ACCOUNT_REPORT_TYPE  WHERE NVL(REPORT_BS,0) = 1 ) AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_CC=2 WHERE USE_CC != 2  AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECT
ED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_PJ=0 WHERE USE_PJ != 0  AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_PJ=1 WHERE USE_PJ != 1  AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_PJ=2 WHERE USE_PJ != 2  AND A_REPORT IN (SELECT REPORT_TYPE   FROM ACCOUNT_REPORT_TYPE  WHERE NVL(REPORT_BS,0) = 0 ) AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_PJ=1 WHERE USE_PJ != 1  AND A_REPORT IN (SELECT REPORT_TYPE   FROM ACCOUNT_REPORT_TYPE  WHERE NVL(REPORT_BS,0) = 1 ) AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE ACCOUNT SET USE_PJ=2 WHERE USE_PJ != 2  AND A_S_M IN (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"UPDATE COST_CENTERS SET USE_PJ=1 WHERE USE_PJ != 1  AND C_S_M IN (SELECT CC_TYPE   FROM COST_CENTER_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GLS_EMP'',''LOV_GL_PYMNT'',''LOV_GL_JRNL_RQ'',''LOV_AC_CODE_ASTMNT'',''LOV_GL_RCPT'',''LOV_GL_RQ_VCHR'',''LOV_GL_RQ_VCHR_NOCSH'',''LOV_GL_VCHR_DTL'',''LOV_GLS_VCHR_DTL'',''LOV_GLS_JRNL_DTL'',''LOV_AC_CODE_DTL_CUR'',''LOV_AC_CODE_DTL''  )"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GL_RQ_VCHR'',''LOV_GL_RQ_VCHR_NOCSH'',''LOV_GL_RCPT'',''LOV_GL_PYMNT'',''LOV_GL_RQ_VCHR'',''LOV_GL_RQ_VCHR_NOCSH'',''LOV_GL_VCHR_DTL'',''LOV_GLS_VCHR_DTL'',''LOV_GLS_JRNL_DTL'',''LOV_AC_CODE_DTL_CUR'',''LOV_AC_CODE_DTL''  )"INSERT INTO GLS_AC_CODE_DTL_GRPS ( GRP_CODE,AC_CODE,GRP_CONN_CODE,GRP_L_NM,GRP_F_NM,AC_DTL_TYP,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,PR_REP,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  SELECT G.GRP_CODE,G.GRP_AC_CODE,G.GRP_CODE,G.GRP_L_NM,G.GRP_F_NM,G.AC_DTL_TYP,G.AD_U_ID,G.AD_DATE,G.UP_U_ID,G.UP_DATE,G.PR_REP,G.UP_CNT,G.AD_TRMNL_NM,G.UP_TRMNL_NM   FROM GLS_ACCNT_DTL_GRPS G"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GL_RQ_VCHR'',''LOV_AC_CODE_DTL_GRPS'',''LOV_AC_CODE_DTL''  )"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_S_FLG'',''LOV_GL_RQ_VCHR'',''LOV_REM_V_BILL_RNT_MST_YR'',''LOV_REM_V_BILL_RNT_MST'',''LOV_DOC_BRN'',''LOV_GL_RQ_VCHR'',''LOV_GL_RQ_VCHR_NOCSH''  )"DELETE FROM S_FLAGS WHERE FLG_CODE = ''BAL_TYPE''"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_DOC_BRN'',''LOV_GL_RCPT''  )"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GLS_RQ_EXCH_CUR'',''LOV_GLS_EXCH_CUR''  )"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GL_RQ_VCHR'',''LOV_GL_RQ_VCHR_NOCSH''  ) AND NVL(LOV_SPCL_FLG,0) = 0"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GL_PYMNT'',''LOV_GL_RCPT'',''LOV_GLS_RQ_EXCH_CUR'',''LOV_GL_RQ_VCHR'',''LOV_GL_RQ_VCHR_NOCSH''  ) AND NVL(LOV_SPCL_FLG,0) = 0"UPDATE VOUCHER_DETAIL SET AC_AMTF= NULL  WHERE AC_AMTF = 0"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GLS_RQ_EXCH_CUR'',''LOV_HRS_NET_SLRY_EMP'',''LOV_GL_RCPT''  )"DELETE FROM S_ALRT_SYS_MST WHERE ALRT_NO = 13"INSERT INTO S_ALRT_SYS_MST ( ALRT_NO,ALRT_TYP,LBL_NO,ORDR_NO,ALRT_DAY,MSG_NO,SYS_NO,ALRT_SLCT,ALRT_ACTN,ALRT_PRD_TYP,ALRT_SLCT_WHR,ALRT_SLCT_ORDR,INACTIVE,INACTIVE_DATE,INACTIVE_RES,INACTIVE_U_ID,UP_U_ID,UP_DATE,UP_CNT,PR_REP,AD_U_ID,AD_DATE,ALRT_ST,ALRT_GRP_BY,ALRT_HIDE,ALRT_HIDE_WHR,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 13,1,2460,13, NULL ,1979,30,''Select 1  
                    From Account M,ias_v_ac_code_dtl_blnc  D
                    Where M.A_Code=D.A_Code
                     And Rownum<=1'',2, NULL ,''And A_S_M=(Select Account_Type From Account_Types Where  Affected_By_Trans =1)
                     And Exists ( Select 1 From Priv_Acc 
                                   Where U_Id = V_USR_NO
                                     And Rownum<=1) '', NULL ,0, NULL , NULL , NULL , NULL , NULL , NULL , NULL ,1,TO_DATE(''11/20/2017 23:54:17'',''MM/DD/YYYY HH24:MI:SS''),1, NULL ,0, NULL ,''IAS_Ac_Diff_Type_Bal'', NULL , NULL   )"SELECT RCPT_SRL_TYP   FROM IAS_PARA_GL  WHERE ROWNUM <= 1"UPDATE CASH_IN_HAND SET RCPT_SRL_TYP=:b1 WHERE RCPT_SRL_TYP = 1"UPDATE CASH_AT_BANK SET RCPT_SRL_TYP=:b1 WHERE RCPT_SRL_TYP = 1"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GL_PYMNT'',''LOV_GL_RQ_VCHR'',''LOV_GL_RQ_VCHR_NOCSH'',''LOV_GL_VCHR_DTL'',''LOV_GLS_VCHR_DTL'',''LOV_GLS_JRNL_DTL'',''LOV_AC_CODE_DTL_CUR'',''LOV_AC_CODE_DTL''  ) AND NVL(LOV_SPCL_FLG,0) != 1"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_CST'',''LOV_VND''  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 55,''LOV_CST'',116,''SELECT M.C_CODE,M.C_A_CODE, DECODE(:PARAMETER.LANG_DFLT,1,M.C_A_NAME,NVL(M.C_E_NAME,M.C_A_NAME)) C_NM '' || CHR(13)  || CHR(10)  || '',M.C_MOBILE,M.C_PHONE  FROM CUSTOMER M WHERE 1=1'' ,5,''388,129,390,6524,47'',''60,60,200,80,80'', NULL ,'' LPAD(FLD1,30,0)'','',1,2,'','',3,'','' AND EXISTS (SELECT 1 FROM IAS_PRIV_CUSTOMER WHERE U_ID= :PARAMETER.USER_NO AND C_CODE=M.C_CODE AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1) '', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 56,''LOV_VND'',106,''SELECT M.V_CODE,M.V_A_CODE, DECODE(:PARAMETER.LANG_DFLT,1,M.V_A_NAME,M.V_E_NAME) V_NM ,M.V_MOBILE,M.V_PHONE FROM V_DETAILS M WHERE 1=1'',5,''328,129,339,6524,47'',''60,60,200,80,80'', NULL ,'' LPAD(FLD1,30,0)'','',1,2,'','',3,'','' AND EXISTS (SELECT 1 FROM IAS_PRIV_VENDOR WHERE U_ID= :PARAMETER.USER_NO AND V_CODE=M.V_CODE AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1)'', NULL , NULL , NULL ,0  )"UPDATE IAS_DOCJV_TYPE_SYSTEMS_MST SET DOC_PST=1 WHERE DOC_TYPE = 23  AND DOC_PST = 0"UPDATE GNR_DDC_TBL SET DOC_PST=1 WHERE DOC_TYP = 23  AND DOC_PST = 0"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GL_PYMNT'',''LOV_GNR_APPRV_DOCTYP'',''LOV_GL_RQ_VCHR'',''LOV_GL_RQ_VCHR_NOCSH'',''LOV_GL_VCHR_DTL'',''LOV_GLS_VCHR_DTL'',''LOV_GLS_JRNL_DTL'',''LOV_AC_CODE_DTL_CUR'',''LOV_AC_CODE_DTL''  ) AND NVL(LOV_SPCL_FLG,0) != 1"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_CST'',''LOV_CC'',''LOV_PRJCTS'',''LOV_ACTV''  ) AND NVL(LOV_SPCL_FLG,0) != 1"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GLS_RQ_EXCH_CUR'',''LOV_GL_RCPT''  )"
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO,ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, RPRT_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO,ARCHV_FLG)
Insert into GNR_DDC_TBL (DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST, DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM, TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_NM, TBL_TYPNO_NM, LOV_NM, RPRT_NM, FORM_NO, SYS_NO, F_SYS, TBL_DOCPST_NM)
Insert into GNR_DDC_TBL (DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST,DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM, TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_NM, TBL_TYPNO_NM, LOV_NM,RPRT_NM, FORM_NO, SYS_NO, F_SYS, TBL_DOCPST_NM)
Insert into GNR_DDC_TBL (DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST, DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM, TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_NM, TBL_TYPNO_NM, LOV_NM, RPRT_NM, FORM_NO, SYS_NO, F_SYS, TBL_DOCPST_NM)
Insert into GNR_DDC_TBL(DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST, DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM, TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_NM, TBL_TYPNO_NM, LOV_NM,RPRT_NM, FORM_NO, SYS_NO, F_SYS, TBL_DOCPST_NM)
Insert into IAS_SIGNATURE(LANG_NO, FORM_NO, DOC_TYPE, JV_TYPE, DOC_TYPE_A_NAME,DOC_TYPE_E_NAME, SIGNATURE1, SIGNATURE2, SIGNATURE3, SIGNATURE4,SIGNATURE5, SIGNATURE6)
Insert into IAS_SIGNATURE(LANG_NO, FORM_NO, DOC_TYPE, JV_TYPE, DOC_TYPE_A_NAME,DOC_TYPE_E_NAME, SIGNATURE1, SIGNATURE2, SIGNATURE3, SIGNATURE4,SIGNATURE5, SIGNATURE6)
insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, DOC_PST, FLG_ST,DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
insert into IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, DOC_PST, FLG_ST,DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS    (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME,     AD_DATE, UP_DATE, FLG_ST, DOC_PST, UP_CNT,     PR_REP, AD_TRMNL_NM, UP_TRMNL_NM, ARCHV_FLG)
Insert into IAS_DOCJV_TYPE_SYSTEMS    (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME,     AD_DATE, UP_DATE, FLG_ST, DOC_PST, UP_CNT,     PR_REP, AD_TRMNL_NM, UP_TRMNL_NM, ARCHV_FLG)
INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,VWREP_FLAG,F_ORDER_NO,AD_U_ID,AD_DATE )
  SELECT R.U_ID,F.FORM_NO,1,1,1,1,1,1,1,F.F_ORDER_NO,1,SYSDATE   FROM USER_R R,FORM_DETAIL F  WHERE R.U_ID = 1  AND F.SYS_NO IN ( 30,35,36,165  ) AND NOT EXISTS  (SELECT 1   FROM PRIVILEGE  WHERE U_ID = R.U_ID  AND FORM_NO = F.FORM_NO  AND ROWNUM <= 1 )"SELECT 1   FROM GLS_VCHR_TYP_ACNT  WHERE ROWNUM <= 1"SELECT 1   FROM GLS_TAX_ACC  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_AC_EXPENSE_DIST  WHERE ROWNUM <= 1"SELECT 1   FROM S_APPRVD_USR_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM GLS_BNK_CHQ_MST  WHERE ROWNUM <= 1"
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'JRNL_SEQ_TYP', 'By type',  1, 0, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (1, 2, 2, 'JRNL_SEQ_TYP', ' 
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (2, 2, 2, 'JRNL_SEQ_TYP', 'By period and type',  1, 0, NULL)
ALTER TABLE IAS_AC_CC_LMT DROP CONSTRAINT IASACCCLMT_PK
ALTER TABLE IAS_AC_CC_LMT ADD ( CONSTRAINT ACCLMT_CC_FK  FOREIGN KEY (CC_CODE) REFERENCES COST_CENTERS (CC_CODE))
ALTER TABLE IAS_AC_CC_LMT ADD ( CONSTRAINT ACCLMT_PJ_FK  FOREIGN KEY (PJ_NO) 
ALTER TABLE IAS_AC_CC_LMT ADD ( CONSTRAINT ACCLMT_AC_FK  FOREIGN KEY (A_CODE)  REFERENCES ACCOUNT (A_CODE))
    ALTER TABLE GLS_ACCNT_DTL_GRPS ADD (
    ALTER TABLE GLS_ACCNT_DTL ADD (
    ALTER TABLE GLS_ACCNT_DTL_CURR ADD (
    ALTER TABLE GLS_ACCNT_DTL_PRIV ADD (
ALTER TABLE GLS_VCHR_TYP_PRV ADD ( CONSTRAINT GLS_VCHR_TYP_PRV_FK  FOREIGN KEY (V_TYP, V_TYP_NO) REFERENCES IAS_VOUCHR_TYPE (V_TYPE,V_TYPE_NO) ON DELETE CASCADE)
ALTER TABLE  PMS_COD_PROJECTS_ADD_FLDS ADD (
ALTER TABLE  GLS_ADVNC_EXPNS_RVNU_MST ADD (
ALTER TABLE GLS_ADVNC_EXPNS_RVNU_DTL ADD (
Insert into  FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,    SCR_TYP, DOC_TYP) Values ('STP', 10, 522, 348, 'GENI007',  0, 0, 52, NULL, NULL,  2, NULL)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 522, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 522, 'Default Account List')
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values  (2, 27, 'Post Receivable Dated Cheuque - Manual')
Insert into IAS_FORM_NAME  (LANG_NO, FORM_NO, FORM_NAME) Values (1, 27, '
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values(2, 481, 'Post Payment Dated Cheuque - Manual')
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (1, 481, '
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) Values ('GLS', 30, 478, 8, 'GLST023', 1, 0, 34, NULL, NULL, 3, 77)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values  (1, 478, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values  (2, 478, 'Banks cash deposit check')
insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) Values ('GLS', 30, 476, 8, 'GLST022',  1, 0, 84, NULL, NULL, 3, 36)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 476, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 476, 'Advance Expenses Settlement')
insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,  SCR_TYP, DOC_TYP) Values('GLS', 30, 477, 8, 'GLST022', 1, 0, 85, NULL, NULL, 3, 37);
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 477, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 477, 'Advance Revenues Settlement')
Insert into FORM_DETAIL    (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_
Insert into IAS_FORM_NAME    (LANG_NO, FORM_NO, FORM_NAME)
Insert into IAS_FORM_NAME    (LANG_NO, FORM_NO, FORM_NAME)  Values    (2, 504, 'Bank Matching')
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'GLS',30,102,61,'GLSS015',1,0,4,NULL,NULL,1,NULL)
Insert into IAS_FORM_NAME    (LANG_NO, FORM_NO, FORM_NAME)
Insert into IAS_FORM_NAME    (LANG_NO, FORM_NO, FORM_NAME)  Values    (2, 102, 'Cash Grouping')
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
GLS_FUNCTION_PKG
/TMP1/GLS_FUNCTION_PKG
"GLS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
CREATE OR REPLACE FUNCTION  GET_DUE_AMT_Fnc(  P_loc_cur  In VARCHAR2,
 BEGIN
      V_WHR:=' And  DTL.a_code in (select a_code from ias_acc_tree where ac_tree='''||P_GRP_V1||''')';
      V_WHR:=' And  DTL.Cc_code in (select Cc_code from ias_cc_tree where Cc_tree='''||P_GRP_V1||''')';
       V_WHR:=V_WHR||' And DTL.AC_DTL_TYP=3 AND DTL.AC_CODE_DTL IN ( SELECT C_CODE FROM CUSTOMER
                                                    WHERE C_PARENT= '''||P_GRP_V1||''')';
      V_WHR:=' And DTL.PJ_NO in (select PJ_NO from ias_Pj_tree where PJ_tree='''||P_GRP_V1||''')';
      V_WHR:=' And DTL.ACTV_NO in (select ACTV_NO from ias_ACTV_tree where ACTV_tree='''||P_GRP_V1||''')';
      V_WHR:=' And CITY_NO in (select CITY_NO from CITIES where  CITY_NO='''||P_GRP_V1||''')';
      V_WHR:=' And CNTRY_NO in (select CNTRY_NO from CNTRY where  CNTRY_NO='''||P_GRP_V1||''')';
      V_WHR:=' And PROV_NO in (select PROV_NO from IAS_PROVINCES where  PROV_NO='''||P_GRP_V1||''')';
  --  If P_loc_amt  = 0  Then --(1)v  by currency      --And a_code in (select a_code from ias_acc_tree where ac_tree='''||P_GRP_V1||''')   
            'Select sum(DECODE(NVL('||P_REP_LOC||',0),1,nvl(AMT,0)
                 From GLS_V_PST_DTL_VCHR_CHQ DTL ,'||P_TBL_NAME||' Ver
                  WHERE 1=1      
             /* 'Select sum(DECODE(NVL('||P_REP_LOC||',0),1,nvl(AMT,0)
                 From (SELECT * FROM IAS_V_POST_DTL_YR
                       WHERE doc_type in(2,3)
                         And DOC_Ser In (Select V_Ser From Vouchers Where Cheq_Type<>0 and  nvl(TRANSFER,0)=0 )
                         And DOC_Ser In (Select V_Ser From VOUCHER_DETAIL Where NVL(CHEQUE_VALUED,0) In (0,3))
                         and a_code NOT IN (select a_code from cash_in_hand)
                  WHERE 1=1      
Exception When others then
CREATE OR REPLACE FUNCTION  GET_CC_PJ_ACTV_NM(P_AC_CODE    IN ACCOUNT.A_CODE%TYPE  DEFAULT NULL
EXCEPTION 
CREATE OR REPLACE FUNCTION Ys_Get_Blnc_Ac_Dtl_Fnc(P_A_CODE       IN ACCOUNT.A_CODE%TYPE  DEFAULT NULL,
           Select Decode(P_cur_code,Null,nvl(sum(amt),0),P_Loc_Cur,nvl(sum(amt),0),nvl(sum(amt_f),0))
             From Ias_Post_Dtl
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(P_cur_code,Null,nvl(sum(amt),0),P_LOC_CUR,nvl(sum(amt),0),nvl(sum(amt_f),0))
             From Ias_Post_Dtl
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(P_cur_code,Null,nvl(sum(amt),0),P_LOC_CUR,nvl(sum(amt),0),nvl(sum(amt_f),0))
             From Ias_Post_Dtl
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select nvl(sum(amt),0)
             From Ias_Post_Dtl
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
       Select nvl(sum(amt),0)
             From Ias_Post_Dtl
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select nvl(sum(amt),0)
             From Ias_Post_Dtl
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
Exception
CREATE OR REPLACE FUNCTION IAS_Get_Prompt_By_Fld (P_Lng_no In number ,
 Select Ias_Gen_Pkg.Get_Prompt(P_Lng_no,TO_NUMBER(SUBSTR(Comments,1,4))) 
   From User_Col_Comments 
   Where Comments In (Select To_Char(Label_No) From Ias_Labels)
 Exception 
CREATE OR REPLACE FUNCTION Get_Ac_Bal_Fnc( P_a_code  In ACCOUNT.A_CODE%TYPE , 
       Select Round(nvl(sum(nvl(amt,0)),0) ,2)
         From ias_post_dtl d
        where nvl(Doc_Post,0) = Decode (P_post ,2,nvl(Doc_Post,0),1)
              and (d.a_code In (Select a_code from ias_Acc_tree where AC_TREE = P_a_code ) Or d.a_code = p_a_code)
Exception 
CREATE OR REPLACE FUNCTION GET_AC_TYPE(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER IS
 Select nvl(report_bs,0) 
   From account_report_type,account
  where account_report_type.report_type=account.a_report
Exception 
CREATE OR REPLACE FUNCTION Doc_Type_Name(   P_lang    In NUMBER,
    Begin
        Select DOC_TYPE_NAME
            From Ias_Sys.IAS_DOCJV_TYPE_SYSTEMS_MST
        Where Lang_no  = P_lang
    Exception 
    End;
    Begin
        Select Decode(P_Lang,1,jv_name,jv_e_name) 
            From jv_types
            where jv_type=P_jvtype;
    Exception 
    End;
    Begin
        Select Decode(P_Lang,1,incom_name,incom_e_name) 
            From Incom_Types
            where Incom_Type=P_jvtype;
    Exception 
    End;
    Begin
        Select Decode(P_Lang,1,out_name,out_e_name) 
        From out_Types
        where out_Type=P_jvtype;
    Exception 
    End;
    Begin
        Select Decode(P_Lang,1,Tr_name,Tr_e_name) 
            From transfer_Types
        where Tr_Type=P_jvtype;
    Exception 
    End;
    Begin
        Select Flg_Desc 
            From S_Flags
        Where Lang_no  = P_lang
    Exception 
    End;
        Begin
            Select Flg_Desc 
                From S_Flags
            Where Lang_no  = P_lang
        Exception 
        End;
        Begin
            Select Flg_Desc 
                From S_Flags
            Where Lang_no  = P_lang
        Exception 
        End;     
        Begin
            Select Flg_Desc 
                From S_Flags
            Where Lang_no  = P_lang
        Exception 
        End;
        Begin
              Select Jv_NAME 
                From Ias_Sys.IAS_DOCJV_TYPE_SYSTEMS
               Where Lang_no  = P_lang
        Exception 
              Begin
              Select Doc_Type_Name 
                From Ias_Sys.IAS_DOCJV_TYPE_SYSTEMS_MST
               Where Lang_no  = P_lang
        Exception 
                Select Flg_Desc 
                  From S_Flags
                 Where Lang_no  = P_lang
            End;
        End;
Exception 
CREATE OR REPLACE FUNCTION GET_VER_CODE_NAME( P_Lng_no In Number DEFAULT 1,
        Select Decode(P_Lng_no,1,Nvl(GROUP_NAME,GROUP_E_NAME) ,Nvl(GROUP_E_NAME,GROUP_NAME) )
          From ACCOUNT_GROUPING 
         Where GROUP_NO=P_CLM_VAL  And RowNum<=1; 
        Select Decode(P_Lng_no,1,Nvl(CLASS_A_NAME,CLASS_E_NAME) ,Nvl(CLASS_E_NAME,CLASS_A_NAME) )
          From IAS_ACCOUNT_CLASS 
         Where CLASS_NO=P_CLM_VAL  And RowNum<=1; 
  Select Decode(P_Lng_no,1,ANLS_L_NM,nvl(ANLS_F_NM,ANLS_L_NM))
    from IAS_ACCOUNT_ANLSYS 
   WHERE ANLS_NO=P_CLM_VAL  And RowNum<=1; 
         Select Decode(P_Lng_no,1,GROUP_NAME,nvl(GROUP_E_NAME,GROUP_NAME))
    from CC_GROUPING 
   WHERE GROUP_NO=P_CLM_VAL  And RowNum<=1; 
       Select Decode(P_Lng_no,1,Nvl(REPRS_A_NAME,REPRS_E_NAME) ,Nvl(REPRS_E_NAME,REPRS_A_NAME) )
          From Sales_man 
         Where REPRS_CODE=P_CLM_VAL  And RowNum<=1; 
       Select Decode(P_Lng_no,1,Nvl(COL_NAME,COL_E_NAME) ,Nvl(COL_E_NAME,COL_NAME) )
          From COLLERCTOR 
         Where COL_NO=P_CLM_VAL  And RowNum<=1; 
       Select Decode(P_Lng_no,1,Nvl(R_A_NAME,R_E_NAME), Nvl(R_E_NAME,R_A_NAME) )
          From REGIONS 
         Where R_CODE=P_CLM_VAL   And RowNum<=1; 
       Select Decode(P_lng_no,1,Nvl(CNTRY_A_NAME,CNTRY_E_NAME),Nvl(CNTRY_E_NAME,CNTRY_A_NAME))
          From CNTRY
         Where CNTRY_NO=P_CLM_VAL   And RowNum<=1;   
       Select Decode(P_lng_no,1,Nvl(PROV_A_NAME,PROV_E_NAME),Nvl(PROV_E_NAME,PROV_A_NAME))
          From IAS_PROVINCES
         Where PROV_NO=P_CLM_VAL  And RowNum<=1; 
       Select Decode(P_lng_no,1,Nvl(CITY_A_NAME,CITY_E_NAME),Nvl(CITY_E_NAME,CITY_A_NAME))
          From CITIES 
         Where CITY_NO=P_CLM_VAL  And RowNum<=1; 
       Select Decode(P_lng_no,1,Nvl(CMP_LNAME,CMP_FNAME),Nvl(CMP_FNAME,CMP_LNAME))
          From S_CMPNY 
         Where CMP_NO=P_CLM_VAL  And RowNum<=1; 
       Select LC_DESC
          From LC_MASTER 
         Where LC_NO=P_CLM_VAL  And RowNum<=1; 
       Select Decode(P_Lng_no,1,Nvl(ZONE_L_NM,ZONE_F_NM), Nvl(ZONE_F_NM,ZONE_L_NM) )
          From S_ZONE 
         Where ZONE_NO=P_CLM_VAL   And RowNum<=1;         
Exception When Others Then
Function Prc 
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD5', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD1', 'Filed1', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD2', 'Filed2', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (3, 298, 'IAS_RQ_JRNL_DTL', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD5', 'Filed5', 1)
/TMP1/GLS_FUNCTION_PKG
/TMP1/GLS_PROCEDURE_PKG
UPDATE FORM_DETAIL SET DOC_TYP=2 WHERE F_FILE_NAME = ''GLST004''"UPDATE FORM_DETAIL SET DOC_TYP=3 WHERE F_FILE_NAME = ''GLST002''"
GLS_PROCEDURE_PKG
/TMP1/GLS_PROCEDURE_PKG
"GLS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD1', '
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD2', '
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD3', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD4', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD5', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD6', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD7', '
Insert  into S_SCR_
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD9', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD10', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD1', 'Additional field1', 1)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD2', 'Additional field2', 2)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD3', 'Additional field3', 3)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD4', 'Additional field4', 4)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD5', 'Additional field5', 5)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD6', 'Additional field6', 6)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD7', 'Additional field7', 7)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD8', 'Additional field8', 8)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD9', 'Additional field9', 9)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 476, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD10', 'Additional field10',10)
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD1', '
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD2', '
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD3', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD4', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD5', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD6', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD7', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD8', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD9', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD10', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD1', 'Additional field1', 1)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD2', 'Additional field2', 2)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 477, 'GLS_ADVNC_EXPNS_RVNU_M
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD4', 'Additional field4', 4)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD5', 'Additional field5', 5)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD6', 'Additional field6', 6)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD7', 'Additional field7', 7)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD8', 'Additional field8', 8)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD9', 'Additional field9', 9)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 477, 'GLS_ADVNC_EXPNS_RVNU_MST', 'FIELD10', 'Additional field10',10)
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD1', '
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD2', '
Insert  into S_SCR_LBL  (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD3', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD4', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD5', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD6', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD7', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD8', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD9', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (1, 106, 'S_BRN_DOCS', 'FIELD10', '
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 106, 'S_BRN_DOCS', 'FIELD1', 'Additional field1', 1)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 106, 'S_BRN_DOCS', 'FIELD2', 'Additional field2', 2)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 106, 'S_BRN_DOCS', 'FIELD3', 'Additional field3', 3)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 106, 'S_BRN_DOCS', 'FIELD4', 'Additional field4', 4)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values (2, 106, 'S_BRN_DOCS', 'FIELD5', 'Additional field5', 5)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 106, 'S_BRN_DOCS', 'FIELD6', 'Additional field6', 6)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 106, 'S_BRN_DOCS', 'FIELD7', 'Additional field7', 7)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values  (2, 106, 'S_BRN_DOCS', 'FIELD8', 'Additional field8', 8)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 106, 'S_BRN_DOCS', 'FIELD9', 'Additional field9', 9)
Insert  into S_SCR_LBL   (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO) Values   (2, 106, 'S_BRN_DOCS', 'FIELD10', 'Additional field10',10)
Insert into S_S
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD2', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD3', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD4', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 20, 'DETAIL_JOURNAL_V', 'FLD5', '
Insert into S_
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 20, 'DETAIL_JOURNAL_V', 'FLD2', 'Filed2', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (3, 21, 'DETAIL_JOURNAL_V', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 21, 'DETAIL_JOURNAL_V', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 21, 'DETAIL_JOURNAL_V', 'FLD5', 'Filed5', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD1', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD2', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD3', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD4', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 298, 'IAS_RQ_JRNL_DTL', 'FLD5', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD1', 'Filed1', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD2', 'Filed2', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (3, 298, 'IAS_RQ_JRNL_DTL', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 298, 'IAS_RQ_JRNL_DTL', 'FLD5', 'Filed5', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 21, 'VOUCHER_DETAIL', 'FLD1', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 21, 'VOUCHER_DETAIL', 'FLD2', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 21, 'VOUCHER_DETAIL', 'FLD3', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 21, 'VOUCHER_DETAIL', 'FLD4', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 21, 'VOUCHER_DETAIL', 'FLD5', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 23, 'VOUCHER_DETAIL', 'FLD1', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 23, 'VOUCHER_DETAIL', 'FLD2', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 23, 'VOUCHER_DETAIL', 'FLD3', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 23, 'VOUCHER_DETAIL', 'FLD4', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 23, 'VOUCHER_DETAIL', 'FLD5', '
Insert into S_SCR_LBL (LANG_NO,
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 21, 'VOUCHER_DETAIL', 'FLD5', 'Filed5', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 23, 'VOUCHER_DETAIL', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 21, 'VOUCHER_DETAIL', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 23, 'VOUCHER_DETAIL', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (3, 21, 'VOUCHER_DETAIL', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 23, 'VOUCHER_DETAIL', 'FLD2', 'Filed2', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 21, 'VOUCHER_DETAIL', 'FLD2', 'Filed2', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 23, 'VOUCHER_DETAIL', 'FLD1', 'Filed1', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 21, 'VOUCHER_DETAIL', 'FLD1', 'Filed1', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 299, 'IAS_RQ_VCHR_DTL', 'FLD1', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 300, 'IAS_RQ_VCHR_DTL', 'FLD1', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 299, 'IAS_RQ_VCHR_DTL', 'FLD1', 'Filed1', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 300, 'IAS_RQ_VCHR_DTL', 'FLD1', 'Filed1', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 299, 'IAS_RQ_VCHR_DTL', 'FLD2', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 300, 'IAS_RQ_VCHR_DTL', 'FLD2', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 299, 'IAS_RQ_VCHR_DTL', 'FLD3', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 300, 'IAS_RQ_VCHR_DTL', 'FLD3', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 299, 'IAS_RQ_VCHR_DTL', 'FLD4', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 300, 'IAS_RQ_VCHR_DTL', 'FLD4', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 299, 'IAS_RQ_VCHR_DTL', 'FLD5', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (1, 300, 'IAS_RQ_VCHR_DTL', 'FLD5', '
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 299, 'IAS_RQ_VCHR_DTL', 'FLD2', 'Filed2', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 300, 'IAS_RQ_VCHR_DTL', 'FLD2', 'Filed2',1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 299, 'IAS_RQ_VCHR_DTL', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 300, 'IAS_RQ_VCHR_DTL', 'FLD3', 'Filed3', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 299, 'IAS_RQ_VCHR_DTL', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 300, 'IAS_RQ_VCHR_DTL', 'FLD4', 'Filed4', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 299, 'IAS_RQ_VCHR_DTL', 'FLD5', 'Filed5', 1)
Insert into S_SCR_LBL (LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO) Values (2, 300, 'IAS_RQ_VCHR_DTL', 'FLD5', 'Filed5', 1)
'  ) AND NVL(LOV_SPCL_FLG,0) = 0"UPDATE VOUCHER_DETAIL SET AC_AMTF= NULL  WHERE AC_AMTF = 0"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_GLS_RQ_EXCH_CUR'',''LOV_HRS_NET_SLRY_EMP'',''LOV_GL_RCPT''  )"DELETE FROM S_ALRT_SYS_MST WHERE ALRT_NO = 13"INSERT INTO S_ALRT_SYS_MST ( ALRT_NO,ALRT_TYP,LBL_NO,ORDR_NO,ALRT_DAY,MSG_NO,SYS_NO,ALRT_SLCT,ALRT_ACTN,ALRT_PRD_TYP,ALRT_SLCT_WHR,ALRT_SLCT_ORDR,INACTIVE,INACTIVE_DATE,INACTIVE_RES,INACTIVE_U_ID,UP_U_ID,UP_DATE,UP_CNT,PR_REP,AD_U_ID,AD_DATE,ALRT_ST,ALRT_GRP_BY,ALRT_HIDE,ALRT_HIDE_WHR,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 13,1,2460,13, NULL ,1979,30,''Select 1  
                    From Account M,ias_v_ac_code_dtl_blnc  D
                    Where M.A_Code=D.A_Code
                     And Rownum<=1'',2, NULL ,''And A_S_M=(Select Account_Type From Account_Types Where  Affected_By_Trans =1)
                     And Exists ( Select 1 From Priv_Acc 
                                   Where U_Id = V_USR_NO
CREATE TABLE IAS_PARA_GEN (
  LAST_UPDATE                 DATE,
CREATE TABLE IAS_PARA_REP_MST(
CREATE TABLE IAS_PARA_REP_DTL(
CREATE TABLE IAS_PARA_GL (
CREATE TABLE S_PRD_MST(
CREATE TABLE S_PRD_DTL(
CREATE TABLE S_PRD_DAY(
CREATE TABLE IAS_DESC_DOC (
CREATE TABLE ACCOUNT_GROUPING ( 
CREATE TABLE ACCOUNT_REPORT_TYPE ( 
CREATE TABLE ACCOUNT_TYPES ( 
CREATE TABLE IAS_ACCOUNT_CLASS ( 
CREATE TABLE IAS_BANK_GROUP ( 
CREATE TABLE IAS_CASH_GROUP ( 
CREATE TABLE JV_TYPES ( 
CREATE TABLE JV_TYPES_DETAIL ( 
CREATE TABLE GUARN_TYPE(
CREATE TABLE IAS_NOTE_TYPES( 
CREATE TABLE IAS_PRIV_NOTE_TYPES(
CREATE TABLE COST_CENTER_TYPES ( 
CREATE TABLE CC_GROUPING(
CREATE TABLE IAS_PROJECTS_GROUP (
CREATE TABLE PMS_COD_PROJECTS_ADD_FLDS
CREATE TABLE EX_RATE ( 
CREATE TABLE IAS_EX_RATE_TRACE ( 
CREATE TABLE IAS_CURRENCY_VALUE ( 
ALTER TABLE IAS_CURRENCY_VALUE ADD (CONSTRAINT IAS_IAS_CURRENCY_FK 
CREATE TABLE GLS_CRNCY_USR_LMT (  CUR_CODE        VARCHAR2(7),
CREATE TABLE IAS_PERIOD_EX_RATE_DAY (
CREATE TABLE IAS_PRD_CURR_DIFF
CREATE TABLE S_ZONE(
CREATE TABLE CNTRY(
CREATE TABLE IAS_PROVINCES(
CREATE TABLE CITIES(
CREATE TABLE IAS_VOUCHR_TYPE (
CREATE TABLE GLS_VCHR_TYP_ACNT
CREATE TABLE GLS_VCHR_TYP_PRV(
CREATE TABLE INTERFACE_ACC ( 
CREATE TABLE ALL_BRANCHES ( CMP_GRP     NUMBER (1),
CREATE TABLE S_CMPNY ( 
CREATE TABLE S_BRN_GRPS
CREATE TABLE S_BRN ( 
CREATE TABLE S_BRN_USR_PRIV ( 
CREATE TABLE S_BRN_DOCS ( CODE_NO        NUMBER(10),
CREATE TABLE IAS_AC_CC_LMT(  A_CODE        VARCHAR2(30),
CREATE TABLE IAS_ACCOUNT_OP_REQ (  A_TYPE    NUMBER(1),
CREATE TABLE ACCOUNT ( A_CODE           VARCHAR2 (30)   CONSTRAINT A_CODE_PK PRIMARY KEY USING INDEX  TABLESPACE "IAS_GL_INPT", 
CREATE TABLE ACCOUNT_CU
CREATE TABLE PRIV_ACC (  U_ID       
CREATE TABLE IAS_ACC_TREE( A_CODE          VARCHAR2(30),
CREATE TABLE COST_CENTERS (  CC_NO                     NUMBER(5)       NOT NULL,
CREATE TABLE PRIVILEGE_CC (  U_ID            NUMBER (5), 
CREATE TABLE IAS_ACCOUNT_CC (  A_CODE               VARCHAR2 (30),
CREATE TABLE IAS_CC_TREE(  CC_NO
CREATE TABLE IAS_PROJECTS ( 
CREATE TABLE IAS_PJ_TREE ( PJ_NO           VARCHAR2(15),
CREATE TABLE IAS_PRIV_PROJECTS ( U_ID       
CREATE TABLE IAS_ACCOUNT_PJ( A_CODE   
CREATE TABLE IAS_COMM_CR_CARD_BANK(  BANK_NO         NUMBER(4),
CREATE TABLE IAS_CLMN_DTL_GL ( CLMN_NO    
CREATE TABLE CASH_IN_HAND (  CASH_NO            NUMBER (4), 
CREATE TABLE IAS_CASH_IN_HAND_DTL (  CASH_NO       NUMBER (4)  , 
CREATE TABLE CASH_AT_BANK (  BANK_NO        NUMBER (4), 
CREATE TABLE IAS_CASH_AT_BANK_DTL (  BANK_NO          NUMBER (4) , 
CREATE TABLE IAS_CASH_AT_BANK_BRN (  BRN_BANK_NO     NUMBER (3) , 
CREATE TABLE PRIV_CASH ( U_ID         NUMBER(5),
CREATE TABLE GLS_BNK_CHQ_MST ( BANK_NO      NUMBER(4),
CREATE TABLE GLS_BNK_CHQ_DTL(  BANK_NO         NUMBER(4),
CREATE TABLE GLS_TAX_ACC (  A_CODE        VARCHAR2(30) NOT NULL,
CREATE TABLE OPEN_BAL (  A_CODE        VARCHAR2 (30)     NOT NULL,
CREATE TABLE IAS_GLRQ_TYPES( RQ_DOC_TYPE  NUMBER(4),
CREATE TABLE IAS_GLRQ_TYPES_PRIV(  RQ_DOC_TYPE  NUMBER(4),
CREATE TABLE GLS_BNK_IDNTF_MST
CREATE TABLE GLS_BNK_IDNTF_DTL
CREATE TABLE IAS_GL_REQ_MST( DOC_TYPE       NUMBER(5),
CREATE TABLE IAS_GL_REQ_DTL( DOC_TYPE      NUMBER(5),
CREATE TABLE IAS_RQ_JRNL_MST(  JV_TYPE           NUMBER(4)                   ,
CREATE TABLE IAS_RQ_JRNL_DTL(  JV_TYPE          NUMBER(4)                    ,
CREATE TABLE MASTER_JOURNAL_V (  JV_TYPE          NUMBER (4)
CREATE TABLE DETAIL_JOURNAL_V (  JV_TYPE      
CREATE TABLE IAS_RQ_VCHR_MST(  VOUCHER_TYPE      NUMBER(1)                   NOT NULL,
CREATE TABLE IAS_RQ_VCHR_DTL(  VOUCHER_TYPE      NUMBER(1) CONSTRAINT VDR_NN_VTYPE NOT NULL,
CREATE TABLE GLS_VCHR_MST_ACCNT (  RCRD_NO           NUMBER(10)                  NOT NULL,
CREATE TABLE GLS_RQ_VCHR_MST_ACCNT ( RCRD_NO           NUMBER(10)                  NOT NULL,
CREATE TABLE GLS_RQ_EXCH_CUR_MST ( DOC_NO          NUMBER(20)               NOT NULL,
CREATE TABLE GLS_RQ_EXCH_CUR_DTL ( DOC_NO           NUMBER(20)                   NOT NULL,
CREATE TABLE VOUCHERS (    VOUCHER_TYPE      NUMBER (1)
CREATE TABLE VOUCHER_DETAIL (  VOUCHER_TYPE        NUMBER (1)     
CREATE TABLE IAS_VCHR_CHQ_DTL( VOUCHER_TYPE      NUMBER(1)  NOT NULL,
CREATE TABLE IAS_CHEQ_TRACE(   AUD_TYPE          NUMBER(1)
CREATE TABLE GLS_ADVNC_EXPNS_RVNU_MST
CREATE TABLE GLS_ADVNC_EXPNS_RVNU_DTL 
EXCEPTION 
EXCEPTION 
CREATE TABLE NOTE (  NOTE_TYPE     NUMBER (1)       NOT NULL,
CREATE TABLE NOTE_DETAIL (   NOTE_TYPE     NUMBER (1)         NOT NULL, 
CREATE TABLE IAS_BANK_ADJUST_MST (   DOC_NO
CREATE TABLE IAS_BANK_ADJUST_DTL ( DOC_NO
CREATE TABLE IAS_CASH_MAN_MST (  DOC_NO
CREATE TABLE IAS_CASH_MAN_DTL (  DOC_NO
ALTER TABLE IAS_CASH_MAN_DTL ADD (CONSTRAINT IASCASHMANDTL_UK
CREATE TABLE GUARN_ISSUE(  GR_TYPE
CREATE TABLE GUARN_INCR( INCR_NO           NUMBER (15),
CREATE TABLE GUARN_ACCOUNT(  GR_TRNS_TYPE  NUMBER(1)                  NOT NULL,
CREATE TABLE IAS_POST_MST ( 
CREATE TABLE IAS_POST_DTL ( 
CREATE TABLE IAS_BRN_YEARS_TEMP(
CREATE TABLE IAS_GL_CSHFLW_MST(
CREATE TABLE IAS_GL_CSHFLW_DTL(
CREATE TABLE IAS_GL_CSHFLW_AC(
CREATE TABLE IAS_GL_CSHFLW_FLD(
CREATE TABLE IAS_GL_CSHFLW_FLD_DTL(
CREATE TABLE IAS_GL_CSHFLW_TMP(
CREATE TABLE IAS_COL_TMP(  C_CODE         VARCHAR2(15),
CREATE TABLE IAS_CC_PJ ( CC_CODE   VARCHAR2(30),
CREATE TABLE IAS_ACTVTY_GROUP (  GROUP_NO       NUMBER(5),
CREATE TABLE IAS_ACTVTY (  ACTV_NO        VARCHAR2 (15), 
CREATE TABLE IAS_PRIV_ACTVTY (
CREATE TABLE IAS_ACTV_TREE (
CREATE TABLE IAS_PJ_ACTV ( 
CREATE TABLE IAS_BDGT_BLNC_MST(
CREATE TABLE IAS_BDGT_BLNC_DTL(
CREATE TABLE IAS_BDGT_BLNC_CLMN_DTL (
CREATE TABLE GLS_EDIT_BDGT_BLNC_MST
CREATE TABLE GLS_EDIT_BDGT_BLNC_DTL (  BDGT_TYPE      NUMBER(1),
CREATE TABLE GLS_MOV_BDGT_MST
CREATE TABLE GLS_MOV_BDGT_DTL
CREATE TABLE IAS_PYMNT_DTL (
CREATE TABLE IAS_AC_EXPENSE_DIST ( RCRD_NO 
CREATE TABLE IAS_RCPT_DOC_TYPES (  RCPT_TYPE_NO  NUMBER(3),
CREATE TABLE JRS_PARA (
CREATE TABLE S_JRNL_FILE_MST (
CREATE TABLE JRS_DOC_JV_TYP_CONN_ACC (
CREATE TABLE S_JRNL_FILE_DTL (
CREATE TABLE S_SLCT_FLD (
CREATE TABLE S_DIR_CONN(
CREATE TABLE IAS_JRS_FLDORDR_MST(
CREATE TABLE IAS_JRS_FLDORDR_DTL (  
CREATE TABLE IAS_AC_CNFRM_BLNC_MST (
ALTER TABLE IAS_AC_CNFRM_BLNC_MST ADD ( CONSTRAINT IAS_AC_CNFRM_MST_PK PRIMARY KEY (DOC_SER)  ENABLE VALIDATE)
CREATE TABLE IAS_AC_CNFRM_BLNC_DTL (
ALTER TABLE IAS_AC_CNFRM_BLNC_DTL ADD (  CONSTRAINT IAS_AC_CNFRM_DTL_FK 
CREATE TABLE IAS_ACCOUNT_ANLSYS_EQ (
CREATE TABLE IAS_ACCOUNT_ANLSYS (
CREATE TABLE GLS_BNK_CHQ_MST(
CREATE TABLE GLS_BNK_CHQ_DTL(
CREATE TABLE IAS_GRNT_MST ( 
CREATE TABLE IAS_GRNT_INCR_MST(
CREATE TABLE IAS_GRNT_DTL(
CREATE TABLE IAS_EXCH_CUR_MST
CREATE TABLE IAS_EXCH_CUR_DTL (
CREATE TABLE GLS_ACCNT_DTL_GRPS
CREATE TABLE GLS_AC_CODE_DTL_GRPS (GRP_CODE        NUMBER(10),
CREATE TABLE GLS_AC_CODE_DTL_GRPS_PRIV ( U_ID            NUMBER(5),
CREATE TABLE GLS_ACCNT_DTL
CREATE TABLE   GLS_ACCNT_DTL_CURR
CREATE TABLE  GLS_ACCNT_DTL_PRIV
CREATE TABLE S_APPRVD_LVL(
CREATE TABLE S_APPRVD_USR(
CREATE TABLE S_APPRVD_USR_DTL
CREATE TABLE S_APPRVD_MOV( 
CREATE TABLE S_APPRVD_SHW_DOC(
CREATE TABLE BGT_APRV_RQ_FNC_MST
CREATE TABLE BGT_APRV_RQ_FNC_DTL
CREATE TABLE IAS_ACCOUNT_ACTV (A_CODE       VARCHAR2(30),
CREATE TABLE IAS_GL_REQ_MST( DOC_TYPE       NUMBER(5),
                             BEFORE INSERT OR UPDATE OR DELETE ON GLS_MOV_BDGT_MST
   BEGIN  
       BEGIN 
         UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:NEW.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
       BEGIN
          UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:NEW.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
       BEGIN
          UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:OLD.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
                                 BEFORE INSERT OR UPDATE OR DELETE ON GLS_MOV_BDGT_DTL
    BEGIN  
       BEGIN 
         UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:NEW.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
       BEGIN
          UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:NEW.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
       BEGIN
          UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:OLD.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
                                 BEFORE INSERT OR UPDATE OR DELETE ON GLS_EDIT_BDGT_BLNC_DTL
BEGIN  
       BEGIN 
         UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:NEW.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
       BEGIN
          UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:NEW.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
       BEGIN
          UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:OLD.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
    AFTER INSERT OR UPDATE OR DELETE
           Begin
             Select VOUCHER_DATE ,Stand_By ,CHEQ_TYPE InTo V_VCHR_DATE ,V_Stnd_By,V_CHEQ_TYPE
               From VOUCHERS 
              Where  V_Ser=:NEW.v_Ser
           Exception
   End; 
          Begin  
                  Select 1  INTO V_CNT   
                    From IAS_CHEQ_TRACE 
                   where v_ser = :NEW.v_ser
           Exception
                        INSERT INTO IAS_CHEQ_TRACE (
                End;
               Begin
                Select 1  INTO V_CNT   
                    From IAS_CHEQ_TRACE 
                   where v_ser = :OLD.v_ser
             Exception
                        INSERT INTO IAS_CHEQ_TRACE (
             END;          
 EXCEPTION WHEN OTHERS THEN
          Begin
             Select J_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
               From S_JRNL_FILE_MST 
              Where  J_Ser=:NEW.j_ser
          Exception
          End; 
                BEGIN   
                     Begin 
                             Select Nvl(Max(I_No),0)+1 InTo Ino 
                              From Installment 
                              Where Bill_Ser=:NEW.J_Ser
                         Exception
                     End;                                         
                Exception
           BEGIN  
             Begin 
                 Select Nvl(Max(I_N
                   From IAS_Installment_Pi 
                  Where Bill_Ser=:NEW.j_Ser
             Exception
             End;   
            Exception
          Begin
             Select J_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
               From MASTER_JOURNAL_V 
              Where  J_Ser=:OLD.J_Ser
          Exception
          End; 
              BEGIN                                          
                 Begin 
                      Select Nvl(Max(I_No),0)+1 
                        InTo Ino From Installment 
                       Where Bill_Ser=:OLD.J_Ser
                 Exception
                 End;                                         
                Exception
               Begin 
                 Begin 
                     Select Nvl(Max(I_No),0)+1 
                        From IAS_Installment_Pi 
                      Where Bill_Ser=:OLD.j_Ser
                 Exception
                 End;                                         
                Exception
                Begin
                Exception
                Begin
            Exception When Others Then
            Begin
            Delete From IAS_Installment_PI
            where Doc_Type =:OLD.DOC_TYPE
            Exception
                        Begin
                        Exception
                        Begin
                        Exception
                        end;            
                  Begin
                       Delete From Installment
                        where Doc_Type = :OLD.DOC_TYPE
                  Exception
 EXCEPTION WHEN OTHERS THEN
      Begin
         Select VOUCHER_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
           From VOUCHERS 
          Where  V_Ser=:NEW.DOC_SRL
      Exception
      End; 
        Begin        
             Begin
                 Select Nvl(Max(I_No),0)+1 InTo Ino 
                  From IAS_Installment_Pi 
                   Where Bill_Ser=:NEW.DOC_SRL
              Exception
              End;   
        Exception
         Begin        
                Begin 
                 Select Nvl(Max(I_No),0)+1 InTo Ino 
                   From Installment 
                  Where Bill_Ser=:NEW.DOC_SRL
                Exception
                End;    
        Exception
  Begin
     Select VOUCHER_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
       From VOUCHERS 
      Where  V_Ser=:OLD.DOC_SRL
  Exception
  End; 
        Begin        
             Begin
                 Select Nvl(Max(I_No),0)+1 InTo Ino 
                  From IAS_Installment_Pi 
                   Where Bill_Ser=:OLD.DOC_SRL
              Exception
      End;   
        Exception
        Begin        
        Begin 
         Select Nvl(Max(I_No),0)+1 InTo Ino From Installment 
         Where Bill_Ser=:OLD.DOC_SRL 
        Exception
        End;  
        Exception
            Begin
            Exception
            Begin
        Exception When Others Then
        Begin
        Delete From IAS_Installment_PI
        where Doc_Type = 3
        Exception
                    Begin
                    Exception
                    Begin
                    Exception
                    end;            
                              Begin
                                   Delete From Installment
                                    where Doc_Type = 2
                              Exception
 EXCEPTION WHEN OTHERS THEN
      BEFORE DELETE OR INSERT OR UPDATE 
      Begin
         Select J_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
           From MASTER_JOURNAL_V 
          Where  J_Ser=:NEW.j_ser
      Exception
      End; 
             BEGIN               
                 Begin 
                         Select Nvl(Max(I_No),0)
                          From Installment 
                          Where Bill_Ser=:NEW.J_Ser
                     Exception
                 End;                                                  
            Exception
       BEGIN            
         Begin 
              Select Nvl(Max(I_No),0)+1 InTo Ino 
                From IAS_Installment_Pi 
               Where Bill_Ser=:NEW.j_Ser
          Exception
          End;   
        Exception
      Begin
         Select J_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
           From MASTER_JOURNAL_V 
          Where  J_Ser=:OLD.J_Ser
      Exception
      End; 
                          BEGIN                                          
                             Begin 
                                  Select Nvl(Max(I_No),0)+1 
                                    InTo Ino From Installment 
                                   Where Bill_Ser=:OLD.J_Ser
                             Exception
                             End;                                                  
                            Exception
                      V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Installment 
                                       Where nvl(i_py,0) = 0
                             Begin    
                               Execute Immediate' Delete From Installment 
                                                    Where nvl(i_py,''0'') = 0
                             Exception When others then
                              Raise_application_error(-20561,'Error When Delete Document From Installment '||SqlErrm) ;
                             End;     
           Begin        
             Begin 
                 Select Nvl(Max(I_No),0)+1 
                    From IAS_Installment_Pi 
                  Where Bill_Ser=:OLD.j_Ser
             Exception
             End;                                                  
            Exception
                      V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From ias_Installment_pi 
                                       Where nvl(i_py,0) = 0
                             Begin    
                               Execute Immediate' Delete From ias_Installment_pi 
                        Where nvl(i_py,''0'') = 0
                             Exception When others then
                              Raise_application_error(-20572,'Error When Delete Document From ias_Installment_pi '||SqlErrm) ;
                             End;     
            Begin
            Exception
            Begin
        Exception When Others Then
        Begin
        Delete From IAS_Installment_PI
        where Doc_Type = 1
        Exception
                    Begin
                    Exception
                    Begin
                    Exception
                    end;            
              Begin
                   Delete From Installment
                    where Doc_Type = 1
              Exception
 EXCEPTION WHEN OTHERS THEN
             Begin
            Exception
            Begin
            end;            
            Begin
                Delete From Installment
                where Doc_Type = 2
            Exception
            Begin
            Exception
              Begin
                   Delete From ias_Installment_pi
                    where Doc_Type =2
              Exception
               Begin
            Exception
              Begin
              end;            
              Begin
                   Delete From Installment
                    where Doc_Type = 3
              Exception
          Begin
            Exception
          Begin
               Delete From ias_Installment_pi
                where Doc_Type = 3
          Exception
 EXCEPTION WHEN OTHERS THEN
      Begin
           From VOUCHERS 
          Where  V_Ser=:NEW.v_Ser
      Exception
      End; 
        Begin        
             Begin
                 Select Nvl(Max(I_No),0)+1 InTo Ino 
                  From IAS_Installment_Pi 
                   Where Bill_Ser=:NEW.v_Ser
              Exception
              End;   
        Exception
         Begin        
                Begin 
                 Select Nvl(Max(I_No),0)+1 InTo Ino 
                   From Installment 
                  Where Bill_Ser=:NEW.v_Ser
                Exception
                End;    
        Exception
  Begin
     Select VOUCHER_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
       From VOUCHERS 
      Where  V_Ser=:OLD.v_Ser
  Exception
  End; 
        Begin        
             Begin
                 Select Nvl(Max(I_No),0)+1 InTo Ino 
                  From IAS_Installment_Pi 
                   Where Bill_Ser=:OLD.v_Ser
              Exception
              End;   
        Exception
        Begin        
        Begin 
         Select Nvl(Max(I_No),0)+1 InTo Ino From Installment 
         Where Bill_Ser=:OLD.v_Ser 
        Exception
        End;  
        Exception
            Begin
            Exception
            Begin
        Exception When Others Then
        Begin
        Delete From IAS_Installment_PI
        where Doc_Type = 2
        Exception
                    Begin
                    Exception
                    Begin
                    Exception
                    end;         
                              Begin
                                   Delete From Installment
                                    where Doc_Type = 3
                              Exception
                 Begin
                       Delete From IAS_PYMNT_DTL
                        where Doc_Type = 3
                  Exception
 EXCEPTION WHEN OTHERS THEN
 UPDATE INSTALLMENT SET PAID_AMT=NVL(PAID_AMT,0)- DECODE(NVL(:OLD.J_AMT_F,0),0,ABS(:OLD.J_AMT),ABS(:OLD.J_AMT_F))
  WHERE C_CODE=:OLD.AC_CODE_DTL
 UPDATE IAS_INSTALLMENT_PI SET PAID_AMT=NVL(PAID_AMT,0)- DECODE(NVL(:OLD.J_AMT_F,0),0,ABS(:OLD.J_AMT),ABS(:OLD.J_AMT_F))
  WHERE V_CODE=:OLD.AC_CODE_DTL
 UPDATE INSTALLMENT SET PAID_AMT=NVL(PAID_AMT,0) + DECODE(NVL(:NEW.J_AMT_F,0),0,ABS(:NEW.J_AMT),ABS(:NEW.J_AMT_F))
  WHERE C_CODE=:NEW.AC_CODE_DTL
 UPDATE IAS_INSTALLMENT_PI SET PAID_AMT=NVL(PAID_AMT,0) + DECODE(NVL(:NEW.J_AMT_F,0),0,ABS(:NEW.J_AMT),ABS(:NEW.J_AMT_F))
  WHERE V_CODE=:NEW.AC_CODE_DTL
 UPDATE INSTALLMENT SET PAID_AMT=NVL(PAID_AMT,0)- DECODE (nvl(:OLD.J_AMT_F,0),0,ABS(nvl(:OLD.J_AMT,0)),ABS(nvl(:OLD.J_AMT_F,0)))
  WHERE C_CODE =:OLD.AC_CODE_DTL
 UPDATE INSTALLMENT SET PA
  WHERE C_CODE=:NEW.AC_CODE_DTL
 UPDATE IAS_INSTALLMENT_PI SET PAID_AMT=NVL(PAID_AMT,0)- DECODE (nvl(:OLD.J_AMT_F,0),0,ABS(nvl(:OLD.J_AMT,0)),ABS(nvl(:OLD.J_AMT_F,0)))
  WHERE V_CODE =:OLD.AC_CODE_DTL
 UPDATE IAS_INSTALLMENT_PI SET PAID_AMT=NVL(PAID_AMT,0) + DECODE(nvl(:NEW.J_AMT_F,0),0,ABS(nvl(:NEW.J_AMT,0)),ABS(nvl(:NEW.J_AMT_F,0)))
  WHERE V_CODE=:NEW.AC_CODE_DTL
 EXCEPTION WHEN OTHERS THEN
 UPDATE INSTALLMENT SET PAID_AMT=NVL(PAID_AMT,0)- DECODE(NVL(:OLD.AC_AMTF,0),0,ABS(:OLD.AC_AMT),ABS(:OLD.AC_AMTF))
  WHERE C_CODE=:OLD.AC_CODE_DTL
 UPDATE IAS_INSTALLMENT_PI SET PAID_AMT=NVL(PAID_AMT,0)- DECODE(NVL(:OLD.AC_AMTF,0),0,ABS(:OLD.AC_AMT),ABS(:OLD.AC_AMTF))
  WHERE V_CODE=:OLD.AC_CODE_DTL
 UPDATE INSTALLMENT SET PAID_AMT=NVL(PAID_AMT,0) + DECODE(NVL(:NEW.AC_AMTF,0),0,ABS(:NEW.AC_AMT),ABS(:NEW.AC_AMTF))
  WHERE C_CODE=:NEW.AC_CODE_DTL
 UPDATE IAS_INSTALLMENT_PI SET PAID_AMT=NVL(PAID_AMT,0) + DECODE(NVL(:NEW.AC_AMTF,0),0,ABS(:NEW.AC_AMT),ABS(:NEW.AC_AMTF))
  WHERE V_CODE=:NEW.AC_CODE_DTL
 UPDATE INSTALLMENT SET PAID_AMT=NVL(PAID_AMT,0)- DECODE(nvl(:OLD.AC_AMTF,0),0,ABS(nvl(:OLD.AC_AMT,0)),ABS(nvl(:OLD.AC_AMTF,0)))
  WHERE C_CODE =:OLD.AC_CODE_DTL
 UPDATE INSTALLMENT SET PAID_AMT=NVL(PAID_AMT,0) + DECODE(nvl(:NEW.AC_AMTF,0),0,ABS(nvl(:NEW.AC_AMT,0)),ABS(nvl(:NEW.AC_AMTF,0)))
  WHERE C_CODE=:NEW.AC_CODE_DTL
  WHERE V_CODE =:OLD.AC_CODE_DTL
 UPDATE IAS_INSTALLMENT_PI SET PAID_AMT=NVL(PAID_AMT,0) + DECODE(nvl(:NEW.AC_AMTF,0),0,ABS(nvl(:NEW.AC_AMT,0)),ABS(nvl(:NEW.AC_AMTF,0)))
  WHERE V_CODE=:NEW.AC_CODE_DTL
 EXCEPTION WHEN OTHERS THEN
EXCEPTION 
EXCEPTION 
       EXCEPTION WHEN OTHERS THEN
       BEGIN
          UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:NEW.DOC_SER_REF
       EXCEPTION WHEN OTHERS THEN
       BEGIN
          UPDATE IAS_BDGT_BLNC_DTL   
          Where doc_ser=:OLD.DOC_SER_REF
    SELECT                ----by 25032021
      FROM IAS_V_POST_DTL_YR I
     WHERE AC_CODE_DTL_SUB IS NOT NULL AND (doc_type || jv_type <> 41)
    SELECT I.DOC_TYPE,
      FROM IAS_V_POST_DTL_YR  I,
           (SELECT bill_ser doc_ser, PTNT_NO AC_CODE_DTL_SUB
              FROM IAS_V_BILL_MST_YR
             WHERE PTNT_NO IS NOT NULL AND BILL_DOC_TYPE = 1
            SELECT rt_bill_ser, PTNT_NO
              FROM IAS_V_rt_BILL_MST_YR
             WHERE PTNT_NO IS NOT NULL AND rt_BILL_DOC_TYPE = 1) n
     WHERE     i.doc_type IN (4, 5)
    SELECT I.DOC_TYPE,
      FROM IAS_V_POST_DTL_YR  I,
           (SELECT bill_ser doc_ser, PTNT_NO AC_CODE_DTL_SUB
              FROM IAS_V_BILL_MST_YR
             WHERE PTNT_NO IS NOT NULL AND BILL_DOC_TYPE = 1
            SELECT rt_bill_ser, PTNT_NO
              FROM IAS_V_rt_BILL_MST_YR
             WHERE PTNT_NO IS NOT NULL AND rt_BILL_DOC_TYPE = 1) n
     WHERE     i.doc_type IN (4, 5)
    FROM   VOUCHERS M,VOUCHER_DETAIL D
   WHERE    M.V_SER=D.V_SER  
    AND D.a_code NOT IN (SELECT a_code FROM cash_in_hand)           
    SELECT  1 BNK_UONION,
    FROM   VOUCHERS M,VOUCHER_DETAIL D
   WHERE    M.V_SER=D.V_SER 
    AND D.a_code NOT IN (SELECT a_code FROM cash_in_hand)  
SELECT 
FROM S_APPRVD_USR M, S_APPRVD_USR_DTL D
WHERE D.U_ID(+) = M.U_ID
      SELECT "DOC_TYP",
        FROM (SELECT rq_doc_type                  doc_typ,
                FROM ias_glrq_types
               SELECT 1                              doc_typ,
                FROM Jv_Types
               SELECT decode(v_type,1,2,2,3)         doc_typ,
               FROM Ias_Vouchr_Type
              SELECT decode(NOTE_TYPE,1,21,2,22)         doc_typ,
                FROM IAS_NOTE_TYPES
                SELECT 53                             doc_typ,
                FROM ias_sorder_types
                SELECT 52                             doc_typ,
                FROM ias_quot_types) x 
           ORDER BY x.doc_typ, x.typ_no
   SELECT a.u_id,
   FROM   gls_vchr_typ_prv a,
   WHERE  a.u_id = b.u_id
   SELECT b.u_id,
   FROM   user_r b,
   WHERE  NOT EXISTS (
             SELECT 1
             FROM   gls_vchr_typ_prv
             WHERE  v_typ = c.v_type
           SELECT  m.C_A_CODE,d.ac_code_dtl,d.ac_code_dtl_sub,d.ac_dtl_typ,D.CC_CODE,D.PJ_NO,D.ACTV_NO , d.a_cy,NVL (SUM (d.amt), 0) amt, NVL (SUM (d.amt_f), 0) amt_f
                                From CUSTOMER M, Ias_Post_Dtl D
                                 WHERE (D.A_CODE = M.C_A_CODE  AND D.ac_code_dtl = M.C_CODE AND D.AC_DTL_TYP=3)
                                GROUP BY M.C_A_CODE,d.ac_code_dtl,d.ac_code_dtl_sub,d.ac_dtl_typ,D.CC_CODE,D.PJ_NO,D.ACTV_NO , d.a_cy
              Select m.a_code,d.ac_code_dtl,D.AC_CODE_DTL_SUB,d.ac_dtl_typ,D.CC_CODE,D.PJ_NO,D.ACTV_NO ,
              From account M, Ias_Post_Dtl D
               where M.a_code  = D.a_code
               group by m.a_code,d.ac_code_dtl,D.AC_CODE_DTL_SUB,d.ac_dtl_typ ,D.CC_CODE,D.PJ_NO,D.ACTV_NO ,d.a_cy
               order by ac_dtl_typ,a_code,ac_code_dtl
       SELECT        A.U_ID,
       FROM          IAS_GNR_CODE_PRV A,
       WHERE         C.MAIN_CODE = A.MAIN_TYP
       SELECT        B.U_ID,
       FROM          IAS_GNR_CODE_DTL A,
       WHERE         NOT EXISTS (SELECT        1
                                 FROM          IAS_GNR_CODE_PRV
                                 WHERE         SUB_TYP = A.SUB_NO AND MAIN_TYP = A.MAIN_CODE AND U_ID = B.U_ID)
   (SELECT d.PTNT_NO, d.PTNT_L_NM, d.PTNT_f_NM, null,inactv,null,null        
    FROM     hps_ptnt d    )
Select 2,VOUCHER_NO,V_SER,A_CODE,AC_CODE_DTL,AC_DTL_TYP,CNTRCT_SRL,CNTRCT_NO,CNTRCT_BTCH,Doc_ser_Ref,DOC_TYPE_REF,ABS(Sum(Nvl(AC_AMT,0)+NVL(OTR_AMT_L,0))) AMT_L,ABS(Sum(Nvl(AC_AMTF,0)+NVL(OTR_AMT_F,0))) AMT_F
From GLS_V_VCHR_DTL_YR 
    Where   VOUCHER_TYPE=1
 Group By  2,VOUCHER_NO,V_SER,A_CODE,AC_CODE_DTL,AC_DTL_TYP,CNTRCT_SRL,CNTRCT_NO,CNTRCT_BTCH,DOC_TYPE_REF,Doc_Ser_Ref
Select 1,J_DOC_NO,J_SER,A_CODE,AC_CODE_DTL,AC_DTL_TYP,CNTRCT_SRL,CNTRCT_NO,CNTRCT_BTCH,Doc_ser_Ref,DOC_TYPE_REF,ABS(Sum(Nvl(J_AMT,0))) AMT,ABS(Sum(Nvl(J_AMT_F,0))) AMT_F
From GLS_V_JRNL_DTL_YR 
    Where   NVL(J_AMT,0)< 0
 Group By  1,J_DOC_NO,J_SER,A_CODE,AC_CODE_DTL,AC_DTL_TYP,CNTRCT_SRL,CNTRCT_NO,CNTRCT_BTCH,DOC_TYPE_REF,Doc_Ser_Ref  
SELECT 
FROM IAS_GL_CSHFLW_AC i ,account a
  WHERE  nvl(a.a_analysis,0)= DECODE (i.a_analysis, NULL, nvl(a.a_analysis,0), i.a_analysis) 
  (SELECT D.ac_code, D.ac_code_dtl,D.ac_code_dtl_L_nm,D.ac_code_dtl_F_nm,  Ys_Ac_Dtl_Pkg.Get_Ac_Dtl_Typ (D.Ac_code) AC_DTL_TYP , 1 ,INACTV,INACTV_RSON,INACTV_DATE
   FROM   GlS_ACCNT_DTL_GRPS M,GlS_ACCNT_DTL D 
   WHERE  m.GRP_AC_code = D.AC_code
   SELECT  D.AC_CODE, D.DCTR_NO,D.DCTR_L_NM,D.DCTR_F_NM, Ys_Ac_Dtl_Pkg.Get_Ac_Dtl_Typ (D.Ac_code) AC_DTL_TYP , 10,INACTV,INACTV_RSON,INACTV_DATE
     FROM  GlS_ACCNT_DTL_GRPS M,HPS_DCTR D
    WHERE  M.GRP_AC_code = D.AC_code 
    ORDER BY  ac_code_dtl,ac_dtl_typ,ac_code
          (SELECT  D.ac_code_dtl, Ys_Ac_Dtl_Pkg.Get_Ac_Dtl_Typ (M.Ac_code) AC_DTL_TYP,D.CUR_CODE, M.Ac_code,D.INACTV, D.INACTV_RSON,D.INACTV_DATE,1
             FROM  GlS_ACCNT_DTL M,GlS_ACCNT_DTL_CURR D  
             WHERE M.AC_code_DTL = D.AC_code_DTL 
           SELECT   M.DCTR_NO,Ys_Ac_Dtl_Pkg.Get_Ac_Dtl_Typ (D.A_code) AC_DTL_TYP,D.A_CY, D.A_code,D.INACTIVE,NULL,NULL, 10
             FROM   HPS_DCTR M,ACCOUNT_CURR D 
            WHERE M.AC_code = D.A_code 
            ORDER BY  ac_code_dtl,AC_DTL_TYP,CUR_CODE
   ( Select DISTINCT M.A_Code AC_CODE,NULL AC_CODE_DTL,M.AC_DTL_TYP,0 ac_dtl_typ_DTL,  A_cy cur_code ,INACTIVE,NULL inactv_rson ,NULL inactv_date
            From Ias_Acc_Tree M,Account_Curr D
                Where M.a_code=
    Select DISTINCT D.A_Code AC_CODE,TO_CHAR(cash_no) AC_CODE_DTL,YS_AC_DTL_PKG.Get_Ac_Dtl_Typ (D.A_Code) AC_DTL_TYP,0 ac_dtl_typ_DTL,  A_cy CUR_CODE,D.INACTIVE,NULL inactv_rson,D.INACTIVE_DATE
                From IAS_CASH_IN_HAND_DTL D
                where YS_AC_DTL_PKG.Get_Ac_Dtl_Typ (D.A_Code)=1            
    Select DISTINCT D.A_Code AC_CODE,TO_CHAR(D.BANK_NO) AC_CODE_DTL,YS_AC_DTL_PKG.Get_Ac_Dtl_Typ (D.A_Code) AC_DTL_TYP,0 ac_dtl_typ_DTL,  A_cy CUR_CODE,D.INACTIVE,NULL inactv_rson,D.INACTIVE_DATE
                From IAS_CASH_AT_BANK_DTL D 
                where YS_AC_DTL_PKG.Get_Ac_Dtl_Typ (D.A_Code)=2                         
                From customer M,customer_curr D 
                 where M.C_CODE=D.C_CODE
    Select DISTINCT M.V_A_Code AC_CODE,M.v_CODE AC_CODE_DTL,YS_AC_DTL_PKG.Get_Ac_Dtl_Typ (M.V_A_Code) AC_DTL_TYP,0 ac_dtl_typ_DTL,  A_cy CUR_CODE ,D.INACTIVE,NULL inactv_rson,NULL INACTIVE_DATE
                From v_details M,VENDOR_CURR D 
                 where M.V_CODE=D.V_CODE
    SELECT DISTINCT M.a_code ac_code, TO_CHAR (EMP_NO) ac_code_dtl,
    FROM            ACCOUNT_CURR M ,S_EMP d
    WHERE           ys_ac_dtl_pkg.get_ac_dtl_typ (M.a_code) = 7
    Select DISTINCT M.AC_CODE ,M.AC_CODE_DTL,YS_AC_DTL_PKG.Get_Ac_Dtl_Typ (AC_CODE) AC_DTL_TYP,1 ac_dtl_typ_DTL, D.CUR_CODE   ,d.inactv, d.inactv_rson, d.inactv_date
                From gls_accnt_dtl M, gls_accnt_dtl_curr D
                 WHERE  m.ac_code_dtl = d.ac_code_dtl
    Select DISTINCT M.AC_CODE ,AC_CODE_DTL,YS_AC_DTL_PKG.Get_Ac_Dtl_Typ (AC_CODE) AC_DTL_TYP,10 ac_dtl_typ_DTL, D.A_CY CUR_CODE   ,d.INACTIVE,  NULL inactv_rson, NULL inactv_date
                FROM   hps_dctr m, account_curr d
                        WHERE  m.ac_code = d.a_code
  ORDER BY ac_dtl_typ,AC_CODE, AC_CODE_DTL,ac_dtl_typ_DTL,cur_code
  (SELECT  D.U_ID,D.ac_code_dtl,D.AC_DTL_TYP, D.CUR_CODE, D.ADD_FLAG,D.VIEW_FLAG, 1
     FROM  GLS_ACCNT_DTL_PRIV D  
   SELECT   D.U_ID,M.DCTR_NO,Ys_Ac_Dtl_Pkg.Get_Ac_Dtl_Typ (M.AC_code),C.A_CY, D.ADD_FLAG,D.VIEW_FLAG, 10
     FROM  HPS_DCTR M, HPS_DCTR_PRV D,ACCOUNT_CURR C 
    WHERE   M.DCTR_NO =D.DCTR_NO
    ORDER BY  U_ID,AC_DTL_TYP,ac_code_dtl,CUR_CODE
   Select m.a_code,d.ac_code_dtl,d.ac_dtl_typ, d.a_cy,NVL (SUM (d.amt), 0) amt, NVL (SUM (d.amt_f), 0) amt_f
    From account M, Ias_Post_Dtl D
 where M.a_code  = D.a_code
        group by m.a_code,d.ac_code_dtl,d.ac_dtl_typ ,d.a_cy
        order by ac_dtl_typ,a_code,ac_code_dtl
   SELECT a_code, ac_tree, a_name, a_name_eng, a_level, a_parent, a_s_m,
   FROM   ias_acc_tree ac,
   SELECT "A_CODE", "AC_CODE_DTL", "AC_DTL_TYP", "A_CY", "CC_CODE",
   FROM   open_bal;
 Select 1 doc_type,D.ac_code_dtl c_code,a_cy a_cy,D.j_doc_no doc_no,D.jv_type jv_type ,
   From master_journal_v M,detail_journal_v D ,Customer C
  where M.j_ser  = D.j_ser
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no doc_no,jv_type jv_type, 
   From Ias_Post_dtl
  where doc_type=1
 Select 1 doc_type,D.AC_CODE_DTL v_code,a_cy,D.j_doc_no ,D.jv_type jv_type ,
   From Master_journal_v M,Detail_journal_v D ,V_details C
  where M.j_ser  = D.j_ser
 Select doc_type,AC_CODE_DTL v_code,a_cy,doc_no ,jv_type jv_type, 
   From Ias_Post_Dtl
  where doc_type=1
   SELECT   a.doc_no, a.doc_ser, a.doc_date, a.ref_no, a.doc_desc, a.doc_note,
   FROM     ias_bdgt_blnc_mst a,
   WHERE    a.doc_ser = b.doc_ser AND b.a_code = c.a_code
   GROUP BY a.doc_no,
   (SELECT 73 doc_typ,
    FROM   ias_bdgt_blnc_dtl d,
    WHERE  m.doc_ser = d.doc_ser
    SELECT 74 doc_typ,
    FROM   gls_edit_bdgt_blnc_dtl d,
    WHERE  m.doc_ser = d.doc_ser
    SELECT 75 doc_typ,
    FROM   gls_mov_bdgt_dtl d,
    WHERE  m.doc_ser = d.doc_ser
    SELECT 75 doc_typ,
    FROM   gls_mov_bdgt_dtl d,
    WHERE  m.doc_ser = d.doc_ser)
      SELECT BDGT_TYPE,
        FROM IAS_BDGT_BLNC_DTL
    GROUP BY BDGT_TYPE, BDGT_PRD_TYPE,
  Begin
     Select VOUCHER_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
       From VOUCHERS 
      Where  V_Ser=:OLD.DOC_SRL
  Exception
  End; 
        Begin        
             Begin
                 Select Nvl(Max(I_No),0)+1 InTo Ino 
                  From IAS_Installment_Pi 
                   Where Bill_Ser=:OLD.DOC_SRL
              Exception
CREATE OR REPLACE PACKAGE Ys_Ac_Dtl_Sub_Pkg AS
   FUNCTION Get_Ac_Dtl_Sub_Nm (P_Ac_Code_Dtl_sub In varchar2 ,P_Lng_no In Number) RETURN VARCHAR2 ;
 PROCEDURE Chk_Conn_Ac_dtl_Wth_Sub(P_Ac_Code_Dtl_Sub  IN ACCOUNT.A_CODE%TYPE  DEFAULT NULL, 
  PROCEDURE Chk_Ac_Dtl_Sub( P_Ac_Code_Dtl_Sub  IN ACCOUNT.A_CODE%TYPE  ,
   FUNCTION Chk_Inactv ( P_AC_Code_Dtl_Sub IN ACCOUNT.A_CODE%TYPE  )  RETURN NUMBER ;                                 
CREATE OR REPLACE PACKAGE BODY  Ys_Ac_Dtl_sub_Pkg AS
 FUNCTION Get_Ac_Dtl_Sub_Nm (P_Ac_Code_Dtl_sub In varchar2 ,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
         Select DECODE(P_Lng_no,1,Ac_Code_Dtl_sub_L_Nm,NVL(Ac_Code_Dtl_sub_f_Nm,Ac_Code_Dtl_sub_L_Nm)) V_NM
           From GLS_V_AC_CODE_DTL_SUB
          where Ac_Code_Dtl_sub  = P_Ac_Code_Dtl_sub
 Exception 
PROCEDURE Chk_Conn_Ac_dtl_Wth_Sub(P_Ac_Code_Dtl_Sub  IN ACCOUNT.A_CODE%TYPE  DEFAULT NULL, 
GEN_PKG.GET_CNT('SELECT NVL(CONN_HPS_SYS,0) FROM CUSTOMER 
                                             WHERE C_CODE='''||P_AC_Code_Dtl||'''
PROCEDURE Chk_Ac_Dtl_Sub( P_Ac_Code_Dtl_Sub  IN ACCOUNT.A_CODE%TYPE  ,
          BEGIN
          Select Decode(P_Lng_no,1,AC_CODE_DTL_SUB_L_NM,nvl(AC_CODE_DTL_SUB_F_NM,AC_CODE_DTL_SUB_L_NM)) , nvl(M.INACTV,0), 1 ADD_FLAG,1 VIEW_FLAG  
            From GLS_V_AC_CODE_DTL_SUB M
           Where TO_CHAR(M.AC_CODE_DTL_SUB)   = TO_CHAR(P_AC_CODE_DTL_SUB)
      EXCEPTION WHEN NO_DATA_FOUND THEN
      END;
       V_CNT :=YS_GEN_PKG.GET_CNT('SELECT 1 FROM GLS_V_AC_CODE_DTL_SUB 
                                             WHERE AC_CODE_DTL_SUB='''||P_AC_CODE_DTL_SUB||'''
 Exception 
FUNCTION Chk_Inactv ( P_AC_Code_Dtl_Sub IN ACCOUNT.A_CODE%TYPE  )  RETURN NUMBER IS     
    BEGIN
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                           From GLS_V_AC_CODE_DTL_SUB
                                          Where P_Ac_Code_Dtl_Sub = '''||P_Ac_Code_Dtl_Sub||''' 
Exception 
            Exception
            Begin
        Exception When Others Then
        Begin
        Delete From IAS_Installment_PI
        where Doc_Type = 3
        Exception
                    Begin
CREATE OR REPLACE PACKAGE Ys_Ac_Dtl_Pkg AS
    FUNCTION Get_Ac_Dtl_Typ (P_A_Code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER ;
    FUNCTION Get_Ac_Dtl_Nm( P_AC_Code_Dtl   In ACCOUNT.A_CODE%TYPE DEFAULT NULL , 
    PROCEDURE Chk_Ac_Dtl( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
       FUNCTION Chk_Ac_Dtl_Acy ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE,                                 
       FUNCTION Get_One_Acy_Ac_Dtl ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
       FUNCTION Get_Ac_Dtl_Acode (  P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
FUNCTION Chk_Inactv_Acy ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
CREATE OR REPLACE PACKAGE BODY Ys_Ac_Dtl_Pkg AS
    FUNCTION Get_Ac_Dtl_Typ (P_A_Code IN ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
 Begin
     Select nvl(AC_DTL_TYP,0)
       From ACCOUNT
      where A_CODE=P_A_Code 
 Exception 
FUNCTION Get_Ac_Dtl_Nm( P_AC_Code_Dtl   In ACCOUNT.A_CODE%TYPE DEFAULT NULL , 
         Select DECODE(V_LNG_NO,1,CASH_NAME,CASH_E_NAME) CSH_NM
           From CASH_IN_HAND
          where CASH_NO = P_Ac_Code_Dtl 
         Select  DECODE(V_LNG_NO,1,BANK_NAME,BANK_E_NAME) BNK_NM
           From CASH_AT_BANK
          where BANK_NO = P_Ac_Code_Dtl 
         Select DECODE(V_LNG_NO,1,C_A_NAME,NVL(C_E_NAME,C_A_NAME)) C_NM
           From CUSTOMER
          where C_CODE = P_Ac_Code_Dtl 
         Select DECODE(V_LNG_NO,1,V_A_NAME,NVL(V_E_NAME,V_A_NAME)) V_NM
           From V_DETAILS
          where V_CODE = P_Ac_Code_Dtl 
         Select DECODE(V_LNG_NO,1,Ac_Code_Dtl_L_Nm,NVL(Ac_Code_Dtl_F_Nm,Ac_Code_Dtl_L_Nm)) V_NM
           From GlS_V_ACCNT_DTL
          where Ac_Code_Dtl  = P_Ac_Code_Dtl 
         Select DECODE(V_LNG_NO,1,EMP_L_NM,EMP_F_NM) EMP_NM
           From S_EMP
          where EMP_NO = P_Ac_Code_Dtl 
         Select DECODE(V_LNG_NO,1,A_NAME,NVL(A_NAME_ENG,A_NAME)) AC_NM
           From ACCOUNT
          where A_Code = P_Ac_Code 
Exception 
PROCEDURE Chk_Ac_Dtl( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
    Exception 
FUNCTION Chk_Ac_Dtl_Acy ( P_AC_Code_Dtl   IN ACCOUNT.A_CODE%TYPE,                              
    BEGIN
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                           From Ias_Cash_In_Hand_Dtl
                                          Where Cash_No
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                               From Ias_Cash_At_Bank_Dtl
                                              Where Bank_No = '''||P_Ac_Code_Dtl||''' 
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                               From Customer_Curr
                                              Where C_Code = '''||P_Ac_Code_Dtl||''' 
                 V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                               From Vendor_Curr
                                              Where V_Code = '''||P_Ac_Code_Dtl||''' 
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                               From GlS_V_ACCNT_DTL_CURR
                                              Where AC_CODE_DTL = '''||P_Ac_Code_Dtl||''' 
Exception 
FUNCTION Get_One_Acy_Ac_Dtl ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
BEGIN                                      
       Select A_Cy InTo V_Acy From Ias_Cash_In_Hand_Dtl
        Where Cash_No = P_Ac_Code_Dtl;
       Select A_Cy InTo V_Acy From Ias_Cash_At_Bank_Dtl
        Where Bank_No = P_Ac_Code_Dtl;    
       Select A_Cy InTo V_Acy From Customer_Curr
        Where C_Code = P_Ac_Code_Dtl;    
       Select A_Cy InTo V_Acy From Vendor_Curr
        Where V_Code = P_Ac_Code_Dtl;    
       Select CUR_CODE InTo V_Acy From GlS_V_ACCNT_DTL_CURR
        Where AC_CODE_DTL =P_Ac_Code_Dtl
Exception 
FUNCTION Get_Ac_Dtl_Acode ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
BEGIN                                      
       Select A_CODE InTo V_A_CODE From Cash_In_Hand
        Where Cash_No = P_Ac_Code_Dtl;
       Select A_CODE InTo V_A_CODE From Cash_At_Bank
        Where Bank_No = P_Ac_Code_Dtl;    
       Select C_A_CODE InTo V_A_CODE From Customer
        Where C_Code = P_Ac_Code_Dtl;    
       Select V_A_CODE InTo V_A_CODE From V_details
        Where V_Code = P_Ac_Code_Dtl;    
       Select AC_CODE InTo V_A_CODE From GlS_V_ACCNT_DTL
        Where AC_CODE_DTL =P_Ac_Code_Dtl
Exception 
FUNCTION Chk_Inactv_Acy ( P_AC_Code_Dtl  IN ACCOUNT.A_CODE%TYPE, 
    BEGIN
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                           From Ias_Cash_In_Hand_Dtl
                                          Where Cash_No = '''||P_Ac_Code_Dtl||''' 
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                               From Ias_Cash_At_Bank_Dtl
                                              Where Bank_No = '''||P_Ac_Code_Dtl||''' 
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                               From Customer_Curr
                                              Where C_Code = '''||P_Ac_Code_Dtl||''' 
                 V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                               From Vendor_Curr
                                              Where V_Code = '''||P_Ac_Code_Dtl||''' 
                 V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1
                                               From AC_CODE_DTL_CURR
                                              Where AC_CODE_DTL = '''||P_Ac_Code_Dtl||''' 
Exception 
            Exception
                      V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From ias_Installment_pi 
                                       Where nvl(i_py,0) = 0
                             Begin    
                               Execute Immediate' Delete From ias_Installment_pi 
SELECT 1 
                          FROM IAS_AC_CC_LMT 
                          WHERE AC_CODE_DTL IS NOT NULL 
SELECT IAS_CST_PKG.GET_ACODE(C_CODE) A_CODE,     
  FROM   CUSTOMER_CURR 
  WHERE NVL(CR_LIMIT,-1)>=0 OR NVL(INV_LIMIT,-1)>=0
SELECT IAS_CST_PKG.GET_ACODE(C_CODE) A_CODE,     
  FROM  IAS_CUSTOMER_CC_LMT 
  WHERE NVL(CR_LIMIT,-1)>=0 OR NVL(INV_LIMIT,-1)>=0
SELECT IAS_CST_PKG.GET_ACODE(C_CODE) A_CODE,     
  FROM  CUSTOMER 
  WHERE NVL(CST_CR_LMT_LOCAL,-1)>=0 OR NVL(CST_INV_LMT_LOCAL,-1)>=0
INSERT INTO IAS_AC_CC_LMT (
SELECT 
  FROM   IAS_CASH_IN_HAND_DTL
  WHERE NVL(Min_LMT_AMT,-1)>=0 or  NVL(Max_LMT_AMT,-1)>=0 or nvl(MAX_LMT_TRNS_AMT,-1)>=0 or nvl(Min_LMT_TRNS_AMT,-1)>=0
 SELECT 
  FROM 
  WHERE NVL(Min_LMT_AMT,-1)>=0 or  NVL(Max_LMT_AMT,-1)>=0 or nvl(MAX_LMT_TRNS_AMT,-1)>=0 or nvl(Min_LMT_TRNS_AMT,-1)>=0
UPDATE IAS_AC_CC_LMT SET AC_DTL_TYP=Ys_Ac_Dtl_Pkg.Get_Ac_Dtl_Typ(A_CODE) WHERE A_CODE IS NOT NULL
DELETE IAS_AC_CC_LMT WHERE  AC_DTL_TYP NOT IN(0,7) AND AC_CODE_DTL IS NULL
UPDATE IAS_AC_CC_LMT SET  MAX_LMT_PSBL  =NULL WHERE MAX_LMT_PSBL =0 
SELECT NVL(USE_CST_CR_LMT_LOCAL,1),NVL(CREDIT_LIMIT_TYPE,0),NVL(GL_LMT_TYPE,0),NVL(USE_MULTI_CUR_LMT,0)   FROM IAS_PARA_GL,IAS_PARA_GEN,IAS_PARA_AR"UPDATE IAS_PARA_GL SET GL_LMT_TYPE=1"UPDATE IAS_PARA_GL SET GL_LMT_TYPE=3"UPDATE IAS_PARA_GL SET USE_MULTI_CUR_LMT=1"UPDATE IAS_PARA_GL SET GL_LMT_TYPE=3"UPDATE IAS_PARA_GL SET USE_MULTI_CUR_LMT=1"
          Begin
            Exception
          Begin
               Delete From ias_Installment_pi
                where Doc_Type = 3
          Exception
 EXCEPTION WHEN OTHERS THEN
      Begin
SELECT COUNT(*)   FROM IAS_ACCOUNT_ANLSYS"UPDATE ACCOUNT M SET ( A_ANALYSIS,FLOW_TYPE  )=(SELECT ANLS_NO,FLOW_TYPE   FROM IAS_ACCOUNT_ANLSYS  WHERE TO_NUMBER(NOTES) = M.A_ANALYSIS ) WHERE M.A_ANALYSIS IS NOT NULL   AND M.A_ANALYSIS IN (SELECT TO_NUMBER(NOTES)   FROM IAS_ACCOUNT_ANLSYS  WHERE NOTES IS NOT NULL  )"UPDATE ACCOUNT SET A_ANALYSIS= NULL  WHERE 1 = 1  AND LENGTH(A_ANALYSIS) < 5"
        Exception
  Begin
     Select VOUCHER_DATE ,Stand_By InTo V_VCHR_DATE ,V_Stnd_By
       From VOUCHERS 
      Where  V_Ser=:OLD.v_Ser
  Exception
CREATE OR REPLACE PACKAGE  IAS_Web_Pkg as
 FUNCTION Get_indctr_gen(p_indctr_type in number , p_doc_post in number default 1,P_BRN_NO IN NUMBER DEFAULT NULL) RETURN NUMBER;
 FUNCTION Chk_Msg_Usr(P_Usr_No USER_R.U_ID%TYPE) RETURN NUMBER;
 PROCEDURE Insrt_Msg_Usr( P_F_Usr_No  In USER_R.U_ID%TYPE ,
CREATE OR REPLACE PACKAGE Body IAS_Web_Pkg as
 FUNCTION Get_indctr_gen(p_indctr_type in number , p_doc_post in number default 1,P_BRN_NO IN NUMBER DEFAULT NULL ) RETURN NUMBER IS
     BEGIN
           Select Round(abs(nvl(sum(nvl(amt,0)),0)) ,2) Into V_Amt
             from account m, ias_post_dtl d
             where m.a_code = d.a_code
               and exists (select 1 from account_report_type
                            where report_type=a_report
            Select Round(abs(nvl(sum(nvl(amt,0)),0)) ,2) Into V_Amt
             from account m, ias_post_dtl d
             where m.a_code = d.a_code
               and exists (select 1 from account_report_type
                            where report_type=a_report
            Select Round(nvl(sum(nvl(amt,0)),0) ,2)  Into V_Amt 
              from cash_in_hand m, ias_post_dtl d
             where m.a_code = d.a_code
            Select Round(nvl(sum(nvl(amt,0)),0) ,2)  Into V_Amt   
              from cash_at_bank m, ias_post_dtl d
             where m.a_code = d.a_code
            Select Round(Abs(nvl(sum(nvl(d.ac_amt,0)),0)) ,2)  Into V_Amt   
              from vouchers m,voucher_det
             where m.v_ser = d.v_ser
            Select Round(nvl(sum(nvl(d.ac_amt,0)),0) ,2)  Into V_Amt   
              from vouchers m,voucher_detail d 
             where m.v_ser = d.v_ser
            Select Round(abs(nvl(sum(nvl(amt,0)),0)) ,2)  Into V_Amt   
              from ias_post_dtl d
             where Exists ( select 1 from ias_conn_acc_inv_by_gl Where si_a_code = d.a_code and Rownum<=1)
            Select Round(nvl(sum(nvl(amt,0)),0) ,2)  Into V_Amt   
              from ias_post_dtl d
             where Exists ( select 1 from ias_conn_acc_inv_by_gl Where  ( sr_a_code = d.a_code or py_sr_a_code = d.a_code ) and Rownum<=1)
            Select Round(nvl(sum(nvl(amt,0)),0) ,2)  Into V_Amt   
              from ias_post_dtl d
             where Exists ( select 1 from ias_conn_acc_inv_by_gl Where  dsc_si_a_code = d.a_code and Rownum<=1)
        EXCEPTION WHEN OTHERS THEN
FUNCTION Chk_Msg_Usr(P_Usr_No USER_R.U_ID%TYPE) RETURN NUMBER Is
  Select count(*) Into v_cnt from Ias_Msg_User
   where Exists( Select 1 from Ias_Msg_User_Dtl 
                 where nvl(Msg_Read,0)=0 
         T_group_Usr In (select group_no from user_r where u_id = P_Usr_No)) ;
 EXCEPTION 
 PROCEDURE Insrt_Msg_Usr( P_F_Usr_No  In USER_R.U_ID%TYPE ,
 SELECT nvl(MAX(MSG_NO),0)+1 INTO V_MSG_NO FROM IAS_MSG_USER;  
EXCEPTION WHEN OTHERS THEN
INSERT INTO IAS_MSG_USER (
INSERT INTO IAS_MSG_USER_DTL (
EXCEPTION WHEN OTHERS THEN
  Raise_Application_Error(-20460,'Error when Insert into ias_msg_userr ,' || chr(10) || sqlerrm);
        Exception
            Begin
            Exception
CREATE OR REPLACE PROCEDURE  IAS_UnpostTrns_Prc ( P_User_no       In Number,
,--## Get Table Name and Column Name Use In Update Post Flag in Tables
       Begin
            Execute Immediate 'Select 1 From USER_TAB_COLUMNS Where TABLE_NAME='''||TABLE_NAME||''' 
        Exception When no_data_found then
            Raise_application_error(-20204,'There Is Error when Select Ias_Post_Mst ,'||SqlErrm) ;
       End;
    Begin
        Execute Immediate 'Select 1 From Ias_Post_Mst  Where EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE PRD_NO = Ias_Post_Mst.MNTH AND BRN_NO = Ias_Post_Mst.BRN_NO AND PRD_CLS = 1 AND ROWNUM<=1) '|| ' And '||P_Wh_MJSql_Mst||' and RowNum<=1 ' Into cnt;
    Exception When no_data_found then
        Raise_application_error(-20204,'There Is Error when Select Ias_Post_Mst ,'||SqlErrm) ;
    End;
        If Nvl(P_Del_Or_Not,0) = 1 Then--## Delete From Ias_Post_Mst and Ias_Post_Dtl (Cascade)
' Delete From Ias_Post_Mst  
                                            Where EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE PRD_NO =Ias_Post_Mst.MNTH AND BRN_NO = Ias_P
                                              and  Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
' Delete From Ias_Post_Dtl  
                                        Where EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE PRD_NO =Ias_Post_Dtl.MNTH AND BRN_NO = Ias_Post_Dtl.BRN_NO AND PRD_CLS = 0 AND ROWNUM<=1)  
                                        And  Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
' Update Ias_Post_Mst Set Doc_post=0  ,Unpost_date=Sysdate ,Unpost_u_id='||P_User_no||'  
                                           Where EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE PRD_NO =Ias_Post_Mst.MNTH AND BRN_NO = Ias_Post_Mst.BRN_NO AND PRD_CLS = 0 AND ROWNUM<=1) 
                                         And Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
' Update Ias_Post_Dtl Set Doc_post=0  ,Unpost_date=Sysdate ,Unpost_u_id='||P_User_no||' 
                                        Where EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE PRD_NO =Ias_Post_Dtl.MNTH AND BRN_NO = Ias_Post_Dtl.BRN_NO AND PRD_CLS = 0 AND ROWNUM<=1)  
                                         And  Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
--## Update Post Flag = 0  --
        Begin
              -- insert into tst values(P_Wh_DocSql);
' Update '||TABLE_NAME||' a Set '||Clmn_Doc_Post||'=0 ,Unpost_date=Sysdate ,Unpost_u_id='||P_User_no||'  Where 
                Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
               --  and  Exists(select doc_ser from ias_post_dtl where doc_close=0 and doc_ser=a.'||CLMN_Doc_Ser||' )
' Update HRS_SLRY_CALC_MST_HSTRY a Set DOC_POST =0 ,Unpost_date=Sysdate ,Unpost_u_id='||P_User_no||' Where  
                     Exists (Select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
' Update GLS_ADVNC_EXPNS_RVNU_DTL Set doc_post=0 ,Unpost_date=Sysdate ,Unpost_u_id='||P_User_no||' Where  Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
' Update Voucher_Detail Set cheque_post=0 ,Unpost_date=Sysdate ,Unpost_u_id='||P_User_no||' Where  Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
' Update Voucher_Detail Set ENDRSMNT_POST=0 ,ENDRSMNT_UNPOST_DATE=Sysdate ,ENDRSMNT_UNPOST_U_ID='||P_User_no||' Where  Exists (select 1 From S_Brn_Usr_Priv
                                              Where U_Id = '||p_User_No||'                            
' Update gr_note Set GR_POST=0 ,Unpost_date=Sysdate ,Unpost_u_id='||P_User_no||' Where  Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = '||p_User_No||'                            
            Exception 
            End;
Exception When others then
CREATE OR REPLACE PACKAGE IAS_Post_List_Pkg AS
   PROCEDURE Post_List_View ( List_Qry         IN OUT Post_List_Rec ,
    Procedure UnPost_List_Inv_View ( List_Qry       In Out Post_List_Rec               ,
CREATE OR REPLACE PACKAGE BODY IAS_Post_List_Pkg AS
 PROCEDURE Post_List_View (
  Begin
   Select nvl(Use_Audit_Doc,0)
 From Ias_Para_Gen;
   Exception 
  End;
   'Select J_Ser,                     
    From Master_Journal_V
    Where J_Date = Nvl(:P_Date , J_date)
                    And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  OR EXISTS (SELECT JV_TYPE 
                            FROM JV_TYPES_DETAIL
                            WHERE JV_TYPE = Master_Journal_V.JV_TYPE
  And (Nvl(J_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                    Where Doc_Close=0  
And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Master_Journal_V.J_DATE between F_DATE and t_date AND BRN_NO = Master_Journal_V.BRN_NO 
    'Select  V_Ser 
     From Vouchers
    Where Voucher_Type = 1
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Voucher_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                    Where Doc_Close=0  
And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Vouchers.Voucher_Date between F_DATE and t_date AND 
    'Select  V_Ser J_Ser,
     From Vouchers
    Where Voucher_Type = 2
                  And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Voucher_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                    Where Doc_Close=0  
   And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Vouchers.Voucher_Date between F_DATE and t_date AND BRN_NO = Vouchers.BRN_NO 
    'Select  Bill_Ser J_Ser,
     From  Ias_Bill_Mst
    Where  Bill_Date = Nvl(:P_Date , Bill_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Bill_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                    Where Doc_Close=0  
   And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Bill_Mst.Bill_DATE between F_DATE and t_date AND BRN_NO = Ias_Bill_Mst.BRN_NO 
    'Select  Bill_Ser J_Ser,
     From  Ias_Bill_Mst
    Where  Bill_Date = Nvl(:P_Date , Bill_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Bill_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                    Where Doc_Close=0  
   And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Bill_Mst.Bill_DATE between F_DATE and t_date AND BRN_NO = Ias_Bill_Mst.BRN_NO 
    'Select  Rt_Bill_Ser J_Ser,
    From Ias_Rt_Bill_Mst
Where Rt_Bill_D
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Rt_Bill_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                    Where Doc_Close=0  
              And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Rt_Bill_Mst.Rt_Bill_Date between F_DATE and t_date AND BRN_NO = Ias_Rt_Bill_Mst.BRN_NO 
    'Select  Rt_Bill_Ser J_Ser,
    From Ias_Rt_Bill_Mst
Where Rt_Bill_Date = Nvl(:P_Date , Rt_Bill_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Rt_Bill_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                    Where Doc_Close=0  
              And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Rt_Bill_Mst.Rt_Bill_Date between F_DATE and t_date AND BRN_NO = Ias_Rt_Bill_Mst.BRN_NO 
    'Select J_Ser,                   
            From 
           (Select Ias_pi_bill_Mst.Bill_Ser 
     From Ias_pi_bill_Mst,Gr_Note
Where Ias_pi_bill_Mst.Bill_Ser=Gr_Note.Doc_Ser
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
             And (Nvl(GR_NOTE.Gr_Post,0)=Decode(:P_POST_UNPOST,1,0,1) OR Exists ( Select Doc_Ser_REF From Ias_Post_DTL
                    Where Doc_Close=0  
             And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_pi_bill_Mst.Bill_DATE between F_DATE and t_date AND BRN_NO = Ias_pi_bill_Mst.BRN_NO 
            Select Ias_pi_bill_Mst.Bill_Ser 
     From Ias_pi_bill_Mst
Where Nvl(Ias_pi_bill_Mst.Pur_Type,0) = Decode(:P_Pur_Type,0,Nvl(I
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
             And (Nvl(Ias_pi_bill_Mst.Bill_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                                                                Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_pi_bill_Mst.Bill_DATE between F_DATE and t_date AND BRN_NO = Ias_pi_bill_Mst.BRN_NO 
    'Select  Rt_Bill_Ser         J_Ser,
 From Ias_Pr_Bill_Mst
Where Rt_Bill_Date = Nvl(:P_Date , Rt_Bill_Date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id =
                  And (Nvl(Rt_Bill_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
                  And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Pr_Bill_Mst.Rt_Bill_Date between F_DATE and t_date AND BRN_NO = Ias_Pr_Bill_Mst.BRN_NO 
    'Select  G_Ser J_Ser,
     From Gr_Note
    Where Pi_Type = 5
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Gr_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Gr_Note.GR_DATE between F_DATE and t_date AND BRN_NO = Gr_Note.BRN_NO 
    'Select  out_Ser          J_Ser,
     From Ias_Outgoing_Mst
    Where out_Date = Nvl(:P_Date , out_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(out_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
             And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Outgoing_Mst.OUT_DATE between F_DATE and t_date AND BRN_NO = Ias_Outgoing_Mst.BRN_NO 
    'Select   Doc_Ser J_Ser,
     From Stk_Adjustment
    Where Doc_Date = Nvl(:P_Date , Doc_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Stk_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Stk_Adjustment.DOC_DATE between F_DATE and t_date AND BRN_NO = Stk_Adjustment.BRN_NO 
     'Select  Tr_Ser      J_Ser,
        From Ias_WhTrns_Mst
       Where TR_INOUT_TYPE = 1
              And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Tr_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
                 And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_WhTrns_Mst.TR_DATE between F_DATE and t_date AND BRN_NO = Ias_WhTrns_Mst.BRN_NO 
     'Select  Tr_Ser      J_Ser,
        From Ias_WhTrns_Mst
       Where TR_INOUT_TYPE = 2 
               And Exists (Select 1 From S_Brn_Usr_Priv
                             Where U_Id = :P_User_No                         
                  And (Nvl(Tr_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
              And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_WhTrns_Mst.TR_DATE between F_DATE and t_date AND BRN_NO = Ias_WhTrns_Mst.BRN_NO 
     'Select  doc_ser        J_Ser,
        From Assemble_Kit_Items
       Where Doc_Date = Nvl(:P_Date , Doc_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
               And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Assemble_Kit_Items.DOC_DATE between F_DATE and t_date AND BRN_NO = Assemble_Kit_Items.BRN_NO 
     'Select  Doc_Ser        J_Ser,
        From DisAssemble_Kit_Items
       Where Doc_Date = Nvl(:P_Date , Doc_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
                 And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  DisAssemble_Kit_Items.DOC_DATE between F_DATE and t_date AND BRN_NO = DisAssemble_Kit_Items.BRN_NO 
     'Select  Doc_Ser         J_Ser,
     From Master_Gate_Gr
    Where Doc_Date = Nvl(:P_Date , Doc_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Master_Gate_Gr.DOC_DATE between F_DATE and t_date AND BRN_NO = Master_Gate_Gr.BRN_NO 
    'Select  Out_Ser J_Ser,
     From Master_Out_Bills
    Where Out_Date = Nvl(:P_Date , Out_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Out_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Master_Out_Bills.OUT_DATE between F_DATE and t_date AND BRN_NO = Master_Out_Bills.BRN_NO 
    'Select  Ret_Ser           J_Ser,
     From Ias_Ret_Bill_Mst
    Where Ret_Date = Nvl(:P_Date , Ret_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Ret_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Ret_Bill_Mst.RET_DATE between F_DATE and t_date AND BRN_NO = Ias_Ret_Bill_Mst.BRN_NO 
     'Select  doc_ser          J_Ser,
        From IAS_BILL_MST_ADD_DISC
Where Doc_Date = Nvl(:P_Date , Doc_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  IAS_BILL_MST_ADD_DISC.DOC_DATE
     'Select  doc_ser          J_Ser,
        From Ias_Pi_Bill_Mst_Add_Disc
Where Doc_Date = Nvl(:P_Date , Doc_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
              And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Pi_Bill_Mst_Add_Disc.DOC_DATE between F_DATE and t_date AND BRN_NO = Ias_Pi_Bill_Mst_Add_Disc.BRN_NO 
   'Select  DOC_SRL    J_Ser,
    From IAS_GRNT_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
             And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  IAS_GRNT_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = IAS_GRNT_MST.BRN_NO 
   'Select  DOC_SRL    J_Ser,
    From IAS_GRNT_INCR_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
          And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  IAS_GRNT_INCR_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = IAS_GRNT_INCR_MST.BRN_NO 
   'Select  DOC_SRL_REF    J_Ser,
    From IAS_GRNT_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post_REF,0)=0 OR Exists ( Select Doc_Ser
 From Ias_Post_Mst
                            Where Doc_Close=0  
         And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  IAS_GRNT_MST.GR_CLS_DATE between F_DATE and t_date AND BRN_NO = IAS_GRNT_MST.BRN_NO 
    'Select  Doc_Ser           J_Ser,
     From Ias_Due_Credit_Card
    Where value_Date = Nvl(:P_Date , value_Date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                                Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Due_Credit_Card.BILL_DATE between F_DATE and t_date AND BRN_NO = Ias_Due_Credit_Card.BRN_NO 
    'Select  M.DOC_SER    J_Ser,
    From IAS_BANK_ADJUST_MST M
                Where  M.doc_DATE = Nvl(:P_Date , M.DOC_DATE)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                      
                  And (Nvl(DOC_POST,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
    'Select  M.DOC_SRL    J_Ser,
    From GLS_ADVNC_EXPNS_RVNU_MST M,GLS_ADVNC_EXPNS_RVNU_DTL D
                Where M.DOC_SRL=D.DOC_SRL
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(D.DOC_POST,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  D.DUE_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
'Select   M.V_Ser     J_Ser,
        From Vouchers M, Voucher_Detail D
        Where M.V_Ser=D.V_Ser
         AND D.AC_CODE_DTL IN (SELECT BANK_NO FROM CASH_AT_BANK WHERE NVL(MEDIATOR,0)=0 )
               And Exists (Select 1 From S_Brn_Usr_Priv
                            Where U_Id = :P_User_No                         
          And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  D.VALUE_DATE between F_DATE and t_date AND BRN_NO = D.BRN_NO 
                'Select Vouchers.V_Ser        J_Ser,
        From Vouchers,Voucher_Detail
       Where Vouchers.V_Ser=Voucher_Detail.V_Ser
                     And (:P_User_No =1 or Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
              And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Voucher_Detail.VALUE_DATE between F_DATE and t_date AND BRN_NO = Voucher_Detail.BRN_NO 
'Select   Vouchers.V_Ser     J_Ser,
        From Vouchers,Voucher_Detail
       Where Vouchers.V_Ser=Voucher_Detail.V_Ser
               And Exists (Select 1 From S_Brn_Usr_Priv
                            Where U_Id = :P_User_No                         
                  And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Voucher_Detail.VALUE_DATE between F_DATE and t_date AND BRN_NO = Voucher_Detail.BRN_NO 
'Select  DOC_Ser J_Ser,
     From  SHP_PREPAID_SLS_MST  
    Where  DOC_Date = Nvl(:P_Date , DOC_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(SHP_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
              And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  SHP_PREPAID_SLS_MST.BILL_DATE between F_DATE and t_date AND BRN_NO = SHP_PREPAID_SLS_MST.BRN_NO 
    'Select  DOC_Ser J_Ser,
     From  SHP_BILLING
    Where  DOC_Date = Nvl(:P_Date , DOC_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(SHP_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  SHP_BILLING.BILL_DATE between F_DATE and t_date AND BRN_NO = SHP_BILLING.BRN_NO 
            'Select    DOC_SRL        J_Ser,
                From Ias_Exch_Cur_Mst
                Where Doc_Date = Nvl(:P_Date , Doc_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
             And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Exch_Cur_Mst.DOC_DATE between F_DATE and t_date AND BRN_NO = Ias_Exch_Cur_Mst.BRN_NO 
    'Select  Doc_Ser J_Ser,
     From  Ias_Sal_Cpn_Mst
    Where  DOC_Date = Nvl(:P_Date , DOC_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(DOC_PST,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                    Where Doc_Close=0  
   And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Ias_Sal_Cpn_Mst.DOC_DATE between F_DATE and t_date AND BRN_NO = Ias_Sal_Cpn_Mst.BRN_NO 
    'Select HND_SRL J_Ser,
               From  SHP_HND_MST
              Where  HND_Date = Nvl(:P_Date ,HND_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(DOC_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  SHP_HND_MST.HND_DATE between F_DATE and t_date AND BRN_NO = SHP_HND_MST.BRN_NO 
    'Select DOC_SER J_Ser,
               From  PMS_CONTRACTS_MST
              Where  CNTRCT_Date = Nvl(:P_Date ,CNTRCT_Date)
                And Exists (Select 1 From S_Brn_Usr_Priv
                        Where 
                And (Nvl(DOC_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  PMS_CONTRACTS_MST.CNTRCT_Date between F_DATE and t_date AND BRN_NO = PMS_CONTRACTS_MST.BRN_NO 
    'Select DOC_SER J_Ser,
               From  PMS_SUB_CONTRACTS_MST
              Where  SUB_S_CNTRCT_DATE= Nvl(:P_Date ,SUB_S_CNTRCT_DATE)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(DOC_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
              And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  PMS_SUB_CONTRACTS_MST.SUB_S_CNTRCT_DATE between F_DATE and t_date AND BRN_NO = PMS_SUB_CONTRACTS_MST.BRN_NO 
    'Select DOC_SER J_Ser,
               From  PMS_FINCE_RECEIPT_MST
              Where  RECEIPT_DATE= Nvl(:P_Date ,RECEIPT_DATE)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User
                  And (Nvl(DOC_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  PMS_FINCE_RECEIPT_MST.RECEIPT_DATE between F_DATE and t_date AND BRN_NO = PMS_FINCE_RECEIPT_MST.BRN_NO 
    'Select DOC_SER J_Ser,
               From  PMS_S_FINCE_RECEIPT_MST
              Where  RECEIPT_DATE= Nvl(:P_Date ,RECEIPT_DATE)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(DOC_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  PMS_S_FINCE_RECEIPT_MST.RECEIPT_DATE between F_DATE and t_date AND BRN_NO = PMS_S_FINCE_RECEIPT_MST.BRN_NO 
               'Select  DOC_SRL    J_Ser,
                From REM_CNTRCT_RNT_MST 
                Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
              And (Doc_Date < YS_GEN_PKG.GET_FRST_DAY OR EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  REM_CNTRCT_RNT_MST.DOC
               'Select  DOC_SRL    J_Ser,
                From REM_PRMTING_PRIOD_MST 
                Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
                    And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  REM_PRMTING_PRIOD_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = REM_PRMTING_PRIOD_MST.BRN_NO 
               'Select  DOC_SRL    J_Ser,
                From REM_CNTRCT_RNT_CNCL_MST 
                Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
                    And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  REM_CNTRCT_RNT_CNCL_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = REM_CNTRCT_RNT_CNCL_MST.BRN_NO 
               'Select  DOC_SRL    J_Ser,
                From REM_BILL_MST 
                Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
                 And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  REM_BILL_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = REM_BILL_MST.BRN_NO 
               'Select  DOC_SRL    J_Ser,
                From REM_CNTRCT_SALE_MST
                Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
                    And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  REM_CNTRCT_SALE_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = REM_CNTRCT_SALE_MST.BRN_NO 
               'Select  DOC_SRL    J_Ser,
                From REM_BILL_RNT_MST
                Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
                    And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  REM_BILL_RNT_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = REM_BILL_RNT_MST.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From FAS_INCRS_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  FAS_INCRS_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = FAS_INCRS_MST.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From FAS_DCRS_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
         And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  FAS_DCRS_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = FAS_DCRS_MST.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From FAS_TRNS_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
         And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  FAS_TRNS_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = FAS_TRNS_MST.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From FAS_RCVD_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  FAS_RCVD_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = FAS_RCVD_MST.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From FAS_DEPR_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
          And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  FAS_DEPR_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = FAS_DEPR_MST.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From FAS_ADJST_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
          And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  FAS_ADJST_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = FAS_ADJST_MST.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From FAS_EVL_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  FAS_EVL_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = FAS_EVL_MST.BRN_NO 
   'Select  DOC_SER    J_Ser,
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From FAS_AS_MNT_MST M
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SRL    J_Ser,
    From HRS_SLRY_CALC_MST    ---HRS_V_SLRY_CALC_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
             And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  HRS_SLRY_CALC_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = HRS_SLRY_CALC_MST.BRN_NO 
   'Select  DOC_SRL    J_Ser,
    From HRS_PYMNT_FIN_TRUST_MST
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  HRS_PYMNT_FIN_TRUST_MST.DOC_DATE between F_DATE and t_date AND BRN_NO = HRS_PYMNT_FIN_TRUST_MST.BRN_NO 
   'Select  DOC_SRL    J_Ser,
    From Hrs_Dsrv_Mst
    Where Post_Jv_Intrfc = 1 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
           And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  Hrs_Dsrv_Mst.DOC_DATE between F_DATE and t_date AND BRN_NO = Hrs_Dsrv_Mst.BRN_NO 
   'Select  DOC_SRL    J_Ser,
    From HRS_MDCL_CARE_MST M
    Where   Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER   J_Ser,
    From    IBS_CALC_PROFS  M
    Where   Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER   J_Ser,
     From    IBS_EVALUAT_CALCULAT_MST M
    Where   Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER   J_Ser,
     From IBS_VOUCHER_DUE  M
    Where   Doc_Dat
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER   J_Ser,
     From IBS_ADDITION_MERGE_MST  M
    Where   Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER   J_Ser,
     From IBS_ADDITION_MERGE_MST  M
    Where   Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER   J_Ser,
     From IBS_PAYMENT_PAID_MST  M
    Where   Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER   J_Ser,
     From IBS_BUSIN_INOUT_AMT  M
    Where   Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER   J_Ser,
     From IBS_CLOS_PROF_EXPNS  M
    Where   Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  M.DOC_SRL    J_Ser,
    From MRP_SFC_MATERIALS_RECEIVE_MSTR M
        Where M.APP_USR IS NOT NULL 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.MRC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  M.DOC_SRL    J_Ser,
    From MRP_SFC_WIP_MASTER M
                Where  M.APP_USR IS NOT NULL 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.SF_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
    From MRP_SFC_MATERIALS_RETURN_MSTR M
                Where  M.APP_USR IS NOT NULL 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.MRT_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  M.DOC_SRL    J_Ser,
    From MRP_SFC_PRODUCTS_DELIVERY_MSTR M
                Where  M.APP_USR IS NOT NULL 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.MDV_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  DOC_SER    J_Ser,
    From STN_JRNL_DIFF_EMP_MST  M   
    Where Doc_Date = Nvl(:P_Date , Doc_date)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
             And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
   'Select  Mb.DOC_SRL    J_Ser,
    From hps_pst_rnt Mb ,hps_admson_mst Mr
                Where Mb.doc_srl_admson=Mr.doc_srl 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  mb.DOC_DATE between F_DATE and t_date AND BRN_NO = mb.BRN_NO 
   'Select  MB.DOC_SRL    J_Ser,
    From Hps_Rm_Pymnt Mb ,hps_admson_mst Mr
                Where Mb.doc_srl_admson=Mr.doc_srl 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  mb.DOC_DATE between F_DATE and t_date AND BRN_NO = mb.BRN_NO 
   'Select  Mb.DOC_SRL  J_Ser,
    From Hps_Rm_Pymnt Mb ,hps_admson_mst Mr
                Where Mb.doc_srl_admson=Mr.doc_srl 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  mb.DOC_DATE between F_DATE and t_date AND BRN_NO = mb.BRN_NO 
   'Select  mb.DOC_SRL    J_Ser,
    From Hps_Rm_Disc Mb ,hps_admson_mst Mr
                Where Mb.doc_srl_admson=Mr.doc_srl  
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  mb.DOC_DATE between F_DATE and t_date AND BRN_NO = mb.BRN_NO 
   'Select  mb.DOC_SRL    J_Ser,
       From Hps_Rm_Chng Mb ,hps_admson_mst Mr
             Where Mb.doc_srl_admson=Mr.doc_srl 
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  mb.DOC_DATE between F_DATE and t_date AND BRN_NO = mb.BRN_NO 
    'Select  M.DOC_SRL    J_Ser,
    From FMS_TRNSPRT_CLS M
                Where  M.doc_DATE = Nvl(:P_Date , M.DOC_DATE)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(POSTED,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
    'Select  M.DOC_SRL    J_Ser,
    From FMS_CSTDY_CLR_MST M
                Where  M.doc_DATE = Nvl(:P_Date , M.DOC_DATE)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(POSTED,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
    'Select  M.DOC_SRL    J_Ser,
    From FMS_TRNSPRT_CNTRCT_CLS M
                Where  M.doc_DATE = Nvl(:P_Date , M.DOC_DATE)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(POSTED,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
    'Select  M.DOC_SRL    J_Ser,
    From AMS_MNT_EXEC_MST M
                Where  M.doc_DATE = Nvl(:P_Date , M.DOC_DATE)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                         Where U_Id = :P_User_No                         
                  And (Nvl(POSTED,0)=0 OR Exists ( Select Doc_SER From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  M.DOC_DATE between F_DATE and t_date AND BRN_NO = M.BRN_NO 
Exception When others then
           Raise_application_error(-20447,'Error When Query From Table '||SqlErrm) ;
Procedure UnPost_List_Inv_View ( List_Qry          In Out Post_List_Rec            ,
 Begin  
            'Select G_Ser      J_Ser       ,
              From Gr_Note
               Where Pi_Type = 5
              'Select  Out_Ser   J_Ser    ,
                From Ias_Outgoing_Mst
                 Where Out_Date = Nvl(:P_Date , Out_Date)
                 'Select  Doc_Ser      J_Ser      ,
                   From Stk_Adjustment
                     Where Doc_Date = Nvl(:P_Date , Doc_Date)
               'Select Tr_Ser       J_Ser    ,
                 From Ias_WhTrns_Mst
                  Where Tr_InOut_Type = 1 
               'Select  Tr_Ser       J_Ser    ,
                 From Ias_WhTrns_Mst
                  Where Tr_InOut_Type = 2 
               'Select Doc_Ser   J_Ser    ,
                 From Assemble_Kit_Items
                  Where Doc_Date = Nvl(:P_Date , Doc_Date)
               'Select Doc_Ser  J_Ser    ,
                 From DisAssemble_Kit_Items
                   Where Doc_Date = Nvl(:P_Date , Doc_Date)
 Exception 
    Raise_Application_Error(-20448,'Error When Query From Table '||SqlErrm) ;
                From Ias_Outgoing_Mst
                 Where Out_Date = Nvl(:P_Date , Out_Date)
     'Select  doc_ser          J_Ser,
        From IAS_BILL_MST_ADD_DISC
Where Doc_Date = Nvl(:P_Date , Doc_Date)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
                  And (Nvl(Doc_Post,0)=0 OR Exists ( Select Doc_Ser From Ias_Post_Mst
                            Where Doc_Close=0  
            And EXISTS ( SELECT 1 FROM S_PRD_BRN_CLS WHERE  IAS_BILL_MST_ADD_DISC.DOC_DATE
CREATE OR REPLACE PACKAGE IAS_POSTING_PKG AS
  PROCEDURE GET_PARA (
FUNCTION Get_G_A_code (P_G_code In VarChar2,P_g_type In VarChar2 Default Null) RETURN VarChar2;                                          
Function Get_BnkRecPay_Ac (P_Bank_No In NUMBER,P_Vouchr_Type In NUMBER) RETURN VarChar2;
Function Get_CB_ACode (P_CB_No In NUMBER,P_type In NUMBER) RETURN VarChar2;
Function Get_ChqPayIntrm_Ac (P_Bank_No In NUMBER,P_Vouchr_Type In NUMBER) RETURN VarChar2;
Procedure Update_IntrM_Tab ( P_doc_type   In NUMBER , 
  FUNCTION  Get_Intrfc_Code (P_Fld_Nm In Varchar2,P_Brn_No In Number ) RETURN VARCHAR2;
  Function Chk_Exist_Pst_Doc (
  FUNCTION CHECK_ACODE (P_ACODE IN ACCOUNT.A_CODE%TYPE, P_ACY IN VARCHAR2)
  PROCEDURE BALANCED_CC (
Procedure Balanced_Brn ( P_Doc_Type   In  Number ,
  PROCEDURE SET_DOC_INFO (
  FUNCTION GET_ACODE_REP_TYPE (P_ACODE IN ACCOUNT.A_CODE%TYPE)
  FUNCTION GET_PERIOD_NO (P_DOC_DATE IN DATE)
  FUNCTION GET_PJ_NO (
  FUNCTION GET_ACTV_NO (
  FUNCTION GET_C_V_CODE (
FUNCTION GET_V_C_CODE (
Function Get_W_Code_Brn ( P_A_Code   In  Account.A_Code%Type
  PROCEDURE CHECK_BAL_POST (
  PROCEDURE INSRT_POST_MST (
  PROCEDURE INSRT_POST_DTL (
CREATE OR REPLACE PACKAGE BODY IAS_POSTING_PKG AS
  PROCEDURE GET_PARA (
  BEGIN
    BEGIN
      SELECT NVL (CC_AVAIL, 1), NVL (CC_POST, 1), NVL (USE_PROJECTS, 0), NVL (USE_ACTVTY, 0), NVL (PJ_POST, 1), NVL (ACTV_POST, 1)
        From IAS_PARA_GEN;
    EXCEPTION
    END;
    BEGIN
      SELECT NVL (CONN_WC_CC_MANDTRY, 0)
        From IAS_PARA_INV;
    EXCEPTION
    END;
FUNCTION Get_G_A_code (P_G_code In VarChar2,P_G_type In VarChar2 Default Null) RETURN VarChar2 Is
   Select INV_A_CODE Into v_a_code From IAS_CONN_ACC_INV_BY_GL
    Where POST_CODE=P_G_code
    Select Si_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
    Where POST_CODE=P_G_code
    Select Sr_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
    Where POST_CODE=P_G_code
    Select Py_Sr_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
    Where POST_CODE=P_G_code
    Select Dsc_Si_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select Dsc_Pi_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select Cst_Si_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select Cst_Sr_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select Py_Cst_Sr_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select Cst_Free_Si_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
    Where POST_CODE=P_G_code
    Select Cst_Free_Sr_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select Cst_Free_Pi_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select PURCHASE_SRVC_A_CODE Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select DLY_SI_A_CODE Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select DLY_CST_SI_A_CODE Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select ADVNC_SI_A_CODE Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
    Select ADVNC_SR_A_CODE Into v_a_code From IAS_CONN_ACC_INV_BY_GL
     Where POST_CODE=P_G_code
   Select Inv_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
    Where POST_CODE=P_G_code
Exception 
  Raise_application_error(-20605,'Error When Select A_code For G_code = '||P_G_code||' P_Type'||P_g_type ||' '||SqlErrm) ;
Function Get_BnkRecPay_Ac (P_Bank_No In NUMBER,P_Vouchr_Type In NUMBER) RETURN VarChar2 Is
 Select rec_letter
   From Cash_at_bank 
  where bank_no=P_Bank_No;
 Select pay_letter
   From Cash_at_bank 
  where bank_no=P_Bank_No;
  Exception 
      Raise_application_error(-20606,'Error When Select Cash_at_bank ,'||SqlErrm) ;
Function Get_CB_ACode (P_CB_No In NUMBER,P_Type In NUMBER) RETURN VarChar2 Is
   Select a_code Into v_ac From cash_in_hand
    Where cash_no=P_CB_No;
   Select a_code Into v_ac From cash_at_bank
    Where bank_no=P_CB_No;
  Exception 
     Raise_application_error(-20607,'Error When Select Cash Or bank Account ='||SqlErrm) ; 
Function Get_ChqPayIntrm_Ac (P_Bank_No In NUMBER,P_Vouchr_Type In NUMBER) RETURN VarChar2 Is
 Select CHQ_PAY_INTRM_AC
   From Cash_at_bank 
  where bank_no=P_Bank_No;
  Exception 
      Raise_application_error(-20606,'Error When Select Cash_at_bank ,'||SqlErrm) ;
Procedure Update_IntrM_Tab (   P_doc_type    In NUMBER , 
  If P_Post_Type = 1 And P_Doc_Type Not In (83,84)  Then -- From posting screen 
     Begin
     Update Ias_Post_Mst Set Doc_Post=1,Post_U_Id = V_User_No,Post_Date = Sysdate
    Where Doc_type=P_Doc_Type
Exception 
                   Begin
     Update Ias_Post_Dtl Set Doc_Post=1,Post_U_Id = V_User_No,Post_Date = Sysdate
    Where Doc_type=P_Doc_Type
Exception 
     Update Ias_Post_Dtl Set Doc_Post=1,Post_U_Id = V_User_No,Post_Date = Sysdate
    Where Doc_type=P_Doc_Type
Exception 
     Update Ias_Post_Dtl Set Doc_Post=1,Post_U_Id = V_User_No,Post_Date = Sysdate
    Where Doc_type=P_Doc_Type
Exception 
Exception 
FUNCTION  Get_Intrfc_Code (P_Fld_Nm In Va
   Execute Immediate ('Select '||P_Fld_Nm ||' From Interface_Acc Where Brn_no = '||P_Brn_No) Into  v_a_code  ;
Exception                                    
  Function Chk_Exist_Pst_Doc (
Select 1 Into Exist
  From Ias_Post_Dtl 
   Where P_Doc_Type
            Select 1 Into Exist
  From Ias_Post_Dtl 
   Where P_Doc_Type
Select 1 Into Exist
  From Ias_Post_Mst 
   Where Doc_Ser=P_Doc_Ser
Select 1 Into Exist
  From Ias_Post_Dtl 
   Where Doc_Ser
Exception When Others Then
Procedure Balanced_Cc (P_Doc_Type   In  Number ,
 Begin
    Begin
       Select Ac_Balanced_Cc
        From Interface_Acc 
         Where Brn_No=Nvl(V_Brn_No,Brn_No) 
    Exception
    End;
    Begin
      Delete From Ias_Post_Dtl 
       Where Doc_Type            = P_Doc_Type 
    Exception
    End;
    Begin
        Select Count(Distinct Cc_Code) 
         From Ias_Post_Dtl 
          Where Doc_Ser = P_Doc_Ser
    Exception 
    End;        
     Begin
        Select Cc_Code Into V_Cc_Code_Dr
         From Detail_Journal_V
          Where Nvl(J_AMT,0) < 0 
     Exception 
     End;
     Begin
        Select Cc_Code Into V_Cc_Code_Cr
   From Detail_Journal_V
          Where Nvl(J_AMT,0) > 0 
     Exception 
     End;
        Select Cheq_Type Into V_Cheq_Type 
          From Vouchers Where V_Ser = P_Doc_Ser ;
        Begin
            Select Cc_Code  Into V_Cc_Code
              From Vouchers Where V_Ser = P_Doc_Ser ;
        Exception
        End;   
        Begin
          Delete From Ias_Post_Dtl 
           Where Doc_Type          = P_Doc_Type 
        Exception
        End;    
        Begin
          Select Cc_Code Into V_Cc_Code 
           From Warehouse_Details Where W_Code In
           (Select T_W_Code From Ias_Whtrns_Mst Where Tr_Ser = P_Doc_Ser);
        Exception
        End;    
        Cursor Cc_Dtl Is Select D.Doc_Type,D.Jv_Type,D.Doc_No,D.Doc_Ser,D.Doc_Date,D.Rcrd_No,D.Pj_No,D.Actv_No,
                    From Ias_Post_Dtl D,Ias_Post_MST M
            Where D.Doc_Ser             = M.Doc_Ser
            Group By D.Doc_Type,D.Jv_Type,D.Doc_No,D.Doc_Ser,D.Doc_Date,D.Rcrd_No,D.Pj_No,D.Actv_No,
           /* Cursor Brn_Dtl Is SELECT D.Doc_Type,D.Jv_Type,D.Doc_No,D.Doc_Ser,D.Doc_Date,D.Rcrd_No,D.Pj_No,D.Actv_No,
                                  From Ias_Post_Dtl D,Ias_Post_MST M
                       Where D.Doc_Ser             = M.Doc_Ser
                      Group By D.Doc_Type,D.Jv_Type,D.Doc_No,D.Doc_Ser,D.Doc_Date,D.Rcrd_No,D.Pj_No,D.Actv_No,
           Begin
                Begin
                    Select Sum(Abs(Nvl(Amt,0))) Into V_Amt_Bal From Ias_Post_Dtl
                        Where Doc_Ser=M_Cv.Doc_
                Exception
                End;    
            End;    
          Cursor Cc_Dtl Is Select D.Doc_Type,D.Jv_Type,D.Doc_No,D.Doc_Ser,D.Doc_Date,D.Rcrd_No,D.Pj_No,D.Actv_No,
                    From Ias_Post_Dtl D,Ias_Post_MST M
            Where D.Doc_Ser             = M.Doc_Ser
                Group By D.Doc_Type,D.Jv_Type,D.Doc_No,D.Doc_Ser,D.Doc_Date,D.Rcrd_No,D.Pj_No,D.Actv_No,
        /*Cursor Cc_Dtl Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,Rcrd_No,Pj_No,Actv_No,
                                Cc_Code,A_Cy,-Sum(Amt) Amt , -Sum(Amt_F) Amt_F   From Ias_Post_Dtl
                Where Doc_Ser=P_Doc_Ser
                Group By Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,Rcrd_No,Pj_No,Actv_No,
          Begin
            End;    
/*Procedure Balanced_Cc_OLD (P_Doc_Type   In  Number ,
 Begin
    Begin
       Select Ac_Balanced_Cc
        From Interface_Acc 
         Where Brn_No=Nvl(V_Brn_No,Brn_No) 
    Exception
    End;
    Begin
      Delete From Ias_Post_Dtl 
       Where Doc_Type            = P_Doc_Type 
    Exception
    End;
    Begin
        Select Count(Distinct Cc_Code) 
         From Ias_Post_Dtl 
          Where Doc_Ser = P_Doc_Ser
    Exception 
    End;        
     Begin
        Select Cc_Code Into V_Cc_Code_Dr
         From Detail_Journal_V
          Where Nvl(J_AMT,0) < 0 
     Exception 
     End;
     Begin
        Select Cc_Code Into V_Cc_Code_Cr
         From Detail_Journal_V
          Where Nvl
     Exception 
     End;
            Cursor C_Post_Dtl_Db Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,
          From Ias_Post_Dtl
                                    Where Doc_Type   = 1 
                                 Order By Rcrd_No ;
            Cursor C_Post_Dtl_Cr Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,
                                  From Ias_Post_Dtl
                                    Where Doc_Type   = 1 
                                 Order By Rcrd_No;
           Begin
        Select Cheq_Type Into V_Cheq_Type 
          From Vouchers Where V_Ser = P_Doc_Ser ;
        Begin
            Select Cc_Code  Into V_Cc_Code
              From Vouchers Where V_Ser = P_Doc_Ser ;
        Exception
        End;   
        Begin
          Delete From Ias_Post_Dtl 
           Where Doc_Type          = P_Doc_Type 
        Exception
        End;    
        Begin
          Select Cc_Code Into V_Cc_Code 
           From Warehouse_Details Where W_Code In
           (Select T_W_Code From Ias_Whtrns_Mst Where Tr_Ser = P_Doc_Ser);
        Exception
        End;    
        Cursor Cc_Dtl Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,Rcrd_No,Pj_No,Actv_No,
                -Sum(Amt) Amt, -Sum(Amt_F) Amt_F  From Ias_Post_Dtl
            Where Doc_Ser=P_Doc_Ser
            Group By Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,Rcrd_No,Pj_No,Actv_No,
            Begin
                Begin
                    Select Sum(Abs(Nvl(Amt,0))) Into V_Amt_Bal From Ias_Post_Dtl
                        Where Doc_Ser=M_Cv.Doc_Ser
                Exception
                End;    
            End;    
Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,Rcrd_No,Pj_No,Actv_No,
                                Cc_Code,A_Cy,-Sum(Amt) Amt , -Sum(Amt_F) Amt_F   From Ias_Post_Dtl
                Where Doc_Ser=P_Doc_Ser
                Group By Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,Rcrd_No,Pj_No,Actv_No,
          Begin
            End;    
Procedure Balanced_Brn ( P_Doc_Type   In  Number ,
 Begin
    Begin
    Delete From Ias_Post_Dtl 
       Where Doc_Type            = P_Doc_Type 
    Exception
    End;
    Begin  --MURAD UPDATE IN 12/06/2017  DOC_Brn_No
        Select Count(Distinct Brn_No) 
         From Ias_Post_Dtl 
          Where Doc_Ser = P_Doc_Ser
    Exception 
    End;        
     Begin
        Select Doc_Brn_No Into V_Brn_No_Dr
         From Detail_Journal_V
          Where Nvl(J_AMT,0) < 0 
     Exception 
     End;
     Begin
        Select Doc_Brn_No Into V_Brn_No_Cr
         From Detail_Journal_V
          Where Nvl(J_AMT,0) > 0 
     Exception 
     End;
            Cursor C_Post_Dtl_Db Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,
                                  From Ias_Post_Dtl
                                    Where Doc_Type   = 1 
                                 Order By Rcrd_No ;
            Cursor C_Post_Dtl_Cr Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,
                                  From Ias_Post_Dtl
                                    Where Doc_Type   = 1 
                                 Order By Rcrd_No;
           Begin
     Begin
       Select Ac_Balanced_Brn
        From Interface_Acc 
         Where Brn_No= I_Db.Doc_Brn_No 
     Exception
     End;
     Begin
       Select Ac_Balanced_Brn
        From Interface_Acc 
         Where Brn_No= I_Cr.Doc_Brn_No 
     Exception
     End;                 
            Cursor C_Post_Dtl_Db Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,
                                  From Ias_Post_Dtl
                                    Where Doc_Type   = 71 
                                 Order By Rcrd_No ;
            Cursor C_Post_Dtl_Cr Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,
                                  From Ias_Post_Dtl
                                    Where Doc_Type   = 71
                                 Order By Rcrd_No;
           Begin
                 Begin
                      Select 1 
                      From Ias_Post_Dtl
                        Where Doc_Type  = 71
                     Exception
                     End;
                     Begin
                        Select Brn_No Into V_Brn_No_Dr
                         From Ias_Post_Dtl
                        Where Doc_Type  = 71
                     Exception 
                     End;
                                     Begin
                                       Select Ac_Balanced_Brn
                                        From Interface_Acc 
                                         Where Brn_No= I_Db.Doc_Brn_No 
                                     Exception
                                     End;
                    Begin
                      Select 1 
                      From Ias_Post_Dtl
                        Where Doc_Type  = 71
                     Exception
                     End;
         Begin
            Select Brn_No Into V_Brn_No_Cr
             From Ias_Post_Dtl
                Where Doc_Type  = 71
         Exception 
         End;
                                                        Begin
                                       Select Ac_Balanced_Brn
                                        From Interface_Acc 
                                         Where Brn_No= I_Cr.Doc_Brn_No 
                                     Exception
                                     End;                 
        Begin
            Select Brn_No  Into V_Doc_Brn_No
             From MASTER_JOURNAL_V
              Where J_SER = P_Doc_Ser ;
        Exception
        End;
        Begin
        Select Cheq_Type Into V_Cheq_Type 
          From Vouchers Where V_Ser = P_Doc_Ser ;
        Exception
        End;  
        Begin
            Select Doc_Brn_No  Into V_Doc_Brn_No
             From Vouchers 
              Where V_Ser = P_Doc_Ser ;
        Exception
        End;   
            Begin
              Delete From Ias_Post_Dtl 
               Where Doc_Type            = P_Doc_Type 
            Exception
            End;    
        Begin
            Select Doc_Brn_No  Into V_Doc_Brn_No
             From Ias_Bill_Mst
              Where Bill_Ser = P_Doc_Ser ;
        Exception
        End;
        Begin
            Select Doc_Brn_No  Into V_Doc_Brn_No
             From Ias_Rt_Bill_Mst
              Where Rt_Bill_Ser = P_Doc_Ser ;
        Exception
        End;
        Begin
            Select Doc_Brn_No  Into V_Doc_Brn_No
             From Ias_Pi_Bill_Mst
              Where Bill_Ser = P_Doc_Ser ;
        Exception
        End;
        Begin
            Select Doc_Brn_No  Into V_Doc_Brn_No
             From Ias_Pr_Bill_Mst
              Where Rt_Bill_Ser = P_Doc_Ser ;
        Exception
        End;  
        Begin
            Select Doc_Brn_No  Into V_Doc_Brn_No
             From Gr_Note
              Where G_Ser = P_Doc_Ser ;
        Exception
        End;
        Begin
            Select Doc_Brn_No  Into V_Doc_Brn_No
             From Ias_Outgoing_Mst
              Where Out_Ser = P_Doc_Ser ;
        Exception
        End;
        Begin
            Select Doc_Brn_No  Into V_Doc_Brn_No
             From Stk_Adjustment
              Where Doc_Ser = P_Doc_Ser ;
        Exception
        End;  
        Begin
          Select Conn_Brn_No Into V_Doc_Brn_No 
           From Warehouse_Details
            Where W_Code In (Select T_W_Code From Ias_Whtrns_Mst Where Tr_Ser = P_Doc_Ser);
        Exception
        End;    
                Cursor Brn_Dtl Is SELECT D.Doc_Type,D.Jv_Type,D.Doc_No,D.Doc_Ser,D.Doc_Date,D.Rcrd_No,D.Pj_No,D.Actv_No,
                                  From Ias_Post_Dtl D,Ias_Post_MST M
                       Where D.Doc_Ser             = M.Doc_Ser
                      Group By D.Doc_Type,D.Jv_Type,D.Doc_No,D.Doc_Ser,D.Doc_Date,D.Rcrd_No,D.Pj_No,D.Actv_No,
              Begin
                    Begin
                        Select abs(Sum(Nvl(Amt,0))) 
                         From Ias_Post_Dtl
                          Where Doc_Ser        = M_Cv.Doc_Ser
                    Exception
                    End; 
                     Begin
                       Select Ac_Balanced_Brn
                        From Interface_Acc 
                         Where Brn_No= Nvl(M_Cv.Brn_No_DTL,M_Cv.Brn_No) 
                     Exception
                     End;
                      Begin
                       Select Ac_Balanced_Brn
                        From Interface_Acc 
                         Where Brn_No= Nvl(M_Cv.Brn_No_MST,M_Cv.Brn_No) 
                     Exception
                     End;   
            End;    
            Cursor Brn_Dtl Is Select Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,Rcrd_No,Pj_No,Actv_No,
t_F From Ias_Post_Dtl
                              Where Doc_Ser = P_Doc_Ser
                               Group By Doc_Type,Jv_Type,Doc_No,Doc_Ser,Doc_Date,Rcrd_No,Pj_No,Actv_No,
              Begin
      Begin
       Select Ac_Balanced_Brn
        From Interface_Acc 
         Where Brn_No= Nvl(M_Cv.Doc_Brn_No,M_Cv.Brn_No) 
      Exception
      End;
            End;    
  PROCEDURE SET_DOC_INFO (
  BEGIN
  EXCEPTION
  FUNCTION CHECK_ACODE (P_ACODE IN ACCOUNT.A_CODE%TYPE, P_ACY IN VARCHAR2) RETURN NUMBER IS
  BEGIN  
Select 1 
    From Account_Curr
     Where Account_Curr.a_code = P_acode
  EXCEPTION
  FUNCTION GET_ACODE_REP_TYPE (P_ACODE IN ACCOUNT.A_CODE%TYPE)
  BEGIN
    SELECT NVL (REPORT_BS, 0)
      From ACCOUNT, ACCOUNT_REPORT_TYPE
     WHERE ACCOUNT.A_REPORT = ACCOUNT_REPORT_TYPE.REPORT_TYPE
  EXCEPTION
  FUNCTION GET_PERIOD_NO (P_DOC_DATE IN DATE)
  BEGIN
    SELECT PRD_NO
      From S_PRD_DTL
     WHERE P_DOC_DATE BETWEEN F_DATE AND T_DATE;
  EXCEPTION
  END;
  FUNCTION GET_CC_CODE (
  BEGIN
    BEGIN
      Select 1 Into V_INV_AC From IAS_CONN_ACC_INV_BY_GL 
Where Inv_A_Code=P_A_Code;
    Exception 
  FUNCTION GET_PJ_NO (  P_A_CODE   IN  ACCOUNT.A_CODE%TYPE
  BEGIN
  FUNCTION GET_ACTV_NO (  P_A_CODE   IN  ACCOUNT.A_CODE%TYPE
  BEGIN
  FUNCTION GET_C_V_CODE (
  BEGIN
      Begin
Select C_Code Into V_CV_CODE  From Customer Where C_VENDOR=P_V_CODE And RowNum<=1;
      Exception When Others Then
FUNCTION GET_V_C_CODE (
  BEGIN
      Begin
Select C_VENDOR Into V_VC_CODE  From Customer Where C_CODE=P_C_CODE And RowNum<=1;
      Exception When Others Then
Function Get_W_Code_Brn ( P_A_Code   In  Account.A_Code%Type
  Begin
       Begin
         Select 1 Into V_Inv_Ac 
           From Ias_Conn_Acc_Inv_By_Gl 
           Where Inv_A_Code = P_A_Code ;
       Exception 
  PROCEDURE CHECK_BAL_POST (
  BEGIN
      SELECT NVL (SUM (AMT), 0)
        From IAS_POST_DTL
       WHERE DOC_TYPE = P_DOC_TYPE AND DOC_SER = P_DOC_SER;
    EXCEPTION WHEN OTHERS THEN
    End;
        BEGIN
          SELECT FRC_DIFF_AC
          From Interface_Acc 
          Where Brn_No=Nvl(P_BRN_NO,Brn_No) 
        EXCEPTION
        END;
           BEGIN
            SELECT FRC_DIFF_AC
          From Interface_Acc Where Brn_No=Nvl(P_BRN_NO,Brn_No) And RowNum<=1 ;
          EXCEPTION
          END;
  EXCEPTION
  PROCEDURE INSRT_POST_MST (
  BEGIN
Select 1 Into Exist
From Ias_Post_Mst 
Where Doc_Ser=P_Doc_Ser
Exception When Others Then
      BEGIN
        INSERT INTO IAS_POST_MST
      EXCEPTION
      END;
  PROCEDURE INSRT_POST_DTL (
  BEGIN
      BEGIN
        INSERT INTO IAS_POST_DTL
      EXCEPTION
      END;
PRD_BRN_CLS WHERE  IAS_BILL_MST_ADD_DISC.DOC_DATE
CREATE OR REPLACE PACKAGE IAS_POSTING_JRS_PKG  IS
Procedure Get_Para ( P_Lang_no 
Procedure Post_JRS( P_f_doc_no In NUMBER   Default Null
CREATE OR REPLACE PACKAGE BODY IAS_POSTING_JRS_PKG AS
Procedure Get_Para ( P_Lang_no      In Pls_Integer     Default 1    ,
 Begin
  Select Cur_code 
    From Ex_Rate 
   Where L_f=1;
  Exception When Others Then
  Begin
   Select Nvl(Ias_Para_Gen.Cc_Avail,1),Nvl(Ias_Para_Gen.Cc_Post,0),Nvl(Ias_Para_Gen.Pj_Post,0),Nvl(Ias_Para_Gen.Actv_Post,0),
   From Ias_Para_Gen,Ias_Para_Gl ;
   Exception 
  End;
Procedure Post_JRS( P_f_doc_no      In NUMBER   Default Null
 ( Select Mj.DOC_TYPE  
  From S_JRNL_FILE_MST Mj
 where Mj.j_ser = nvl(P_doc_ser, Mj.j_ser) 
   /*And Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = V_User_no                            
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
 ( Select 
    From S_JRNL_FILE_DTL Dj
 Where Dj.j_ser=M_cv.doc_ser)
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update S_JRNL_FILE_MST Set j_post = 1 , 
  Where j_ser=M_cv.doc_ser;
Exception 
CREATE OR REPLACE PACKAGE BODY IAS_POSTING_PKG AS
  PROCEDURE GET_PARA (
  BEGIN
    BEGIN
      SELECT NVL (CC_AVAIL, 1), NVL (CC_POST, 1), NVL (USE_PROJECTS, 0), NVL (USE_ACTVTY, 0), NVL (PJ_POST, 1), NVL (ACTV_POST, 1)
        From IAS_PARA_GEN;
    EXCEPTION
    END;
    BEGIN
      SELECT NVL (CONN_WC_CC_MANDTRY, 0)
        From IAS_PARA_INV;
    EXCEPTION
    END;
FUNCTION Get_G_A_code (P_G_code In VarChar2,P_G_type In VarChar2 Default Null) RETURN VarChar2 Is
CREATE OR REPLACE Package IAS_POSTING_GRNT_PKG Is
Procedure Get_Para ( P_Lang_no 
Procedure Post_Grnt( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Incr_Grnt( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Grnt_Cls( P_f_doc_no      In NUMBER   Default Null
CREATE OR REPLACE Package Body IAS_POSTING_GRNT_PKG Is
Procedure Get_Para ( P_Lang_no 
 Begin
  Select Cur_code 
    From Ex_Rate 
   Where L_f=1;
  Exception When Others Then
  Begin
   Select Nvl(Ias_Para_Gen.Cc_Avail,1),Nvl(Ias_Para_Gen.Cc_Post,0),Nvl(Ias_Para_Gen.Pj_Post,0),Nvl(Ias_Para_Gen.Actv_Post,0),
   From Ias_Para_Gen,Ias_Para_Gl ;
   Exception 
  End;
Procedure Post_GRNT( P_f_doc_no      In NUMBER   Default Null
 ( Select 27            
  From IAS_GRNT_MST Mj
 Where nvl(Mj.Doc_post,0)=Decode(Nvl(P_Post_Type,0),0,0,nvl(Mj.doc_post,0))
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
 ( Select 
    From ias_grnt_dtl Dj
 Where Dj.doc_srl=M_cv.doc_ser )
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update IAS_GRNT_MST Set DOC_POST = 1 , 
  Where DOC_SRL=M_cv.doc_ser;
Exception 
Procedure Post_Incr_Grnt( P_f_doc_no      In NUMBER   Default Null
 ( Select 28            
  From IAS_GRNT_INCR_MST Mj
 Where nvl(Mj.Doc_post,0)=Decode(Nvl(P_Post_Type,0),0,0,nvl(Mj.doc_post,0))
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
 ( Select 
    From ias_grnt_dtl Dj
 Where Dj.doc_srl=M_cv.doc_ser  )
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
        Begin
         Update IAS_GRNT_INCR_MST Set DOC_POST = 1 , 
          Where DOC_SRL=M_cv.doc_ser;
        Exception 
        End;
Procedure Post_GRNT_ClS( P_f_doc_no      In NUMBER   Default Null
 ( Select 29          doc_type
  From IAS_GRNT_MST Mj
 Where nvl(Mj.DOC_POST_REF,0)=Decode(Nvl(P_Post_Type,0),0,0,nvl(Mj.DOC_POST_REF,0))
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
 For D_cv in ( Select 
    From ias_grnt_dtl Dj
 Where Dj.doc_srl=M_cv.doc_ser
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
    Begin
     Update IAS_GRNT_MST Set doc_post_ref = 1 , 
      Where DOC_SRL_REF =M_cv.doc_ser;
    Exception 
    End;
Procedure Get_Para ( P_Lang_no 
Procedure Post_JRS( P_f_doc_no In NUMBER   Default Null
CREATE OR REPLACE PACKAGE BODY IAS_POSTING_JRS_PKG AS
Procedure Get_Para ( P_Lang_no      In Pls_Integer     Default 1    ,
 Begin
  Select Cur_code 
    From Ex_Rate 
   Where L_f=1;
  Exception When Others Then
  Begin
   Select Nvl(Ias_Para_Gen.Cc_Avail,1),Nvl(Ias_Para_Gen.Cc_Post,0),Nvl(Ias_Para_Gen.Pj_Post,0),Nvl(Ias_Para_Gen.Actv_Post,0),
CREATE OR REPLACE Package IAS_POSTING_Gl_PKG Is
--UPDATE POST_BANK_ADJUST 
Procedure Get_Para ( P_Lang_no 
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
Procedure Get_Interface_Ac(P_Brn_no          In NUMBER     ) ;  
FUNCTION Get_PST_BRN_NO(P_BRN_NO     IN NUMBER, P_DOC_BRN_NO IN NUMBER) RETURN NUMBER ;
Function Chk_Exist_Pst_Doc (P_DOC_TYPE         
PROCEDURE Del_Prev_Post  ( P_doc_type    In  Number  
 PROCEDURE Post_Doc_In_Save_Prc ( P_Doc_Typ      In NUMBER 
Procedure Post_Jv( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Rec(  P_f_doc_no      In NUMBER   Default Null
Procedure Post_Rec_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Pay(  P_f_doc_no      In NUMBER   Default Null
Procedure Post_Pay_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Pay_bnk_Apprv( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Exch_Cur( P_f_doc_no      In NUMBER   Default Null
Procedure POST_BANK_ADJUST(  P_f_doc_no     In NUMBER   Default Null
Procedure POST_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
Procedure POST_DUE_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
PROCEDURE Post_GLS_TAX ( P_Post_Type    In NUMBER   Default 0
CREATE OR REPLACE Package Body IAS_POSTING_GL_PKG Is
--UPDATE POST_BANK_ADJUST 
Procedure Get_Para ( P_Lang_no 
 Begin
  Select Cur_code 
    From Ex_Rate 
   Where L_f=1;
  Exception When Others Then
  Begin
   Select Nvl(Ias_Para_Gen.Cc_Avail,1),Nvl(Ias_Para_Gen.Cc_Post,0),Nvl(Ias_Para_Gen.Pj_Post,0),Nvl(Ias_Para_Gen.Actv_Post,0),
   From Ias_Para_Gen,Ias_Para_Gl ,Ias_Para_AR ;
   Exception 
  End;
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
   Begin  
      select * into Gnr_Prmtrs from ias_para_gen where Rownum<=1;
      select * into Gls_Prmtrs from ias_para_gl where Rownum<=1;
      select * into Ars_Prmtrs from ias_para_Ar where Rownum<=1;
      select * into Aps_Prmtrs from ias_para_Ap where Rownum<=1;
      select * into TRNS_PRVLGS from Privilege_Fixed where U_Id=P_Usr_No  AND rownum<=1;
   Exception 
  End; 
Procedure Get_Interface_Ac(P_Brn_no     
   select * into intrfc_Ac from Interface_Acc  Where Brn_No=P_Brn_No and Rownum<=1;
 /*Select  pay_letter, rec_letter,REPRS_COMM_AC ,Vat_Ac 
   From Interface_Acc 
  Where Brn_No=P_Brn_No 
  Exception 
 Function Chk_Exist_Pst_Doc (
Select 1 Into Exist
  From Ias_Post_Dtl 
   Where P_Doc
Select 1 Into Exist
  From Ias_Post_Mst 
   Where Doc_Ser=P_Doc_Ser
Select 1 Into Exist
  From Ias_Post_Dtl 
   Where Doc_Ser
Exception When Others Then
PROCEDURE Del_Prev_Post  ( P_doc_type    In  Number  
  Delete From Ias_Post_Dtl
   Where Doc_Ser   
  Delete From Ias_Post_Mst
   Where Doc_Type  
Exception When Others Then
 PROCEDURE Post_Doc_In_Save_Prc ( P_Doc_Typ      In NUMBER 
    BEGIN
    Exception 
FUNCTION Get_PST_BRN_NO(P_BRN_NO     IN NUMBER,
  BEGIN   
  Exception When Others Then
Procedure Post_Jv( P_f_doc_no      In NUMBER   Default Null
 ( Select 1            
  From Master_Journal_v Mj
 Where nvl(Mj.j_post,0)=0  --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mj.j_post,0))
 And Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = V_User_no                            
     AND (1=V_User_no OR EXISTS (SELECT JV_TYPE 
                           FROM JV_TYPES_DETAIL
                           WHERE JV_TYPE = Mj.JV_TYPE
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
 ( Select 
    From Detail_journal_v Dj
 Where Dj.j_ser=M_cv.doc_ser)
    IF V_USE_EXPNS_TAX=1 AND  D_cv.CLC_TYP_NO_TAX IS NOT NULL AND abs(NVL(D_cv.TAX_amt,0))>0  AND IAS_GEN_PKG.GET_FLD_VALUE('JV_TYPES','nvl(EXPNS_TAX_FLG,0)',' Where Jv_Type='||M_cv.jv_type||' and ROWNUM<=1  ')=4 
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update Master_Journal_v Set j_post = 1 , 
  Where j_ser=M_cv.doc_ser;
Exception 
Procedure Post_Rec(P_f_doc_no      In NUMBER   Default Null
 ( Select 2                   doc_type  
    From Vouchers Mv
 Where Mv.voucher_type = 1
 And Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = V_User_no 
   For Update NoWait
     Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
,0)  = 0 Then -- (Begin Chk Exist) --
             ( Select Dv.aC_code         a_code
              From GLS_VCHR_MST_ACCNT Dv
             Where vchr_typ=1 
         Begin
              Select Count(1) Into V_Cnt
               From Voucher_Detail 
                Where V_Ser = M_Cv.Doc_Ser;
         Exception when others then
         End;
            Begin
                 Select cheque_no into V_Chq_No 
                  From voucher_detail 
                   where V_SER=m_cv.doc_ser
            Exception when o
            End;
                Begin
                  Select Cc_Code
                  From Ias_Account_Cc
                   Where A_Code = v_cb_ac ;
                Exception
                Begin
                  Select PJ_NO
                  From Ias_Account_PJ
                   Where A_Code = v_cb_ac ;
                Exception
 (        Select Dv.a_code              a_code
From Voucher_detail Dv
   Where voucher_type=1 
    Begin
    Select Min(value_date) 
      From voucher_detail
       Where v_ser=M_cv.doc_ser
 Exception When Others Then
         Raise_Application_Error(-20616,'Error When Select Value_Date ='||SqlErrm) ;
          --## Get Account From bank  MMM
                Begin
                  Select Cc_Code
                  From Ias_Account_Cc
                   Where A_Code = v_cb_ac ;
                Exception
                Begin
                  Select PJ_NO
                  From Ias_Account_PJ
                   Where A_Code = v_cb_ac ;
                Exception
    Begin
        Execute Immediate 'BEGIN REM_POSTING_PKG.PST_RVN_RNT_RCPT_VUCHR (P_V_NO=>'||M_cv.doc_no||'
                                                                  P_USR_NO=>'||V_USER_NO||'); END;';
   -- Exception when OTHERS then
    IF V_USE_EXPNS_TAX=1 AND  D_cv.CLC_TYP_NO_TAX IS NOT NULL AND abs(NVL(D_cv.TAX_amt,0))>0  AND IAS_GEN_PKG.GET_FLD_VALUE('IAS_VOUCHR_TYPE','nvl(EXPNS_TAX_FLG,0)',' Where V_TYPE=1 AND V_TYPE_NO='||M_cv.Typ_NO||' and ROWNUM<=1  ')=4 
             BEGIN                                            
             END;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update Vouchers Set voucher_post = 1 ,
  Where voucher_type=1 
Exception When Others Then
Procedure Post_Rec_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
 ( Select 2                       doc_type
   From Vouchers Mv , Voucher_Detail Dv, Cash_at_Bank Cb
  Where Mv.v_ser = Dv.v_ser 
And Exists (Select 1 From S_Brn_Usr_Priv
                     Where U_Id = V_User_no                            
Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
      Begin
        Select a_code 
          From Cash_At_Bank 
         Where Bank_No = M_cv.Bank_No_Dtl; 
       Exception 
      End;
,0)  = 0 Then -- (Begin Chk Exist) --
    --## Check Voucher cheq is move From prev. Year
        Begin
          Select 1 Into cnt From ias_post_mst
           where doc_type=M_cv.doc_type
         Exception 
        End;
                         Select a_code,a_cy,ac_code_dtl,ac_dtl_typ,Ex_Rate ac_rate,bank_no,
                           From Ias_vchr_chq_dtl
                          Where Voucher_Type     = 1
                  Begin
                  Exception 
   v_a_code:= M_cv.a_code_end;
   v_cb_no:=M_cv.Ac_code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.Bank_acy_Mst);
                   v_a_code:= M_cv.a_code_end;
                   v_cb_no:=M_cv.Ac_code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.Bank_acy_Mst);
                         Select a_code,a_cy,ac_code_dtl,ac_dtl_typ,Ex_Rate ac_rate,bank_no,
                           From Ias_vchr_chq_dtl
                          Where Voucher_Type     = 1
                  Begin
                  Exception 
   v_a_code:= M_cv.a_code_end;
   v_cb_no:=M_cv.Ac_code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.Bank_acy_Mst);
                   begin     
                 Exception 
          begin
      Exception 
                   v_a_code:= M_cv.a_code_end;
                   v_cb_no:=M_cv.Ac_code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.Bank_acy_Mst);
    --## Update Post flag
        If P_Post_Type = 1 Then -- From Posting Screen  
            Begin
                Update voucher_detail Set cheque_post = 1
               Where voucher_type=1 
            Exception When Others Then
            End;
            Begin
                Update voucher_detail Set Endrsmnt_post = 1
               Where voucher_type=1 
            Exception When Others Then
            End;
            Begin
                Update Ias_Post_Dtl Set Doc_Post=1
                    Where Doc_type  =M_Cv.Doc_Type
            Exception 
            End;
Procedure Post_Pay(  P_f_doc_no     In NUMBER   Default Null
 ( Select 3                    doc_type
    From Vouchers Mv
   Where Mv.voucher_type = 2
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
,0)  = 0 Then -- (Begin Chk Exist) --
             ( Select Dv.aC_code         a_code
              From GLS_VCHR_MST_ACCNT Dv
             Where vchr_typ=2 
     Begin
          Select Count(1) Into V_Cnt
           From Voucher_Detail 
            Where V_Ser = M_Cv.Doc_Ser;
     Exception when others then
     End;
        Begin
             Select cheque_no into V_Chq_No 
              From voucher_detail 
               where V_SER=m_cv.doc_ser
        Exception when others then
        End;
 ( Select Dv.a_code         a_code
  From Voucher_detail Dv
 Where voucher_type=2 
    Begin
 Select Min(value_date) 
   From voucher_detail
  Where v_ser=M_cv.doc_ser
     Exception When Others Then
          Raise_Application_Error(-20630,'Error When Select Value_Date ='||SqlErrm) ;
    End;
          --## Get Account From bank 
          --## Get Account From bank  
    IF V_USE_EXPNS_TAX=1 AND  D_cv.CLC_TYP_NO_TAX IS NOT NULL AND abs(NVL(D_cv.TAX_amt,0))>0  AND IAS_GEN_PKG.GET_FLD_VALUE('IAS_VOUCHR_TYPE','nvl(EXPNS_TAX_FLG,0)',' Where V_TYPE=2 AND V_TYPE_NO='||M_cv.Typ_NO||' and ROWNUM<=1  ')=4 
             BEGIN                                            
             END;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update Vouchers Set voucher_post = 1 ,
  Where voucher_type=2 
Exception When Others Then
Procedure Post_Pay_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
 ( Select 3                         doc_type 
     From Vouchers Mv , Voucher_Detail Dv, Cash_at_Bank Cb
    Where Mv.v_ser = Dv.v_ser 
And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
      Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
      Begin
        Select a_code 
          From Cash_At_Bank 
         Where Bank_No = M_cv.Bank_No_Dtl; 
       Exception 
      End;
,0)  = 0 Then -- (Begin Chk Exist) --
    --## Check Voucher cheq Is move From prev. Year
        Begin
          Select 1 Into cnt From ias_post_mst
           where doc_type=M_cv.doc_type
         Exception 
        End;
                     v_a_code:= M_cv.a_code_end;
                     v_cb_no:= M_cv.Ac_Code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.bank_acy_Mst);
   v_a_code:= M_cv.a_code_end;
          --## Get Account From bank  
                  Begin
                    Select Cc_Code
                    From Ias_Account_Cc
                     Where A_Code = M_cv.Bank_A_Code ;
                  Exception
                  Begin
                    Select pj_no
                    From Ias_A
                     Where A_Code = M_cv.Bank_A_Code ;
                  Exception
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posti
 Update voucher_detail Set cheque_post = 1
  Where voucher_type=2 
Exception When Others Then
Update Ias_Post_Dtl Set Doc_Post=1
Where Doc_type  =
Exception 
 Procedure Post_Pay_bnk_Apprv( P_f_doc_no     In NUMBER   Default Null
 ( Select 3                         doc_type 
     From Vouchers Mv , Voucher_Detail Dv, Cash_AT_Bank Cb
    Where Mv.v_ser = Dv.v_ser 
       And Exists (Select 1 From S_Brn_Usr_Priv
                  Where U_Id = V_User_no                            
      Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
              Begin
                Select a_code 
                  From Cash_At_Bank 
                 Where Bank_No = M_cv.Bank_No_Dtl; 
               Exception 
              End;
,0)  = 0 Then -- (Begin Chk Exist) --
    --## Check Voucher cheq Is move From prev. Year
            Begin
              Select 1 Into cnt From ias_post_mst
               where doc_type=M_cv.doc_type
             Exception 
            End;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update voucher_detail Set cheque_post = 1
  Where voucher_type=2 
Exception When Others Then
Update Ias_Post_Dtl Set Doc_Post=1
Where Doc_type  =
Exception 
Procedure Post_Exch_Cur(  P_f_doc_no     In NUMBER   Default Null
 ( Select 98                doc_type
    From IAS_EXCH_CUR_MST Mv
   Where nvl(Mv.Doc_post,0)=0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mv.Doc_post,0))
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by Mv.Typ_No,Mv.Doc_no,Mv.Doc_date)
,0)  = 0 Then -- (Begin Chk Exist) --
     ( Select Dv.ac_code           a_code
      From IAS_EXCH_CUR_Dtl Dv
     Where  Dv.DOC_SRL=M_cv.doc_ser)
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update IAS_EXCH_CUR_MST Set DOC_post = 1 ,
  Where  Doc_Srl=M_cv.doc_ser;
Exception When Others Then
Procedure POST_BANK_ADJUST(  P_f_doc_no     In NUMBER   Default Null
 ( Select 23                doc_type
    From IAS_BANK_ADJUST_MST Mv
   Where nvl(Mv.Doc_post,0)=0  
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by  Mv.Doc_no,Mv.Doc_date)
,0)  = 0 Then -- (Begin Chk Exist) --
     (Select Dv.a_code                a_code
      From IAS_BANK_ADJUST_DTL Dv
     Where  Dv.doc_ser=M_cv.doc_ser)
-- NEED THIS UPDATE 
   Select nvl(Mv.BANK_BAL_IN_CMP,0) BANK_BAL_IN_CMP
From IAS_BANK_ADJUST_MST Mv
  Where 1=1
BEGIN 
update IAS_BANK_ADJUST_DTL 
WHERE DOC_SER =M_CV.DOC_SER;
Exception 
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update IAS_BANK_ADJUST_MST Set DOC_post = 1 ,
  Where  Doc_SER=M_cv.doc_ser;
Exception When Others Then
Procedure POST_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
 ( Select Mv.Doc_typ               doc_type
    From GLS_ADVNC_EXPNS_RVNU_MST Mv
   Where nvl(Mv.Doc_post,0)=0  
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by  Mv.Doc_no,Mv.Doc_date)
,0)  = 0 Then  -- (Begin Chk Exist) --
         ( Select Dv.I_NO           I_NO
          From GLS_ADVNC_EXPNS_RVNU_DTL Dv
         Where  Dv.doc_srL=M_cv.doc_ser)
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update GLS_ADVNC_EXPNS_RVNU_MST Set DOC_post = 1 ,
  Where  Doc_SRL=M_cv.doc_ser;
Exception When Others Then
Procedure POST_DUE_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
 ( Select Mv.Doc_typ               doc_type
    From GLS_ADVNC_EXPNS_RVNU_MST Mv,GLS_ADVNC_EXPNS_RVNU_DTL Dv
   Where Mv.DOC_SRL=DV.DOC_SRL
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by  Mv.Doc_no,Mv.Doc_date)
   -- insert into mm(m) values(M_cv.RCRD_NO||'   0001');
,0)  = 0 Then -- (Begin Chk Exist) --
        Begin
          Select 1 Into v_Cnt From ias_post_mst
           where doc_ser=M_cv
         Exception 
        End;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update GLS_ADVNC_EXPNS_RVNU_DTL Set DOC_post = 1 ,
  Where  Doc_SRL=M_cv.doc_ser
Exception When Others Then
PROCEDURE Post_GLS_TAX ( P_Post_Type    In NUMBER   Default 0
    Begin
        Select NO_OF_DECIMAL,Tax_Pst_Mthd,Cc_Avail Into V_No_Of_Dcml,V_Tax_Pst_Mthd,V_Cc_Avail From Ias_Para_Gl,Ias_Para_Gen;
        Select No_Of_Decimal_Ar,Tax_Pst_Mthd,Cc_Avail Into V_No_Of_Dcml,V_Tax_Pst_Mthd,V_Cc_Avail From Ias_Para_Ar,Ias_Para_Gen;
    Exception When Others Then 
    End;    
       For Tax_Cv In (  Select M.Tax_No,
                          From Gnr_Tax_Inpt_Movmnt M
                         Where M.Doc_Type=P_Doc_Type
                      Group By M.Tax_No,
                         Order By M.A_Code) Loop
                   Begin
                      Select Frc_Diff_Cc Into V_Cc_Code From Interface_Acc WHere Brn_No=Tax_Cv.Brn_No And RowNum<=1;
                   Exception When Others Then 
                   End;   
          --## Get Account From bank  
CREATE OR REPLACE Package IAS_POSTING_Gl_PKG Is
--UPDATE POST_ BANK_ ADJUST 
Procedure Get_Para ( P_Lang_no 
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
Procedure Get_Interface_Ac(P_Brn_no          In NUMBER     ) ;  
FUNCTION Get_PST_BRN_NO(P_BRN_NO     IN NUMBER, P_DOC_BRN_NO IN NUMBER) RETURN NUMBER ;
Function Chk_Exist_Pst_Doc (P_DOC_TYPE         
PROCEDURE Del_Prev_Post  ( P_doc_type    In  Number  
 PROCEDURE Post_Doc_In_Save_Prc ( P_Doc_Typ      In NUMBER 
Procedure Post_Jv( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Rec(  P_f_doc_no      In NUMBER   Default Null
Procedure Post_Rec_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Pay(  P_f_doc_no      In NUMBER   Default Null
Procedure Post_Pay_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Pay_bnk_Apprv( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Exch_Cur( P_f_doc_no      In NUMBER   Default Null
Procedure POST_BANK_ADJUST(  P_f_doc_no     In NUMBER   Default Null
Procedure POST_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
Procedure POST_DUE_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
PROCEDURE Post_GLS_TAX ( P_Post_Type    In NUMBER   Default 0
CREATE OR REPLACE Package Body IAS_POSTING_GL_PKG Is
--UPDATE POST_ BANK_ ADJUST 
Procedure Get_Para ( P_Lang_no 
 Begin
  Select Cur_code 
    From Ex_Rate 
   Where L_f=1;
  Exception When Others Then
  Begin
   Select Nvl(Ias_Para_Gen.Cc_Avail,1),Nvl(Ias_Para_Gen.Cc_Post,0),Nvl(Ias_Para_Gen.Pj_Post,0),Nvl(Ias_Para_Gen.Actv_Post,0),
   From Ias_Para_Gen,Ias_Para_Gl ,Ias_Para_AR ;
   Exception 
  End;
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
   Begin  
      select * into Gnr_Prmtrs from ias_para_gen where Rownum<=1;
      select * into Gls_Prmtrs from ias_para_gl where Rownum<=1;
      select * into Ars_Prmtrs from ias_para_Ar where Rownum<=1;
      select * into Aps_Prmtrs from ias_para_Ap where Rownum<=1;
      select * into TRNS_PRVLGS from Privilege_Fixed where U_Id=P_Usr_No  AND rownum<=1;
   Exception 
  End; 
Procedure Get_Interface_Ac(P_Brn_no     
   select * into intrfc_Ac from Interface_Acc  Where Brn_No=P_Brn_No and Rownum<=1;
 /*Select  pay_letter, rec_letter,REPRS_COMM_AC ,Vat_Ac 
   From Interface_Acc 
  Where Brn_No=P_Brn_No 
  Exception 
 Function Chk_Exist_Pst_Doc (
Select 1 Into Exist
  From Ias_Post_Dtl 
   Where P_Doc_Type
Select 1 Into Exist
  From Ias_Post_Mst 
   Where Doc_Ser=P_Doc_Ser
Select 1 Into Exist
  From Ias_Post_Dtl 
   Where Doc_Ser
Exception When Others Then
PROCEDURE Del_Prev_Post  ( P_doc_type    In  Number  
  Delete From Ias_Post_Dtl
   Where Doc_Ser   
  Delete From Ias_Post_Mst
   Where Doc_Type  
Exception When Others Then
 PROCEDURE Post_Doc_In_Save_Prc ( P_Doc_Typ      In NUMBER 
    BEGIN
    Exception 
FUNCTION Get_PST_BRN_NO(P_BRN_NO     IN NUMBER,
  BEGIN   
  Exception When Others Then
Procedure Post_Jv( P_f_doc_no      In NUMBER   Default Null
 ( Select 1            
  From Master_Journal_v Mj
 Where nvl(Mj.j_post,0)=0  --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mj.j_post,0))
 And Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = V_User_no                            
     AND (1=V_User_no OR EXISTS (SELECT JV_TYPE 
                           FROM JV_TYPES_DETAIL
                           WHERE JV_TYPE = Mj.JV_TYPE
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
 ( Select 
    From Detail_journal_v Dj
 Where Dj.j_ser=M_cv.doc_ser)
    IF V_USE_EXPNS_TAX=1 AND  D_cv.CLC_TYP_NO_TAX IS NOT NULL AND abs(NVL(D_cv.TAX_amt,0))>0  AND IAS_GEN_PKG.GET_FLD_VALUE('JV_TYPES','nvl(EXPNS_TAX_FLG,0)',' Where Jv_Type='||M_cv.jv_type||' and ROWNUM<=1  ')=4 
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update Master_Journal_v Set j_post = 1 , 
  Where j_ser=M_cv.doc_ser;
Exception 
Procedure Post_Rec(P_f_doc_no      In NUMBER   Default Null
 ( Select 2                   doc_type  
    From Vouchers Mv
 Where Mv.voucher_type = 1
 And Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = V_User_no 
   For Update NoWait
     Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
,0)  = 0 Then -- (Begin Chk Exist) --
             ( Select Dv.aC_code         a_code
              From GLS_VCHR_MST_ACCNT Dv
             Where vchr_typ=1 
         Begin
              Select Count(1) Into V_Cnt
               From Voucher_Detail 
                Where V_Ser = M_Cv.Doc_Ser;
         Exception when others then
         End;
            Begin
                 Select cheque_no into V_Chq_No 
                  From voucher_detail 
                   where V_SER=m_cv.doc_ser
         Exception when others then
            End;
                Begin
                  Select Cc_Code
                  From Ias_Account_Cc
                   Where A_Code = v_cb_ac ;
                Exception
                Begin
                  Select PJ_NO
                  From Ias_Account_PJ
                   Where A_Code = v_cb_ac ;
                Exception
 (        Select Dv.a_code              a_code
From Voucher_detail Dv
   Where voucher_type=1 
    Begin
    Select Min(value_date) 
      From voucher_detail
       Where v_ser=M_cv.doc_ser
 Exception When Others Then
         Raise_Application_Error(-20616,'Error When Select Value_Date ='||SqlErrm) ;
          --## Get Account From bank  MMM
                Begin
                  Select Cc_Code
                  From Ias_Account_Cc
                   Where A_Code = v_cb_ac ;
                Exception
                Begin
                  Select PJ_NO
                  From Ias_Account_PJ
                   Where A_Code = v_cb_ac ;
                Exception
    Begin
        Execute Immediate 'BEGIN REM_POSTING_PKG.PST_RVN_RNT_RCPT_VUCHR (P_V_NO=>'||M_cv.doc_no||'
                                                                  P_USR_NO=>'||V_USER_NO||'); END;';
   -- Exception when OTHERS then
    IF V_USE_EXPNS_TAX=1 AND  D_cv.CLC_TYP_NO_TAX IS NOT NULL AND abs(NVL(D_cv.TAX_amt,0))>0  AND IAS_GEN_PKG.GET_FLD_VALUE('IAS_VOUCHR_TYPE','nvl(EXPNS_TAX_FLG,0)',' Where V_TYPE=1 AND V_TYPE_NO='||M_cv.Typ_NO||' and ROWNUM<=1  ')=4 
             BEGIN                                            
             END;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update Vouchers Set voucher_post = 1 ,
  Where voucher_type=1 
Exception When Others Then
 ( Select 2                       doc_type
   From Vouchers Mv , Voucher_Detail Dv, Cash_at_Bank Cb
  Where Mv.v_ser = Dv.v_ser 
And Exists (Select 1 From S_Brn_Usr_Priv
                     Where U_Id = V_User_no                            
Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
      Begin
        Select a_code 
          From Cash_At_Bank 
         Where Bank_No = M_cv.Bank_No_Dtl; 
       Exception 
      End;
,0)  = 0 Then -- (Begin Chk Exist) --
    --## Check Voucher cheq is move From prev. Year
        Begin
          Select 1 Into cnt From ias_post_mst
           where doc_type=M_cv.doc_type
         Exception 
        End;
                         Select a_code,a_cy,ac_code_dtl,ac_dtl_typ,Ex_Rate ac_rate,bank_no,
                           From Ias_vchr_chq_dtl
                          Where Voucher_Type     = 1
                  Begin
                  Exception 
   v_a_code:= M_cv.a_code_end;
   v_cb_no:=M_cv.Ac_code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.Bank_acy_Mst);
                   v_a_code:= M_cv.a_code_end;
                   v_cb_no:=M_cv.Ac_code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.Bank_acy_Mst);
                         Select a_code,a_cy,ac_code_dtl,ac_dtl_typ,Ex_Rate ac_rate,bank_no,
                           From Ias_vchr_chq_dtl
                          Where Voucher_Type     = 1
                  Begin
                  Exception 
   v_a_code:= M_cv.a_code_end;
   v_cb_no:=M_cv.Ac_code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.Bank_acy_Mst);
                   begin     
                 Exception 
          begin
                Exception 
                   v_a_code:= M_cv.a_code_end;
                   v_cb_no:=M_cv.Ac_code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.Bank_acy_Mst);
    --## Update Post flag
        If P_Post_Type = 1 Then -- From Posting Screen  
            Begin
                Update voucher_detail Set cheque_post = 1
               Where voucher_type=1 
            Exception When Others Then
            End;
            Begin
                Update voucher_detail Set Endrsmnt_post = 1
               Where voucher_type=1 
            Exception When Others Then
            End;
            Begin
                Update Ias_Post_Dtl Set Doc_Post=1
                    Where Doc_type  =M_Cv.Doc_Type
            Exception 
            End;
Procedure Post_Pay(  P_f_doc_no     In NUMBER   Default Null
 ( Select 3                    doc_type
    From Vouchers Mv
   Where Mv.voucher_type = 2
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
,0)  = 0 Then -- (Begin Chk Exist) --
             ( Select Dv.aC_code         a_code
              From GLS_VCHR_MST_ACCNT Dv
             Where vchr_typ=2 
     Begin
          Select Count(1) Into V_Cnt
           From Voucher_Detail 
            Where V_Ser = M_Cv.Doc_Ser;
     Exception when others then
     End;
        Begin
             Select cheque_no into V_Chq_No 
              From voucher_detail 
               where V_SER=m_cv.doc_ser
        Exception when others then
        End;
 ( Select Dv.a_code         a_code
  From Voucher_detail Dv
 Where voucher_type=2 
    Begin
 Select Min(value_date) 
   From voucher_detail
  Where v_ser=M_cv.doc_ser
     Exception When Others Then
          Raise_Application_Error(-20630,'Error When Select Value_Date ='||SqlErrm) ;
    End;
          --## Get Account From bank 
          --## Get Account From bank  
    IF V_USE_EXPNS_TAX=1 AND  D_cv.CLC_TYP_NO_TAX IS NOT NULL AND abs(NVL(D_cv.TAX_amt,0))>0  AND IAS_GEN_PKG.GET_FLD_VALUE('IAS_VOUCHR_TYPE','nvl(EXPNS_TAX_FLG,0)',' Where V_TYPE=2 AND V_TYPE_NO='||M_cv.Typ_NO||' and ROWNUM<=1  ')=4 
             BEGIN                                            
             END;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update Vouchers Set voucher_post = 1 ,
  Where voucher_type=2 
Exception When Others Then
Procedure Post_Pay_Due_Cheq( P_f_doc_no      In NUMBER   Default Null
     From Vouchers Mv , Voucher_Detail Dv, Cash_at_Bank Cb
    Where Mv.v_ser = Dv.v_ser 
And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
      Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
      Begin
        Select a_code 
          From Cash_At_Bank 
         Where Bank_No = M_cv.Bank_No_Dtl; 
       Exception 
      End;
,0)  = 0 Then -- (Begin Chk Exist) --
    --## Check Voucher cheq Is move From prev. Year
        Begin
          Select 1 Into cnt From ias_post_mst
           where doc_type=M_cv.doc_type
         Exception 
        End;
                     v_a_code:= M_cv.a_code_end;
                     v_cb_no:= M_cv.Ac_Code_Dtl_End;--IAS_CshBnk_Pkg.Get_CB_No(M_cv.jv_type,v_a_code,M_cv.bank_acy_Mst);
          --## Get Account From bank  
                  Begin
                    Select Cc_Code
                    From Ias_Account_Cc
                     Where A_Code = M_cv.Bank_A_Code ;
                  Exception
                  Begin
                    Select pj_no
                    From Ias_Account_pj
                     Where A_Code = M_cv.Bank_A_Code ;
                  Exception
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update voucher_detail Set cheque_post = 1
  Where voucher_type=2 
Exception When Others Then
Update Ias_Post_Dtl Set Doc_Post=1
Where Doc_type  =
Exception 
 Procedure Post_Pay_bnk_Apprv( P_f_doc_no     In NUMBER   Default Null
 ( Select 3                         doc_type 
     From Vouchers Mv , Voucher_Detail Dv, Cash_AT_Bank Cb
    Where Mv.v_ser = Dv.v_ser 
       And Exists (Select 1 From S_Brn_Usr_Priv
                  Where U_Id = V_User_no                            
      Order by Mv.voucher_type,Mv.voucher_no,Mv.voucher_date)
              Begin
                Select a_code 
                  From Cash_At_Bank 
                 Where Bank_No = M_cv.Bank_No_Dtl; 
               Exception 
              End;
,0)  = 0 Then -- (Begin Chk Exist) --
    --## Check Voucher cheq Is move From prev. Year
            Begin
              Select 1 Into cnt From ias_post_mst
               where doc_type=M_cv.doc_type
             Exception 
            End;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update voucher_detail Set cheque_post = 1
  Where voucher_type=2 
Exception When Others Then
Update Ias_Post_Dtl Set Doc_Post=1
Where Doc_type  =
Exception 
Procedure Post_Exch_Cur(  P_f_doc_no     In NUMBER   Default Null
 ( Select 98                doc_type
    From IAS_EXCH_CUR_MST Mv
   Where nvl(Mv.Doc_post,0)=0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mv.Doc_post,0))
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by Mv.Typ_No,Mv.Doc_no,Mv.Doc_date)
,0)  = 0 Then -- (Begin Chk Exist) --
     ( Select Dv.ac_code           a_code
      From IAS_EXCH_CUR_Dtl Dv
     Where  Dv.DOC_SRL=M_cv.doc_ser)
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update IAS_EXCH_CUR_MST Set DOC_post = 1 ,
  Where  Doc_Srl=M_cv.doc_ser;
Exception When Others Then
Procedure POST_BANK_ADJUST(  P_f_doc_no     In NUMBER   Default Null
 ( Select 23                doc_type
    From IAS_BANK_ADJUST_MST Mv
   Where nvl(Mv.Doc_post,0)=0  
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by  Mv.Doc_no,Mv.Doc_date)
,0)  = 0 Then -- (Begin Chk Exist) --
     (Select Dv.a_code                a_code
      From IAS_BANK_ADJUST_DTL Dv
     Where  Dv.doc_ser=M_cv.doc_ser)
-- NEED THIS UPDATE 
   Select nvl(Mv.BANK_BAL_IN_CMP,0) BANK_BAL_IN_CMP
  Where 1=1
Order by  Mv.Doc_SER;
BEGIN 
update IAS_BANK_ADJUST_DTL 
WHERE DOC_SER =M_CV.DOC_SER;
Exception 
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update IAS_BANK_ADJUST_MST Set DOC_post = 1 ,
  Where  Doc_SER=M_cv.doc_ser;
Exception When Others Then
Procedure POST_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
 ( Select Mv.Doc_typ               doc_type
    From GLS_ADVNC_EXPNS_RVNU_MST Mv
   Where nvl(Mv.Doc_post,0)=0  
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by  Mv.Doc_no,Mv.Doc_date)
,0)  = 0 Then  -- (Begin Chk Exist) --
         ( Select Dv.I_NO           I_NO
          From GLS_ADVNC_EXPNS_RVNU_DTL Dv
         Where  Dv.doc_srL=M_cv.doc_ser)
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update GLS_ADVNC_EXPNS_RVNU_MST Set DOC_post = 1 ,
  Where  Doc_SRL=M_cv.doc_ser;
Exception When Others Then
Procedure POST_DUE_ADVNC_EXPNS_RVNU(  P_f_doc_no     In NUMBER   Default Null
 ( Select Mv.Doc_typ               doc_type
    From GLS_ADVNC_EXPNS_RVNU_MST Mv,GLS_ADVNC_EXPNS_RVNU_DTL Dv
   Where Mv.DOC_SRL=DV.DOC_SRL
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
     For Update NoWait
   Order by  Mv.Doc_no,Mv.Doc_date)
   -- insert into mm(m) values(M_cv.RCRD_NO||'   0001');
,0)  = 0 Then -- (Begin Chk Exist) --
        Begin
          Select 1 
Into v_Cnt From ias_post_mst
           where doc_ser=M_cv.doc_ser
         Exception 
        End;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update GLS_ADVNC_EXPNS_RVNU_DTL Set DOC_post = 1 ,
  Where  Doc_SRL=M_cv.doc_ser
Exception When Others Then
PROCEDURE Post_GLS_TAX ( P_Post_Type    In NUMBER   Default 0
    Begin
        Select NO_OF_DECIMAL,Tax_Pst_Mthd,Cc_Avail Into V_No_Of_Dcml,V_Tax_Pst_Mthd,V_Cc_Avail From Ias_Para_Gl,Ias_Para_Gen;
        Select No_Of_Decimal_Ar,Tax_Pst_Mthd,Cc_Avail Into V_No_Of_Dcml,V_Tax_Pst_Mthd,V_Cc_Avail From Ias_Para_Ar,Ias_Para_Gen;
    Exception When Others Then 
    End;    
       For Tax_Cv In (  Select M.Tax_No,
                          From Gnr_Tax_Inpt_Movmnt M
                         Where M.Doc_Type=P_Doc_Type
           Group By M.Tax_No,
                         Order By M.A_Code) Loop
                   Begin
                      Select Frc_D
iff_Cc Into V_Cc_Code From Interface_Acc WHere Brn_No=Tax_Cv.Brn_No And RowNum<=1;
                   Exception When Others Then 
                   End;   
          --## Get Account From bank  
CREATE OR REPLACE PACKAGE IAS_GL_TRNS_PKG AS
PROCEDURE Get_Jv_Gr_Doc ( P_jv_Type In Out NUMBER ,
FUNCTION GET_INSTL_RQTYPNO_AMTPRV(P_DOC_TYP_REF IN NUMBER,
PROCEDURE Insrt_Jv_Mst( p_jv_type       In NUMBER,
PROCEDURE Insrt_Jv_Dtl (  p_jv_type              In NUMBER,
PROCEDURE Update_
PROCEDURE Get_Jv_Kimb_Doc ( P_jv_Type In Out NUMBER ,
CREATE OR REPLACE PACKAGE Body IAS_GL_TRNS_PKG AS
PROCEDURE Get_Jv_Gr_Doc (   P_jv_Type In Out NUMBER ,
Begin ---SSS                      
    Begin
        Select Jv_Type
            From Jv_Types
        Where GR_TYPE=1;
    Exception
            Raise_application_error(-20450,'Error When select Jv_Types= '||SqlErrm);
    End;                       
    Begin
        Select Sequenced
            From jv_types 
        Where jv_type=P_jv_Type;
    Exception When Others Then
    End;
        Begin
        Select Nvl(max(j_doc_no),0)+1 
            From master_journal_v,jv_types
        where master_journal_v.jv_type=jv_types.jv_type 
        and SEQUENCED=(Select SEQUENCED From jv_types 
                         where jv_type=P_jv_Type) ;
        Exception when others Then
            Raise_application_error(-20452,'Error When Select Jv. Documnet No.= '||SqlErrm);
        End; 
        Begin                  
            Select nvl(Max(J_Doc_No),0) + 1
                From Master_Journal_v
            Where Jv_Type =P_jv_Type;
        Exception when others Then
            Raise_application_error(-20452,'Error When Select Jv. Documnet No.= '||SqlErrm);
        End; 
FUNCTION GET_INSTL_RQTYPNO_AMTPRV(P_DOC_TYP_REF IN NUMBER,
                                Select V_TYPE_NO 
                                  From IAS_RQ_VCHR_MST
                                 Where v_ser=P_DOC_SRL_REF
        EXCEPTION WHEN OTHERS THEN
                                Select JV_TYPE 
                                  From IAS_RQ_JRNL_MST
                                 Where J_ser=P_DOC_SRL_REF
        EXCEPTION WHEN OTHERS THEN
                                Select TYP_NO 
                                  From GLS_RQ_EXCH_CUR_MST
                                 Where DOC_SRL=P_DOC_SRL_REF
        EXCEPTION WHEN OTHERS THEN
EXCEPTION WHEN OTHERS THEN
        BEGIN
                  SELECT ALLW_UPDT_INSL_AMT
                    FROM IAS_GLRQ_TYPES
                   WHERE RQ_DOC_TYPE =P_DOC_TYP_REF
        EXCEPTION WHEN OTHERS THEN
 Exception
PROCEDURE Insrt_Jv_Mst( p_jv_type       In NUMBER,
  Insert Into Master_Journal_v (JV_TYPE,
Exception
   PROCEDURE Insrt_Jv_Dtl ( p_jv_type              In NUMBER,
   Insert Into Detail_Journal_V (  JV_TYPE, 
Exception
PROCEDURE Update_Kimb_Dtl ( P_v_ser     In Number,
  Select k_no,k_ser From voucher_detail
   where voucher_type=1
              Select k_no,k_ser,a_cy,bill_ser,abs(nvl(sum(ac_amt),0)) ac_amt,abs(nvl(sum(ac_amtf),0)) ac_amtf 
                From voucher_detail
               where voucher_type=1
               group by k_no,k_ser,a_cy,bill_ser;
               Begin
                         Update k_detail Set paid_amt=nvl(j.ac_amt,0)
                          where k_no=j.k_no
                         Update k_detail Set paid_amt=nvl(j.ac_amtf,0)
                          where k_no=j.k_no
              Exception 
 Exception 
PROCEDURE Get_Jv_Kimb_Doc ( P_jv_Type In Out NUMBER ,
Begin                       
    Begin
        Select Jv_Type
            From Jv_Types
        Where KIMB_TYPE=1;
    Exception
            Raise_application_error(-20450,'Error When select Jv_Types= '||SqlErrm);
    End;                       
    Begin
        Select Sequenced
            From jv_types 
        Where jv_type=P_jv_Type;
    Exception When Others Then
    End;
        Begin
        Select Nvl(max(j_doc_no),0)+1 
            From master_journal_v,jv_types
        where master_journal_v.jv_type=jv_types.jv_type 
        and SEQUENCED=(Select SEQUENCED From jv_types 
                         where jv_type=P_jv_Type) ;
        Exception when others Then
            Raise_application_error(-20452,'Error When Select Jv. Documnet No.= '||SqlErrm);
        End; 
        Begin                  
            Select nvl(Max(J_Doc_No),0) + 1
                From Master_Journal_v
            Where Jv_Type =P_jv_Type;
        Exception when others Then
            Raise_application_error(-20452,'Error When Select Jv. Documnet No.= '||SqlErrm);
        End; 
CREATE OR REPLACE PACKAGE Ias_Gl_Lmt_Pkg AS
  FUNCTION Check_ac_cc_pj_use_lmt (
    PROCEDURE   Check_Lmt(  P_A_Code    In  VarChar2    Default Null        ,
                            P_Aud_Lmt   In  Out Number                      ,--Insert Into Aud  0 - Not Insert 1 - Insert Into Aud --
                            P_Chk_From  In     Number                          ,-- 0 - Call From POST-CHANGE 1 - Call From POST-FORMS-COMMIT --
    PROCEDURE Get_Alert(P_A_Code_In     In  VarChar2     Default Null,
  PROCEDURE Get_max_aud_lmt;
  PROCEDURE Insrt_aud_lmt (
CREATE OR REPLACE PACKAGE Body IAS_GL_LMT_PKG AS
  FUNCTION  Check_Ac_Cc_Pj_Use_Lmt( P_Lmt_Type  In  Number                                  ,
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Acc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Cc_Tree
            Where Ias_Cc_Tree.Cc_Tree   =   Ias_Ac_Cc_Lmt.Cc_Code
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Cc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Pj_Tree
            Where Ias_Pj_Tree.Pj_Tree   =   IAS_AC_CC_LMT.Pj_No
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Pj_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_ACTV_Tree
            Where Ias_ACTV_Tree.ACTV_Tree   =   IAS_AC_CC_LMT.ACTV_No
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_ACTV_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End; 
    PROCEDURE   Check_Lmt(  P_A_Code    In  VarChar2    Default Null        ,
                            P_Aud_Lmt   In  Out Number                      ,-- Insert Into Aud  0 - Not Insert 1 - Insert Into Aud --
                            P_Chk_From  In 
Number                          ,-- 0 - Call From POST-CHANGE 1 - Call From POST-FORMS-COMMIT --
    Begin
Select 
From Ias_Para_Gl;
    Exception When Others Then
    End;
    Begin
Select  1   Into    Doc_Exst
From Ias_Post_Mst
            Where Doc_Ser= G_Doc_Ser;
    Exception When Others Then
    End;
     Begin
        Select  1   Into    Exst
          From Ias_Post_Dtl
         Where ((V_Gl_Lmt_Type In(1,3,5,7) And A_Code=P_A_Code ) Or V_Gl_Lmt_Type Not In(1,3,5,7))
    Exception When Others Then
    End;
    Begin
Select 
From PRIVILEGE_FIXED 
            Where U_Id=P_User_No;
    Exception When Others Then
    End;
                    Select  Ias_Acc_Tree.Ac_Tree    ,   Decode(Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree) A_Code                            ,
                        From  Ias_Post_Dtl,Ias_Ac_Cc_Lmt ,Ias_Acc_Tree
                            Where (Ias_Acc_Tree.A_Code = Ias_Post_Dtl.A_Code Or Exst = 0)
                        Group By Ias_Acc_Tree.Ac_Tree,Decode(Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree),Ias_Ac_Cc_Lmt.A_Cy,
                        Order By Decode(Mn_Sub,1,Ias_Acc_Tree.A
            Begin
                For I In AcLmt Loop --(Begin Ac Loop ) -
        Exception When Others Then
        End;
                    Select  Ias_Cc_Tree.Cc_Tree     ,   Decode(Ias_Cc_Tree.Mn_Sub,1,Ias_Cc_Tree.Cc_Code,Ias_Cc_Tree.Cc_Tree) Cc_Code    ,
                        From Ias_Post_Dtl,Ias_Ac_Cc_Lmt ,Ias_Cc_Tree
                            Where (Ias_Cc_Tree.Cc_Code   =    Ias_Post_Dtl.Cc_Code  Or Exst = 0)
                        Group By Ias_Ac_Cc_Lmt.A_Cy, Cc_A_Name ,Cc_E_Name,
                        Order By Decode(Ias_Cc_Tree.Mn_Sub,1,Ias_Cc_Tree.Cc_Code,Ias_Cc_Tree.Cc_Tree),Ias_cc_Tree.cc_Tree;
            Begin
                For I In CcLmt Loop --(Begin Cc Loop ) -
            Exception When Others Then
            End;
                    Select  Ias_Acc_Tree.Ac_Tree    ,   Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree) A_Code                   ,
                        From  Ias_Post_Dtl,Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Cc_Tree
                            Where (Ias_Acc_Tree.A_Code   =   Ias_Post_Dtl.A_Code  Or Exst = 0)
                        Group By Ias_Acc_Tree.Ac_Tree,Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree),Ias_Ac_Cc_Lmt.A_Cy,
                        Order By    Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree),Ias_Acc_Tree.Ac_Tree     ,
            Begin
                For I In AcCcLmt Loop --(Begin Ac Cc Loop ) -
            Exception When Others Then
            End;
                    Select  Ias_Pj_Tree.Pj_Tree     ,   Decode(Ias_Pj_Tree.Mn_Sub,1,Ias_Pj_Tree.Pj_No,Ias_Pj_Tree.Pj_Tree) Pj_No    ,
                        From Ias_Post_Dtl,Ias_Ac_Cc_Lmt ,Ias_Pj_Tree
                            Where (Ias_Pj_Tree.Pj_No =    Ias_Post_Dtl.Pj_No  Or Exst = 0)
                        Group By Ias_Ac_Cc_Lmt.A_Cy, Pj_A_Name ,Pj_E_Name,
                        Order By Decode(Ias_Pj_Tree.Mn_Sub,1,Ias_Pj_Tree.Pj_No,Ias_Pj_Tree.Pj_Tree),Ias_Pj_Tree.Pj_Tree;
            Begin
                For I In PjLmt Loop --(Begin Pj Loop ) -
            Exception When Others Then
            End;
                    Select  Ias_Acc_Tree.Ac_Tree    ,   Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree) A_Code                   ,
                        From  Ias_Post_Dtl,Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Pj_Tree
                            Where (Ias_Acc_Tree.A_Code   =   Ias_Post_Dtl.A_Code  Or Exst = 0)
                        Group By Ias_Acc_Tree.Ac_Tree,Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree),Ias_Ac_Cc_Lmt.A_Cy,
                        Order By    Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree),Ias_Acc_Tree.Ac_Tree     ,
            Begin
                For I In AcPjLmt Loop --(Begin Ac Pj Loop ) -
            Exception When Others Then
            End;
                    Select  Ias_ACTV_Tree.ACTV_TREE  ,   Decode(Ias_ACTV_Tree.Mn_Sub,1,Ias_ACTV_Tree.ACTV_NO,Ias_ACTV_Tree.ACTV_Tree) ACTV_NO    ,
                        From Ias_Post_Dtl,Ias_Ac_Cc_Lmt ,Ias_ACTV_Tree
                            Where (Ias_ACTV_Tree.ACTV_NO =    Ias_Post_Dtl.ACTV_NO  Or Exst = 0)
                        Group By Ias_Ac_Cc_Lmt.A_Cy, ACTV_A_Name ,ACTV_E_Name,
                        Order By Decode(Ias_ACTV_Tree.Mn_Sub,1,Ias_ACTV_Tree.ACTV_NO,Ias_ACTV_Tree.ACTV_Tree),Ias_ACTV_Tree.ACTV_Tree;
            Begin
                For I In PjLmt Loop --(Begin Pj Loop ) -
            Exception When Others Then
            End;
                    Select  Ias_Acc_Tree.Ac_Tree    ,   Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree) A_Code                   ,
                        From  Ias_Post_Dtl,Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_ACTV_Tree
                            Where (Ias_Acc_Tree.A_Code   =   Ias_Post_Dtl.A_Code  Or Exst = 0)
                        Group By Ias_Acc_Tree.Ac_Tree,Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree),Ias_Ac_Cc_Lmt.A_Cy,
                        Order By    Decode(Ias_Acc_Tree.Mn_Sub,1,Ias_Acc_Tree.A_Code,Ias_Acc_Tree.Ac_Tree),Ias_Acc_Tree.Ac_Tree     ,
            Begin
                For I In AcPjLmt Loop --(Begin Ac Pj Loop ) -
            Exception When Others Then
            End;
    PROCEDURE Get_Alert(
        InsrtAud:=1; --Insert Into Audit 
        Begin
        Exception When Others Then 
        End;
Procedure Get_Max_Aud_Lmt  Is
    Begin
        Select Max(Nvl(Aud_No,0)) + 1 
          From IAS_AUD_LMT_EXD;
    Exception 
    End;
PROCEDURE Insrt_Aud_Lmt(P_AUD_TYPE        In  NUMBER                      ,
    Begin
        INSERT INTO IAS_AUD_LMT_EXD         (
    End;
Exception When Others Then 
         ( Select Dv.I_NO           I_NO
          From GLS_ADVNC_EXPNS_RVNU_DTL Dv
         Where  Dv.doc_srL=M_cv.doc_ser)
CREATE OR REPLACE PACKAGE Ias_Gl_CshFlw_Pkg AS
    FUNCTION Chk_CshFlw_Fld (  P_Doc_Ser      IN NUMBER   , 
     PROCEDURE Update_Rcrd_Formula (P_Doc_Ser IN NUMBER  ) ;                          
     FUNCTION Get_Rcrd_Dtl_Val ( P_Doc_Ser      IN NUMBER   ,
     FUNCTION Get_Rcrd_Dtl_Val_Formula ( P_Doc_Ser      IN NUMBER   ,
CREATE OR REPLACE PACKAGE BODY Ias_Gl_CshFlw_Pkg AS
   FUNCTION Chk_CshFlw_Fld (    P_Doc_Ser      IN NUMBER   , 
    BEGIN
      For I In (Select Rcrd_No,Fld_Nm From Ias_Gl_Cshflw_fld Where Doc_Ser=P_Doc_Ser And Rcrd_No_Dtl=P_Rcrd_No_Dtl  And Rcrd_No_Ac=P_Rcrd_No_Ac) Loop
             V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Ias_Gl_Cshflw_fld_Dtl 
                                            Where Doc_Ser='||P_Doc_Ser||'
    PROCEDURE Update_Rcrd_Formula (P_Doc_Ser IN NUMBER  ) IS       
      Cursor C_CshFlw Is Select Rcrd_No,Rcrd_Formula_Desc,Rcrd_Formula From Ias_Gl_CshFlw_Dtl Where Doc_Ser=P_Doc_Ser And Rcrd_Conn_Type=2 Order By Rcrd_No;
    Begin
       Update Ias_Gl_CshFlw_Dtl Set Rcrd_Formula=Null Where Doc_Ser=P_Doc_Ser;
       V_Max_Rcrd_No := Ias_Gen_Pkg.Get_Cnt('Select Max(Rcrd_No) From Ias_Gl_CshFlw_Dtl Where Doc_Ser='||P_Doc_Ser);
               Update Ias_Gl_CshFlw_Dtl Set Rcrd_Formula=V_Rcrd_Formula Where Doc_Ser=P_Doc_Ser And Rcrd_No=I.Rcrd_No;                
       For I In (Select Rcrd_No,Rcrd_Formula From Ias_Gl_CshFlw_Dtl Where Doc_Ser=P_Doc_Ser And Rcrd_Conn_Type=2) Loop
         For J In ( Select Rcrd_No,Rcrd_Formula From Ias_Gl_CshFlw_Dtl Where Doc_Ser=P_Doc_Ser And Rcrd_Conn_Type=2 And Rcrd_No<>I.Rcrd_No) Loop
       Update Ias_Gl_CshFlw_Dtl Set Rcrd_Formula=Replace(Rcrd_Formula,'Get_Rcrd_Val('||J.Rcrd_No||')','('||J.Rcrd_Formula||')') Where Doc_Ser=P_Doc_Ser And Rcrd_No=I.Rcrd_No;                
    Exception When Others Then Null;
    End;    
   FUNCTION Get_Rcrd_Dtl_Val ( P_Doc_Ser      IN NUMBER   ,
    BEGIN
        -------Start where ------------------------------------------------------------------------------
        ---------End where ----------------------------------------------------------------------------
           V_Amt := Ias_Gen_Pkg.Get_Cnt('select sum(amt) from (Select Sum( Case When Ias_Gl_CshFlw_Pkg.Chk_CshFlw_Fld ( Ias_V_Gl_Cshflw_Ac.Doc_Ser , 
                                        From Ias_V_Post_Dtl_OPN_YR,Ias_Acc_Tree,Ias_V_Gl_Cshflw_Ac
                                       Where Ias_V_Post_Dtl_OPN_YR.A_Code          = Ias_Acc_Tree.A_Code 
                                        group by Ias_V_Post_Dtl_OPN_YR.A_Code,Ias_V_Post_Dtl_OPN_YR.ac_code_dtl,Ias_V_Post_Dtl_OPN_YR.a_CY
           V_Amt := Ias_Gen_Pkg.Get_Cnt('Select Sum( Case When Ias_Gl_CshFlw_Pkg.Chk_CshFlw_Fld ( Ias_V_Gl_Cshflw_Ac.Doc_Ser , 
                                        From Ias_V_Post_Dtl_OPN_YR,Ias_Acc_Tree,Ias_V_Gl_Cshflw_Ac
                                       Where Ias_V_Post_Dtl_OPN_YR.A_Code          = Ias_Acc_Tree.A_Code 
    Exception When Others Then RETURN(0);
    END;
    FUNCTION Get_Rcrd_Dtl_Val_Formula ( P_Doc_Ser      IN NUMBER    ,
    BEGIN
       SELECT Replace(P_Rcrd_Formula,'Get_Rcrd_Val(','(Select Nvl(sum(Blnc_amt),0) From Ias_Gl_CshFlw_Tmp Where Doc_Ser='||P_Doc_Ser||' And Prd='''||P_Prd_Val||''' And Nvl(Fld_Grp,''0'')='''||Nvl(P_Fld_Grp,'0')||''' And Rcrd_No=') 
         From Dual; 
       V_Amt := Ias_Gen_Pkg.Get_Cnt('Select '||V_Foumula||' From Dual'); 
    Exception When Others Then RETURN(0);
    END;
                   Begin
                      Select Frc_D
iff_Cc Into V_Cc_Code From Interface_Acc WHere Brn_No=Tax_Cv.Brn_No And RowNum<=1;
                   Exception When Others Then 
                   End;   
SELECT COLUMN_NAME   FROM USER_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME NOT IN ( UPPER(''ROW_ID''),UPPER(''UMARKER'')  )ORDER BY COLUMN_ID"
          --## Get Account From bank  
CREATE OR REPLACE PACKAGE IAS_Doc_View_Pkg AS
PROCEDURE Doc_View_Jv (
    PROCEDURE Doc_View_ICode (
CREATE OR REPLACE PACKAGE BODY IAS_Doc_View_Pkg AS
PROCEDURE Doc_View_Jv (
 From Detail_Journal_V D ,account
Where D.A_Code=Account.A_Code
Order By D.Rcrd_No'
From Voucher_Detail D,account
Where D.A_Code=Account.A_Code
Order By Rcrd_No'
From Voucher_Detail D,account
Where D.A_Code=Account.A_Code
Order By Rcrd_No'
     ' Select  D.AC_Code A_CODE,
From IAS_EXCH_CUR_DTL D,account
Where D.AC_Code=Account.A_Code
Order By Rcrd_No'
                           From Ias_Pi_Bill_Jrnl,account
                          Where Ias_Pi_Bill_Jrnl.A_Code=Account.A_Code
                        Order By Ias_Pi_Bill_Jrnl.Rcrd_No'
                     From Ias_Post_Dtl,account
                    Where Ias_Post_Dtl.A_Code=Account.A_Code
                  Order By Ias_Post_Dtl.Rcrd_No'
From Ias_Exch_Cur_Dtl,account
Where Ias_Exch_Cur_Dtl.Ac_Code=Account.A_Code
Order By Rcrd_No'
                    'Select Ias_Post_Dtl.A_Code,
                      From Ias_Post_Dtl,account
                     Where Ias_Post_Dtl.A_Code=Account.A_Code
                   Order By Ias_Post_Dtl.Rcrd_No'
 Exception
       Raise_application_error(-20445,'Error When Query From Table '||SqlErrm) ;
PROCEDURE Doc_View_ICode ( List_Qry  
 From Ias_Bill_Dtl,Ias_Itm_Mst
Where Ias_Bill_Dtl.I_Code=Ias_Itm_Mst.I_Code
  Order By Rcrd_No'
  From Ias_Rt_Bill_Dtl,Ias_Itm_Mst
 Where Ias_Rt_Bill_Dtl.I_Code=Ias_Itm_Mst.I_Code
   Order By Rcrd_No'
  From Ias_pi_bill_Dtl,Ias_Itm_Mst
 Where Ias_pi_bill_Dtl.I_Code=Ias_Itm_Mst.I_Code
    Order By Rcrd_No'
  From Ias_Pr_Bill_Dtl,Ias_Itm_Mst
 Where Ias_Pr_Bill_Dtl.I_Code=Ias_Itm_Mst.I_Code
   Order By Rcrd_No'
  From Gr_Detail,Ias_Itm_Mst
 Where Gr_Detail.I_Code=Ias_Itm_Mst.I_Code
   Order By Rcrd_No'
 From  Ias_Outgoing_Dtl,Ias_Itm_Mst
 Where Ias_Outgoing_Dtl.I_Code=Ias_Itm_Mst.I_Code
   Order By Rcrd_No'
  From Stk_Adjustment_Det,Ias_Itm_Mst
 Where Stk_Adjustment_Det.I_Code=Ias_Itm_Mst.I_Code
  Order By Rcrd_No'
  From Ias_Whtrns_Dtl,Ias_Itm_Mst
 Where Ias_Whtrns_Dtl.I_Code=Ias_Itm_Mst.I_Code
  Order By Rcrd_No'
  From Ias_Whtrns_Dtl,Ias_Itm_Mst
 Where Ias_Whtrns_Dtl.I_Code=Ias_Itm_Mst.I_Code
  Order By Rcrd_No'
  From Ias_Pi_Bill_Dtl_Add_Disc,Ias_Itm_Mst
 Where Ias_Pi_Bill_Dtl_Add_Disc.I_Code=Ias_Itm_Mst.I_Code
   Order By Rcrd_No'
  From Assemble_Kit_Items_Det,Ias_Itm_Mst
 Where Assemble_Kit_Items_Det.Kit_Item_No=Ias_Itm_Mst.I_Code
  From Disassemble_Kit_Items_Det,Ias_Itm_Mst
  From Detail_Gate_Gr,Ias_Itm_Mst
 Where Detail_Gate_Gr.I_Code=Ias_Itm_Mst.I_Code
  Order By Rcrd_No'
  From Detail_Out_Bills,Ias_Itm_Mst
 Where Detail_Out_Bills.I_Code=Ias_Itm_Mst.I_Code
  Order By Rcrd_No'
  From Ias_Ret_Bill_Dtl,Ias_Itm_Mst
 Where Ias_Ret_Bill_Dtl.I_Code=Ias_Itm_Mst.I_Code
   Order By Rcrd_No'
  From Ias_Bill_Dtl_Add_Disc,Ias_Itm_Mst
 Where Ias_Bill_Dtl_Add_Disc.I_Code=Ias_Itm_Mst.I_Code
   Order By Rcrd_No'
Exception 
           Raise_application_error(-20446,'Error When Query From Table '||SqlErrm) ;
CREATE OR REPLACE PACKAGE IAS_CshBnk_Pkg as
 FUNCTION Get_CB_Name (P_Cb_Type In Number,P_Cb_No  In Number,P_Lng_no In Number)   RETURN VARCHAR2;
 FUNCTION Get_CB_No_By_Nm (P_Cb_Type In Number,P_cb_nm In ACCOUNT.A_NAME%TYPE) RETURN VARCHAR2;
 FUNCTION Get_A_code  (P_Cb_Type In Number,P_Cb_No  In Number) RETURN VARCHAR2;
 FUNCTION Check_Acy   (P_Cb_Type In Number,P_Cb_No  In Number,P_a_cy   In VARCHAR2) RETURN Number;
 FUNCTION Get_Rcpt_Srl_Typ (P_AC_DTL_TYP   In Number
 FUNCTION Get_CB_Ser  (P_Cb_Type In Number,P_Cb_No  In Number) RETURN Number;
 FUNCTION Get_Csh_Type(P_Csh_No  In CASH_IN_HAND.CASH_NO%TYPE) RETURN Number;
 FUNCTION Get_CB_Bal  (P_Cb_Type In Number,P_Cb_No  In Number,P_a_cy   In VARCHAR2) RETURN Number;
 FUNCTION Get_CB_No   (P_Cb_Type In Number , P_a_code ACCOUNT.A_CODE%TYPE, P_Acy In EX_RATE.CUR_CODE%TYPE DEFAULT NULL) RETURN NUMBER;
 FUNCTION Check_Mediator_Bnk (P_Cb_No  In Number) RETURN Number;
 FUNCTION Chk_Ac_Csh_Bnk (P_a_code ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_Cnt_Acy (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_No   In Number) RETURN NUMBER;
 FUNCTION Get_One_Acy_Cb (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_no In Number) RETURN VARCHAR2;
 FUNCTION  Get_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number) RETURN NUMBER;
 FUNCTION  Chk_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number,P_Brn_no In Number) RETURN NUMBER;
 PROCEDURE Get_Cshbnk_Lmt ( P_amt_Type       In number    ,
PROCEDURE Chk_CshBnk_No ( P_Csh_No     IN CUSTOMER.C_CODE%TYPE,
CREATE OR REPLACE PACKAGE Body IAS_CshBnk_Pkg as
FUNCTION Get_CB_Name (P_Cb_Type In Number,P_Cb_No In Number,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
 Select Decode(P_Lng_no,1,CASH_NAME,nvl(CASH_E_NAME,CASH_NAME)) 
   From Cash_In_hand
  where Cash_no=P_Cb_No ;
       Select Decode(P_Lng_no,1,BANK_NAME,nvl(BANK_E_NAME,BANK_NAME)) 
   From Cash_At_Bank
  where bank_no=P_Cb_No ;
 Exception 
FUNCTION Get_CB_No_By_Nm (P_Cb_Type In Number,P_cb_nm In ACCOUNT.A_NAME%TYPE) RETURN VARCHAR2 Is
 Begin
     select Cash_no 
    From Cash_In_hand
  where (cash_name = P_cb_nm or cash_e_name =P_cb_nm )
     select Bank_no 
    From Cash_At_Bank
  where (bank_name = P_cb_nm or bank_e_name =P_cb_nm )
 Exception 
FUNCTION Check_Acy (P_Cb_Type In Number,P_Cb_No In Number,P_a_cy   In VARCHAR2) RETURN Number Is
 Begin
 Select 1 
   From Ias_Cash_In_Hand_Dtl
  where Cash_no=P_Cb_No
 Select 1 
   From Ias_Cash_At_Bank_Dtl
  where Bank_no=P_Cb_No
 Exception 
FUNCTION Get_Rcpt_Srl_Typ (P_AC_DTL_TYP   In Number
  Select nvl(Rcpt_Srl_Typ,1)
    From Cash_in_Hand
 where Cash_no=P_AC_CODE_DTL;
  Select nvl(Rcpt_Srl_Typ,1)
    From Cash_at_bank
 where Bank_no=P_AC_CODE_DTL;
 Exception 
FUNCTION Get_CB_Ser (P_Cb_Type In Number,P_Cb_No  In Number) RETURN Number Is
  Select nvl(cash_sr,0)
    From Cash_in_Hand
 where Cash_no=P_Cb_No;
  Select nvl(Bank_sr,0)
    From Cash_at_bank
 where Bank_no=P_Cb_No;
 Exception 
FUNCTION Get_A_code  (P_Cb_Type In Number,P_Cb_No  In Number) RETURN VARCHAR2 Is
  Select A_code 
    From Cash_in_Hand
 where Cash_no=P_Cb_No;
  Select A_code 
    From Cash_at_bank
 where Bank_no=P_Cb_No;
 Exception 
FUNCTION Get_Csh_Type(P_Csh_No In CASH_IN_HAND.CASH_NO%TYPE) RETURN Number Is
  Select Cash_Type 
    From Cash_in_Hand
 where Cash_no=P_Csh_No;
 Exception 
FUNCTION Get_CB_Bal(P_Cb_Type In Number,P_Cb_No  In Number,P_a_cy   In VARCHAR2) RETURN Number Is
       Select nvl(Decode(Ias_Gen_Pkg.Get_Lo
    From Cash_In_Hand M, IAS_V_AC_CODE_DTL_BLNC d
 where M.a_code  = D.a_code
    Select nvl(Decode(Ias_Gen_Pkg.Get_Local_Cur,P_a_cy,nvl(d.amt,0),nvl(d.AMT_F,0)),0)   Into v_amt
    From Cash_At_Bank M, IAS_V_AC_CODE_DTL_BLNC d
 where M.a_code  = D.a_code
 Exception 
/*FUNCTION Get_CB_Bal(P_Cb_Type In Number,P_Cb_No  In Number,P_a_cy   In VARCHAR2) RETURN Number Is
  Select nvl(sum(Decode(Ias_Gen_Pkg.Get_Local_Cur,P_a_cy,nvl(amt,0),nvl(amt_f,0))),0)
    From Cash_In_Hand M, Ias_Post_Dtl D
 where M.a_code  = D.a_code
  Select nvl(sum(Decode(Ias_Gen_Pkg.Get_Local_Cur,P_a_cy,nvl(amt,0),nvl(amt_f,0))),0)
    From Cash_At_Bank M, Ias_Post_Dtl D
 where M.a_code  = D.a_code
 Exception 
FUNCTION Get_CB_No (P_Cb_Type In Number , P_a_code ACCOUNT.A_CODE%TYPE , P_Acy In EX_RATE.CUR_CODE%TYPE DEFAULT NULL) RETURN NUMBER Is
  Begin
      Select Cash_No
        From Cash_in_Hand
         Where A_code = P_a_code;
      Select Bank_No
        From Cash_at_Bank
         Where A_code = P_a_code;
 Exception 
   Begin
      Select Cash_no
        From Ias_Cash_in_Hand_Dtl
       Where A_code = P_a_code
      Select Bank_no
        From Ias_Cash_at_Bank_Dtl
       Where A_code = P_a_code
   Exception 
   End;
FUNCTION Check_Mediator_Bnk (P_Cb_No  In Number) RETURN Number Is
  Select nvl(MEDIATOR,0)
    From Cash_At_Bank
 where Bank_no = P_Cb_No
 Exception 
FUNCTION Chk_Ac_Csh_Bnk (P_a_code ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
 Begin
  Select 1 Into Cnt From Cash_in_Hand
   Where a_code =P_a_code
   Exception
  End;
   Begin
     Select 1 Into Cnt From Cash_At_Bank
      Where a_code =P_a_code
 Exception
   End;
 FUNCTION Ge
        Begin
Select count(*) 
From IAS_CASH_IN_HAND_DTL
                Where Cash_No =P_Cb_No 
                And   A_Cy   In (Select A_Cy 
                                  From   Priv_Cash 
                                  Where  Cash_Type=P_Cb_Type
        Exception When Others Then
        End;   
        Begin
Select count(*) 
From IAS_CASH_AT_BANK_DTL
                Where Bank_No =P_Cb_No 
                And   A_Cy   In (Select A_Cy 
                                  From   Priv_Cash 
                                  Where  Cash_Type=P_Cb_Type
        Exception When Others Then
        End;   
 Exception 
 FUNCTION Get_One_Acy_Cb (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_no In Number) RETURN VARCHAR2 IS
    Begin
    Select A_Cy 
          From Priv_Cash 
         Where Cash_Type=P_Cb_Type
    Exception 
    End;
 Exception 
FUNCTION  Get_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number) RETURN NUMBER Is
   Select conn_brn_no
   From cash_in_hand
  where cash_no = P_Cb_No 
   Select conn_brn_no
   From cash_at_bank
  where bank_no = P_Cb_No 
 Exception 
FUNCTION  Chk_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number,P_Brn_no In Number) RETURN NUMBER Is
   Select 1
   From cash_in_hand
  where cash_no = P_Cb_No 
   Select 1
   From cash_at_bank
  where bank_no = P_Cb_No 
 Exception 
PROCEDURE Get_Cshbnk_Lmt (  P_amt_Type       In  number,
Begin 
    Begin
      Select Nvl(ACC_LMT_PRV,1)
        From Privilege_Fixed 
       Where u_id=P_User_No;
    Exception When Others Then
    End; 
  Begin 
   Select Round(Min_lmt_AMT,P_Frc_no),Round(Max_lmt_AMT,P_Frc_no),
   From Ias_cash_in_hand_Dtl
  where cash_no = P_Cb_No 
  Exception when Others Then
      End;
  Begin 
   Select Round(Min_lmt_AMT,P_Frc_no),Round(Max_lmt_AMT,P_Frc_no),
   From Ias_cash_AT_BANK_Dtl
  where BANK_no = P_Cb_No 
  Exception when Others Then
      End;
 Exception 
PROCEDURE Chk_CshBnk_No ( P_Csh_No     IN CUSTOMER.C_CODE%TYPE,
  begin
      select 1 into v_cnt  from  cash_in_hand 
       where a_code=P_Ac_Code 
  Exception when others then 
 begin
   select 1 into v_cnt  from  cash_in_hand 
       where a_code=P_Ac_Code 
  Exception when others then 
          Select Decode(P_Lng_no,1,CASH_NAME,nvl(CASH_E_NAME,CASH_NAME)) , nvl(M.INACTIVE,0), 1 ADD_FLAG,1 VIEW_FLAG , 1 PYMNT ,1 RCVD
            From CASH_IN_HAND M
           Where TO_CHAR(M.Cash_No)   = TO_CHAR(P_Csh_No)
          Select Decode(P_Lng_no,1,CASH_NAME,nvl(CASH_E_NAME,CASH_NAME)) , nvl(M.INACTIVE,0), Nvl(D.ADD_FLAG,0),Nvl(D.VIEW_FLAG,0),Nvl(D.PYMNT,0),Nvl(D.RCVD,0)
            From CASH_IN_HAND M,PRIV_CASH D
           Where M.Cash_No   = D.Cash_No
            Select Decode(P_Lng_no,1,CASH_NAME,nvl(CASH_E_NAME,CASH_NAME)) , nvl(M.INACTIVE,0), Nvl(D.ADD_FLAG,0),Nvl(D.VIEW_FLAG,0),Nvl(D.PYMNT,0),Nvl(D.RCVD,0)
                From CASH_IN_HAND M,PRIV_CASH D
               Where M.Cash_No   = D.Cash_No
      Select NVL(MEDIATOR,0)
            From CASH_IN_HAND M
           Where TO_CHAR(M.Cash_No)   = TO_CHAR(P_Csh_No)
           Select Decode(P_Lng_no,1,BANK_NAME,nvl(BANK_E_NAME,BANK_NAME))  , nvl(M.INACTIVE,0), 1 ADD_FLAG,1 VIEW_FLAG
            From CASH_AT_BANK M
           Where TO_CHAR(M.Bank_No)   = TO_CHAR(P_Csh_NO)
          Select Decode(P_Lng_no,1,BANK_NAME,nvl(BANK_E_NAME,BANK_NAME)), nvl(M.INACTIVE,0), Nvl(D.ADD_FLAG,0),Nvl(D.VIEW_FLAG,0)
                From CASH_AT_BANK M,PRIV_CASH D
               Where M.Bank_No   = D.Cash_No
            Select Decode(P_Lng_no,1,BANK_NAME,nvl(BANK_E_NAME,BANK_NAME)), nvl(M.INACTIVE,0), Nvl(D.ADD_FLAG,0),Nvl(D.VIEW_FLAG,0)
                From CASH_AT_BANK M,PRIV_CASH D
               Where M.Bank_No   = D.Cash_No
 Exception 
CREATE OR REPLACE PACKAGE IAS_Cc_Code_Pkg as
 FUNCTION Get_Cc_Name  (P_cc_code In COST_CENTERS.CC_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_CC_No    (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER ;
 FUNCTION Get_CC_SER   (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER ;
 FUNCTION Get_C_S_M    (P_C_S_M In Cost_centers.C_S_M%TYPE) RETURN Number;
 FUNCTION Check_Use_Pj (P_Cc_Code In COST_CENTERS.CC_CODE%TYPE) RETURN NUMBER ;
 FUNCTION Check_Cc_Pj (P_Cc_Code In COST_CENTERS.CC_CODE%TYPE,P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN NUMBER ;
 FUNCTION Get_One_CC_Pj (P_Cc_Code In COST_CENTERS.CC_CODE%TYPE,P_Usr_no In NUMBER) RETURN NUMBER ;
PROCEDURE Chk_cc_code ( P_cc_Code    In COST_CENTERS.CC_CODE%TYPE,
CREATE OR REPLACE PACKAGE Body IAS_Cc_Code_Pkg as
FUNCTION Get_Cc_Name (P_cc_code In COST_CENTERS.CC_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
 select Decode(P_Lng_no,1,cc_a_name,nvl(cc_e_name,cc_a_name)) 
   From cost_centers
  where cc_code=P_cc_code
Exception 
FUNCTION Get_CC_No (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER Is
  Select cc_no 
    From cost_centers
 where cc_code=P_cc_code
 Exception 
FUNCTION Get_CC_SER (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER Is
  Select c_sr 
    From cost_centers
 where cc_code=P_cc_code
 Exception 
FUNCTION Get_C_S_M (P_C_S_M In cost_centers.c_S_m%TYPE) RETURN Number Is
 Begin
 Select Decode(Count(Distinct C_LEVEL),1,0,Min(C_Level))  
   From cost_centers
  where C_s_m=P_c_s_m;
 Exception 
FUNCTION  Check_Use_Pj
  Select nvl(Use_Pj,1)
    From cost_centers
   Where Cc_Code = P_Cc_Code
 Exception When Others T
FUNCTION Check_Cc_Pj (P_Cc_Code In COST_CENTERS.CC_CODE%TYPE,P_Pj_No In IAS_PROJECTS.PJ_NO%TYPE) RETURN 
Begin 
     Begin 
       Select 1 
        From IAS_Cc_Pj
       Where Cc_Code = P_Cc_Code
     Exception 
      End;
  Select 1 
    From IAS_Cc_Pj
   Where Cc_Code = P_Cc_Code
 Exception 
FUNCTION Get_One_CC_Pj (P_cc_code In COST_CENTERS.CC_CODE%TYPE,P_Usr_no In NUMBER) RETURN NUMBER Is
 Begin
Select Pj_No Into v_pj From Ias_Cc_Pj where Cc_code=P_Cc_Code;
 Exception 
PROCEDURE Chk_cc_code ( P_cc_Code    In COST_CENTERS.CC_CODE%TYPE,
      Select Decode(P_Lng_No,1,M.CC_A_NAME,nvl(M.CC_A_NAME,M.CC_E_NAME)), nvl(M.INACTIVE,0), 1 ADD_FLAG,1 VIEW_FLAG
        From COST_CENTERS M
       Where M.CC_code   = P_CC_Code
         and EXISTS ( SELECT 1 FROM COST_CENTER_TYPES WHERE CC_TYPE = M.C_S_M AND AFFECTED_BY_TRANS = 1 AND ROWNUM<=1)
      Select Decode(P_Lng_No,1,M.CC_A_NAME,nvl(M.CC_A_NAME,M.CC_E_NAME)), nvl(M.INACTIVE,0), nvl(D.ADD_FLAG,0),nvl(D.VIEW_FLAG,0)
        From COST_CENTERS M,PRIVILEGE_CC D
       Where M.CC_CODE = D.CC_CODE
         and EXISTS ( SELECT 1 FROM COST_CENTER_TYPES WHERE CC_TYPE = M.C_S_M AND AFFECTED_BY_TRANS = 1 AND ROWNUM<=1)
 Exception 
            Exception When Others Then
            End;
                    Select  Ias_Pj_Tree.Pj_Tree     ,   Decode(Ias_Pj_Tree.Mn_Sub,1,Ias_Pj_Tree.Pj_No,Ias_Pj_Tree.Pj_Tree) Pj_No    ,
                        From Ias_Post_Dtl,Ias_Ac_Cc_Lmt ,Ias_Pj_Tree
                            Where (Ias_Pj_Tree.Pj_No =    Ias_Post_Dtl.Pj_No  Or Exst = 0)
                        Group By Ias_Ac_Cc_Lmt.A_Cy, Pj_A_Name ,Pj_E_Name,
                        Order By Decode(Ias_Pj_Tree.Mn_Sub,1,Ias_Pj_Tree.Pj_No,Ias_Pj_Tree.Pj_Tree),Ias_Pj_Tree.Pj_Tree;
            Begin
                For I In PjLmt Loop --(Begin Pj Loop ) -
CREATE OR REPLACE PACKAGE IAS_Aud_List_Pkg AS
   PROCEDURE Aud_List_View ( List_Qry         
Procedure Update_Aud  (     AudRef            IN Number,
CREATE OR REPLACE PACKAGE BODY IAS_Aud_List_Pkg AS
 PROCEDURE Aud_List_View (
   'Select J_Ser,
    From Master_Journal_V
   Where Nvl(Jv_Type,0) = Decode(:P_Jv_Type,0,Nvl(Jv_Type,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
     And Exists ( Select 1 From Form_Detail ,Privilege 
                                      Where Form_Detail.Form_No = Privilege.Form_No
    'Select  V_Ser J_Ser,
     From Vouchers
    Where Voucher_Type = 1
                    And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
        And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select  V_Ser 
       From Voucher_Detail
      Where Voucher_Type = 1
              And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
        And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
              And Exists (Select 1 From Vouchers
                        Where  V_ser = Voucher_Detail.V_ser
    'Select  V_Ser J_Ser,
     From Vouchers
    Where Voucher_Type = 2
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
      And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select  V_Ser J_Ser,
     From Voucher_Detail
    Where Voucher_Type = 2
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
    And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
            And Exists (Select 1 From Vouchers
                        Where  V_ser = Voucher_Detail.V_ser
    'Select  Bill_Ser J_Ser,
 From Ias_Bill_Mst
Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select     Rt_Bill_Ser J_Ser,
    From Ias_Rt_Bill_Mst
   Where Nvl(Rt_Bill_Doc_Type,0) = Decode(:P_Jv_Type,0,Nvl(Rt_Bill_Doc_Type,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
            And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
         'Select Bill_Ser J_Ser,
                 From Ias_pi_bill_Mst,Gr_Note
                Where Ias_pi_bill_Mst.Bill_Ser=Gr_Note.Doc_Ser
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                        Where U_Id = :P_User_No                         
       'Select J_Ser,                   
            From 
           (Select Ias_pi_bill_Mst.Bill_Ser               J_Ser,                         
                 From Ias_pi_bill_Mst,Gr_Note
                        Where Ias_pi_bill_Mst.Bill_Ser=Gr_Note.Doc_Ser
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                        Where U_Id = :P_User_No                         
            Select Ias_pi_bill_Mst.Bill_Ser               J_Ser,         
                 From Ias_pi_bill_Mst
                        Where Nvl(Ias_pi_bill_Mst.HUNG,0)=0
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                        Where U_Id = :P_User_No                         
    'Select  Rt_Bill_Ser         J_Ser,
 From Ias_Pr_Bill_Mst
    Where Nvl(Rt_Bill_Doc_Type,0) = Decode(:P_Jv_Type,0,Nvl(Rt_Bill_Doc_Type,0),:P_Jv_Type)
                    And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
            And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select  G_Ser J_Ser,
     From Gr_Note
    Where Pi_Type = 5
          And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
          And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select  out_Ser          J_Ser,
     From Ias_Outgoing_Mst
    Where Nvl(out_Type,0) = Decode(:P_Jv_Type,0,Nvl(out_Type,0),:P_Jv_Type)
          And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
          And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select     Doc_Ser J_Ser,
     From Stk_Adjustment
    Where Nvl(Adjust_Type,0) = Decode(:P_Jv_Type,0,Nvl(Adjust_Type,0),:P_Jv_Type)
          And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
           And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
     'Select Tr_Ser      J_Ser,
 From Ias_WhTrns_Mst
Where TR_INOUT_TYPE = 1
                  And Exists (Select 1 From S_Brn_Usr_Priv
         And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
     'Select Tr_Ser      J_Ser,
 From Ias_WhTrns_Mst
Where TR_INOUT_TYPE = 2
                  And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
          And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
       From Master_Out_Bills
      Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
          And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select  Ret_Ser           J_Ser,
     From Ias_Ret_Bill_Mst
    Where Nvl(Rt_Bill_Doc_Type,0) = Decode(:P_Jv_Type,0,Nvl(Rt_Bill_Doc_Type,0),:P_Jv_Type)
          And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
          And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select     
     From IAS_BILL_MST_ADD_DISC
    Where  Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
          And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
          And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select     
     From IAS_PI_BILL_MST_ADD_DISC
    Where  Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
          And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
           And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select  Doc_Ser           J_Ser,
     From ASSEMBLE_KIT_ITEMS
    Where  Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0'
          And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
           And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
    'Select  Doc_Ser           J_Ser,
     From DISASSEMBLE_KIT_ITEMS
    Where  Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
              And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
          And Exists ( Select 1 From Form_Detail ,Privilege 
                                    Where Form_Detail.Form_No = Privilege.Form_No
                'Select Vouchers.V_Ser        J_Ser,
        From Vouchers,Voucher_Detail
       Where Vouchers.V_Ser=Voucher_Detail.V_Ser
    'Select  DOC_SRL           J_Ser,
     From IAS_GRNT_MST
    Where Nvl(GR_TYPE,0) =Decode(:P_Jv_Type,0,Nvl(GR_TYPE,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  DOC_SRL           J_Ser,
     From IAS_GRNT_INCR_MST
    Where Nvl(GR_TYPE,0) =Decode(:P_Jv_Type,0,Nvl(GR_TYPE,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  DOC_SRL_REF           J_Ser,
     From IAS_GRNT_MST
    Where Nvl(GR_TYPE,0) =Decode(:P_Jv_Type,0,Nvl(GR_TYPE,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
'Select   Vouchers.V_Ser     J_Ser,
        From Vouchers,Voucher_Detail
       Where Vouchers.V_Ser=Voucher_Detail.V_Ser
    'Select  Doc_Ser           J_Ser,
     From SHP_PREPAID_SLS_MST
    Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From SHP_BILLING
    Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  DOC_SRL J_Ser,
     From IAS_EXCH_CUR_MST
    Where TYP_NO = 1
                    And Exists (Select 1 From S_Brn_Usr_Priv
                        Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From Stn_Cpn_Sls_Mst
    Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  HND_SrL           J_Ser,
     From SHP_HND_MST
    Where Nvl(HND_TYP,0) =Decode(:P_Jv_Type,0,Nvl(HND_TYP,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_SRL           J_Ser,
     From REM_CNTRCT_RNT_MST
    Where Nvl(RNTL_TYP,0) =Decode(:P_Jv_Type,0,Nvl(RNTL_TYP,0),:P_Jv_Type)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_SRL           J_Ser,
     From REM_PRMTING_PRIOD_MST
    Where Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_SRL           J_Ser,
     From Rem_Cntrct_Rnt_Cncl_Mst
    Where Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_SRL           J_Ser,
     From Rem_Bill_Mst
    Where Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_SRL           J_Ser,
     From Rem_Cntrct_Sale_Mst
    Where Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From FAS_INCRS_MST
    Where  Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From FAS_Dcrs_MST
    Where  Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From FAS_TRNS_MST
    Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From FAS_RCVD_MST
    Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From FAS_DEPR_MST
    Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From FAS_ADJST_MST
    Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
    'Select  Doc_Ser           J_Ser,
     From FAS_EVL_MST
    Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
            And Exists (Select 1 From S_Brn_Usr_Priv
                      Where U_Id = :P_User_No                         
Exception When others then
           Raise_application_error(-20447,'Error When Query From Table '||SqlErrm) ;
Procedure Update_Aud  (     AudRef            IN Number,
  --   V_Up_Date := Ys_Gen_Pkg.Get_Fld_Value (P_Tab_Nm => TablNameMst ,P_Fld_Nm=> 'To_CHAR(UP_DATE,''DD/MM/YYYY HH:MI:SS AM'')', P_WHR => ' Where '||ClmnNam||'  = '||DocSer||' AND ROWNUM<=1');            
                Begin 
                   'Update '||TablNameMst||' Set AUDIT_REF      =   '||AudRef   ||  '
                                        Where '|| ClmnNam ||' =   '  ||DocSer||' 
                Exception           
                       Raise_application_error(-20448,'Error When Update Table '||SqlErrm) ;
                End; 
             Begin  
               'Update '||TablNameMst||' Set AUDIT_REF      =   '||AudRef   ||  '
            Exception 
                   Raise_application_error(-20448,'Error When Update Table '||SqlErrm) ;
            End; 
            Begin 
               'Update IAS_POST_DTL Set AUDIT_REF      =   '||AudRef   ||  '
                                    Where Doc_Ser =   '  ||DocSer   ;
            Exception 
            End; 
                           From Ias_Pi_Bill_Jrnl,account
                          Where Ias_Pi_Bill_Jrnl.A_Code=Account.A_Code
                        Order By Ias_Pi_Bill_Jrnl.Rcrd_No'
                     From Ias_Post_Dtl,account
                    Where Ias_Post_Dtl.A_Code=Account.A_Code
                  Order By Ias_Post_Dtl.Rcrd_No'
CREATE OR REPLACE PACKAGE IAS_Aud_List_Pkg AS
   PROCEDURE Aud_List_View (List_Qry          IN OUT Aud_List_Rec ,
Procedure Update_Aud  (     AudRef            IN Number,
CREATE OR REPLACE PACKAGE BODY IAS_Aud_List_Pkg AS
 PROCEDURE Aud_List_View (  List_Qry          IN OUT Aud_List_Rec ,
               'Select J_Ser,
                From Master_Journal_V
               Where Nvl(Jv_Type,0) = Decode(:P_Jv_Type,0,Nvl(Jv_Type,0),:P_Jv_Type)
                And Exists (Select 1 From S_Brn_Usr_Priv
                            Where U_Id = :P_User_No                         
                    'Select  V_Ser J_Ser,
                      From Vouchers
                    Where Voucher_Type = 1
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                   
                    'Select  V_Ser                             J_Ser,
                           From Voucher_Detail
                          Where Voucher_Type = 1
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                        Where U_Id = :P_User_No                         
                            And Exists (Select 1 From Vouchers
                                        Where  V_ser = Voucher_Detail.V_ser
                    'Select  V_Ser J_Ser,
                      From Vouchers
                    Where Voucher_Type = 2
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                    Where U_Id = :P_User_No                         
                  'Select  V_Ser J_Ser,
                      From Voucher_Detail
                    Where Voucher_Type = 2
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                    Where U_Id = :P_User_No                         
                        And Exists (Select 1 From Vouchers
                                    Where  V_ser = Voucher_Detail.V_ser
                    'Select  V_Ser J_Ser,
                      From Voucher_Detail d, Cash_AT_Bank b
                    Where d.Voucher_Type = 2    
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                    Where U_Id = :P_User_No                         
                        'Select  Bill_Ser J_Ser,
                                  From Ias_Bill_Mst
                                        Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                            Where U_Id = :P_User_No                         
                    'Select  Bill_Ser J_Ser,
                                 From Ias_Bill_Mst
                                Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
                                    And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                    'Select     Rt_Bill_Ser J_Ser,
                        From Ias_Rt_Bill_Mst
                       Where Nvl(Rt_Bill_Doc_Type,0) = Decode(:P_Jv_Type,0,Nvl(Rt_Bill_Doc_Type,0),:P_Jv_Type)
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                    Where U_Id = :P_User_No                         
                    'Select     
                        From Ias_Rt_Bill_Mst
                       Where Nvl(Rt_Bill_Doc_Type,0) = Decode(:P_Jv_Type,0,Nvl(Rt_Bill_Doc_Type,0),:P_Jv_Type)
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                    Where U_Id = :P_User_No                         
         'Select Bill_Ser J_Ser,
                 From Ias_pi_bill_Mst,Gr_Note
                Where Ias_pi_bill_Mst.Bill_Ser=Gr_Note.Doc_Ser
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                        Where U_Id = :P_User_No                         
                       'Select J_Ser,                   
                            From 
                           (Select Ias_pi_bill_Mst.Bill_Ser               J_Ser,                         
                                 From Ias_pi_bill_Mst,Gr_Note
                                    Where Ias_pi_bill_Mst.Bill_Ser=Gr_Note.Doc_Ser
                                        And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
                                Select Ias_pi_bill_Mst.Bill_Ser               J_Ser,                        
                                 From Ias_pi_bill_Mst
                                    Where Nvl(Ias_pi_bill_Mst.HUNG,0)=0
                                        And Exists (Select 1 From S_Brn_Usr_Priv
                                                        Where U_Id = :P_User_No                         
                    'Select  Rt_Bill_Ser         J_Ser,
                        From Ias_Pr_Bill_Mst
                    Where Nvl(Rt_Bill_Doc_Type,0) = Decode(:P_Jv_Type,0,Nvl(Rt_Bill_Doc_Type,0),:P_Jv_Type)
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                    Where U_Id = :P_User_No                         
                    'Select  G_Ser J_Ser,
                         From Gr_Note
                        Where Pi_Type = 5
                          And Exists (Select 1 From S_Brn_Usr_Priv
                                      Where U_Id = :P_User_No                   
                    'Select  out_Ser          J_Ser,
                         From Ias_Outgoing_Mst
                        Where Nvl(out_Type,0) = Decode(:P_Jv_Type,0,Nvl(out_Type,0),:P_Jv_Type)
                          And Exists (Select 1 From S_Brn_Usr_Priv
                                      Where U_Id = :P_User_No                         
                'Select     Doc_Ser J_Ser,
                     From Stk_Adjustment
                  Where Nvl(Adjust_Type,0) = Decode(:P_Jv_Type,0,Nvl(Adjust_Type,0),:P_Jv_Type)
                    And Exists (Select 1 From S_Brn_Usr_Priv
                                  Where U_Id = :P_User_No                         
                    'Select Tr_Ser  J_Ser,
                                 From Ias_WhTrns_Mst
                              Where TR_INOUT_TYPE = 1
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                          Where U_Id = :P_User_No                         
                    'Select Tr_Ser      J_Ser,
                         From Ias_WhTrns_Mst
                        WHERE TR_INOUT_TYPE = 2
                                   (SELECT 1
                                      FROM S_Brn_Usr_Priv
                                     WHERE U_Id = :P_User_No
                'Select  Out_Ser J_Ser,
                    From Master_Out_Bills
                  Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
                      And Exists (Select 1 From S_Brn_Usr_Priv
                                  Where U_Id = :P_User_No                         
                'Select  Ret_Ser           J_Ser,
                 From Ias_Ret_Bill_Mst
                Where Nvl(Rt_Bill_Doc_Type,0) = Decode(:P_Jv_Type,0,Nvl(Rt_Bill_Doc_Type,0),:P_Jv_Type)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                              Where U_Id = :P_User_No                         
                'Select Doc_Ser J_Ser,
                 From IAS_BILL_MST_ADD_DISC
                Where  Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                              Where U_Id = :P_User_No                         
                'Select Doc_Ser J_Ser,
                 From IAS_PI_BILL_MST_ADD_DISC
                Where  Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                              Where U_Id = :P_User_No                         
                'Select  Doc_Ser           J_Ser,
                 From ASSEMBLE_KIT_ITEMS
                Where  Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                  And Exists (Select 1 From S_Brn_Usr_Priv
                              Where U_Id = :P_User_No                         
                'Select  Doc_Ser           J_Ser,
                 From DISASSEMBLE_KIT_ITEMS
                Where  Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                    And Exists (Select 1 From S_Brn_Usr_Priv
                              Where U_Id = :P_User_No                         
                'Select Vouchers.V_Ser        J_Ser,
                    From Vouchers,Voucher_Detail
                   Where Vouchers.V_Ser=Voucher_Detail.V_Ser
                    'Select  DOC_SER          J_Ser,
                         From IAS_BANK_ADJUST_MST M
                        Where  Nvl(AUDIT_REF,0)<>1 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                          Where U_Id = :P_User_No                         
                    'Select  DOC_SRL           J_Ser,
                         From IAS_GRNT_MST
                        Where Nvl(GR_TYPE,0) =Decode(:P_Jv_Type,0,Nvl(GR_TYPE,0),:P_Jv_Type)
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                          Where U_Id = :P_User_No                         
               'Select  DOC_SRL           J_Ser,
                    From IAS_GRNT_INCR_MST
                Where Nvl(GR_TYPE,0) =Decode(:P_Jv_Type,0,Nvl(GR_TYPE,0),:P_Jv_Type)
                    And Exists (Select 1 From S_Brn_Usr_Priv
                                        Where U_Id = :P_User_No                         
                'Select     DOC_SRL_REF           J_Ser,
                        From IAS_GRNT_MST
                     Where Nvl(GR_TYPE,0) =Decode(:P_Jv_Type,0,Nvl(GR_TYPE,0),:P_Jv_Type)
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                'Select   Vouchers.V_Ser     J_Ser,
                        From Vouchers,Voucher_Detail
                    Where Vouchers.V_Ser=Voucher_Detail.V_Ser
                'Select     D.doc_srl J_Ser,
                        From GLS_ADVNC_EXPNS_RVNU_MST M ,GLS_ADVNC_EXPNS_RVNU_DTL D
                    Where M.DOC_SRL=D.DOC_SRL
ts (Select 1 From S_Brn_Usr_Priv
                                            Where U_Id = :P_User_No                         
                    'Select  Doc_Ser           J_Ser,
                            From SHP_PREPAID_SLS_MST
                        Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
                        'Select Doc_Ser           J_Ser,
                            From SHP_BILLING
                        Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select DOC_SRL J_Ser,
                            From IAS_EXCH_CUR_MST
                        Where TYP_NO = 1
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                    'Select  Doc_Ser           J_Ser,
                            From Stn_Cpn_Sls_Mst
                        Where Nvl(Bill_Doc_Type,0) =Decode(:P_Jv_Type,0,Nvl(Bill_Doc_Type,0),:P_Jv_Type)
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
                        'Select  HND_SrL           J_Ser,
                            From SHP_HND_MST
                        Where Nvl(HND_TYP,0) =Decode(:P_Jv_Type,0,Nvl(HND_TYP,0),:P_Jv_Type)
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                    'Select  Doc_SRL           J_Ser,
                            From REM_CNTRCT_RNT_MST
                        Where Nvl(RNTL_TYP,0) =Decode(:P_Jv_Type,0,Nvl(RNTL_TYP,0),:P_Jv_Type)
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
                        'Select  Doc_SRL           J_Ser,
                            From REM_PRMTING_PRIOD_MST
                        Where Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
                        'Select  Doc_SRL           J_Ser,
                            From Rem_Cntrct_Rnt_Cncl_Mst
                        Where Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
                        'Select  Doc_SRL           J_Ser,
                            From Rem_Bill_Mst
                        Where Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
                        'Select  Doc_SRL           J_Ser,
                            From Rem_Cntrct_Sale_Mst
                        Where Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
              'Select  Doc_SRL           J_Ser,
                            From REM_BILL_RNT_MST
                        Where   Nvl(Cc_Code,''0'') =Decode(:P_Cs,''0'',Nvl(Cc_Code,''0''),:P_Cs)
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                                        Where U_Id = :P_User_No                         
                        'Select  Doc_Ser           J_Ser,
                            From FAS_INCRS_MST
                        Where  Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                                And Exists (Select 1 From S_Brn_Usr_Priv
                                                    Where U_Id = :P_User_No                         
                        'Select  Doc_Ser           J_Ser,
                            From FAS_Dcrs_MST
                        Where  Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  Doc_Ser           J_Ser,
                            From FAS_TRNS_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  Doc_Ser           J_Ser,
                            From FAS_RCVD_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  Doc_Ser           J_Ser,
                            From FAS_DEPR_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  Doc_Ser           J_Ser,
                            From FAS_ADJST_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  Doc_Ser           J_Ser,
                            From FAS_EVL_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  DOC_SRL           J_Ser,
               From HRS_PYMNT_FIN_TRUST_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  DOC_SRL           J_Ser,
                            From HRS_SLRY_CALC_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  DOC_SRL          J_Ser,
                            From HRS_MDCL_CARE_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  M.DOC_SRL          J_Ser,
                             From MRP_SFC_MATERIALS_RECEIVE_MSTR M , MRP_MPS_WORK_ORDR_MSTR W, MRP_SGS_GENERAL_PARAMETARS P 
                             Where M.APP_USR IS NOT NULL
                              And Exists (Select 1 From S_Brn_Usr_Priv
                                          Where U_Id = :P_User_No                         
                        'Select  M.DOC_SRL          J_Ser,
                              From MRP_SFC_WIP_MASTER M, MRP_MPS_WORK_ORDR_MSTR W, MRP_SGS_GENERAL_PARAMETARS P 
                            Where M.APP_USR IS NOT NULL
                              And Exists (Select 1 From S_Brn_Usr_Priv
                                          Where U_Id = :P_User_No                         
                        'Select  M.DOC_SRL          J_Ser,
                            From MRP_SFC_MATERIALS_RETURN_MSTR M , MRP_MPS_WORK_ORDR_MSTR W, MRP_SGS_GENERAL_PARAMETARS P 
                        Where M.APP_USR IS NOT NULL
                          And Exists (Select 1 From S_Brn_Usr_Priv
                                              Where U_Id = :P_User_No                         
                        'Select  M.DOC_SRL          J_Ser,
                        From MRP_SFC_PRODUCTS_DELIVERY_MSTR M 
                    Where M.APP_USR IS NOT NULL
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                            Where U_Id = :P_User_No                         
                    'Select  Mb.DOC_SRL          J_Ser,
                        FROM HPS_PST_RNT MB ,HPS_ADMSON_MST MR
                    WHERE MB.DOC_SRL_ADMSON=MR.DOC_SRL 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                    'Select  Mb.DOC_SRL          J_Ser,
                        From Hps_Rm_Pymnt Mb ,hps_admson_mst Mr
                    Where Mb.doc_srl_admson=Mr.doc_srl 
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                            Where U_Id = :P_User_No                         
                    'Select  Mb.DOC_SRL          J_Ser,
                        From Hps_Rm_Pymnt Mb ,hps_admson_mst Mr
                    Where Mb.doc_srl_admson=Mr.doc_srl 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                    'Select  Mb.DOC_SRL          J_Ser,
                        From Hps_Rm_Disc Mb ,hps_admson_mst Mr
                    Where Mb.doc_srl_admson=Mr.doc_srl  
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                            Where U_Id = :P_User_No                         
                    'Select  Mb.DOC_SRL          J_Ser,
                        From Hps_Rm_Chng Mb ,hps_admson_mst Mr
                    Where Mb.doc_srl_admson=Mr.doc_srl  
                        And Exists (Select 1 From S_Brn_Usr_Priv
                                            Where U_Id = :P_User_No                         
Exception When others then
        Raise_application_error(-20447,'Error When Query From Table '||SqlErrm) ;
Procedure Update_Aud  (     AudRef            IN Number,
  --   V_Up_Date := Ys_Gen_Pkg.Get_Fld_Value (P_Tab_Nm => TablNameMst ,P_Fld_Nm=> 'To_CHAR(UP_DATE,''DD/MM/YYYY HH:MI:SS AM'')', P_WHR => ' Where '||ClmnNam||'  = '||DocSer||' AND ROWNUM<=1');            
               Begin 
                       'Update '||TablNameMst||' Set Endrsmnt_AUDIT_REF      =   '||AudRef   ||  '
                                            Where '|| ClmnNam ||' =   '  ||DocSer||' 
                Exception           
                       Raise_application_error(-20448,'Error When Update Table '||SqlErrm) ;
                End; 
                Begin 
                       'Update '||TablNameMst||' Set AUDIT_REF      =   '||AudRef   ||  '
                                            Where '|| ClmnNam ||' =   '  ||DocSer||' 
                Exception           
                       Raise_application_error(-20448,'Error When Update Table '||SqlErrm) ;
                End; 
             Begin  
                   'Update '||TablNameMst||' Set AUDIT_REF      =   '||AudRef   ||  '
                                        Where '|| ClmnNam ||' =   '  ||DocSer   ;
            Exception 
                   Raise_application_error(-20448,'Error When Update Table '||SqlErrm) ;
            End; 
            Begin 
                   'Update IAS_POST_MST Set AUDIT_REF      =   '||AudRef   ||  '
                                        Where Doc_Ser =   '  ||DocSer   ;
            Exception 
            End; 
            Begin 
                   'Update IAS_POST_DTL Set AUDIT_REF      =   '||AudRef   ||  '
                                        Where Doc_Ser =   '  ||DocSer   ;
            Exception 
            End; 
CREATE OR REPLACE PACKAGE BODY IAS_Aud_List_Pkg AS
 PROCEDURE Aud_List_View (  List_Qry          IN OUT Aud_List_Rec ,
CREATE OR REPLACE PACKAGE  IAS_Anls_Pkg as
 V_NO_OF_DCML NUMBER:=IAS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_GL','nvl(NO_OF_DECIMAL,2)',' Where 1=1 ');
 FUNCTION Get_Ac_Cntct_Anls_Fnc ( P_Anls_no In Number , P_Doc_Post In Number Default 1 ) RETURN VARCHAR2 ;
 FUNCTION Get_Ac_Blnc_Anls_Fnc ( P_Anls_no In Number , P_Doc_Post In Number Default 1,P_BRN_NO IN NUMBER DEFAULT 0) RETURN NUMBER ;
 FUNCTION Get_Value_Anls_Fnc ( P_Fld_Value In Varchar2  ) RETURN NUMBER ;
 FUNCTION Get_Indctr_Fnc ( P_Typ_no In Number , P_Doc_Post In Number Default 1 ,P_BRN_NO IN NUMBER DEFAULT NULL) RETURN NUMBER ;
 PROCEDURE INSRT_ANLSYS_DATA_PRC;
CREATE OR REPLACE PACKAGE BODY  IAS_Anls_Pkg as
FUNCTION Get_Ac_Cntct_Anls_Fnc ( P_Anls_no In Number , P_Doc_Post In Number Default 1  ) RETURN VARCHAR2 IS
   Cursor F_cv Is SELECT ANLS_NO FROM  IAS_ACCOUNT_ANLSYS 
EXCEPTION 
FUNCTION Get_Ac_Blnc_Anls_Fnc ( P_Anls_no In Number , P_Doc_Post In Number Default 1 ,P_BRN_NO IN NUMBER DEFAULT 0) RETURN NUMBER IS
 Execute Immediate 'SELECT ABS(Round(nvl(sum(nvl(amt,0)),0) ,'||V_NO_OF_DCML||')) 
  FROM IAS_POST_DTL D , ACCOUNT B
  WHERE B.A_CODE=D.A_CODE
EXCEPTION 
FUNCTION Get_Value_Anls_Fnc ( P_Fld_Value In Varchar2  ) RETURN NUMBER IS
 Execute Immediate ('Select '||P_Fld_Value||' From DUAL') Into  V_PECNT  ;
Exception 
FUNCTION Get_Indctr_Fnc ( P_Typ_no In Number , P_Doc_Post In Number Default 1,P_BRN_NO IN NUMBER DEFAULT NULL ) RETURN NUMBER IS
 Select Round(abs(nvl(sum(nvl(amt,0)),0)) ,V_NO_OF_DCML)  Into V_Amt   
   from ias_post_dtl d
  where Exists ( select 1 from ias_conn_acc_inv_by_gl Where si_a_code = d.a_code  and Rownum<=1)
 Select Round(abs(nvl(sum(nvl(amt,
   from ias_post_dtl d
  where Exists ( select 1 from ias_conn_acc_inv_by_gl Where sr_a_code = d.a_code  and Rownum<=1)
 Select Round(abs(nvl(sum(nvl(amt,0)),0)) ,V_NO_OF_DCML)  Into V_Amt   
   from ias_post_dtl d
  where Exists ( select 1 from ias_conn_acc_inv_by_gl Where inv_a_code = d.a_code  and Rownum<=1) 
 Select Round(abs(nvl(sum(nvl(amt,0)),0)) ,V_NO_OF_DCML)  Into V_Amt   
   from ias_post_dtl d
  where Exists ( select 1 from ias_conn_acc_inv_by_gl Where inv_a_code = d.a_code  and Rownum<=1)
Exception 
PROCEDURE INSRT_ANLSYS_DATA_PRC
  Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
 ', 'Income from investments', 421, '42101', 
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSYS
Insert into IAS_ACCOUNT_ANLSY
Insert into IAS_ACCOUNT_ANLSYS
exception when others then
                         From IAS_BANK_ADJUST_MST M
                        Where  Nvl(AUDIT_REF,0)<>1 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                          Where U_Id = :P_User_No                         
                    'Select  DOC_SRL           J_Ser,
                         From IAS_GRNT_MST
                        Where Nvl(GR_TYPE,0) =Decode(:P_Jv_Type,0,Nvl(GR_TYPE,0),:P_Jv_Type)
CREATE OR REPLACE PACKAGE IAS_Actv_Pkg as
 FUNCTION Get_Actv_Name(P_Actv_No In IAS_ACTVTY.Actv_NO%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_Actv_Sub (P_Actv_No In IAS_ACTVTY.Actv_NO%TYPE) RETURN NUMBER;
 FUNCTION Get_Grp_Actv_Name (P_Grp_No In IAS_ACTVTY_GROUP.GROUP_NO%TYPE,P_Lng_no In Number) RETURN  VARCHAR2;
 FUNCTION Get_Actv_S_M (P_Actv_S_M In IAS_ACTVTY.Actv_SUB%TYPE) RETURN Number ;
 FUNCTION Chk_Actv (P_Actv_No In IAS_ACTVTY.Actv_No%TYPE , P_ScrType In Varchar2 Default Null) RETURN Number ;
 FUNCTION Chk_Priv_Actv (P_Actv_No In IAS_ACTVTY.Actv_No%TYPE , P_Usr_No In Number) RETURN Number ; 
 PROCEDURE Chk_Actv_No (  P_Actv_No    In IAS_ACTVTY.Actv_NO%TYPE,
CREATE OR REPLACE PACKAGE Body IAS_Actv_Pkg as
FUNCTION Get_Actv_Name (P_Actv_No In IAS_Actvty.Actv_NO%TYPE,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
 select Decode(P_Lng_no,1,Actv_a_name,nvl(Actv_e_name,Actv_a_name)) 
   From IAS_Actvty
  where Actv_No=P_Actv_No
Exception 
FUNCTION Get_Actv_Sub (P_Actv_No In IAS_Actvty.Actv_NO%TYPE) RETURN NUMBER Is
 Begin
 Select nvl(Actv_Sub,0) 
   From IAS_Actvty
  where Actv_No=P_Actv_No
Exception 
FUNCTION Get_Grp_Actv_Name (P_Grp_No In IAS_Actvty_GROUP.GROUP_NO%TYPE,P_Lng_no In Number) RETURN 
 Begin
 select Decode(P_Lng_no,1,group_a_name,nvl(group_e_name,group_a_name)) 
   From IAS_Actvty_GROUP
  where GROUP_NO=P_Grp_No;
Exception 
 FUNCTION Get_Actv_S_M (P_Actv_S_M In IAS_Actvty.Actv_SUB%TYPE) RETURN Number Is
 Begin
 Select Decode(Count(Distinct Actv_LEVEL),1,0,Min(Actv_Level))  
   From IAS_Actvty
  where Actv_Sub=P_Actv_s_m;
 Exception 
FUNCTION Chk_Actv (P_Actv_No In IAS_ACTVTY.Actv_No%TYPE , P_ScrType In Varchar2 Default Null) RETURN Number IS
     Select 1 
  From IAS_Actvty 
      Where Actv_No = P_Actv_No
        V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 2 
                                      From IAS_Actvty  
                                     where Actv_No = '''||P_Actv_No||'''
Exception 
FUNCTION Chk_Priv_Actv (P_Actv_No In IAS_ACTVTY.Actv_No%TYPE , P_Usr_No In Number) RETURN Number IS
     Select 1 
       From Ias_Priv_Actvty
      where U_id=P_Usr_No
Exception 
PROCEDURE Chk_Actv_No ( P_Actv_No      In IAS_ACTVTY.Actv_NO%TYPE,
      Select Decode(P_Lng_No,1,M.Actv_A_NAME,nvl(M.Actv_E_NAME,M.Actv_A_NAME)), nvl(M.INACTIVE,0), 1 ADD_FLAG,1 VIEW_FLAG
        From IAS_ACTVTY M
       Where M.Actv_NO   = P_Actv_NO
      Select Decode(P_Lng_No,1,M.Actv_A_NAME,nvl(M.Actv_E_NAME,M.Actv_A_NAME)), nvl(M.INACTIVE,0), nvl(D.ADD_FLAG,0),nvl(D.VIEW_FLAG,0)
        From IAS_ACTVTY M,IAS_PRIV_ACTVTY D
       Where M.Actv_NO = D.Actv_NO
 Exception 
CREATE OR REPLACE PACKAGE IAS_Acode_Pkg as
 FUNCTION Get_A_Name(P_a_code In ACCOUNT.A_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_A_code_By_Nm (P_a_nm In ACCOUNT.A_NAME%TYPE) RETURN VARCHAR2 ;
 FUNCTION Get_One_CC_Ac(P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2;
 FUNCTION Get_Cnt_Acy (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_No   In Number) RETURN NUMBER;
 FUNCTION Get_One_Acy_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2;
 FUNCTION Get_Cnt_CshNo (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv in NUMBER DEFAULT 1)RETURN NUMBER;
 FUNCTION Get_One_CshNo_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_Prv In Number  DEFAULT 1) RETURN VARCHAR2;
 FUNCTION Get_Cnt_BnkNo (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1)RETURN NUMBER;
 FUNCTION Get_One_BnkNo_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN VARCHAR2; 
 FUNCTION Get_Cnt_ACCNTDTL(P_ac_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN Number;
 FUNCTION Get_One_ACCNTDTL_Ac (P_ac_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN VARCHAR2;
 FUNCTION Get_Cnt_CstCode (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number)RETURN NUMBER;
 FUNCTION Get_One_CstCode_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2;
 FUNCTION Get_Cnt_VndCode (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number)RETURN NUMBER;
 FUNCTION Get_One_VndCode_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2;
 FUNCTION Check_Acy (P_a_code In ACCOUNT.A_CODE%TYPE,P_a_cy   In VARCHAR2) RETURN NUMBER;
 FUNCTION  Get_Ac_Rprt(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_Ac_Type (P_a_code In ACCOUNT.A_CODE%TYPE,P_Type In VARCHAR2 Default Null) RETURN NUMBER;
 FUNCTION Get_A_S_M (P_A_S_M In ACCOUNT.A_S_M%TYPE) RETURN Number;
 FUNCTION Get_AC_PARENT(P_a_code In ACCOUNT.A_CODE%TYPE, P_G_PARENT NUMBER DEFAULT 0) RETURN VARCHAR2;
 PROCEDURE GET_A_ANLS(P_AC_DTL_TYP IN  ACCOUNT.AC_DTL_TYP%TYPE,
 FUNCTION Get_AC_Analysis(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION GET_FLOW_BY_A_ANLYS(P_A_ANLYS In IAS_ACCOUNT_ANLSYS.ANLS_NO%TYPE) RETURN NUMBER ;
 FUNCTION Get_AC_ClSS(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_AC_GRP(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_AC_DR(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER ;
 PROCEDURE Build_Acc_Tree ( P_A_Code    In ACCOUNT.A_CODE%TYPE
 PROCEDURE ReBuild_Acc_Tree ;
 PROCEDURE Chk_Ac_code ( P_A_Code    In ACCOUNT.A_CODE%TYPE,
 FUNCTION  Chk_Ac_Conn      ( P_CONN_TYP  IN NUMBER ,
 Procedure SRCH_ACODE( a_cv      In Out t_cv,
Function Chk_TaxAc_code_Fnc( P_Brn_No          In s_brn.brn_no%TYPE
CREATE OR REPLACE PACKAGE Body  IAS_Acode_Pkg as
FUNCTION Get_A_Name (P_a_code In ACCOUNT.A_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin  -- Decode(P_Lng_no,1,a_name,nvl(a_name_Eng,a_name))
 select  CASE WHEN  P_Lng_no=1 THEN a_name ELSE nvl(a_name_Eng,a_name)END
   From account
  where a_code=P_a_code ;
 Exception 
FUNCTION Get_A_code_By_Nm (P_a_nm In ACCOUNT.A_NAME%TYPE) RETURN VARCHAR2 Is
 Begin
 select A_code 
   From ACCOUNT
  where (a_name = P_a_nm or a_name_eng =P_a_nm )
 Exception 
FUNCTION Get_One_CC_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2 Is
 Begin
   Begin
Select count(*) 
  From Ias_Account_Cc 
 where A_code=P_A_Code;
Exception When Others Then
End;   
   Begin
Select CC_Code 
  From Ias_Account_Cc 
 where A_code=P_A_Code;
   Exception When Others Then
   End;
 Exception 
FUNCTION Get_Cnt_Acy (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN Number Is
    Begin
Select count(*) 
From Account_Curr 
            Where A_code =P_A_Code 
            And   A_Cy   In (Select A_Cy 
                              From   Priv_Acc 
                              Where  U_Id  = P_Usr_No 
    Exception When Others Then
    End;   
 Exception 
FUNCTION Get_One_Acy_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2 Is
    Begin
Select A_Cy 
  From Priv_Acc 
 where U_Id  = P_Usr_No
    Exception When Others Then
    End;
 Exception 
FUNCTION Get_Cnt_CshNo (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN Number Is
    Begin
            Select count(*) 
                From cash_in_hand  
                Where A_code =P_A_Code 
                 And (P_Usr_no=1 or  exists (select 1 
                               from Priv_Cash  
                              Where  U_Id  = P_Usr_No 
          Select count(*) 
                From cash_in_hand  
                Where A_code =P_A_Code ;
        Exception When Others Then
    End;   
 Exception 
FUNCTION Get_One_CshNo_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_Prv In Number  DEFAULT 1) RETURN VARCHAR2 Is
    Begin
            Select cash_no 
              From Priv_Cash 
             where U_Id  = P_Usr_No
             And cash_no in (select cash_no from cash_in_hand where a_code= P_A_Code)  
        Select cash_no 
              From CASH_IN_HAND
              Where A_code =P_A_Code ;  
    Exception When Others Then
    End;
 Exception 
FUNCTION Get_Cnt_BnkNo (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN Number Is
    Begin
                Select count(*) 
                    From cash_At_Bank  
                    Where A_code =P_A_Code 
                     And (P_Usr_no=1 or  exists (select 1 
                                   from Priv_Cash  
                                  Where  U_Id  = P_Usr_No 
          Select count(*) 
            From cash_At_Bank  
            Where A_code =P_A_Code ;
    Exception When Others Then
    End;   
 Exception 
FUNCTION Get_One_BnkNo_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN VARCHAR2 Is
    Begin
         Select cash_no 
              From Priv_Cash 
             where U_Id  = P_Usr_No
             And cash_no in (select cash_no from cash_in_hand where a_code= P_A_Code)  
        Select BANK_no 
              From CASH_AT_BANK
              Where A_code =P_A_Code ;  
    Exception When Others Then
    End;
 Exception 
FUNCTION Get_Cnt_ACCNTDTL(P_ac_code In ACCOUNT.A_CODE%TYPE,P_Usr_no 
    Begin
                Select count(*) 
                    From GLS_V_ACCN
                    Where AC_code =P_ac_code
                     And (P_Usr_no=1 or  exists (select 1 
                                   from GLS_V_ACCNT_DTL_PRIV  
                                  Where  U_Id  = P_Usr_No 
          Select count(*) 
            From GLS_V_ACCNT_DTL  
            Where AC_code =P_ac_code 
    Exception When Others Then
    End;   
 Exception 
FUNCTION Get_One_ACCNTDTL_Ac (P_ac_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number,P_prv In NUMBER DEFAULT 1) RETURN VARCHAR2 Is
    Begin
         Select Ac_Code_Dtl 
              From GLS_V_ACCNT_DTL_priv 
             where U_Id  = P_Usr_No
             And Ac_Code_Dtl in (select Ac_Code_Dtl from GLS_V_ACCNT_DTL where ac_code= P_Ac_Code and ac_dtl_Typ= V_ac_dtl_typ )  
        Select Ac_Code_Dtl 
              From GLS_V_ACCNT_DTL
              Where AC_code =P_ac_code 
    Exception When Others Then
    End;
 Exception 
FUNCTION Get_Cnt_CstCode (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN Number Is
        Begin
            Select count(*) 
                From customer  C
                Where C_A_code =P_A_Code 
                 And (P_Usr_no=1 or  exists (select 1 
                                               from IAS_PRIV_CUSTOMER  
                                              Where  C_CODE=C.C_CODE
         Exception When Others Then
        End;
             Begin     
                  Select count(*) 
                    From IAS_CST_ACCNT C  
                    Where A_code =P_A_Code 
                     And (P_Usr_no=1 or  exists (select 1 
                                   from IAS_PRIV_CUST
                                  Where  C_CODE=C.C_CODE
            Exception When Others Then
            End;
 Exception 
FUNCTION Get_One_CstCode_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2 Is
    Begin
Select DISTINCT C_CODE 
  From IAS_PRIV_CUSTOMER  PRV
 where U_Id  = P_Usr_No
         And C_CODE in (select M.C_CODE 
                         from customer M ,IAS_CST_ACCNT D
                        where M.C_CODE=D.C_CODE
    Exception When Others Then
    End;
 Exception 
FUNCTION Get_Cnt_VndCode (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN Number Is
   Begin
Select count(*) 
From v_details  V
            Where V_A_code =P_A_Code 
             And (P_Usr_no=1 or  exists (select 1 
                                           from IAS_PRIV_VENDOR  
                                          Where  V_CODE=V.V_CODE
     Exception When Others Then
    End;
         Begin 
          Select count(*) 
From IAS_VNDR_ACCNT V  
            Where A_code =P_A_Code 
             And (P_Usr_no=1 or  exists (select 1 
                           from IAS_PRIV_VENDOR  
                          Where  V_CODE=V.V_CODE
       Exception When Others Then
       End;
 Exception 
FUNCTION Get_One_VndCode_Ac (P_a_code In ACCOUNT.A_CODE%TYPE,P_Usr_no In Number) RETURN VARCHAR2 Is
    Begin
Select DISTINCT V_CODE 
  From IAS_PRIV_VENDOR  PRV
 where U_Id  = P_Usr_No
         And V_CODE in (select M.V_CODE 
                         from V_DETAILS M ,IAS_VNDR_ACCNT D
                        where M.V_CODE=D.V_CODE
    Exception When Others Then
    End;
 Exception 
FUNCTION  Get_Ac_Rprt(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
  Select nvl(A_REPORT,1)
    From Account
   Where a_code = P_a_code
 Exception When Others Then
FUNCTION Get_Ac_Type (P_a_code In ACCOUNT.A_CODE%TYPE,P_Type In VARCHAR2 Default Null) RETURN Number Is
Select 1 
  From cash_in_hand
 Where a_code=P_a_code
Exception 
      Begin
Select 2 
From cash_at_bank
 Where a_code=P_a_code
Exception 
Select 3 
  From Ias_Conn_Acc_Inv_By_Gl
 Where Inv_a_code=P_a_code
Exception 
          Begin
Select 4 
From Ias_Conn_Acc_Inv_By_Gl
 Where Cst_Si_A_Code=P_a_code
Exception 
Exception 
FUNCTION Check_Acy (P_a_code In ACCOUNT.A_CODE%TYPE,P_a_cy   In VARCHAR2) RETURN Number Is
 Begin
 Select 1 
   From account_curr
  where a_code=P_a_code
 Exception 
FUNCTION Get_A_S_M (P_a_S_M In ACCOUNT.A_S_m%TYPE) RETURN Number Is
 Begin
 Select Decode(Count(Distinct A_LEVEL),1,0,Min(a_Level))  
   From account
  where a_s_m=P_a_s_m;
 Exception 
FUNCTION GET_AC_PARENT(P_a_code In ACCOUNT.A_CODE%TYPE, P_G_PARENT NUMBER DEFAULT 0) RETURN VARCHAR2 IS
    Cursor Ac_cv Is Select a_code  From  Account
                    Connect by  A_code = Prior  A_PARENT  Order by Level;
     Begin
        Exception
     End;
  Select A_Parent
    From Account 
   Where A_code=P_a_code ; 
 Exception
PROCEDURE GET_A_ANLS (P_AC_DTL_TYP IN  ACCOUNT.AC_DTL_TYP%TYPE,
 BEGIN
 SELECT ANLS_NO ,FLOW_TYPE
   FROM IAS_ACCOUNT_ANLSYS
  WHERE AC_DTL_TYP=P_AC_DTL_TYP
 EXCEPTION 
FUNCTION Get_AC_Analysis(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
 Begin
 Select A_ANALYSIS 
   From account
  where a_code=P_a_code
 Exception 
FUNCTION GET_FLOW_BY_A_ANLYS(P_A_ANLYS In IAS_ACCOUNT_ANLSYS.ANLS_NO%TYPE) RETURN NUMBER Is
 Begin
 Select FLOW_TYPE 
   From IAS_ACCOUNT_ANLSYS
  where ANLS_NO=P_A_ANLYS
 Exception 
FUNCTION Get_AC_ClSS(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
 Begin
 Select CLASS_NO 
   From account
  where a_code=P_a_code
 Exception 
FUNCTION Get_AC_GRP(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
 Begin
 Select A_GROUPING 
   From account
  where a_code=P_a_code
 Exception 
FUNCTION Get_AC_DR(P_a_code In ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
 Begin
 Select DR 
   From account
  where a_code=P_a_code
 Exception 
PROCEDURE Build_Acc_Tree ( P_A_Code    In ACCOUNT.A_CODE%TYPE
        Begin
           Select account_type 
           Into V_Sub_acc   From account_types where affected_by_trans=1 ;
        Exception 
        End;
            Begin
               Select A_S_M 
               Into V_A_S_M   From account where A_CODE=P_A_CODE ;
            Exception 
            End;
                    BEGIN
                   Execute Immediate 'Delete Ias_Acc_Tree Where A_Code='||P_A_Code||'';
                    EXCEPTION WHEN OTHERS THEN NULL;
                    END;
                        Begin
                             Insert Into Ias_Acc_Tree (A_Code,                Ac_Tree, 
                                                   Select  P_A_Code,         A_Code, 
                                                     From Accoun
                          Exception WHEN OTHERS THEN
                          End;
                          begin                           
                           update IAS_GL_CSHFLW_AC set A_ANALYSIS=Get_AC_Analysis(P_a_code =>P_A_Code) 
                               where a_code=P_A_Code ;
                           Exception WHEN OTHERS THEN
                          End;
                        /*Begin
                            Update Ias_Acc_Tree Set A_Grouping=:Account.A_Grouping
                                Where A_CODE=:Account.a_code;                    
                        Exception
                        End;*/
 Exception 
PROCEDURE ReBuild_Acc_Tree 
 Cursor Acc Is Select A_Code, A_Name, A_Name_Eng, A_Level, A_Parent, A_S_M, A_Grouping,
                     From Account 
                    Where A_S_M In  (Select Account_Type From Account_Types Where Nvl(Affected_By_Trans,0)=1)
                    order by a_code;
    Begin
            select Sum(a_level) 
                Into V_Cnt from account 
                where a_s_m In(Select ACCOUNT_TYPE From ACCOUNT_TYPES where Nvl(AFFECTED_BY_TRANS,0)=1)
            select count(*) from ias_acc_tree;
    Exception
    End;
        BEGIN
        EXCEPTION WHEN OTHERS THEN NULL;
        END;
 Begin
   Exception 
       End;
 Exception 
PROCEDURE Chk_Ac_code ( P_A_Code    In ACCOUNT.A_CODE%TYPE,
      Select Decode(P_Lng_No,1,M.A_NAME,nvl(M.A_NAME_ENG,M.A_NAME)), nvl(M.AC_CLOSE,0), 1 ADD_FLAG,1 VIEW_FLAG,nvl(M.Ac_Dtl_Typ,0)
        From ACCOUNT M
       Where TO_CHAR(M.A_code)   = TO_CHAR(P_A_Code)
         and EXISTS ( SELECT 1 FROM ACCOUNT_TYPES WHERE ACCOUNT_TYPE = M.A_S_M AND AFFECTED_BY_TRANS = 1 AND ROWNUM<=1)
    begin
      Select Decode(P_Lng_No,1,M.A_NAME,nvl(M.A_NAME_ENG,M.A_NAME)), nvl(M.AC_CLOSE,0),nvl(D.ADD_FLAG,0),nvl(D.VIEW_FLAG,0),nvl(M.Ac_Dtl_Typ,0)
        From ACCOUNT M,PRIV_ACC D
       Where M.A_CODE = D.A_CODE
         and EXISTS ( SELECT 1 FROM ACCOUNT_TYPES WHERE ACCOUNT_TYPE = M.A_S_M AND AFFECTED_BY_TRANS = 1 AND ROWNUM<=1)
      exception
 Exception 
FUNCTION  Chk_Ac_Conn      ( P_CONN_TYP  IN NUMBER ,
     Begin 
      Select 1 
        From IAS_ACCOUNT_CC
       Where TO_CHAR(A_code)   = TO_CHAR(P_A_Code)
     Exception 
      End;
          Select 1 
            From IAS_ACCOUNT_CC
           Where TO_CHAR(A_code)   = TO_CHAR(P_A_Code)
      Begin 
      Select 1 
        From IAS_ACCOUNT_PJ
       Where TO_CHAR(A_code)   = TO_CHAR(P_A_Code)
     Exception 
      End;
          Select 1 
            From IAS_ACCOUNT_PJ
           Where TO_CHAR(A_code)   = TO_
 Exception 
PROCEDURE SRCH_ACODE( A_CV        IN OUT T_CV,
    BEGIN
            'Select M.A_Code A_Code,
               From ACCOUNT M ,ACCOUNT_CURR D,account_grouping S  
              Where M.A_CODE=D.A_CODE
                AND exists ( select 1 from account_types
                              where account_type = M.a_s_m 
  EXCEPTION 
           RAISE_APPLICATION_ERROR(-20417,'Error When Query From Account Table '||SQLERRM) ;                        
Function Chk_TaxAc_code_Fnc( P_Brn_No          In s_brn.brn_no%TYPE
  Begin
        begin   
                  Select  SUM(nvl(TAX_PRCNT,0)),1
                    From GLS_TAX_ACC M
                   Where  M.A_code  =  P_Ac_Code
                     And exists  (select 1 
                                    From Gnr_Tax_Typ_Clc_Dtl
                                   where tax_no=m.tax_no
        exception when no_data_found then 
  EXCEPTION 
           RAISE_APPLICATION_ERROR(-20417,'Error When Query From Tax Account Table '||SQLERRM) ;                        
                            From HRS_SLRY_CALC_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
                            And Exists (Select 1 From S_Brn_Usr_Priv
                                                Where U_Id = :P_User_No                         
                        'Select  DOC_SRL          J_Ser,
                            From HRS_MDCL_CARE_MST
                        Where Doc_No between nvl(:P_F_Doc_No,DOC_NO) AND nvl(:P_T_Doc_No,DOC_NO) 
CREATE TABLE GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
', 'Return Coupon From SalesMan', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_T
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
', 'Purchase Foreign Currencies Exchange from exchanger', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
', 'Purchase Foreign Currencies Exchange from bank', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
', 'Purchase Foreign Currencies Exchange from out Agents', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
', 'Purchase Foreign Currencies Exchange from personl', 1, 1, 
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
', 'Update Plan', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
', 'Exit From Embassy', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
', 'Returned From Embassy', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
', 'Exit from KSA', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL    (DOC_TYP, DOC_TYP_NM, DOC_TYP_NM_F, FLG_ST, DOC_PST,     DOC_APPRVD_FLG, AUDIT_FLG, ARCHV_FLG, TBL_MST_NM, TBL_DTL_NM,     TBL_DOCSRL_NM, TBL_DOCNO_NM, TBL_DOCDATE_NM, TBL_TYPNO_NM, LOV_NM,     RPRT_NM, FORM_NO, SYS_NO, F_SYS, TBL_DOCPST_NM)
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
CREATE OR REPLACE PACKAGE Gls_Yrly_Mov_Data_Pkg AS
Function Mov_Rq_Jrnl_Prv_Yr_Prc(  P_YBP       IN Varchar2,
Function Mov_Rq_VchrPay_Prv_Yr_Prc(P_YBP       IN Varchar2,
Function Mov_Rq_VchrRcv_Prv_Yr_Prc(P_YBP       IN Varchar2,
Function Mov_Rq_Exchng_Prv_Yr_Prc(P_YBP       IN Varchar2,
CREATE OR REPLACE PACKAGE BODY Gls_Yrly_Mov_Data_Pkg AS
Function Mov_Rq_Jrnl_Prv_Yr_Prc(  P_YBP       IN Varchar2,
    V_CNT:=IAS_GEN_PKG.GET_CNT('SELECT 1 FROM IAS_RQ_JRNL_MST WHERE ROWNUM<=1 ');
      V_SQ_TYP:=IAS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_GL','nvl(JRNL_RQ_SEQ,0)',' Where  ROWNUM<=1  ') ;
       Begin
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'IAS_RQ_JRNL_MST',' WHERE  NVL(PROCESED,0)= 0 ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'IAS_RQ_JRNL_DTL',' WHERE J_SER IN (SELECT J_SER FROM IAS_RQ_JRNL_MST ) ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'S_APPRVD_MOV',' WHERE DOC_SER IN (SELECT J_SER FROM IAS_RQ_JRNL_MST ) ');
      Exception When Others Then
      End;
       BEGIN
          Execute Immediate('ALTER TABLE IAS_RQ_JRNL_DTL DISABLE CONSTRAINT IAS_RQ_JRNL_DTL'); 
          Execute Immediate('ALTER TABLE IAS_RQ_JRNL_DTL DISABLE CONSTRAINT DJVR_FK');  
          Execute Immediate('ALTER TABLE IAS_RQ_JRNL_MST DISABLE  CONSTRAINT IAS_RQ_JRNL_MST_DOC'); 
      Exception When Others Then
      End;
      Begin
             Update IAS_RQ_JRNL_MST M Set M.BRN_YEAR      = P_BRN_YEAR,
             Update IAS_RQ_JRNL_DTL M Set M.BRN_YEAR  = P_BRN_YEAR,
             Update S_APPRVD_MOV M Set M.BRN_YEAR  = P_BRN_YEAR
              WHERE DOC_SER IN (SELECT J_SER FROM IAS_RQ_JRNL_MST  );                                                                       
      Exception When Others Then
      End;
      BEGIN
          Execute Immediate('UPDATE '||P_YBP||'.IAS_RQ_JRNL_MST
          WHERE J_SER IN (SELECT J_SER FROM IAS_RQ_JRNL_MST  )');  
      Exception When Others Then
      End;
              Begin
                     Update IAS_RQ_JRNL_DTL M Set M.J_SER  = P_BRN_YEAR||SUBSTR(M.J_SER,5)
                         where J_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_JRNL_MST where MOVD_YR=1 );                     
                     Update S_APPRVD_MOV M Set M.DOC_SER  =P_BRN_YEAR||SUBSTR(M.DOC_SER,5)
                      WHERE DOC_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_JRNL_MST where MOVD_YR=1 );
                        Update IAS_RQ_JRNL_MST M Set M.J_SER   = P_BRN_YEAR||SUBSTR(M.J_SER,5)
                          WHERE MOVD_YR=1  ;                                                                      
              Exception When Others Then
              End;
           Cursor C_Udt Is Select  85    Doc_Typ,
                       From IAS_RQ_JRNL_MST M
                      Order By M.Brn_No,
     Begin   
                Update IAS_RQ_JRNL_DTL
                  Where J_SER = I.Doc_Srl_YR;
                 Update IAS_RQ_JRNL_MST
                    Where Doc_Srl_YR = I.Doc_Srl_YR;   
                 Update S_Apprvd_Mov
                    Where Doc_Ser = I.Doc_Srl_YR
           -- Update IAS_RQ_JRNL_DTL D
      Exception When Others Then
      End;
       BEGIN
          Execute Immediate('ALTER TABLE IAS_RQ_JRNL_MST ENABLE  CONSTRAINT IAS_RQ_JRNL_MST_DOC'); 
          Execute Immediate('ALTER TABLE IAS_RQ_JRNL_DTL ENABLE CONSTRAINT IAS_RQ_JRNL_DTL'); 
          Execute Immediate('ALTER TABLE IAS_RQ_JRNL_DTL ENABLE CONSTRAINT DJVR_FK');  
      Exception When Others Then
      End;
Exception When Others Then
Function Mov_Rq_VchrPay_Prv_Yr_Prc(  P_YBP       IN Varchar2,
    V_CNT:=IAS_GEN_PKG.GET_CNT('SELECT 1 FROM IAS_RQ_VCHR_MST WHERE VOUCHER_TYPE=2 AND ROWNUM<=1 ');
      V_SQ_TYP:=IAS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_GL','nvl(PAY_RQ_SEQ,0)',' Where  ROWNUM<=1  ') ;
       Begin
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'IAS_RQ_VCHR_MST',' WHERE  NVL(PROCESED,0)= 0 AND VOUCHER_TYPE=2 ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'GLS_RQ_VCHR_MST_ACCNT',' WHERE DOC_SRL IN (SELECT V_SER FROM IAS_RQ_VCHR_MST WHERE VOUCHER_TYPE=2 ) ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'IAS_RQ_VCHR_DTL',' WHERE V_SER IN (SELECT V_SER FROM IAS_RQ_VCHR_MST WHERE  VOUCHER_TYPE=2 ) ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'S_APPRVD_MOV',' WHERE DOC_SER IN (SELECT V_SER FROM IAS_RQ_VCHR_MST WHERE VOUCHER_TYPE=2 ) ');
      Exception When Others Then
      End;
       BEGIN
          /* ALTER TABLE IAS_RQ_VCHR_DTL DISABLE CONSTRAINT VDR_FK;
           ALTER TABLE IAS_RQ_VCHR_DTL DISABLE CONSTRAINT VDR_NN_VSER;
           ALTER TABLE IAS_RQ_VCHR_MST DISABLE  CONSTRAINT VSR_COL_NO_FK;
           ALTER TABLE GLS_RQ_VCHR_MST_ACCNT DISABLE  CONSTRAINT PK_GLS_RQ_VCHR_MST_ACCNT;*/
          Execute Immediate('ALTER TABLE GLS_RQ_VCHR_MST_ACCNT DISABLE  CONSTRAINT FK_RQ_GLS_VCHR_MST_ACCNT');
          Execute Immediate('ALTER TABLE IAS_RQ_VCHR_DTL DISABLE CONSTRAINT VDR_FK'); 
          Execute Immediate('ALTER TABLE IAS_RQ_VCHR_DTL DISABLE CONSTRAINT VDR_NN_VSER');  
          Execute Immediate('ALTER TABLE IAS_RQ_VCHR_MST DISABLE  CONSTRAINT VSR_COL_NO_FK');
          Execute Immediate('ALTER TABLE GLS_RQ_VCHR_MST_ACCNT DISABLE  CONSTRAINT PK_GLS_RQ_VCHR_MST_ACCNT');
      Exception When Others Then
      End;
      Begin
             Update IAS_RQ_VCHR_MST M Set M.BRN_YEAR      = P_BRN_YEAR,
                WHERE VOUCHER_TYPE=2 ;
             Update GLS_RQ_VCHR_MST_ACCNT M Set M.BRN_YEAR  = P_BRN_YEAR
                where DOC_SRL IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where voucher_type=2 AND MOVD_YR=1  ); 
             Update IAS_RQ_VCHR_DTL M Set M.BRN_YEAR  = P_BRN_YEAR,
                WHERE V_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST Where voucher_type=2  AND MOVD_YR=1  );                       
             Update S_APPRVD_MOV M Set M.BRN_YEAR  = P_BRN_YEAR
              WHERE DOC_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST Where voucher_type=2  AND MOVD_YR=1  );                                                                       
      Exception When Others Then
      End;
      BEGIN
          Execute Immediate('UPDATE '||P_YBP||'.IAS_RQ_VCHR_MST
          WHERE V_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST Where VOUCHER_TYPE=2)');  
      Exception When Others Then
      End;
              Begin
                     Update GLS_RQ_VCHR_MST_ACCNT M Set M.DOC_SRL  = P_BRN_YEAR||SUBSTR(M.DOC_SRL,5)
                        where DOC_SRL IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where voucher_type=2 AND MOVD_YR=1 ); 
                     Update IAS_RQ_VCHR_DTL M Set M.V_SER  = P_BRN_YEAR||SUBSTR(M.V_SER,5)
                         where V_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where voucher_type=2 AND MOVD_YR=1);                     
                     Update S_APPRVD_MOV M Set M.DOC_SER  =P_BRN_YEAR||SUBSTR(M.DOC_SER,5)
                      WHERE DOC_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where voucher_type=2 AND MOVD_YR=1 );
                       Update IAS_RQ_VCHR_MST M Set M.V_SER   = P_BRN_YEAR||SUBSTR(M.V_SER,5)
                          WHERE VOUCHER_TYPE=2 AND MOVD_YR=1 ;                                                                      
              Exception When Others Then
              End;
           Cursor C_Udt Is Select  93    Doc_Typ,
                       From IAS_RQ_VCHR_MST M
                        where voucher_type=2
                      Order By M.Brn_No,
     Begin                                              
                Update IAS_RQ_VCHR_DTL
                  Where V_SER = I.Doc_Srl_YR;
                BEGIN
                 Update GLS_RQ_VCHR_MST_ACCNT
                  Where DOC_SRL = I.Doc_Srl_YR;
                 Exception When Others Then
      End; 
                 Update IAS_RQ_VCHR_MST
                    Where Doc_Srl_YR = I.Doc_Srl_YR;   
                 Update S_Apprvd_Mov
                    Where Doc_Ser = I.Doc_Srl_YR
      Exception When Others Then
      End;
    BEGIN
    Execute Immediate('ALTER TABLE GLS_RQ_VCHR_MST_ACCNT ENABLE  CONSTRAINT PK_GLS_RQ_VCHR_MST_ACCNT');
    Execute Immediate('ALTER TABLE GLS_RQ_VCHR_MST_ACCNT ENABLE  CONSTRAINT FK_RQ_GLS_VCHR_MST_ACCNT');
    Execute Immediate('ALTER TABLE IAS_RQ_VCHR_MST ENABLE  CONSTRAINT VSR_COL_NO_FK');          
    Execute Immediate('ALTER TABLE IAS_RQ_VCHR_DTL ENABLE CONSTRAINT VDR_FK'); 
    Execute Immediate('ALTER TABLE IAS_RQ_VCHR_DTL ENABLE CONSTRAINT VDR_NN_VSER');  
    Exception When Others Then
    End;
Exception When Others Then
Function Mov_Rq_VchrRcv_Prv_Yr_Prc(  P_YBP       IN Varchar2,
    V_CNT:=IAS_GEN_PKG.GET_CNT('SELECT 1 FROM IAS_RQ_VCHR_MST WHERE VOUCHER_TYPE=1 AND ROWNUM<=1 ');
      V_SQ_TYP:=IAS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_GL','nvl(REC_RQ_SEQ,0)',' Where  ROWNUM<=1  ') ;
       Begin
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'IAS_RQ_VCHR_MST',' WHERE  NVL(PROCESED,0)= 0 AND VOUCHER_TYPE=1 ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'GLS_RQ_VCHR_MST_ACCNT',' WHERE DOC_SRL IN (SELECT V_SER FROM IAS_RQ_VCHR_MST WHERE VOUCHER_TYPE=1 ) ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'IAS_RQ_VCHR_DTL',' WHERE V_SER IN (SELECT V_SER FROM IAS_RQ_VCHR_MST WHERE  VOUCHER_TYPE=1 ) ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'S_APPRVD_MOV',' WHERE DOC_SER IN (SELECT V_SER FROM IAS_RQ_VCHR_MST WHERE VOUCHER_TYPE=1 ) ');
      Exception When Others Then
      End;
       BEGIN
          Execute Immediate('ALTER TABLE GLS_RQ_VCHR_MST_ACCNT DISABLE  CONSTRAINT FK_RQ_GLS_VCHR_MST_ACCNT');
          Execute Immediate('ALTER TABLE IAS_RQ_VCHR_DTL DISABLE CONSTRAINT VDR_FK'); 
          Execute Immediate('ALTER TABLE IAS_RQ_VCHR_DTL DISABLE CONSTRAINT VDR_NN_VSER');  
          Execute Immediate('ALTER TABLE IAS_RQ_VCHR_MST DISABLE  CONSTRAINT VSR_COL_NO_FK');
          Execute Immediate('ALTER TABLE GLS_RQ_VCHR_MST_ACCNT DISABLE  CONSTRAINT PK_GLS_RQ_VCHR_MST_ACCNT');
      Exception When Others Then
      End;
      Begin
             Update IAS_RQ_VCHR_MST M Set M.BRN_YEAR      = P_BRN_YEAR,
                WHERE VOUCHER_TYPE=1  ;                         
             Update GLS_RQ_VCHR_MST_ACCNT M Set M.BRN_YEAR  = P_BRN_YEAR
                where DOC_SRL IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where VOUCHER_TYPE=1 AND MOVD_YR=1); 
             Update IAS_RQ_VCHR_DTL M Set M.BRN_YEAR  = P_BRN_YEAR,
                where V_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where VOUCHER_TYPE=1 AND MOVD_YR=1);                    
             Update S_APPRVD_MOV M Set M.BRN_YEAR  = P_BRN_YEAR
              WHERE DOC_SER
 IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST Where VOUCHER_TYPE=1 AND MOVD_YR=1 );                                                                       
      Exception When Others Then
      End;
      BEGIN
          Execute Immediate('UPDATE '||P_YBP||'.IAS_RQ_VCHR_MST
          WHERE V_SER IN (SELECT V_SER FROM IAS_RQ_VCHR_MST Where VOUCHER_TYPE=1 )');  
      Exception When Others Then
      End;
              Begin
                     Update GLS_RQ_VCHR_MST_ACCNT M Set M.DOC_SRL  = P_BRN_YEAR||SUBSTR(M.DOC_SRL,5)
                        where DOC_SRL IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where VOUCHER_TYPE=1 AND MOVD_YR=1); 
                     Update IAS_RQ_VCHR_DTL M Set M.V_SER  = P_BRN_YEAR||SUBSTR(M.V_SER,5)
                         where V_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where VOUCHER_TYPE=1 AND MOVD_YR=1);                     
                     Update S_APPRVD_MOV M Set M.DOC_SER  =P_BRN_YEAR||SUBSTR(M.DOC_SER,5)
                      WHERE DOC_SER IN (SELECT DOC_SRL_YR FROM IAS_RQ_VCHR_MST where VOUCHER_TYPE=1 AND MOVD_YR=1 );
                       Update IAS_RQ_VCHR_MST M Set M.V_SER   = P_BRN_YEAR||SUBSTR(M.V_SER,5)
                          WHERE VOUCHER_TYPE=1 AND MOVD_YR=1 ;                                                                      
              Exception When Others Then
              End;
           Cursor C_Udt Is Select  92    Doc_Typ,
                       From IAS_RQ_VCHR_MST M
                        where VOUCHER_TYPE=1
                      Order By M.Brn_No,
     Begin                                              
                Update IAS_RQ_VCHR_DTL
                  Where V_SER = I.Doc_Srl_YR;
                BEGIN
                 Update GLS_RQ_VCHR_MST_ACCNT
                  Where DOC_SRL = I.Doc_Srl_YR;
                 Exception When Others Then
      End; 
                 Update IAS_RQ_VCHR_MST
                    Where Doc_Srl_YR = I.Doc_Srl_YR;   
                 Update S_Apprvd_Mov
                    Where Doc_Ser = I.Doc_Srl_YR
      Exception When Others Then
      End;
    BEGIN
    Execute Immediate('ALTER TABLE GLS_RQ_VCHR_MST_ACCNT ENABLE  CONS
    Execute Immediate('ALTER TABLE GLS_RQ_VCHR_MST_ACCNT ENABLE  CONSTRAINT FK_RQ_GLS_VCHR_MST_ACCNT');
    Execute Immediate('ALTER TABLE IAS_RQ_VCHR_MST ENABLE  CONSTRAINT VSR_COL_NO_FK');          
    Execute Immediate('ALTER TABLE IAS_RQ_VCHR_DTL ENABLE CONSTRAINT VDR_FK'); 
    Execute Immediate('ALTER TABLE IAS_RQ_VCHR_DTL ENABLE CONSTRAINT VDR_NN_VSER');  
    Exception When Others Then
    End;
Exception When Others Then
Function Mov_Rq_Exchng_Prv_Yr_Prc(  P_YBP       IN Varchar2,
    V_CNT:=IAS_GEN_PKG.GET_CNT('SELECT 1 FROM GLS_RQ_EXCH_CUR_MST WHERE  ROWNUM<=1 ');
      V_SQ_TYP:=IAS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_GL','nvl(EXCHHG_CUR_SEQ,0)',' Where  ROWNUM<=1  ') ;
       Begin
                     Ias_Gen_Pkg.Get_Fields(P_YBP,'GLS_RQ_EXCH_CUR_MST',' WHERE  NVL(PRCSSD_FLG,0)= 0 ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'GLS_RQ_EXCH_CUR_DTL',' WHERE DOC_SRL IN (SELECT DOC_SRL FROM GLS_RQ_EXCH_CUR_MST ) ');
                      Ias_Gen_Pkg.Get_Fields(P_YBP,'S_APPRVD_MOV',' WHERE DOC_SER IN (SELECT DOC_SRL FROM GLS_RQ_EXCH_CUR_MST ) ');
      Exception When Others Then
      End;
        BEGIN
          Execute Immediate('ALTER TABLE GLS_RQ_EXCH_CUR_DTL DISABLE CONSTRAINT FK_GLS_RQ_EXCH_CUR_DTL'); 
          Execute Immediate('ALTER TABLE GLS_RQ_EXCH_CUR_DTL DISABLE CONSTRAINT PK_GLS_RQ_EXCH_CUR_DTL'); 
          Execute Immediate('ALTER TABLE GLS_RQ_EXCH_CUR_MST DISABLE  CONSTRAINT PK_GLS_RQ_EXCH_CUR_MST');  
        Exception When Others Then
        End;
      Begin
             Update GLS_RQ_EXCH_CUR_MST M Set M.BRN_YEAR      = P_BRN_YEAR,
             Update GLS_RQ_EXCH_CUR_DTL M Set M.BRN_YEAR  = P_BRN_YEAR,
             Update S_APPRVD_MOV M Set M.BRN_YEAR  = P_BRN_YEAR
              WHERE DOC_SER IN (SELECT DOC_SRL FROM GLS_RQ_EXCH_CUR_MST );                                                                       
      Exception When Others Then
      End;
      BEGIN
          Execute Immediate('UPDATE '||P_YBP||'.GLS_RQ_EXCH_CUR_MST
          WHERE DOC_SRL IN (SELECT DOC_SRL FROM GLS_RQ_EXCH_CUR_MST)');  
      Exception When Others Then
      End;
              Begin
                     Update GLS_RQ_EXCH_CUR_MST M Set M.DOC_SRL  = P_BRN_YEAR||SUBSTR(M.DOC_SRL,5)
                         where DOC_SRL IN (SELECT DOC_SRL FROM GLS_RQ_EXCH_CUR_MST where   MOVD_YR=1);                     
                     Update S_APPRVD_MOV M Set M.DOC_SER  =P_BRN_YEAR||SUBSTR(M.DOC_SER,5)
                      WHERE DOC_SER IN (SELECT DOC_SRL FROM GLS_RQ_EXCH_CUR_MST where   MOVD_YR=1);   
                       Update GLS_RQ_EXCH_CUR_MST M Set M.DOC_SRL   = P_BRN_YEAR||SUBSTR(M.DOC_SRL,5)
                          WHERE   MOVD_YR=1 ;                                                                      
              Exception When Others Then
              End;
           Cursor C_Udt Is Select 102    Doc_Typ,
                       From GLS_RQ_EXCH_CUR_MST M
                      Order By M.Brn_No,
     Begin                                              
                Update GLS_RQ_EXCH_CUR_DTL
                  Where DOC_SRL = I.Doc_Srl_YR;
                 Update GLS_RQ_EXCH_CUR_MST
                    Where Doc_Srl_YR = I.Doc_Srl_YR;   
                 Update S_Apprvd_Mov
                    Where Doc_Ser = I.Doc_Srl_YR
      Exception When Others Then
      End;
        BEGIN
          Execute Immediate('ALTER TABLE GLS_RQ_EXCH_CUR_MST ENABLE  CONSTRAINT PK_GLS_RQ_EXCH_CUR_MST'); 
          Execute Immediate('ALTER TABLE GLS_RQ_EXCH_CUR_DTL ENABLE CONSTRAINT FK_GLS_RQ_EXCH_CUR_DTL'); 
          Execute Immediate('ALTER TABLE GLS_RQ_EXCH_CUR_DTL ENABLE CONSTRAINT PK_GLS_RQ_EXCH_CUR_DTL');  
        Exception When Others Then 
        End;
Exception When Others Then
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
CREATE OR REPLACE PACKAGE GLS_XML_PKG AS
     FUNCTION GET_JRNLDOCTYP_IMPRT_TO RETURN NUMBER;   
     FUNCTION GET_SLCT_AS_XML(P_SYS_NO         Number  Default 30                           
       PROCEDURE GET_EXTRCT_XML(P_XML IN VARCHAR2, P_XML_OUT OUT VARCHAR2);
CREATE OR REPLACE Package Body GLS_Xml_Pkg as
    FUNCTION GET_JRNLDOCTYP_IMPRT_TO RETURN NUMBER IS
    BEGIN
    FUNCTION GET_SLCT_AS_XML(P_SYS_NO         Number  Default 30                           
         DBMS_XMLGEN.GetXml (  'SELECT  '||Nvl(P_SYS_NO,0)        ||' SYS_NO,'
                                      FROM  Dual '  );   
    Exception When Others Then
    Procedure GET_Extrct_XML(P_XML        IN   VARCHAR2,P_XML_out         out  VARCHAR2)  Is
    BEGIN
                        ( SELECT           EXTRACTVALUE (VALUE (XMLMSTDMY), '*/SYS_NO            ') AS  SYS_NO
                              FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE,'/ROWSET/ROW'))) XMLMSTDMY)
                    BEGIN                 --(2)
                                   P_Xml_out := DBMS_XMLGEN.GetXml (' Select '''||Nvl(V_Msg_No,'005')  ||''' MSGNO  ,'''
                                                                                 ||Nvl(V_Msg_Txt,' ')   ||''' MSGTXT  '  ||' From Dual');                                  
                                 --    P_Xml_out := DBMS_XMLGEN.GetXml (' Select '''||Nvl(V_Msg_No,V_Rslt)  ||''' MSGNO  ,'''
                                  --                                               ||Nvl(GLS_JRNL_TRNS_PKG.Get_lastError_msg(),' ')   ||''' MSGTXT  '  ||' From Dual');                                  
                    EXCEPTION 
                    END; --(1)
     Exception When Others Then
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
CREATE TABLE IAS_DFLT_DATA.GLS_ACCNT_DFLT_MST 
CREATE TABLE IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL 
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
CREATE OR REPLACE PACKAGE Ias_Report_Pkg AS
    Function    Get_Rep_Para    (   P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    Function    Get_Priv_Rep_Para  (P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    PROCEDURE Get_Priv_Rep_Name ;                                    
    PROCEDURE Get_Priv_Rep_Name_Inv ;                                    
    PROCEDURE   Get_Rep_Head ;                                    
    Function    Get_Tbl_Nm_Mst  ( P_Doc_Type In Number )  Return Varchar2  ;
    Function    Get_Tbl_Nm_Mst_Inv  ( P_Doc_Type In Number )  Return Varchar2  ;                                                
    Function    Get_Tbl_Nm_Dtl  ( P_Doc_Type In Number )  Return Varchar2 ;   
    Function    Get_Tbl_Nm_Dtl_Inv  ( P_Doc_Type In Number )  Return Varchar2 ;   
  Procedure Get_Clmn_Name(    P_Doc_Type      In  Out Number  ,
  Function    Get_Clmn_Labl(  P_TBLFLD_NAME   In  VarChar2    ,
  Function    Get_Clmn_Type(  P_TBLFLD_NAME   In  VarChar2    ,
CREATE OR REPLACE PACKAGE Body Ias_Report_Pkg AS
    Function    Get_Rep_Para    (   P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    BEGIN
       Select Nvl(ALLOW_CALL_REP_BTN,0) ,Nvl(HIDE_COST,0),Nvl(ALLOW_SHOW_JRNL,0)
            Into CALL_BTN,HID_COST,V_ALLOW_SHOW_JRNL From PRIVILEGE_FIXED
                Where U_ID=USER_NO;
    Exception When Others Then
    BEGIN
    Exception When Others Then
        Begin
            Select Decode(P_DOC_TYPE,
                          )    Into  G_DOC_TYPE From Dual;
        Exception When others then
        End; 
    BEGIN
    Exception When Others Then
            Begin
                Select 
                From dual;
            Exception When Others Then
            End;
 Function    Get_Priv_Rep_Para  (P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    BEGIN
    Exception When Others Then
    BEGIN
       Select Nvl(ALLOW_CALL_REP_BTN,0) ,Nvl(HIDE_COST,0),Nvl(ALLOW_SHOW_JRNL,0)
            Into CALL_BTN,HID_COST,V_ALLOW_SHOW_JRNL From PRIVILEGE_FIXED
                Where U_ID=USER_NO;
    Exception When Others Then
    BEGIN
    Exception When Others Then
            Begin
                Select 
                From dual;
            Exception When others then
            End;
PROCEDURE Get_Priv_Rep_Name Is    
    Begin
   -- select doc_typ||','||form_no||',' from form_detail where doc_typ is not null and SCR_TYP=3 and SCR_ORGNL is null
         --- order by doc_typ,form_no 
        Select nvl(VwRep_flag,0),nvl(Print_flag,0) Into VwRep,Prnt
            From Privilege 
                Where U_id=G_Usr_No
    Exception When others then
    End; 
    Begin
       /*2003 FROM HPS_PST_RNT MB ,HPS_ADMSON_MST MR
 2004 FROM HPS_RM_PYMNT MB ,HPS_ADMSON_MST MR 
 2005  FROM HPS_RM_PYMNT MB ,HPS_ADMSON_MST MR
 2006 FROM HPS_RM_DISC MB ,HPS_ADMSON_MST MR
        Select Decode(G_DOC_TYPE,
                  Into V_REP_NM From Dual;
    Exception When others then
    End; 
PROCEDURE Get_Priv_Rep_Name_Inv Is    
            Begin
                Begin
                    Select nvl(VwRep_flag,0),nvl(Print_flag,0) Into VwRep,Prnt
                        From Privilege 
                            Where U_id=G_Usr_No
                Exception When others then
                End; 
                Begin
                    Select Decode(G_DOC_TYPE,
                              Into V_REP_NM From Dual;
                Exception When others then
                End; 
PROCEDURE Get_Rep_Head Is                                   
    BEGIN
        Select nvl(Head_type,1) Into v_Head_Type
          From Ias_Para_Gen;
     Exception When Others Then 
    END;
        Begin
            Select  Decode(G_Lang_no,1,CMP_LNAME,CMP_FNAME),
            From S_Brn 
                Where Brn_No=G_BRN_No;
        Exception When others then
        End; 
        Begin
            Select  Decode(G_Lang_no,1,CMP_ANAME,CMP_ENAME),
            From IAS_USER_HEAD
                Where U_id=G_Usr_No;
        Exception  
            Begin
            Select  Decode(G_Lang_no,1,CMP_LNAME,CMP_FNAME),
                From S_Brn 
                    Where Brn_No=G_BRN_No And RowNum<=1;
            Exception When others then
            End; 
        End; 
    Function    Get_Tbl_Nm_Mst  ( P_Doc_Type In Number )  Return Varchar2 Is
     Begin
    Function    Get_Tbl_Nm_Dtl  ( P_Doc_Type In Number )  Return Varchar2 Is
     Begin
Function    Get_Tbl_Nm_Mst_Inv  ( P_Doc_Type In Number )  Return Varchar2 Is
 Begin
Function    Get_Tbl_Nm_Dtl_Inv  ( P_Doc_Type In Number )  Return Varchar2 Is
 Begin
  Procedure Get_Clmn_Name(    P_Doc_Type      In  Out Number  ,
Function    Get_Clmn_Labl(  P_TBLFLD_NAME   In  VarChar2    ,
    Begin
        Select 
            Into Cment  From User_Col_Comments
            Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn;
    Exception When Others Then
        Begin
            Select 
                Into Cment  From User_Col_Comments
                Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
        Exception When Others Then
            Begin
                Select 
                    Into Cment  From User_Col_Comments
                    Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
            Exception When Others Then
                Begin
                    Select  Comments 
                        Into Cment From User_Col_Comments
                        Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
                Exception When Others Then
                End;
            End;
        End;
    End;
    Function    Get_Clmn_Type(  P_TBLFLD_NAME   In  VarChar2    ,
    Begin
        Select  Data_Type   ,   Data_Length 
            From USER_TAB_COLS
                Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  ;
    Exception When Others Then 
        Begin
            Select  Data_Type   ,   Data_Length 
                From USER_TAB_COLS
                    Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                    And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  
        Exception When Others Then 
            Begin
                Select  Data_Type    
                    From USER_TAB_COLS
                        Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                        And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  
            Exception When Others Then 
            End;
        End;
    End;
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
CREATE OR REPLACE PACKAGE  Ias_Report_Pkg AS
    Function    Get_Rep_Para    (   P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    Function    Get_Priv_Rep_Para  (P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    PROCEDURE Get_Priv_Rep_Name ;                                    
    PROCEDURE Get_Priv_Rep_Name_Inv ;                                    
    PROCEDURE   Get_Rep_Head ;                                    
    Function    Get_Tbl_Nm_Mst  ( P_Doc_Type In Number )  Return Varchar2  ;
    Function    Get_Tbl_Nm_Mst_Inv  ( P_Doc_Type In Number )  Return Varchar2  ;                                                
    Function    Get_Tbl_Nm_Dtl  ( P_Doc_Type In Number )  Return Varchar2 ;   
    Function    Get_Tbl_Nm_Dtl_Inv  ( P_Doc_Type In Number )  Return Varchar2 ;   
  Procedure Get_Clmn_Name(    P_Doc_Type      In  Out Number  ,
  Function    Get_Clmn_Labl(  P_TBLFLD_NAME   In  VarChar2    ,
  Function    Get_Clmn_Type(  P_TBLFLD_NAME   In  VarChar2    ,
CREATE OR REPLACE PACKAGE Body  Ias_Report_Pkg AS
    Function    Get_Rep_Para    (   P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    BEGIN
       Select Nvl(ALLOW_CALL_REP_BTN,0) ,Nvl(HIDE_COST,0),Nvl(ALLOW_SHOW_JRNL,0)
            Into CALL_BTN,HID_COST,V_ALLOW_SHOW_JRNL From PRIVILEGE_FIXED
                Where U_ID=USER_NO;
    Exception When Others Then
    BEGIN
    Exception When Others Then
        Begin
            Select Decode(P_DOC_TYPE,
                          )    Into  G_DOC_TYPE From Dual;
        Exception When others then
        End; 
    BEGIN
    Exception When Others Then
            Begin
                Select 
                From dual;
            Exception When Others Then
            End;
 Function    Get_Priv_Rep_Para  (P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
            BEGIN
    BEGIN
    Exception When Others Then
    BEGIN
       Select Nvl(ALLOW_CALL_REP_BTN,0) ,Nvl(HIDE_COST,0),Nvl(ALLOW_SHOW_JRNL,0)
            Into CALL_BTN,HID_COST,V_ALLOW_SHOW_JRNL From PRIVILEGE_FIXED
                Where U_ID=USER_NO;
    Exception When Others Then
    BEGIN
    Exception When Others Then
       BEGIN
                 Select 1 Into V_CNT
       From ias_sys.GNR_DDC_TBL M
      Where M.DOC_TYP=G_DOC_TYPE
               EXCEPTION WHEN NO_DATA_FOUND THEN
                   BEGIN 
                               SELECT SYS_CODE||'-'||NOTES INTO V_SYS_NM
                               FROM S_ERP_SYSTEM
                               WHERE SYS_NO=F_SYS_NO
                   EXCEPTION WHEN OTHERS THEN 
            Begin
                Select 
                From dual;
            Exception When others then
            End;
PROCEDURE Get_Priv_Rep_Name Is    
    Begin
                                       -- select doc_typ||','||form_no||',' from form_detail where doc_typ is not null and SCR_TYP=3 and SCR_ORGNL is null
                                 --- order by doc_typ,form_no 
        Select nvl(VwRep_flag,0),nvl(Print_flag,0) Into VwRep,Prnt
            From Privilege D,ias_sys.GNR_DDC_TBL M
                Where M.FORM_NO=D.FORM_NO
    Exception When others then
    End; 
    Begin
       /*2003 FROM HPS_PST_RNT MB ,HPS_ADMSON_MST MR
 2004 FROM HPS_RM_PYMNT MB ,HPS_ADMSON_MST MR 
 2005  FROM HPS_RM_PYMNT MB ,HPS_ADMSON_MST MR
 2006 FROM HPS_RM_DISC MB ,HPS_ADMSON_MST MR
               BEGIN
                         SELECT 'report='||RPRT_NM||'    P_Whr=" and M.'||TBL_DOCSRL_NM||' ='||G_DOC_SER||'"' 
                         FROM ias_sys.GNR_DDC_TBL
                         WHERE DOC_TYP=G_DOC_TYPE
                     EXCEPTION WHEN OTHERS THEN
                     END;
    Exception When others then
    End; 
PROCEDURE Get_Priv_Rep_Name_Inv Is    
            Begin
                Begin
                    Select nvl(VwRep_flag,0),nvl(Print_flag,0) Into VwRep,Prnt
                        From Privilege 
                            Where U_id=G_Usr_No
                Exception When others then
                End; 
                Begin
                    Select Decode(G_DOC_TYPE,
                              Into V_REP_NM From Dual;
                Exception When others then
                End; 
PROCEDURE Get_Rep_Head Is                                   
    BEGIN
        Select nvl(Head_type,1) Into v_Head_Type
          From Ias_Para_Gen;
     Exception When Others Then 
    END;
        Begin
            Select  Decode(G_Lang_no,1,CMP_LNAME,CMP_FNAME),
            From S_Brn 
                Where Brn_No=G_BRN_No;
        Exception When others then
        End; 
        Begin
            Select  Decode(G_Lang_no,1,CMP_ANAME,CMP_ENAME),
            From IAS_USER_HEAD
                Where U_id=G_Usr_No;
        Exception  
            Begin
            Select  Decode(G_Lang_no,1,CMP_LNAME,CMP_FNAME),
                From S_Brn 
                    Where Brn_No=G_BRN_No And RowNum<=1;
            Exception When others then
            End; 
        End; 
    Function    Get_Tbl_Nm_Mst  ( P_Doc_Type In Number )  Return Varchar2 Is
     Begin
         SELECT TBL_MST_NM
           FROM ias_sys.GNR_DDC_TBL
          WHERE DOC_TYP=P_Doc_Type
         EXCEPTION 
    Function    Get_Tbl_Nm_Dtl  ( P_Doc_Type In Number )  Return Varchar2 Is
     Begin
         SELECT TBL_DTL_NM
           FROM ias_sys.GNR_DDC_TBL
          WHERE DOC_TYP=P_Doc_Type
        EXCEPTION WHEN OTHERS THEN
Function    Get_Tbl_Nm_Mst_Inv  ( P_Doc_Type In Number )  Return Varchar2 Is
 Begin
Function    Get_Tbl_Nm_Dtl_Inv  ( P_Doc_Type In Number )  Return Varchar2 Is
 Begin
  Procedure Get_Clmn_Name(    P_Doc_Type      In  Out Number  ,
Begin 
                  SELECT TBL_MST_NM 
   FROM ias_sys.GNR_DDC_TBL
                      WHERE DOC_TYP=P_Doc_Type
    EXCEPTION 
Function    Get_Clmn_Labl(  P_TBLFLD_NAME   In  VarChar2    ,
    Begin
        Select 
            Into Cment  From User_Col_Comments
            Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn;
    Exception When Others Then
        Begin
            Select 
                Into Cment  From User_Col_Comments
                Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
        Exception When Others Then
            Begin
                Select 
                    Into Cment  From User_Col_Comments
                    Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
            Exception When Others Then
                Begin
                    Select  Comments 
                        Into Cment From User_Col_Comments
                        Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
                Exception When Others Then
                End;
            End;
        End;
    End;
    Function    Get_Clmn_Type(  P_TBLFLD_NAME   In  VarChar2    ,
    Begin
        Select  Data_Type   ,   Data_Length 
            From USER_TAB_COLS
                Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  ;
    Exception When Others Then 
        Begin
            Select  Data_Type   ,   Data_Length 
                From USER_TAB_COLS
                    Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                    And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  
        Exception When Others Then 
            Begin
                Select  Data_Type    
                    From USER_TAB_COLS
                        Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                        And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  
            Exception When Others Then 
            End;
        End;
    End;
    BEGIN
    Exception When Others Then
            Begin
                Select 
                From dual;
            Exception When others then
            End;
CREATE OR REPLACE PROCEDURE  Chk_Bdgt_Blnc_Prc(P_Chk_Amt        In  number
Begin 
    Begin
    select * into Gls_Prmtrs from ias_para_gl where Rownum<=1;  
    Exception When Others Then
    End; 
        Begin
          Select Nvl(BGT_LMT_PRV,1)
            From Privilege_Fixed 
           Where u_id=P_User_No;
        Exception When Others Then
        End; 
      Begin 
   Select Round((Nvl(Amt_L,0)+Nvl(Amt_L_Add,0)+Nvl(Amt_L_Add_Mov,0)-Nvl(Amt_L_Disc,0)-Nvl(Amt_L_Disc_Mov,0)),V_Frc_no),
 From IAS_BDGT_BLNC_MST M,IAS_BDGT_BLNC_DTL D
where M.DOC_SER=D.doc_ser
  Exception when Others Then
      End;
            BEGIN
                    Select Decode(V_local_Cur,Null,Round(nvl(sum(amt),0),V_frc_no),V_local_Cur,Round(nvl(sum(amt),0),V_frc_no),Round(nvl(sum(amt_f),0),V_frc_no))
                     From Ias_Post_Dtl
                    where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
                    Select Round(nvl(sum(amt),0),V_frc_no)
                     From Ias_Post_Dtl
                    where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
               EXCEPTION WHEN OTHERS THEN
               END;
 Exception 
CREATE OR REPLACE Procedure Chk_Upd_ChqNo_Prc (P_TRS_TYP        IN Varchar2, 
     Begin
           Select 1 
             from GLS_BNK_CHQ_MST
            where bank_no  = p_bank_no
     Exception 
     End;    
                 Begin
                   Select 1 
                     from GLS_BNK_CHQ_DTL
                    where bank_no     =  P_bank_no
                 Exception 
                 End;
                 Begin
                   Select CHQ_ST ,CHQ_NO,DOC_NO_REF,DOC_TYP_REF,DOC_JV_TYP_REF,DOC_SRL_REF
                     from GLS_BNK_CHQ_DTL
                    where bank_no  = p_bank_no
                 Exception 
                 End; 
         BEGIN
                 UPDATE GLS_BNK_CHQ_DTL SET CHQ_ST         = 2,
                  WHERE Bank_No  = P_bank_no
         EXCEPTION WHEN OTHERS THEN
         END;
         BEGIN
                 UPDATE GLS_BNK_CHQ_DTL SET DOC_DATE_REF   = P_DOC_DATE,
                  WHERE Bank_No     = P_bank_no
         EXCEPTION WHEN OTHERS THEN
         END;
         BEGIN
                 UPDATE GLS_BNK_CHQ_DTL SET CHQ_ST         = 1,
                  WHERE bank_no     = p_bank_no
         EXCEPTION WHEN OTHERS THEN
         END;
  Exception 
    Exception When others then
    End; 
    Begin
       /*2003 FROM HPS_PST_RNT MB ,HPS_ADMSON_MST MR
 2004 FROM HPS_RM_PYMNT MB ,HPS_ADMSON_MST MR 
 2005  FROM HPS_RM_PYMNT MB ,HPS_ADMSON_MST MR
 2006 FROM HPS_RM_DISC MB ,HPS_ADMSON_MST MR
CREATE OR REPLACE Procedure GLS_ACCNT_DFLT_PRC is
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_MST (DOC_NO, DOC_SRL, LVL_NO, LIST_TYP, LIST_DSC_L, LIST_DSC_F) Values(1, 20201, NULL, NULL, '
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_MST(DOC_NO, DOC_SRL, LVL_NO, LIST_TYP, LIST_DSC_L, LIST_DSC_F) Values (2, 20212, NULL, NULL, '
exception when others then
BEGIN 
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
EXCEPTION WHEN OTHERS THEN
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DA
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
EXCEPTION WHEN OTHERS THEN
      EXCEPTION WHEN OTHERS THEN
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
CREATE OR REPLACE Package GLS_JRNL_TRNS_PKG  Is
 -- Created this Pakege to insert Journals from external systems . 
Procedure Get_Prmtr_Prc ( P_Lang_no 
Function Get_lastError_msg return varchar;
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
FUNCTION  Get_Jv_Sq(P_JvType_No  In Number) Return Number ;
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
Function Get_MaxDoc_No(P_Doc_Typ    In NUMBER 
Function Get_LinkDirCode(P_S_TYP        In number 
procedure Insrt_Jrs_Jrnl ( P_Doc_Typ        IN  NUMBER                                           
CREATE OR REPLACE Package Body GLS_JRNL_TRNS_PKG Is
 Function Get_lastError_msg return varchar is
  begin
 Procedure Get_Prmtr_Prc ( P_Lang_no 
 Begin
  Select Cur_code 
    From Ex_Rate 
   Where L_f=1;
  Exception When Others Then
  Begin
   Select Nvl(Ias_Para_Gen.Cc_Avail,1),Nvl(Ias_Para_Gen.USE_PROJECTS,1),Nvl(Ias_Para_Gen.USE_ACTVTY,1),Nvl(Ias_Para_Gen.Cc_Post,0),Nvl(Ias_Para_Gen.Pj_Post,0),Nvl(Ias_Para_Gen.Actv_Post,0),
   From Ias_Para_Gen,Ias_Para_Gl ,JRS_PARA,Ias_Para_AR 
   where 1=1;
   Exception 
  End;
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
    Select nvl(Sequenced,0)
      From ias_glrq_types
     where rq_type=P_TYP_NO
 Exception When Others Then 
FUNCTION  Get_Jv_Sq(P_JvType_No  In Number) Return Number Is
   Select nvl(Sequenced,0)
      From jv_types
     where jv_type=P_JvType_No;
 Exception 
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
BEGIN 
            Select nvl(Cash_Sr,0)
            From Cash_In_HAnd 
            Where Cash_In_HAnd.Cash_No=P_ac_code_dtl;     
            Select nvl(Bank_Sr,0)
             From Cash_At_Bank 
            Where Cash_At_Bank.Bank_No=P_ac_code_dtl;      
 Exception When Others Then 
 Function Get_MaxDoc_No(P_Doc_Typ    In NUMBER 
  Begin
       Select nvl(max(j_doc_no),0)+1 
         From S_JRNL_FILE_MST M
        Where BRN_NO=P_BRN_NO
  Exception When Others Then 
Function Get_LinkDirCode(P_S_TYP        In number 
BEGIN 
    Begin          
            SELECT DIR_CODE
              FROM S_DIR_CONN
             WHERE S_TYPE=P_S_TYP
    Exception when no_data_found then  
                     BEGIN 
                           INSERT INTO S_DIR_CONN(S_TYPE
                     Exception When Others Then
                     END;     
     END; 
procedure Insrt_Jrs_Jrnl ( P_Doc_Typ        IN  NUMBER     --P_DOC_TYP  BETWEEN 9000 AND 9100 THEN  or =97                                      
     BEGIN
     select BRN_USR,BRN_YEAR
     from S_BRN_USR
     WHERE BRN_YEAR=TO_NUMBER(to_char(P_Doc_Date,'YYYY')) 
     EXCEPTION WHEN nO_DATA_FOUND THEN
     END;
    V_CNT :=('SELECT 1 FROM S_JRNL_FILE_DTL WHERE DOC_SRL_REF='||P_DOC_SRL_REF||' AND RCRD_NO='||P_RCRD_NO||' AND ROWNUM<=1');
            BEGIN
    V_CNT :=('SELECT 1 FROM S_JRNL_FILE_MST WHERE DOC_SRL_REF='||P_DOC_SRL_REF||' AND ROWNUM<=1');
     Begin
       INSERT INTO  S_JRNL_FILE_MST ( DOC_TYPE
       Exception When Others Then
      END;
     CURSOR C_SRL_MST IS  SELECT J_SER,J_DOC_NO,JV_TYPE
                            FROM S_JRNL_FILE_MST
                           WHERE J_SER= V_DOC_SRL 
  Begin
   V_CNT :=('SELECT 1 FROM S_JRNL_FILE_DTL 
              --              WHERE DOC_SRL='||V_DOC_SRL||'      
           INSERT INTO  S_JRNL_FILE_DTL ( DOC_TYPE
     BEGIN
         SELECT SUM(NVL(DR_AMT,0))+SUM(NVL(CR_AMT,0)) 
           FROM S_JRNL_FILE_DTL
          WHERE J_SER=V_DOC_SRL;
     EXCEPTION WHEN OTHERS THEN
     END;
          BEGIN  
           EXCEPTION WHEN OTHERS THEN
           END;                                
   Exception When Others Then
  END;
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
Insert into IAS_DFLT_DATA.GLS_ACCNT_DFLT_DTL
CREATE OR REPLACE Package Gls_Api_Trns_Pkg  Is
 -- Created this Pakege to insert Vouchers from External Systems . 
Function Get_lastError_Msg(P_SUCCESS_FLG out NUMBER) return varchar2 ;  
Procedure Get_Prmtr_Prc ( P_Lang_no      In Pls_Integer     Default 1    
FUNCTION Get_SubDocTyp_Nm (P_Doc_Typ In Number 
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
FUNCTION  Get_Jv_Sq(P_JvType_No  In Number) Return Number ;
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
Function Get_MaxDoc_No(P_Doc_Typ    In NUMBER 
Function Get_Doc_Srl(P_Doc_Typ    In NUMBER 
Procedure Check_Due_Date(P_Cheq_Typ  number
 procedure Check_Erp_system_level_Prc(P_USR_NO           IN  NUMBER  
PROCEDURE Check_Existance(P_Usr_No   in Number
 PROCEDURE CHK_AC_Lmt( P_usr_no         Number
 procedure Chck_Gnrl_Acnt_level_Prc(P_USR_NO           IN  NUMBER  
Procedure Chk_Jrnl_Post(P_Lng_No  NUMBER
PROCEDURE Crdt_Card_info_Prc( P_CrD_Card_No            CREDIT_CARD_TYPES.CR_CARD_NO%TYPE
PROCEDURE GET_CRDTCARD_COMM_SUM_PRCSS(P_DOC_SRL       NUMBER                                    
Procedure Insrt_Rcvble_Vchr ( P_USR_NO          IN  NUMBER  
 Procedure Insrt_Paymnt_Vchr ( P_USR_NO          IN  NUMBER  
 FUNCTION Get_RcvbleVchr_AS_XML( P_USR_NO           IN  NUMBER  
Procedure Set_RcvbleVchr_Extrct_XML(P_XML        IN   VARCHAR2,P_XML_out         out  VARCHAR2);
Procedure Insrt_Rcvble_Vchr_Test;
Procedure Insrt_Paymnt_Vchr_Test;
CREATE OR REPLACE Package Body Gls_Api_Trns_Pkg Is
 Function Get_lastError_Msg(P_SUCCESS_FLG  out NUMBER) return varchar2 is
  begin
 Procedure Get_Prmtr_Prc ( P_Lang_no      In Pls_Integer     Default 1    
      Begin
           Select account_type Into V_Ac_Sub   From account_types where affected_by_trans=1 ;
      Exception 
      End;
  Begin
    Select Report_Type Into V_Ac_Bdgt_Rprt  From Account_Report_Type 
     Where Nvl(Report_Bs,0)=1; 
  Exception 
  End; 
   Begin  
      select * into Gnr_Prmtrs from ias_para_gen where Rownum<=1;
      select * into Gls_Prmtrs from ias_para_gl where Rownum<=1;
      select * into Ars_Prmtrs from ias_para_Ar where Rownum<=1;
      select * into Aps_Prmtrs from ias_para_Ap where Rownum<=1;
      select * into TRNS_PRVLGS from Privilege_Fixed where U_Id=V_Usr_No  AND rownum<=1;
   Exception 
  End;  
    Begin
:=YS_GEN_PKG.GET_FLD_VALUE('IAS_PARA_LGHT','nvl(Head_Office,0)',' Where 1=1 ');
         Exception 
         End;    
         Begin
:=YS_GEN_PKG.GET_FLD_VALUE('REM_PARA','nvl(USE_AH,0)',' Where 1=1 ');
:=YS_GEN_PKG.GET_FLD_VALUE('REM_PARA','nvl(PST_CUST_TRNS_ONCE,0)',' Where 1=1 ');
         Exception 
         End; 
         BEGIN
:=YS_GEN_PKG.GET_FLD_VALUE('PMS_PARA','nvl(USE_TAX_IN_ADVNCE_PYMNT,0)',' Where 1=1 ');
:=YS_GEN_PKG.GET_FLD_VALUE('PMS_PARA','nvl(INSTL_PYMNT_GLS,0)',' Where 1=1 ');
         EXCEPTION
         END;
 FUNCTION Get_SubDocTyp_Nm (P_Doc_Typ In Number 
 Select  case when P_Lng_no=1 then Typ_L_Nm else  Typ_F_Nm end 
   From GNR_V_SUB_DOC_TYP
  Where  doc_typ=P_Doc_Typ
 Exception 
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
    Select nvl(Sequenced,0)
      From ias_glrq_types
     where rq_type=P_TYP_NO
 Exception When Others Then 
FUNCTION  Get_Jv_Sq(P_JvType_No  In Number) Return Number Is
   Select nvl(Sequenced,0)
      From jv_types
     where jv_type=P_JvType_No;
 Exception 
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
BEGIN 
            Select nvl(Cash_Sr,0)
            From Cash_In_HAnd 
            Where Cash_In_HAnd.Cash_No=P_ac_code_dtl;     
            Select nvl(Bank_Sr,0)
             From Cash_At_Bank 
            Where Cash_At_Bank.Bank_No=P_ac_code_dtl;      
 Exception When Others Then 
 PROCEDURE CHK_LC_NO(P_AC_CODE     ACCOUNT.A_CODE%TYPE
            Begin
                    Select 1 
                      From Lc_master 
                     Where Lc_No=P_Lc_No
                Exception When Others Then 
                End;
 Function Get_MaxDoc_No(P_Doc_Typ    In NUMBER 
  Begin
                        Begin
                            Select Nvl(Max(Voucher_No),0) +1 
                            From Vouchers
                            Where Voucher_Type=1 
                            And Cash_No In (Select Cash_No From Cash_In_HAnd Where nvl(Cash_Sr,0)=V_Doc_SQ); 
                        Exception 
                        End;                     
                        Begin      -- THIS sequence by col_no added by murad algarrash in 10/12/2020    
                              SELECT Nvl(Max(Voucher_No),0) +1 
                                FROM Vouchers M
                                WHERE Voucher_Type=1 
                                And Cash_No =P_AC_CODE_DTL --In (Select Cash_No From Cash_In_HAnd Where nvl(Cash_Sr,0)=v_sr)
                        Exception 
                        End;       
                        Begin  -- THIS sequence by REP_CODE added by murad algarrash in 10/12/2020 
                                Select Nvl(Max(Voucher_No),0) +1 
                                    From Vouchers M
                                    Where Voucher_Type=1 
                                    And Cash_No =P_AC_CODE_DTL -- In (Select Cash_No From Cash_In_HAnd Where nvl(Cash_Sr,0)=v_sr)
Exception 
                        End; 
     BEGIN
               Select Nvl(Max(Voucher_No),0) +1 
                            From Vouchers M
                            Where Voucher_Type=1 
                            And Cash_No In (Select Bank_No From Cash_At_Bank Where nvl(Bank_Sr,0)=V_Doc_SQ);
               Exception 
                        End;   
                        BEGIN 
                               Select Nvl(Max(Voucher_No),0) +1 
                                From Vouchers M
                               Where Voucher_Type=1 
                                 And Cash_No =P_AC_CODE_DTL -- In (Select Bank_No From Cash_At_Bank Where nvl(Bank_Sr,0)=v_sr)
                        Exception 
                        End;  
                        BEGIN
                               Select Nvl(Max(Voucher_No),0) +1 
                                From Vouchers M
                               Where Voucher_Type=1 
                                 And Cash_No =P_AC_CODE_DTL -- (Select Bank_No From Cash_At_Bank Where nvl(Bank_Sr,0)=v_sr)
                        Exception 
                        End;          
                    Begin
                        Select Nvl(Max(Voucher_No),0) +1 
                        From Vouchers
                        Where Voucher_Type=1 
                        And Cash_No In (Select Cash_No From Cash_In_HAnd Where nvl(Cash_Sr,0)=V_Doc_SQ); 
                    Exception 
                    End;                     
                    Begin
                        Select Nvl(Max(Voucher_No),0) +1 
                        From Vouchers
                        Where Voucher_Type=1 
                        And Cash_No In (Select Bank_No From Cash_At_Bank Where Bank_Sr=V_Doc_SQ);
                    Exception 
                    End;  
  Exception When Others Then 
  Function Get_Doc_Srl(P_Doc_Typ    In NUMBER 
  Begin
                Begin
                    Begin
                      Select Col_Ser InTo V_Col_Ser From Collerctor Where Col_No=P_Col_No And RowNUm<=1;
                    Exception When Others Then  
                    End;    
                End;    
                Begin
                    Begin
                      Select REP_SER InTo V_Rep_Ser From sales_man Where reprs_code=P_REP_CODE And RowNUm<=1;
                    Exception When Others Then  
                    End;    
                End;    
  Exception When Others Then 
Procedure Check_Due_Date(P_Cheq_Typ  number
             A :=Ias_Gen_Pkg.Get_Cnt('Select 1  
                                           From S_PRD_DTL 
                                     Where '||''''||P_due_date||''''||' Between  F_Date And T_Date 
 procedure Check_Erp_system_level_Prc(P_USR_NO          IN  NUMBER  
 Begin
     BEGIN
select BRN_USR,BRN_YEAR
     from S_BRN_USR
     WHERE BRN_YEAR=TO_NUMBER(to_char(P_Doc_Date,'YYYY')) 
     EXCEPTION WHEN nO_DATA_FOUND THEN
     END;
              V_cnt:=ys_gen_pkg.get_cnt('Select 1 
                                            From S_Brn 
                                            where brn_no='||P_brn_no||'
                                                               Or Exists (select 1 From S_Brn_Usr_Priv
                                                                          Where U_Id = '||P_USR_NO||'                            
 Exception When Others Then 
PROCEDURE Check_Existance(P_Usr_No    in Number
 Select 1 Into Cnt 
   From account 
  where a_code=P_Itmcode
    and a_s_m=(Select 
account_type from account_types where nvl(affected_by_trans,0)=1)
    Select 1 Into Cnt from account 
     where a_code=P_Itmcode
 Select 1 
   From account 
  where a_code=P_Itmcode
    and a_s_m <> (Select account_type from account_types where nvl(affected_by_trans,0)=1)
 Select 1 
   From account 
  where a_code=P_Itmcode
 Select 1 
   From S_Brn 
  where Brn_No=P_Itmcode
    --Begin
     Select 1 
       From Cost_Centers 
      Where cc_code=P_Itmcode
        and C_S_M=( Select cc_type from cost_center_types where nvl(affected_by_trans,0)=1)
            Select 1 
              From cost_centers 
             where cc_code=P_Itmcode
     Select 1 
       From Cost_Centers 
      Where cc_code=P_Itmcode
     Select 1 
       From IAS_PROJECTS 
      Where PJ_NO=P_Itmcode
            Select 1 
              From IAS_PROJECTS 
             where PJ_NO=P_Itmcode
     Select 1 
       From IAS_PROJECTS 
      Where PJ_NO=P_Itmcode
 Select 1 Into Cnt 
   From Cash_In_Hand 
  where cash_no=P_Itmcode
       Select 1 Into Cnt 
         From Cash_In_Hand
     where Cash_no=P_Itmcode
 Select 1 Into Cnt from Cash_At_Bank
  where Bank_no=P_Itmcode
       Select 1 Into Cnt 
         From Cash_At_Bank
     where Bank_no=P_Itmcode
 Select 1 
   From CUSTOMER_CLASS
  where C_CLASS=P_Itmcode
 Select 1 
   From CUSTOMER_DEGREE
  where C_DEGREE=P_Itmcode
 Select 1 
   From VENDOR_CLASS
  where V_CLASS=P_Itmcode
 Select 1 Into Cnt from Customer 
  where c_code=P_Itmcode
    Select 1 Into Cnt from customer 
     where c_code=P_Itmcode
 Select 1 Into Cnt from v_details 
  where v_code=P_Itmcode
    Select 1 Into Cnt from v_details 
     where v_code=P_Itmcode
 Select 1 Into Cnt from CNTRY
  where CNTRY_NO=P_Itmcode
 Select 1 Into Cnt from Cities
  where City_No=P_Itmcode
 Select 1 
   From Credit_Card_Types
  where Cr_Card_No=P_Itmcode
 Select 1 Into Cnt from Regions
  where r_code=P_Itmcode
 Select 1 Into Cnt from Sales_Man 
  where REPRS_CODE=P_Itmcode
    Select 1 Into Cnt from Sales_Man 
     where Reprs_Code=P_Itmcode
 Select 1 Into Cnt from Collerctor 
  Where Col_no=P_Itmcode
    Select 1 Into Cnt from Collerctor
     where Col_no=P_Itmcode
 Select 1 Into Cnt from WareHouse_Details 
  Where w_code=P_Itmcode
    Select 1 Into Cnt from WareHouse_Details 
     where w_code=P_Itmcode
 Select 1 Into Cnt from Ias_Provinces
  Where Prov_No=P_Itmcode
 Select 1 Into Cnt from Customer_Group
  Where C_group_Code=P_Itmcode
 Select 1 Into Cnt from Item_Types
  Where Type_Of_Item=P_Itmcode
 Select 1 
   From WAREHOUSE_GROUP
  Where WHG_CODE=P_Itmcode
 Select 1 Into Cnt from Group_Details 
  Where G_code=P_Itmcode
    Select Conn_Itm_Act_By_Usr_Priv 
     From Ias_Para_Inv ;
Exception
 Select 1 Into Cnt from Ias_Itm_Mst 
  where I_code=P_Itmcode
Exception 
Exception 
 PROCEDURE CHK_AC_Lmt( P_usr_no         Number
 procedure Chck_Gnrl_Acnt_level_Prc(P_USR_NO           IN  NUMBER  
 Begin
      Begin
           exception when others then
           End; 
         Begin
        Exception when others then
                BEGIN 
                EXCEPTION WHEN OTHERS THEN               
            BEGIN    
            EXCEPTION WHEN OTHERS THEN               
            BEGIN
            Exception 
            End;
                BEGIN
                Exception 
                End;
                    BEGIN
                    Exception 
                    End;       
                Begin
                exception when others then
                BEGIN     
                EXCEPTION WHEN OTHERS THEN
               END;   
  Exception When Others Then 
Procedure Chk_Jrnl_Post(P_Lng_No  NUMBER
 BEGIN
                    Begin
                     Select 1 InTo V_Cnt From
                     (Select V_Ser From vouchers Where V_Ser = P_DOC_SRL And Nvl(Stand_by,0)=0
                Select Doc_Ser  From Ias_Post_Dtl Where Doc_Ser = P_DOC_SRL);
                    Exception
                    End;
PROCEDURE Crdt_Card_info_Prc( P_CrD_Card_No            CREDIT_CARD_TYPES.CR_CARD_NO%TYPE
    Begin   
 Select Count(1) Into V_cnt from Credit_Card_Types
  Where Cr_Card_No=P_CrD_Card_No 
    EXCEPTION WHEN OTHERS THEN
   Begin
     Select CASE WHEN P_Lng_No=1 THEN 
       from ias_cr_card_types M,Credit_Card_Types D
      Where  M.cr_card_type=D.cr_card_type
   Exception when Others then
   End;   
PROCEDURE GET_CRDTCARD_COMM_SUM_PRCSS(P_DOC_SRL       NUMBER                                    
        cursor x is SELECT M.VOUCHER_DATE
                 FROM  vouchers m,VOUCHER_DETAIL D
                 WHERE M.V_SER=D.V_SER
                 GROUP BY  M.VOUCHER_DATE
         For J IN (SELECT   D.CrD_Card_No
                     FROM   VOUCHER_DETAIL D
                     WHERE  D.V_SER=I.V_SER
            BEGIN --------------------------------------------------
            UPDATE VOUCHER_DETAIL  
             WHERE V_SER=I.V_SER
            EXCEPTION WHEN OTHERS THEN
            BEGIN --------------------------------------------------
            UPDATE VOUCHER_DETAIL  
             WHERE V_SER=I.V_SER
            EXCEPTION WHEN OTHERS THEN
           BEGIN --------------------------------------------------
            UPDATE VOUCHER_DETAIL 
             WHERE V_SER=I.V_SER
            EXCEPTION WHEN OTHERS THEN
                 BEGIN --------------------------------------------------
                    UPDATE VOUCHER_DETAIL 
                     WHERE V_SER=I.V_SER
                    EXCEPTION WHEN OTHERS THEN
 exception when others then 
Procedure Insrt_Rcvble_Vchr ( P_USR_NO          IN  NUMBER  
   begin
   exception when others then
             V_CNT :=('SELECT 1 FROM voucher_detail WHERE DOC_SRL_REF='||P_DOC_SRL_REF||' AND RCRD_NO='||P_RCRD_NO||' AND ROWNUM<=1');
    --V_CNT :=('SELECT 1 FROM VOUCHERS WHERE V_SER='||P_
     Begin
       BEGIN
       EXCEPTION WHEN OTHERS THEN 
      BEGIN
        EXCEPTION WHEN OTHERS THEN 
       INSERT INTO  VOUCHERS    ( voucher_type
      Exception When Others Then
      END;
     CURSOR C_SRL_MST IS  SELECT V_SER,voucher_NO,VOUCHER_PAY_TYPE
                            FROM vouchers
                           WHERE V_SER= V_DOC_SRL 
  Begin
   V_CNT :=('SELECT 1 FROM VOUCHER_DETAIL 
              --              WHERE DOC_SRL='||V_DOC_SRL||'  
          BEGIN
          INSERT INTO  VOUCHER_DETAIL ( VOUCHER_TYPE
        Exception When Others Then
                 /*SELECT SUM(NVL(AC_AMT,0))
                   FROM VOUCHER_DETAIL
                  WHERE V_SER=V_DOC_SRL;
   Exception When Others Then
  END; 
            BEGIN
            EXCEPTION WHEN OTHERS THEN
            END; 
        BEGIN  
                begin
                Exception when others then
                End;  
      EXCEPTION WHEN OTHERS THEN
           END;                                
  Exception When Others Then
Procedure Insrt_Paymnt_Vchr ( P_USR_NO          IN  NUMBER  
   begin
   exception when others then
    --V_CNT :=('SELECT 1 FROM VOUCHERS WHERE V_SER='||P_DOC_SRL_REF||' AND ROWNUM<=1');
     Begin
       BEGIN
       EXCEPTION WHEN OTHERS THEN 
      BEGIN
        EXCEPTION WHEN OTHERS THEN 
       INSERT INTO  VOUCHERS    ( voucher_type
      Exception When Others Then
      END;
     CURSOR C_SRL_MST IS  SELECT V_SER,voucher_NO,VOUCHER_PAY_TYPE
                            FROM vouchers
                           WHERE V_SER= V_DOC_SRL 
  Begin
   V_CNT :=('SELECT 1 FROM VOUCHER_DETAIL 
              --              WHERE DOC_SRL='||V_DOC_SRL||'  
          BEGIN
          INSERT INTO  VOUCHER_DETAIL ( VOUCHER_TYPE
        Exception When Others Then
                 /*SELECT SUM(NVL(AC_AMT,0))
                   FROM VOUCHER_DETAIL
                  WHERE V_SER=V_DOC_SRL;
   Exception When Others Then
  END; 
        BEGIN  
                begin
                Exception when others then
                End;  
      EXCEPTION WHEN OTHERS THEN
           END;                                
  Exception When Others Then
FUNCTION Get_RcvbleVchr_AS_XML( P_USR_NO           IN 
         DBMS_XMLGEN.GetXml (  'SELECT  '||Nvl(P_USR_NO,0)        ||' AD_U_ID,'
                                      FROM  Dual '  );   
    Exception When Others Then
Procedure Set_RcvbleVchr_Extrct_XML(P_XML        IN   VARCHAR2,P_XML_out         out  VARCHAR2)  Is
    BEGIN
              ( SELECT           EXTRACTVALUE (VALUE (XMLMSTDMY), '*/AD_U_ID            ') AS  AD_U_ID
                              FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE,'/ROWSET/ROW'))) XMLMSTDMY)
                    BEGIN                 --(2)
                                   P_Xml_out := DBMS_XMLGEN.GetXml (' Select '''||Nvl(V_SUCCESS_FLG,'0')  ||''' MSGNO  ,'''
                                                                                 ||Nvl(V_Msg_Txt,' ')   ||''' MSGTXT  '  ||' From Dual');                                  
                                 --    P_Xml_out := DBMS_XMLGEN.GetXml (' Select '''||Nvl(V_Msg_No,V_Rslt)  ||''' MSGNO  ,'''
                                  --                                               ||Nvl(GLS_JRNL_TRNS_PKG.Get_lastError_msg(),' ')   ||''' MSGTXT  '  ||' From Dual');                                  
                    EXCEPTION 
                    END; --(1)
   Exception When Others Then
 Procedure Insrt_Rcvble_Vchr_Test is 
 Procedure Insrt_Paymnt_Vchr_Test is 
CREATE OR REPLACE PACKAGE GLS_LMT_PKG as
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
 PROCEDURE CHK_AC_Lmt ( P_DR_CR          In  number DEFAULT 1                               ,  --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
 FUNCTION GET_FCLTY_BLNC (P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
PROCEDURE GET_ACDTL_LMT_BLNC(P_DOC_DATE      In  DATE   DEFAULT YS_GEN_PKG.GET_SYSDATE          ,
FUNCTION GET_MSG_GL_LMT( P_AC_CODE       In  ACCOUNT.A_CODE%TYPE   DEFAULT NULL                     ,
 FUNCTION Check_ac_cc_pj_use_lmt (  P_lmt_type  IN  NUMBER                                    ,
CREATE OR REPLACE PACKAGE Body GLS_LMT_PKG as
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
   Begin  
      select * into Gnr_Prmtrs from ias_para_gen where Rownum<=1;
      select * into Gls_Prmtrs from ias_para_gl where Rownum<=1;
      select * into Ars_Prmtrs from ias_para_Ar where Rownum<=1;
      select * into Aps_Prmtrs from ias_para_Ap where Rownum<=1;
      select * into TRNS_PRVLGS from Privilege_Fixed where U_Id=V_Usr_No  AND rownum<=1;
   Exception 
  End; 
 PROCEDURE CHK_AC_Lmt ( P_DR_CR          In  number DEFAULT 1                               ,  --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
Begin 
        Begin
         Select Nvl(CRLIMIT_TYPE,1),CRLIMIT_PER
            From Privilege_Fixed 
           Where u_id=P_User_No;
        Exception When Others Then
        End; 
        Begin
          Select Nvl(ACC_LMT_PRV,1)
            From Privilege_Fixed 
           Where u_id=P_User_No;
        Exception When Others Then
        End; 
           BEGIN
               SELECT 1 
               FROM IAS_AC_CC_LMT 
               WHERE A_CODE=V_AC_CODE 
           EXCEPTION WHEN OTHERS THEN
            END;
        BEGIN
          SELECT COUNT(*)
           FROM IAS_AC_CC_LMT 
             where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
       EXCEPTION WHEN OTHERS THEN
        END;
            BEGIN
               Select DR_CR 
               FROM IAS_AC_CC_LMT 
                 where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_
           EXCEPTION WHEN OTHERS THEN
            END;
            BEGIN
               SELECT DR_CR 
               FROM IAS_AC_CC_LMT 
                 where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
            EXCEPTION WHEN OTHERS THEN
            END;
     -- INSERT INTO  MM(M) VALUES(V_DOCSRL);  COMMIT;
      Begin 
       Select Round(MIN_AMT,P_Frc_no),  Round(MAX_AMT,P_Frc_no),  Round(MIN_TRNS_AMT,P_Frc_no),  Round(MAX_TRNS_AMT,P_Frc_no),Round(ANULY_AMT,P_Frc_no),
           From IAS_AC_CC_LMT
          where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
      Exception when Others Then
      End;
                 BEGIN
                  UPDATE IAS_AC_CC_LMT SET FCLTY_AMT=0
                  Where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
                    EXCEPTION WHEN OTHERS THEN NULL;
                 END;
             BEGIN
             EXCEPTION WHEN OTHERS THEN
            BEGIN
             EXCEPTION WHEN OTHERS THEN
             END;  
                      BEGIN    
             EXCEPTION WHEN OTHERS THEN
     BEGIN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
BEGIN 
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
 Exception 
FUNCTION GET_FCLTY_BLNC (P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
Begin 
Exception 
PROCEDURE GET_ACDTL_LMT_BLNC(P_DOC_DATE      In  DATE   DEFAULT YS_GEN_PKG.GET_SYSDATE          ,
    V_CNT :=YS_GEN_PKG.GET_CNT('SELECT 1 FROM IAS_POST_DTL   
                                WHERE C_V_CODE IS NOT NULL 
       Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
 --Select Decode(P_cur_code,Null,nvl(sum(amt),0),V_CUR_CODE,nvl(sum(amt),0),nvl(sum(amt_f),0))
     Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From GLS_V_AC_DTL_CCPJACTV_BLNC D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
        Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_
      Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From GLS_V_AC_DTL_CCPJACTV_BLNC D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
Exception 
FUNCTION GET_MSG_GL_LMT( P_AC_CODE       In  AC
 BEGIN
  FUNCTION  Check_Ac_Cc_Pj_Use_Lmt( P_Lmt_Type  In  Number                                  ,
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Acc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Cc_Tree
            Where Ias_Cc_Tree.Cc_Tree   =   Ias_Ac_Cc_Lmt.Cc_Code
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Cc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Pj_Tree
            Where Ias_Pj_Tree.Pj_Tree   =   IAS_AC_CC_LMT.Pj_No
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Pj_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_ACTV_Tree
            Where Ias_ACTV_Tree.ACTV_Tree   =   IAS_AC_CC_LMT.ACTV_No
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_ACTV_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End; 
CREATE OR REPLACE PACKAGE  GLS_ACCNTDTL_Pkg as
 FUNCTION Get_ACCDTL_NM (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_AC_Code  (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number) RETURN VARCHAR2;
 FUNCTION Chck_ACY (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_ACY   In VARCHAR2) RETURN Number;
 FUNCTION GET_ACCDTL_BLNC(P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_ACY   In VARCHAR2) RETURN Number;
 FUNCTION Chk_Ac_ACCDTL (P_AC_code ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_Cnt_Acy (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Usr_No   In Number) RETURN NUMBER;
 FUNCTION Get_One_Acy (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Usr_no In Number) RETURN VARCHAR2; 
  FUNCTION Get_ACCNT_DTL_Brn_Conn( P_AC_Code_Dtl In GLS_ACCNT_DTL.AC_Code_Dtl%TYPE ) Return NUMBER ;
 PROCEDURE Chk_AC_CODE_DTL (  P_AC_CODE_DTL  IN GlS_ACCNT_DTL.AC_CODE_DTL%TYPE,
CREATE OR REPLACE PACKAGE Body GLS_ACCNTDTL_Pkg as
FUNCTION Get_ACCDTL_NM (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
         Select DECODE(P_Lng_no,1,Ac_Code_Dtl_L_Nm,NVL(Ac_Code_Dtl_F_Nm,Ac_Code_Dtl_L_Nm)) V_NM
           From GlS_V_ACCNT_DTL
          where Ac_Code_Dtl  = P_Ac_Code_Dtl 
 Exception 
FUNCTION Get_AC_Code  (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number) RETURN VARCHAR2 Is
  Select AC_code 
    From GlS_V_ACCNT_DTL
   where Ac_Code_Dtl=P_Ac_Code_Dtl
 Exception 
FUNCTION Chck_ACY (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_ACY   In VARCHAR2) RETURN Number Is
 Begin
 Select 1 
   From GlS_V_ACCNT_DTL_CURR
  where Ac_Code_Dtl=P_Ac_Code_Dtl
 Exception 
FUNCTION GET_ACCDTL_BLNC(P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_ACY   In VARCHAR2) RETURN Number Is
       Select nvl(Decode(Ias_Gen_Pkg.Get_Local_Cur,P_ACY,nvl(d.amt,0),nvl(d.AMT_F,0)),0)   Into v_amt
    From GlS_V_ACCNT_DTL M, IAS_V_AC_CODE_DTL_BLNC d
 where M.AC_code  = D.a_code
 Exception 
FUNCTION    Get_ACCNT_DTL_Brn_Conn( P_AC_Code_Dtl In GLS_ACCNT_DTL.AC_Code_Dtl%TYPE ) Return NUMBER Is
Select Conn_Brn_No
    From GLS_ACCNT_DTL
    where AC_Code_Dtl = P_AC_Code_Dtl and RowNum<=1;
Exception When others then
FUNCTION Chk_Ac_ACCDTL (P_AC_code ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
     BEGIN
     Select 1 Into V_Cnt From GlS_V_ACCNT_DTL
       Where AC_code =P_AC_code
       Exception
      End;
FUNCTION Get_Cnt_Acy (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Usr_No   In Number) RETURN NUMBER Is
        Begin
Select count(*) 
From GlS_V_ACCNT_DTL_CURR
                Where Ac_Code_Dtl  =P_Ac_Code_Dtl 
                  And CUR_CODE   In (Select CUR_CODE 
                                  From GlS_V_ACCNT_DTL_PRIV 
                                 Where Ac_Code_Dtl  =P_Ac_Code_Dtl 
        Exception When Others Then
        End;   
 Exception 
FUNCTION Get_One_Acy (P_Ac_Code_Dtl In varchar2,P_Ac_Dtl_Typ In Number,P_Usr_no In Number) RETURN VARCHAR2 IS
    Begin
    Select CUR_CODE 
          From GlS_V_ACCNT_DTL_PRIV 
         Where Ac_Code_Dtl  =P_Ac_Code_Dtl 
    Exception 
    End;
 Exception 
PROCEDURE Chk_AC_CODE_DTL ( P_AC_CODE_DTL  IN GlS_ACCNT_DTL.AC_CODE_DTL%TYPE,
          Select Decode(P_Lng_no,1,AC_CODE_DTL_L_NM,nvl(AC_CODE_DTL_F_NM,AC_CODE_DTL_L_NM)) , nvl(M.INACTV,0), 1 ADD_FLAG,1 VIEW_FLAG  
            From GlS_V_ACCNT_DTL M
           Where TO_CHAR(M.AC_CODE_DTL)   = TO_CHAR(P_AC_CODE_DTL)
          Select Decode(P_Lng_no,1,AC_CODE_DTL_L_NM,nvl(AC_CODE_DTL_F_NM,AC_CODE_DTL_L_NM))  , nvl(M.INACTV,0), Nvl(D.ADD_FLAG,0),Nvl(D.VIEW_FLAG,0)
            From GlS_V_ACCNT_DTL M,GlS_V_ACCNT_DTL_PRIV D
           Where M.AC_CODE_DTL = D.AC_CODE_DTL
            Select Decode(P_Lng_no,1,AC_CODE_DTL_L_NM,nvl(AC_CODE_DTL_F_NM,AC_CODE_DTL_L_NM))   , nvl(M.INACTV,0), Nvl(D.ADD_FLAG,0),Nvl(D.VIEW_FLAG,0)
                From GlS_V_ACCNT_DTL M,GlS_V_ACCNT_DTL_PRIV D
               Where M.AC_CODE_DTL = D.AC_CODE_DTL
 Exception 
                              FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE,'/ROWSET/ROW'))) XMLMSTDMY)
CREATE OR REPLACE Package GLS_DOCS_INSRT_PKG  Is
 -- Created this Pakege to insert Docs from external systems . 
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
Function Get_Flds_Tbl_Fnc(P_Tbl_Nm    In Varchar2 ) Return Varchar2 ;
PROCEDURE CRT_V_PSTNG_DOCS_PRC(P_CALL_FRM_UPDT NUMBER DEFAULT 0 );
PROCEDURE Insrt_Vchr_Mst (  P_Doc_Typ        IN  NUMBER                                            ,
  PROCEDURE Insrt_Vchr_Dtl  ( P_Doc_Typ      IN  NUMBER                                            ,
CREATE OR REPLACE Package Body GLS_DOCS_INSRT_PKG Is
Function Get_Rq_JrnlVchr_SQ(P_Doc_Type    In NUMBER 
    Select nvl(Sequenced,0)
      From ias_glrq_types
     where rq_type=P_TYP_NO
 Exception When Others Then 
Function Get_AcntDtl_SQ(P_ac_dtl_typ    In number 
BEGIN 
            Select nvl(Cash_Sr,0)
            From Cash_In_HAnd 
            Where Cash_In_HAnd.Cash_No=P_ac_code_dtl;     
            Select nvl(Bank_Sr,0)
             From Cash_At_Bank 
            Where Cash_At_Bank.Bank_No=P_ac_code_dtl;      
 Exception When Others Then 
Function Get_Flds_Tbl_Fnc (P_Tbl_Nm    In Varchar2 ) Return Varchar2 Is   
   Cursor C_Fld Is Select Column_Name From User_Tab_Columns 
                     Where Table_Name = Upper(P_Tbl_Nm) 
                      Order By Column_Id;
 Begin      
 Exception When Others Then 
PROCEDURE CRT_V_PSTNG_DOCS_PRC(P_CALL_FRM_UPDT NUMBER DEFAULT 0 )  Is 
  Cursor C_Tbl_Nm is Select  DISTINCT M.TABLE_NAME Tbl_Name From USER_TABLES M ,User_Tab_Columns D
      Where M.TABLE_NAME=D.TABLE_NAME
      AND EXISTS (SELECT TABLE_NAME FROM User_Tab_Columns
                                                     WHERE Column_Name IN('DOC_SER','BILL_SER','RT_BILL_SER','DOC_SRL','V_SER','J_SER','RET_SER')
                    AND EXISTS (SELECT TABLE_NAME FROM User_Tab_Columns
                                                 WHERE Column_Name IN('POST_DATE','PST_DATE','BILL_POST','RT_BILL_POST','VOUCHER_POST','J_POST')
      Order By M.TABLE_NAME   ;
 Begin 
       V_SqlStr1 := V_SqlStr1 || ' SELECT   '''|| J.Tbl_Name||''' TBL_NM, '||V_All_Fld||' FROM  '||J.Tbl_Name ;
 Exception When Others Then 
PROCEDURE Insrt_Vchr_Mst (  P_Doc_Typ        IN  NUMBER                                            ,
  Begin
        /*  Insert Into Gr_Note ( PI_TYPE, 
   Exception When Others Then
  END;
PROCEDURE Insrt_Vchr_Dtl ( P_Doc_Typ      IN  NUMBER                                            ,
 Begin
   /* Insert Into Gr_detail ( PI_TYPE,
   Exception When Others Then
  END;
 Begin
   /* Insert Into Gr_detail ( PI_TYPE,
CREATE OR REPLACE PACKAGE GLS_LMT_PKG as
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
 PROCEDURE CHK_AC_Lmt ( P_DR_CR          In  number DEFAULT 1                               ,  --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
 FUNCTION GET_FCLTY_BLNC (P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
PROCEDURE GET_ACDTL_LMT_BLNC(P_DOC_DATE      In  DATE   DEFAULT YS_GEN_PKG.GET_SYSDATE          ,
FUNCTION GET_MSG_GL_LMT( P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
 FUNCTION Check_ac_cc_pj_use_lmt (  P_lmt_type  IN  NUMBER                                    ,
CREATE OR REPLACE PACKAGE Body GLS_LMT_PKG as
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
   Begin  
      select * into Gnr_Prmtrs from ias_para_gen where Rownum<=1;
      select * into Gls_Prmtrs from ias_para_gl where Rownum<=1;
      select * into Ars_Prmtrs from ias_para_Ar where Rownum<=1;
      select * into Aps_Prmtrs from ias_para_Ap where Rownum<=1;
      select * into TRNS_PRVLGS from Privilege_Fixed where U_Id=V_Usr_No  AND rownum<=1;
   Exception 
  End; 
 PROCEDURE CHK_AC_Lmt ( P_DR_CR          In  number DEFAULT 1                               ,  --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
Begin 
        Begin
         Select Nvl(CRLIMIT_TYPE,1),CRLIMIT_PER
            From Privilege_Fixed 
           Where u_id=P_User_No;
        Exception When Others Then
        End; 
        Begin
          Select Nvl(ACC_LMT_PRV,1)
            From Privilege_Fixed 
           Where u_id=P_User_No;
        Exception When Others Then
        End; 
           BEGIN
               SELECT 1 
               FROM IAS_AC_CC_LMT 
               WHERE A_CODE=V_AC_CODE 
           EXCEPTION WHEN OTHERS THEN
            END;
        BEGIN
          SELECT COUNT(*)
           FROM IAS_AC_CC_LMT 
             where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
       EXCEPTION WHEN OTHERS THEN
        END;
            BEGIN
               Select DR_CR 
               FROM IAS_AC_CC_LMT 
                 where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
           EXCEPTION WHEN OTHERS THEN
            END;
            BEGIN
               SELECT DR_CR 
               FROM IAS_AC_CC_LMT 
                 where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
            EXCEPTION WHEN OTHERS THEN
            END;
     -- INSERT INTO  MM(M) VALUES(V_DOCSRL);  COMMIT;
      Begin 
       Select Round(MIN_AMT,P_Frc_no),  Round(MAX_AMT,P_Frc_no),  Round(MIN_TRNS_AMT,P_Frc_no),  Round(MAX_TRNS_AMT,P_Frc_no),Round(ANULY_AMT,P_Frc_no),
           From IAS_AC_CC_LMT
          where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
      Exception when Others Then
      End;
                 BEGIN
                  UPDATE IAS_AC_CC_LMT SET FCLTY_AMT=0
                  Where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
                EXCEPTION WHEN OTHERS THEN NULL;
                 END;
             BEGIN
             EXCEPTION WHEN OTHERS THEN
            BEGIN
             EXCEPTION WHEN OTHERS THEN
             END;  
                      BEGIN    
             EXCEPTION WHEN OTHERS THEN
     BEGIN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
BEGIN 
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
 Exception 
FUNCTION GET_FCLTY_BLNC (P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
Begin 
Exception 
PROCEDURE GET_ACDTL_LMT_BLNC(P_DOC_DATE      In  DATE   DEFAULT YS_GEN_PKG.GET_SYSDATE          ,
    V_CNT :=YS_GEN_PKG.GET_CNT('SELECT 1 FROM IAS_POST_DTL   
                                WHERE C_V_CODE IS NOT NULL 
       Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
 --Select Decode(P_cur_code,Null,nvl(sum(amt),0),V_CUR_CODE,nvl(sum(amt),0),nvl(sum(amt_f),0))
     Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From GLS_V_AC_DTL_CCPJACTV_BLNC D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
        Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
      Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From GLS_V_AC_DTL_CCPJACTV_BLNC D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
Exception 
FUNCTION GET_MSG_GL_LMT(
 BEGIN
  FUNCTION  Check_Ac_Cc_Pj_Use_Lmt( P_Lmt_Type  In  Number                                  ,
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Acc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Cc_Tree
            Where Ias_Cc_Tree.Cc_Tree   =   Ias_Ac_Cc_Lmt.Cc_Code
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Cc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Pj_Tree
            Where Ias_Pj_Tree.Pj_Tree   =   IAS_AC_CC_LMT.Pj_No
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Pj_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_ACTV_Tree
            Where Ias_ACTV_Tree.ACTV_Tree   =   IAS_AC_CC_LMT.ACTV_No
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_ACTV_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End; 
CREATE OR REPLACE PACKAGE GLS_LMT_PKG as
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
 PROCEDURE CHK_AC_Lmt ( P_DR_CR          In  number DEFAULT 1                               ,  --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
 FUNCTION GET_FCLTY_BLNC (P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
PROCEDURE GET_ACDTL_LMT_BLNC(P_DOC_DATE      In  DATE   DEFAULT YS_GEN_PKG.GET_SYSDATE          ,
FUNCTION GET_MSG_GL_LMT( P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
 FUNCTION Check_ac_cc_pj_use_lmt (  P_lmt_type  IN  NUMBER                                    ,
CREATE OR REPLACE PACKAGE Body GLS_LMT_PKG as
Procedure Get_Prmtr_Prc ( P_Lng_no      In Pls_Integer     Default 1    
   Begin  
      select * into Gnr_Prmtrs from ias_para_gen where Rownum<=1;
      select * into Gls_Prmtrs from ias_para_gl where Rownum<=1;
      select * into Ars_Prmtrs from ias_para_Ar where Rownum<=1;
      select * into Aps_Prmtrs from ias_para_Ap where Rownum<=1;
      select * into TRNS_PRVLGS from Privilege_Fixed where U_Id=V_Usr_No  AND rownum<=1;
   Exception 
  End; 
 PROCEDURE CHK_AC_Lmt ( P_DR_CR          In  number DEFAULT 1                               ,  --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
Begin 
        Begin
         Select Nvl(CRLIMIT_TYPE,1),CRLIMIT_PER
            From Privilege_Fixed 
           Where u_id=P_User_No;
        Exception When Others Then
        End; 
        Begin
          Select Nvl(ACC_LMT_PRV,1)
            From Privilege_Fixed 
           Where u_id=P_User_No;
        Exception When Others Then
        End; 
           BEGIN
               SELECT 1 
               FROM IAS_AC_CC_LMT 
               WHERE A_CODE=V_AC_CODE 
           EXCEPTION WHEN OTHERS THEN
            END;
        BEGIN
          SELECT COUNT(*)
           FROM IAS_AC_CC_LMT 
             where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
       EXCEPTION WHEN OTHERS THEN
        END;
            BEGIN
               Select DR_CR 
               FROM IAS_AC_CC_LMT 
                 where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
           EXCEPTION WHEN OTHERS THEN
            END;
            BEGIN
               SELECT DR_CR 
               FROM IAS_AC_CC_LMT 
                 where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
            EXCEPTION WHEN OTHERS THEN
            END;
     -- INSERT INTO  MM(M) VALUES(V_DOCSRL);  COMMIT;
      Begin 
       Select Round(MIN_AMT,P_Frc_no),  Round(MAX_AMT,P_Frc_no),  Round(MIN_TRNS_AMT,P_Frc_no),  Round(MAX_TRNS_AMT,P_Frc_no),Round(ANULY_AMT,P_Frc_no),
           From IAS_AC_CC_LMT
          where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
      Exception when Others Then
      End;
                 BEGIN
                  UPDATE IAS_AC_CC_LMT SET FCLTY_AMT=0
                  Where NVL(A_CODE,'0')=case when Gls_Prmtrs.Gl_Lmt_Type in(1,3,5,7) then V_AC_CODE else NVL(A_CODE,'0')END
                EXCEPTION WHEN OTHERS THEN NULL;
                 END;
             BEGIN
             EXCEPTION WHEN OTHERS THEN
            BEGIN
             EXCEPTION WHEN OTHERS THEN
             END;  
                      BEGIN    
             EXCEPTION WHEN OTHERS THEN
     BEGIN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
BEGIN 
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
             EXCEPTION WHEN OTHERS THEN
 Exception 
FUNCTION GET_FCLTY_BLNC (P_AC_CODE       In  ACCOUNT.A_CODE%TYPE                        ,
Begin 
Exception 
PROCEDURE GET_ACDTL_LMT_BLNC(P_DOC_DATE      In  DATE   DEFAULT YS_GEN_PKG.GET_SYSDATE          ,
    V_CNT :=YS_GEN_PKG.GET_CNT('SELECT 1 FROM IAS_POST_DTL   
                                WHERE C_V_CODE IS NOT NULL 
       Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
 --Select Decode(P_cur_code,Null,nvl(sum(amt),0),V_CUR_CODE,nvl(sum(amt),0),nvl(sum(amt_f),0))
     Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From GLS_V_AC_DTL_CCPJACTV_BLNC D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
        Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
      Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From GLS_V_AC_DTL_CCPJACTV_BLNC D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
Exception 
FUNCTION GET_MSG_GL_LMT(
 BEGIN
  FUNCTION  Check_Ac_Cc_Pj_Use_Lmt( P_Lmt_Type  In  Number                                  ,
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Acc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Cc_Tree
            Where Ias_Cc_Tree.Cc_Tree   =   Ias_Ac_Cc_Lmt.Cc_Code
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Cc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Pj_Tree
            Where Ias_Pj_Tree.Pj_Tree   =   IAS_AC_CC_LMT.Pj_No
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Pj_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_ACTV_Tree
            Where Ias_ACTV_Tree.ACTV_Tree   =   IAS_AC_CC_LMT.ACTV_No
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_ACTV_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End; 
Exception 
PROCEDURE GET_ACDTL_LMT_BLNC(P_DOC_DATE      In  DATE   DEFAULT YS_GEN_PKG.GET_SYSDATE          ,
CREATE OR REPLACE PACKAGE  GLS_INSTL_DATA_PKG AS
    PROCEDURE GET_DATA_TBL_MST( P_DATA_TBL  IN OUT DATA_TBL_MST
 PROCEDURE GET_DATA_TBL_DTL(P_DATA_TBL   IN OUT DATA_TBL_DTL,
   /* PROCEDURE GET_DATA_TBL_STKADJSTMNT(P_DATA_TBL   IN OUT DATA_TBL_STKADJSTMNT
    FUNCTION CHCK_DB_CLMN(P_TBL_NM IN VARCHAR2,P_CLMN_NM IN VARCHAR2,P_PRMTR_NM VARCHAR2) RETURN VARCHAR2;  /*CHECK IF COLUMN EXIST IN TABLE OR NOT*/
    /*PROCEDURE GET_DOC_TYP_NO_DATA (P_TYP_NO     OUT VARCHAR2
   /* PROCEDURE GET_INSTLL_DOC_DATA (P_TYP_NM                  OUT VARCHAR2
   /* PROCEDURE CHK_INSTLL_DOC_TYP ( P_MSG_NO                  OUT VARCHAR2 
    /*THIS FUNCTION TO GET WHERE CLUASE FOR KEY LIST */
    FUNCTION GET_LST_KEY_WHR_STMNT ( P_LST_KEY                 IN  VARCHAR2
CREATE OR REPLACE PACKAGE BODY GLS_INSTL_DATA_PKG AS
    /*--------------------------START GET DATA FROM MASTER TABLE------------------------------*/
     PROCEDURE GET_DATA_TBL_MST(P_DATA_TBL             IN OUT DATA_TBL_MST
     BEGIN
        EXECUTE IMMEDIATE  'SELECT  TYP_NO,W_CODE,
                            FROM '||P_TBL_NM||' 
                            WHERE DOC_SRL = '||P_DOC_SRL||' 
                            AND NVL(CNCL_FLG,0) = 0 /* FOR UPDATE NOWAIT*/'||P_WHR BULK COLLECT INTO P_DATA_TBL;
     EXCEPTION 
          RAISE_APPLICATION_ERROR(-20000,'ERROR WHEN SELECT FROM MASTER TABLE '||P_TBL_NM||' = '||SQLERRM) ;
    /*--------------------------END OF GET DATA FROM MASTER TABLE------------------------------*/
    /*---------------------------START GET DATA FROM DETAIL TABLE------------------------------*/
    PROCEDURE GET_DATA_TBL_DTL(P_DATA_TBL   IN OUT DATA_TBL_DTL,
    BEGIN
        /*SELECT DECODE(CHCK_DB_CLMN(P_TBL_NM,'ITM_QTY_INSTLL','ITM_QTY_INSTLL'),'ITM_QTY_INSTLL','ITM_QTY_INSTLL','ITM_QTY')||' ITM_QTY_INSTLL' INTO V_ITM_QTY_INSTLL
        FROM DUAL;*/ 
       BEGIN
                EXECUTE IMMEDIATE 'SELECT 1 FROM '||V_MST_TBL_NM||' WHERE  DOC_SRL = '||P_DOC_SRL||' AND APPRVD_FLG = 3 AND ROWNUM <= 1 ' INTO V_CNT;
        EXCEPTION 
                RAISE_APPLICATION_ERROR(-20040,'ERROR WHEN CHECK APPROVED FROM TABLE '||V_MST_TBL_NM||' ,DOC_SRL = '||P_DOC_SRL||' , '||SQLERRM) ;
        END;   
        SQL_STMNT :=  'SELECT T_SRC.ITM_CODE,T_SRC.ITM_UNT,T_SRC.ITM_SZ,T_SRC.ITM_QTY,NVL(T_QTY.ITM_QTY_INSTLL,0) ITM_QTY_INSTLL,
                      FROM '||P_TBL_NM||' T_SRC , (SELECT   ITM_CODE,ITM_UNT,SUM(NVL(ITM_QTY,0)) ITM_QTY_INSTLL
                                                   FROM     '||P_TBL_NM_REF||'  
                                                   WHERE    DOC_SRL_REF = '||P_DOC_SRL||'
                                                   GROUP BY ITM_CODE,ITM_UNT) T_QTY
                      WHERE    DOC_SRL = '||P_DOC_SRL||' 
                      ORDER BY '||CASE  WHEN P_ORDR IS NULL THEN 'T_SRC.RCRD_NO' ELSE P_ORDR END;  
    EXCEPTION 
            RAISE_APPLICATION_ERROR(-20001,'ERROR WHEN SELECT FROM TABLE '||P_TBL_NM||' ,DOC_SRL = '||P_DOC_SRL||' , '||SQLERRM/*||CHR(13)||CHR(13)||SQL_STMNT*/) ;
    /*--------------------------END OF GET DATA FROM DETAIL TABLE------------------------------*/
    /*--------------------------START OF GET DATA FROM STKADJSTMNT ---------------------------------*/
    FUNCTION CHCK_DB_CLMN(P_TBL_NM IN VARCHAR2,P_CLMN_NM IN VARCHAR2,P_PRMTR_NM VARCHAR2) RETURN VARCHAR2
    BEGIN
            EXECUTE IMMEDIATE  'SELECT (CASE WHEN EXISTS(SELECT * 
                                             FROM   ALL_TAB_COLS
                                             WHERE  OWNER = SYS_CONTEXT(''USERENV'',''CURRENT_SCHEMA'') AND 
                                 FROM DUAL WHERE ROWNUM <= 1' INTO V_CLMN_NM;
    EXCEPTION
  /*  PROCEDURE GET_INSTLL_DOC_DATA (P_TYP_NM                  OUT VARCHAR2
    BEGIN
        BEGIN
            EXECUTE IMMEDIATE   'SELECT TYP_NO ||''-''|| YS_DOC_TYP_PKG.GET_DOC_TYP_DTL_NM (P_DOC_TYP    => '||P_F_DOC_TYP||', P_TYP_NO     => TYP_NO),DOC_DATE
                                FROM '||P_TBL_NM||'
                                WHERE DOC_SRL = :1 AND DOC_TYP = :2 AND ROWNUM <= 1'
        EXCEPTION 
        END;
        BEGIN
            SELECT NVL(FILL_MST_DATA,0), 
            FROM   GNR_FILL_DOC_TYP
           WHERE  F_DOC_TYP = P_F_DOC_TYP
        EXCEPTION 
              RAISE_APPLICATION_ERROR(-20011,'ERROR WHEN GET DATA FROM GNR_FILL_DOC_TYP = '||SQLERRM) ;
        END;
    EXCEPTION 
   /* PROCEDURE CHK_INSTLL_DOC_TYP ( P_MSG_NO                  OUT VARCHAR2 
    BEGIN
        SELECT 1 INTO V_CNT
        FROM   GNR_FILL_DOC_TYP
        WHERE  F_DOC_TYP = P_F_DOC_TYP
    EXCEPTION 
    FUNCTION GET_LST_KEY_WHR_STMNT ( P_LST_KEY                 IN  VARCHAR2
    BEGIN
                            AND DOC_SRL IN (SELECT   DOC_SRL_REF
                                            FROM     '||P_DST_TBL||' DST
                                            WHERE    DOC_SRL         IS NOT NULL
                                            GROUP BY DOC_SRL_REF
                                            HAVING   SUM(NVL(ITM_QTY,0)) < (SELECT   SUM(NVL(ITM_QTY,0))
                                                                            FROM     '||P_SRC_TBL||' SRC
                 WHERE    SRC.DOC_SRL = DST.DOC_SRL_REF )) '; 
                           AND DOC_SRL NOT IN (SELECT DOC_SRL_REF 
                                               FROM   '||P_DST_TBL||' 
                                               WHERE  DOC_TYP_REF = '||P_DOC_TYP_REF||'
    EXCEPTION 
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_ACTV_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End; 
GLS_FUNCTION_PKG
GLS_FUNCTION_PKG
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,  LBL_NO) Values (2, 1, 1, 'BLNC_BRN_TYP', 'Center Revenue Journal', 1, 1,  14481)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,  LBL_NO) Values (1, 1, 1, 'BLNC_BRN_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,  LBL_NO) Values   (2, 2, 2, 'BLNC_BRN_TYP', 'Center Costing Journal',  1, 1,   14481)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,  LBL_NO) Values   (1, 2, 2, 'BLNC_BRN_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 1, 'RCPT_SRL_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (1, 2, 2, 'RCPT_SRL_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 3, 3, 'RCPT_SRL_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 1, 1, 'RCPT_SRL_TYP', 'General',    1, 0, 15392)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 2, 2, 'RCPT_SRL_TYP', 'By Collector',   1, 0, 15392)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 3, 3, 'RCPT_SRL_TYP', 'By Representative',    1, 0, 15392)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 0, 0, 'VCHR_BNK_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 0, 0, 'VCHR_BNK_TYP', 'Cheque',  1, 0, 1608)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values  (2, 1, 1, 'VCHR_BNK_TYP', 'Transfer',  1, 0, 1608)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values  (1, 1, 1, 'VCHR_BNK_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES ( 1, 1, 1, 'EXCHHG_CUR_SEQ', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (1, 2, 2, 'EXCHHG_CUR_SEQ', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 1, 1, 'EXCHHG_CUR_SEQ', 'Cumulative', 1, 0, NULL)
INSERT INTO S_FLAGS ( LANG_NO, FLG_S
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 5, 98, 'CASH_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 5, 98, 'CASH_TYPE', 'Exchange Currency', 1, 0, NULL)
INSERT INTO IAS_VOUCHR_TYPE ( V_TYPE, V_TYPE_NO, V_TYPE_A_NAME, V_TYPE_E_NAME, CONN_VCHR_REQ,TRNS_TYPE, VAT_DFRD_PRVDR ) VALUES ( 98, 1, '
 BEGIN
INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 15,''LOV_CC'',78,''SELECT M.CC_CODE,DECODE(:PARAMETER.LANG_DFLT, 1, M.CC_A_NAME, NVL(M.CC_E_NAME, M.CC_A_NAME)) CC_NM,  (SELECT  LISTAGG ( DECODE(:PARAMETER.LANG_DFLT, 1, D.CC_A_NAME, NVL(D.CC_E_NAME, D.CC_A_NAME)) ,'''' >> '''')   WITHIN GROUP (ORDER BY DECODE(:PARAMETER.LANG_DFLT, 1, D.CC_A_NAME, NVL(D.CC_E_NAME, D.CC_A_NAME)))'' || CHR(13)  || CHR(10)  || ''                    FROM IAS_CC_TREE D''  || CHR(13)  || CHR(10)  || ''                    WHERE  D.CC_CODE=M.CC_CODE''  || CHR(13)  || CHR(10)  || ''           
          AND D.CC_CODE<>D.CC_TREE''  || CHR(13)  || CHR(10)  || ''                    )CC_PARNT_NM''  || CHR(13)  || CHR(10)  || ''FROM COST_CENTERS M''  || CHR(13)  || CHR(10)  || '' WHERE EXISTS ( SELECT 1 FROM  COST_CENTER_TYPES WHERE CC_TYPE = M.C_S_M AND AFFECTED_BY_TRANS = 1 AND ROWNUM<=1) and Nvl(M.Inactive,0) = 0'' ,3,''273,22,3007'',''60,200,200'', NULL ,''1'','',1,'','',2,3,'','' AND EXISTS ( SELECT 1 FROM PRIVILEGE_CC WHERE U_ID=:PARAMETER.USER_NO AND PRIVILEGE_CC.CC_CODE = M.CC_CODE AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1) '', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 29,''LOV_PRJCTS'',2454,''SELECT M.PJ_NO,DECODE(:PARAMETER.LANG_DFLT, 1, M.PJ_A_NAME, NVL(M.PJ_E_NAME, M.PJ_A_NAME))PRJ_NAME, '' || CHR(13)  || CHR(10)  || ''                 (SELECT  LISTAGG ( DECODE(:PARAMETER.LANG_DFLT, 1, D.PJ_A_NAME, NVL(D.PJ_E_NAME, D.PJ_A_NAME)) ,'''' >> '''')   WITHIN GROUP (ORDER BY DECODE(:PARAMETER.LANG_DFLT, 1, D.PJ_A_NAME, NVL(D.PJ_E_NAME, D.PJ_A_NAME)))''  || CHR(13)  || CHR(10)  || ''                    FROM IAS_PJ_TREE D''  || CHR(13)  || CHR(10)  || ''                    WHERE  D.PJ_NO=M.PJ_NO''  || CHR(13)  || CHR(10)  || ''                    AND D.PJ_NO<>D.PJ_TREE''  || CHR(13)  || CHR(10)  || ''                    ) PRJ_PARNT_NAME''  || CHR(13)  || CHR(10)  || ''FROM IAS_PROJECTS M''  || CHR(13)  || CHR(10)  || ''WHERE PJ_SUB = 1'' ,3,''2452,2453,1600'',''60,200,200'', NULL ,''1'','',1,'','',2,3,'','' AND EXISTS(SELECT 1  FROM IAS_PRIV_PROJECTS  WHERE U_ID = :PARAMETER.USER_NO  AND PJ_NO = M.PJ_NO  AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1) '', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 71,''LOV_ACTV'',2352,''SELECT M.ACTV_NO,DECODE(:PARAMETER.LANG_DFLT, 1, M.ACTV_A_NAME, NVL(M.ACTV_E_NAME, M.ACTV_A_NAME)) ACT_NAME,'' || CHR(13)  || CHR(10)  || ''(SELECT  LISTAGG ( DECODE(:PARAMETER.LANG_DFLT, 1, D.ACTV_A_NAME, NVL(D.ACTV_E_NAME, D.ACTV_A_NAME)) ,'''' >> '''')   WITHIN GROUP (ORDER BY DECODE(:PARAMETER.LANG_DFLT, 1, D.ACTV_A_NAME, NVL(D.ACTV_E_NAME, D.ACTV_A_NAME)))''  || CHR(13)  || CHR(10)  || ''                    FROM IAS_ACTV_TREE D''  || CHR(13)  || CHR(10)  || ''                    WHERE  D.ACTV_NO=M.ACTV_NO''  || CHR(13)  || CHR(10)  || ''                    AND D.ACTV_NO<>D.ACTV_TREE''  || CHR(13)  || CHR(10)  || ''                    ) ACT_PARNT_NAME  ''  || CHR(13)  || CHR(10)  || ''FROM IAS_ACTVTY M WHERE ACTV_SUB = 1'' ,3,''2241,3646,1600'',''60,200,200'', NULL ,''1'','',1,'','',2,3,'', NULL , NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 55,''LOV_CST'',116,''SELECT M.C_CODE,M.C_A_CODE, DECODE(:PARAMETER.LANG_DFLT,1,M.C_A_NAME,NVL(M.C_E_NAME,M.C_A_NAME)) C_NM '' || CHR(13)  || CHR(10)  || '',M.C_MOBILE,M.C_PHONE ,CONN_BRN_NO||'''' - ''''||IAS_Brn_Pkg.Get_Br_Nm( G_BRN_NO =>m.CONN_BRN_NO ,   P_Lng_no =>:parameter.lang_no) brn_nm FROM CUSTOMER M WHERE 1=1'' ,6,''388,129,390,6524,47,43'',''60,60,200,80,80,150'', NULL ,'' LPAD(FLD1,30,0)'','',1,2,'','',3,6,'','' AND EXISTS (SELECT 1 FROM IAS_PRIV_CUSTOMER WHERE U_ID= :PARAMETER.USER_NO AND C_CODE=M.C_CODE AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1) '', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 185,''LOV_GNR_APPRV_DOCTYP'',582,''SELECT M.SYS_NO,M.FORM_NO,M.DOC_TYP, D.DOC_TYPE_NA
ME   FROM FORM_DETAIL M,IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST D  WHERE  M.DOC_TYP= D.DOC_TYPE   AND D.DOC_APPRVD_FLG=1 AND (M.SCR_ORGNL =FORM_NO OR SCR_ORGNL IS NULL)  AND D.LANG_NO=:PARAMETER.LANG_NO  ORDER BY M.SYS_NO,D.DOC_TYPE '',4,''4451,697,292,38'',''0,60,60,150'', NULL ,''1,3'','',1,2,3,'','',4,'', NULL , NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 373,''LOV_GLS_ADVNC_EXPNS_RVNU'',16163,''select M.DOC_SRL,M.BRN_NO,M.DOC_NO,M.DOC_date,M.DOC_DSC'' || CHR(13)  || CHR(10)  || ''from GLS_ADVNC_EXPNS_RVNU_MST M''  || CHR(13)  || CHR(10)  || ''WHERE 1=1'' ,5,''0,50,292,141,146'',''0,50,50,50,250'', NULL ,''1'','',2,3,4,'','',5,'','' And ((:Parameter.User_No=1) '' || CHR(10)  || ''     Or Exists (select 1 From S_Brn_Usr_Priv''  || CHR(10)  || ''    Where U_Id = :Parameter.User_No                            ''  || CHR(10)  || ''                     And S_Brn_Usr_Priv.Brn_No = M.Brn_No''  || CHR(10)  || ''                 And Nvl(ADD_FLAG,1) = 1 ''  || CHR(10)  || ''                 And RowNum <=1 ))''  || CHR(10)  || ''And 1 = (Case When :Parameter.User_View_Doc_Entr=0 Then''  || CHR(10)  || ''            1''  || CHR(10)  || ''         Else''  || CHR(10)  || ''           (Select 1 ''  || CHR(10)  || ''              From Ias_Shw_Doc_Priv ''  || CHR(10)  || ''             Where U_Id =:Parameter.User_No''  || CHR(10)  || ''               And T_U_Id=M.Ad_U_Id''  || CHR(10)  || ''               And Nvl(Priv_Flag,0)=1''  || CHR(10)  || ''               And Rownum<=1) End) '' , NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 373,''LOV_GLS_ADVNC_EXPNS_RVNU_REF'',77,''SELECT TO_NUMBER(SUBSTR(D.DOC_SER,5,6)) BRN_NO,D.DOC_SER,D.RCRD_NO,D.DOC_NO,ys_gen_pkg.Get_DocTyp_Nm (P_Doc_Typ=>D.DOC_TYPE ,P_Lng_no=>:PARAMETER.LANG_NO) DOCTYP_NM, D.DOC_DATE,D.A_CODE'' || CHR(13)  || CHR(10)  || '',D.AC_CODE_DTL,YS_AC_DTL_PKG.GET_AC_DTL_NM(D.AC_CODE_DTL,D.A_code,D.AC_DTL_TYP,:PARAMETER.Lang_NO) AC_NAME,''  || CHR(13)  || CHR(10)  || '' D.A_CY,DECODE(D.A_CY,YS_GEN_PKG.GET_LOCAL_CUR,D.AMT,D.AMT_F ) AMT,D.DOC_DESC''  || CHR(13)  || CHR(10)  || ''               FROM ACCOUNT M,IAS_POST_DTL D''  || CHR(13)  || CHR(10)  || ''               WHERE M.A_CODE=D.A_CODE   ''  || CHR(13)  || CHR(10)  || ''  
               AND M.AC_DTL_TYP=D.AC_DTL_TYP              ''  || CHR(13)  || CHR(10)  || ''                 AND M.AC_DTL_TYP IN(0,5)''  || CHR(13)  || CHR(10)  || ''                 AND M.ADVNC_EXPNS_RVNU_FLG IN(1,2)''  || CHR(13)  || CHR(10)  || ''                 AND EXISTS ( SELECT 1 FROM ACCOUNT_TYPES WHERE ACCOUNT_TYPE = M.A_S_M AND AFFECTED_BY_TRANS =1 AND ROWNUM<=1)'' ,12,''2555,0,757,292,38,141,129,1041,132,8,145,146'',''30,0,40,40,80,50,60,60,100,30,50,150,'', NULL ,''1,2,3,6'','',1,2,3,4,6,7,8,11,'','',5,9,12,'','' And ((:Parameter.User_No=1) '' || CHR(13)  || CHR(10)  || ''     Or Exists (select 1 From S_Brn_Usr_Priv''  || CHR(13)  || CHR(10)  || ''                    Where U_Id = :Parameter.User_No                            ''  || CHR(13)  || CHR(10)  || ''                     And S_Brn_Usr_Priv.Brn_No = D.Brn_No''  || CHR(13)  || CHR(10)  || ''                 And Nvl(ADD_FLAG,1) = 1 ''  || CHR(13)  || CHR(10)  || ''                 And RowNum <=1 ))''  || CHR(13)  || CHR(10)  || ''And 1 = (Case When :Parameter.User_View_Doc_Entr=0 Then''  || CHR(13)  || CHR(10)  || ''            1''  || CHR(13)  || CHR(10)  || ''         Else''  || CHR(13)  || CHR(10)  || ''           (Select 1 ''  || CHR(13)  || CHR(10)  || ''              From Ias_Shw_Doc_Priv ''  || CHR(13)  || CHR(10)  || ''             Where U_Id =:Parameter.User_No''  || CHR(13)  || CHR(10)  || ''               And T_U_Id=D.Ad_U_Id''  || CHR(13)  || CHR(10)  || ''               And Nvl(Priv_Flag,0
)=1''  || CHR(13)  || CHR(10)  || ''               And Rownum<=1) End) '' , NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,DFLT_ORDR,LOV_COL_LTR,LOV_SPCL_FLG )  VALUES ( 203,''LOV_SUB_DOC_TYP'',13257,''SELECT  M.DOC_TYP,M.TYP_NO, M.TYP_L_NM, M.TYP_F_NM  FROM GNR_V_SUB_DOC_TYP M  WHERE 1=1 '',4,''0,319,1581,2041'',''0,75,200,200'',''1'','',1,'',0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 178,''LOV_GLS_TAXTYP'',12041,''Select Distinct  M.Clc_Typ_No,Decode(:Parameter.lang_dflt,1,Nvl(Clc_Typ_L_Nm, Clc_Typ_F_Nm),Nvl(Clc_Typ_F_Nm,Clc_Typ_L_Nm)) Clc_Typ_Nm
                                       From  Gnr_Tax_Typ_Clc_Mst M,Gnr_Tax_Typ_Clc_Brn DB
                                      Where M.Clc_Typ_No=DB.Clc_Typ_No    
                                        And (M.Clc_Tax_Typ<>0 Or Exists(Select D.Clc_Typ_No
                                                                        From  Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Code_Mst T
                                                                        Where D.Tax_No    =T.Tax_No            
                                        Order By M.Clc_Typ_No'',2,''351,12041'',''70,150'', NULL ,''1'','',1,'','',2,'', NULL , NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 66,''LOV_GLS_BILLS'',118,''SELECT  BILL_SER,    
    FROM IAS_BILL_MST M, S_FLAGS,IAS_SALES_TYPES 
   WHERE M.BILL_DOC_TYPE = S_FLAGS.FLG_VALUE
        OR EXISTS (SELECT 1 FROM S_BRN_USR_PRIV
                    WHERE U_ID = :PARAMETER.USER_NO                         
                 AND ROWNUM <=1 ))'', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 373,''LOV_GLS_RQ_EXCH_CUR'',1873,''select M.BRN_NO,M.DOC_date,M.DOC_no,DECODE (NVL (inactive, 0),
from GLS_RQ_EXCH_CUR_MST M
WHERE 1=1'',8,''50,141,292,628,1041,2792,146,0'',''50,50,50,60,80,80,250,0'', NULL ,''1'','',1,2,3,'','',5,6,'','' And ((:Parameter.User_No=1) 
        Or Exists (select 1 From S_Brn_Usr_Priv
                    Where U_Id = :Parameter.Us
           (Select 1 
              From Ias_Shw_Doc_Priv 
             Where U_Id =:Parameter.User_No
               And Rownum<=1) End) '', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 373,''LOV_GLS_EXCH_CUR'',1873,''select M.BRN_NO,M.DOC_date,M.DOC_no, M.AC_CODE_DTL,YS_GEN_PKG.GET_FLG_NM(''''AC_DTL_TYP'''',M.AC_DTL_TYP,:Parameter.Lang_no) AC_DTL_TYP_NM,M.DOC_DSC,
from IAS_EXCH_CUR_MST M
WHERE 1=1'',7,''50,141,292,1041,2792,146,0'',''50,50,50,80,80,250,0'', NULL ,''1'','',1,2,3,'','',5,6,'','' And ((:Parameter.User_No=1) 
        Or Exists (select 1 From S_Brn_Usr_Priv
                    Where U_Id = :Parameter.User_No                            
           (Select 1 
              From Ias_Shw_Doc_Priv 
             Where U_Id =:Parameter.User_No
               And Rownum<=1) End) '', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 28,''LOV_DOC_BRN'',1058,''SELECT M.BRN_NO ,DECODE(:Parameter.Lang_DFLT,1,BRN_LNAME,NVL(BRN_FNAME,BRN_LNAME) ) BRN_NM FROM S_BRN M WHERE 1=1 '',2,''50,43'',''60,200'', NULL ,''1'','',1,'', NULL ,''AND ((:Parameter.User_No=1)  Or EXISTS (   SELECT 1
                  FROM S_BRN_USR_PRIV
                 WHERE U_ID = :PARAMETER.USER_NO
                   AND ROWNUM <= 1 ))'', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL,LOV_SPCL_FLG )  VALUES ( 607,''LOV_REM_V_BILL_RNT_MST_YR'',10980,''Select M.Doc_Srl ,M.Doc_No,Doc_Date,m.Doc_No_Ref,Scnd_Prty,IAS_Cst_Pkg.Get_C_Name(Scnd_Prty,:parameter.Lang_No) Scnd_Nm,REF_NO,m.Doc_Dsc
                             From REM_V_BILL_RNT_MST_YR M 
                             Where 1=1'',''AND EXISTS(SELECT 1 
                                   FROM S_BRN_USR_PRIV
                                   WHERE U_ID = :PARAMETER.USER_NO
                                   (SELECT 1 
                                   FROM IAS_SHW_DOC_PRIV 
                                   WHERE U_ID = :PARAMETER.USER_NO
                                   AND ROWNUM<=1) END)'', NULL ,8,''1,291,2701,5861,388,390,143,146'',''0,60,60,60,60,100,50,150'', NULL ,''1'','',2,3,4,5,6,'', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,DFLT_ORDR,LOV_COL_LTR
,LOV_COL_RTL )  VALUES ( 4,''LOV_S_FLG'',4515,''Select  FLG_VALUE,FLG_DESC  from S_FLAGS WHERE 1=1'',2,''38,5288'',''60,200'',''1'','',1,'','',2,''  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL )  VALUES ( 214,''LOV_AC_CODE_DTL_GRPS'',591,''SELECT GRP_CODE ,DECODE(:Parameter.Lang_DFLT,1,GRP_L_NM,GRP_F_NM) GRP_NM,AC_DTL_TYP,YS_GEN_PKG.GET_FLG_NM (''''AC_DTL_TYP'''',AC_DTL_TYP ,:PARAMETER.LANG_NO)AC_DTL_TYP_NM FROM GLS_AC_CODE_DTL_GRPS WHERE 1 = 1'', NULL , NULL ,4,''169,558,0,1042'',''60,200,0,4 '', NULL ,''1,3'','',1,'', NULL , NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL )  VALUES ( 503,''LOV_AC_CODE_DTL_SUB'',116,''SELECT m.AC_CODE_DTL_SUB, DECODE (:parameter.lang_no, 1, m.ac_code_dtl_sub_l_nm, m.ac_code_dtl_sub_F_nm) ac_code_dtl_sub_nm
FROM   GLS_V_AC_CODE_DTL_SUB m
WHERE  1 = 1'', NULL , NULL ,2,''1569,3059'',''60,200'', NULL ,'' LPAD(FLD1,30,0)'', NULL , NULL , NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY )  VALUES ( 352,''LOV_GLS_EMP'',2301,''SELECT m.emp_no,
FROM   s_emp m
WHERE  1 = 1 '',4,''1928,1929,4065,50'',''60,200,200,50'', NULL ,''1'','',1,4,'', NULL ,''AND 1 = (CASE WHEN Ys_Gen_Pkg.Get_Fld_Value(''''IAS_PARA_GEN'''',''''EMP_PRV_TYP'''')=0 THEN 1 ELSE (SELECT 1 FROM S_EMP_PRV WHERE U_ID = :PARAMETER.USER_NO AND EMPNO_HRCHYNO = Decode(EMP_PRV_TYP,1,M.Emp_No,2,M.Hrchy_no) AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1) END)   '', NULL , NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY )  VALUES ( 933,''LOV_AC_CODE_ASTMNT'',507,''select Distinct ac_tree a_code,decode(:Parameter.Lang_DFLT,1,A_Name,Nvl(A_Name_Eng,A_Name)) A_name,
 from ias_acc_tree d ,account_grouping m 
Where d.a_grouping=m.group_no(+)'',3,''129,132,2020'',''70,200,200'', NULL ,''1'','',1,'', NULL ,''AND (:PAR
  OR  EXISTS (SELECT 1 FROM PRIV_ACC 
               WHERE U_ID= :PARAMETER.USER_NO 
                 AND A_CODE=D.A_CODE AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1))'', NULL , NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY )  VALUES ( 524,''LOV_AC_CODE_DTL_CUR'',1200,'' Select M.AC_CODE_DTL,Decode (:Parameter.Lang_No,1, Nvl (AC_CODE_DTL_L_NM, AC_CODE_DTL_F_NM), Nvl (AC_CODE_DTL_F_NM, AC_CODE_DTL_L_NM)) AC_CODE_DTL_NM,D.CUR_CODE 
 FROM GLS_V_ACCNT_DTL M,GLS_V_ACCNT_DTL_curr D
  WHERE  M.AC_DTL_TYP_DTL=D.AC_DTL_TYP_DTL AND  M.AC_CODE_DTL=D.AC_CODE_DTL AND M.AC_DTL_TYP=D.AC_DTL_TYP  And Nvl(D.INACTV,0) = 0'',3,''1041,132,8'',''60,200,30'', NULL ,''1'','',1,'', NULL ,'' And ((:Parameter.User_No = 1)
            or EXISTS (SELECT 1 
                          FROM GLS_V_ACCNT_DTL_PRIV 
                         WHERE U_ID= :PARAMETER.USER_NO 
                         AND ROWNUM<=1))'', NULL , NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CN
T,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL )  VALUES ( 524,''LOV_AC_CODE_DTL'',684,''Select D.AC_CODE_DTL,
  From GLS_V_ACCNT_DTL D
 Where  1=1'',''And ((:Parameter.User_No = 1)
                   Select 1
                     From GLS_V_ACCNT_DTL_PRIV
                    Where U_Id = :Parameter.User_No
                      And RowNum <=1 ))'', NULL ,5,''1041,132,558,129,0'',''60,150,150,60,0'', NULL ,''LPAD(FLD1,30,''''0'''')'','',1,4,'','',2,3,'', NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL,LOV_SPCL_FLG )  VALUES ( 611,''LOV_HRS_NET_SLRY_EMP'',11668,''Select M.BRN_NO,D.EMP_NO,NVL(C.EMP_L_NM,EMP_F_NM)EMP_NM ,YS_EMP_PKG.Get_Code_Nm(P_Cod_Typ=> 6 ,P_Cod_No=>C.EMPLYMNT_TYP,P_Lng_NO=>IAS_PRMTR_PKG.GetPval(p_prmtr =>''''LANG_NO'''')) EMPLYMNT_TYP,
  From Hrs_V_Slry_Calc_Mst M,Hrs_V_Slry_Calc_Dtl D ,S_Emp C
 where M.Doc_Srl = D.Doc_Srl
   And Exists (Select 1 From Hrs_Prd_Brn_Cls 
                       Where Nvl(Slry_Calc,0) = 1
 '', NULL , NULL ,11,''50,1928,1929,4130,292,141,8,41,535,0,0'',''60,60,100,60,60,60,40,40,60,0,0'', NULL ,''1,2'','',1,2,'','',2,'', NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL )  VALUES ( 498,''LOV_GLS_JRNL_DTL'',3275,''SELECT  RCRD_NO,A_CODE,  AC_CODE_DTL, YS_AC_DTL_PKG.GET_AC_DTL_NM(AC_CODE_DTL,A_code,AC_DTL_TYP,:Parameter.Lang_No) AC_NM,J_DESC,
        FROM DETAIL_JOURNAL_V D
        WHERE 1=1 '','' And ((:Parameter.User_No=1) 
        Or Exists (select 1 From S_Brn_Usr_Priv
                    Where U_Id = :Parameter.User_No                            
                 And RowNum <=1 ))'', NULL ,10,''1371,129,1041,132,146,8,145,663,5448,292'',''30,80,80,150,150,30,80,80,0,0'', NULL ,''1'','',1,2,3,6,7,8,'', NULL , NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL )  VALUES ( 497,''LOV_GLS_VCHR_DTL'',1873,''SELECT  RCRD_NO,A_CODE,  AC_CODE_DTL, YS_AC_DTL_PKG.GET_AC_DTL_NM(AC_CODE_DTL,A_code,AC_DTL_TYP,:Parameter.Lang_No) AC_NM,AC_DESC,
        FROM IAS_RQ_VCHR_DTL D
        WHERE 1=1 '','' And ((:Parameter.User_No=1) 
        Or Exists (select 1 From S_Brn_Usr_Priv
                    Where U_Id = :Parameter.User_No                            
30,80,80,0,0'', NULL ,''1'','',1,2,3,6,7,8,'', NULL , NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 374,''LOV_GLS_BNK_IDNTF_MST'',4847,''SELECT M.DOC_SRL,'' || CHR(13)  || CHR(10)  || ''       M.brn_no,''  || CHR(13)  || CHR(10)  || ''       M.DOC_NO,''  || CHR(13)  || CHR(10)  || ''       M.DOC_DATE,''  || CHR(13)  || CHR(10)  || ''       M.AC_CODE_DTL,''  || CHR(13)  || CHR(10)  || ''       Ias_Gen_Pkg.Get_Code_Nm(''''Bank'''',M.AC_CODE_DTL,:parameter.lang_no) AC_CODE_DTL_NM ,''  || CHR(13)  || CHR(10)  || ''       M.DOC_DSC,''  || CHR(13)  || CHR(10)  || ''       M.F_DATE ,''  || CHR(13)  || CHR(10)  || ''       M.T_DATE,''  || CHR(13)  || CHR(10)  || ''       M.ref_no,''  || CHR(13)  || CHR(10)  || ''       M.cc_code           cc_code''  || CHR(13)  || CHR(10)  || ''  FROM GLS_BNK_IDNTF_MST M''  || CHR(13)  || CHR(10)  || '' WHERE     1=1'' ,11,''0,50,292,1137,30,32,146,280,253,143,728'',''0,40,40,60,60,120,120,60,60,60,60'', NULL ,''3 DESC,1 ,2 DESC'','',2,3,4,5,8,9,10,11,'','',6,7,'',''        AND 1 =(CASE WHEN :parameter.User_View_Doc_Entr = 0 THEN'' || CHR(13)  || CHR(10)  || ''                    1''  || CHR(13)  || CHR(10)  || ''                    ELSE''  || CHR(13)  || CHR(10)  || ''                        (SELECT 1 FROM Ias_Shw_Doc_Priv''  || CHR(13)  || CHR(10)  || ''                          WHERE U_Id = :parameter.User_No''  || CHR(13)  || CHR(10)  || ''                            AND T_U_Id = M.Ad_U_Id''  || CHR(13)  || CHR(10)  || ''                            AND NVL (Priv_Flag, 0) = 1''  || CHR(13)  || CHR(10)  || ''                            AND ROWNUM <= 1)''  || CHR(13)  || CHR(10)  || ''                END)''  || CHR(13)  || CHR(10)  || ''       AND (   ( :parameter.User_No = 1)''  || CHR(13)  || CHR(10)  || ''            OR EXISTS''  || CHR(13)  || CHR(10)  || ''                   (SELECT 1  FROM S_Brn_Usr_Priv''  || CHR(13)  || CHR(10)  || ''                     WHERE U_Id = :parameter.User_No''  || CHR(13)  || CHR(10)  || ''                       AND S_Brn_Usr_Priv.Brn_No = M.Brn_No''  || CHR(13)  || CHR(10)  || ''                       AND NVL (ADD_FLAG, 1) = 1''  || CHR(13)  || CHR(10)  || ''                       AND ROWNUM <= 1))''  || CHR(13)  || CHR(10)  || ''       AND (   ( :parameter.User_No = 1)''  || CHR(13)  || CHR(10)  || ''            OR EXISTS''  || CHR(13)  || CHR(10)  || ''                   (SELECT 1 FROM PRIV_CASH''  || CHR(13)  || CHR(10)  || ''                     WHERE U_Id = :parameter.User_No''  || CHR(13)  || CHR(10)  || ''                       AND PRIV_CASH.CASH_TYPE =2''  || CHR(13)  || CHR(10)  || ''                       AND CASH_NO = M.AC_CODE_DTL''  || CHR(13)  || CHR(10)  || ''                       AND NVL (PYMNT, 1) = 2''  || CHR(13)  || CHR(10)  || ''                       AND add_flag = 1''  || CHR(13)  || CHR(10)  || ''                       AND ROWNUM <= 1))''  || CHR(13)  || CHR(10)  || ''        And ((:parameter.User_No = 1)''  || CHR(13)  || CHR(10)  || ''            or Exists (''  || CHR(13)  || CHR(10)  || ''                   Select 1''  || CHR(13)  || CHR(10)  || ''                     From GLS_V_ACCNT_DTL_PRIV''  || CHR(13)  || CHR(10)  || ''                    Where U_Id = :parameter.User_No''  || CHR(13)  || CHR(10)  || ''                      And AC_CODE_DTL = M.AC_CODE_DTL''  || CHR(13)  || CHR(10)  || ''                      AND DECODE(:parameter.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 ''  || CHR(13)  || CHR(10)  || ''                      And RowNum <=1 ))       '' , NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL,LOV_SPCL_FLG )  VALUES ( 373,''LOV_GL_PYMNT'',86,''select  Vouchers.brn_no,vouchers.voucher_no,voucher_date,vouchers.cash_no,
    REC_NAME,A_DESC,NVL(CASH_AMTF,CASH_AMT)CASH_AMT,ref_no,vouchers.cc_code cc_code,vouchers.v_ser '' || CHR(13)  || CHR(10)  || ''   from vouchers  where voucher_type=2 '' ,''  And 1 = (Case When :Parameter.User_View_Doc_Entr=0 Then'' || CHR(10)  || ''            1''  || CHR(10)  || ''         Else''  || CHR(10)  || ''           (Select 1 ''  || CHR(10)  || ''              From Ias_Shw_Doc_Priv ''  || CHR(10)  || ''             Where U_Id =:Parameter.User_No''  || CHR(10)  || ''               And T_U_Id=vouchers.Ad_U_Id''  || CHR(10)  || ''               And Nvl(Priv_Flag,0)=1''  || CHR(10)  || ''               And Rownum<=1) End)''  || CHR(10)  || ''And ((:Parameter.User_No=1) ''  || CHR(10)  || ''        Or Exists (select 1 From S_Brn_Usr_Priv''  || CHR(10)  || ''                    Where U_Id = :Parameter.User_No                            ''  || CHR(10)  || ''                     And S_Brn_Usr_Priv.Brn_No = vouchers.Brn_No''  || CHR(10)  || ''                 And Nvl(ADD_FLAG,1) = 1 ''  || CHR(10)  || ''                 And RowNum <=1 ))''  || CHR(10)  || ''And ((:Parameter.User_No=1) ''  || CHR(10)  || ''        Or Exists (select 1 From PRIV_CASH''  || CHR(10)  || ''                    Where U_Id = :Parameter.User_No                            ''  || CHR(10)  || ''                     And PRIV_CASH.CASH_TYPE = vouchers.VOUCHER_PAY_TYPE''  || CHR(10)  || ''                 And CASH_NO = vouchers.CASH_NO''  || CHR(10)  || ''                 And Nvl(PYMNT,1) = 1 ''  || CHR(10)  || ''                 and add_flag=1 ''  || CHR(10)  || ''                 And RowNum <=1 ))      '' , NULL ,11,''50,291,141,1220,904,1351,146,145,143,728,1'',''40,40,60,60,60,120,120,80,60,60,0'', NULL ,''3 DESC,1 ,2 DESC'','',1,2,3,4,5,8,9,'','',6,7,'', NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL,LOV_SPCL_FLG )  VALUES ( 116,''LOV_GL_RCPT'',81,''select  Vouchers.brn_no,vouchers.voucher_no,voucher_date,vouchers.cash_no,
   from vouchers  where voucher_type=1  '','' And 1 = (Case When :Parameter.User_View_Doc_Entr=0 Then
           (Select 1 
              From Ias_Shw_Doc_Priv 
             Where U_Id =:Parameter.User_No
        Or Exists (select 1 From S_Brn_Usr_Priv
                    Where U_Id = :Parameter.User_No                            
        Or Exists (select 1 From PRIV_CASH
                    Where U_Id = :Parameter.User_No                            
                 And RowNum <=1 ))      '', NULL ,11,''50,291,141,1220,904,1351,146,145,143,728,1'',''40,40,60,60,60,120,120,80,60,60,0'', NULL ,''3 DESC,1 ,2 DESC'','',1,2,3,4,5,7,8,9,'', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL,LOV_SPCL_FLG )  VALUES ( 375,''LOV_GL_RQ_VCHR'',1873,''select  Ias_Rq_Vchr_MST.brn_no,Ias_Rq_Vchr_MST.voucher_no,voucher_date,Ias_Rq_Vchr_MST.cash_no,'' || CHR(13)  || CHR(10)  || ''Decode(voucher_pay_type,1,Ias_Gen_Pkg.G
et_Prompt(:Parameter.lang_no,153),YS_GEN_PKG.GET_FLG_NM(''''VCHR_BNK_TYP'''',TRANSFER,:Parameter.lang_no)) v_pay_type,REC_NAME,A_DESC,NVL(CASH_AMTF,CASH_AMT)CASH_AMT,''  || CHR(13)  || CHR(10)  || ''Decode(NVL(INACTIVE,0),1,YS_Gen_Pkg.Get_Prompt (:Parameter.Lang_no, 1457),YS_Gen_Pkg.Get_Flg_Nm (''''APPROVED'''',IAS_RQ_VCHR_MST.APPROVED,:Parameter.Lang_no))APPROVED,''  || CHR(13)  || CHR(10)  || ''Ias_Rq_Vchr_MST.cc_code cc_code,Ias_Rq_Vchr_MST.ref_no,Ias_Rq_Vchr_MST.v_ser ''  || CHR(13)  || CHR(10)  || ''from Ias_Rq_Vchr_MST where 1=1 '' ,'' And 1 = (Case When :Parameter.User_View_Doc_Entr=0 Then'' || CHR(10)  || ''            1''  || CHR(10)  || ''         Else''  || CHR(10)  || ''           (Select 1 ''  || CHR(10)  || ''              From Ias_Shw_Doc_Priv ''  || CHR(10)  || ''             Where U_Id =:Parameter.User_No''  || CHR(10)  || ''               And T_U_Id=Ias_Rq_Vchr_MST.Ad_U_Id''  || CHR(10)  || ''               And Nvl(Priv_Flag,0)=1''  || CHR(10)  || ''               And Rownum<=1) End)''  || CHR(10)  || ''And ((:Parameter.User_No=1) ''  || CHR(10)  || ''        Or Exists (select 1 From S_Brn_Usr_Priv''  || CHR(10)  || ''                    Where U_Id = :Parameter.User_No                            ''  || CHR(10)  || ''                     And S_Brn_Usr_Priv.Brn_No = Ias_Rq_Vchr_MST.Brn_No''  || CHR(10)  || ''                 And Nvl(ADD_FLAG,1) = 1 ''  || CHR(10)  || ''                 And RowNum <=1 ))''  || CHR(10)  || ''And ((:Parameter.User_No=1) ''  || CHR(10)  || ''        Or Exists (select 1 From PRIV_CASH''  || CHR(10)  || ''                    Where U_Id = :Parameter.User_No                            ''  || CHR(10)  || ''                     And PRIV_CASH.CASH_TYPE = Ias_Rq_Vchr_MST.VOUCHER_PAY_TYPE''  || CHR(10)  || ''                     And CASH_NO = Ias_Rq_Vchr_MST.CASH_NO''  || CHR(10)  || ''                 And decode(Ias_Rq_Vchr_MST.VOUCHER_TYPE,1,Nvl(RCVD,1) ,Nvl(PYMNT,1)) = 1 ''  || CHR(10)  || ''                 And decode(Ias_Rq_Vchr_MST.VOUCHER_TYPE,1,Nvl(add_flag,1) ,Nvl(add_flag,1)) = 1 ''  || CHR(10)  || ''                 And RowNum <=1 ))     ''  || CHR(10)  || ''                ''  || CHR(10)  || ''                 '' , NULL ,12,''50,291,141,1220,904,1351,146,145,628,728,143,1'',''40,40,60,60,60,120,120,80,60,60,60,0'', NULL ,''3 DESC,1,2 DESC'','',1,2,3,4,5,8,9,'','',6,7,'', NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_PRV,GRP_BY,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,RPRT_DPND_WHR,RPRT_RET_COL,LOV_SPCL_FLG )  VALUES ( 376,''LOV_GL_RQ_VCHR_NOCSH'',1873,''select  Ias_Rq_Vchr_MST.brn_no,Ias_Rq_Vchr_MST.voucher_no,voucher_date,Ias_Rq_Vchr_MST.cash_no,Decode(voucher_pay_type,1,Ias_Gen_Pkg.Get_Prompt(:Parameter.lang_no,153),YS_GEN_PKG.GET_FLG_NM(''''VCHR_BNK_TYP'''',TRANSFER,:Parameter.lang_no)) v_pay_type,REC_NAME,A_DESC,NVL(CASH_AMTF,CASH_AMT)CASH_AMT,'' || CHR(13)  || CHR(10)  || ''Decode(NVL(INACTIVE,0),1,YS_Gen_Pkg.Get_Prompt (:Parameter.Lang_no, 1457),YS_Gen_Pkg.Get_Flg_Nm (''''APPROVED'''',IAS_RQ_VCHR_MST.APPROVED,:Parameter.Lang_no))APPROVED,Ias_Rq_Vchr_MST.cc_code cc_code,Ias_Rq_Vchr_MST.ref_no,Ias_Rq_Vchr_MST.v_ser from Ias_Rq_Vchr_MST where 1=1'' ,''  And ((:Parameter.User_No=1)  Or Exists (select 1 From S_Brn_Usr_Priv Where U_Id = :Parameter.User_No And S_Brn_Usr_Priv.Brn_No = Ias_Rq_Vchr_MST.Brn_No And Nvl(Add_Flag,1) = 1   And RowNum <=1 ))  '', NULL ,12,''50,291,141,1220,904,1351,146,145,628,728,143,1'',''40,40,60,60,60,120,120,80,60,60,60,0'', NULL ,''3 DESC,1,2 DESC'','',1,2,3,4,5,8,9,'','',6,7,'', NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY )  VALUES ( 676,''LOV_GL_JRNL_RQ'',3275,''SELECT m.Brn_No,
FROM IAS_RQ_JRNL_MST M,IAS_GLRQ_TYPES C 
where RQ_DOC_TYPE=85
           (Select 1 
              From Ias_Shw_Doc_Priv 
             Where U_Id =:Parameter.User_No
And (:Parameter.User_No=1 or Exists (Select 1 From IAS_GLRQ_TYPES_PRIV 
                                         Where RQ_type =m.jv_type 
        Or Exists (select 1 From S_Brn_Usr_Priv
                    Where U_Id = :Parameter.User_No                            
'', NULL , NULL , NULL   )"UPDATE S_LOV_SLCT SET LOV_SQL=''SELECT M.CASH_NO, DECODE(:PARAMETER.LANG_DFLT, 1, M.CASH_NAME, M.CASH_E_NAME) CSH_NM FROM CASH_IN_HAND M WHERE 1=1 AND  Nvl(Mediator,0)=0 '' WHERE LOV_NM = ''LOV_CSH''"
             EXCEPTION WHEN OTHERS THEN
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 1, 1, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 1, 1, 'ASTMNT_TYPE', 'For Accounts', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 2, 2, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 2, 2, 'ASTMNT_TYPE', 'For Cost Cntr', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 3, 3, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR,
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 4, 4, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 4, 4, 'ASTMNT_TYPE', 'For Banks', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 5, 5, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 5, 5, 'ASTMNT_TYPE', 'For Customer', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 6, 6, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 6, 6, 'ASTMNT_TYPE', 'For Vendor', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (1, 7, 7, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values   (2, 7, 7, 'ASTMNT_TYPE', 'For Lc.', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values  (1, 8, 8, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values  (2, 8, 8, 'ASTMNT_TYPE', 'For Cusromer Con. Vendor', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values  (1, 9, 9, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) Values  (2, 9, 9, 'ASTMNT_TYPE', 'For Vendor Conn. Cusromer', 1,1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 10, 10, 'ASTMNT_TYPE', 'Projects', 1, 1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 10, 10, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 11, 11, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 11, 11, 'ASTMNT_TYPE', 'Activities', 1, 1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,FLG_PRIV  ) VALUES ( 1, 12, 12, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,FLG_PRIV  ) VALUES ( 2, 12, 12, 'ASTMNT_TYPE', 'Branches', 1,1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,FLG_PRIV  ) VALUES ( 1, 13, 13, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,FLG_PRIV  ) VALUES ( 2, 13, 13, 'ASTMNT_TYPE', 'Campanies', 1,1)
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ,FLG_PRIV ) VALUES ( 1, 14, 14, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ,FLG_PRIV ) VALUES ( 2, 14, 14, 'ASTMNT_TYPE', 'Employees', 1,1)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 15, 15, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST,  FLG_PRIV, LBL_NO) Values   (2, 15, 15, 'ASTMNT_TYPE', 'Sales man',  1, 1, 488)
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 16, 16, 'ASTMNT_TYPE', '
INSERT INTO  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST,FLG_PRIV, LBL_NO) Values   (2, 16, 16, 'ASTMNT_TYPE', 'Collectors',     1, 1, 2459)
Insert into S_FL
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 17, 17, 'ASTMNT_TYPE', 'Sub. Analysis',  1, 1, 3299)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 0, 0, 'CHK_BGT_AMT', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 1, 'CHK_BGT_AMT', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(1, 2, 2, 'CHK_BGT_AMT', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 0, 0, 'CHK_BGT_AMT', 'Not used', 1, 0, 6090)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'CHK_BGT_AMT', 'General Budget',1, 0, 6090)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (2, 2, 2, 'CHK_BGT_AMT', 'Branch Budget', 1, 0, 6090)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 1, 0, 'CHEQ_VALUED', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(1, 2, 1, 'CHEQ_VALUED', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 3, 2, 'CHEQ_VALUED', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(1, 4, 3, 'CHEQ_VALUED', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(2, 1, 0, 'CHEQ_VALUED', 'No',1, 1, 1146)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(2, 2, 1, 'CHEQ_VALUED', 'Yes', 1, 1, 1146)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 3, 2, 'CHEQ_VALUED', 'Return',1, 1, 1146)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(2, 4, 3, 'CHEQ_VALUED', 'Delayed', 1, 1, 1146)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO)Values   (2, 0, 0, 'DUE_FLG', 'Under Due',1, 1, 74)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (1, 0, 0, 'DUE_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'DUE_FLG', 'Due', 1, 1, 74)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (1, 1, 1, 'DUE_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values(2, 2, 2, 'DUE_FLG', 'Cancel',1, 1, 74)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (1, 2, 2, 'DUE_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 2, 2, 'ADVNC_EXPNS_RVNU_FLG', 'Due Expens or Revenue',  1, 0, 16471)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 1, 1, 'ADVNC_EXPNS_RVNU_FLG', 'Advance Expens or Revenue',  1, 0, 16471)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values  (1, 2, 2, 'ADVNC_EXPNS_RVNU_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 1, 1, 'ADVNC_EXPNS_RVN
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 0, 0, 'ADVNC_EXPNS_RVNU_FLG', 'Not Transitional', 1, 0, 16471)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 0, 0, 'ADVNC_EXPNS_RVNU_FLG', '
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (1, 23, 23, 'UNPOST_DOC_TYPE', '
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LB
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 37, 37, 'UNPOST_DOC_TYPE', '
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (1, 77, 77, 'UNPOST_DOC_TYPE', '
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (2, 23, 23, 'UNPOST_DOC_TYPE', 'Bank Adjustment', 1, 1, 1417)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 36, 36, 'UNPOST_DOC_TYPE', 'Advance Expenses Settlement', 1, 1, 1417)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (2, 37, 37, 'UNPOST_DOC_TYPE', 'Advance Revenues Settlement', 1, 1, 1417)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO) Values (2, 77, 77, 'UNPOST_DOC_TYPE', 'Banks cash deposit Check', 1, 1, 1417)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 1, 'SRCHACC_ORDR_BY', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 2, 2, 'SRCHACC_ORDR_BY', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 1, 1, 'SRCHACC_ORDR_BY', 'Account No',    1, 0, 796)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO Values   (2, 2, 2, 'SRCHACC_ORDR_BY', 'Account Name',  1, 0, 796)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (2, 5, 5, 'TB_GROUP', 'Account No and Project No',     1, 0, NULL, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (1, 6, 6, 'TB_GROUP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (2, 6, 6, 'TB_GROUP', 'Activity No',    1, 0, NULL, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (1, 7, 7, 'TB_GROUP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values  (1, 4, 4, 'TB_GROUP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values  (2, 4, 4, 'TB_GROUP', 'Project No',   1, 0, NULL, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (1, 5, 5, 'TB_GROUP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values   (2, 7, 7, 'TB_GROUP', 'Account No and Activity No',   1, 0, NULL, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'JRNL_SEQ_TYP', 'By type',  1, 0, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (1, 2, 2, 'JRNL_SEQ_TYP', ' 
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values (2, 2, 2, 'JRNL_SEQ_TYP', 'By period and type',  1, 0, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 9, 9, 'STMNT_REP_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 9, 9, 'STMNT_REP_TYPE', 'By date and doc type summary',  1, 0, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO)  Values   (1, 1, 1, 'AC_DTL_SEQ', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 2, 2, 'AC_DTL_SEQ', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'AC_DTL_SEQ', 'By Account type',  1, 0, 12966)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 2, 2, 'AC_DTL_SEQ', 'By Account group',  1, 0, 12966)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values  (1, 1, 1, 'FILE_TYPE_ASTMNT', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 2, 2, 'FILE_TYPE_ASTMNT', '
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values (2, 1, 1, 'FILE_TYPE_ASTMNT', 'Exceel File',1, 0, NULL)
Insert into S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values  (2, 2, 2, 'FILE_TYPE_ASTMNT', 'Text File',  1, 0, NULL)
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 2, 2, 'PRNT_AUD_PRICE', 'Avarage Currencies Price',  1, 0,   5520)
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 2, 2, 'PRNT_AUD_PRICE', '
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 1, 1, 'PRNT_AUD_PRICE', 'Currencies Price Auditing',  1, 0,  5520)
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 1, 1, 'PRNT_AUD_PRICE', '
Insert into  S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) Values   (2, 3, 3, 'PRNT_AUD_PRICE', 'The Daily Currencies Pricing List',    1, 0,  5520)
Insert into  S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) Values   (1, 3, 3, 'PRNT_AUD_PRICE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,  LBL_NO) Values  (2, 2, 2, 'INPT_CNTR_BR_TYP', 'From Branch',   1, 0,  10472)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV,  LBL_NO) Values   (1, 2, 2, 'INPT_CNTR_BR_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV,  LBL_NO) Values (2, 1, 1, 'INPT_CNTR_BR_TYP', 'From Head Office', 1, 0,   10472)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV,  LBL_NO) Values (1, 1, 1, 'INPT_CNTR_BR_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, F
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 0, 0, 'BAL_TYPE', 'Balance Befor Posting', 1, 1, 1772)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (1, 2, 2, 'BAL_TYPE', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 2, 2, 'BAL_TYPE', 'All', 1, 1, 1772)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (1, 1, 1, 'BAL_TYPE', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (2, 1, 1, 'BAL_TYPE', 'Balance After Posting', 1, 1, 1772)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (6, 2, 2, 'BAL_TYPE', 'All', 1, 1, 1772)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES (6, 1, 1, 'BAL_TYPE', 'Balance After Posting', 1, 1, 1772)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values  (2, 1, 1, 'EXPNS_TAX_FLG', 'Tax Correction', 1, 0, 2298, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (2, 2, 2, 'EXPNS_TAX_FLG', 'Deferred of Tax Provider', 1, 0, 2298, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (2, 3, 3, 'EXPNS_TAX_FLG', 'Provider Of Reverse Tax', 1, 0, 2298, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (2, 4, 4, 'EXPNS_TAX_FLG', 'Input -PurchaseTax', 1, 0, 2298, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (1, 1, 1, 'EXPNS_TAX_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (1, 2, 2, 'EXPNS_TAX_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (1, 3, 3, 'EXPNS_TAX_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO, UP_DATE) Values (1, 4, 4, 'EXPNS_TAX_FLG', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values   (1, 1, 1, 'PMS_FLD_TYPE', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values   (1, 2, 2, 'PMS_FLD_TYPE', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values   (1, 3, 3, 'PMS_FLD_TYPE', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,   FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values   (2, 1, 1, 'PMS_FLD_TYPE', 'Text',  1, 0, SYSDATE, NULL)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values  (2, 2, 2, 'PMS_FLD_TYPE', 'No.',   1, 0, SYSDATE, NULL)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values   (2, 3, 3, 'PMS_FLD_TYPE', 'Date',     1, 0,SYSDATE, NULL)
Insert into S_FLAGS    (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, UP_DATE, LBL_NO)  Values    (1, 1, 2, 'IDNTF_FLG', '
Insert into S_FLAGS    (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, 
Insert into S_FLAGS    (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, UP_DATE, LBL_NO)  Values    (1, 3, 0, 'IDNTF_FLG', '
Insert into S_FLAGS    (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, UP_DATE, LBL_NO)  Values    (2, 2, 1, 'IDNTF_FLG', 'Matched',     1, 0, NULL, 13435)
Insert into S_FLAGS    (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, UP_DATE, LBL_NO)  Values    (2, 3, 0, 'IDNTF_FLG', 'Non Conformable',     1, 0, NULL, 13436)
Insert into S_FLAGS    (LANG_NO, FLG
_SR, FLG_VALUE, FLG_CODE, FLG_DESC,     FLG_ST, FLG_PRIV, UP_DATE, LBL_NO)  Values    (2, 1, 2, 'IDNTF_FLG', 'Select All',     1, 0, NULL, 2499)
Insert  into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values(1, 1, 1, 'RPRT_HDR_TYP', '
Insert  into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 2, 2, 'RPRT_HDR_TYP', '
Insert  into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values  (2, 3, 3, 'RPRT_HDR_TYP', 'Empty Header',  1, 0)
Insert  into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values  (2, 1, 1, 'RPRT_HDR_TYP', 'Reports Adresses - data',   1, 0)
Insert  into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 2, 2, 'RPRT_HDR_TYP', 'Reports Adresses - Image', 1, 0)
Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 3, 3, 'RPRT_HDR_TYP', '
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
                     From Ias_Post_Dtl D
                    WHERE ((AC_DTL_TYP=3 AND AC_CODE_DTL=P_Ac_code_Dtl )OR (AC_DTL_TYP=4 AND AC_CODE_DTL=IAS_CST_PKG.GET_C_VNDR(P_Ac_code_Dtl)))
Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
             From Ias_Post_Dtl D
            where nvl(A_code,'0') = Decode(P_A_Code,null,nvl(A_Code,'0'),P_A_Code)
           Select Decode(V_cur_code,YS_GEN_PKG.GET_LOCAL_CUR,nvl(sum(amt),0), nvl(sum(amt_f),0))
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
INSERT INTO S_ALRT_SYS_MST ( ALRT_NO,ALRT_TYP,LBL_NO,ORDR_NO,ALRT_DAY,MSG_NO,SYS_NO,ALRT_SLCT,ALRT_ACTN,ALRT_PRD_TYP,ALRT_SLCT_WHR,ALRT_SLCT_ORDR,INACTIVE,INACTIVE_DATE,INACTIVE_RES,INACTIVE_U_ID,UP_U_ID,UP_DATE,UP_CNT,PR_REP,AD_U_ID,AD_DATE,ALRT_ST,ALRT_GRP_BY,ALRT_HIDE,ALRT_HIDE_WHR,AD_TRMNL_NM,RPRT_NM,UP_TRMNL_NM )  VALUES ( 16,2,975,16,3,1983,30,'' Select 1 From Voucher_Detail d Where Rownum<=1'',1,1,''And d.Voucher_Type = 1
                                                             And  Exists ( Select 1 From Privilege 
                                                             Where U_Id          = V_USR_NO
                                                             And Exists ( Select 1 From Priv_Cash 
                                                                          Where U_Id= V_USR_NO
                                                             And To_Date(d.Value_Date) - (To_Date(Ias_Gen_Pkg.Get_Sysdate,''''dd/mm/rrrr'''')) Between 0 And '', NULL ,0, NULL , NULL , NULL ,1,TO_DATE(''01/05/2017 08:39:42'',''MM/DD/YYYY HH24:MI:SS''),1, NULL ,1,TO_DATE(''09/14/2014 05:34:29'',''MM/DD/YYYY HH24:MI:SS''),1, NULL ,0, NULL , NULL ,''IAS_Gl_PymntRcpt_Due_Chq'', NULL   )"INSERT INTO S_ALRT_SYS_MST ( ALRT_NO,ALRT_TYP,LBL_NO,ORDR_NO,ALRT_DAY,MSG_NO,SYS_NO,ALRT_SLCT,ALRT_ACTN,ALRT_PRD_TYP,ALRT_SLCT_WHR,ALRT_SLCT_ORDR,INACTIVE,INACTIVE_DATE,INACTIVE_RES,INACTIVE_U_ID,UP_U_ID,UP_DATE,UP_CNT,PR_REP,AD_U_ID,AD_DATE,ALRT_ST,ALRT_GRP_BY,ALRT_HIDE,ALRT_HIDE_WHR,AD_TRMNL_NM,RPRT_NM,UP_TRMNL_NM )  VALUES ( 17,2,976,17,3,1984,30,'' Select 1 From Voucher_Detail d Where Rownum<=1'',1,1,''And d.Voucher_Type = 2
                                                             And  Exists ( Select 1 From Privilege 
                                                             Where U_Id          = V_USR_NO
                                                             And Exists ( Select 1 From Priv_Cash 
                                                                          Where U_Id= V_USR_NO
  FUNCTION  Check_Ac_Cc_Pj_Use_Lmt( P_Lmt_Type  In  Number                                  ,
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Acc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
            From Ias_Ac_Cc_Lmt ,Ias_Cc_Tree
            Where Ias_Cc_Tree.Cc_Tree   =   Ias_Ac_Cc_Lmt.Cc_Code
        Exception 
        End;
        Begin
            Select 1 
            From  Ias_Ac_Cc_Lmt ,Ias_Acc_Tree,Ias_Cc_Tree
            Where Ias_Acc_Tree.Ac_Tree  =   Ias_Ac_Cc_Lmt.A_Code
        Exception 
        End;
        Begin
            Select 1 
INSERT   INTO s_flags_priv
        SELECT  DISTINCT      R.U_ID,
        FROM          s_flags S,USER_R R
        WHERE flg_code='ASTMNT_TYPE'
        AND         u_id NOT IN (SELECT U_ID FROM s_flags_priv WHERE flg_code='ASTMNT_TYPE')
UPDATE   s_flags_priv SET priv_flag=1 WHERE flg_code='ASTMNT_TYPE' AND priv_flag  <>1
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
select 1 from PRIV_CASH where U_ID=1 and rownum<=1
Insert into PRIV_CASH    (U_ID, CASH_NO, A_CY, CASH_TYPE, ADD_FLAG,  VIEW_FLAG, PYMNT, RCVD)
select 1 from PRIV_CASH where U_ID=1 AND 
Insert into PRIV_CASH    (U_ID, CASH_NO, A_CY, CASH_TYPE, ADD_FLAG,  VIEW_FLAG, PYMNT, RCVD)
update PRIV_CASH set ADD_FLAG=1 and PYMNT=1 and RCVD=1 where U_ID=1 and (ADD_FLAG<>1 or and PYMNT<>1 or RCVD<>1 )
SELECT DISTINCT CASH_NO,A_CY,CASH_TYPE   FROM PRIV_CASH"
(SELECT TABLE_NAME,COLUMN_NAME   FROM USER_COL_COMMENTS  WHERE (UPPER(COLUMN_NAME) IN ( ''DOC_NO'',''DOC_DATE'',''BRN_NO'',''CMP_NO'',''BRN_YEAR'',''BRN_USR'',''AD_U_ID'',''AD_DATE'',''UP_U_ID'',''UP_DATE''  ) OR COLUMN_NAME LIKE  ''%_A_NAME''  OR COLUMN_NAME LIKE  ''%_E_NAME'' ) AND TABLE_NAME NOT LIKE  ''%$%'' )"
 PROCEDURE GET_DATA_TBL_DTL(P_DATA_TBL   IN OUT DATA_TBL_DTL,
CREATE OR REPLACE PACKAGE GLS_DOC_SQ as
 FUNCTION Get_Doc_Typ_Serial (P_DOC_TYP In NUMBER) RETURN NUMBER ;
 FUNCTION Get_Doc_No (   P_Doc_Typ      In Number,
 FUNCTION Get_Doc_Srl (  P_Doc_Typ      In Number,
CREATE OR REPLACE PACKAGE BODY GLS_DOC_SQ as
 FUNCTION Get_Doc_Typ_Serial (P_DOC_TYP In NUMBER) RETURN NUMBER IS
 BEGIN
   EXECUTE IMMEDIATE ('SELECT '||V_FLD_NM||' FROM IAS_PARA_GL ') INTO V_DOC_SERIAL;
  EXCEPTION WHEN OTHERS THEN
FUNCTION Get_Doc_No (   P_Doc_Typ      In Number,
      Raise_Application_Error (-20001,'Error When Select Serial Typ For Document , '||Sqlerrm); 
      Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
        From FAS_TRNS_MST
       where Brn_No          = P_Brn_No;
       Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
         From FAS_INCRS_MST
        where Brn_No          = P_Brn_No;
       Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
         From FAS_DCRS_MST
        where Brn_No          = P_Brn_No;
       Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
         From FAS_RCVD_MST
        where Brn_No          = P_Brn_No;
    SELECT NVL(MAX(DOC_NO),0)+1 INTO V_DOC_NO
     FROM FAS_DEPR_MST
     WHERE BRN_NO = P_BRN_NO
       Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
         From FAS_INV_MST
        where Brn_No          = P_Brn_No;
       Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
         From FAS_ADJST_MST
        where Brn_No          = P_Brn_No;
      Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
        From FAS_EVL_MST
       where Brn_No          = P_Brn_No;
      Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
        From FAS_MRG_MST
       where Brn_No          = P_Brn_No;
      Select nvl(Max(doc_no),0) + 1 Into V_Doc_No 
        From FAS_HOLD_MST
       where Brn_No = P_Brn_No
Exception  
FUNCTION Get_Doc_Srl (  P_Doc_Typ      In Number,
      Raise_Application_Error (-20001,'Error When Select Serial Typ For Document , '||Sqlerrm); 
Exception  
   Raise_Application_Error (-20002,'Error When Select Serial Typ For Document , '||Sqlerrm);
     EXCEPTION 
          RAISE_APPLICATION_ERROR(-20000,'ERROR WHEN SELECT FROM MASTER TABLE '||P_TBL_NM||' = '||SQLERRM) ;
    /*--------------------------END OF GET DATA FROM MASTER TABLE------------------------------*/
    /*---------------------------START GET DATA FROM DETAIL TABLE------------------------------*/
    PROCEDURE GET_DATA_TBL_DTL(P_DATA_TBL   IN OUT DATA_TBL_DTL,
 SELECT ROWID ROW_ID,1 UMARKER , 
 FROM 
 Where Doc_Type <> 0 
 Where Pi_Type <> 0 
 SELECT ROWID ROW_ID,2 UMARKER , 
 WHERE 1 = 2 
Select 
 From 
CREATE View IAS_V_POST_DTL_OPN_YR AS 
SELECT USERNAME   FROM ALL_USERS  WHERE USERNAME LIKE  ''IAS%''  AND SUBSTR(USERNAME,8) = SUBSTR(USER,8) ORDER BY USERNAME"SELECT TBL_NAME,VW_NAME   FROM (SELECT ''ITEM_MOVEMENT'' TBL_NAME,''IAS_V_ITEM_MOVEMENT_YR'' VW_NAME   FROM DUAL  UNION SELECT ''GR_DETAIL'' TBL_NAME,''IAS_V_GR_DETAIL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_WHTRNS_MST'' TBL_NAME,''IAS_V_WHTRNS_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_WHTRNS_DTL'' TBL_NAME,''IAS_V_WHTRNS_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_POST_DTL'' TBL_NAME,''IAS_V_POST_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_BILL_MST'' TBL_NAME,''IAS_V_BILL_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_BILL_DTL'' TBL_NAME,''IAS_V_BILL_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_RT_BILL_MST'' TBL_NAME,''IAS_V_RT_BILL_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_RT_BILL_DTL'' TBL_NAME,''IAS_V_RT_BILL_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_PI_BILL_MST'' TBL_NAME,''IAS_V_PI_BILL_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_PI_BILL_DTL'' TBL_NAME,''IAS_V_PI_BILL_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_PR_BILL_MST'' TBL_NAME,''IAS_V_PR_BILL_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_PR_BILL_DTL'' TBL_NAME,''IAS_V_PR_BILL_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''P_ORDER'' TBL_NAME,''IAS_V_P_ORDER_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''P_ORDER_DETAIL'' TBL_NAME,''IAS_V_P_ORDER_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''P_REQUEST'' TBL_NAME,''IAS_V_P_REQUEST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''P_REQUEST_DETAIL'' TBL_NAME,''IAS_V_P_REQUEST_DETAIL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''MASTER_JOURNAL_V'' TBL_NAME,''GLS_V_JRNL_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''DETAIL_JOURNAL_V'' TBL_NAME,''GLS_V_JRNL_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''VOUCHERS'' TBL_NAME,''GLS_V_VCHR_MST_YR'' VW_NAME   FROM DUAL  UNION 
SELECT ''VOUCHER_DETAIL'' TBL_NAME,''GLS_V_VCHR_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_RQ_VCHR_MST'' TBL_NAME,''GLS_V_RQ_VCHR_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_RQ_VCHR_DTL'' TBL_NAME,''GLS_V_RQ_VCHR_DTL_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_RQ_JRNL_MST'' TBL_NAME,''GLS_V_RQ_JRNL_MST_YR'' VW_NAME   FROM DUAL  UNION SELECT ''IAS_RQ_JRNL_DTL'' TBL_NAME,''GLS_V_RQ_JRNL_DTL_YR'' VW_NAME   FROM DUAL )"SELECT USERNAME   FROM ALL_USERS  WHERE USERNAME LIKE  ''IAS%''  AND SUBSTR(USERNAME,8) = SUBSTR(USER,8) ORDER BY USERNAME DESC"SELECT COLUMN_NAME   FROM USER_TAB_COLUMNS  WHERE TABLE_NAME = ''IAS_POST_DTL''  AND COLUMN_NAME NOT IN ( ''DOC_NO_REF'',''DOC_JV_TYPE_REF'',''DOC_TYPE_REF'',''DOC_SER_REF''  )ORDER BY COLUMN_NAME"
SELECT COUNT(1)   FROM USER_TABLES  WHERE TABLE_NAME LIKE  ''GLS%''"
"GLS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
GLS_FUNCTION_PKG
GLS_PROCEDURE_PKG
ALTER TABLE 
SELECT TABLE_NAME,COLUMN_NAME   FROM USER_TAB_COLUMNS  WHERE UPPER(COLUMN_NAME) LIKE  (''%QTY%'')  AND TABLE_NAME LIKE  ''GLS%''  AND DATA_PRECISION = 6"
ALTER TABLE 
SELECT TABLE_NAME,COLUMN_NAME   FROM USER_TAB_COLUMNS  WHERE UPPER(COLUMN_NAME) LIKE  (''%QTY%'')  AND TABLE_NAME LIKE  ''GLS%''  AND DATA_PRECISION = 6"
ALTER TABLE 
SELECT TABLE_NAME,COLUMN_NAME   FROM USER_TAB_COLUMNS  WHERE UPPER(COLUMN_NAME) LIKE  (''%QTY%'')  AND TABLE_NAME LIKE  ''GLS%''  AND DATA_PRECISION = 6"
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
"GLS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
GLS_FUNCTION_PKG
"GLS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
GLS_PROCEDURE_PKG
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/INVLIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
 Insert into IAS_PARA_MOB_INV(PARA_NO, USE_BRCODE_STNG, USE_PRICE_MOB_INV, PRC_LVL_NO, SHOW_AVL_QTY, 
 INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP)
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 649, '
  INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 649, 'Quantity Preparation') 
 Insert into FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP)
 Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values (1, 650, '
 Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values(2, 650, 'In/out Item ser no') 
 Insert into FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP)
 Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values (1, 713, 'QR-CODE 
 Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values (2, 713, 'QR Code Configuration Methods') 
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 1, 626, '
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 626, 'Query for compound items and contents')
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO,SYS_NO,SCR_TYP ,DOC_TYP) VALUES ( 'INV', 626, 201, 'INVT027', 0, 0, 291,40,NUll,NULL)
Insert Into Form_detail(F_sys, Sys_no, Form_no, F_parent_no, F_file_name, F_bt_priv, F_inactive, F_order_no, Scr_orgnl, Scr_theme_no, Scr_typ, Doc_typ)
Insert Into Ias_form_name(Lang_no, Form_no, Form_name) Values (1, 721, '
Insert Into Ias_form_name (Lang_no, Form_no, Form_name)Values (2, 721, 'Items Movement In Bin Location') 
Insert Into Form_detail(F_sys, Sys_no, Form_no, F_parent_no, F_file_name, F_bt_priv, F_inactive, F_order_no, Scr_orgnl, Scr_theme_no, Scr_typ, Doc_typ)
Insert Into Ias_form_name(Lang_no, Form_no, Form_na
Insert Into Ias_form_name (Lang_no, Form_no, Form_name)Values (2, 717, 'Quantity Preparation Setup') 
Insert into FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,  F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,  SCR_TYP, DOC_TYP)
Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values(1, 8962, '
Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values(2, 8962, 'Component Items Inventory')  
Insert into FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,  F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,  SCR_TYP, DOC_TYP)
Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values(1,719, '
Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values(2,719, 'Store Items Components In Bin Location')  
Update S_Alrt_Sys_Mst Set RPRT_NM ='Ias_Item_Req_Min_Lmt' Where Alrt_No In (9,10,31,32)
Update S_Alrt_Sys_Mst Set RPRT_NM ='Ias_Item_Req_Max_Lmt' Where Alrt_No In (11,12)
Update S_ALRT_SYS_MST Set ALRT_SLCT_WHR= ' And Expire_Date - To_Date(Ias_Gen_Pkg.Get_Curdate,''DD/MM/YYYY'') <= Nvl(Day_Itm_Expire,0)
                                                                                                      And Exists ( Select 1 
                                                                                                                    From PRIVILEGE_GC
                                                                                                                     Where G_Code=Ias_Itm_Mst.G_Code
                                                                                                                  )' Where Alrt_No=14
Update S_ALRT_SYS_MST Set Alrt_Slct= 'Select 1  From Ias_Bill_Mst,Ias_Bill_Dtl,ias_itm_mst
                             Where Rownum<=1 ',
                                           And Exists ( Select 1 
                                                            From PRIVILEGE_GC
                                                             Where G_Code=Ias_Itm_Mst.G_Code
                                                          )' Where Alrt_No=4
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO,
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP) Values ('STP', 10, 473, 347, 'GENS032', 1, 0, 77, 1)
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 472, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 472, 'Encoding Web Services')
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 473, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 473, 'Synchronize Data To Websites')
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP,DOC_TYP) Values ('INV', 40, 236, 201, 'INVT013', 1, 0, 195, 3,36)
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP,DOC_TYP) Values ('INV', 40, 237, 201, 'INVT014', 1, 0, 196, 3,37)
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 236, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 236, 'Inventory Advances')
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 237, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 237, 'Advances Clearing')
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP,DOC_TYP) Values ('INV', 40, 607, 202, 'INVR024', 1, 0, 352, 4,NULL)
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 606, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 606, 'Reports- Inventory Advances')
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 607, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 607, 'Reports- Advances Clearing')
 INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP)
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 40101, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 40101, 'Direct Production System') 
 INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP)
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 731, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 731, 'Reports - Diassembling Compound Items') 
Update Form_Detail Set F_Parent_No = 40101
                 Where F_File_Name In ('INVS022','INVT011','INVT012','INVT027','INVT024','INVR034','INVR020')
Update Form_Detail Set F_ORDER_NO = 90
                 Where FORM_NO =401
Update Form_Detail Set F_ORDER_NO = 80
                 Where FORM_NO =40101
Update Form_Detail Set F_ORDER_NO = 10
                 Where FORM_NO =289
Update Form_Detail Set F_ORDER_NO = 20
                 Where FORM_NO =290
Update Form_Detail Set F_ORDER_NO = 30
                 Where FORM_NO =233
Update Form_Detail Set F_ORDER_NO = 40
                 Where FORM_NO =234
Update Form_Detail Set F_ORDER_NO = 50
                 Where FORM_NO =626
Update Form_Detail Set F_ORDER_NO = 60
                 Where FORM_NO =358
Update Form_Detail Set F_ORDER_NO = 70
            Where FORM_NO =601
Update IAS_FORM_NAME Set FORM_NAME = '
                 Where FORM_NO =40101
Update IAS_FORM_NAME Set FORM_NAME = 'Direct Production System'
                 Where FORM_NO =40101
Update IAS_FORM_NAME Set FORM_NAME = '
                 Where FORM_NO =290
Update IAS_FORM_NAME Set FORM_NAME = 'Assembling Order Requests'
                 Where FORM_NO =290
Update IAS_FORM_NAME Set FORM_NAME = '
                 Where FORM_NO =358
Update IAS_FORM_NAME Set FORM_NAME = 'Reports - Assembling Order Requests'
                 Where FORM_NO =358
Update IAS_FORM_NAME Set FORM_NAME = '
                 Where FORM_NO =233
Update IAS_FORM_NAME Set FORM_NAME = 'Assembling Order'
                 Where FORM_NO =233
Update IAS_FORM_NAME Set FORM_NAME = '
                 Where FORM_NO =234
Update IAS_FORM_NAME Set FORM_NAME = 'DiAssembling Order'
                 Where FORM_NO =234
Update IAS_FORM_NAME Set FORM_NAME = '
                 Where FORM_NO =601
Update IAS_FORM_NAME Set FORM_NAME = 'Reports - Assembling Order'
                 Where FORM_NO =601
Update IAS_FORM_NAME Set FORM_NAME = '
                 Where FORM_NO =731
Update IAS_FORM_NAME Set FORM_NAME = 'Reports - DiAssembling Order'
                 Where FORM_NO =731
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)
Update Form_Detail Set F_INACTIVE = 0 
               Where Form_No In (233,234,601,57,58,587,588,40101,733)
Update Form_Detail Set F_INACTIVE = 1 
               Where Form_No In (233,234,601,57,58,587,588,40101,733)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values   (1, 0, 0, 'SRVC_SYNCHRNZ_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values   (1, 1, 1, 'SRVC_SYNCHRNZ_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) 
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values   (2, 1, 1, 'SRVC_SYNCHRNZ_TYP', 'Manual', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 1, 1, 'SRVC_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 2, 2, 'SRVC_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 3, 3, 'SRVC_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2 , 1, 1, 'SRVC_TYPE', 'Sending', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2 , 2, 2, 'SRVC_TYPE', 'Reciept', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2 , 3, 3, 'SRVC_TYPE', 'ALL', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 1, 1, 'PRICE_RATE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 1,1, 'PRICE_RATE', 'Docoment Price Rate', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 2, 2, 'PRICE_RATE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 2, 2, 'PRICE_RATE', 'Current Price Rate', 1, 0)
INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR, 
   VALUES ( 640,'LOV_MEASURMENT',75,'SELECT MEASURE_CODE,MEASURE FROM MEASUREMENT',2,'1141,1140','60,200',NULL ,1,',1,',',2,' ,' where 1=1',null,null ,null ,0 )
INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR, 
 Values (313, 'LOV_MNG_CODE', 1655, 'SELECT MNG_CODE,DECODE(:PARAMETER.LANG_NO,1,NVL(MNG_A_NAME,MNG_E_NAME),NVL(MNG_E_NAME,MNG_A_NAME)) MNG_NM,G_CODE FROM IAS_MAINSUB_GRP_DTL WHERE 1=1', 3, '1645,558,169', '60,100,60', NULL, '3,1', ',1,3,', ',2,', NULL, NULL, NULL, NULL, 0)
INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR, 
 Values   (641, 'LOV_SUBG_CODE', 1656, 'SELECT SUBG_CODE,DECODE(:PARAMETER.LANG_NO,1,NVL(SUBG_A_NAME,SUBG_E_NAME),NVL(SUBG_E_NAME,SUBG_A_NAME)) SUBG_NM,MNG_CODE,G_CODE FROM IAS_SUB_GRP_DTL M WHERE 1=1 ', 4, '1646,558,1645,169', '80,100,60,60', NULL, '4,3,1', ',1,4,3,', ',2,', ' AND EXISTS ( SELECT 1 FROM PRIVILEGE_GC
                 WHERE U_ID = :PARAMETER.USER_NO                   
INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR, 
   (106, 'LOV_GROUP_NO', 1638, 'SELECT GROUP_NO,DECODE(:PARAMETER.LANG_DFLT,1,NVL(GROUP_A_NAME,GROUP_E_NAME),NVL(GROUP_E_NAME,GROUP_A_NAME)) G_NAME
 FROM IAS_ALTERNATIVE_GROUP
WHERE 1=1 
INSERT INTO S_LOV_SLCT(LOV_NO, LOV_NM, LOV_LBL_NO, 
VALUES (11, 'LOV_OUT_TYPE', 100,'SELECT OUT_TYPE,DECODE(:PARAMETER.LANG_DFLT,1,NVL(OUT_NAME,OUT_E_NAME),NVL(OUT_E_NAME,OUT_NAME)) OUT_NAME FROM OUT_TYPES WHERE 1=1', 2, 
    '351,39', '50,200', NULL, '1', '1,2', NULL, ' AND EXISTS ( SELECT 1 FROM PRIV_OUT_TYPE WHERE U_ID = :PARAMETER.USER_NO AND Out_Types.OUT_TYPE =OUT_TYPE AND NVL(VIEW_FLAG, 1) = 1 AND ROWNUM <= 1)',
Delete From S_LOV_SLCT Where LOV_NM='LOV_INV_SI' And Nvl(LOV_SPCL_FLG,0)=0
Insert into S_LOV_SLCT (LOV_NO, LOV_NM, LOV_LBL_NO, LOV_SQL, LOV_COL_CNT,LOV_COL_LBL, LOV_COL_WDTH, LOV_COL_HID, DFLT_ORDR, LOV_COL_LTR, 
 (11, 'LOV_INV_SI', 118, 'SELECT Distinct Ias_Bill_Mst.bill_no,Ias_Bill_Mst.bill_ser,bill_date,flg_desc t_name,c_name,Ias_Bill_Mst.Brn_No
  FROM Ias_Bill_Mst,Ias_Bill_Dtl, S_Flags WHERE Ias_Bill_Mst.Bill_ser=Ias_Bill_Dtl.Bill_ser And Ias_Bill_Mst.bill_doc_type = s_flags.flg_value
  Or Exists (select 1 From S_Brn_Usr_Priv Where U_Id = :Parameter.User_No And S_Brn_Usr_Priv.Brn_No = Ias_Bill_Mst.Brn_No
Insert into
 (11, 'LOV_INV_SO', 9528, 'Select Distinct Sales_Order.Order_No,
  From Sales_Order,Order_Detail
 Where  Sales_Order.Order_Ser=Order_Detail.Order_Ser
      Or Exists (Select 1 From S_Brn_Usr_Priv
                  Where U_Id = :Parameter.User_No                            
        Or Exists (Select S_Type
                     From Ias_Priv_Ar
                    Where U_Id = :Parameter.User_No
Delete From S_LOV_SLCT Where LOV_NM='LOV_INV_SI_DET' And Nvl(LOV_SPCL_FLG,0)=0
Insert into S_LOV_SLCT (LOV_NO, LOV_NM, LOV_LBL_NO, LOV_SQL, LOV_COL_CNT, LOV_COL_LBL, LOV_COL_WDTH, LOV_COL_HID, DFLT_ORDR, LOV_COL_LTR, 
   (11, 'LOV_INV_SI_DET', 118, 'SELECT Distinct Ias_Bill_Mst.bill_no,
    FROM Ias_Bill_Mst,Ias_Bill_Dtl, S
   WHERE Ias_Bill_Mst.Bill_ser=Ias_Bill_Dtl.Bill_ser
        Or Exists (select 1 From S_Brn_Usr_Priv
                    Where U_Id = :Parameter.User_No                            
Insert into S_LOV_SLCT (LOV_NO, LOV_NM, LOV_LBL_NO, LOV_SQL, LOV_COL_CNT,LOV_COL_LBL, LOV_COL_WDTH, LOV_COL_HID, DFLT_ORDR, LOV_COL_LTR, 
   (11, 'LOV_INV_SO_DET', 9528, 'Select Distinct Sales_Order.Order_No,
    From Sales_Order,Order_Detail,Ias_Itm_mst
   Where Sales_Order.Order_Ser=Order_Detail.Order_Ser
        Or Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = :Parameter.User_No                            
          Or Exists (Select S_Type
                       From Ias_Priv_Ar
                      Where U_Id = :Parameter.User_No
Insert into S_LOV_SLCT (LOV_NO, LOV_NM, LOV_LBL_NO, LOV_SQL, LOV_PRV, 
   (339, 'LOV_SI_SRL', 118, 'SELECT BILL_SER,
  FROM IAS_BILL_MST, S_FLAGS, IAS_SALES_TYPES
 WHERE IAS_BILL_MST.BILL_DOC_TYPE = S_FLAGS.FLG_VALUE
               ELSE (SELECT 1
                       FROM IAS_SHW_DOC_PRIV
                      WHERE U_ID = :PARAMETER.USER_NO
        OR EXISTS (SELECT S_TYPE
                     FROM IAS_PRIV_AR
                    WHERE U_ID = :PARAMETER.USER_NO
        OR EXISTS (SELECT 1
                     FROM S_BRN_USR_PRIV
                    WHERE U_ID = :PARAMETER.USER_NO
Delete From S_LOV_SLCT Where LOV_NM='LOV_INV_ITM_SRL' And Nvl(LOV_SPCL_FLG,0)=0
Insert into S_LOV_SLCT
   (160, 'LOV_INV_ITM_SRL', 1346, 'select DOC_SER, doc_no,DOC_TYPE_REF,
  from (
Select Nvl(M.Out_No,M.Doc_No) Doc_No,
                               When M.Doc_Type_Ref=6 And Exists (Select 1 From Gr_Note Where G_Ser=M.Doc_Ser And Pi_Type=2 And Nvl(Pur_Type,0)=2 And Rownum<=1 )Then 44                                       
From   (Select   Doc_Type,
        From     Ias_Item_Serialno
        Group By Doc_Type,
                 where 1=1
                                                    SELECT 1
                                                    FROM   s_brn_usr_priv
                                                    WHERE  u_id = :parameter.user_no
Delete From S_LOV_SLCT Where LOV_NM='LOV_TR_REC_ITM' And Nvl(LOV_SPCL_FLG,0)=0
Insert into S_LOV_SLCT
   (264, 'LOV_TR_REC_ITM', 95, ' SELECT  IAS_WHTRNS_DTL.RCRD_NO,
              (SELECT B_CODE FROM ITEM_BIN WHERE I_CODE = IAS_ITM_MST.I_CODE AND W_CODE = IAS_WHTRNS_DTL.T_W_CODE AND NVL(DEFLT_FLG,0) = 1 AND ROWNUM <=1 ) B_CODE ,
  FROM IAS_WHTRNS_DTL,IAS_ITM_MST
 WHERE IAS_WHTRNS_DTL.I_CODE = IAS_ITM_MST.I_CODE ', 7, 
Insert into S_LOV_SLCT
   (101, 'INV_LOV_ITEMS', 426, ' SELECT M.I_CODE,DECODE(:PARAMETER.LANG_DFLT,1,M.I_NAME,NVL(M.I_E_NAME,M.I_NAME)) I_NAME,D.ITM_UNT, M.I_DESC,VNDR_I_CODE
   FROM IAS_ITM_MST M ,IAS_ITM_DTL D
  WHERE M.I_CODE = D.I_CODE
    NULL, ' AND EXISTS (SELECT 1 FROM PRIVILEGE_GC 
                                    WHERE U_ID=:PARAMETER.USER_NO 
Insert into S_LOV_SLCT
   (264, 'LOV_OUT_REC_ITM', 5408, ' SELECT  IAS_OUT_REQUEST_DTL.RCRD_NO,
  FROM IAS_OUT_REQUEST_DTL,IAS_OUT_REQUEST_MST,IAS_ITM_MST
 WHERE IAS_OUT_REQUEST_DTL.I_CODE = IAS_ITM_MST.I_CODE 
Alter Table INCOMING_ACCOUNTS Drop  Constraint  
Alter Table INCOMING_ACCOUNTS Add (Constraint INCM_AC_PK
Alter Table INCOMING_ACCOUNTS Add (Constraint INCM_AC_PK
Alter Table OUTGOING_ACCOUNTS Drop  Constraint  
Alter Table OUTGOING_ACCOUNTS Add (Constraint OUT_AC_PK
Alter Table OUTGOING_ACCOUNTS Add (Constraint OUT_AC_PK
SELECT 1   FROM IAS_PARA_MOB_INV  WHERE ROWNUM <= 1"SELECT NVL(USE_COMPOUND_ITEMS,0)   FROM IAS_PARA_INV  WHERE ROWNUM <= 1"UPDATE FORM_DETAIL SET F_INACTIVE=0 WHERE FORM_NO = 234"UPDATE IAS_PARA_INV SET ( WGHT_PRFX,WGHT_BARCODE_LNGTH,WGHT_ITM_LNGTH,WGHT_VAL,REMOVE_WGHT_DGT,WGHT_INCLD_ITM_UNT,WGHT_FLG  )=(SELECT WEIGHTED_PERFIX,WEIGHTED_LENGTH,WEIGHTED_ITEM_LENGTH,WEIGHTED_BASIC,REMOVE_WEIGHT_DIGIT,WEIGHTED_INCLD_ITM_UNT,WEIGHTED   FROM IAS_PARA_POS  WHERE ROWNUM <= 1 ) WHERE WGHT_PRFX IS NULL"UPDATE WAREHOUSE_DETAILS SET ( PJ_NO,ACTV_NO,SO_DSC,SO_TYPE,SC_NO,BANK_NO,REP_CODE,COL_NO,C_CODE,CLC_TYP_NO_TAX,C_GROUP_CODE,SHO_WC_TYP  )=(SELECT PJ_NO,ACTV_NO,SO_DSC,SO_TYPE,SC_NO,BANK_NO,REP_CODE,COL_NO,C_CODE,CLC_TYP_NO_TAX,C_GROUP_CODE,3   FROM IAS_DFLT_DATA_ONLINE ) WHERE W_CODE IN (SELECT W_CODE   FROM IAS_DFLT_DATA_ONLINE ) AND SO_TYPE IS NULL"SELECT 1   FROM IAS_PARA_MOB_INV  WHERE ROWNUM <= 1"INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,VWREP_FLAG,F_ORDER_NO,AD_U_ID,AD_DATE )  SELECT R.U_ID,F.FORM_NO,1,1,1,1,1,1,1,F.F_ORDER_NO,1,SYSDATE   FROM USER_R R,FORM_DETAIL F  WHERE F.SYS_NO = 40  AND F.FORM_NO = 40101  AND NOT EXISTS  (SELECT 1   FROM PRIVILEGE  WHERE U_ID = R.U_ID  AND FORM_NO = F.FORM_NO  AND ROWNUM <= 1 )"INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,VWREP_FLAG,F_ORDER_NO,AD_U_ID,AD_DATE )  SELECT R.U_ID,F.FORM_NO,1,1,1,1,1,1,1,F.F_ORDER_NO
,1,SYSDATE   FROM USER_R R,FORM_DETAIL F  WHERE F.SYS_NO = 40  AND F.FORM_NO = 733  AND EXISTS  (SELECT 1   FROM PRIVILEGE  WHERE U_ID = R.U_ID  AND FORM_NO = 210  AND NVL(INCLUDE_FLAG,0) = 1  AND ROWNUM <= 1 )"INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,VWREP_FLAG,F_ORDER_NO,AD_U_ID,AD_DATE )  SELECT R.U_ID,F.FORM_NO,1,1,1,1,1,1,1,F.F_ORDER_NO,1,SYSDATE   FROM USER_R R,FORM_DETAIL F  WHERE R.U_ID = 1  AND F.SYS_NO IN ( 40,44  ) AND NOT EXISTS  (SELECT 1   FROM PRIVILEGE  WHERE U_ID = R.U_ID  AND FORM_NO = F.FORM_NO  AND ROWNUM <= 1 )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,1,1,''AVG_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,2,2,''AVG_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,3,3,''AVG_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,4,4,''AVG_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,5,5,''AVG_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,6,6,''AVG_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,1,1,''AVG_CST_FLG_CODE'',''Cost Avg. by 
Cost Avg. Method'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,2,2,''AVG_CST_FLG_CODE'',''Cost Avg. in another warehouse group or in another warehouse '',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,3,3,''AVG_CST_FLG_CODE'',''Primary Cost by Cost Avg. Method'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,4,4,''AVG_CST_FLG_CODE'',''Primary Cost By Item'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,5,5,''AVG_CST_FLG_CODE'',''Average Of Averages'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,6,6,''AVG_CST_FLG_CODE'',''Item Price By Vendor'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,1,1,''PRMRY_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,2,2,''PRMRY_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,3,3,''PRMRY_CST_FLG_CODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,1,1,''PRMRY_CST_FLG_CODE'',''Primary Cost by Cost Avg. Method'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,2,2,''PRMRY_CST_FLG_CODE'',''Primary Cost By Item'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,3,3,''PRMRY_CST_FLG_CODE'',''Cost Of First Incoming'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,F
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 1,2,2,''CST_TYP_FLG'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,1,1,''CST_TYP_FLG'',''Cost Avrage'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,LBL_NO,UP_DATE )  VALUES ( 2,2,2,''CST_TYP_FLG'',''Pirmary Cost'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,1,1,''SRCH_ITM_CRTRIA'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,1,1,''SRCH_ITM_CRTRIA'',''Begin with'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,2,2,''SRCH_ITM_CRTRIA'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,2,2,''SRCH_ITM_CRTRIA'',''Includes'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,3,3,''SRCH_ITM_CRTRIA'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,3,3,''SRCH_ITM_CRTRIA'',''End with'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,4,4,''SRCH_ITM_CRTRIA'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,4,4,''SRCH_ITM_CRTRIA'',''Equal'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,5,5,''SRCH_ITM_CRTRIA'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,5,5,''SRCH_ITM_CRTRIA'',''Partitions of Word'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,4,4,''OP_STK_MOVE'',''Items Not Sold'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,4,4,''OP_STK_MOVE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,1,1,''ITEMS_TYPE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,1,1,''ITEMS_TYPE'',''ASSEMBLED ITEMS'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,2,2,''ITEMS_TYPE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,2,2,''ITEMS_TYPE'',''COMPOUND ITEMS'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,15,15,''ITM_BARCODE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,15,15,''ITM_BARCODE'',''Level unit'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,5,5,''REP_ORDER'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,5,5,''REP_ORDER'',''By QTY'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,6,6,''REP_ORDER'',''By Cost'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,1,1,''ORDER_ASC_DESC'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,1,1,''ORDER_ASC_DESC'',''ASC'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,2,2,''ORDER_ASC_DESC'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,2,2,''ORDER_ASC_DESC'',''DESC'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,3,3,''ITEMS_TYPE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,3,3,''ITEMS_TYPE'',''Items With Tax'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,0,0,''WCODE_TYP_STORE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,0,0,''WCODE_TYP_STORE'',''Not Used'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,1,1,''WCODE_TYP_STORE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,1,1,''WCODE_TYP_STORE'',''Shipping'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,2,2,''WCODE_TYP_STORE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,2,2,''WCODE_TYP_STORE'',''Handing'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,3,3,''WCODE_TYP_STORE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,3,3,''WCODE_TYP_STORE'',''Shipping And Handing'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,1,1,''STORE_TYP'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,1,1,''STORE_TYP'',''Website Store'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,2,2,''STORE_TYP'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,2,2,''STORE_TYP'',''KNAWAT Website'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,5,5,''OP_STK_MOVE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,5,5,''OP_STK_MOVE'',''Items Has Open Stock And Not Sold'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,1,1,''REC_RATIO_TYPE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,2,2,''REC_RATIO_TYPE'',''
'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DE
SC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,2,2,''REC_RATIO_TYPE'',''Net Sales'',1,0, NULL , NULL   )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,1,1,''REC_RATIO_TYPE'',''Sales Ratio'',1,0, NULL , NULL   )"SELECT 1   FROM INV_PRPRTN_STP  WHERE ROWNUM <= 1"SELECT 1   FROM INCOM_TYPES  WHERE ROWNUM <= 1"SELECT 1   FROM INV_ASSMBL_TYP  WHERE ROWNUM <= 1"SELECT 1   FROM PRIV_INCOME_TYPE  WHERE ROWNUM <= 1"SELECT 1   FROM INV_ITM_BIN_MOVMNT  WHERE ROWNUM <= 1"SELECT HIDE_INCOMING_AC,HIDE_OUTGOING_AC,ITEM_POSTING_FLAG   FROM IAS_PARA_INV"SELECT 1   FROM OUTGOING_ACCOUNTS  WHERE ROWNUM <= 1"SELECT 1   FROM INCOMING_ACCOUNTS  WHERE ROWNUM <= 1"SELECT 1   FROM KIT_ITEMS  WHERE ROWNUM <= 1"SELECT 1   FROM INV_ITM_DSC  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_ITM_ATTACH  WHERE ROWNUM <= 1"SELECT 1   FROM INV_BATCH_NO_MTHD_MST  WHERE ROWNUM <= 1"SELECT 1   FROM INV_QR_CODE_MTHD_MST  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_CONN_GRP_ITM_TYPE  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_ONLINE_CONN_WC_RGN  WHERE ROWNUM <= 1"SELECT 1   FROM GNR_WEB_SRVC_MST  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_PARA_MOB_INV  WHERE ROWNUM <= 1"SELECT 1   FROM INV_ITM_EXCD_LMT_CST_PRV  WHERE ROWNUM <= 1"SELECT 1   FROM INV_ITM_CST_ORDR  WHERE ROWNUM <= 1"
SELECT COLUMN_NAME   FROM USER_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME NOT IN ( UPPER(''ROW_ID''),UPPER(''UMARKER'')  ) AND NVL(UPPER(:b2),''0'') NOT LIKE  ''%,'' || COLUMN_NAME  || '',%''  ORDER BY COLUMN_ID"
   Select   D.I_code
   From     Bin_details M
   Where    M.B_code = D.B_code And M.W_code = D.W_code
   Group By D.I_code
Select   Lang_no
   From     (Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 0
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 5
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 8
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 9
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 11
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 12
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 13
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 14
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 53
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 32
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 44
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 6
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 31
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 7
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 94
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 17
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 49
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 136
             Select Lang_no
             From   Ias_sys.Ias_docjv_type_systems_mst
             Where  Doc_type = 43
   Order By Doc_Type 
    Select I_Code,
           Round(Avg(Nvl(Wt_Avg_After, 0)) Keep (Dense_Rank Last Order By Rec_No),(Select Stkcost_Fraction From Ias_Para_Inv Where Rownum <= 1 )) Wt_Avg_After 
    From Gr_Detail
    Where Rec_No= Rec_No*1
    Group By I_Code
    Select I_Code, 
           Round(Nvl(I_Cwtavg, 0), (Select Stkcost_Fraction From Ias_Para_Inv Where Rownum <= 1 ))  I_Cwtavg
    From Ias_Itm_Mst
    Select I_Code,
           Round(Avg(Nvl(Wt_Avg_After, 0)) Keep (Dense_Rank Last Order By Rec_No),(Select Stkcost_Fraction From Ias_Para_Inv Where Rownum <= 1 )) Wt_Avg_After 
    From Gr_Detail
    Where Rec_No  =Rec_No*1
    Group By I_Code ,W_Code
    Select I_Code  ,
           Round(Nvl(I_Cwtavg, 0), (Select Stkcost_Fraction From Ias_Para_Inv Where Rownum <= 1 )) I_Cwtavg 
    From Ias_Itm_Wcode
    Select Gr.I_Code,
           Gr.Wt_Avg_After From (
        Select I_Code,
               Round(Avg(Nvl(Wt_Avg_After, 0)) Keep (Dense_Rank Last Order By Rec_No),(Select Stkcost_Fraction From Ias_Para_Inv Where Rownum <= 1)) Wt_Avg_After 
    From Gr_Detail
      Where Rec_No = Rec_No*1
       Group By I_Code ,Whg_Code ) Gr ,
    Select Distinct I_Code,
                    Round(Nvl(I_Cwtavg, 0), (Select Stkcost_Fraction From Ias_Para_Inv Where Rownum <= 1 )) Wt_Avg_After
     From Ias_Itm_Wcode ) Wcode
    Where Gr.I_Code        = Wcode.I_Code 
  SELECT I_CODE, BARCODE, NULL BATCH_NO, NULL EXPIRE_DATE, NULL FLEX_NO,
   FROM   IAS_ITM_DTL
   SELECT I_CODE, BARCODE, BATCH_NO, EXPIRE_DATE, FLEX_NO,
   FROM   IAS_ITM_UNT_BARCODE
   SELECT 52, m.quot_doc_type, m.qt_type, m.quot_no doc_no,
     FROM quotation m,
    WHERE m.quot_ser = d.quot_ser
   SELECT 53, m.bill_doc_type, m.so_type, m.order_no doc_no,
     FROM sales_order m,
    WHERE m.order_ser = d.order_ser
   SELECT 42, NULL bill_doc_type, m.po_type, m.po_no doc_no, m.po_ser doc_ser,
     FROM p_order m,
    WHERE m.po_ser = d.po_ser
SELECT 4, m.bill_doc_type, m.si_type, m.bill_no doc_no, m.bill_ser doc_ser,
   FROM   ias_bill_mst m,
   WHERE  m.bill_ser = d.bill_ser
   SELECT 5, m.rt_bill_doc_type, m.sr_type, m.rt_bill_no doc_no,
   FROM   ias_rt_bill_mst m,
   WHERE  m.rt_bill_ser = d.rt_bill_ser
   SELECT 6, m.bill_doc_type, m.bill_type_no, m.bill_no doc_no,
   FROM   ias_pi_bill_mst m,
   WHERE  m.bill_ser = d.bill_ser
   SELECT 7, m.rt_bill_doc_type, m.typ_no, m.rt_bill_no doc_no,
   FROM   ias_pr_bill_mst m,
   WHERE  m.rt_bill_ser = d.rt_bill_ser
   SELECT 8, NULL, m.incom_type, m.gr_no doc_no, m.g_ser doc_ser,
   FROM   gr_note m,
   WHERE  m.g_ser = d.g_ser
   SELECT 9, NULL, m.out_type, m.out_no doc_no, m.out_ser doc_ser,
   FROM   ias_outgoing_mst m,
   WHERE  m.out_ser = d.out_ser
   SELECT 15, m.bill_doc_type, NULL, m.DOC_NO doc_no, m.DOC_SER doc_ser,
   FROM   ias_bill_mst_add_disc m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 16, NULL bill_doc_type, NULL, m.DOC_NO doc_no, m.DOC_SER doc_ser,
   FROM   ias_pi_bill_mst_add_disc m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 'GNR_TAX_SLICE' table_name, 'error when insert TAX SLICE' err_type,
     FROM (SELECT slice_prcnt
             FROM gnr_tax_slice
           SELECT DISTINCT vat_per
                      FROM ias_itm_mst
                     WHERE vat_type = 1)
   SELECT 'GNR_TAX_CODE_DTL' table_name,
          'error when insert into GNR_TAX_CODE_DTL from interface_acc'
     FROM (SELECT ac_code_ar, ac_code_ap
             FROM gnr_tax_code_dtl
           SELECT vat_ac, vat_pur_a_code
             FROM interface_acc
            WHERE vat_ac || vat_pur_a_code IS NOT NULL)
   SELECT 'GNR_TAX_TYP_CLC_MST' table_name,
     FROM (SELECT clc_typ_no
             FROM gnr_tax_typ_clc_mst
            WHERE clc_tax_typ = 0
           SELECT tax_no
             FROM gnr_tax_code_mst)
   SELECT 'GNR_TAX_TYP_CLC_MST' table_name,
     FROM (SELECT clc
             FROM gnr_tax_typ_clc_mst
            WHERE clc_tax_typ <> 0
           SELECT flg_value clc_tax_typ
             FROM s_flags
            WHERE UPPER (flg_code) = 'VAT_TYP_SI'
   SELECT 'GNR_TAX_TYP_CLC_DTL' table_name,
     FROM (SELECT clc_typ_no, tax_no
             FROM gnr_tax_typ_clc_dtl
           SELECT clc_typ_no, clc_typ_no
             FROM gnr_tax_typ_clc_mst
            WHERE clc_tax_typ = 0)
   SELECT 'GNR_TAX_TYP_CLC_BRN' table_name,
     FROM (SELECT clc_typ_no, brn_no
             FROM gnr_tax_typ_clc_brn
           SELECT clc_typ_no, brn_no
             FROM (SELECT clc_typ_no, brn_no
                     FROM gnr_tax_typ_clc_mst, s_brn
                    WHERE clc_tax_typ > 0
                   SELECT clc_typ_no, i.brn_no
                     FROM gnr_tax_code_dtl t,
                    WHERE t.tax_no = d.tax_no
   SELECT 'GNR_TAX_ITM' table_name,
     FROM (SELECT i_code, vat_per, vat_type
             FROM ias_itm_mst
            WHERE NVL (vat_type, 0) = 1 AND vat_per IS NOT NULL
           SELECT i_code, tax_prcnt, tax_no
             FROM gnr_tax_itm)
   SELECT 'GNR_TAX_ITM' table_name,
     FROM (SELECT i_code, tax_prcnt, tax_no
             FROM  gnr_tax_itm
            WHERE tax_no = 1 AND NVL (tax_prcnt, 0) > 0
           SELECT i_code, vat_per, vat_type
             FROM  ias_itm_mst
            WHERE NVL (vat_type, 0) = 1 AND vat_per IS NOT NULL)
   SELECT table_name, 'Clc_Typ_No_Tax Is Null' err_type, rcrd_cnt
     FROM (SELECT 'Ias_Bill_Mst_Add_Disc_Rq' table_name, COUNT (*) rcrd_cnt
             FROM ias_b
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Bill_Mst_Add_Disc' table_name, COUNT (*) rcrd_cnt
             FROM ias_bill_mst_add_disc
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Sales_Order' table_name, COUNT (*) rcrd_cnt
             FROM sales_order
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Rt_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_rt_bill_mst
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Rt_Bill_Mst_Rq' table_name, COUNT (*) rcrd_cnt
             FROM ias_rt_bill_mst_rq
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Pi_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_pi_bill_mst
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Pr_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_pr_bill_mst
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Ar_Cntrct_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_ar_cntrct_mst
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Pi_Bill_Mst_Add_Disc' table_name, COUNT (*) rcrd_cnt
             FROM ias_pi_bill_mst_add_disc
            WHERE clc_typ_no_tax IS NULL
           SELECT 'P_Order' table_name, COUNT (*) rcrd_cnt
             FROM p_order
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Pr_Req_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_pr_req_bill_mst
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Vnd_Quot_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_vnd_quot_mst
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Ap_Cntrct_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_ap_cntrct_mst
            WHERE clc_typ_no_tax IS NULL
           SELECT 'Ias_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_bill_mst
            WHERE clc_typ_no_tax IS NULL)
    WHERE rcrd_cnt > 0
   SELECT table_name, 'clc_typ_no_tax must allowed from vat' err_type,
     FROM (SELECT 'Sales_Order' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM sales_order 
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Rt_Bill_Mst' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_rt_bill_mst
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Rt_Bill_Mst_Rq' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_rt_bill_mst_rq
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Pi_Bill_Mst' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_pi_bill_mst
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Pr_Bill_Mst' table_name,
         'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_pr_bill_mst
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Ar_Cntrct_Mst' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_ar_cntrct_mst
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Pi_Bill_Mst_Add_Disc' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_pi_bill_mst_add_disc
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'P_Order' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM p_order
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Pr_Req_Bill_Mst' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_pr_req_bill_mst
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Vnd_Quot_Mst' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_vnd_quot_mst
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Ap_Cntrct_Mst' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_ap_cntrct_mst
            WHERE clc_typ_no_tax <> (SELECT clc_typ_no
                                       FROM gnr_tax_typ_clc_mst
                                      WHERE clc_tax_typ = 1 AND ROWNUM <= 1)
           SELECT 'Ias_Bill_Mst' table_name,
                  'clc_typ_no_tax must allowed from vat' err_type,
             FROM ias_bill_mst
            WHERE clc_typ_no_tax <>
                         (SELECT clc_typ_no
                            FROM gnr_tax_typ_clc_mst
                           WHERE clc_tax_typ = NVL (export, 0) AND ROWNUM <= 1)
    WHERE rcrd_cnt > 0
   SELECT table_name,
     FROM (SELECT 'Sales_Order' table_name, COUNT (*) rcrd_cnt
             FROM sales_order a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                       WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_bill_mst a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Rt_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_rt_bill_mst a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
      FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Rt_Bill_Mst_Rq' table_name, COUNT (*) rcrd_cnt
             FROM ias_rt_bill_mst_rq a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Pi_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_pi_bill_mst a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Pr_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_pr_bill_mst a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Gr_Note' table_name, COUNT (*) rcrd_cnt
             FROM gr_note a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Bill_Mst_Add_Disc_Rq' table_name, COUNT (*) rcrd_cnt
             FROM ias_bill_mst_add_disc_rq a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Bill_Mst_Add_Disc' table_name, COUNT (*) rcrd_cnt
             FROM ias_bill_mst_add_disc a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Ar_Cntrct_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_ar_cntrct_mst a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Pi_Bill_Mst_Add_Disc' table_name, COUNT (*) rcrd_cnt
             FROM ias_pi_bill_mst_add_disc a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Vnd_Quot_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_vnd_quot_mst a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'P_Order' table_name, COUNT (*) rcrd_cnt
             FROM p_order a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Pr_Req_Bill_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_pr_req_bill_mst a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
                                                  FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
           SELECT 'Ias_Ap_Cntrct_Mst' table_name, COUNT (*) rcrd_cnt
             FROM ias_ap_cntrct_mst a
            WHERE clc_typ_no_tax <>
                     (SELECT clc_typ_no
                        FROM gnr_tax_typ_clc_brn
                       WHERE clc_typ_no NOT IN (SELECT clc_typ_no
FROM gnr_tax_typ_clc_mst
                                                 WHERE clc_tax_typ <> 0)
    WHERE rcrd_cnt > 0
   SELECT   (SELECT doc_type_name
               FROM ias_sys.ias_docjv_type_systems_mst
              WHERE doc_type = a.doc_type
            'error when insert into gnr_rq_tax_itm_movmnt' err_type,
       FROM (SELECT doc_type, bill_doc_type, doc_jv_type, doc_no, doc_ser,
               FROM v_gnr_rq_tax_itm_movmnt
             SELECT doc_type, bill_doc_type, doc_jv_type, doc_no, doc_ser,
               FROM gnr_rq_tax_itm_movmnt) a
   GROUP BY doc_type
   SELECT   (SELECT doc_type_name
               FROM ias_sys.ias_docjv_type_systems_mst
              WHERE doc_type = a.doc_type
            'error when insert into gnr_tax_itm_movmnt' err_type,
       FROM (SELECT doc_type, bill_doc_type, doc_jv_type, doc_no, doc_ser,
               FROM v_gnr_tax_itm_movmnt
             SELECT doc_type, bill_doc_type, doc_jv_type, doc_no, doc_ser,
               FROM gnr_tax_itm_movmnt) a
   GROUP BY doc_type
 Select   I_Code, W_Code, Expire_Date, Batch_No,
   From     Item_Movement
   Group By I_Code,
   Select Prv.U_Id, Lvl.Lev_No, Prc.I_Code, Prc.Itm_Unt, Prc.P_Size, A_Cy,
   From   Ias_Pricing_Levels Lvl,
   Where  Nvl (Prv.Add_Flag, 0) = 1
AS SELECT D.I_CODE,
       FROM IAS_ITM_ATTACH_MOVEMENT M, IAS_ITM_DTL D, IAS_ITM_ONLINE O
      WHERE     M.I_CODE = D.I_CODE
   GROUP BY D.I_CODE,
   SELECT 0 doc_type, NULL bill_doc_type, 0 doc_no, i_code, i_qty i_qty,
          (SELECT cur_code
           FROM   ex_rate
           WHERE  stock_cur = 1) a_cy, 0 ac_rate, 1 stock_rate, NULL cc_code,
   FROM   ias_open_stock
   SELECT 1 doc_type, m.bill_doc_type, m.bill_no, d.i_code, d.i_qty i_qty,
   FROM   ias_bill_mst m,
   WHERE  m.bill_ser = d.bill_ser
   AND    (SELECT use_out_bills
           FROM   ias_para_ar) = 0
   SELECT 1 doc_type, m.bill_doc_type, m.out_no, d.i_code, d.i_qty i_qty,
   FROM   master_out_bills m,
   WHERE  m.out_ser = d.out_ser AND (SELECT use_out_bills
                                     FROM   ias_para_ar) = 1
   SELECT 2 doc_type, m.bill_doc_type, m.bill_no, d.i_code, d.i_qty i_qty,
   FROM   ias_pi_bill_mst m,
   WHERE  m.bill_ser = d.bill_ser 
   SELECT 2 doc_type, m.pi_doc_type bill_doc_type, m.pi_no, d.i_code,
   FROM   gr_note m,
   WHERE  m.g_ser = d.g_ser
   SELECT 3 doc_type, m.rt_bill_doc_type bill_doc_type, m.rt_bill_no,
   FROM   ias_rt_bill_mst m,
   WHERE  m.rt_bill_ser = d.rt_bill_ser
   AND    (SELECT use_out_bills
           FROM   ias_para_ar) = 0
   SELECT 3 doc_type, m.rt_bill_doc_type bill_doc_type, m.ret_no, d.i_code,
   FROM   ias_ret_bill_mst m,
   WHERE  m.ret_ser = d.ret_ser AND (SELECT use_
                                     FROM   ias_para_ar) = 1
   SELECT 4 doc_type, m.rt_bill_doc_type bill_doc_type, m.rt_bill_no,
   FROM   ias_pr_bill_mst m,
   WHERE  m.rt_bill_ser = d.rt_bill_ser AND NVL (service_itm, 0) = 0
   SELECT 5 doc_type, m.incom_type bill_doc_type, m.gr_no, d.i_code,
   FROM   gr_note m,
   WHERE  m.g_ser = d.g_ser AND m.pi_type = 5
   SELECT 6 doc_type, m.out_type bill_doc_type, m.out_no, d.i_code,
   FROM   ias_outgoing_mst m,
   WHERE  m.out_ser = d.out_ser
   SELECT 7 doc_type, m.tr_type bill_doc_type, m.tr_no, d.i_code,
          d.stk_cost stk_cost, NULL dis_amt, (SELECT cur_code
                                              FROM   ex_rate
                                              WHERE  stock_cur = 1) a_cy,
   FROM   ias_whtrns_mst m,
   WHERE  m.tr_ser = d.tr_ser AND m.tr_inout_type = 1
   SELECT 8 doc_type, m.tr_type bill_doc_type, m.tr_no, d.i_code,
          d.stk_cost stk_cost, NULL dis_amt, (SELECT cur_code
                                              FROM   ex_rate
                                              WHERE  stock_cur = 1) a_cy,
   FROM   ias_whtrns_mst m,
   WHERE  m.tr_ser = d.tr_ser AND m.tr_inout_type = 2
   SELECT 11 doc_type, NULL bill_doc_type, m.doc_no, d.i_code,
          d.i_cost stk_cost, NULL dis_amt, (SELECT cur_code
                                            FROM   ex_rate
                                            WHERE  stock_cur = 1) a_cy,
   FROM   assemble_kit_items m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 12 doc_type, NULL bill_doc_type, m.doc_no, d.kit_item_no i_code,
          NULL dis_amt, (SELECT cur_code
                         FROM   ex_rate
                         WHERE  stock_cur = 1) a_cy, 0 ac_rate, m.stk_rate,
   FROM   assemble_kit_items m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 13 doc_type, NULL bill_doc_type, m.doc_no, d.kit_item_no i_code,
          NULL dis_amt, (SELECT cur_code
                         FROM   ex_rate
                         WHERE  stock_cur = 1) a_cy, 0 ac_rate, m.stk_rate,
   FROM   disassemble_kit_items m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 14 doc_type, NULL bill_doc_type, m.doc_no, d.i_code,
          d.i_cost stk_cost, NULL dis_amt, (SELECT cur_code
                                            FROM   ex_rate
                                            WHERE  stock_cur = 1) a_cy,
   FROM   disassemble_kit_items m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 15 doc_type, m.adjust_type bill_doc_type, m.doc_no, d.i_code,
   FROM   stk_adjustment m,
   WHERE  m.doc_ser = d.doc_ser AND m.adjust_type = 1 AND pls_mins > 0
   SELECT 16 doc_type, m.adjust_type bill_doc_type, m.doc_no, d.i_code,
   FROM   stk_adjustment m,
   WHERE  m.doc_ser = d.doc_ser AND m.adjust_type = 1 AND pls_mins < 0
   SELECT 17 doc_type, m.adjust_type bill_doc_type, m.doc_no, d.i_code,
   FROM   stk_adjustment m,
   WHERE  m.doc_ser = d.doc_ser AND m.adjust_type = 2
--AND (SELECT WTAVG_TYPE FROM IAS_PARA_INV)<>1
   SELECT 18 doc_type, m.adjust_type bill_doc_type, m.doc_no, d.i_code,
   FROM   stk_adjustment m,
   WHERE  m.doc_ser = d.doc_ser AND m.adjust_type = 2
--AND (SELECT WTAVG_TYPE FROM IAS_PARA_INV)<>1
  SELECT 1203 doc_type, NULL bill_doc_type, m.mrc_sq, d.item_code,
   FROM   mrp_sfc_materials_receive_mstr m,
   WHERE  m.mrc_sq = d.mrc_sq AND m.cmp_no = d.cmp_no AND m.brn_no = d.brn_no
   SELECT 1206 doc_type, NULL bill_doc_type, m.mrt_sq, d.item_code,
   FROM   mrp_sfc_materials_return_mstr m,
   WHERE  m.mrt_sq = d.mrt_sq AND m.cmp_no = d.cmp_no AND m.brn_no = d.brn_no
   SELECT 1207 doc_type, NULL bill_doc_type, m.mdv_sq, d.item_code,
   FROM   mrp_sfc_products_delivery_mstr m,
   WHERE  m.mdv_sq = d.mdv_sq AND m.cmp_no = d.cmp_no AND m.brn_no = d.brn_no
   SELECT 0 doc_type, NULL bill_doc_type, 0 doc_no, i_code, i_qty i_qty,
          (SELECT cur_code
           FROM   ex_rate
           WHERE  stock_cur = 1) a_cy, 0 ac_rate, 1 stock_rate, NULL cc_code,
   FROM   ias_open_stock
   SELECT 1 doc_type, m.bill_doc_type, m.bill_no, d.i_code, d.i_qty i_qty,
   FROM   ias_bill_mst m,
   WHERE  m.bill_ser = d.bill_ser
   AND    (SELECT use_out_bills
           FROM   ias_para_ar) = 0
   SELECT 1 doc_type, m.bill_doc_type, m.out_no, d.i_code, d.i_qty i_qty,
   FROM   master_out_bills m,
   WHERE  m.out_ser = d.out_ser AND (SELECT use_out_bills
                                     FROM   ias_para_ar) = 1
   SELECT 2 doc_type, m.bill_doc_type, m.bill_no, d.i_code, d.i_qty i_qty,
   FROM   ias_pi_bill_mst m,
   WHERE  m.bill_ser = d.bill_ser 
   SELECT 2 doc_type, m.pi_doc_type bill_doc_type, m.pi_no, d.i_code,
   FROM   gr_note m,
   WHERE  m.g_ser = d.g_ser
   SELECT 3 doc_type, m.rt_bill_doc_type bill_doc_type, m.rt_bill_no,
   FROM   ias_rt_bill_mst m,
   WHERE  m.rt_bill_ser = d.rt_bill_ser
   AND    (SELECT use_out_bills
           FROM   ias_para_ar) = 0
   SELECT 3 doc_type, m.rt_bill_doc_type bill_doc_type, m.ret_no, d.i_code,
   FROM   ias_ret_bill_mst m,
   WHERE  m.ret_ser = d.ret_ser AND (SELECT use_out_bills
                                     FROM   ias_para_ar) = 1
   SELECT 4 doc_type, m.rt_bill_doc_type bill_doc_type, m.rt_bill_no,
   FROM   ias_pr_bill_mst m,
   WHERE  m.rt_bill_ser = d.rt_bill_ser AND NVL (service_itm, 0) = 0
   SELECT 5 doc_type, m.incom_type bill_doc_type, m.gr_no, d.i_code,
   FROM   gr_note m,
   WHERE  m.g_ser = d.g_ser AND m.pi_type = 5
   SELECT 6 doc_type, m.out_type bill_doc_type, m.out_no, d.i_code,
   FROM   ias_outgoing_mst m,
   WHERE  m.out_ser = d.out_ser
   SELECT 7 doc_type, m.tr_type bill_doc_type, m.tr_no, d.i_code,
          d.stk_cost stk_cost, NULL dis_amt, (SELECT cur_code
                                              FROM   ex_rate
                                              WHERE  stock_cur = 1) a_cy,
   FROM   ias_whtrns
   WHERE  m.tr_ser = d.tr_ser AND m.tr_inout_type = 1
   SELECT 8 doc_type, m.tr_type bill_doc_type, m.tr_no, d.i_code,
          d.stk_cost stk_cost, NULL dis_amt, (SELECT cur_code
                                              FROM   ex_rate
                                              WHERE  stock_cur = 1) a_cy,
   FROM   ias_whtrns_mst m,
   WHERE  m.tr_ser = d.tr_ser AND m.tr_inout_type = 2
   SELECT 11 doc_type, NULL bill_doc_type, m.doc_no, d.i_code,
          d.i_cost stk_cost, NULL dis_amt, (SELECT cur_code
                                            FROM   ex_rate
                                            WHERE  stock_cur = 1) a_cy,
   FROM   assemble_kit_items m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 12 doc_type, NULL bill_doc_type, m.doc_no, d.kit_item_no i_code,
          NULL dis_amt, (SELECT cur_code
                         FROM   ex_rate
                         WHERE  stock_cur = 1) a_cy, 0 ac_rate, m.stk_rate,
   FROM   assemble_kit_items m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 13 doc_type, NULL bill_doc_type, m.doc_no, d.kit_item_no i_code,
          NULL dis_amt, (SELECT cur_code
                         FROM   ex_rate
                         WHERE  stock_cur = 1) a_cy, 0 ac_rate, m.stk_rate,
   FROM   disassemble_kit_items m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 14 doc_type, NULL bill_doc_type, m.doc_no, d.i_code,
          d.i_cost stk_cost, NULL dis_amt, (SELECT cur_code
                                            FROM   ex_rate
                                            WHERE  stock_cur = 1) a_cy,
   FROM   disassemble_kit_items m,
   WHERE  m.doc_ser = d.doc_ser
   SELECT 15 doc_type, m.adjust_type bill_doc_type, m.doc_no, d.i_code,
   FROM   stk_adjustment m,
   WHERE  m.doc_ser = d.doc_ser AND m.adjust_type = 1 AND pls_mins > 0
   SELECT 16 doc_type, m.adjust_type bill_doc_type, m.doc_no, d.i_code,
   FROM   stk_adjustment m,
   WHERE  m.doc_ser = d.doc_ser AND m.adjust_type = 1 AND pls_mins < 0
   SELECT 17 doc_type, m.adjust_type bill_doc_type, m.doc_no, d.i_code,
   FROM   stk_adjustment m,
   WHERE  m.doc_ser = d.doc_ser AND m.adjust_type = 2
--AND (SELECT WTAVG_TYPE FROM IAS_PARA_INV)<>1
   SELECT 18 doc_type, m.adjust_type bill_doc_type, m.doc_no, d.i_code,
   FROM   stk_adjustment m,
   WHERE  m.doc_ser = d.doc_ser AND m.adjust_type = 2
Select *
From Ias_Whtrns_Mst Wht_Mst
Where Tr_Inout_Type = 2
Select 1
From Ias_Whtrns_Dtl
Where F_Tr_Ser=Wht_Mst.F_Tr_Ser
Group By F_Tr_Ser
   SELECT a.u_id,
   FROM   inv_prv_assmbl_typ a,
   WHERE  a.u_id = b.u_id
   SELECT b.u_id,
   FROM   user_r b,
   WHERE  NOT EXISTS (
                     SELECT 1
                     FROM   inv_prv_assmbl_typ
                     WHERE  typ_no = c.typ_no AND u_id = b.u_id
   SELECT a.u_id,
   FROM   privilege_wh a,
   WHERE  a.u_id = b.u_id AND a.w_code = c.w_code
   SELECT b.u_id,
   FROM   user_r b,
   WHERE  NOT EXISTS (
                     SELECT 1
                     FROM   privilege_wh
                     WHERE  w_code = c.w_code AND u_id = b.u_id
Select 
From Ias_Item_Serialno 
    From Ias_Item_Serialno 
    Where Doc_Type=7
    And Not Exists ( Select 1 From Ias_Whtrns_Dtl
                      Where Tr_Inout_Type=2
   SELECT   *
   FROM     (SELECT 'Assmble' typ, doc_ser, i_code, w_code,
             FROM   (
             (SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 12
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   assemble_kit_items_det)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   assemble_kit_items_det
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code
                      FROM   item_movement
                      WHERE  doc_type = 12)
                     (SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 11
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   kit_items_detail)
                     (SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   kit_items_detail
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 11)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   assemble_kit_items_det
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   kit_items_detail)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   kit_items_detail
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   assemble_kit_items_det))
             SELECT 'DisAssmble' typ, doc_ser, i_code, w_code,
             FROM   ((SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 13
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   disassemble_kit_items_det)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   disassemble_kit_items_det
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 13)
                     (SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 14
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   dis_kit_items_detail)
                     (SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   dis_kit_item
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 14)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   disassemble_kit_items_det
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   dis_kit_items_detail)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   dis_kit_items_detail
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   disassemble_kit_items_det)))
   ORDER BY typ,
SELECT NVL(USE_ONE_BARCODE_FOR_ITM,0)   FROM IAS_PARA_INV"
                      FROM   item_movement
                      WHERE  doc_type = 12)
                     (SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 11
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   kit_items_detail)
                     (SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   kit_items_detail
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 11)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   assemble_kit_items_det
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   kit_items_detail)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   kit_items_detail
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   assemble_kit_items_det))
             SELECT 'DisAssmble' typ, doc_ser, i_code, w_code,
             FROM   ((SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 13
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   disassemble_kit_items_det)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
 SELECT ROWID ROW_ID,1 UMARKER , 
 FROM 
 Where Doc_Type <> 0 
 SELECT ROWID ROW_ID,2 UMARKER , 
 WHERE 1 = 2 
 AS  SELECT 
SELECT USERNAME   FROM ALL_USERS,IAS_PARA_GEN  WHERE USERNAME LIKE  ''IAS%''  AND SUBSTR(USERNAME,4,4) >= NVL(STRT_CRT_VIEW_YEAR,0)  AND SUBSTR(USERNAME,8) = SUBSTR(USER,8) ORDER BY USERNAME"SELECT USERNAME   FROM ALL_USERS,IAS_PARA_GEN  WHERE USERNAME LIKE  ''IAS%''  AND SUBSTR(USERNAME,4,4) >= NVL(STRT_CRT_VIEW_YEAR_INV,0)  AND SUBSTR(USERNAME,8) = SUBSTR(USER,8) ORDER BY USERNAM
E"SELECT TBL_NAME,VW_NAME   FROM (SELECT ''IAS_ITEM_SERIALNO'' TBL_NAME,''IAS_V_ITEM_SERIALNO_YR'' VW_NAME   FROM DUAL )"
                      FROM   item_movement
                      WHERE  doc_type = 11
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   kit_items_detail)
                     (SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   kit_items_detail
                      SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 11)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   assemble_kit_items_det
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   kit_items_detail)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   kit_items_detail
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   assemble_kit_items_det))
             SELECT 'DisAssmble' typ, doc_ser, i_code, w_code,
             FROM   ((SELECT TO_CHAR (doc_ser) doc_ser, i_code, w_code,
                      FROM   item_movement
                      WHERE  doc_type = 13
                      SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                      FROM   disassemble_kit_items_det)
                     (SELECT TO_CHAR (doc_ser) doc_ser, kit_item_no i_code,
                     BEGIN
                           SELECT INV_ITM_SRL_SEQ.NEXTVAL INTO :NEW.SRL_SQ FROM DUAL;
                         EXCEPTION WHEN OTHERS THEN
                     END; 
INV_DBA_PROCEDURE_SCRIPT
CREATE TABLE IAS_ITEMS_ACTIVITY(
CREATE TABLE IAS_ITEMS_ACTIVITY_PRIV(
CREATE TABLE IAS_PARA_INV (
CREATE TABLE ITEM_TYPES ( 
CREATE TABLE MEASUREMENT ( 
CREATE TABLE IAS_ALTERNATIVE_GROUP ( 
CREATE TABLE IAS_ITEM_LEVELS ( 
CREATE TABLE INCOM_TYPES(
CREATE TABLE PRIV_INCOME_TYPE(
CREATE TABLE REQUEST_TYPES(
CREATE TABLE PRIV_REQ_TYPE(
CREATE TABLE OUT_TYPES(
CREATE TABLE PRIV_OUT_TYPE(
CREATE TABLE TRANSFER_TYPES(
CREATE TABLE PRIV_TRNSFR_TYPE(
CREATE TABLE IAS_STK_ADJST_TYPES(
CREATE TABLE  IAS_PRIV_STK_ADJST_TYPES(
CREATE TABLE IAS_INV_TYPES(
CREATE TABLE IAS_PRIV_INV_TYPE(
CREATE TABLE INV_ASSMBL_TYP (
CREATE TABLE INV_PRV_ASSMBL_TYP(
CREATE TABLE IAS_UNTS_CONV(
CREATE TABLE IAS_PRICING_LEVELS (  LEV_NO          NUMBER(3),
CREATE TABLE OUTGOING_ACCOUNTS(
CREATE TABLE INCOMING_ACCOUNTS(
CREATE TABLE IAS_TRANSFER_PRIORTY ( 
CREATE TABLE IAS_LOW_LMT_PRD_STOCK ( 
CREATE TABLE IAS_CITY_DISTANCE (
CREATE TABLE IAS_BATCH_NO(
CREATE TABLE IAS_BATCH_NO_CONTENTS (
CREATE TABLE IAS_ITEM_SERIAL_DESC(
CREATE TABLE INV_ITM_DSC
CREATE TABLE IAS_BATCH_NO_CONTENTS_MST (   COL_NO                  NUMBER(1),  
CREATE TABLE GROUP_DETAILS ( 
CREATE TABLE PRIVILEGE_GC ( 
CREATE TABLE IAS_CONN_ACC_INV_BY_GL(
CREATE TABLE IAS_GRP_ITM_LVL(
CREATE TABLE IAS_GRP_ITM_LVL_TREE(
CREATE TABLE IAS_MAINSUB_GRP_DTL(
CREATE TABLE IAS_SUB_GRP_DTL(
CREATE TABLE IAS_ASSISTANT_GROUP ( 
CREATE TABLE IAS_DETAIL_GROUP ( 
CREATE TABLE IAS_CONN_GRP_ITM_TYPE(
CREATE TABLE IAS_ITM_MST ( 
CREATE TABLE IAS_ITM_QTY_LMT ( 
CREATE TABLE IAS_ITM_DTL (
CREATE TABLE IAS_ITM_UNT_BARCODE (
CREATE TABLE IAS_ITEM_REQUIREMENTS(
CREATE TABLE WAREHOUSE_DETAILS ( 
CREATE TABLE PRIVILEGE_WH ( 
CREATE TABLE IAS_ITM_WCODE(
CREATE TABLE BIN_DETAILS ( 
CREATE TABLE ITEM_BIN(
CREATE TABLE WAREHOUSE_GROUP(
CREATE TABLE  IAS_ITM_LVL_MEASURE(
CREATE TABLE  IAS_ITM_LVL_MEASURE_DTL(
CREATE TABLE IAS_ITM_MEASUR_MST(
CREATE TABLE IAS_ITM_MEASUR_DTL(
CREATE TABLE COMPOUND_ITEMS(
CREATE TABLE KIT_ITEMS(
CREATE TABLE INV_RQ_ASSMBL_MST (
CREATE TABLE INV_RQ_ASSMBL_DTL(
CREATE TABLE ASSEMBLE_KIT_ITEMS(
CREATE TABLE ASSEMBLE_KIT_ITEMS_DET(
CREATE TABLE KIT_ITEMS_DETAIL (
CREATE TABLE DISASSEMBLE_KIT_ITEMS(
CREATE TABLE DISASSEMBLE_KIT_ITEMS_DET(
CREATE TABLE DIS_KIT_ITEMS_DETAIL(
CREATE TABLE IAS_ASSEMBLE_ITM_EXPND(
CREATE TABLE IAS_ITEM_PRICE (  LEV_NO       NUMBER(3),
CREATE TABLE IAS_PRIV_PRICE ( 
CREATE TABLE IAS_ITEM_PRICE_HISTORY ( 
CREATE TABLE IAS_OPEN_STOCK ( 
CREATE TABLE IAS_CONN_ITM_MSUR_UNT(
CREATE TABLE IAS_OUTGOING_PLAN_MST (
CREATE TABLE IAS_OUTGOING_PLAN_DTL(
Create TABLE IAS_ITM_ALTRNTV
CREATE TABLE IAS_ITM_USD_MCHN( I_CODE              VARCHAR2(30),
CREATE TABLE IAS_ITM_USD_MCHN_IMG( I_CODE            VARCHAR2(30),
CREATE TABLE IAS_ITM_BATCH ( I_CODE            VARCHAR2(30),
CREATE TABLE IAS_CONN_WCODE_BY_ACTIVITY (  W_CODE         NUMBER (3), 
CREATE TABLE IAS_OUT_REQUEST_MST(
CREATE TABLE IAS_OUT_REQUEST_DTL(
CREATE TABLE IAS_RESERVE_MST(
CREATE TABLE
CREATE TABLE ITEMS_COSTING(
CREATE TABLE IAS_GR_INCOMING_MST(
CREATE TABLE IAS_GR_INCOMING_DTL(
CREATE TABLE GR_NOTE ( 
CREATE TABLE GR_DETAIL ( 
CREATE TABLE IAS_OUTGOING_MST ( 
CREATE TABLE IAS_OUTGOING_DTL ( 
CREATE TABLE IAS_WHTRNS_MST ( 
CREATE TABLE IAS_WHTRNS_DTL ( 
CREATE TABLE INV_WRHS_TRNSFR_EXPNS(
CREATE TABLE STK_ADJUSTMENT (
CREATE TABLE STK_ADJUSTMENT_DET( 
CREATE TABLE MASTER_INV(
CREATE TABLE DETAIL_INV(
CREATE TABLE IAS_INV_MACHINE_MST(
CREATE TABLE IAS_INV_MACHINE_DTL(
CREATE TABLE IAS_REPAIR_ORDER_MST(
CREATE TABLE IAS_REPAIR_ORDER_DTL(
CREATE TABLE IAS_BILL_EXPIRE_MST(
CREATE TABLE IAS_BILL_EXPIRE_DTL(
CREATE TABLE MASTER_GATE_GR(
CREATE TABLE DETAIL_GATE_GR(
CREATE TABLE IAS_TRUST_MST(
CREATE TABLE IAS_TRUST_DTL(
CREATE TABLE IAS_PAY_TRUST_MST(
CREATE TABLE IAS_PAY_TRUST_DTL(
CREATE TABLE IAS_WHTRNS_MULTI_MST( 
CREATE TABLE IAS_WHTRNS_MULTI_DTL( 
CREATE TABLE
CREATE TABLE IAS_INCOUT_DTL (
CREATE TABLE IAS_ACTV_SERIALNO_MST(
CREATE TABLE IAS_ACTV_SERIALNO_DTL(
CREATE TABLE IAS_REQ_MOD_PRICE_MST (  
CREATE TABLE IAS_REQ_MOD_PRICE_DTL (  
CREATE TABLE ITEM_MOVEMENT ( 
CREATE TABLE SALE_COST ( 
CREATE TABLE IAS_ITEM_SERIALNO(
CREATE TABLE IAS_ITEM_SERIALNO
CREATE TABLE IAS_ATTACH_MST(
CREATE TABLE IAS_ATTACH_DTL(
CREATE TABLE IAS_ITM_ATTACH( 
CREATE TABLE IAS_ITM_ATTACH_MOVEMENT( 
CREATE TABLE IAS_ITM_ATTACH_OTHRS( 
CREATE TABLE IAS_ITMAGING_TMP (
CREATE TABLE IAS_ITM_WTAVG_TMP (
CREATE TABLE IAS_STRG_WCHILD_TMP (
CREATE TABLE IAS_WT_ITMS_TMP(
CREATE TABLE IAS_INV_MANAGEMENT (
CREATE TABLE IAS_INV_MANAGEMENT_TMP (
CREATE TABLE IAS_TRNSFR_QTY_APPROVED(
CREATE TABLE IAS_ITMS_TRNSFR_QTY_TMP(
CREATE TABLE IAS_TRNSFR_QTY_APPROVED_TMP(
Create Table Ias_Transfer_Out_Sub_Main_Tmp (Tr_Ser NUMBER)   TABLESPACE "IAS_TMP_DATA"
Create Table Ias_Transfer_In_Sub_Main_Tmp  (Tr_Ser NUMBER)  
CREATE TABLE IAS_ITEMS_STORE_TMP(
CREATE TABLE IAS_ITEMS_NOT_STORE_TMP( 
CREATE  TABLE IAS_ITEMS_COLLECT_TMP(
CREATE TABLE IAS_ITM_PERIODIC_COST ( 
CREATE TABLE IAS_ITM_SALES_AGE (
CREATE TABLE IAS_REEVALUATE(G_CODE   VARCHAR2(6) ,
Create Table Ias_Transfer_Out_Tmp (Tr_Ser NUMBER)  TABLESPACE "IAS_TMP_DATA"
Create Table Ias_Transfer_In_Tmp  (Tr_Ser NUMBER)  TABLESPACE "IAS_TMP_DATA"
Create Table Ias_Transfer_Out_Sub_Tmp (Tr_Ser NUMBER)  TABLESPACE "IAS_TMP_DATA"
Create Table Ias_Transfer_In_Sub_Tmp (Tr_Ser NUMBER)  
CREATE TABLE IAS_PRINT_BARCODE_TMP (   I_CODE       VARCHAR2(30) ,
CREATE TABLE GST_RPRT_MST (
CREATE TABLE GST_RPRT_DTL (
CREATE TABLE IAS_CHK_DOC_INOUT_QTY_MST
ALTER TABLE IAS_CHK_DOC_INOUT_QTY_MST ADD ( CONSTRAINT IASCHKDOCINOUTQTYMST_PK PRIMARY KEY (DOC_SER))
CREATE TABLE IAS_CHK_DOC_INOUT_QTY_DTL
ALTER TABLE IAS_CHK_DOC_INOUT_QTY_DTL ADD (  CONSTRAINT IASCHKDOCINOUTQTYDTL_MST_FK  FOREIGN KEY (DOC_SER)  REFERENCES IAS_CHK_DOC_INOUT_QTY_MST (DOC_SER) ON DELETE CASCADE)
CREATE TABLE INV_ITM_QR_CODE(
CREATE TABLE INV_QR_CODE_MTHD_MST (
CREATE TABLE INV_QR_CODE_MTHD_DTL (
CREATE TABLE INV_BATCH_NO_MTHD_MST (
CREATE TABLE INV_BATCH_NO_MTHD_DTL (
CREATE TABLE INV_PRPRTN_STP (
ALTER TABLE INV_PRPRTN_STP ADD (CONSTRAINT INVPRPR_STP_PK PRIMARY KEY (TYP_NO))
CREATE TABLE IAS_INV_MACHINE_SUB_DTL (
ALTER TABLE IAS_INV_MACHINE_SUB_DTL ADD (
CREATE TABLE INV_ITM_BIN_MOVMNT ( DOC_NO           NUMBER(15)                   ,
ALTER TABLE INV_ITM_BIN_MOVMNT ADD ( CONSTRAINT INVITMBINMOV_ICODE_FK 
CREATE TABLE IAS_ONLINE_CONN_WC_RGN
ALTER TABLE IAS_ONLINE_CONN_WC_RGN ADD ( CONSTRAINT IASONLINECONNWCRGN_WH_FK 
CREATE TABLE IAS_INV_CNCRT_DTL
CREATE TABLE GNR_WEB_SRVC_MST (
CREATE TABLE GNR_WEB_SRVC_DTL ( SRVC_NO      NUMBER(15) NOT NULL,
CREATE TABLE GNR_WEB_SRVC_CLMN (
 CREATE TABLE IAS_PARA_MOB_INV ( 
CREATE TABLE IAS_INV_BARCODE_CONFG ( 
CREATE TABLE Inv_Itm_Excd_Lmt_Cst_Prv ( 
CREATE TABLE INV_ITM_CST_ORDR(CST_CODE  NUMBER(1) ,
CREATE TABLE IAS_EXTRNL_SYS_OVR_WEB_API (
CREATE TABLE IAS_EXTRNL_SYS_SYNC_LOG (
CREATE TABLE GNR_WEB_SRVC_RQUST_BODY (
ALTER TABLE GNR_WEB_SRVC_RQUST_BODY ADD ( CONSTRAINT GNRWEBSRVERQUSTBODYPK PRIMARY KEY (SRVC_NO, ALIAS))
ALTER TABLE GNR_WEB_SRVC_RQUST_BODY ADD ( CONSTRAINT GNRWEB_SRVERQUSTBODYFK
 CREATE TABLE IAS_PARA_MOB_INV ( 
CREATE TABLE IAS_INV_BARCODE_CONFG ( 
ALTER TABLE IAS_ITM_WCODE DROP CONSTRAINT IAS_ITM_DTL_WCODE_PSIZE 
ALTER TABLE IAS_ITM_DTL DROP CONSTRAINT IAS_ITM_DTL_ICODE_PSIZE
ALTER TABLE IAS_ITEM_SERIALNO DROP CONSTRAINT IASITMSERIALNO_PK
ALTER TABLE IAS_ITEM_SERIALNO ADD (CONSTRAINT IASITMSERIALNO_PK PRIMARY KEY (DOC_SER, I_CODE,W_Code, SERIALNO)
ALTER TABLE ITEM_MOVEMENT  MODIFY( REF_NO VARCHAR2(30))
CREATE TABLE INV_ITM_EXCD_LMT_CST_PRV ( 
 Select 1 from WAREHOUSE_GROUP
 Where Rownum<=1
Update Warehouse_Details Set Whg_Code = (Select Whg_Code From Warehouse_Group Where Rownum <=1)
               Where Whg_Code Is Null
Update Ias_Itm_Wcode Set Whg_Code = Ias_Wcode_Pkg.Get_Whg_Code(W_Code)
               Where Whg_Code Is Null
CREATE TABLE INV_ITM_CST_ORDR(CST_CODE  NUMBER(1) ,
Update STK_ADJUSTMENT Set AC_CODE_DTL = V_Code , AC_DTL_TYP=4
       Where AC_CODE_DTL Is Null
INSERT INTO IAS_GNR_CODE_MST ( MAIN_CODE, MAIN_L_NAME, MAIN_F_NAME, INACTV, AD_U_ID,AD_DATE ) VALUES ( 13, '
CREATE TABLE IAS_EXTRNL_SYS_OVR_WEB_API (
CREATE TABLE IAS_EXTRNL_SYS_SYNC_LOG (
CREATE TABLE GNR_WEB_SRVC_RQUST_BODY (
ALTER TABLE GNR_WEB_SRVC_RQUST_BODY ADD ( CONSTRAINT GNRWEBSRVERQUSTBODYPK PRIMARY KEY (SRVC_NO, ALIAS))
ALTER TABLE GNR_WEB_SRVC_RQUST_BODY ADD ( CONSTRAINT GNRWEB_SRVERQUSTBODYFK
from of "<string>", where "<string>" will be replaced by the requestof the query in the table "GNR_WEB_SRVC_RQUST_BODY"
important: if the object is not an arrya, then the query MUST return only one record, otherwise an exception will raise' 
Insert into GNR_WEB_SRVC_MST
    'SELECT 1         AS "Srvce_No",
from ias_bill_mst bill,
where bill.bill_ser=fllwup.doc_ser
Insert into GNR_WEB_SRVC_MST
    'select api_key as "key", api_secret as "secret" 
from IAS_EXTRNL_SYS_OVR_WEB_API
where e_sys_no=1', 'application/json', '200', NULL, 1, 
Insert into GNR_WEB_SRVC_MST
    'select nvl(gtin_code,ias_itm_mst.i_code) as "sku",
           cursor( select ias_itm_mst.i_name "en" from dual) as "name",
           cursor(select nvl(ias_itm_mst.gtin_code,ias_itm_mst.i_code)||'-'||ias_itm_dtl.itm_unt as "sku",
                         cursor(select cursor(select 'test' as "en" from dual) "name",
                                       cursor(select 'test' as "en" from dual) "option"
                                from dual) as "attributes"
                   from ias_itm_dtl,
                   where ias_itm_dtl.i_code=ias_itm_wcode.i_code
    from  ias_itm_mst,ias_itm_dtl,warehouse_details 
    where ias_itm_mst.i_code=ias_itm_dtl.i_code
Insert into GNR_WEB_SRVC_MST
    'select nvl(gtin_code,i_code) as "sku",
           cursor(select ias_itm_mst.gtin_code||'-'||ias_itm_dtl.itm_unt as "sku",
                         cursor(select cursor(select 'test' as "en" from dual) "name",
                                       cursor(select 'test' as "en" from dual) "option"
                                from dual) as "attributes"
                   from ias_itm_dtl,
                   where ias_itm_dtl.i_code=ias_itm_wcode.i_code
    from ias_itm_mst,warehouse_details
    where 1=1 &P_WHR', 'application/json', '200', NULL, 1, 
Insert into IAS_EXTRNL_SYS_OVR_WEB_API
ALTER TABLE KIT_ITEMS_DETAIL DROP CONSTRAINT KITITMDTL_PK CASCADE
ALTER TABLE KIT_ITEMS_DETAIL ADD 
ALTER TABLE DIS_KIT_ITEMS_DETAIL DROP CONSTRAINT DISKITITMDTL_PK CASCADE
ALTER TABLE DIS_KIT_ITEMS_DETAIL ADD 
ALTER TABLE  GNR_WEB_SRVE_CLMN       RENAME TO GNR_WEB_SRVC_CLMN
ALTER TABLE  GNR_WEB_SRVE_DTL        RENAME TO GNR_WEB_SRVC_DTL
ALTER TABLE  GNR_WEB_SRVE_MST        RENAME TO GNR_WEB_SRVC_MST
ALTER TABLE  GNR_WEB_SRVE_RQUST_BODY RENAME TO GNR_WEB_SRVC_RQUST_BODY
ALTER TABLE IAS_ITM_MST DROP COLUMN NOT_USED_IN_KIT_ITM
Update Ias_Itm_Mst Set USED_IN_KIT_ITM = 1
 Where Exists ( Select 1 From Kit_Items
                  Where I_Code = Ias_Itm_Mst.I_Code
ALTER TABLE ITEMS_COSTING DROP CONSTRAINT ITEM_COST_PK CASCADE
ALTER TABLE ITEMS_COSTING ADD 
Update Gr_detail Set Inv_Wtavg_Frc =( Select to_char(Rpad('.0',Nvl(Stkcost_Fraction,6)+1,'0')||Rpad('9',Nvl(Stkcost_Fraction,6),9)) 
                                                     From Ias_Para_Inv 
                                                     Where Rownum <=1
                Where Inv_Wtavg_Frc Is Null
ALTER TABLE KIT_ITEMS ADD 
INSERT INTO WAREHOUSE_GROUP ( WHG_CODE,WHG_A_NAME,WHG_E_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,PR_REP,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,''
'',''Default Group'',:b1,SYSDATE, NULL , NULL , NULL , NULL ,:b2, NULL   )"SELECT 1   FROM INV_ITM_CST_ORDR  WHERE ROWNUM <= 1"INSERT INTO INV_ITM_CST_ORDR ( CST_CODE,CST_TYPE,CST_ORDR )  SELECT 1 CST_CODE,1 CST_TYPE,1 CST_ORDR   FROM DUAL  UNION ALL SELECT 2 CST_CODE,1 CST_TYPE,2 CST_ORDR   FROM DUAL  UNION ALL SELECT 3 CST_CODE,1 CST_TYPE,3 CST_ORDR   FROM DUAL  UNION ALL SELECT 4 CST_CODE,1 CST_TYPE,4 CST_ORDR   FROM DUAL  UNION ALL SELECT 5 CST_CODE,1 CST_TYPE,5 CST_ORDR   FROM DUAL  UNION ALL SELECT 6 CST_CODE,1 CST_TYPE,6 CST_ORDR   FROM DUAL  UNION ALL SELECT 1 CST_CODE,2 CST_TYPE,1 CST_ORDR   FROM DUAL  UNION ALL SELECT 2 CST_CODE,2 CST_TYPE,2 CST_ORDR   FROM DUAL  UNION ALL SELECT 3 CST_CODE,2 CST_TYPE,3 CST_ORDR   FROM DUAL"SELECT COUNT(1)   FROM IAS_GNR_CODE_MST  WHERE MAIN_CODE = 13"
ALTER TABLE Ias_Itm_Unt_Barcode ADD CONSTRAINT  Ias_Itm_Unt_Barcode_Icode_Fk  FOREIGN KEY (I_CODE,ITM_UNT) 
ALTER TABLE DETAIL_INV DROP CONSTRAINT D_INV_UQ
ALTER TABLE DETAIL_INV ADD CONSTRAINT D_INV_UQ  UNIQUE (INV_SER, I_CODE,ITM_UNT,EXPIRE_DATE,BATCH_NO, W_CODE,B_CODE,RCRD_NO)
CREATE TABLE INCOMING_ACCOUNTS(
CREATE TABLE INV_ASSMBL_TYP (
CREATE TABLE INV_PRV_ASSMBL_TYP(
CREATE TABLE INV_WRHS_TRNSFR_EXPNS(
CREATE TABLE INV_RQ_ASSMBL_MST (
CREATE TABLE INV_RQ_ASSMBL_DTL(
INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, AD_DATE,DOC_PST, FLG_ST,DOC_APPRVD_FLG ) VALUES (2, 94, 'Request Assemble/DisAssemble',  1,  SYSDATE, 0, 1,1)
INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, AD_DATE,DOC_PST, FLG_ST,DOC_APPRVD_FLG ) VALUES (1, 94, '
Insert Into S_Lov_Slct
   (620, 'LOV_ITM_BATCH', 9552, 'Select I_CODE,IAS_ITM_PKG.Get_Itm_Name (I_CODE,:PARAMETER.LANG_NO) ITM_NM,Batch_no,GET_BATCH_COL_NM(1,BATCH_DESC_NO1,:PARAMETER.LANG_NO)BATCH_DESC_NO1,GET_BATCH_COL_NM(2,BATCH_DESC_NO2,:PARAMETER.LANG_NO)BATCH_DESC_NO2,GET_BATCH_COL_NM(3,BATCH_DESC_NO3,:PARAMETER.LANG_NO)BATCH_DESC_NO3,GET_BATCH_COL_NM(4,BATCH_DESC_NO4,:PARAMETER.LANG_NO)BATCH_DESC_NO4,GET_BATCH_COL_NM(5,BATCH_DESC_NO5,:PARAMETER.LANG_NO)BATCH_DESC_NO5 from ias_itm_batch
                   Where 1=1 ', 8, 
Insert Into S_Lov_Slct
                                  From Ias_Itm_Batch ,Ias_Itm_Unt_Barcode
                   Where Ias_Itm_Batch.I_Code(+)   = Ias_Itm_Unt_Barcode.I_Code
Update Ias_Sys.Ias_Labels Set Caption_Det = '
' Where Label_No=2722 And Lang_No =1
Update Ias_Sys.Ias_Labels Set Caption_Det = 'Available Qty To Inv. Date' Where Label_No=2722 And Lang_No=2 
Update S_Flags Set Flg_Desc = '
' Where Flg_Code ='AVLQTY_TYPE' And Flg_Value = 2  And Lang_No=1
Update S_Flags Set Flg_Desc = 'Available Qty To Inv. Time' Where Flg_Code='AVLQTY_TYPE' And Flg_Value = 2  And Lang_No=2
INSERT INTO S_APPRVD_LVL ( LVL_NO, LVL_NM, DOC_TYP, ORDR_NO, FORM_NO, AD_U_ID, AD_DATE) VALUES (1,YS_GEN_PKG.GET_PROMPT(1,6629),94 ,1,290,1,SYSDATE)
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO,SYS_NO,SCR_TYP ,DOC_TYP) VALUES ( 'INV', 289, 62, 'INVS022', 1, 0, 289,40,NUll,NULL)
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 1, 289, '  
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 289, 'Types Of Assemle/Disassemble')
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO,SYS_NO,SCR_TYP ,DOC_TYP) VALUES ( 'INV', 290, 201, 'INVT024', 1, 0, 290,40,NUll,94)
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 1, 290, '
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 290, 'Request Assemble/Disassmble')
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO,SYS_NO,SCR_TYP ,DOC_TYP) VALUES ( 'STP', 275,62, 'INVS023', 1, 1, 275,40,NUll,NULL)
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 1, 275, '
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 275, 'Connect Incoming Accounts')
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO,SYS_NO,SCR_TYP ,DOC_TYP) VALUES ( 'INV', 358, 202, 'INVR034', 0, 0, 264,40,NUll,NULL)
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 1, 358, ' 
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 358, 'Reports- Request Assemle/Disassemble')
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO,SYS_NO,SCR_TYP ,DOC_TYP) VALUES ( 'INV', 624, 2203, 'INV_ITM_TRNS', 1, 0, 1,40,NUll,NULL)
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 1, 624, '
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 624, 'Items Movements')
CREATE TABLE INV_ITM_DSC
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO,SYS_NO,SCR_TYP ,DOC_TYP) VALUES ( 'INV', 648, 62, 'INVS024', 1, 0, 648,40,NUll,NULL)
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 1, 648, '
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 648, 'Items Description')
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 1, 13, 13, 'INSTALL_DOC','
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 2, 13, 13, 'INSTALL_DOC', 'Show Items Has Available Qty', 1)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 1, 15, 15, 'INSTALL_DOC','     
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 2, 15, 15, 'INSTALL_DOC', 'Not Annual Manual Inv.', 1)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 1, 16, 16, 'INSTALL_DOC','
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 2, 16, 16, 'INSTALL_DOC', 'Resturant Sales-Not Available Qty. Ready Meals', 1)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 1, 17, 17, 'INSTALL_DOC','
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 2, 17, 17, 'INSTALL_DOC', 'Resturant Sales-Not Available Qty. Material Items', 1)
CREATE TABLE GST_RPRT_MST (
CREATE TABLE GST_RPRT_DTL (
  INSERT INTO inv_wrhs_trnsfr_expns
               SELECT TR_no, 
               FROM   ias_whtrns_mst
                 WHERE  TR_INOUT_TYPE=2
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 1, 14, 14, 'INSTALL_DOC','
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST ) VALUES ( 2, 14, 14, 'INSTALL_DOC', 'Purchase Invoice', 1)
INSERT INTO  S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST ) VALUES (1,10, 10, 'INSTALL_DOC', '
INSERT INTO  S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST ) VALUES (2,10, 10, 'INSTALL_DOC', 'Purchase Add Discount',1)
CREATE TABLE IAS_WHTRNS_MST_Exp_BCK As Select * From IAS_WHTRNS_MST
CREATE TABLE IAS_WHTRNS_DTL_Exp_BCK As Select * From IAS_WHTRNS_DTL
ALTER TABLE IAS_WHTRNS_MST DROP COLUMN EXP_A_CODE
ALTER TABLE IAS_WHTRNS_MST DROP COLUMN EXP_AMT
ALTER TABLE IAS_WHTRNS_MST DROP COLUMN EXP_DESC
ALTER TABLE IAS_WHTRNS_DTL DROP COLUMN EXP_AMT
CREATE TABLE IAS_CHK_DOC_INOUT_QTY_MST
ALTER TABLE IAS_CHK_DOC_INOUT_QTY_MST ADD ( CONSTRAINT IASCHKDOCINOUTQTYMST_PK PRIMARY KEY (DOC_SER))
CREATE TABLE IAS_CHK_DOC_INOUT_QTY_DTL
ALTER TABLE IAS_CHK_DOC_INOUT_QTY_DTL ADD (  CONSTRAINT IASCHKDOCINOUTQTYDTL_MST_FK  FOREIGN KEY (DOC_SER)  REFERENCES IAS_CHK_DOC_INOUT_QTY_MST (DOC_SER) ON DELETE CASCADE)
CREATE TABLE INV_ITM_QR_CODE(
ALTER TABLE KIT_ITEMS_DETAIL DROP CONSTRAINT KITITMDTL_PK
Alter TABLE KIT_ITEMS_DETAIL  add  ( CONSTRAINT KITITMDTL_PK PRIMARY KEY ( DOC_SER , KIT_ITEM_NO ,I_CODE ,ITM_UNT, W_CODE,EXPIRE_DATE,BATCH_NO,RCRD_NO ))
ALTER TABLE DIS_KIT_ITEMS_DETAIL DROP CONSTRAINT DISKITITMDTL_PK
Alter TABLE DIS_KIT_ITEMS_DETAIL  add  ( CONSTRAINT DISKITITMDTL_PK PRIMARY KEY ( DOC_SER , KIT_ITEM_NO ,I_CODE ,ITM_UNT, W_CODE,EXPIRE_DATE,BATCH_NO,RCRD_NO ))
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 0, 0, 'USE_ITM_SRLNO' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 0, 0, 'USE_ITM_SRLNO' ,'Not Used',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 1, 1, 'USE_ITM_SRLNO' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 1, 1, 'USE_ITM_SRLNO' ,'In Progress',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 2, 2, 'USE_ITM_SRLNO' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 2, 2, 'USE_ITM_SRLNO' ,'After Progress',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 1, 1, 'QR_CODE_MTHD_TYP' ,'
INSERT INTO  S_FLA
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 2, 2, 'QR_CODE_MTHD_TYP' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 2, 2, 'QR_CODE_MTHD_TYP' ,'By Item',1,0)
CREATE TABLE INV_QR_CODE_MTHD_MST (
CREATE TABLE INV_QR_CODE_MTHD_DTL (
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 1, 1, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 1, 1, 'INV_QR_CODE_CLMN' ,'Item Code',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 2, 2, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 2, 2, 'INV_QR_CODE_CLMN' ,'GTIN',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 3, 3, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 3, 3, 'INV_QR_CODE_CLMN' ,'Expire Date',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 4, 4, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 4, 4, 'INV_QR_CODE_CLMN' ,'Batch No',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 5, 5, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 5, 5, 'INV_QR_CODE_CLMN' ,'Serial Number',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 6, 6, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 6, 6, 'INV_QR_CODE_CLMN' ,'GTIN Code',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 7, 7, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 7, 7, 'INV_QR_CODE_CLMN' ,'Expire Date Code',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 8, 8, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   F
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 9, 9, 'INV_QR_CODE_CLMN' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 9, 9, 'INV_QR_CODE_CLMN' ,'Serial Number Code',1,0)
CREATE TABLE GNR_WEB_SRVC_MST (
CREATE TABLE GNR_WEB_SRVC_DTL ( SRVC_NO      NUMBER(15) NOT NULL,
CREATE TABLE GNR_WEB_SRVC_CLMN (
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP) Values ('STP', 10, 472, 347, 'GENS031', 1, 0, 76, 1)
Insert into FORM_DETAIL   (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP) Values ('STP', 10, 473, 347, 'GENS032', 1, 0, 77, 1)
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 472, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 472, 'Encoding Web Services')
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (1, 473, '
Insert into IAS_FORM_NAME   (LANG_NO, FORM_NO, FORM_NAME) Values   (2, 473, 'Synchronize Data To Websites')
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values   (1, 0, 0, 'SRVC_SYNCHRNZ_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values   (1, 1, 1, 'SRVC_SYNCHRNZ_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values   (2, 0, 0, 'SRVC_SYNCHRNZ_TYP', 'Automatic', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values   (2, 1, 1, 'SRVC_SYNCHRNZ_TYP', 'Manual', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 1, 1, 'SRVC_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 2, 2, 'SRVC_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 3, 3, 'SRVC_TYPE', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2 , 1, 1, 'SRVC_TYPE', 'Sending', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2 , 2, 2, 'SRVC_TYPE', 'Reciept', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2 , 3, 3, 'SRVC_TYPE', 'ALL', 1, 0)
Alter Table Item_Movement Modify (A_Desc         Varchar2 (1000))
CREATE TABLE INV_BATCH_NO_MTHD_MST (
CREATE TABLE INV_BATCH_NO_MTHD_DTL (
 Insert into FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP)
 Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values (1, 716, '
 Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values (2, 716, 'Batch No Configuration Methods') 
                     BEGIN
                           SELECT INV_ITM_SRL_SEQ.NEXTVAL INTO :NEW.SRL_SQ FROM DUAL;
                         EXCEPTION WHEN OTHERS THEN
                     END; 
Drop Table Tst_Upd_Itm_Srl Purge
Create Table Tst_Upd_Itm_Srl
Select S.Doc_Type, S.Doc_No,S.Doc_Ser,S.Serialno,S.I_Code ,M.Rcrd_No Rcrd
,Row_Number() Over(Order By M.Serial ) Srl_Sq
Where M.Doc_Ser=S.Doc_Ser
Order By M.Serial
Update Ias_Item_Serialno S Set Srl_Sq=(Select Srl_Sq From Tst_Upd_Itm_Srl M 
Where M.Doc_Ser=S.Doc_Ser
Where (I_Code,Serialno,Doc_Ser) In(Select I_Code,Serialno,Doc_Ser From Tst_Upd_Itm_Srl )
CREATE TABLE INV_PRPRTN_STP (
ALTER TABLE INV_PRPRTN_STP ADD (CONSTRAINT INVPRPR_STP_PK PRIMARY KEY (TYP_NO))
CREATE TABLE IAS_INV_MACHINE_SUB_DTL (
ALTER TABLE IAS_INV_MACHINE_SUB_DTL ADD (
CREATE TABLE INV_ITM_BIN_MOVMNT ( DOC_NO           NUMBER(15)                   ,
ALTER TABLE INV_ITM_BIN_MOVMNT ADD ( CONSTRAINT INVITMBINMOV_ICODE_FK 
CREATE TABLE IAS_ONLINE_CONN_WC_RGN
ALTER TABLE IAS_ONLINE_CONN_WC_RGN ADD ( CONSTRAINT IASONLINECONNWCRGN_WH_FK 
CREATE TABLE IAS_INV_CNCRT_DTL
CREATE TABLE IAS_TRUST_MST(
CREATE TABLE IAS_TRUST_DTL(
CREATE TABLE IAS_PAY_TRUST_MST(
CREATE TABLE IAS_PAY_TRUST_DTL(
ALTER TABLE IAS_PRINT_BARCODE_TMP  MODIFY( I_DESC VARCHAR2(1000))
ALTER TABLE GR_NOTE drop CONSTRAINT INC_TYPE_FK 
ALTER TABLE INCOMING_ACCOUNTS MODIFY INC_TYPE  NUMBER(5)
ALTER TABLE OUTGOING_ACCOUNTS MODIFY OUT_TYPE  NUMBER(5)
ALTER TABLE Ias_Gr_Incoming_Dtl MODIFY EXPIRE_DATE  Date
ALTER TABLE Ias_Gr_Incoming_Dtl MODIFY BATCH_NO     VARCHAR2(30)
ALTER TABLE WAREHOUSE_DETAILS  DROP COLUMN LEV_NO
ALTER TABLE ASSEMBLE_KIT_ITEMS_DET ADD (
ALTER TABLE ASSEMBLE_KIT_ITEMS_DET ADD (
ALTER TABLE KIT_ITEMS_DETAIL ADD (
ALTER TABLE DISASSEMBLE_KIT_ITEMS_DET ADD (
ALTER TABLE DISASSEMBLE_KIT_ITEMS_DET ADD (
ALTER TABLE DIS_KIT_ITEMS_DETAIL ADD (
ALTER TABLE GR_DETAIL ADD (
ALTER TABLE IAS_OUT_REQUEST_MST MODIFY  DOC_DESC VARCHAR2(500)
ALTER TABLE WAREHOUSE_GROUP DROP COLUMN USE_SAL_PRICE_AS_PUR_PRICE
Insert Into S_Flags (Lang_No, Flg_Sr, Flg_Value, Flg_Code, Flg_Desc, Flg_St, Flg_Priv) Values (1, 1, 0, 'PRPR_TYPE', '
Insert Into S_Flags (Lang_No, Flg_Sr, Flg_Value, Flg_Code, Flg_Desc, Flg_St, Flg_Priv) Values (2, 1, 0, 'PRPR_TYPE', 'Not Use', 1, 0)
Insert Into S_Flags (Lang_No, Flg_Sr, Flg_Value, Flg_Code, Flg_Desc, Flg_St, Flg_Priv) Values (1, 2, 1, 'PRPR_TYPE', '
Insert Into S_Flags (Lang_No, Flg_Sr, Flg_Value, Flg_Code, Flg_Desc, Flg_St, Flg_Priv) Values (2, 2, 1, 'PRPR_TYPE', 'Preparation', 1, 0)
Insert Into S_Flags (Lang_No, Flg_Sr, Flg_Value, Flg_Code, Flg_Desc, Flg_St, Flg_Priv) Values (2, 3, 2, 'PRPR_TYPE', 'Check', 1, 0)
Insert Into S_Flags (Lang_No, Flg_Sr, Flg_Value, Flg_Code, Flg_Desc, Flg_St, Flg_Priv) Values (1, 3, 2, 'PRPR_TYPE', '
CREATE INDEX INV_ITMMV_DOC_SQ_INDX ON ITEM_MOVEMENT(DOC_SEQUENCE)
CREATE INDEX INV_GRDTL_DOC_SQ_INDX ON GR_DETAIL(DOC_SEQUENCE)
Alter Table Gr_Note Modify (A_Desc           Varchar2 (1000))
ALTER TABLE GROUP_DETAILS DROP COLUMN BRN_NO
ALTER TABLE GROUP_DETAILS DROP COLUMN CMP_NO
Alter Table Ias_Itm_Wcode modify (Whg_Code Number(10) Not Null)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,8,7,'REP_SMPLE_TAX','Simple 8',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,9,8,'REP_SMPLE_TAX','Simple 9',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,10,9,'REP_SMPLE_TAX','Simple 10',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,11,10,'REP_SMPLE_TAX','Simple 11',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,12,11,'REP_SMPLE_TAX','Simple 12',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,13,12,'REP_SMPLE_TAX','Simple 13',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,14,13,'REP_SMPLE_TAX','Simple 14',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,15,14,'REP_SMPLE_TAX','Simple 15',1,0
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,16,15,'REP_SMPLE_TAX','Simple 16',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,17,16,'REP_SMPLE_TAX','Simple 17',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,18,17,'REP_SMPLE_TAX','Simple 18',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,19,18,'REP_SMPLE_TAX','Simple 19',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,20,19,'REP_SMPLE_TAX','Simple 20',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,21,20,'REP_SMPLE_TAX','Simple 21',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,22,21,'REP_SMPLE_TAX','Simple 22',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,23,22,'REP_SMPLE_TAX','Simple 23',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,24,23,'REP_SMPLE_TAX','Simple 24',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,25,24,'REP_SMPLE_TAX','Simple 25',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,26,25,'REP_SMPLE_TAX','Simple 26',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,27,26,'REP_SMPLE_TAX','Simple 27',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,28,27,'REP_SMPLE_TAX','Simple 28',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,29,28,'REP_SMPLE_TAX','Simple 29',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,30,29,'REP_SMPLE_TAX','Simple 30',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,31,30,'REP_SMPLE_TAX','Simple 31',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,32,31,'REP_SMPLE_TAX','Simple 32',1,0)
insert into s_flags(lang_no,flg_sr,flg_value,flg_code,flg_desc,flg_st,flg_priv) values(2,32,31,'REP_SMPLE_TAX','Simple 33',1,0)
update s_flags set flg_desc = 'GSTR 1-B2B' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 4 and flg_value= 3
update s_flags set flg_desc = 'GSTR 1-B2BA' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 5 and flg_value= 4
update s_flags set flg_desc = 'GSTR 1-B2CL' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 6 and flg_value= 5
update s_flags set flg_desc = 'GSTR 1-B2CLA' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 7 and flg_value= 6
update s_flags set flg_desc = 'GSTR 1-B2CS' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 8 and flg_value= 7
update s_flags set flg_desc = 'GSTR 1-B2CSA' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 9 and flg_value= 8
update s_flags set flg_desc = 'GSTR 1-CDNR' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 10 and flg_value= 9
update s_flags set flg_desc = 'GSTR 1-CDNRA' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 11 and flg_value= 10
update s_flags set flg_desc = 'GSTR 1-CDNUR' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 12 and flg_value= 11
update s_flags set flg_desc = 'GSTR 1-CDNURA' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 13 and flg_value= 12
update s_flags set flg_desc = 'GSTR 1-EXP' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 14 and flg_value= 13
update s_flags set flg_desc = 'GSTR 1-EXPA' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 15 and flg_value= 14
update s_flags set flg_desc = 'GSTR 1-AT' where flg_code like 'REP_SMPLE_TAX' and 
update s_flags set flg_desc = 'GSTR 1-ATA' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 17 and flg_value= 16
update s_flags set flg_desc = 'GSTR 1-ATADJ' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 18 and flg_value= 17
update s_flags set flg_desc = 'GSTR 1-ATADJA' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 19 and flg_value= 18
update s_flags set flg_desc = 'GSTR 1-EXEMP' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 20 and flg_value= 19
update s_flags set flg_desc = 'GSTR 1-HSN' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 21 and flg_value= 20
update s_flags set flg_desc = 'GSTR 1-DOCS' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 22 and flg_value= 21
update s_flags set flg_desc = 'GSTR 2-B2B' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 23 and flg_value= 22
update s_flags set flg_desc = 'GSTR 2-B2BUR' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 24 and flg_value= 23
update s_flags set flg_desc = 'GSTR 2-IMPS' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 25 and flg_value= 24
update s_flags set flg_desc = 'GSTR 2-IMPG' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 26 and flg_value= 25
update s_flags set flg_desc = 'GSTR 2-CDNR' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 27 and flg_value= 26
update s_flags set flg_desc = 'GSTR 2-CDNUR' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 28 and flg_value= 27
update s_flags set flg_desc = 'GSTR 2-AT' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 29 and flg_value= 28
update s_flags set flg_desc = 'GSTR 2-ATADJ' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 30 and flg_value= 29
update s_flags set flg_desc = 'GSTR 2-EXEMP' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 31 and flg_value= 30
update s_flags set flg_desc = 'GSTR 2-ITCR' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 32 and flg_value= 31
update s_flags set flg_desc = 'GSTR 2-HSNSUM' where flg_code like 'REP_SMPLE_TAX' and lang_no = 2 and flg_sr = 33 and flg_value= 32
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 1, 1, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 2, 2, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 3, 3, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 4, 4, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 5, 5, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 6, 6, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 7, 7, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 8, 8, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 1, 1, 'INV_BATCH_NO_SQ' ,'Item Code',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 2, 2, 'INV_BATCH_NO_SQ' ,' Sequence No',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 3, 3, 'INV_BATCH_NO_SQ' ,'Day',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VA
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 6, 6, 'INV_BATCH_NO_SQ' ,'Day-Month',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 7, 7, 'INV_BATCH_NO_SQ' ,'Month-Year',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 8, 8, 'INV_BATCH_NO_SQ' ,'Day-Month-Year',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 1, 1, 'KIT_ITM_CLSSFCTN_TYP' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 2, 2, 'KIT_ITM_CLSSFCTN_TYP' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 3, 3, 'KIT_ITM_CLSSFCTN_TYP' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 1, 1, 'KIT_ITM_CLSSFCTN_TYP' ,'Group',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 2, 2, 'KIT_ITM_CLSSFCTN_TYP' ,'Main',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 3, 3, 'KIT_ITM_CLSSFCTN_TYP' ,'Sub',1,0)
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 1, 9, 9, 'INV_BATCH_NO_SQ' ,'
INSERT INTO  S_FLAGS (   LANG_NO, FLG_SR, FLG_VALUE,   FLG_CODE, FLG_DESC, FLG_ST,   FLG_PRIV) VALUES ( 2, 9, 9, 'INV_BATCH_NO_SQ' ,'Classification Code',1,0)
Alter Table Assemble_Kit_Items Modify(From_WH NUMBER(10))
Alter Table Assemble_Kit_Items Modify(TO_WH NUMBER(10))
Alter Table Disassemble_Kit_Items Modify(From_WH NUMBER(10))
Alter Table Disassemble_Kit_Items Modify(TO_WH NUMBER(10))
Alter table  IAS_INV_MACHINE_DTL Add ( CONSTRAINT IAS_D_INV_MCHN_PK
ALTER TABLE GR_DETAIL DROP CONSTRAINT REC_NO_UQ
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO,SYS_NO,SCR_TYP ,DOC_TYP) VALUES ( 'INV', 625, 2203, 'INV_ICODE_LOV', 1, 0, 2,40,NUll,NULL)
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 1, 625, '
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 625, 'Items Informations')
UPDATE IAS_ITM_UNT_BARCODE SET ITM_UNT=IAS_ITM_PKG.GET_ICODE_MIN_UNIT(I_CODE) WHERE ITM_UNT IS NULL"UPDATE IAS_ITM_UNT_BARCODE SET P_SIZE=IAS_ITM_PKG.GET_ICODE_SIZE_UNIT(I_CODE,IAS_ITM_PKG.GET_ICODE_MIN_UNIT(I_CODE)) WHERE P_SIZE IS NULL"INSERT INTO S_APPRVD_USR ( LVL_NO,DOC_TYP,U_ID,PRV_FLG,AD_U_ID,AD_DATE )  SELECT LVL_NO,DOC_TYP,1,1,1,YS_GEN_PKG.GET_CURDATE   FROM S_APPRVD_LVL  WHERE DOC_TYP = 94"UPDATE PRIVILEGE_WH SET TRNSFR_WCODE_FLG=1 WHERE NVL(ADD_FLAG,0) = 1"DELETE FROM S_FLAGS WHERE FLG_CODE = ''INSTALL_DOC''  AND FLG_VALUE = 18"SELECT MAX(NVL(SRL_SQ,0)) + 1    FROM IAS_ITEM_SERIALNO"SELECT DOC_TYPE,DOC_SER,I_CODE,SERIALNO,RCRD_NO_DOC,W_CODE,NVL(EXPIRE_DATE,''01/01/1900'') EXPIRE_DATE,NVL(BATCH_NO,''0'') BATCH_NO   FROM IAS_ITEM_SERIALNO  WHERE I_CODE IN (SELECT I_CODE   FROM IAS_ITM_MST  WHERE NVL(SERVICE_ITM,0) = 1 ) AND SRL_SQ IS NULL ORDER BY AD_DATE"UPDATE IAS_ITEM_SERIALNO S SET SRL_SQ=INV_ITM_SRL_SEQ.NEXTVAL WHERE S.DOC_SER = :b1  AND S.I_CODE = :b2  AND S.DOC_TYPE = :b3  AND S.W_CODE = :b4  AND NVL(S.EXPIRE_DATE,''01/01/1900'') = NVL(:b5,''01/01/1900'')  AND NVL(S.BATCH_NO,''0'') = NVL(:b6,''0'')  AND S.SERIALNO = :b7  AND NVL(S.RCRD_NO,0) = NVL(:b8,0)  AND S.SRL_SQ IS NULL"UPDATE IAS_CHK_DOC_INOUT_QTY_DTL M SET IN_OUT=(SELECT IN_OUT   FROM INV_V_DOC_TYPE  WHERE DOC_TYPE = M.DOC_TYPE_REF  AND ROWNUM <= 1 )"UPDATE FORM_DETAIL SET DOC_TYP=139 WHERE FORM_NO = 649"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 9,8,14773,''Outgoing LINK WITH BILL'',0,6,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 31,14,2709,''Request Transfer'',1,7,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 6,5,1491,''LOCAL Purchase Inv.'',0,11,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 53,21,14771,''Sale Order LINK WITH BILL'',1,14,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 0,1,1264,''Open Balance'',0,1,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 4,2,2793,''Sales Inv.'',0,16,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 5,3,1409,''Sales Return Inv.'',0,19,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 6,4,68,''Foreign Purchase Inv.'',0,13,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CH
K_BFR_APPROVED )  VALUES ( 7,6,371,''Pur. Return Inv.'',0,22,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 8,7,369,''Incoming'',0,3,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 9,9,3101,''Outgoing'',0,5,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 11,10,95,''Out Transfer'',0,8,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 12,11,1991,''Reveived'',0,9,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 13,12,1456,''Outgoing Bills'',0,17,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 14,13,1662,''Return Bills'',0,20,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 31,15,2708,''Request Out'',1,4,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 32,16,2568,''Good Received'',1,2,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 43,17,1492,''Local Goods Received'',1,10,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 44,18,3875,''Foreign Goods Received'',0,12,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 49,19,14774,''Purchase Return Requst'',1,21,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 53,20,14772,''Sale Order LINK WITH OUTING'',0,15,0  )"INSERT INTO INV_PRPRTN_STP ( DOC_TYPE,TYP_NO,LBL_NO,TYP_NM,PR_TYPE,ORDR_NO,USE_CHK_BFR_APPROVED )  VALUES ( 136,22,6584,''Sales Retuen Request'',1,18,0  )"DELETE FROM IAS_ITM_UNT_BARCODE WHERE I_CODE IN (SELECT I_CODE   FROM IAS_ITM_MST  INTERSECT SELECT BARCODE   FROM IAS_ITM_UNT_BARCODE )"UPDATE FORM_DETAIL SET F_FILE_NAME=''GENR030'' WHERE FORM_NO IN ( 604,950  )"UPDATE IAS_ITM_WCODE SET WHG_CODE=IAS_WCODE_PKG.GET_WHG_CODE(W_CODE) WHERE WHG_CODE IS NULL"SELECT COSTING_TYPE,WTAVG_TYPE   FROM IAS_PARA_INV"UPDATE IAS_SYS.IAS_LABELS SET CAPTION_DET=''Last Pur. Price'' WHERE LANG_NO = 2  AND LABEL_NO = 184"UPDATE IAS_SYS.IAS_LABELS SET CAPTION_DET=''Min. cons.
Qty'' WHERE LANG_NO = 2  AND LABEL_NO = 12154"UPDATE IAS_SYS.IAS_LABELS SET CAPTION_DET=''Max. cons.
Qty'' WHERE LANG_NO = 2  AND LABEL_NO = 12155"UPDATE IAS_SYS.IAS_LABELS SET CAPTION_DET=''Amt In Doc. Curr'' WHERE LANG_NO = 2  AND LABEL_NO = 1542"UPDATE S_FLAGS SET FLG_DESC=''
'' WHERE LANG_NO = 1  AND FLG_CODE = ''INSTALL_DOC''  AND FLG_VALUE = 6"SELECT M.I_CODE,M.ITM_UNT,M.P_SIZE   FROM IAS_ITM_DTL M,IAS_ITM_UNT_BARCODE D  WHERE M.I_CODE = D.I_CODE  MINUS SELECT I_CODE,ITM_UNT,P_SIZE   FROM IAS_ITM_UNT_BARCODE"UPDATE IAS_ITM_UNT_BARCODE SET P_SIZE=:b1 WHERE I_CODE = :b2  AND ITM_UNT = :b3"UPDATE FORM_DETAIL SET F_ORDER_NO=1 WHERE FORM_NO = 254"UPDATE FORM_DETAIL SET F_ORDER_NO=2 WHERE FORM_NO = 255"UPDATE FORM_DETAIL SET F_SYS=''GLS'',SYS_NO=30,F_PARENT_NO=8,F_ORDER_NO=85 WHERE FORM_NO = 32"UPDATE IAS_FORM_NAME SET FORM_NAME=''
'' WHERE FORM_NO = 254  AND LANG_NO = 1"UPDATE IAS_FORM_NAME SET FORM_NAME=''Stock Balances Reports'' WHERE FORM_NO = 254  AND LANG_NO = 2"UPDATE IAS_FORM_NAME SET FORM_NAME=''
'' WHERE FORM_NO = 258  AND LANG_NO = 1"UPDATE IAS_FORM_NAME SET FORM_NAME=''Stockking Reports'' WHERE FORM_NO = 258  AND LANG_NO = 2"UPDATE IAS_FORM_NAME SET FORM_NAME=''
'' WHERE FORM_NO = 281  AND LANG_NO = 1"UPDATE IAS_FORM_NAME SET FORM_NAME=''Income List Report'' WHERE FORM_NO = 281  AND LANG_NO = 2"UPDATE IAS_LABELS SET CAPTION_DET=''
'' WHERE LABEL_NO = 5353  AND LANG_NO = 1"SELECT DOC_SER,COUNT(1)   FROM (SELECT DOC_SER,W_CODE   FROM IAS_CHK_DOC_
INOUT_QTY_DTL  GROUP BY DOC_SER,W_CODE )  GROUP BY DOC_SER  HAVING COUNT(1) = 1"UPDATE IAS_CHK_DOC_INOUT_QTY_MST M SET W_CODE=(SELECT W_CODE   FROM IAS_CHK_DOC_INOUT_QTY_DTL D  WHERE M.DOC_SER = D.DOC_SER  AND ROWNUM <= 1 ) WHERE M.DOC_SER = :b1  AND W_CODE IS NULL"UPDATE IAS_CHK_DOC_INOUT_QTY_MST SET PR_TYPE=1,TYP_NO=21 
WHERE DOC_TYPE_REF = 53  AND PR_TYPE IS NULL  AND TYP_NO IS NULL"UPDATE IAS_CHK_DOC_INOUT_QTY_MST SET PR_TYPE=2,TYP_NO=5 WHERE DOC_TYPE_REF = 6  AND PR_TYPE IS NULL  AND TYP_NO IS NULL"UPDATE IAS_CHK_DOC_INOUT_QTY_MST SET PR_TYPE=1,TYP_NO=16 WHERE DOC_TYPE_REF = 31  AND PR_TYPE IS NULL  AND TYP_NO IS NULL"UPDATE IAS_CHK_DOC_INOUT_QTY_MST M SET ( PR_TYPE,TYP_NO  )=(SELECT 2,TYP_NO   FROM INV_PRPRTN_STP D  WHERE M.DOC_TYPE_REF = D.DOC_TYPE  AND ROWNUM <= 1 ) WHERE M.DOC_TYPE_REF NOT IN ( 53,6,31  ) AND PR_TYPE IS NULL  AND TYP_NO IS NULL"UPDATE IAS_CHK_DOC_INOUT_QTY_DTL D SET ( PR_TYPE,TYP_NO  )=(SELECT PR_TYPE,TYP_NO   FROM IAS_CHK_DOC_INOUT_QTY_MST M  WHERE M.DOC_SER = D.DOC_SER ) WHERE D.PR_TYPE IS NULL  AND D.TYP_NO IS NULL"SELECT USE_COMPOUND_ITEMS   FROM IAS_PARA_INV"UPDATE IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST SET FLG_ST=1,DOC_PST=1 WHERE DOC_TYPE IN ( 17,18  )"UPDATE S_FLAGS SET FLG_ST=1 WHERE FLG_CODE IN ( ''UNPOST_DOC_TYPE'',''POST_DOC_TYPE''  ) AND FLG_VALUE IN ( 17,18  )"
INV_DBA_PROCEDURE_SCRIPT
INV_DBA_PROCEDURE_SCRIPT
"PKG INIT"INV_DBA_PROCEDURE_SCRIPT""
INV_DBA_PROCEDURE_SCRIPT
CREATE OR REPLACE PROCEDURE IAS_REBUILD_TAX_MOVMNT_PRC(  P_PRCSS_TYP  IN  NUMBER DEFAULT NULL, -- 0 = Chk difftax , 1= rebuild diff tax
                BEGIN
                      SELECT COUNT(*) INTO V_CNT FROM (
                           SELECT DOC_TYPE,DOC_NO,DOC_SER,SUM(TAX_AMT) TAX_AMT FROM V_GNR_TAX_ITM_MOVMNT
                                       WHERE DOC_SER IS NOT NULL
                                       GROUP BY DOC_TYPE,DOC_NO,DOC_SER
                            SELECT  DOC_TYPE,DOC_NO,DOC_SER ,SUM(TAX_AMT) TAX_AMT FROM GNR_TAX_ITM_MOVMNT
                                       WHERE DOC_SER IS NOT NULL
                                       GROUP BY DOC_TYPE,DOC_NO,DOC_SER
                EXCEPTION WHEN OTHERS THEN
           BEGIN
             SELECT SUM(TAX_AMT) INTO V_AMT_VAILD FROM V_GNR_TAX_ITM_MOVMNT
                                               WHERE DOC_SER IS NOT NULL;                                             
           EXCEPTION WHEN OTHERS THEN
           BEGIN
             SELECT SUM(TAX_AMT) INTO V_AMT_NOVAILD FROM GNR_TAX_ITM_MOVMNT
                                               WHERE DOC_SER IS NOT NULL;                                              
           EXCEPTION WHEN OTHERS THEN
        CURSOR TAX_MVMNT IS SELECT DOC_TYPE,DOC_NO,DOC_SER,SUM(TAX_AMT) TAX_AMT FROM V_GNR_TAX_ITM_MOVMNT
                                      WHERE DOC_SER IS NOT NULL
                                       GROUP BY DOC_TYPE,DOC_NO,DOC_SER
                            SELECT  DOC_TYPE,DOC_NO,DOC_SER ,SUM(TAX_AMT) TAX_AMT FROM GNR_TAX_ITM_MOVMNT
                                       WHERE DOC_SER IS NOT NULL
         BEGIN
                BEGIN
                   DELETE FROM GNR_TAX_ITM_MOVMNT
                        WHERE DOC_TYPE=I.DOC_TYPE
                EXCEPTION WHEN OTHERS THEN
                END;           
                BEGIN    
                     INSERT INTO GNR_TAX_ITM_MOVMNT ( DOC_TYPE, BILL_DOC_TYPE, DOC_JV_TYPE, 
                                           SELECT      DOC_TYPE, BILL_DOC_TYPE, DOC_JV_TYPE, 
                                            FROM  V_GNR_TAX_ITM_MOVMNT
                                                 WHERE DOC_TYPE=I.DOC_TYPE
                EXCEPTION WHEN OTHERS THEN
                END;                                   
         END;  
CREATE OR REPLACE Procedure Inv_Get_Itm_QR_Code_Data ( P_QR_Code_Mthd_Typ         In  Number   ,
  Begin
                 Begin
                      Select Use_QR_Code_Type Into V_Use_QR_Code_Type
                       From Ias_Itm_Mst
                        WHere I_Code= P_Itm_Code ;
                 Exception
                    --Insert into tst values ('V_QR_Code_Mthd_No='||V_QR_Code_Mthd_No); Commit ;
                           Cursor C_Fld Is Select Fld_Nm ,Fld_Lngth , Fld_Code
                                            From Inv_QR_Code_Mthd_Dtl
                                             Where Mthd_No = V_QR_Code_Mthd_No 
                                             Order By RowNum  ; 
                      Begin
                      Exception
CREATE OR REPLACE Procedure Inv_Chk_Last_Itm_Wtavg (  P_Cst_Type         In Ias_Para_Inv.Costing_Type%Type ,
Begin 
             Begin
                      Cursor C_Mst Is Select I_Code,Wt_Avg_After  
                                    From Gr_Detail Gr_Mst
                                         Where G_Ser  = P_Doc_Ser
                                          And  rec_No=( select Max(Rec_No) 
                                                          from Gr_Detail 
                                                           where G_Ser  = P_Doc_Ser 
                                      Select I_Code,Nvl(I_Cwtavg,0) I_Cwtavg
                                       From Ias_Itm_Mst
                                         Where 
                                           And Exists ( Select 1 From  Gr_Detail
                                                        Where G_Ser  = P_Doc_Ser
                  Begin
                         Begin
                            Update Ias_Itm_Mst
                              Where I_Code   = I.I_Code; 
                        Exception When Others Then
                        End;
             End;
                Begin
                      Cursor C_Mst Is Select I_Code,W_Code,Wt_Avg_After  
                                    From Gr_Detail Gr_Mst
                                         Where G_Ser  = P_Doc_Ser
                                          And  rec_No=( select Max(Rec_No) 
                                                          from Gr_Detail 
                                                           where G_Ser  = P_Doc_Ser 
                                      Select I_Code,W_Code,
                                       From Ias_Itm_Wcode
                                         Where 
                                           And Exists ( Select 1 From Gr_Detail
                                                        Where G_Ser  = P_Doc_Ser
                  Begin
                         Begin
                            Update Ias_Itm_Wcode
                              Where I_Code   = I.I_Code
                        Exception When Others Then
                        End;
             End;
             Begin
                      Cursor C_Mst Is Select I_Code,Whg_Code,Wt_Avg_After  
                                    From Gr_Detail Gr_Mst
                                         Where G_Ser    = P_Doc_Ser
                                          And  rec_No=( select Max(Rec_No) 
                                                          from Gr_Detail 
                                                           where G_Ser    = P_Doc_Ser 
                                      Select I_Code,Whg_Code,Nvl(I_Cwtavg,0) I_Cwtavg
                                       From Ias_Itm_Wcode
                                         Where 
                                           And Exists ( Select 1 From Gr_Detail
                                                        Where G_Ser    = P_Doc_Ser
                  Begin
                         Begin
                            Update Ias_Itm_Wcode
                              Where I_Code   = I.I_Code
                        Exception When Others Then
                        End;
             End;
Create Or Replace Procedure Inv_Upd_Prmry_Cst_Prc ( P_Cost_Typ
 Begin
        Begin
         V_Sql_Stm:='Update Ias_Itm_Mst M Set Primary_Cost = ( Select I_Cwtavg
                                                                From Ias'||P_Prv_Yr||'.Ias_Itm_Mst
                                                                 Where I_Code = M.I_Code
                      Where Exists ( Select 1 From Inv_V_Itm_Upd_Prmry
                                      Where I_Code = M.I_Code
        Exception When Others Then
         Raise_Application_Error(-20001,'Err When Update Primary_Cost Ias_Itm_Mst From Ias'||P_Prv_Yr||'.Ias_Itm_Mst '||SqlErrm);
        End;
        Begin
         V_Sql_Stm:='Update Ias_Itm_Mst M Set I_Cwtavg = Primary_Cost
                       Where Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                         Where I_Code = M.I_Code
        Exception When Others Then
         Raise_Application_Error(-20002,'Err When Update I_Cwtavg Ias_Itm_Mst From Primary_Cost, '||SqlErrm);
        End;
        Begin
         V_Sql_Stm:='Update Ias_Itm_Wcode M Set Primary_Cost = ( Select I_Cwtavg
                                                                   From Ias'||P_Prv_Yr||'.Ias_Itm_Wcode
                                                                     Where I_Code = M.I_Code
                      Where Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                 Where I_Code = M.I_Code
        Exception When Others Then
         Raise_Application_Error(-20003,'Error When Update  Ias_Itm_Wcode From Ias'||P_Prv_Yr||'.Ias_Itm_Wcode '||SqlErrm);
        End;
        Begin
            V_Sql_Stm:='Update Ias_Itm_Wcode M Set I_Cwtavg = Primary_Cost
                          Where Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                         Where I_Code = M.I_Code
        Exception When Others Then
          Raise_Application_Error(-20004,'Err When Update I_Cwtavg Ias_Itm_Wcode From Primary_Cost, '||SqlErrm);
        End;
        Begin
         V_Sql_Stm:='Update Ias_Itm_Wcode M Set Primary_Cost = ( Select I_Cwtavg
                                                                    From Ias'||P_Prv_Yr||'.Ias_Itm_Wcode
                                                                     Where I_Code   = M.I_Code
                              Where Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
           Where I_Code   = M.I_Code
        Exception When Others Then
         Raise_Application_Error(-20005,'Error When Update  Ias_Itm_Wcode From Ias'||P_Prv_Yr||'.Ias_Itm_Wcode '||SqlErrm);
        End;
        Begin
           V_Sql_Stm:='Update Ias_Itm_Wcode M Set I_Cwtavg = Primary_Cost
                          Where Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                         Where I_Code   = M.I_Code
        Exception When Others Then
          Raise_Application_Error(-20006,'Err When Update I_Cwtavg Ias_Itm_Wcode From Primary_Cost, '||SqlErrm);
        End;
    -- Update Ias_Open_Stock
    Begin
       V_Sql_Stm:='Update Ias_open_Stock A
                     Set Stk_Cost = ( Select Nvl(primary_cost,0)* Nvl(A.P_Size,1) From Ias_Itm_Mst
                                       Where I_Code = A.I_Code  )
                       Where Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                       Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20007,'Err When Update Stk_Cost Ias_open_Stock From Primary_Cost, '||SqlErrm);
    --# Update Item_Movement
    Begin
       V_Sql_Stm:='Update item_movement A
                        Set stk_cost = (Select Nvl(stk_cost,0) 
                                         From ias_open_stock
                                          Where I_Code       = A.I_Code
                         Where doc_type        = 0 
                           And Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                          Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20008,'Err When Update Stk_Cost item_movement From ias_open_stock, '||SqlErrm);
    Begin
       V_Sql_Stm:='Update item_movement A 
                      Where doc_type       = 0 
                      And Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                     Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20009,'Err When Update i_cost item_movement From stk_cost, '||SqlErrm);
    --# Update Gr Detail
    Begin 
        V_Sql_Stm:='Update gr_detail A 
                        Set stk_cost = ( Select Nvl(stk_cost,0) 
                                          From ias_open_stock
                                           Where I_Code       = A.
                         Where pi_type         = 0 
                           And Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                          Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20010,'Err When Update stk_cost gr_detail From ias_open_stock, '||SqlErrm);
    Begin
        V_Sql_Stm:='Update gr_detail A
                         Where pi_type         = 0 
                           And Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                          Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20011,'Err When Update  gr_detail , '||SqlErrm);
    -- Update Ias_Open_Stock
    Begin
       V_Sql_Stm:='Update Ias_open_Stock A
                     Set Stk_Cost = ( Select Nvl(primary_cost,0)* Nvl(A.P_Size,1) From  From Ias_Itm_Wcode
                                       Where I_Code = A.I_Code  
                       Where Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                                      Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20012,'Err When Update Stk_Cost Ias_open_Stock From Primary_Cost, '||SqlErrm);
    --# Update Item_Movement
    Begin
       V_Sql_Stm:='Update item_movement A
                        Set stk_cost = (Select Nvl(stk_cost,0) 
                                         From ias_open_stock
                                          Where I_Code       = A.I_Code
                         Where doc_type        = 0 
                           And Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                          Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20013,'Err When Update Stk_Cost item_movement From ias_open_stock, '||SqlErrm);
    Begin
       V_Sql_Stm:='Update item_movement A 
                      Where doc_type       = 0 
                      And Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                      Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20014,'Err When Update i_cost item_movement From stk_cost, '||SqlErrm);
    --# Update Gr Detail
    Begin 
        V_Sql_Stm:='Update gr_detail A 
                        Set stk_cost = ( Select Nvl(stk_cost,0) 
                                          From ias_open_stock
                                         Where I_Code       = A.I_Code
                         Where pi_type         = 0 
                           And Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                          Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20015,'Err When Update stk_cost gr_detail From ias_open_stock, '||SqlErrm);
    Begin
        V_Sql_Stm:='Update gr_detail A
                         Where pi_type         = 0 
                           And Exists ( Select 1 From Inv_V_Itm_Upd_Prmry_Cst
                                          Where I_Code = A.I_Code
    Exception
      Raise_Application_Error(-20016,'Err When Update  gr_detail , '||SqlErrm);
Create Or Replace Procedure Inv_Chk_Diff_Itm_Cst_Prc Is
 Begin
            Select Wtavg_Type Into V_Wtavg_Type From Ias_Para_Inv Where Costing_Type=2
                select max_rcrd.i_code,max_rcrd.expr,max_rcrd.rcrd_count op_rcrd_cnt,min_rcrd.rcrd_count reeval_rcrd_cnt,max_rcrd.rcrd_count-min_rcrd.rcrd_count reeval_cnt from(
                select item_movement.i_code,case when '||V_Wtavg_Type|| '=2 then item_movement.w_code when '||V_Wtavg_Type|| '=3 then item_movement.whg_code ELSE 0  end expr 
                ,count(last_reeval_serial)rcrd_count from item_movement,
                (select i_code,(case when '||V_Wtavg_Type|| '=2 then w_code when '||V_Wtavg_Type|| '=3 then whg_code ELSE 0  end) expr 
                ,min(last_reeval_serial)last_reeval_serial from ias_itm_wcode
                group by i_code,case when '||V_Wtavg_Type|| '=2 then w_code when '||V_Wtavg_Type|| '=3 then whg_code ELSE 0  end)wcode_tbl
                where wcode_tbl.i_code=item_movement.i_code 
            group by item_movement.i_code,case when '||V_Wtavg_Type|| '=2 then item_movement.w_code when '||V_Wtavg_Type|| '=3 then item_movement.whg_code ELSE 0  end
                select i_code,(case when '||V_Wtavg_Type|| '=2 then w_code when '||V_Wtavg_Type|| '=3 then whg_code ELSE 0  end) expr 
                ,count(serial)rcrd_count from item_movement
                group by i_code,case when '||V_Wtavg_Type|| '=2 then w_code when '||V_Wtavg_Type|| '=3 then whg_code ELSE 0  end
                where max_rcrd.i_code=min_rcrd.i_code and max_rcrd.expr=min_rcrd.expr';
Exception 
CREATE OR REPLACE Procedure Inv_Kit_Itm_Qty_Prc ( P_Whr In Varchar2 ) Is 
 Begin
                                              Execute Immediate ' Delete From Inv_Rq_Assmbl_Qty_Tmp ' ;
                                              Execute Immediate ' Insert Into Inv_Rq_Assmbl_Qty_Tmp (I_Code ,I_Name,Itm_Unt,P_Qty,Avl_Qty,Sum_Sls_Qty,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv,Lvl_No)
                                                                  Select I_Code,
                                                                                  Order By Lvl_No Desc) Sum_Sls_Qty,
                                                                    From (With
                                          ((Select M.Doc_No,
                                                                                      From Inv_Rq_Assmbl_Mst M,
                                                                                     Where M.Doc_Ser = D.Doc_Ser And I.I_Code = D.I_Code
                                                                                   Select Rcrsv.Doc_No,
                                                                                     From Kit_Items  K,
                                                                                    Where K.I_Code = I.I_Code And K.Kit_Item_No = Rcrsv.I_Code /*And Nvl(Rcrsv.Use_Auto_Pst_Rms_Data_To_Inv, 0) = 1*/)
                                                                          Select Doc_No,
                                                                            From Rcrsv)
                                                                   Where Nvl(Kit_Itm, 0) = 1
                                                                Group By I_Code,
                                                                                     From Kit_Items  K,
CREATE OR REPLACE Package IAS_POSTING_INV_PKG Is
Procedure Get_Para ( P_Lang_no 
Procedure Get_Interface_Ac(P_Brn_no          In NUMBER     ) ;                     
Procedure Post_Incoming( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Outgoing( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Stk_Adjst(  P_f_doc_no      In NUMBER   Default Null
Procedure Post_Warehose_Trnsfer_Out( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Warehose_Trnsfer_In( P_f_doc_no       In NUMBER   Default Null
Procedure Post_Kit_Itm_Asm   ( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Kit_Itm_DisAsm   ( P_f_doc_no      In NUMBER   Default Null
CREATE OR REPLACE Package Body IAS_POSTING_INV_PKG Is
Procedure Get_Para ( P_Lang_no 
 Begin
  Select Cur_code 
    From Ex_Rate 
   Where L_f=1;
  Exception When Others Then
 Begin
  Select Cur_code ,Cur_rate 
    From Ex_Rate 
   Where Stock_Cur=1;
 Exception
  Begin
   Select Nvl(Ias_Para_Gen.Cc_Avail,1),Nvl(Ias_Para_Gen.Cc_Post,0),Nvl(Ias_Para_Gen.Pj_Post,0),Nvl(Ias_Para_Gen.Actv_Post,0),
   From Ias_Para_Gen,Ias_Para_Inv ;
   Exception 
  End;
Procedure Get_Interface_Ac(P_Brn_no          In NUMBER     ) Is
 Select Diff_Kit_Itm_A_Code ,
   From Interface_Acc 
  Where Brn_No=P_Brn_No 
  Exception 
PROCEDURE Post_Incoming  ( P_f_doc_no      In NUMBER   Default Null
( Select 8                  doc_type
   From Gr_Note Mg
  Where pi_type=5
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
    For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
 ( Select Sum((nvl(i_qty,0) * nvl(Decode(M_cv.rt_out,0,c_price,i_price),0))* nvl(Mg.ac_rate,1))  amt
      From Gr_Note Mg ,Gr_detail Dg ,Ias_Post_Details Pst
     Where Mg.pi_type=5
     Group by Decode(v_Incoming_Cs_Type,2,Dg.cc_code,Null) ,
     Begin
             Select Conn_With_Si,Pur_Type 
              From Ias_OutGoing_Mst 
               Where Out_Ser = D_Cv.Doc_Ser_Ref;
     Exception 
      -- ## Begin Return Out 
  Begin
    Select A_Code 
      From Incoming_Accounts 
     Where Decode(V_Item_Posting_Flag,1,G_Code,Whg_Code)   = D_Cv.Post_Code 
  Exception 
     Raise_Application_Error(-20646,'Error When Select Account From Incoming_Accounts ='||Sqlerrm) ;
  End;
--## Group Account From Inventory
 ( Select sum((i_qty * c_price) * (nvl(ac_rate,1)/nvl(stk_rate,1))) amt,
     From gr_detail Dg,Ias_Post_Details Pst
    Where Pst.Code_No=Decode(V_Item_Posting_Flag,1,Dg.i_code,2,Dg.w_code)
  Group by Pst.Post_Code,Decode(v_Incoming_Cs_Type,2,Dg.cc_code,Null),
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update gr_note Set gr_post=1,
  Where pi_type= 5
Exception When Others Then
    ( Select 9                       doc_type 
  From Ias_Outgoing_Mst Mout
 Where nvl(Mout.Out_post,0)= 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mout.Out_post,0))
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
    Begin
     Select 1 Into V_Cnt
      From Out_Types
       Where Out_Type     =M_cv.jv_type 
    Exception
    Begin
     Select Incom_Type Into V_Incom_Type
      From Gr_Note
       Where Pi_Type =5
         And G_Ser   = (Select Doc_Ser_Ref 
                         From Ias_OutGoing_dtl
                          Where Out_Ser      = M_cv.doc_ser
    Exception
        Begin
         Select 1 Into V_Conn_With_Pi
          From Incom_Types
           Where Incom_Type     =V_Incom_Type 
        Exception
     ( Select Decode(M_cv.pur_type,1,
    From Ias_Outgoing_Mst Mout ,Ias_Outgoing_Dtl Dout ,Ias_Post_Details Pst
   Where Mout.Out_ser=Dout.Out_ser
     Group by Decode(v_outgoing_cs_type,2,Dout.cc_code,Null),
     Begin
      Execute Immediate 'Select Get_Pms_Fince_Ddct_Acc_Fun From Dual' Into V_Pms_A_Code ;     
     Exception When Others Then
     -- Out Going Install From  Incoming Order Return 
        Begin
           Select 
             From Interface_Acc 
            Where Brn_No=M_cv.Brn_No 
        Exception When Others Then 
        End;
     ( Select Decode(M_cv.pur_type,1,
    From Ias_Outgoing_Mst Mout ,Ias_Outgoing_Dtl Dout,Ias_Post_Details Pst
   Where Mout.Out_ser=Dout.Out_ser
     group by Pst.Post_Code,Decode(v_outgoing_cs_type,2,Dout.cc_code,Null),
          Begin
            Select a_code 
              From outgoing_accounts 
             Where Decode(V_Item_Posting_Flag,1,g_code,WHG_CODE)   = D_cv.Post_Code 
          Exception 
             Raise_application_error(-20646,'Error When Select Account From outgoing_accounts ='||SqlErrm) ;
          End;
     Begin
      Execute Immediate 'Select Get_Pms_Fince_Ddct_Acc_Fun From Dual' Into V_Pms_A_Code ;     
     Exception When Others Then
        -- Out Going Install From  Incoming Order Return 
          Begin
             Select 
               From Interface_Acc 
              Where Brn_No=M_cv.Brn_No 
          Exception When Others Then 
          End;
--## Group Account From Inventory
 ( Select (sum(nvl(i_qty,0) * nvl(stk_cost,0) )* nvl(M_cv.stk_rate,1)) amt,
     From Ias_Outgoing_Dtl Dout ,Ias_Post_Details Pst
    Where Pst.Code_No=Decode(V_Item_Posting_Flag,1,Dout.i_code,2,Dout.w_code)
  Group by Pst.Post_Code,Decode(v_outgoing_cs_type,2,Dout.cc_code,Null),
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update Ias_Outgoing_Mst Set Out_post=1,
  Where Out_ser=M_cv.doc_ser;
Exception 
Procedure Post_Stk_Adjst ( P_f_doc_no      In NUMBER   Default Null
 ( Select 10                    doc_type 
  From STK_ADJUSTMENT  Mskj
 Where nvl(Mskj.stk_post,0)= 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mskj.stk_post,0))
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
--## Group Account From Inventory
 ( Select Decode(M_cv.jv_type,1,Sum(nvl(PLS_MINS,0) * nvl(wtavg,0) ), Sum((nvl(avl_qty,0)*nvl(pls_mins,0))-(nvl(avl_qty,0)*nvl(wtavg,0))) ) amt,    
     From stk_adjustment_det Dskj,Ias_Post_Details Pst
    Where Pst.Code_No=Decode(V_Item_Posting_Flag,1,Dskj.i_code,2,Dskj.w_code)
  Group by Pst.Post_Code,sign(PLS_MINS),Sign(nvl(pls_mins,0)-nvl(wtavg,0)),
 ( Select Decode(M_cv.jv_type,1,Sum(nvl(PLS_MINS,0) * nvl(wtavg,0) ), Sum((nvl(avl_qty,0)*nvl(pls_mins,0))-(nvl(avl_qty,0)*nvl(wtavg,0))) ) amt,    
     From Stk_Adjustment_Det Dskj,Ias_Post_Details Pst
    Where Pst.Code_No=Decode(V_Item_Posting_Flag,1,Dskj.i_code,2,Dskj.w_code)
    Group By Pst.Post_Code,sign(PLS_MINS),Sign(nvl(pls_mins,0)-nvl(wtavg,0)),
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
 Update Stk_Adjustment Set Stk_post = 1,
  Where adjust_type= M_cv.jv_type
Exception When Others Then
   Update Ias_Post_Mst Set doc_post=1
    Where doc_type=M_cv.doc_type
Exception 
   Update Ias_Post_Dtl Set doc_post=1
    Where doc_type=M_cv.doc_type
Exception 
Procedure Post_Warehose_Trnsfer_Out( P_f_doc_no      In NUMBER   Default Null
 ( Select  11                     doc_type 
  From IAS_WHTRNS_Mst  Mwt
 Where nvl(Mwt.Tr_post,0)= 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mwt.Tr_post,0))
And Exists (Select 1 From S_Brn_Usr_Priv
            Where U_Id = V_User_no                            
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
--## Group Account From Inventory (Dr)
 ( Select Sum(nvl(i_qty,0) * nvl(I_PRICE,0)) amt,    
     From Ias_Whtrns_Dtl Dwt,Ias_Post_Details Pst
    Where Pst.Code_No =Decode(V_Item_Posting_Flag,1,Dwt.i_code,2,Dwt.w_code)
    Group by  Dwt.W_Code         ,
        Begin
            Select Cc_Code Into V_Cc_Code From WAREHOUSE_DETAILS where w_code = D_cv_g.T_W_Code;
        Exception When Others Then
        End;
        Begin
            Select Conn_Brn_No Into V_Doc_Brn_No From Warehouse_Details Where W_Code = D_Cv_G.T_W_Code;
        Exception When Others Then
        End;
        /*Begin
            Select Conn_Brn_No Into V_Doc_Brn_No From Warehouse_Details Where W_Code = D_Cv_G.T_W_Code;
        Exception When Others Then
        End;
          Begin
            Select tr_a_code Into v_a_code 
              From Warehouse_Details
             where w_code=M_cv.t_w_code;
          Exception
      End;
--## Group Account From Inventory (Cr)
 ( Select Sum(nvl(i_qty,0) * nvl(stk_cost,0)) amt,    
     From Ias_Whtrns_Dtl Dwt,Ias_Post_Details Pst
    Where Pst.Code_No =Decode(V_Item_Posting_Flag,1,Dwt.i_code,2,Dwt.w_code)
      Group By Pst.Post_Code ,
        Begin
            Select Cc_Code Into V_Cc_Code From WAREHOUSE_DETAILS where w_code = D_cv_g.T_W_Code;
        Exception When Others Then
        End;
        Begin
            Select Conn_Brn_No Into V_Doc_Brn_No From Warehouse_Details Where W_Code = D_Cv_G.T_W_Code;
        Exception When Others Then
        End;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Screen Post   
    Begin
     Update Ias_Whtrns_Mst Set Tr_post = 1,
      Where Tr_Inout_Type = 1 
    End;
     Update Ias_Post_Mst Set doc_post=1
    Where doc_type=M_cv.doc_type
Exception 
     Update Ias_Post_Dtl Set doc_post=1
    Where doc_type=M_cv.doc_type
Exception 
Procedure Post_Warehose_Trnsfer_In( P_f_doc_no      In Number   Default Null
 ( Select 12                     doc_type 
  From IAS_WHTRNS_Mst  Mwt
 Where nvl(Mwt.Tr_post,0) = 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mwt.Tr_post,0))
    And Exists (Select 1 From S_Brn_Usr_Priv
                Where U_Id = V_User_no                            
   For Update NoWait)
        If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_type,M_cv.doc_ser    )    ,0)  = 0 Then -- (Begin Chk Exist) --
  Begin
      Select T_W_Code Into V_T_W_Code From Ias_Whtrns_Mst 
       Where Tr_Inout_Type = 1 
  Exception
     Select Decode(Nvl(M_cv.Rtn_Tr,0),1,Ias_Wcode_Pkg.Get_Wc_Brn  (V_T_W_Code),M_cv.Brn_No) Into V_Doc_Brn_No From Dual ;
--## Group Account From Inventory (Dr)
 ( Select Sum(nvl(i_qty,0) * (nvl(Stk_Cost,0))) amt,    
     From Ias_Whtrns_Dtl Dwt,Ias_Post_Details Pst
    Where Pst.Code_No =Decode(V_Item_Posting_Flag,1,Dwt.i_code,2,Dwt.w_code)
      Group by Pst.Post_Code ,
--## Group Account From Inventory (Cr)
 ( Select Sum(nvl(i_qty,0) * (Decode(Nvl(M_cv.Rtn_Tr,0),1,Decode(Nvl(M_cv.Tr_Cost_type,1),1,Nvl(stk_cost,0),Nvl(I_Price,0)),Nvl(stk_cost,0))-Nvl(Exp_Amt,0))) amt,    
     From Ias_Whtrns_Dtl Dwt,Ias_Post_Details Pst
    Where Pst.Code_No =Decode(V_Item_Posting_Flag,1,Dwt.i_code,2,Dwt.w_code)
      Group by Pst.Post_Code                              ,
                Begin
                  Select tr_a_code 
                    From Warehouse_Details
                   where w_code=M_cv.w_code;
                  Exception When Others Then
                    End;
     --## Group Account From Exp (Cr)
     ( Select Itm_Expnd.A_Code       A_Code      ,
         From Inv_Wrhs_Trnsfr_Expns Itm_Expnd
        Where Itm_Expnd.Doc_No  = M_Cv.Doc_No
--## Update Post flag
    Begin
     Update Ias_Whtrns_Mst Set Tr_post = 1,
      Where Tr_Inout_Type = 2 
    Exception When Others Then
    End;
    Begin
     Update Ias_Post_Mst  Set doc_post=1
        Where doc_type=M_cv.doc_type
    Exception 
    End;
    Begin
     Update Ias_Post_Dtl  Set doc_post=1
        Where doc_type=M_cv.doc_type
    Exception 
    End;
Procedure Post_Kit_Itm_Asm   ( P_f_doc_no      In NUMBER   Default Null
 ( Select 17                        doc_type  
  From Assemble_Kit_Items  Maki
 Where nvl(Maki.Doc_post,0) = 
 And Exists (Select 1 From S_Brn_Usr_Priv
              Where U_Id = V_User_no                            
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
--## Group Account From Inventory (Dr)
 ( Select sum(nvl(i_qty,0) * nvl(kit_cost,0)) amt,    
     From Assemble_Kit_Items_det Daki , Ias_Post_Details Pst
    Where Pst.Code_No =Decode(V_Item_Posting_Flag,1,Daki.kit_item_no,2,Daki.T_W_CODE) 
      Group by Pst.Post_Code)
--## Group Account From Inventory (Cr)
 ( Select Sum((nvl(i_qty,0) * nvl(i_cost,0))*Nvl(KIT_QTY,0)) amt,    
     From Kit_Items_Detail Kid ,Ias_Post_Details Pst
    Where Pst.Code_No =Decode(V_Item_Posting_Flag,1,Kid.i_code,2,Kid.W_CODE)  
      Group by Pst.Post_Code)
--## Group Account From Exp (Cr)
 ( Select Itm_Expnd.A_Code ,
     From Ias_Assemble_Itm_Expnd Itm_Expnd
    Where Itm_Expnd.Doc_No  = M_Cv.Doc_No
--## Update Post flag
  If P_Post_Type = 1 Then -- From Screen Post
    Begin
     Update Assemble_Kit_Items Set Doc_post = 1,
      Where Doc_ser=M_cv.doc_ser;
    Exception When Others Then
    End;
    Update Ias_Post_Mst Set doc_post=1
    Where doc_type=M_cv.doc_type
Exception 
 Update Ias_Post_Dtl Set doc_post=1
    Where doc_type=M_cv.doc_type
Exception 
Procedure Post_Kit_Itm_DisAsm   ( P_f_doc_no      In NUMBER   Default Null
 ( Select 18                        doc_type  
  From DisAssemble_Kit_Items  Maki
 Where nvl(Maki.Doc_post,0) = 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Maki.Doc_post,0))
And Exists (Select 1 From S_Brn_Usr_Priv
               Where U_Id = V_User_no                            
   For Update NoWait)
,0)  = 0 Then -- (Begin Chk Exist) --
--## Group Account From Inventory (Dr)
 /*( Select Sum((nvl(SUM_QTY,0) * nvl(i_cost,0))) amt,   By Mohamed 12-1-2009 */ 
 ( Select Sum((nvl(i_qty,0) * nvl(i_cost,0))*Nvl(Kit_QTY,0)) amt,    
     From Dis_Kit_Items_Detail Kid ,Ias_Post_Details Pst
    Where Pst.Code_No =Decode(V_Item_Posting_Flag,1,Kid.i_code,2,Kid.W_CODE)  
      Group by Pst.Post_Code)
--## Group Account From Inventory (Cr)
 ( Select sum(nvl(i_qty,0) * nvl(kit_cost,0)) amt,    
     From DisAssemble_Kit_Items_det Daki , Ias_Post_Details Pst
    Where Pst.Code_No =Decode(V_Item_Posting_Flag,1,Daki.kit_item_no,2,Daki.F_W_CODE)  
      Group by Pst.Post_Code)
/*--## Group Account From Exp (Dr)
 ( Select Itm_Expnd.A_Code ,
     From Ias_Assemble_Itm_Expnd Itm_Expnd
    Where Itm_Expnd.Doc_No  = M_Cv.As_Doc_No
     Begin
      Select Sum(Dr_Amt) Into V_Sum_Dr_Amt  
       From Ias_Post_Dtl
        Where Doc_Ser = M_cv.doc_ser  ;
     Exception
   Begin
          Select Sum(Cr_Amt) Into V_Sum_Cr_Amt  
           From Ias_Post_Dtl
            Where Doc_Ser = M_cv.doc_ser  ;
   Exception
        Begin
         Select Decode(V_Local_Cur,V_Stk_Cur,0,((Nvl(V_Sum_Cr_Amt,0) - Nvl(V_Sum_Dr_Amt,0) )/ M_Cv.Stk_Rate)) Into V_Amt_F
          From Dual ;
        Exception
--## Update Post flag
  If P_Post_Type = 1 Then -- From Screen Post
Update DisAssemble_Kit_Items Set Doc_post = 1,
  Where Doc_ser=M_cv.doc_ser;
Exception When Others Then
    Update Ias_Post_Mst Set doc_post=1
    Where doc_type=M_cv.doc_type
Exception 
 Update Ias_Post_Dtl Set doc_post=1
    Where doc_type=M_cv.doc_type
Exception 
CREATE OR REPLACE Package IAS_Itm_Inv_Pkg Is
PROCEDURE Insrt_Sale_Cost     ( p_Cst           In Out NUMBER,
PROCEDURE Insrt_Item_Move (p_doctype       In  NUMBER,
PROCEDURE Insrt_Gr_Mst (  p_doctype      In  NUMBER,
  PROCEDURE Insrt_Gr_Dtl (  p_doctype       In  NUMBER,                                                                    
PROCEDURE Insrt_Ias_Itm_Wcode (  p_icode     In  Ias_Itm_Mst.I_CODE%TYPE,
--## Update Gr_detail
PROCEDURE Update_Gr_Dtl (
Function Get_Itm_Cost(  P_costing_type In Number,
Function Get_Inv_Cumltv_Blnc(P_Val_Typ In Number Default 0        ,
Procedure Upd_Itm_Wtavg_Aftr_Save(P_Cost_Type   In Ias_Para_Inv.Costing_Type%Type,
CREATE OR REPLACE Package Body IAS_Itm_Inv_Pkg Is
PROCEDURE Insrt_Sale_Cost     ( p_Cst           In Out NUMBER,
         Begin
           Exception 
               Raise_Application_Error(-20419,'Error When Select WatAvg From Ias_Itm_Mst '||p_icode||chr(13)||SqlErrm);
         End;
  Cursor C_gr_rec Is Select Gr_Detail.I_Code,Gr_Detail.Gr_No,Gr_Detail.Cp_Qty,P_Size,
             From Gr_Detail
            Where I_Code = p_ICode
              For Update NoWait
             Order By Gr_detail.Gr_Date, Gr_detail.Rec_no ;
   Begin
 Update Gr_Detail Set CP_Qty = Rqty - Ent_Qty
      Where G_Ser  = Gr_Rec.G_Ser
    Exception 
          Raise_Application_Error(-20420,'Error when update gr_detail '||Gr_Rec.I_Code||chr(13)||SqlErrm);
   End;
    Begin
      Insert Into Sale_Cost  (  BILL_TYPE,
    Exception When Others Then
   End;
     Begin
      Update Gr_Detail Set CP_Qty = 0
       Where G_Ser  = Gr_Rec.G_Ser
    Exception When Others Then
       Raise_Application_Error(-20422,'Error When Update gr_detail ,i_code ='||Gr_Rec.I_Code||chr(13)||SqlErrm);
    End;
    Begin
     Insert Into Sale_Cost ( BILL_TYPE,
    Exception When Others Then
    End;
     Select Max(Rec_No) 
   From Gr_Detail
  Where I_Code   = p_Icode
   Select Gr_Detail.Gr_No,Gr_Detail.Pi_Type,Gr_Detail.g_ser,
     From Gr_Detail
    Where Gr_detail.Rec_No=Maxrec_no
    Begin
     Insert Into Sale_Cost (  bill_type,
    Exception When Others Then
    End;
   End;
Exception When Others Then
 Exception 
--## Insert Into Item_Move
PROCEDURE Insrt_Item_Move ( p_doctype       In  NUMBER,
         Select Costing_Type, Wtavg_Type, Stkcost_Fraction , Chk_Incmng_Cst_Per_Oprtn
          From Ias_Para_Inv
           Where Rownum = 1;
 BEGIN
 Insert Into Item_Movement (  DOC_TYPE,
   Exception When Others Then
  END;
PROCEDURE Insrt_Gr_Mst (  p_doctype          In  NUMBER,
  Begin
          Insert Into Gr_Note ( PI_TYPE, 
   Exception When Others Then
  END;
PROCEDURE Insrt_Gr_Dtl (  p_doctype        In  NUMBER,                                                                    
       Begin  
         Select Costing_Type,Wtavg_Type,Stkcost_Fraction 
          From Ias_Para_Inv Where Rownum=1;
       Exception 
       End;
 Begin
    Insert Into Gr_detail ( PI_TYPE,
   Exception When Others Then
  END;
PROCEDURE Insrt_Ias_Itm_Wcode ( P_icode      In  Ias_Itm_Mst.I_CODE%TYPE,
 Begin
 Select 1 
   From Ias_Itm_Wcode
  where I_Code  = P_Icode
 Exception 
                    Select Costing_Type, Wtavg_Type
                      From Ias_Para_Inv
                       Where Rownum = 1;
     Begin
     Begin
  Insert Into Ias_Itm_Wcode (   I_CODE, 
                                                        Decode (V_Wtavg_Type,1,0, Ias_Itm_Pkg.Get_Grand_Wtavg( P_Wtavg_Type => (select Wtavg_Type from Ias_Para_Inv Where RowNum<=1),
   Exception When Others Then
  END;
  Update Ias_Itm_Mst Set Income_Date = P_Doc_Date , Item_Store = 1
               Where I_Code = P_Icode
    Exception 
    End;
    Raise_Application_ERror(-20434,'Error when Select From Ias_Itm_Wcode ,i_code = '||p_icode||chr(13)||SqlErrm);
--## IUpdate Gr_detail
PROCEDURE Update_Gr_Dtl ( P_DocType
    Select Pi_Type,Gr_No,I_Code,W_Code,Rec_No,I_Qty,P_Qty,Cc_Code,Doc_Ser,Doc_Sequence,Doc_Sequence_Gr
      From Sale_Cost 
     Where Bill_Type        = P_Doctype
       For Update Nowait;
  Begin
      Update Gr_Detail Set Cp_Qty = Least (Nvl(Cp_Qty,0) + Nvl(I.P_Qty,0) , Nvl(P_Qty,0) + ( Nvl(Free_Qty,0)*Nvl(P_Size,1)) )
       where Gr_No         = I.Gr_No 
  Exception When Others Then
    Raise_Application_ERror(-20435,'Error when Update In Gr_detail ,i_code = '||P_Icode||'Doc_ser= '||P_docser||chr(13)||SqlErrm);
  End;
 Exception When Others Then
   Raise_Application_ERror(-20436,'Error when Update In Gr_detail ,i_code = '||P_Icode||'Doc_ser= '||P_docser||chr(13)||SqlErrm);
Function Get_Itm_Cost( P_costing_type In NUMBER,
       Cursor Fifo Is Select Gr_Detail.Cp_Qty,Gr_Detail.P_Size,nvl(Gr_Detail.stk_cost,0) stk_cost,
                        From Gr_Detail,Gr_Note
                       Where I_Code   = P_Icode
                       Order by Gr_Note.Gr_Date,Gr_detail.Rec_no ;
       Begin
      End;
 Exception when others then 
                Function Get_Inv_Cumltv_Blnc(P_Val_Typ  In Number Default 0        ,
                Begin  
                    Select Costing_Type,Wtavg_Type Into V_Cost_Type,V_Wtavg_Type From Ias_Para_Inv Where Rownum = 1 ;
                    If P_Val_Typ = 0 Then --Sum Stock Values From Item Movement
                              Select Sum ( ((Nvl(P_Qty,0) +Nvl(Pf_Qty,0))*Stk_Cost/P_Size)*In_Out) 
                              From Item_Movement 
                                Where I_Code = P_I_Code;
                              Select Sum ( ((Nvl(P_Qty,0) +Nvl(Pf_Qty,0))*Stk_Cost/P_Size)*In_Out) 
                              From Item_Movement 
                                Where I_Code = P_I_Code 
                              Select Sum ( ((Nvl(P_Qty,0) +Nvl(Pf_Qty,0))*Stk_Cost/P_Size)*In_Out) 
                              From Item_Movement
                               Where I_Code   = P_I_Code 
                    Elsif P_Val_Typ = 1 Then  --Sum Stock Values From Gr_Detail      
                                  Select Sum((nvl(avl_qty_before,0)+((Nvl(I_Qty,0) +Nvl(Free_Qty,0))*P_Size)) *Inv_Wtavg_Frc) 
                                  From Gr_Detail 
                                   Where I_Code = P_I_Code;
                                  Select Sum((nvl(avl_qty_before,0)+((Nvl(I_Qty,0) +Nvl(Free_Qty,0))*P_Size)) *Inv_Wtavg_Frc) 
                                  From Gr_Detail 
         Where I_Code = P_I_Code 
                                 Select Sum((nvl(avl_qty_before,0)+((Nvl(I_Qty,0) +Nvl(Free_Qty,0))*P_Size)) *Inv_Wtavg_Frc) 
                                 From Gr_Detail 
                                  Where I_Code   = P_I_Code 
                    ElsIf P_Val_Typ = 2 Then --Sum Stock Values From Itm_Mst Or Itm_Wcode
                                  Select Sum (Nvl(W.Avl_Qty,0)*Nvl(M.I_Cwtavg,0)) 
                                   From Ias_Itm_Mst M, Ias_Itm_Wcode W 
                                    Where M.I_Code = W.I_Code
                                   Select Sum (Nvl(Avl_Qty,0)*Nvl(I_Cwtavg,0)) 
                                   From  Ias_Itm_Wcode 
                                     Where I_Code  = P_I_Code
                                  Select Sum (Nvl(Avl_Qty,0)*Nvl(I_Cwtavg,0)) 
                                  From  Ias_Itm_Wcode 
                                    Where I_Code   = P_I_Code
                       ElsIf P_Val_Typ = 3 Then --Sum Stock Values From gr_detail and Itm_Wcode
                            Select  Avg(Wt_Avg_After) Keep (Dense_Rank Last Order By Rec_No) Wt_Avg_After
                                     From Gr_Detail
                                     where i_code=P_I_Code
                         Select Sum (Nvl(Avl_Qty,0)) 
                                  From  Ias_Itm_Wcode 
                                    where i_code=P_I_Code
                Exception 
                Procedure Upd_Itm_Wtavg_Aftr_Save( P_Cost_Type   In Ias_Para_Inv.Costing_Type%Type,
                Begin
                              (Select I_Code, 
                                      Over(Partition By I_Code, Case When P_Wtavg_Type = 2 Then W_Code When P_Wtavg_Type = 3 Then Whg_Code Else 0 End Order By Rec_No),0) Wt_Avg_Before, 
                                 From Gr_Detail
                                  Where I_Code = P_Icode 
                      Select Sum_Qty, 
                        From Gr_Movmnt
                          Where Doc_Sequence                  = P_Docseq 
                              (Select I_Code, 
                                      Nvl(Lag(Wt_Avg_After, 1) Over(Partition By I_Code, Case When P_Wtavg_Type = 2 Then W_Code When P_Wtavg_Type = 3 Then Whg_Code Else 0 End Order By Rec_No),0) Wt_Avg_Before, 
                                 From Gr_Detail
                                  Where I_Code = P_Icode 
                      Select Sum_Qty, 
                        From Gr_Movmnt
                       Where Doc_Sequence = P_Docseq ;
                      --## Update Gr Detail
                         Update (Select Wt_Avg_Before, Wt_Avg_After, Inv_Wtavg_Frc
                                  From Gr_Detail
                                   Where Doc_Sequence                  = P_Docseq 
                         Update (Select Stk_Cost, P_Size
                                  From Item_Movement
                                 Where Doc_Sequence                 = P_Docseq 
                         Where Stk_Cost <> V_Stk_Cost * P_Size;
                         Update (Select Wt_Avg_Before, Wt_Avg_After, Inv_Wtavg_Frc
                                 From Gr_Detail
                                  Where Doc_Sequence = P_Docseq )
                         Update (Select Stk_Cost, P_Size
                                 From Item_Movement
                                  Where Doc_Sequence = P_Docseq)
                         Where Stk_Cost <> V_Stk_Cost * P_Size;
                                                                                                                                                                                                --update wtavg in tables
                              Update Ias_Itm_Mst
                               Where I_Code   = P_Icode;
                              Update Ias_Itm_Wcode
                               Where I_Code   = P_Icode And W_Code = P_Wcode;
                              Update Ias_Itm_Wcode
                               Where I_Code   = P_Icode 
                                Update Ias_Itm_Mst
                                 Where I_Code = P_Icode ; 
CREATE OR REPLACE Package Body IAS_Itm_Inv_Pkg Is
PROCEDURE Insrt_Sale_Cost     ( p_Cst           In Out NUMBER,
         Begin
           Exception 
               Raise_Application_Error(-20419,'Error When Select WatAvg From Ias_Itm_Mst '||p_icode||chr(13)||SqlErrm);
         End;
  Cursor C_gr_rec Is Select Gr_Detail.I_Code,Gr_Detail.Gr_No,Gr_Detail.Cp_Qty,P_Size,
             From Gr_Detail
            Where I_Code = p_ICode
              For Update NoWait
             Order By Gr_detail.Gr_Date, Gr_detail.Rec_no ;
   Begin
 Update Gr_Detail Set CP_Qty = Rqty - Ent_Qty
      Where G_Ser  = Gr_Rec.G_Ser
    Exception 
          Raise_Application_Error(-20420,'Error when update gr_detail '||Gr_Rec.I_Code||chr(13)||SqlErrm);
   End;
    Begin
      Insert Into Sale_Cost  (  BILL_TYPE,
    Exception When Others Then
   End;
     Begin
      Update Gr_Detail Set CP_Qty = 0
       Where G_Ser  = Gr_Rec.G_Ser
    Exception When Others Then
       Raise_Application_Error(-20422,'Error When Update gr_detail ,i_code ='||Gr_Rec.I_Code||chr(13)||SqlErrm);
    End;
    Begin
     Insert Into Sale_Cost ( BILL_TYPE,
    Exception When Others Then
    End;
                   Begin                     
                   Exception 
                   End;    
     Select Max(Rec_No) 
   From Gr_Detail
  Where I
   Select Gr_Detail.Gr_No,Gr_Detail.Pi_Type,Gr_Detail.g_ser,
     From Gr_Detail
    Where Gr_detail.Rec_No=Maxrec_no
    Begin
     Insert Into Sale_Cost (  bill_type,
    Exception When Others Then
    End;
   End;
Exception When Others Then
 Exception 
--## Insert Into Item_Move
PROCEDURE Insrt_Item_Move ( p_doctype       In  NUMBER,
         Select Costing_Type, Wtavg_Type, Stkcost_Fraction , Nvl(Chk_Incmng_Cst_Per_Oprtn,0),Nvl(USE_COSTING,0)
          From Ias_Para_Inv
           Where Rownum = 1;
 BEGIN
 Insert Into Item_Movement (  DOC_TYPE,
   Exception When Others Then
  END;
          Begin
                Execute Immediate 'Select Head_Office  From Ias_Para_Lght
                                     Where Rownum <=1' Into  V_Lght_Head_Office_Sys ;
          Exception When Others Then
          ENd;      
PROCEDURE Insrt_Gr_Mst (  p_doctype          In  NUMBER,
  Begin
          Insert Into Gr_Note ( PI_TYPE, 
   Exception When Others Then
  END;
PROCEDURE Insrt_Gr_Dtl (  p_doctype        In  NUMBER,                                                                    
          Begin
                Execute Immediate 'Select Head_Office  From Ias_Para_Lght
                                     Where  Rownum <=1' Into  V_Lght_Head_Office_Sys ;
          Exception When Others Then
          ENd;      
       Begin  
             Select Costing_Type,Wtavg_Type,Stkcost_Fraction ,USE_COSTING
          From Ias_Para_Inv Where Rownum=1;
       Exception 
       End;
       Begin  
       Exception 
       End;
 Begin
    Insert Into Gr_detail ( PI_TYPE,
   Exception When Others Then
  END;
PROCEDURE Insrt_Ias_Itm_Wcode ( P_icode      In  Ias_Itm_Mst.I_CODE%TYPE,
 Begin
 Select 1 
   From Ias_Itm_Wcode
  where I_Code  = P_Icode
 Exception 
                    Select Costing_Type, Wtavg_Type
                      From Ias_Para_Inv
                       Where Rownum = 1;
     Begin
     Begin
  Insert Into Ias_Itm_Wcode (   I_CODE, 
 Decode (V_Wtavg_Type,1,0, Ias_Itm_Pkg.Get_Grand_Wtavg( P_Wtavg_Type => (select Wtavg_Type from Ias_Para_Inv Where RowNum<=1),
   Exception When Others Then
  END;
  Update Ias_Itm_Mst Set Income_Date = P_Doc_Date , Item_Store = 1
               Where I_Code = P_Icode
    Exception 
    End;
    Raise_Application_ERror(-20434,'Error when Select From Ias_Itm_Wcode ,i_code = '||p_icode||chr(13)||SqlErrm);
--## IUpdate Gr_detail
PROCEDURE Update_Gr_Dtl ( P_DocType
    Select Pi_Type,Gr_No,I_Code,W_Code,Rec_No,I_Qty,P_Qty,Cc_Code,Doc_Ser,Doc_Sequence,Doc_Sequence_Gr
      From Sale_Cost 
     Where Bill_Type        = P_Doctype
       For Update Nowait;
  Begin
      Update Gr_Detail Set Cp_Qty = Least (Nvl(Cp_Qty,0) + Nvl(I.P_Qty,0) , Nvl(P_Qty,0) + ( Nvl(Free_Qty,0)*Nvl(P_Size,1)) ) 
       where Gr_No         = I.Gr_No 
  Exception When Others Then
    Raise_Application_ERror(-20435,'Error when Update In Gr_detail ,i_code = '||P_Icode||'Doc_ser= '||P_docser||chr(13)||SqlErrm);
  End;
 Exception When Others Then
   Raise_Application_ERror(-20436,'Error when Update In Gr_detail ,i_code = '||P_Icode||'Doc_ser= '||P_docser||chr(13)||SqlErrm);
Function Get_Itm_Cost( P_costing_type In NUMBER,
       Cursor Fifo Is Select Gr_Detail.Cp_Qty,Gr_Detail.P_Size,nvl(Gr_Detail.stk_cost,0) stk_cost,
                        From Gr_Detail,Gr_Note
                       Where I_Code   = P_Icode
                       Order by Gr_Note.Gr_Date,Gr_detail.Rec_no ;
       Begin
      End;
 Exception when others then 
         Function Get_Inv_Cumltv_Blnc(P_Val_Typ  In Number Default 0        ,
                Begin  
                    Select Costing_Type,Wtavg_Type Into V_Cost_Type,V_Wtavg_Type From Ias_Para_Inv Where Rownum = 1 ;
                    If P_Val_Typ = 0 Then --Sum Stock Values From Item Movement
                              Select Sum ( ((Nvl(P_Qty,0) +Nvl(Pf_Qty,0))*Stk_Cost/P_Size)*In_Out) 
                              From Item_Movement 
                                Where I_Code = P_I_Code;
                              Select Sum ( ((Nvl(P_Qty,0) +Nvl(Pf_Qty,0))*Stk_Cost/P_Size)*In_Out) 
                              From Item_Movement 
                                Where I_Code = P_I_Code 
                              Select Sum ( ((Nvl(P_Qty,0) +Nvl(Pf_Qty,0))*Stk_Cost/P_Size)*In_Out) 
                              From Item_Movement
                               Where I_Code   = P_I_Code 
                    Elsif P_Val_Typ = 1 Then  --Sum Stock Values From Gr_Detail      
                                  Select Sum((nvl(avl_qty_before,0)+((Nvl(I_Qty,0) +Nvl(Free_Qty,0))*P_Size)) *Inv_Wtavg_Frc) 
                                  From Gr_Detail 
                                   Where I_Code = P_I_Code;
                                  Select Sum((nvl(avl_qty_before,0)+((Nvl(I_Qty,0) +Nvl(Free_Qty,0))*P_Size)) *Inv_Wtavg_Frc) 
                                  From Gr_Detail 
                                   Where I_Code = P_I_Code 
                                 Select Sum((nvl(avl_qty_before,0)+((Nvl(I_Qty,0) +Nvl(Free_Qty,0))*P_Size)) *Inv_Wtavg_Frc) 
                                 From Gr_Detail 
                                  Where I_Code   = P_I_Code 
                    ElsIf P_Val_Typ = 2 Then --Sum Stock Values From Itm_Mst Or Itm_Wcode
                                  Select Sum (Nvl(W.Avl_Qty,0)*Nvl(M.I_Cwtavg,0)) 
                                   From Ias_Itm_Mst M, Ias_Itm_Wcode W 
                                   Select Sum (Nvl(Avl_Qty,0)*Nvl(I_Cwtavg,0)) 
                                   From  Ias_Itm_Wcode 
                                     Where I_Code  = P_I_Code
                                  Select Sum (Nvl(Avl_Qty,0)*Nvl(I_Cwtavg,0)) 
                                  From  Ias_Itm_Wcode 
                                    Where I_Code   = P_I_Code
                       ElsIf P_Val_Typ = 3 Then --Sum Stock Values From gr_detail and Itm_Wcode
                            Select  Avg(Wt_Avg_After) Keep (Dense_Rank Last Order By Rec_No) Wt_Avg_After
                                     From Gr_Detail
                                     where i_code=P_I_Code
                         Select Sum (Nvl(Avl_Qty,0)) 
                                  From  Ias_Itm_Wcode 
                                    where i_code=P_I_Code
                Exception 
                Procedure Upd_Itm_Wtavg_Aftr_Save( P_Cost_Type   In Ias_Para_Inv.Costing_Type%Type,
                Begin
                              (Select I_Code, 
                                      Over(Partition By I_Code, Case When P_Wtavg_Type = 2 Then W_Code When P_Wtavg_Type = 3 Then Whg_Code Else 0 End Order By Rec_No),0) Wt_Avg_Before, 
                                 From Gr
                                  Where I_Code = P_Icode 
                      Select Sum_Qty, 
                        From Gr_Movmnt
                          Where Doc_Sequence                  = P_Docseq 
                              (Select I_Code, 
                                      Nvl(Lag(Wt_Avg_After, 1) Over(Partition By I_Code, Case When P_Wtavg_Type = 2 Then W_Code When P_Wtavg_Type = 3 Then Whg_Code Else 0 End Order By Rec_No),0) Wt_Avg_Before, 
                                 From Gr_Detail
                                  Where I_Code = P_Icode 
                      Select Sum_Qty, 
                        From Gr_Movmnt
                       Where Doc_Sequence = P_Docseq ;
                      --## Update Gr Detail
                         Update (Select Wt_Avg_Before, Wt_Avg_After, Inv_Wtavg_Frc
                                  From Gr_Detail
                                   Where Doc_Sequence                  = P_Docseq 
                         Update (Select Stk_Cost, P_Size
                                  From Item_Movement
                                 Where Doc_Sequence                  = P_Docseq 
                         Where Stk_Cost <> V_Stk_Cost * P_Size;
                         Update (Select Wt_Avg_Before, Wt_Avg_After, Inv_Wtavg_Frc
                                 From Gr_Detail
                                  Where Doc_Sequence = P_Docseq )
                         Update (Select Stk_Cost, P_Size
                                 From Item_Movement
                                  Where Doc_Sequence = P_Docseq)
                         Where Stk_Cost <> V_Stk_Cost * P_Size;
                                                                                                                                                                                                --update wtavg in tables
                              Update Ias_Itm_Mst
                               Where I_Code   = P_Icode;
                              Update Ias_Itm_Wcode
                               Where I_Code   = P_Icode And W_Code = P_Wcode;
                              Update Ias_Itm_Wcode
                               Where I_Code   = P_Icode 
                                Update Ias_Itm_Mst
                                 Where I_Code = P_Icode ; 
                Exception When Others Then
                  Raise_Application_Error(-20655,'Error When Update Cost In Gr_Detail'||Chr(13)||Sqlerrm);
Create Or Replace Package Ias_Inv_Mngmnt_Pkg As
 Procedure Get_Incom_Sale_Qty ( P_I_Code     In  Ias_Itm_Mst.I_Code%Type      ,  
 Function Get_Whtrns_Qty_Not_Rec ( P_I_Code      In  Ias_Itm_Mst.I_Code%Type      ,  
 Function Get_Out_Bill_Qty ( P_I_Code     In  Ias_Itm_Mst.I_Code%Type      ,  
 Function Get_First_Date  Return Date ;                           
Create Or Replace Package Body Ias_Inv_Mngmnt_Pkg As
 Procedure Get_Incom_Sale_Qty ( P_I_Code     In  Ias_Itm_Mst.I_Code%Type      ,  
  Begin
       Begin
          V_SqlStr := ' Select Sum(Decode(Doc_Type,0,0,1,0,3,0,(Nvl(P_Qty,0)+Nvl(Pf_Qty,0))*In_Out)) Inc_Qty,
            From '||P_Tbl_Nm||'  
             Where I_Code  = '||''''||P_I_Code||''''||' 
       Exception 
 Function Get_Whtrns_Qty_Not_Rec ( P_I_Code      In  Ias_Itm_Mst.I_Code%Type      ,  
  Begin
   Begin
          V_SqlStr := ' Select Nvl(Sum(P_Qty),0) 
                            From '||P_Tbl_Nm_Dtl||' 
                             Where Exists ( Select 1 From '||P_Tbl_Nm_Mst||' 
                                             Where '||P_Tbl_Nm_Mst||'.Tr_Ser           = '||P_Tbl_Nm_Dtl||'.Tr_Ser 
   Exception 
 Function Get_Out_Bill_Qty ( P_I_Code     In  Ias_Itm_Mst.I_Code%Type      ,  
  Begin
         Begin              
         V_SqlStr :=  ' Select (Nvl(Sum(P_Qty),0)+Nvl(Sum(Free_Qty*P_Size),0)) - (Nvl(Sum(Out_Qty*P_Size),0)+Nvl(Sum(Out_Free_Qty*P_Size),0)) 
   From '||P_Tbl_Nm_Dtl||' 
    Where Exists ( Select 1 From '||P_Tbl_Nm_Mst||' 
                    Where '||P_Tbl_Nm_Mst||'.Bill_Ser  = '||P_Tbl_Nm_Dtl||'.Bill_Ser 
         Exception 
         Begin
          V_SqlStr := ' Select (Nvl(Sum(P_Qty),0)+Nvl(Sum(Free_Qty*P_Size),0)) - (Nvl(Sum(Ret_Qty*P_Size),0)+Nvl(Sum(Ret_Free_Qty*P_Size),0))
   From '||P_Tbl_Nm_Dtl||'  
    Where Exists ( Select 1 From '||P_Tbl_Nm_Mst||'
                    Where '||P_Tbl_Nm_Mst||'.Rt_Bill_Ser      =  '||P_Tbl_Nm
         Exception 
  Function Get_First_Date  Return Date Is 
   Begin
     Select Username Into V_Usr_Nm From All_Users Where Username Like 'IAS%' And RowNum<=1 Order By Username ;
     Execute Immediate ' Select '||V_Usr_Nm||'.Ias_Gen
_Pkg.Get_Frst_Day From Dual'  Into V_Frst_Date ;
   Exception
Create Or Replace Package Ias_Inv_Close_Pkg Is
 Function Calc_Inv_Wtavg(P_Costing_Type In Ias_Para_Inv.Costing_Type%Type ,
  Procedure Insrt_To_Periodic_Table(P_Costing_Type  In Number                        ,
 Procedure Update_Othr_Table( P_Costing_Type  In Number                        ,
 Procedure Create_Inv_G_Code_Journal ( P_F_Date        In Date             ,
 Procedure Unclose_Inv ( P_Prd_No        In Number           ,
Create Or Replace Package Body Ias_Inv_Close_Pkg Is
 Function Calc_Inv_Wtavg(P_Costing_Type In Ias_Para_Inv.Costing_Type%Type ,
 Begin
      Begin
         Select Sum(((Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) )* Nvl(Stk_Cost,0) ) /(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ,
          From Item_Movement
           Where Doc_Type In (0,2,5)
      Exception 
      Begin
         Select Sum(((Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) )* Nvl(Stk_Cost,0) ) /(Nvl(P_Qty,0)+N
          From Item_Movement
           Where I_Code  = P_I_Code
      Exception 
      Begin
         Select Sum(((Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) )* Nvl(Stk_Cost,0) ) /(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)),
          From Item_Movement
           Where Doc_Type In (0,2,5)
      Exception 
      Begin
         Select Sum(((Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) )* Nvl(Stk_Cost,0) ) /(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)),
          From Item_Movement
           Where I_Code = P_I_Code 
      Exception 
   Begin 
   Exception 
 End; 
 Procedure Insrt_To_Periodic_Table(P_Costing_Type  In Number                        ,
  Begin
     Begin
       Insert Into  Ias_Itm_Periodic_Cost ( Prd_No            ,  
       Select P_Costing_Type            ,
        From Item_Movement,Ias_Itm_Mst
         Where  Ias_Itm_Mst.I_Code = Item_Movement.I_Code ;                                                            
     Exception
  End;
 Procedure Update_Othr_Table( P_Costing_Type  In Number                        ,
  Begin
          --## Update Cost In Ias_Itm_Mst
          Begin
            Update Ias_Itm_Mst 
             Set I_Cwtavg = (Select Distinct Itm_Cost  
                              From  Ias_Itm_Periodic_Cost 
                               Where I_Code = Ias_Itm_Mst.I_Code ) ;
          Exception
            Raise_Application_Error(-20001,'Err. When Update Cost In Ias_Itm_Mst '||Chr(13)||SqlErrm );
          --## Update  Cost In  Item_Movement
          Begin
            Update Item_Movement
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Doc_Type Not In (0,2,5) 
          Exception
            Raise_Application_Error(-20002,'Err. When Update Cost In Item_Movement '||Chr(13)||SqlErrm );
          --## Update  Cost In  Ias_Bill_Dtl
          Begin
            Update Ias_Bill_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Exists (Select 1 From Ias_Bill_Mst
   Where Ias_Bill_Mst.Bill_Ser = Ias_Bill_Dtl.Bill_Ser 
          Exception
            Raise_Application_Error(-20003,'Err. When Update Cost In Ias_Bill_Dtl '||Chr(13)||SqlErrm );
          --## Update  Cost In Ias_Rt_Bill_Dtl
          Begin
            Update Ias_Rt_Bill_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Exists (Select 1 From Ias_Rt_Bill_Mst
                            Where Ias_Rt_Bill_Mst.Rt_Bill_Ser = Ias_Rt_Bill_Dtl.Rt_Bill_Ser 
          Exception
            Raise_Application_Error(-20004,'Err. When Update Cost In Ias_Rt_Bill_Dtl '||Chr(13)||SqlErrm );
          Begin
            Update Ias_Rt_Bill_Dtl
             Set Stk_Cost = (Select Stk_Cost 
                              From  Ias_Bill_Dtl 
                               Where Bill_Ser = Ias_Rt_Bill_Dtl.Bill_S
             Where Exists (Select 1 From Ias_Rt_Bill_Mst
                            Where Ias_Rt_Bill_Mst.Rt_Bill_Ser = Ias_Rt_Bill_Dtl.Rt_Bill_Ser 
          Exception
            Raise_Application_Error(-20005,'Err. When Update Cost In Ias_Rt_Bill_Dtl '||Chr(13)||SqlErrm );
          --## Update  Cost In Ias_Outgoing
          Begin
            Update Ias_Outgoing_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Exists (Select 1 From Ias_Outgoing_Mst
                            Where Ias_Outgoing_Mst.Out_Ser = Ias_Outgoing_Dtl.Out_Ser 
          Exception
            Raise_Application_Error(-20006,'Err. When Update Cost In Ias_Outgoing_Dtl '||Chr(13)||SqlErrm );
          --## Update  Cost In Warehouse Transfer
          Begin 
           Update Ias_Whtrns_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Tr_Inout_Type = 1 
              And  Exists (Select 1 From Ias_Whtrns_Mst
                            Where Ias_Whtrns_Mst.Tr_Ser = Ias_Whtrns_Dtl.Tr_Ser 
          Exception
            Raise_Application_Error(-20007,'Err. When Update Cost In Warehouse Transfer'||Chr(13)||SqlErrm );
          --## Update  Cost In Rec Warehouse Transfer
          Begin 
           Update Ias_Whtrns_Dtl Query_Dtl
             Set Stk_Cost = (Select Stk_Cost
                              From  Ias_Whtrns_Dtl 
                               Where Ias_Whtrns_Dtl.Tr_Inout_Type = 1
             Where Tr_Inout_Type = 2 
              And  Exists (Select 1 From Ias_Whtrns_Mst
                            Where Ias_Whtrns_Mst.Tr_Ser = Query_Dtl.Tr_Ser 
          Exception
            Raise_Application_Error(-20008,'Err. When Update Cost In Rec.Warehouse Transfer'||Chr(13)||SqlErrm );
          --## Update  Cost In Stk_Adjustment_Det
          Begin 
           Update Stk_Adjustment_Det
             Set Wtavg = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Exists (Select 1 From Stk_Adjustment
                            Where Stk_Adjustment.Doc_Ser = Stk_Adjustment_Det.Doc_Ser 
          Exception
            Raise_Application_Error(-20009,'Err. When Update Cost In Stk_Adjustment_Det '||Chr(13)||SqlErrm );
          --## Update Cost In Ias_Pr_Bill_Dtl
          Begin               
           Update Ias_Pr_Bill_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Exists (Select 1 From Ias_Pr_Bill_Mst
                            Where Ias_Pr_Bill_Mst.Rt_Bill_Ser = Ias_Pr_Bill_Dtl.Rt_Bill_Ser 
          Exception
            Raise_Application_Error(-20010,'Err. When Update Cost In Ias_Pr_Bill_Dtl '||Chr(13)||SqlErrm );
          --## Update  Cost In Assemble_Kit_Items_Det
          Begin               
           Update Kit_Items_Detail
             Set I_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Exists (Select 1 From Assemble_Kit_Items
                            Where Assemble_Kit_Items.Doc_Ser = Kit_Items_Detail.Doc_Ser  
          Exception
            Raise_Application_Error(-20011,'Err. When Update Cost In Kit_Items_Detail '||Chr(13)||SqlErrm );
          Begin               
           Update Assemble_Kit_Items_Det
             Set Kit_Cost = (Select Sum(Nvl(I_Qty,0)*Nvl(I_Cost,0))
                              From  Kit_Items_Detail
                               Where Kit_Item_No = Assemble_Kit_Items_Det.Kit_Item_No )
             Where Exists (Select 1 From Assemble_Kit_Items
                            Where Assemble_Kit_Items.Doc_Ser = Assemble_Kit_Items_Det.Doc_Ser  
          Exception
            Raise_Application_Error(-20012,'Err. When Update Cost In Assemble_Kit_Items_Det '||Chr(13)||SqlErrm );
         --## Update  Cost In DisAssemble_Kit_Items_Det
          Begin               
           Update Dis_Kit_Items_Detail
             Set I_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Mst 
                               Where I_Code = Ias_Itm_Mst.I_Code )
             Where Exists (Select 1 From Disassemble_Kit_Items
                            Where Disassemble_Kit_Items.Doc_Ser = Dis_Kit_Items_Detail.Doc_Ser  
          Exception
            Raise_Application_Error(-20013,'Err. When Update Cost In Dis_Kit_Items_Detail '||Chr(13)||SqlErrm );
          Begin               
           Update DisAssemble_Kit_Items_Det
             Set Kit_Cost = (Select Sum(Nvl(I_Qty,0)*Nvl(I_Cost,0))
                              From  Dis_Kit_Items_Detail
                               Where Kit_Item_No = DisAssemble_Kit_Items_Det.Kit_Item_No )
             Where Exists (Select 1 From DisAssemble_Kit_Items
                            Where DisAssemble_Kit_Items.Doc_Ser = DisAssemble_Kit_Items_Det.Doc_Ser  
          Exception
            Raise_Application_Error(-20014,'Err. When Update Cost In DisAssemble_Kit_Items_Det '||Chr(13)||SqlErrm );
          --## Update  Cost In Gr_Detail
          Begin               
           Update Gr_Detail
             Set Wt_Avg_Before = (Select I_Cwtavg 
     From  Ias_Itm_Mst 
                                    Where I_Code = Ias_Itm_Mst.I_Code ),
                 Wt_Avg_After = (Select I_Cwtavg 
                                   From  Ias_Itm_Mst 
                                    Where I_Code = Ias_Itm_Mst.I_Code )                                     
             Where  Gr_Date Between P_F_Date And P_T_Date  ;
          Exception
            Raise_Application_Error(-20015,'Err. When Update Cost In Gr_Detail '||Chr(13)||SqlErrm );
          --## Update Cost In Ias_Itm_code
          Begin
            Update Ias_Itm_Wcode
             Set I_Cwtavg = (Select Distinct Itm_Cost * Ias_Itm_Wcode.P_Size 
                              From  Ias_Itm_Periodic_Cost 
                               Where I_Code = Ias_Itm_Wcode.I_Code 
          Exception
            Raise_Application_Error(-20016,'Err. When Update Cost In Ias_Itm_Wcode '||Chr(13)||SqlErrm );
          --## Update  Cost In Item_Movement
          Begin
            Update Item_Movement
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Wcode
                               Where I_Code = Ias_Itm_Wcode.I_Code
             Where Doc_Type Not In (0,2,5) 
          Exception
            Raise_Application_Error(-20017,'Err. When Update Cost In Item_Movement '||Chr(13)||SqlErrm );
          --## Update  Cost In Ias_Bill_Dtl
          Begin
            Update Ias_Bill_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Wcode
                               Where I_Code = Ias_Itm_Wcode.I_Code
             Where Exists (Select 1 From Ias_Bill_Mst
                            Where Ias_Bill_Mst.Bill_Ser = Ias_Bill_Dtl.Bill_Ser 
          Exception
            Raise_Application_Error(-20018,'Err. When Update Cost In Ias_Bill_Dtl '||Chr(13)||SqlErrm );
          --## Update  Cost In Ias_Rt_Bill_Dtl
          Begin
            Update Ias_Rt_Bill_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Wcode 
                               Where I_Code = Ias_Itm_Wcode.I_Code 
             Where Exists (Select 1 From Ias_Rt_Bill_Mst
                            Where Ias_Rt_Bill_Mst.Rt_Bill_Ser = Ias_Rt_Bill_Dtl.Rt_Bill_Ser 
          Exception
            Raise_Application_Error(-20019,'Err. When Update Cost In Ias_Rt_Bill_Dtl '||Chr(13)||SqlErrm );
          Begin
            Update Ias_Rt_Bill_Dtl
             Set Stk_Cost = (Select Stk_Cost 
                              From  Ias_Bill_Dtl 
                               Where Bill_Ser = Ias_Rt_Bill_Dtl.Bill_Ser
             Where Exists (Select 1 From Ias_Rt_Bill_Mst
                            Where Ias_Rt_Bill_Mst.Rt_Bill_Ser = Ias_Rt_Bill_Dtl.Rt_Bill_Ser 
          Exception
            Raise_Application_Error(-20020,'Err. When Update Cost In Ias_Rt_Bill_Dtl '||Chr(13)||SqlErrm );
          --## Update  Cost In Ias_Outgoing
          Begin
            Update Ias_Outgoing_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Wcode
                               Where I_Code = Ias_Itm_Wcode.I_Code
             Where Exists (Select 1 From Ias_Outgoing_Mst
                            Where Ias_Outgoing_Mst.Out_Ser = Ias_Outgoing_Dtl.Out_Ser 
          Exception
            Raise_Application_Error(-20021,'Err. When Update Cost In Ias_Outgoing_Dtl '||Chr(13)||SqlErrm );
          --## Update  Cost In Warehouse Transfer
          Begin 
           Update Ias_Whtrns_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Wcode  
                               Where I_Code = Ias_Itm_Wcode.I_Code 
             Where Tr_Inout_Type = 1 
              And  Exists (Select 1 From Ias_Whtrns_Mst
                            Where Ias_Whtrns_Mst.Tr_Ser = Ias_Whtrns_Dtl.Tr_Ser 
          Exception
            Raise_Application_Error(-20022,'Err. When Update Cost In Warehouse Transfer'||Chr(13)||SqlErrm );
          --## Update  Cost In Rec Warehouse Transfer
          Begin 
           Update Ias_Whtrns_Dtl Query_Dtl
             Set Stk_Cost = (Select Stk_Cost
                              From  Ias_Whtrns_Dtl 
                               Where Ias_Whtrns_Dtl.Tr_Inout_Type = 1
             Where Tr_Inout_Type = 2 
              And  Exists (Select 1 From Ias_Whtrns_Mst
                            Where Ias_Whtrns_Mst.Tr_Ser = Query_Dtl.Tr_Ser 
          Exception
            Raise_Application_Error(-20023,'Err. When Update Cost In Rec.Warehouse Transfer'||Chr(13)||SqlErrm );
          --## Update  Cost In Ias_Pr_Bill_Dtl
          Begin               
           Update Ias_Pr_Bill_Dtl
             Set Stk_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Wcode
                               Where I_Code = Ias_Itm_Wcode.I_Code
             Where Exists (Select 1 From Ias_Pr_Bill_Mst
                            Where Ias_Pr_Bill_Mst.Rt_Bill_Ser = Ias_Pr_Bill_Dtl.Rt_Bill_Ser 
          Exception
            Raise_Application_Error(-20024,'Err. When Update Cost In Ias_Pr_Bill_Dtl '||Chr(13)||SqlErrm );
          --## Update  Cost In Assemble_Kit_Items_Det
          Begin               
  Update Kit_Items_Detail
             Set I_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Wcode
                               Where I_Code = Ias_Itm_Wcode.I_Code
             Where Exists (Select 1 From Assemble_Kit_Items
                            Where Assemble_Kit_Items.Doc_Ser = Kit_Items_Detail.Doc_Ser  
          Exception
            Raise_Application_Error(-20025,'Err. When Update Cost In Kit_Items_Detail '||Chr(13)||SqlErrm );
          Begin               
           Update Assemble_Kit_Items_Det
             Set Kit_Cost = (Select Sum(Nvl(I_Qty,0)*Nvl(I_Cost,0))
                              From  Kit_Items_Detail
                               Where Kit_Item_No = Assemble_Kit_Items_Det.Kit_Item_No )
             Where Exists (Select 1 From Assemble_Kit_Items
                            Where Assemble_Kit_Items.Doc_Ser = Assemble_Kit_Items_Det.Doc_Ser  
          Exception
            Raise_Application_Error(-20026,'Err. When Update Cost In DisAssemble_Kit_Items_Det '||Chr(13)||SqlErrm );
         --## Update  Cost In DisAssemble_Kit_Items_Det
          Begin               
           Update Dis_Kit_Items_Detail
             Set I_Cost = (Select I_Cwtavg 
                              From  Ias_Itm_Wcode
                               Where I_Code = Ias_Itm_Wcode.I_Code
             Where Exists (Select 1 From Disassemble_Kit_Items
                            Where Disassemble_Kit_Items.Doc_Ser = Dis_Kit_Items_Detail.Doc_Ser  
          Exception
            Raise_Application_Error(-20027,'Err. When Update Cost In Kit_Items_Detail '||Chr(13)||SqlErrm );
          Begin               
           Update DisAssemble_Kit_Items_Det
             Set Kit_Cost = (Select Sum(Nvl(I_Qty,0)*Nvl(I_Cost,0))
                              From  Dis_Kit_Items_Detail
                               Where Kit_Item_No = DisAssemble_Kit_Items_Det.Kit_Item_No )
             Where Exists (Select 1 From DisAssemble_Kit_Items
                            Where DisAssemble_Kit_Items.Doc_Ser = DisAssemble_Kit_Items_Det.Doc_Ser  
          Exception
            Raise_Application_Error(-20028,'Err. When Update Cost In DisAssemble_Kit_Items_Det '||Chr(13)||SqlErrm );
          --## Update  Cost In Gr_Detail
          Begin               
           Update Gr_Detail
             Set Wt_Avg_Before = (Select I_Cwtavg 
                                   From  Ias_Itm_Wcode
                                    Where I_Code = Ias_Itm_Wcode.I_Code
                 Wt_Avg_After = (Select I_Cwtavg 
                                   From  Ias_Itm_Wcode
                                    Where I_Code = Ias_Itm_Wcode.I_Code
             Where  Gr_Date Between P_F_Date And P_T_Date  ;
          Exception
            Raise_Application_Error(-20029,'Err. When Update Cost In Ias_Pr_Bill_Dtl '||Chr(13)||SqlErrm );
 Procedure Create_Inv_G_Code_Journal ( P_F_Date        In Date             ,
 Begin
      Cursor C_Data Is Select Ias_Itm_Mst.G_Code  G_Code  ,
                           From Ias_Bill_Mst , Ias_Bill_Dtl , Ias_Itm_Mst
                            Where Ias_Bill_Mst.Bill_Ser =  Ias_Bill_Dtl.Bill_Ser
                           Group By Ias_Itm_Mst.G_Code,Ias_Bill_Dtl.Cc_Code,Ias_Bill_Mst.Pj_No ;
    Begin
          Begin
            Select Nvl(Max(Doc_No),0)
             From Ias_Post_Mst
              Where Doc_Type = 150  ;
          Exception
             Begin
             Exception
                 Raise_Application_Error(-20002,'Err. When Insert Into Ias_Post_Mst'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20003,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20004,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
      Cursor C_Data Is Select Ias_Itm_Mst.G_Code  G_Code  ,
                           From Ias_RT_Bill_Mst , Ias_Rt_Bill_Dtl , Ias_Itm_Mst
                            Where Ias_Rt_Bill_Mst.Rt_Bill_Ser =  Ias_Rt_Bill_Dtl.Rt_Bill_Ser
                           Group By Ias_Itm_Mst.G_Code,Ias_Rt_Bill_Dtl.Cc_Code,Ias_Rt_Bill_Mst.Pj_No ;
    Begin
          Begin
            Select Nvl(Max(Doc_No),0)
             From Ias_Post_Mst
              Where Doc_Type = 150  ;
          Exception
             Begin
             Exception
                 Raise_Application_Error(-20006,'Err. When Insert Into Ias_Post_Mst'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20007,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20008,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
      Cursor C_Data Is Select Ias_Itm_Mst.G_Code         G_Code     ,
                           From Ias_Outgoing_Mst , Ias_Outgoing_Dtl , Ias_Itm_Mst
                            Where Ias_Outgoing_Mst.Out_Ser =  Ias_Outgoing_Dtl.Out_Ser
                           Group By Ias_Itm_Mst.G_Code         ,
    Begin
          Begin
            Select Nvl(Max(Doc_No),0)
             From Ias_Post_Mst
              Where Doc_Type = 150  ;
          Exception
             Begin
             Exception
                 Raise_Application_Error(-20010,'Err. When Insert Into Ias_Post_Mst'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20011,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20012,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
      Cursor C_Data Is Select Ias_Itm_Mst.G_Code         G_Code      ,  
                           From Stk_Adjustment , Stk_Adjustment_Det , Ias_Itm_Mst
                            Where Stk_Adjustment.Doc_Ser =  Stk_Adjustment_Det.Doc_Ser
                           Group By Ias_Itm_Mst.G_Code         ,
    Begin
          Begin
            Select Nvl(Max(Doc_No),0)
             From Ias_Post_Mst
              Where Doc_Type = 150  ;
          Exception
             Begin
             Exception
                 Raise_Application_Error(-20014,'Err. When Insert Into Ias_Post_Mst'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20015,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20016,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
      Cursor C_Data Is Select Ias_Itm_Mst.G_Code         G_Code      ,  
                           From Stk_Adjustment , Stk_Adjustment_Det , Ias_Itm_Mst
                            Where Stk_Adjustment.Doc_Ser =  Stk_Adjustment_Det.Doc_Ser
                           Group By Ias_Itm_Mst.G_Code         ,
    Begin
          Begin
            Select Nvl(Max(Doc_No),0)
             From Ias_Post_Mst
              Where Doc_Type = 150  ;
          Exception
             Begin
             Exception
                 Raise_Application_Error(-20018,'Err. When Insert Into Ias_Post_Mst'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20019,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20020,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
      Cursor C_Data Is Select Ias_Itm_Mst.G_Code             G_Code      ,  
                           From Assemble_Kit_Items , Assemble_Kit_Items_Det , Ias_Itm_Mst
                            Where Assemble_Kit_Items.Doc_Ser =   Assemble_Kit_Items_Det.Doc_Ser
                           Group By Ias_Itm_Mst.G_Code             ,
      Cursor C_Kit_Data Is Select Ias_Itm_Mst.G_Code             G_Code      ,  
                             From Assemble_Kit_Items , Kit_Items_Detail , Ias_Itm_Mst
                              Where Assemble_Kit_Items.Doc_Ser =   Kit_Items_Detail.Doc_Ser
                             Group By Ias_Itm_Mst.G_Code             ,
    Begin
          Begin
            Select Nvl(Max(Doc_No),0)
             From Ias_Post_Mst
              Where Doc_Type = 150  ;
          Exception
             Begin
             Exception
                 Raise_Application_Error(-20022,'Err. When Insert Into Ias_Post_Mst'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20023,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20024,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
      Cursor C_Data Is Select Ias_Itm_Mst.G_Code                G_Code      ,  
                           From DisAssemble_Kit_Items , DisAssemble_Kit_Items_Det , Ias_Itm_Mst
                            Where DisAssemble_Kit_Items.Doc_Ser =   DisAssemble_Kit_Items_Det.Doc_Ser
                           Group By Ias_Itm_Mst.G_Code             ,
      Cursor C_Kit_Data Is Select Ias_Itm_Mst.G_Code             G_Code      ,  
                             From DisAssemble_Kit_Items , Dis_Kit_Items_Detail , Ias_Itm_Mst
                              Where DisAssemble_Kit_Items.Doc_Ser =  Dis_Kit_Items_Detail.Doc_Ser
                             Group By Ias_Itm_Mst.G_Code             ,
    Begin
          Begin
            Select Nvl(Max(Doc_No),0)
             From Ias_Post_Mst
              Where Doc_Type = 150  ;
          Exception
             Begin
             Exception
                 Raise_Application_Error(-20026,'Err. When Insert Into Ias_Post_Mst'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20027,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
             Begin
             Exception
                 Raise_Application_Error(-20028,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
      Cursor C_Data Is Select A_Code,A_Cy,Doc_Date,Cr_Amt,Cr_Amt_F,G_Code,Cc_Code,Pj_No 
                        From Ias_Post_Dtl
                         Where Doc_Type = 150 
     Begin
          Begin
            Select Nvl(Max(Doc_No),0)
             From Ias_Post_Mst
              Where Doc_Type = 150 
          Exception
             Begin
             Exception
                 Raise_Application_Error(-20030,'Err. When Insert Into Ias_Post_Mst'||Chr(13)||SqlErrm );
                    Begin
                    Exception
                        Raise_Application_Error(-20031,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlErrm );
                    Begin
                     Select Purchase_A_Code
                      From Ias_Conn_Acc_Inv_By_Gl
                       Where POST_Code = I_Data.G_Code ;
                    Exception
                    Begin
                    Exception
                        Raise_Application_Error(-200132,'Err. When Insert Into Ias_Post_Dtl'||Chr(13)||SqlE
     --## Update Posting Flag = 1 
     Begin
       Update Ias_Whtrns_Mst
        Where Tr_Inout_Type = 1  
     Exception
        Raise_Application_Error(-20033,'Err. When Update Warehouse Transfer'||Chr(13)||SqlErrm );
     Begin
       Update Ias_Whtrns_Mst
        Where Tr_Inout_Type = 2  
     Exception
        Raise_Application_Error(-20034,'Err. When Update Rec.Warehouse Transfer'||Chr(13)||SqlErrm );
     Begin
       Update Stk_Adjustment
        Where Doc_Date Between P_F_Date And P_T_Date ;
     Exception
        Raise_Application_Error(-20035,'Err. When Update Stk_Adjustment'||Chr(13)||SqlErrm );
     Begin
       Update Assemble_Kit_Items
        Where DOc_Date Between P_F_Date And P_T_Date ;
     Exception
        Raise_Application_Error(-20036,'Err. When Update Assemble_Kit_Items'||Chr(13)||SqlErrm );
     Begin
       Update Disassemble_Kit_Items
        Where DOc_Date Between P_F_Date And P_T_Date ;
     Exception
        Raise_Application_Error(-20037,'Err. When Update Disassemble_Kit_Items'||Chr(13)||SqlErrm );
        Begin
          Update Master_Out_Bills
           Where Out_Date Between P_F_Date And P_T_Date ;
        Exception
           Raise_Application_Error(-20038,'Err. When Update Master_Out_Bills'||Chr(13)||SqlErrm );
        Begin
          Update Ias_Ret_Bill_Mst
           Where Ret_Date Between P_F_Date And P_T_Date ;
        Exception
           Raise_Application_Error(-20039,'Err. When Update Ias_Ret_Bill_Mst'||Chr(13)||SqlErrm );
 Procedure Unclose_Inv ( P_Prd_No        In Number           ,
 Begin
   Begin
     Delete From Ias_Post_Dtl
       Where Doc_Type = 150
   Exception
        Raise_Application_Error(-20001,'Err. When Delete From Ias_Post_Dtl'||Chr(13)||SqlErrm );
   Begin
     Delete From Ias_Post_Mst
       Where Doc_Type = 150
   Exception
        Raise_Application_Error(-20002,'Err. When Delete From Ias_Post_Mst'||Chr(13)||SqlErrm );
   Begin
     Delete From Ias_Itm_Periodic_Cost
       Where Prd_No = P_Prd_No ;
   Exception
        Raise_Application_Error(-20003,'Err. When Delete From Ias_Itm_Periodic_Cost'||Chr(13)||SqlErrm );
   Begin
     Update S_PRD_BRN_CLS
      Where F_Date  = P_F_Date 
   Exception
        Raise_Application_Error(-20004,'Err. When Update Detail_Period'||Chr(13)||SqlErrm );
CREATE OR REPLACE PACKAGE Ias_Attach_Itm_Pkg AS
 FUNCTION Get_Attach_Name(P_Attch_No In Numbe
 FUNCTION Get_Attach_Icode_AvlQty ( P_Icode   In   Ias_Itm_Mst.I_CODE%TYPE,
 PROCEDURE Get_Attach_Icode_Out ( P_Icode   In   Ias_Itm_Mst.I_CODE%TYPE,                                                                    
  FUNCTION Get_Attach_avlqty ( P_Icode          In   Ias_Itm_Mst.I_Code%Type,
FUNCTION Ias_Get_Icode_Attch_Rsrv_Qty ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
CREATE OR REPLACE PACKAGE BODY Ias_Attach_Itm_Pkg AS
 FUNCTION Get_Attach_Name(P_Attch_No In Number, P_Attch_Desc_No Number,P_Lang_No Number default 1) return VARCHAR2 Is
 Begin
     select Decode(P_Lang_No,1,Nvl(ATTCH_DESC_A_NAME,ATTCH_DESC_E_NAME),Nvl(ATTCH_DESC_E_NAME,ATTCH_DESC_A_NAME)) ATTCH_NAME 
       From IAS_ATTACH_DTL
      where attch_no=p_attch_no
 Exception 
 FUNCTION Get_Attach_Icode_AvlQty ( P_Icode   In   Ias_Itm_Mst.I_CODE%TYPE,
BEGIN       
     Select nvl(Sum(in_out*(nvl(p_qty,0)+nvl(pf_Qty,0)) ),0) /nvl( p_Psize,1)
       From Ias_Itm_Attach_Movement
      Where I_Code = P_Icode
EXCEPTION
 PROCEDURE Get_Attach_Icode_Out ( P_Icode        In Ias_Itm_Mst.I_CODE%TYPE,                                                                    
BEGIN       
     Select nvl(Sum(nvl(i_qty,0)),0),nvl(Sum(nvl(free_qty,0)),0)  
       From Ias_Itm_Attach_Movement
      Where Doc_Type_Ref = P_Doc_Type_Ref        
      Select nvl(Sum(nvl(i_qty,0)),0),nvl(Sum(nvl(free_qty,0)),0)  
       From Ias_Itm_Attach_Othrs
      Where Doc_Type_Ref = P_Doc_Type_Ref        
EXCEPTION   
FUNCTION Get_Attach_avlqty ( P_Icode          In   Ias_Itm_Mst.I_Code%Type,                                                                    
  Select (nvl(sum(in_out*(nvl(p_qty,0)+nvl(pf_qty,0)) ),0) /P_psize) InTo Avlqty
   From ias_itm_attach_movement
  where I_Code = P_Icode
 Exception When Others Then
FUNCTION Ias_Get_Icode_Attch_Rsrv_Qty ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
Begin   
      Select Nvl(Sum(Nvl(CP_Qty,0)),0) /Nvl( p_Psize,1)
        From Ias_Itm_Attach_Othrs
         Where I_Code             = P_Icode
     Select Nvl(Sum(Nvl(CP_Qty,0)),0) /Nvl( p_Psize,1)
        From Ias_Itm_Attach_Othrs
         Where I_Code             = P_Icode
  Exception
Create Or Replace Package Ias_Itm_Barcode_Pkg   Is
Procedure Insrt_Itm_Barcode_Serialno_Prc (P_Apprvd_Bracode_Same_Serialno  In Number                               ,
Create Or Replace Package Body Ias_Itm_Barcode_Pkg Is
Procedure Insrt_Itm_Barcode_Serialno_Prc (P_Apprvd_Bracode_Same_Serialno  In Number                               ,
 Begin
         Begin
           Select 1 Into V_Cnt
            From Ias_Itm_Unt_Barcode 
              Where I_Code   = P_I_Code
         Exception 
         End;   
            --## Insert Into Ias_Itm_Unt_Barcode
            Begin
              Insert Into Ias_Itm_Unt_Barcode(I_Code      ,
            Exception
CREATE OR REPLACE Package IAS_Itm_Pkg as
 PROCEDURE Get_Itm_Name ( P_Lng_no In Number,P_icode  In Ias_Itm_Mst.I_CODE%TYPE,P_i_name Out varchar2,P_idesc Out varchar2) ;
 FUNCTION  Get_Itm_Name (p_i_code  In Ias_Itm_Mst.I_CODE%TYPE, P_Lng_no In Number)  RETURN VARCHAR2 ;
 PROCEDURE Get_Itm_Info (  P_Lng_no   In  Number,
 FUNCTION Get_Grand_Avlqty(P_icode In Ias_Itm_Mst.I_CODE%TYPE,
 FUNCTION Get_Grand_Wtavg(P_Wtavg_Type In NUMBER,
 FUNCTION Check_Srv_Itm(P_icode    In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER;
 FUNCTION Check_Kit_Itm(P_icode    In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER;
FUNCTION Check_NoSale_Itm(P_Icode   In Ias_Itm_Dtl.I_CODE%TYPE ,
 FUNCTION Chec
 PROCEDURE Get_I_Code( P_Barcode In IAS_ITM_UNT_BARCODE.BARCODE%TYPE ,P_I_Code IN OUT Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt IN OUT Ias_Itm_Dtl.Itm_Unt%Type) ;
 FUNCTION Get_Last_Incom_Date(P_I_code Ias_Itm_Mst.I_CODE%TYPE, P_W_code In Warehouse_Details.W_CODE%TYPE Default Null ) Return DATE;
 PROCEDURE Get_Itm_Vndr_Price ( P_I_code   In  Ias_Itm_Mst.I_CODE%TYPE ,
 Function Fetch_Itm_Nm_Price_Order (P_I_Code In Ias_Itm_Mst.I_Code%Type )Return Varchar2 ;
 Function Fetch_Itm_Doc_Price_Order (P_Doc_Type In Number  ,
FUNCTION Get_MaxGrand_Size ( P_icode   In Ias_Itm_Mst.I_CODE%TYPE) return NUMBER;          
Function Get_Itm_Activity (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Number ;
PROCEDURE Get_Itm_Activity_Wcode_Info (P_W_Code       In  Warehouse_Details.W_Code%Type       ,
  Function Get_Itm_Min_Qty( P_I_Code In Ias_Itm_Mst.I_Code%Type      ,
  Function Get_Icode_One_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Itm_Unt%Type ;                                                                   
  Function Get_Icode_Unit_By_Lvl (P_I_Code  In Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type) Return Ias_Itm_Dtl.Itm_Unt%Type;
  Function Chk_Icode_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type    ,
  Function Get_Icode_Min_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;
  Function Get_Icode_Purch_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type;
  Function Get_Icode_Sales_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type;                         
  Function Get_Icode_Price_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;
  Function Get_Icode_Man_Inv_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;  
  Function Get_Icode_Vndr (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Mst.I_Code%Type;                                                
  Function Get_Icode_Size_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type) Return Number; 
 Function Get_Icode_Rol (P_Rol_Type NUMBER,
  Procedure Get_Icode_Qty_Lmt (P_Rol_Type  In Number,
  Function Get_Max_Lvl_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Lvl_Unit%Type;    
  Function Get_Icode_Unt  (P_I_Code In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Varchar2 ;
  Function Get_Icode_Size (P_I_Code In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Number   ;                             
  Function Get_Itm_Unt_Lvl ( P_I_Code In  Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type  ) Return Varchar2 ; 
Function Get_Itm_Price (  P_Price_Type In Ias_Para_Inv.Price_Type%Type   ,
  Procedure Get_Itm_Wght_Data (  P_Itm_Barcode           In  Ias_Itm_Dtl.Barcode%Type ,                                                                                                                                      
Procedure Get_Itm_QR_Code_Data (  P_QR_Code_Itm              In  Varchar2 ,                                                                                                                                      
Procedure Get_Srch_Itm_Crtria (   P_Srch_Itm_Crtria              In  Number ,
 Function Get_Unit_Lvl ( P_I_Code  In Ias_Itm_Mst.I_Code%Type,
Procedure Get_Itm_Wght_Data ( P_Itm_Barcode               In  Ias_Itm_Dtl.Barcode%Type ,                                                                                                                                      
Function Chk_Altrntv_Grp_Qty_Lmt (P_Rol_Type  In Number,-- 1- Max -2- Min
Function Get_GTIN_Code (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Varchar2;
Function Get_HSN_Code (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Varchar2 ;
Function Get_Itm_Code_By_Barcode (P_Barcode   In Ias_Itm_Dtl.Barcode%Type , P_Use_One_Barcode_For_Itm In Ias_Para_Inv.Use_One_Barcode_For_Itm%Type) Return Varchar2 ;
Function Get_Itm_Code_By_Vndr_I_Code (P_Vndr_I_Code   In Ias_Itm_Mst.Vndr_I_Code%Type ) Return Varchar2 ;
Function Get_Glbl_Msure_Code (P_Measure_Code In Measurement.Measure_Code%Type ) Return Varchar2 ;
Function GET_ICODE_BY_VNDR_ICODE (P_Vndr_I_Code In Ias_Itm_Mst.Vndr_I_Code%Type,P_V_Code In V_DETAILS.V_Code%Type ) Return Ias_Itm_Mst.Vndr_I_Code%Type;   
Function GET_VNDR_ICODE (P_I_Code In Ias_Itm_Mst.I_Code%Type,P_V_Code In V_DETAILS.V_Code%Type ) Return Ias_Itm_Mst.I_Code%Type;  
CREATE OR REPLACE Package Body IAS_Itm_Pkg as
PROCEDURE Get_Itm_Name (P_Lng_no In Number,P_icode  In Ias_Itm_Mst.I_CODE%TYPE,P_i_name Out varchar2,P_idesc Out varchar2) IS
   Select Decode(P_lng_no,1,nvl(I_name,I_e_name),nvl(I_e_name,I_name)),i_desc
     From Ias_Itm_Mst
    Where i_code=P_icode
 Exception 
FUNCTION  Get_Itm_Name (p_i_code  In Ias_
   Select Decode(P_lng_no,1,I_name,nvl(I_e_name,I_name))
     From Ias_Itm_Mst
    Where i_code=p_i_code
 Exception 
PROCEDURE Get_Itm_Info ( P_Lng_no   In  Number,
   Select Decode(P_lng_no,1,nvl(I_name,I_e_name),nvl(I_e_name,I_name)),i_desc,
     From Ias_Itm_Mst
    Where i_code=P_icode;
 Exception 
FUNCTION Get_Grand_Avlqty( P_Icode In Ias_Itm_Mst.I_CODE%TYPE,
    Select Sum(avlq) 
      From ( Select sum(distinct Avl_qty) avlq,w_code  
               From Ias_Itm_Wcode
              Where Ias_Itm_Wcode.I_Code  = P_Icode
              group by  w_code  );
    Select Sum(distinct  Avl_qty) 
      Into avlq  From Ias_Itm_Wcode
     where Ias_Itm_Wcode.I_Code  = P_Icode
Exception
 FUNCTION Get_Grand_Wtavg( P_Wtavg_Type In NUMBER,
 Begin
           Begin
              Select Nvl(I_cwtavg,0)
                From Ias_Itm_Mst 
               Where I_code=P_Icode
           Exception
               Begin  
                  Select Nvl(I_Cwtavg,0) 
                    From Ias_Itm_Wcode 
                   Where I_code  = P_Icode
               Exception 
                  Begin                                       
                    Select Nvl(Primary_Cost,0) 
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                  Exception 
                Begin                                       
                    Select Max
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                Exception 
                   Begin                                       
                    Select Max(Nvl(Primary_Cost,0)) 
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                   Exception 
                Begin
                   Select Nvl(Primary_Cost,0)
                    From Ias_Itm_Mst 
                   Where I_code=P_Icode
                Exception 
                End; 
 Exception
 FUNCTION Get_Grand_Wtavg( P_Wtavg_Type In NUMBER,
 Begin
           Begin
              Select Nvl(I_cwtavg,0)
                From Ias_Itm_Mst 
               Where I_code=P_Icode
           Exception
               Begin  
                  Select Nvl(I_Cwtavg,0) 
                    From Ias_Itm_Wcode 
                   Where I_code  = P_Icode
               Exception 
                Begin                                       
                    Select Max(Nvl(I_Cwtavg,0)) 
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                Exception 
 Exception
FUNCTION Check_Srv_Itm(P_icode In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER Is
 Select 1 
   From Ias_Itm_Mst
  where i_code  = P_icode
 Exception 
FUNCTION Check_Kit_Itm(P_icode In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER Is
 Select 1 
   From Ias_Itm_Mst
  where i_code  = P_icode
 Exception 
FUNCTION Check_NoSale_Itm(P_Icode   In Ias_Itm_Dtl.I_CODE%TYPE ,
 Select 1 
   From Ias_Itm_Dtl
  where I_Code  = P_Icode
 Exception 
FUNCTION Check_Store_Itm(P_Icode  In Ias_Itm_Mst.I_Code%Type) Return NUMBER Is
 Select 1 
   From Item_Movement
  where I_Code  = P_Icode
 Exception 
FUNCTION  Check_Itm_Wcode_Inactv (P_I_code In Ias_Itm_Mst.I_CODE%TYPE,P_w_code In Warehouse_details.W_CODE%TYPE) RETURN NUMBER Is
  Select nvl(Inactive,0)
    From Ias_Itm_wcode
   Where i_code = P_i_code
 Exception When Others Then
PROCEDURE Get_I_Code( P_Barcode In IAS_ITM_UNT_BARCODE.BARCODE%TYPE ,P_I_Code IN OUT Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt IN OUT Ias_Itm_Dtl.Itm_Unt%Type) Is
   Select I_Code, Itm_Unt
    From Ias_Itm_Unt_Barcode
      Where Barcode = P_Barcode;
Exception
   Begin
         Select I_Code, Itm_Unt
         From Ias_Itm_Dtl
          Where Barcode = P_Barcode;
   Exception
   End;
FUNCTION Get_Last_Incom_Date(P_I_code Ias_Itm_Mst.I_CODE%TYPE, P_W_code In Warehouse_Details.W_CODE%TYPE Default Null ) 
Select Max(Gr_Date) Into v_date 
 From Gr_Detail
 Where i_code = P_I_code
Exception 
PROCEDURE Get_Itm_Vndr_Price ( P_I_code   In  Ias_Itm_Mst.I_CODE%TYPE ,
  Begin
          Begin
            Select Nvl(Vndr_Price,0),A_Cy
              From Ias_V_Vndr_Itm
             Where I_Code  = P_I_Code
          Exception
          End;
            Begin
                Select Nvl(Vndr_Price,0),A_Cy
                      From Ias_V_Vndr_Itm
                      Where I_Code  = P_I_Code
          Begin
                Select Nvl(Vndr_Price,0),A_Cy
                  From Ias_V_Vndr_Itm
                Where I_Code  = P_I_Code
          Exception
          End;
  Exception
Function Fetch_Itm_Nm_Price_Order (P_I_Code In Ias_Itm_Mst.I_Code%Type )Return Varchar2 Is 
 Begin
   Select Decode(1,1,Nvl(I_Name,I_E_Name),Nvl(I_E_Name,I_Name)) I_Name 
    From Ias_Itm_Mst
     Where I_Code = P_I_Code ;
 Exception
Function Fetch_Itm_Doc_Price_Order (P_Doc_Type In Number  ,
 Begin
         Select Rcrd_No
          From Ias_Pi_Bill_Dtl
           Where Bill_Ser = P_Doc_Ser 
         Select Rcrd_No
          From Gr_Detail
           Where G_Ser    = P_Doc_Ser 
 Exception
FUNCTION Get_MaxGrand_Size ( P_icode  In Ias_Itm_Mst.I_CODE%TYPE) return NUMBER is
 select max(P_Size) into v_gsize  From Ias_Itm_Dtl where I_Code= P_Icode ;
exception when  others then
Function Get_Itm_Activity (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Number Is
 Begin
    Select Activity_No
    From Ias_Itm_Mst 
     Where I_Code = P_I_Code ;
 Exception
PROCEDURE Get_Itm_Activity_Wcode_Info (P_W_Code       In  Warehouse_Details.W_Code%Type       ,
 Begin                                      
    Select Cc_Code ,
   From   Ias_Conn_Wcode_By_Activity
    Where W_Code      = P_W_Code 
 Exception
Function Get_Itm_Min_Qty( P_I_Code In Ias_Itm_Mst.I_Code%Type      ,
    Begin  select Roi_Type into v_rol_type from ias_para_inv;
    exception when others then
    end;
         Select Nvl(I_Min_Qty,0)
           From Ias_Itm_Qty_Lmt
          Where I_Code   = P_I_Code
         Select  Nvl(I_Min_Qty,0)
          From Ias_Itm_Qty_Lmt
           Where I_Code = P_I_Code
         Select  Nvl(I_Min_Qty,0)
          From Ias_Itm_Qty_Lmt
           Where I_Code = P_I_Code
Exception
Function Get_Icode_One_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code  = P_I_Code;
 Exception
Function Get_Icode_Unit_By_Lvl (P_I_Code  In Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Select Itm_Unt Into V_Itm_Unt
       From Ias_Itm_Dtl
      Where Ias_Itm_Dtl.I_Code  = P_I_Code
 Exception
Function C
 Begin
 Begin
     Select Inactive Into V_Inactv
       From Ias_Itm_Dtl
      Where Ias_Itm_Dtl.I_Code  = P_I_Code 
 Exception
Function Get_Icode_Min_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
      Begin
     Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code           = P_I_Code
      Exception
           Begin
     Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code        = P_I_Code
           Exception
Function Get_Icode_Sales_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code
     Exception When Others Then
     End;           
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
 Exception
Function Get_Icode_Purch_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
     End;           
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
 Exception
Function Get_Icode_Price_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
     End;           
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
 Exception
Function Get_Icode_Man_Inv_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
     End;           
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
 Exception
 Function Get_Icode_Vndr (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Mst.I_Code%Type Is
 Begin
         Select I_Code Into V_I_Code
           From Ias_Itm_Mst
          Where Ias_Itm_Mst.Vndr_I_Code = P_I_Code;
 Exception
Function Get_Icode_Size_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type) Return Number Is
 Begin
     Select P_Size Into V_Psize
      From Ias_Itm_Dtl
       Where I_Code        = P_I_Code
 Exception
Function Get_Icode_Rol (P_Rol_Type Number,P_I_Code  In Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type default null,P_w_code In Warehouse_Details.W_Code%Type default null,P_brn_no In s_brn.brn_no%Type default null) Return Number Is
 Begin
         Select I_Rol Into V_Irol
          From Ias_Itm_Qty_Lmt
           Where I_Code        = P_I_Code
         Select I_Rol Into V_Irol
          From Ias_Itm_Qty_Lmt
           Where I_Code        = P_I_Code
         Select I_Rol Into V_Irol
          From Ias_Itm_Qty_Lmt
           Where I_Code        = P_I_Code
 Exception
Procedure Get_Icode_Qty_Lmt (P_Rol_Type  In Number,
 Begin
        Select I_Rol,
          From Ias_Itm_Qty_Lmt
           Where I_Code        = P_I_Code
        Select I_Rol,
          From Ias_Itm_Qty_Lmt
           Where I_Code        = P_I_Code
        Select I_Rol,
          From Ias_Itm_Qty_Lmt
           Where I_Code        = P_I_Code
 Exception
Function Get_Max_Lvl_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Lvl_Unit%Type Is
     Select Max(Lvl_Unit) Into V_Lvl_Unit
      From Ias_Itm_Dtl
       Where I_Code= P_I_Code;
 Exception
Function Get_Icode_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Varchar2  Is
             Select Itm_Unt  Into  V_Itm_Unt 
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
             Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
             Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
           Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code 
                  And Lvl_Unit = ( Select Max(Lvl_Unit) 
                                    From Ias_Itm_Dtl
                                    Where I_Code= P_I_Code);
            Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code
 Exception
    Begin
      Select Itm_Unt  Into  V_Itm_Unt 
      From Ias_Itm_Dtl
      Where I_Code= P_I_Code
    Exception
    End;   
 Function Get_Icode_Size (P_I_Code    In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Number  Is
             Select P_Size  Into  V_Itm_Size 
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
             Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
             Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
           Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code 
                  And Lvl_Unit = ( Select Max(Lvl_Unit) 
                                    From Ias_Itm_Dtl
                                    Where I_Code= P_I_Code);
            Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code
 Exception
    Begin
      Select P_Size  Into  V_Itm_Size 
      From Ias_Itm_Dtl
      Where I_Code= P_I_Code
    Exception
    End;   
 Function Get_Itm_Unt_Lvl ( P_I_Code    In  Ias_Itm_Mst.I_Code%Type    ,
 Begin                                      
    Select Itm_Unt
    From   Ias_Itm_Dtl 
     Where I_Code     = P_I_Code 
 Exception
Function Get_Itm_Price (  P_Price_Type In Ias_Para_Inv.Price_Type%Type   ,
  Begin
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code  = P_Itm_Code
            Exception
            End;
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code  = P_Itm_Code
            Exception
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code    = P_Itm_Code
            Exception
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code    = P_Itm_Code
            Exception
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code    = P_Itm_Code
            Exception
  Exception
Procedure Get_Itm_Wght_Data ( P_Itm_Barcode           In  Ias_Itm_Dtl.Barcode%Type ,                                                                                                                                      
  Begin
                -- Remove_Weight_Digit    1- From Right 2- From Left                   
                 Begin 
                      Select Itm_Unt Into P_Itm_Unt
                        From Ias_Itm_Dtl 
                       Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                 Exception When Others Then
                      Select Itm_Unt Into P_Itm_Unt
                        From Ias_Itm_Dtl 
                       Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                 End;
                -- Remove_Weight_Digit    1- From Right 2- From Left                               
Procedure Get_Itm_QR_Code_Data (  P_QR_Code_Itm              In  Varchar2 ,                                                                                                                                      
  Begin
Procedure Get_Srch_Itm_Crtria (   P_Srch_Itm_Crtria              In  Number ,
  Begin
         Begin
             Select Lvl_Unit Into V_Lvl_Unit
              Where Ias_Itm_Dtl.I_Code  = P_I_Code
         Exception
Procedure Get_Itm_Wght_Data ( P_Itm_Barcode           In  Ias_Itm_Dtl.Barcode%Type ,                                                                                                                                      
  Begin
            Begin
              Select 1 into V_Cnt
               From Ias_Itm_mst
               where I_Code=P_Itm_Code
            Exception               
            End;
            Begin
              Select Wght_Val_Itm into V_Wght_Val_Itm
               From Ias_Itm_mst
               where I_Code=P_Itm_Code
            Exception When Others Then
            End;
                    -- Remove_Weight_Digit    1- From Right 2- From Left                               
                     Begin 
                          Select Itm_Unt Into P_Itm_Unt
                            From Ias_Itm_Dtl 
   Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                     Exception When Others Then
                          Select Itm_Unt Into P_Itm_Unt
                            From Ias_Itm_Dtl 
                           Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                     End;
                    -- Remove_Weight_Digit    1- From Right 2- From Left                               
                    -- Remove_Weight_Digit    1- From Right 2- From Left                               
                     Begin 
                          Select Itm_Unt Into P_Itm_Unt
                            From Ias_Itm_Dtl 
                           Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                     Exception When Others Then
                          Select Itm_Unt Into P_Itm_Unt
                            From Ias_Itm_Dtl 
                           Where I_Code =Substr(P_Itm_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                     End;
                    -- Remove_Weight_Digit    1- From Right 2- From Left                               
Function Chk_Altrntv_Grp_Qty_Lmt (P_Rol_Type  In Number,-- 1- Max -2- Min
  Begin
    Select Nvl(Sum(Nvl(Avl_Qty,0)),0) Into  V_Grp_Avl_Qty
    From Ias_Itm_Mst,Ias_Itm_Wcode 
    Where Ias_Itm_Mst.I_Code=Ias_Itm_Wcode.I_Code
    Exception 
  End;  
   Begin
    Select  Max_Lmt_Qty Into V_Max_Qty
     From Ias_Alternative_Group
     Where Group_No=P_Grp_No
   Exception
   End;
   Begin 
    Select  Min_Lmt_Qty Into V_Min_Qty
     From Ias_Alternative_Group
     Where Group_No=P_Grp_No
   Exception
   End; 
Exception
Function Get_GTIN_Code (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Varchar2 Is
 Begin
    Select GTIN_Code
    From Ias_Itm_Mst 
     Where I_Code = P_I_Code ;
 Exception
Function Get_HSN_Code (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Varchar2 Is
 Begin
    Select HSN_CODE
    From Ias_Itm_Mst 
     Where I_Code = P_I_Code ;
 Exception
Function Get_Itm_Code_By_Barcode (P_Barcode   In Ias_Itm_Dtl.Barcode%Type , P_Use_One_Barcode_For_Itm In Ias_Para_Inv.Use_One_Barcode_For_Itm%Type) Return Varchar2 Is
 Begin
        Select I_Code 
        From Ias_Itm_Dtl 
         Where Barcode = P_Barcode 
        Select I_Code 
        From Ias_Itm_Unt_Barcode 
         Where Barcode = P_Barcode 
 Exception
Function Get_Itm_Code_By_Vndr_I_Code (P_Vndr_I_Code   In Ias_Itm_Mst.Vndr_I_Code%Type ) Return Varchar2 Is
 Begin
    Select I_Code
    From Ias_Itm_Mst 
     Where Vndr_I_Code = P_Vndr_I_Code ;
 Exception
Function Get_Glbl_Msure_Code (P_Measure_Code In Measurement.Measure_Code%Type ) Return Varchar2 Is
 Begin
    Select Measure_Code_
    From Measurement 
     Where Measure_Code = P_Measure_Code ;
 Exception
Function GET_ICODE_BY_VNDR_ICODE (P_Vndr_I_Code In Ias_Itm_Mst.Vndr_I_Code%Type,P_V_Code In V_DETAILS.V_Code%Type ) Return Ias_Itm_Mst.Vndr_I_Code%Type Is
 Begin
    Begin 
        Select I_Code
        From Ias_Vndr_Itm
        Where I_Code_Vndr = P_Vndr_I_Code
   Exception 
   End;
         Select I_Code Into V_I_Code
           From Ias_Itm_Mst
          Where Ias_Itm_Mst.Vndr_I_Code = P_Vndr_I_Code
 Exception
 Function GET_VNDR_ICODE (P_I_Code In Ias_Itm_Mst.I_Code%Type,P_V_Code In V_DETAILS.V_Code%Type ) Return Ias_Itm_Mst.I_Code%Type Is
 Begin
    Begin 
        Select I_CODE_VNDR
        From Ias_Vndr_Itm
        Where I_code = P_I_Code
   Exception 
   End;           
 Exception
CREATE OR REPLACE PACKAGE IAS_Wcode_Pkg as
 FUNCTION Get_Wc_Nm  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2;
 FUNCTION Get_Wc_St  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER;
 FUNCTION Get_Wc_Ser ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER;
 FUNCTION Get_Wc_cc  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_Wc_Brn ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE ) Return NUMBER ;
 FUNCTION Chk_Wc_Brn ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE, P_BRN_NO In S_BRN.BRN_NO%TYPE ) Return NUMBER;
 Function Get_Whg_Code  ( P_W_Code In Warehouse_Details.W_Code%Type ) Return Number ;
CREATE OR REPLACE PACKAGE Body IAS_Wcode_Pkg as
FUNCTION Get_Wc_Nm  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2 Is
 Begin
 Select Decode(P_Lng_no,1,w_name,nvl(w_e_name,w_name)) 
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Get_Wc_St  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER Is
 Begin
 Select nvl(INACTIVE,0) 
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Get_Wc_Ser  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER Is
 Begin
 Select nvl(w_ser,0)
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Get_Wc_cc  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return VARCHAR2 Is
 Begin
 Select cc_code
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Get_Wc_Brn  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE ) Return NUMBER Is
 Select Conn_Brn_No
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Chk_Wc_Brn  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE, P_BRN_NO In S_BRN.BRN_NO%TYPE ) Return NUMBER Is
 Begin
 Select 1
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
Function Get_Whg_Code  ( P_W_Code In Warehouse_Details.W_Code%Type ) Return Number Is
     Select Whg_Code
      From Warehouse_Details
       Where W_Code = P_W_Code 
 Exception 
CREATE OR REPLACE PACKAGE Ias_Weight_Sys_Pkg IS
 Function Get_Argmnt_NO ( P_Itm_Code   In Ias_Itm_Mst.I_Code%Type ,
  Function Get_Arg_Unt ( P_Icode   In Ias_Itm_Mst.I_Code%Type ,
  Function Get_Use_Frct_Qty_Unt ( P_Icode    In Ias_Itm_Mst.I_Code%Type ,
  Function Calc_Area_Size_Prc ( P_Inpt_Unt_Factor_Wt In Number  ,
  Function Get_Min_Unt ( P_Icode     In Ias_Itm_Mst.I_Code%Type  ) Return Varchar2 ;
  Function Is_Argmnt_No_Upd ( P_Itm_Code   In Ias_Itm_Mst.I_Code%Type ,
CREATE OR REPLACE PACKAGE BO
   Function Get_Argmnt_NO ( P_Itm_Code   In Ias_Itm_Mst.I_Code%Type ,
  Begin
       Select  Nvl(ARGMNT_NO,0) 
         From Ias_Conn_Itm_Msur_Unt
        Where I_Code         = P_Itm_Code
  Exception When Others Then    
   Function Get_Arg_Unt ( P_Icode   In Ias_Itm_Mst.I_Code%Type ,
  Begin
       Select  Decode(Factor,'/',P_Wt_Qty/Decode(Nvl(P_Argmnt_No,0),0,Argmnt_No,P_Argmnt_No),P_Wt_Qty*Decode(Nvl(P_Argmnt_No,0),0,Argmnt_No,P_Argmnt_No)) 
         From Ias_Conn_Itm_Msur_Unt
        Where I_Code        = P_Icode
       Select  Decode(Factor,'/',Round(P_I_Qty*Decode(Nvl(P_Argmnt_No,0),0,Argmnt_No,P_Argmnt_No),13),Round(P_I_Qty/Decode(Nvl(P_Argmnt_No,0),0,Argmnt_No,P_Argmnt_No),13)) 
         From Ias_Conn_Itm_Msur_Unt
        Where I_Code        = P_Icode
  Exception When Others Then    
  Function Get_Use_Frct_Qty_Unt ( P_Icode    In Ias_Itm_Mst.I_Code%Type ,
  Begin
       Select Nvl(Use_Fraction,0) Into V_Use_Fraction 
         From Ias_Conn_Itm_Msur_Unt
        Where I_Code        = P_Icode
  Exception When Others Then    
Function Calc_Area_Size_Prc ( P_Inpt_Unt_Factor_Wt In Number  ,
 Begin
  Function Get_Min_Unt ( P_Icode     In Ias_Itm_Mst.I_Code%Type  ) Return Varchar2 Is
  Begin
       Select Msur_Qty_Code Into V_Min_Unt 
         From Ias_Conn_Itm_Msur_Unt
        Where I_Code        = P_Icode
  Exception When Others Then    
  Function Is_Argmnt_No_Upd ( P_Itm_Code   In Ias_Itm_Mst.I_Code%Type ,
  Begin
       Select  Nvl(Upd_Flg,0) 
         From Ias_Conn_Itm_Msur_Unt
        Where I_Code         = P_Itm_Code
  Exception When Others Then    
CREATE OR REPLACE Package IAS_Reevalution_Pkg Is
PROCEDURE Insrt_To_Sale_Cost  ( p_Cst           In Out NUMBER,
CREATE OR REPLACE PACKAGE BODY IAS_Reevalution_Pkg Is
PROCEDURE Insrt_To_Sale_Cost  ( p_Cst           In Out NUMBER,
         Begin
           Exception 
               Raise_Application_Error(-20419,'Error When Select WatAvg From Ias_Itm_Mst '||p_icode||chr(13)||SqlErrm);
         End;
  Cursor C_gr_rec Is Select Gr_Detail.I_Code,Gr_Detail.Gr_No,Gr_Detail.Cp_Qty,P_Size,
             From Gr_Detail
            Where I_Code = p_ICode
             Order By Gr_detail.Gr_Date, Gr_detail.Rec_no ;
   Begin
 Update Gr_Detail Set CP_Qty = Rqty - Ent_Qty
      Where G_Ser  = Gr_Rec.G_Ser
    Exception 
          Raise_Application_Error(-20420,'Error when update gr_detail '||Gr_Rec.I_Code||chr(13)||SqlErrm);
   End;
    Begin
      Insert Into Sale_Cost  (  BILL_TYPE,
    Exception When Others Then
   End;
     Begin
      Update Gr_Detail Set CP_Qty = 0
       Where G_Ser  = Gr_Rec.G_Ser
    Exception When Others Then
       Raise_Application_Error(-20422,'Error When Update gr_detail ,i_code ='||Gr_Rec.I_Code||chr(13)||SqlErrm);
    End;
    Begin
     Insert Into Sale_Cost ( BILL_TYPE,
    Exception When Others Then
    End;
     Select Max(Rec_No) 
   From Gr_Detail
  Where I_Code   = p_Icode
   Select Gr_Detail.Gr_No,Gr_Detail.Pi_Type,Gr_Detail.g_ser,
     From Gr_Detail
    Where Gr_detail.Rec_No=Maxrec_no
    Begin
     Insert Into Sale_Cost (  bill_type,
    Exception When Others Then
    End;
   End;
Exception When Others Then
 Exception 
--## Insert Into Item_Move
CREATE OR REPLACE PACKAGE BODY IAS_Reevalution_Pkg Is
PROCEDURE Insrt_To_Sale_Cost  ( p_Cst           In Out NUMBER,
         Begin
           Exception 
               Raise_Application_Error(-20419,'Error When Select WatAvg From Ias_Itm_Mst '||p_icode||chr(13)||SqlErrm);
         End;
  Cursor C_gr_rec Is Select Gr_Detail.I_Code,Gr_Detail.Gr_No,Gr_Detail.Cp_Qty,P_Size,
             From Gr_Detail
            Where I_Code = p_ICode
              For Update NoWait
             Order By Gr_detail.Gr_Date, Gr_detail.Rec_no ;
   Begin
 Update Gr_Detail Set CP_Qty = Rqty - Ent_Qty
      Where G_Ser  = Gr_Rec.G_Ser
    Exception 
          Raise_Application_Error(-20420,'Error when update gr_detail '||Gr_Rec.I_Code||chr(13)||SqlErrm);
   End;
    Begin
      Insert Into Sale_Cost  (  BILL_TYPE,
    Exception When Others Then
   End;
     Begin
      Update Gr_Detail Set CP_Qty = 0
       Where G_Ser  = Gr_Rec.G_Ser
    Exception When Others Then
       Raise_Application_Error(-20422,'Error When Update gr_detail ,i_code ='||Gr_Rec.I_Code||chr(13)||SqlErrm);
    End;
    Begin
     Insert Into Sale_Cost ( BILL_TYPE,
    Exception When Others Then
    End;
     Select Max(Rec_No) 
   From Gr_Detail
  Where I_Code   = p_Icode
   Select Gr_Detail.Gr_No,Gr_Detail.Pi_Type,Gr_Detail.g_ser,
     From Gr_Detail
    Where Gr_detail.Rec_No=Maxrec_no
    Begin
     Insert Into Sale_Cost (  bill_type,
    Exception When Others Then
    End;
   End;
Exception When Others Then
 Exception 
--## Insert Into Item_Move
CREATE OR REPLACE PACKAGE GST_RPRT_PKG AS
   PROCEDURE  GST_RPRT_SMPL1_PRC ;
   PROCEDURE  GST_RPRT_SMPL2_PRC ;
CREATE OR REPLACE PACKAGE BODY GST_RPRT_PKG AS
PROCEDURE  GST_RPRT_SMPL1_PRC IS
  PROCEDURE run_query(p_sql IN VARCHAR2) IS
  BEGIN
  END;
  PROCEDURE start_workbook IS
  BEGIN
  END;
  PROCEDURE end_workbook IS
  BEGIN
  END;
  PROCEDURE start_worksheet(p_sheetname IN VARCHAR2) IS
  BEGIN
  END;
  PROCEDURE end_worksheet IS
  BEGIN
  END;
  PROCEDURE set_date_style IS
  BEGIN
  END;
    PROCEDURE new_line IS
    BEGIN
    END;
  run_query('select null  
"Summary B2B(4)"    from dual');
   run_query('select c2 "No of Receipient",c3 "No. of Invoices",c4 "Total Invoice Value",c5 "Total Taxable Value",c6 "Total Cess"    from GST_RPRT_MST 
                                                    WHERE  C1 = ''B2B'' ');
    run_query('select  R2_C "GSTIN/UIN of Recipient",R3_C "Receiver Name",R4_N "Invoice Number",R5_D "Invoice date",R6_N "Invoice Value",R7_C "Place Of Supply",
    R13_N "Taxable Value",R14_N "Cess Amount"   from GST_RPRT_DTL  WHERE R1_C = ''B2B'' ');
   run_query('select null  "Summary B2BA  "    from dual');
  run_query('select null "No of Receipient",
                    null "Total Cess"    from GST_RPRT_MST    WHERE  C1 = ''B2BA'' ');
  run_query('select R2_C "GSTIN/UIN of Recipient",
                    R14_N "Cess Amount"   from GST_RPRT_DTL  WHERE R1_C = ''B2BA'' ');
     run_query('select null  "Summary For B2CL(5)  "    from dual');
  run_query('select to_char(c2) "No of Receipient",
                    to_char(c6) "Total Cess"    from GST_RPRT_MST    WHERE  C1 = ''B2CL'' ');
  run_query('SELECT    
 R8_C  "Sale from Bonded WH"  from GST_RPRT_DTL  WHERE R1_C = ''B2CL'' ');          
     run_query('select null  "Summary For B2CLA  "    from dual');
  run_query('select null "No of Receipient",
                    null  "Total Cess"    from GST_RPRT_MST    WHERE  C1 = ''B2CLA'' ');
  run_query('select R4_N "Original Invoice Number",
 R8_C "Sale from Bonded WH "from GST_RPRT_DTL  WHERE R1_C = ''B2CLA'' ');
     run_query('select null  "Summary For B2CS(7)  "    from dual');
  run_query('select to_char(c5) "Total Taxable Value",
                    to_char(c6) "Total Cess"    from GST_RPRT_MST    WHERE  C1 = ''B2CS'' ');
  run_query('select R10_C "Type",
 R11_C "E-Commerce GSTIN" from GST_RPRT_DTL  WHERE R1_C = ''B2CS'' ');
   run_query('select null  "Summary For B2CSA  "    fro
  run_query('select null "Total Taxable Value",
                    null "Total Cess"    from GST_RPRT_MST   WHERE  C1 = ''B2CSA'' ');
  run_query('SELECT R9_C "Financial Year",
        R18_N "E-Commerce GSTIN" from GST_RPRT_DTL  WHERE R1_C = ''B2CSA'' ');
   run_query('select null  "Summary For CDNR(9B)  "    from dual');
  run_query('SELECT  to_char(C2) "No. of Recipients",
        to_char(C7) " Total Cess " FROM GST_RPRT_MST   WHERE  C1 = ''CDNR'' ');
  run_query('SELECT  R2_C  "GSTIN/UIN of Recipient",
 R11_C "Pre GST" from GST_RPRT_DTL  WHERE R1_C = ''CDNR'' ');
   run_query('select null  "Summary For CDNRA  "    from dual');
  run_query('select  null "No. of Recipients",
        null " Total Cess " FROM GST_RPRT_MST  WHERE  C1 = ''CDNRA'' ');
  run_query('SELECT  R2_C "GSTIN/UIN of Recipient",
 R11_C "Pre GST" from GST_RPRT_DTL  WHERE R1_C = ''CDNRA'' ');
   run_query('select null  "Summary For CDNUR(9B)  "    from dual');
  run_query('select  to_char(C2) "No. of Notes/Vouchers",
to_char(C7) "Total Cess" FROM GST_RPRT_MST  WHERE  C1 = ''CDNUR'' ');
  run_query('SELECT   R2_C "UR Type",
 R11_C "Pre GST" from GST_RPRT_DTL  WHERE R1_C = ''CDNUR'' ');
   run_query('select null  "Summary For CDNURA  "    from dual');
  run_query('select  null "No. of Recipients",
        null " Total Cess " FROM GST_RPRT_MST  WHERE  C1 = ''CDNURA'' ');
  run_query('SELECT   R2_C "UR Type",
 R11_C "Pre GST" from GST_RPRT_DTL  WHERE R1_C = ''CDNURA'' ');
   run_query('select null  "Summary For EXP(6)  "    from dual');
  run_query('select  to_char(C2) "No. of Invoices",
to_char(C6) "Total Taxable Value"  FROM GST_RPRT_MST  WHERE  C1 = ''EXP'' ');
  run_query('SELECT    R2_C "Export Type",
 to_char(R15_N) "Cess Amount" from GST_RPRT_DTL  WHERE R1_C = ''EXP'' ');
   run_query('select null  "Summary For EXPA  "    from dual');
  run_query('select   null "No. of Invoices" ,
 null "Total Taxable Value" FROM GST_RPRT_MST  WHERE  C1 = ''EXPA'' ');
  run_query('SELECT   R2_C "Export Type" ,
 to_char(R15_N) "Cess Amount"   from GST_RPRT_DTL  WHERE R1_C = ''EXPA'' ');
   run_query('select null  "Summary For Adv Recevd (11B) "    from dual');
  run_query('select     to_char(c2) "Total Advance Received",
    to_char(c3) "Total Cess" FROM GST_RPRT_MST  WHERE  C1 = ''AT'' ');
  run_query('SELECT    R9_C "Place Of Supply",
 to_char(R15_N) "Cess Amount"   from GST_RPRT_DTL  WHERE R1_C = ''AT'' ');
   run_query('select null  "Summry for ATL(Adv Received) "    from dual');
  run_query('select      null "Total Advance Received",
    null "Total Cess" FROM GST_RPRT_MST  WHERE  C1 = ''ATA'' ');
  run_query('SELECT   R7_C "Financial Year" ,
 to_char(R15_N) "Cess Amount" from GST_RPRT_DTL  WHERE R1_C = ''ATA'' ');
   run_query('select null  "Summary For Adv Adjusted(11B)"    from dual');
  run_query('select    to_char(C2) "Total Advance Adjusted ",to_char(C3) "Total Cess"
   FROM GST_RPRT_MST  WHERE  C1 = ''ATADJ'' ');
  run_query('SELECT    R7_C "Place Of Supply" ,
 to_char(R15_N) "Cess Amount"  from GST_RPRT_DTL  WHERE R1_C = ''ATADJ'' ');
   run_query('select null  "Summary Adjmt Advance"    from dual');
  run_query('select       null "Total Advance Adjusted ",null "Total Cess"
    FROM GST_RPRT_MST  WHERE  C1 = ''ATADJA'' ');
  run_query('SELECT   R7_C "Financial Year",
 to_char(R15_N) "Cess Amount" from GST_RPRT_DTL  WHERE R1_C = ''ATADJA''
   run_query('select null  "Summary For Nil rated,",null "Exempted and non GST ",null "Outward supplies (8)"    from dual');
  run_query('select       to_char(C2) "Total Nil Rated Supplies",
    FROM GST_RPRT_MST  WHERE  C1 = ''EXEMP'' ');
  run_query('SELECT  R7_C "Description" ,
 R14_N "Non-GST Supplies " from GST_RPRT_DTL  WHERE R1_C = ''EXEMP'' ');
   run_query('select null  "Summary For HSN(12)"    from dual');
  run_query('select C2 "No. of HSN",C3 "Total Value",
C8 "Total Cess"     FROM GST_RPRT_MST  WHERE  C1 = ''HSN'' ');
  run_query('SELECT  R7_C "HSN CODE ",
 R18_N "Cess Amount" from GST_RPRT_DTL  WHERE R1_C = ''HSN'' ');
   run_query('select null  "Summary of documents",null "issued during the",null "tax period (13)"    from dual');
  run_query('select C2 "Total Number  ",
C3 "Total Cancelled "    FROM GST_RPRT_MST  WHERE  C1 = ''DOCS'' ');
  run_query('SELECT   R7_C "Nature of Document",
 R15_N "Cancelled " from GST_RPRT_DTL  WHERE R1_C = ''DOCS'' ');
PROCEDURE  GST_RPRT_SMPL2_PRC AS
  PROCEDURE run_query(p_sql IN VARCHAR2) IS
  BEGIN
  END;
  PROCEDURE start_workbook IS
  BEGIN
  END;
  PROCEDURE end_workbook IS
  BEGIN
  END;
  PROCEDURE start_worksheet(p_sheetname IN VARCHAR2) IS
  BEGIN
  END;
  PROCEDURE end_worksheet IS
  BEGIN
  END;
  PROCEDURE set_date_style IS
  BEGIN
  END;
    PROCEDURE new_line IS
    BEGIN
    END;
   run_query('select null  "Summary of Supply",null "from Registered",null "Supplier B2B(3)"    from dual');
  run_query('select C2 "No of Suppliers",    
C13 "Total Availed ITC Cess"     FROM GST_RPRT_MST  WHERE  C1 = ''B2B''and C21 = ''REP2'' ');
  run_query('SELECT   R2_C "GSTIN of Supplier",    
R20_N "Availed ITC Cess" from GST
_RPRT_DTL  WHERE R1_C = ''B2B'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary of Supply",null "from Registered",null "Supplier B2BUR(4B)"    from dual');
  run_query('select C3 "No of Invoices",        
C13 "Total Availed ITC Cess"     FROM GST_RPRT_MST  WHERE  C1 = ''B2BUR''and C21 = ''REP2'' ');
  run_query('SELECT   R2_C "Supplier Name",    
R20_N "Availed ITC Cess" from GST_RPRT_DTL  WHERE R1_C = ''B2BUR'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary For IMPS(4C)"    from dual');
  run_query('select C3 "No of Invoices",        
C13 "Total Availed ITC Cess"   FROM GST_RPRT_MST  WHERE  C1 = ''IMPS''and C21 = ''REP2'' ');
  run_query('SELECT R3_C "Invoice Number",    
R20_N "Availed ITC Cess" from GST_RPRT_DTL  WHERE R1_C = ''IMPS'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary For IMPG (5)"    from dual');
  run_query(' select C3 "No of Bill of Entry" ,        
C13 "Total Availed ITC Cess"     FROM GST_RPRT_MST  WHERE  C1 = ''IMPG''and C21 = ''REP2'' ');
  run_query('SELECT    R2_C "Port Code ",
R20_N "Availed ITC Cess" from GST_RPRT_DTL  WHERE R1_C = ''IMPG'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary For CDNR(6C) "    from dual');
  run_query('select   C2 "No of Suppliers",
C13 "Total Availed ITC Cess"   FROM GST_RPRT_MST  WHERE  C1 = ''CDNR''and C21 = ''REP2'' ');
  run_query('SELECT R2_C "GSTIN of Supplier",    
R23_N "Availed ITC Cess" from GST_RPRT_DTL  WHERE R1_C = ''CDNR'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary For CDNUR(6C) "    from dual');
  run_query('select  C2 "No of Notes/Vouchers",        
C13 "Total ITC Cess Amount"   FROM GST_RPRT_MST  WHERE  C1 = ''CDNUR''and C21 = ''REP2'' ');
  run_query('SELECT  R4_N "Note/Voucher Number",    
R23_N "Availed ITC Cess" from GST_RPRT_DTL  WHERE R1_C = ''CDNUR'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary For Tax",NULL "Liability on Advance", null "Paid under reverse",null " charge(10A) "    from dual');
  run_query('select C3 "Total Advance Paid",    
C4 "Total Cess Amount"   FROM GST_RPRT_MST  WHERE  C1 = ''AT''and C21 = ''REP2'' ');
  run_query('SELECT   R9_C "Place Of Supply",     
R15_N "Cess Amount" from GST_RPRT_DTL  WHERE R1_C = ''AT'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary For Adjustment",null "of advance tax paid",null "earlier for reverse",null "charge supplies (10 B)"    from dual');
  run_query('select C3 "Total Advance Adjusted" ,    
C4  "Total Cess"     FROM GST_RPRT_MST  WHERE  C1 = ''ATADJ''and C21 = ''REP2'' ');
  run_query('SELECT R9_C "Place Of Supply",    
R15_N "Cess Adjusted" from GST_RPRT_DTL  WHERE R1_C = ''ATADJ'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary of Supply",null "from Registered",null "Supplier B2B(3)"    from dual');
  run_query('select C3 "Total Composit taxable person",    
C6 "Total Non-GST Supplies"     FROM GST_RPRT_MST  WHERE  C1 = ''EXEMP''and C21 = ''REP2'' ');
  run_query('SELECT  R3_C "Description",    
R9_C "Non-GST supplies" from GST_RPRT_DTL  WHERE R1_C = ''EXEMP'' and R21_C = ''REP2''  '); 
  run_query('select null  "Summary For Composition,",null "Nil rated,exempted",null "and non GST inward supplies(7)"    from dual');
  run_query('select C3 "Total ITC IGST Tax Amount" ,   
C6 "Total ITC Cess Amount"   FROM GST_RPRT_MST  WHERE  C1 = ''ITCR''and C21 = ''REP2'' ');
  run_query('SELECT  R3_C "Description for reverse of ITC",    
nt" from GST_RPRT_DTL  WHERE R1_C = ''ITCR'' and R21_C = ''REP2''  '); 
   run_query('select null  "Summary For HSN(13) "    from dual');
  run_query('select c3 "No. of HSN",    
c9 "Total Cess "  FROM GST_RPRT_MST  WHERE  C1 = ''HSNSUM''and C21 = ''REP2'' ');
  run_query('SELECT R3_C "HSN",    
R15_N "Cess Amount" from GST_RPRT_DTL  WHERE R1_C = ''HSNSUM'' and R21_C = ''REP2''  '); 
PROCEDURE  GST_Crt_Xml_PRV_PRC IS
 Begin
 CREATE OR REPLACE Package Ias_prprtn_trns_pkg As
PROCEDURE INSRT_DOC_PRC(  P_XML        IN  CLOB,                          
Procedure Insrt_Bin_prc( P_xml            In Clob
PROCEDURE GET_PRMTR_PRC (   P_DOC_TYPE  IN IAS_POST_MST.DOC_TYPE%TYPE           DEFAULT NULL,
   Function Ftch_doc_typ_xml( P_usr_no         In User_r.U_id%Type
   Function Ftch_w_code_xml(  P_usr_no         In User_r.U_id%Type
 Function Ftch_Bin_code_xml( P_Lng_no         In Number Default Null,P_w_code  In Number Default Null )Return Clob;
 Function Ftch_Bin_code_Qty_xml( P_Icode          In Varchar2
   Function Shw_doc_d
  PROCEDURE  Shw_itm_doc_prprtn(  P_doc_type       In Number
  PROCEDURE Shw_itm_barcode_doc(   P_doc_type       In Number
   Procedure Insrt_data_tmp(
Procedure Insrt_Chk_Doc_Inout_Qty_Mst(                                     
Procedure Insrt_Chk_Doc_Inout_Qty_Dtl(
Procedure Chk_Itm  ( P_I_Code                In Ias_Itm_Mst.I_Code%Type          
function Ftch_bin_data      ( P_barcode        In Varchar2 Default Null
Procedure Insrt_Inv_itm_bin_movmnt(
Procedure Chk_Insrt_Data ( P_Doc_Type     In Ias_Post_Mst.Doc_Type%Type,
Function   Get_comp_itm_qty(   P_icode          In Ias_itm_mst.I_code%Type
Function Get_avlqty_clssfctn(P_icode          In Varchar2
Function Get_b_code(   P_icode          In Varchar2
Function   Get_doc_prprtn_sts(  P_DOC_TYPE          In
Procedure Chk_doc_prprtn_sts(  P_Doc_Type_Ref   In Number
Procedure Get_Acc_Info(P_Doc_Type_Ref In Number, P_Doc_Ser_Ref In Number) ;
Procedure Updt_Doc_Prprtn(     P_Prss_Typ       IN NUMBER  -- 1 insert 2--DELETE 
PROCEDURE CLR_GLBL_VAR;
 CREATE OR REPLACE PACKAGE Body Ias_prprtn_trns_pkg as
Procedure Insrt_doc_prc( P_xml            In Clob
   For M_cv In (Select Extractvalue(Value(Xmlmstdmy), '*/DOC_TYPE                  ') As Doc_type
                From   Table(Xmlsequence(Extract(V_xml_type, '/PRPRTN/PRPRTN_MST'))) Xmlmstdmy) Loop                                                                                                                                                     --(11)
      Begin                                              
      Exception
      End;                                                                                                                                                                                                                                                --(1)
      For D_cv In (Select Extractvalue(Value(Xmldtldmy), '*/I_CODE                      ') As I_code
                   From   Table(Xmlsequence(Extract(V_xml_type, '/PRPRTN/PRPRTN_DTLList'))) Xmldtldmy) Loop                                                                                                                                              --(12)
         Begin                                                                                                                                                                                                                                           --(2)
         Exception
         End;                                                                                                                                                                                                                                             --(2)
Exception
Procedure Insrt_Bin_prc( P_xml            In Clob
    Begin
       Select Nvl(Max(To_number(Doc_no)), 0) + 1
       From   Inv_itm_bin_movmnt;       
    Exception
    End;
      For D_cv In (Select Extractvalue(Value(Xmldtldmy), '*/I_CODE                      ') As I_code
                   From   Table(Xmlsequence(Extract(V_xml_type, '/BIN/BINLIST'))) Xmldtldmy) Loop                                                                                                                  
         Begin                                                                                                                                                                                                                                           --(2)
         Exception
         End;                                                                                                                                                                                                                                             --(2)
Exception
Procedure Get_prmtr_prc(
Begin  
   Begin
      Select Lang_no
      From   Ias_sys.Lang_def
      Where  Lang_dflt = 1 And Rownum <= 1;
   Exception
         Raise_application_error(-20005, 'Error When Select Deflt LANG  , ' || Sqlerrm);
   End;
   Begin
      Select Nvl(No_Of_Decimal_Ar, 2)
      From   Ias_Para_Ar
   Exception
         Raise_application_error(-20006, 'Error When Select PARAMETER , ' || Sqlerrm);
   End;
      Begin
         Select Tb_Mst
         From   Inv_V_Doc_Type
         Where  Doc_Type = P_Doc_Type And Rownum <= 1;
      Exception
      End;
      Begin
         Select Pr_Type
         From   Inv_Prprtn_Stp
         Where  Doc_Type = P_Doc_Type And Typ_No = P_Typ_No And Rownum <= 1;
      Exception
      End;
   Begin
   Exception
   End;
Exception
Function Ftch_doc_typ_xml( P_usr_no         In User_r.U_id%Type
      V_Sql:='SELECT DOC_TYPE, IAS_GEN_PKG.GET_PROMPT('||V_Lng_No||',LBL_NO)  DOC_TYP_NM ,TYP_NO
                  FROM INV_PRPRTN_STP
                 WHERE PR_TYPE='||P_Pr_Type||'
                   AND EXISTS (SELECT 1 FROM INV_V_DOC_TYPE 
                   WHERE INV_V_DOC_TYPE.DOC_TYPE=INV_PRPRTN_STP.DOC_TYPE
       V_Sql:=' SELECT 99 DOC_TYPE, IAS_GEN_PKG.GET_PROMPT('||V_Lng_No||',15003)  DOC_TYP_NM ,99 TYP_NO 
                    from dual ';
Exception
Function Ftch_w_code_xml(  P_usr_no         In User_r.U_id%Type
      V_Sql:='SELECT M.W_CODE,DECODE('||V_Lng_No||',1,M.W_NAME,NVL(M.W_E_NAME,M.W_NAME)) W_CODE_NM
                  FROM WAREHOUSE_DETAILS M 
                 WHERE M.CONN_BRN_NO='||P_Brn_No||'
                    AND EXISTS (SELECT 1 FROM PRIVILEGE_WH 
                   WHERE W_CODE=M.W_CODE
Exception
 Function Ftch_Bin_code_xml( P_Lng_no  In Number Default Null,P_w_code  In Number Default Null )Return Clob Is
       v_Whr:='where w_code='||P_w_code||' ';
      V_Sql:='Select  b_code,
              From bin_details '||v_Whr||'  
              Order By b_code';
Exception
Function Ftch_Bin_code_Qty_xml(  P_Icode          In Varchar2  
      V_Sql:='Select  D.b_code,
             From bin_details D,INV_V_ITM_BIN_MOVMNT M
             where M.B_CODE =D.B_CODE
             Order By D.b_code';
Exception
Function Shw_doc_data( P_doc_type       In Number
      Begin
         Select Tb_mst
         From   Inv_v_doc_type
         Where  Doc_type = P_doc_type And Rownum <= 1;
      Exception
      End;
      Begin
         Select Pr_type
         From   Inv_prprtn_stp
         Where  Doc_type = P_doc_type And Typ_no = P_typ_no And Rownum <= 1;
      Exception
      End;
      Begin
       Select Nvl(Use_Out_Bills,0) ,Nvl(Use_Bills_Fllwup,0)
       From Ias_Para_Ar;
      Exception When Others Then
      End;
      Begin
        V_whr:='And (0=(Select Nvl(Count(1),0) From Ars_Code_Dtl Where Code_Typ=21)
                                                     0=(Select Nvl(Count(1),0) From Ars_Bill_Fllwup_Movmnt Where Doc_Ser=M.Bill_Ser And Nvl(Cnfrm_Typ,0)<>1))';
      exception when others then 
         V_whr := V_whr || '  and Exists(Select 1
                                          From '||V_tbl_dtl_nm||' 
                                         Where '||V_fld_ser||'=M.'||V_fld_ser||' 
               ' AND EXISTS (SELECT 1 FROM REQUEST_TYPES 
                                         WHERE REQ_TYPE=M.OUT_REQ_TYPE
               ' AND EXISTS (SELECT 1 FROM REQUEST_TYPES 
                                         WHERE REQ_TYPE=M.OUT_REQ_TYPE
                 V_Whr_Add || ' And Exists (Select 1                 
                                                 From   Ias_pi_bill_mst
                                                 Where  Bill_ser = Nvl(m.bill_ser, 0) 
                                                 And Exists(Select 1
                                                             From   Ias_pi_bill_dtl
                                                             Where  Bill_ser = Ias_pi_bill_mst.Bill_ser 
                 V_Whr_Add := V_Whr_Add || ' And Exists (  Select 1                 
                                                             From   Ias_bill_mst
                                                             Where  Bill_ser = Nvl(m.bill_ser, 0)                                                                                                                           --BILL_SER= Nvl (p_Doc_Ser_Ref, 0)
                                                             And    Exists(Select 1
                                                                           From   Ias_bill_dtl
                                                                           Where  Bill_ser = Ias_bill_mst.Bill_ser And(nvl(I_qty,0) + Nvl(Free_qty, 0)) >(Nvl(Out_qty, 0) + Nvl(Out_free_qty, 0)) And Rownum <= 1)
                 V_Whr_Add || ' And Exists ( Select 1                 
                                               From   Ias_rt_bill_mst
                                                 Where  rt_Bill_ser = Nvl(m.rt_bill_ser, 0)                                                                                                                           --BILL_SER= Nvl (p_Doc_Ser_Ref, 0)
                                                 And    Exists(Select 1
                                                               From   Ias_rt_bill_dtl
                                                               Where  rt_Bill_ser = Ias_rt_bill_mst.rt_Bill_ser And(nvl(I_qty,0) + Nvl(Free_qty, 0)) >(Nvl(RET_QTY, 0) + Nvl(RET_FREE_QTY, 0)) And Rownum <= 1)
      V_WHR_ADD :=V_WHR_ADD||' And      (('||P_usr_no||' = 1) Or Exists(Select 1
                                             From   S_brn_usr_priv
                                             Where  U_id = '||P_usr_no ||'
        V_SQL:=' SELECT  3 PR_TYPE
                        FROM IAS_CHK_DOC_INOUT_QTY_MST M,INV_PRPRTN_STP S
                         where m.doc_type_ref=s.doc_type
      Else  V_SQL:=' SELECT    '||V_PR_TYPE||' PR_TYPE
                        FROM '||V_TBL_MST_NM||' M 
                       WHERE ( M.'||V_FLD_SER||' NOT IN(SELECT DOC_SER_REF 
                                                  FROM IAS_CHK_DOC_INOUT_QTY_DTL PPPR_DTL
                                                 WHERE DOC_SER IS NOT NULL
                             OR M.'||V_FLD_SER||' IN(SELECT DOC_SER_REF 
                                               FROM IAS_CHK_DOC_INOUT_QTY_DTL PPPR_DTL
                                              WHERE DOC_SER IS NOT NULL 
                                           GROUP BY DOC_SER_REF
                                             HAVING SUM(NVL(I_QTY,0))<(SELECT SUM(NVL(I_QTY,0) '||V_FLD_FREE_QTY||')
                                                                           FROM '||V_TBL_DTL_NM||' SRC_DTL 
                                                                          WHERE SRC_DTL.'||V_FLD_SER||'=PPPR_DTL.DOC_SER_REF))) 
                      ORDER BY To_Char(M.'||V_FLD_DATE||',''DD/MM/RRRR'')';
Exception
PROCEDURE  Shw_itm_doc_prprtn( P_doc_type       In Number
         ' SELECT   
                      FROM IAS_PRPRTN_DATA_TMP
Exception
PROCEDURE Shw_itm_barcode_doc( P_doc_type       In Number
         Begin
            Select Expire_date
            From   Ias_itm_unt_barcode
            Where  Barcode = P_barcode And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
            From   Ias_itm_mst
            Where  I_code = P_barcode And Rownum <= 1;
         Exception
         End;
               Begin
                  Select I_code
                  From   Ias_itm_mst
                  Where  I_code = V_icode And Rownum <= 1;
               Exception
               End;
      Begin
         Select Count(1)
         From   Ias_prprtn_data_tmp
         Where  Doc_ser_ref = P_doc_ser 
      Exception
      End;
      V_whr := 'Where Doc_Ser_Ref=' || P_doc_ser ||' And I_Code='''|| V_icode ||''' ';
              Begin
                 Select Count(1)
                 From   Ias_prprtn_data_tmp
                 Where  Doc_ser_ref = P_doc_ser 
              Exception
              End;
      V_sql := ' SELECT   
                      FROM IAS_PRPRTN_DATA_TMP '|| V_whr || ' ';
Exception
Procedure Insrt_data_tmp(  P_doc_type       In Number
      Begin
         Select Tb_mst
         From   Inv_v_doc_type
         Where  Doc_type = P_doc_type And Rownum <= 1;
      Exception
      End;
      Begin
         Select Pr_type
         From   Inv_prprtn_stp
         Where  Doc_type = P_doc_type And Typ_no = P_typ_no And Rownum <= 1;
      Exception
      End;
    Begin
       Select Nvl(Use_Out_Bills,0)
       From Ias_Para_Ar;
    Exception When Others Then
    End;
      V_fld_instll_qty :='NVL((SELECT SUM(NVL(PPPR_INST.I_QTY,0))  
                                 FROM IAS_CHK_DOC_INOUT_QTY_DTL PPPR_INST 
                                WHERE PPPR_INST.I_CODE=I.I_CODE
                             GROUP BY PPPR_INST.DOC_SER_REF,PPPR_INST.I_CODE,PPPR_INST.RCRD_NO_REF),0)';
      Begin
        Select 1 Into V_Cnt 
        From Ias_Rt_Bill_Mst A,Ias_Rt_Bill_Dtl B
            Where A.Rt_Bill_Ser = B.Rt_Bill_Ser
      Exception When Others Then
        V_Rt_Sql:= 'NVL((Select nvl(Sum(b.i_qty),0)+nvl(Sum(b.free_qty),0)  From Ias_Rt_Bill_Mst a,Ias_Rt_Bill_Dtl b
            Where a.rt_bill_ser = b.rt_bill_ser
   V_Sql:='INSERT INTO IAS_PRPRTN_DATA_TMP(  DOC_TYPE_REF,
            from IAS_CHK_DOC_INOUT_QTY_DTL d, IAS_ITM_MST I                        
            WHERE d.i_CODE=I.I_CODE
    V_Sql:='INSERT INTO IAS_PRPRTN_DATA_TMP(      DOC_TYPE_REF,
                                              SELECT 
                                        FROM '||V_TBL_DTL_NM||' D,
                                           WHERE K.DI_CODE=I.I_CODE
                                                AND EXISTS(SELECT 1 FROM COMPOUND_ITEMS 
                                                                WHERE I_CODE=D.I_CODE                                                                 
                                              SELECT           '||P_Doc_TYPE||' DOC_TYPE_REF,
                                                        FROM '||V_TBL_DTL_NM||' D ,IAS_ITM_MST I                        
                                                           WHERE D.I_CODE=I.I_CODE  ' ||v_whr||'                                                                                        
                                                                AND NOT EXISTS(SELECT 1 FROM COMPOUND_ITEMS 
                                                                                WHERE I_CODE=D.I_CODE                                                                 
   Begin
      Delete From Ias_prprtn_data_tmp;
   Exception
   End;
   Begin
   Exception
   End;
Procedure Insrt_chk_doc_inout_qty_mst(
        Begin
            Select Nvl(Conn_Brn_No,G_Brn_No) 
            From  Warehouse_Details
            Where W_Code=G_W_CODE
        Exception When Others Then 
        End;
     Begin
       EXECUTE IMMEDIATE(' Select 1            
                            From   '||G_tbl_mst_nm||'
                        Where  '||G_fld_no||' ='|| G_doc_no_ref||' And '||G_fld_ser||' ='|| G_doc_ser_ref||' And Rownum <= 1')
     Exception
     End;
    Begin
       Select Nvl(Max(To_number(Doc_no)), 0) + 1
       From   Ias_chk_doc_inout_qty_mst
       Where  Brn_no = G_brn_no;
    Exception
    End;
      Begin
         Select Pr_type,LBL_NO
         From   Inv_prprtn_stp
         Where  Doc_type = P_doc_type And Typ_no = P_typ_no And Rownum <= 1;
      Exception
      End;
  Insert Into Ias_chk_doc_inout_qty_mst
Exception
Procedure Insrt_chk_doc_inout_qty_dtl(
      Begin
         Select 1
         From   Ias_sys.Ias_docjv_type_systems
         Where  Doc_type = G_doc_type_ref And Rownum <= 1;
      Exception
      End;
   BEGIN
       SELECT Kit_itm_clssfctn_typ 
       INTO V_Kit_itm_clssfctn_typ FROM IAS_ITM_MST
       WHERE I_CODE=P_I_CODE
   Exception
   End;    
   Begin
      Select Ias_doc_seq_othr.Nextval
      From   Dual;
   Exception
   End;
            Begin
               Begin
                  Select 1
                  From   Ias_itm_unt_barcode
                  Where  Barcode = P_barcode And Rownum <= 1;
  Exception
               End;
                  --## Insert Into Ias_Itm_Unt_Barcode
                  Begin
                     Insert Into Ias_itm_unt_barcode
                  Exception
                  End;
            End;
        Begin
           Select Nvl(Max(To_number(Doc_no)), 0) + 1
           From   Inv_itm_bin_movmnt;       
        Exception
        End;
         Begin
            Insert Into Inv_itm_bin_movmnt
         Exception
         End;
                       Begin
                          Select COUNT(1)
                          From   Ias_chk_doc_inout_qty_dtl
                          Where  Barcode = P_barcode;
                       Exception
                       End;
                       Begin
                          Select COUNT(1)
                          From   Ias_chk_doc_inout_qty_dtl
                          Where  Barcode = P_barcode
                       Exception
                       End;
   Insert Into Ias_chk_doc_inout_qty_dtl
Exception
      Raise_application_error(-20063, 'Error When Insert Into Insrt_Chk_Doc_Inout_Qty_Dtl' || Chr(10) || Sqlerrm);
function Ftch_bin_data       ( P_barcode        In Varchar2 Default Null
         Begin
            Select Expire_date
            From   Ias_itm_unt_barcode
            Where  Barcode = P_barcode And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
            From   Ias_itm_mst
            Where  I_code = P_barcode And Rownum <= 1;
         Exception
         End;
    Begin
        Select Nvl(Use_Prp_Qty_By_Barcode,0) ,Nvl(Use_Kit_Itm_Clssfctn, 0)
        From Ias_Para_Inv;
    Exception
      End;
      Begin
         Select Count(1)
         From   Inv_itm_bin_movmnt
         Where  barcode = v_barcode  
      Exception
      End;
      V_sql := 'Select   D.I_code
            From     Inv_itm_bin_movmnt D
            Where    D.I_code = I.I_code 
            Group By D.I_code
Exception
Procedure Insrt_Inv_itm_bin_movmnt(
   BEGIN
       SELECT Kit_itm_clssfctn_typ 
       INTO V_Kit_itm_clssfctn_typ FROM IAS_ITM_MST
       WHERE I_CODE=P_I_CODE
   Exception
   End;    
   Begin
      Select Ias_doc_seq_othr.Nextval
      From   Dual;
   Exception
   End;
   Begin
     Select   
                From     Inv_Itm_Bin_Movmnt                         
                Where    I_Code =P_I_Code 
   Exception When Others Then 
   End; 
         Begin
            Insert Into Inv_itm_bin_movmnt
         Exception
         End;
         Begin
            Insert Into Inv_itm_bin_movmnt
         Exception
         End;
Exception
      Raise_application_error(-20063, 'Error When Insert Into Insrt_Inv_itm_bin_movmnt' || Chr(10) || Sqlerrm);
Procedure Chk_itm(
      Begin
         Select 1
         From   Ias_itm_mst
         Where  I_code = P_i_code And Rownum <= 1;
      Exception
      End;
      Begin
         Select 1
         From   Ias_itm_dtl
         Where  I_code = P_i_code And Itm_unt = P_itm_unt And Rownum <= 1;
      Exception
      End;
              Begin
                 Select Count(1)
                 From   Ias_prprtn_data_tmp
                 Where  Doc_ser_ref = g_doc_ser_ref
              Exception
              End;
         Select Nvl(Use_exp_date, 0) Use_exp_date
         From   Ias_itm_mst
         Where  I_code = P_i_code And Rownum <= 1;
   Begin
           Begin 
                        Select Avl_Qty
                        From   Table(Inv_Qty_Pkg.Get_Avl_Qty_Fnc(P_Itm_Code         => P_I_Code
           Exception When No_Data_Found Then
                  Begin
                   Select sum(I_qty*in_out)/nvl(p_p_size,1)
                   From   INV_ITM_BIN_MOVMNT
                   Where  B_code = p_B_code
                Exception
                End; 
   End;
Procedure Chk_insrt_data(  P_doc_type       In Ias_post_mst.Doc_type%Type
         Select doc_ty
         From   Ias_chk_doc_inout_qty_mst
         Where  Doc_ser = P_doc_ser;
   Begin
         Begin
            Select 1
            From   (Select Doc_no
                    From   Ias_chk_doc_inout_qty_mst
                    Where  Doc_ser = I.Doc_ser
                    Select Doc_no
                    From   Ias_chk_doc_inout_qty_dtl
                    Where  Doc_ser = I.Doc_ser)
            Where  Rownum <= 1;
         Exception
         End;
         Begin     
              Begin
                 Select 1,M.I_Code
                 From   Ias_Chk_Doc_Inout_Qty_Dtl M
                 Where  M.Doc_Ser =I.Doc_Ser                
                 And Not Exists( Select 1 From Ias_Prprtn_Data_Tmp D
                                     Where D.I_Code = M.I_Code 
              Exception
              End;
         End;     
           Begin
                      Begin
                          select Allow_Prprtion_Partly into V_Allw_Prp_Partily from INV_PRPRTN_STP
                           where Typ_no = I.Typ_no
                      Exception when others then
 End;                       
                       Begin
                            Select Allow_mod_rec_qty,Allow_exceed_tr_qty,Allow_del_rec_itm
                            From Ias_para_inv;
                       Exception When Others Then 
                       End;                      
                                   from (select  M.Doc_Ser_Ref, 
                                               (Select Sum(I_Qty)
                                                  From Ias_Chk_Doc_Inout_Qty_Dtl d
                                                 Where d.Doc_Ser_Ref = M.Doc_Ser_Ref
                                  From Ias_Prprtn_Data_Tmp M  
                                 Where M.Doc_Ser_Ref = G_Doc_Ser_Ref
                              Begin
                                 Select 1
                                 From   Ias_prprtn_data_tmp M
                                       ,(Select   Sum(I_qty) Pr_i_qty
                                         From     Ias_chk_doc_inout_qty_dtl
                                         Where    Doc_ser =I.Doc_ser
                                         Group By I_code
                                 Where  M.I_code = D.I_code 
                              Exception
                              End;              
           End;
              For J In (Select   Qd.Doc_ser
                        From     Ias_chk_doc_inout_qty_DTL Qd
                        Where    Qd.Kit_item_no = It.I_code 
                        And Exists(Select 1
                                       From   Compound_items
                                       Where  I_code = Qd.Kit_item_no 
                        Group By Qd.Doc_ser
                 Begin
                     Begin
                       Exception
                       End;                             
              End;    
         Begin
         Exception
         End;  
   End;
Function  Get_Comp_Itm_Qty(   P_icode          In Ias_itm_mst.I_code%Type
      Begin
         Select 1
         From   Ias_itm_mst
         Where  I_code = P_icode 
         And Exists(Select 1
                        From   Compound_items
                        Where  I_code = Ias_itm_mst.
      Exception
      End;
         Begin
               Begin
                 EXECUTE IMMEDIATE' Select Min(I_qty),Max(I_qty)       
                             From   (Select   K.I_CODE
                                     From  (  select i_code,abs(sum((i_qty*p_size)*In_out)) I_qty,p_size from '||P_TBL_NM||' 
                                                 where  W_code = :P_wcode ' ||P_WHR||' 
                                                 group by i_code, p_size     ) D,
                                     Where    D.I_code(+) = K.DI_CODE 
                                     Group By K.I_CODE
               Exception
               End;
               Begin
               Exception
               End;
         End;
            Begin
                 EXECUTE IMMEDIATE' Select abs(SUM(I_Qty*In_out)) From IAS_CHK_DOC_INOUT_QTY_DTL 
                                           Where  W_Code =:P_Wcode 
            Exception
            End;      
Exception
Function Get_avlqty_clssfctn(P_icode          In Varchar2
      Begin
         Select 1
         From   Ias_itm_mst
         Where  I_code = P_icode 
         And Exists(Select 1
                        From   Compound_items
                        Where  DI_code = Ias_itm_mst.I_code And Rownum <= 1)
      Exception
      End;
          BEGIN
               Select Sum(P_qty * In_out)/nvl(P_psize,1)  
                       From   Ias_chk_doc_inout_qty_dtl
                       Where  I_code = P_icode 
          Exception When Others Then
          END; 
Exception
Function Get_b_code(  P_icode          In Varchar2
   Begin
      Select Nvl(Use_kit_itm_clssfctn, 0)
      From   Ias_para_inv
      Where  Rownum <= 1;
   Exception
   End;
      Begin
         Select   B_code
         From     (Select   B_code
                   From     (Select   B_code
                             From     Inv_itm_bin_movmnt
                             Where    I_code = P_icode 
                             Group By B_code)
                   Group By B_code
         Where    Rownum <= 1
         Order By B_code;
      Exception
      End;
Exception
Function Get_doc_prprtn_sts(P_doc_type       In Number
   Begin
            Select Pr_type
            From   Inv_prprtn_stp
            Where  Doc_type = 6 And Typ_no = 5 And Rownum <= 1;
            Select Pr_type
            From   Inv_prprtn_stp
            Where  Doc_type = 6 And Typ_no = 4 And Rownum <= 1;
       Select Pr_type
            From   Inv_prprtn_stp
            Where  Doc_type = 53 And Typ_no = 21 And Rownum <= 1;   
       Select Pr_type
            From   Inv_prprtn_stp
            Where  Doc_type = P_doc_type And Rownum <= 1;    
   Exception
   End;
Procedure Get_Acc_Info(P_Doc_Type_Ref In Number, P_Doc_Ser_Ref In Number)
   Begin
      Select Tb_Mst,
        From Inv_V_Doc_Type
       Where Doc_Type = P_Doc_Type_Ref
   Exception
   End;
         Begin
            G_Ac_Code_Dtl := Ys_Gen_Pkg.Get_Val('Select c_code  From ' || V_Tbl_Mst_Nm || '  
                                                                                                        Where ' || V_Fld_Ser || '=' || P_Doc_Ser_Ref || '                                                                
         Exception
         End;
         Begin
            G_Ac_Code_Dtl := Ys_Gen_Pkg.Get_Val('Select v_code  From ' || V_Tbl_Mst_Nm || '  
                                                                                                            Where ' || V_Fld_Ser || '=' || P_Doc_Ser_Ref || '                                                                
         Exception
         End;
         Begin
            G_A_Code := Ys_Gen_Pkg.Get_Val('Select AC_CODE  From ' || V_Tbl_Mst_Nm || '  
                                                                                                    Where ' || V_Fld_Ser || '=' || P_Doc_Ser_Ref || '                                                    
         Exception
         End;
         Begin
            G_A_Code := Ys_Gen_Pkg.Get_Val('Select A_CODE  From ' || V_Tbl_Mst_Nm || '  
                                                                                                    Where ' || V_Fld_Ser || '=' || P_Doc_Ser_Ref || '                                                                
         Exception
         End;
         Begin
            G_Ac_Code_Dtl := Ys_Gen_Pkg.Get_Val('Select AC_CODE_DTL  From ' || V_Tbl_Mst_Nm || '  
                                                                                                        Where ' || V_Fld_Ser || '=' || P_Doc_Ser_Ref || '                                                                
         Exception
         End;
         Begin
            G_Ac_Dtl_Typ := Ys_Gen_Pkg.Get_Val('Select AC_DTL_TYP  From ' || V_Tbl_Mst_Nm || '  
                                                                                                        Where ' || V_Fld_Ser || '=' || P_Doc_Ser_Ref || '                                                                
         Exception
         End;
      Begin
      Exception
      End;
Procedure Chk_doc_prprtn_sts(  P_Doc_Type_Ref   In Number
   Begin   
         Begin
            Select Count(1)
            From   Ias_chk_doc_inout_qty_mst
            Where  Doc_type_ref = P_Doc_Type_Ref And Doc_ser_ref = P_doc_ser_Ref;
         Exception
         End;
            Begin
               Select Doc_no
               From   Ias_chk_doc_inout_qty_mst
               Where  Doc_type_ref = P_Doc_Type_Ref 
            Exception
            End;
            Begin
               Select 1
               From   Ias_chk_doc_inout_qty_mst
               Where  Doc_type_ref = P_Doc_Type_Ref 
            Exception
            End;
               Begin
                  Select 1
                  From   Ias_chk_doc_inout_qty_mst
                  Where  Doc_type_ref = P_Doc_Type_Ref 
               Exception
               End;
   Exception
   End;
Procedure Updt_doc_prprtn( P_prss_typ       In Number     --1 insert 2 --delete                                                                                                                                                                                                        -- 1 insert 2--DELETE
      Begin
         Select 1
         From   Ias_chk_doc_inout_qty_mst
         Where  Doc_type_ref = P_doc_type_ref And Doc_ser_ref = P_doc_ser_ref And Rownum <= 1;
      Exception
      End;
         Begin
            Update Ias_chk_doc_inout_qty_mst
             Where Doc_type_ref = P_doc_type_ref 
         Exception
         End;
      Begin
         Update Ias_chk_doc_inout_qty_mst
          Where Doc_type_ref = P_doc_type_ref 
      Exception
      End;
Procedure Clr_glbl_var Is
CREATE OR REPLACE PACKAGE INV_MOBILE_TRNS_PKG IS
FUNCTION  GET_BRN_XML     ( P_USR_NO  In Number
FUNCTION  GET_PREQ_TYPES_XML     ( P_USR_NO  In Number
FUNCTION  GET_W_Code_XML     ( P_USR_NO  In Number
FUNCTION  GET_I_Code_XML     ( P_USR_NO  In Number
PROCEDURE INSRT_OUT_REQUEST_PRC(   P_XML in             CLOB,                       
PROCEDURE INSRT_OUT_REQUESTT_MST(    P_OUT_REQ_TYPE       IN IAS_OUT_REQUEST_MST.OUT_REQ_TYPE%TYPE      DEFAULT NULL
PROCEDURE INSRT_OUT_REQUESTT_DTL(    P_I_CODE           IN IAS_OUT_REQUEST_DTL.I_CODE%TYPE            DEFA
CREATE OR REPLACE PACKAGE BODY INV_MOBILE_TRNS_PKG IS
FUNCTION  GET_BRN_XML( P_USR_NO  In Number
  BEGIN
        V_SQL:='Select Brn_no,Decode('||P_LNG_NO||',1,Nvl(BRN_LNAME,BRN_FNAME),
                From S_Brn 
                Where (('||P_USR_NO||'=1) 
                               Or Exists (select 1 From S_Brn_Usr_Priv
                                          Where U_Id = '||P_USR_NO||'                            
               Order By Cmp_No , Brn_No';                                     
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
          END;
  EXCEPTION
 FUNCTION  GET_PREQ_TYPES_XML( P_USR_NO  In Number
  BEGIN
        V_SQL:='Select Req_Type,Decode('||P_LNG_NO||',1,Nvl(Req_Name,Req_E_Name),Nvl(Req_E_Name,Req_Name))PR_NAME
                  From Request_Types
                   Where '||P_USR_NO||'=1 Or Exists (Select 1 From priv_req_type
                                                  Where priv_req_type.req_type = request_types. req_type
                   Order by req_type';                                     
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
          END;
  EXCEPTION
 FUNCTION  GET_W_Code_XML( P_USR_NO  In Number
  BEGIN
        V_SQL:='Select W_Code,Decode('||P_LNG_NO||',1,Nvl(W_Name,W_E_Name),Nvl(W_E_Name,W_Name)) W_Name 
                From Warehouse_Details  
                Where Exists (Select 1 From Privilege_Wh 
                              Where U_Id='||P_USR_NO||' 
                Order By W_Code';                                     
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
          END;
  EXCEPTION
 FUNCTION  GET_I_Code_XML( P_USR_NO  In Number
  BEGIN
        V_SQL:='Select M.I_Code,Decode('||P_USR_NO||',1,nvl(I_name,I_e_name),nvl(I_e_name,I_name) ) I_
                from Ias_Itm_Mst M,Ias_Itm_Dtl D 
                where M.I_Code=D.I_Code
                AND Exists (select 1 from privilege_gc where u_id='||P_USR_NO||' and g_code=M.g_code and add_flag=1 and RowNum<=1)
                Order By I_Code,I_Name ';                                     
          BEGIN       
             SELECT COUNT(*) INTO V_CNT FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYP,'/ROWSET/ROW') ))XMLDUMMAY;
          EXCEPTION
          END;
  EXCEPTION
PROCEDURE INSRT_OUT_REQUEST_PRC(  P_XML in             CLOB,                       
                        (SELECT      EXTRACTVALUE (VALUE (XMLMSTDMY), '*/OUT_REQ_TYPE        ') AS  OUT_REQ_TYPE
                        FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE, '/OUT_REQUEST/OUT_REQUEST_MST'))) XMLMSTDMY) 
               BEGIN                  --(2)
               EXCEPTION 
               END; --(2)                                  
                        (SELECT      EXTRACTVALUE (VALUE (XMLMSTDMY), '*/I_CODE               ') AS  I_CODE
                        FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE, '/OUT_REQUEST/OUT_REQUEST_DTL')
            BEGIN                  --(2)
               END; --(2)          
       Begin  
             Exception 
                Raise_Application_Error(-20002,'Err When Insert Into S_Apprvd_Mov = '||Sqlerrm);
    EXCEPTION
End;       
 PROCEDURE INSRT_OUT_REQUESTT_MST(   P_OUT_REQ_TYPE       IN IAS_OUT_REQUEST_MST.OUT_REQ_TYPE%TYPE      DEFAULT NULL
   BEGIN       
             SELECT Request_Serial INTO V_Ser_Type FROM Ias_Para_INV;
             EXCEPTION
    END; 
  BEGIN
                SELECT 1 INTO V_CNT 
                FROM   Request_Types
                WHERE  REQ_TYPE  =P_OUT_REQ_TYPE 
            EXCEPTION
  BEGIN
                SELECT 1 INTO V_CNT 
                FROM   S_BRN
                WHERE  BRN_NO  =P_BRN_NO
            EXCEPTION
       BEGIN
                SELECT 1 INTO V_CNT 
                FROM   WAREHOUSE_DETAILS
                WHERE  W_CODE  =G_OUT_W_CODE 
            EXCEPTION
   INSERT INTO IAS_OUT_REQUEST_MST
          EXCEPTION  WHEN OTHERS THEN
                       RAISE_APPLICATION_ERROR (-20012,'Error When Insert Into IAS_OUT_REQUEST_MST  , '||CHR(10)||SQLERRM);                      
          END; 
PROCEDURE INSRT_OUT_REQUESTT_DTL(    P_I_CODE           IN IAS_OUT_REQUEST_DTL.I_CODE%TYPE            DEFAULT NULL
BEGIN   
     BEGIN
                SELECT 1 INTO V_CNT 
                FROM   IAS_ITM_MST
                WHERE  I_CODE  =P_I_CODE 
            EXCEPTION
     BEGIN
                SELECT 1 INTO V_CNT 
                FROM   IAS_ITM_DTL
                WHERE  I_CODE  =P_I_CODE 
            EXCEPTION
INSERT INTO IAS_OUT_REQUEST_DTL( OUT_REQ_NO
          EXCEPTION  WHEN OTHERS THEN
                       RAISE_APPLICATION_ERROR (-20012,'Error When Insert Into IAS_OUT_REQUEST_DTL , '||CHR(10)||SQLERRM);
          END;    
CREATE OR REPLACE PACKAGE  IAS_INV_ITM_SRL_PKG IS
PROCEDURE SHW_DOC_DATA( SQL_CV              IN OUT TRNS_CV                         
PROCEDURE SHW_ITM_DOC ( SQL_CV     IN OUT TRNS_CV
PROCEDURE  GET_FLD_VAL(  P_DOC_TYPE       IN NUMBER,
PROCEDURE FETCH_SERIALNO_DATA (   P_SRL_TBL                  IN OUT   SRL_TBL_TCH,
FUNCTION CHK_SERIALNO_DATA (     P_PRSS_TYP        IN NUMBER DEFAULT NULL, -- 1 CHANGE QTY, 2 DELETE RECORD, 3  POST COMMIT
CREATE OR REPLACE PACKAGE BODY  IAS_INV_ITM_SRL_PKG IS 
PROCEDURE SHW_DOC_DATA( SQL_CV              IN OUT TRNS_CV                         
_V_DOC_TYPE','INV_DOC_TYPE','WHERE DOC_TYPE='||P_DOC_TYPE_REF||' AND ROWNUM<=1'));
         OPEN SQL_CV FOR  'SELECT   NVL(M.OUT_NO,M.DOC_NO) DOC_NO,
                                        WHEN M.DOC_TYPE=2 AND EXISTS (SELECT 1 FROM GR_NOTE WHERE G_SER=M.DOC_SER AND PI_TYPE=2 AND NVL(PUR_TYPE,0)=2 AND ROWNUM<=1 )THEN 44
                                         ELSE TO_NUMBER(ys_gen_pkg.get_fld_value (''INV_V_DOC_TYPE'',''DOC_TYPE'',''WHERE INV_DOC_TYPE=''||M.DOC_TYPE||'' AND ROWNUM<=1'')) 
                            FROM     IAS_ITEM_SERIALNO M 
                                     WHERE  M.DOC_TYPE= NVL(:V_DOC_TYPE,M.DOC_TYPE)
                                                    SELECT 1
                                                    FROM   s_brn_usr_priv
                                                    WHERE  u_id = :P_USR_NO
                                    GROUP BY M.DOC_NO,
 EXCEPTION
PROCEDURE SHW_ITM_DOC ( SQL_CV     IN OUT TRNS_CV
    SELECT TB_MST,TB_DTL,FLD_SER,FLD_NO,DOC_APPRVD_FLG,INV_DOC_TYPE,FLD_DATE,FLD_JV_TYPE,INOUT
      FROM INV_V_DOC_TYPE A,IAS_SYS.ITEM_MOVEMENT_TYPE B
        WHERE A.INV_DOC_TYPE=B.DOC_TYPE
   V_SQL:=' SELECT  D.RCRD_NO ,
                      FROM ITEM_MOVEMENT D,IAS_ITM_MST I
                     WHERE  D.DOC_SER='||P_DOC_SER||'
  V_SQL:=' SELECT  D.RCRD_NO ,
                      FROM '||V_TBL_MST||' M,'||V_TBL_DTL||' D,IAS_ITM_MST I
                     WHERE  M.'||V_FLD_SER||'=D.'||V_FLD_SER||'
 EXCEPTION
PROCEDURE  GET_FLD_VAL(  P_DOC_TYPE       IN NUMBER,
 BEGIN
             BEGIN
             SELECT TB_MST,TB_DTL,FLD_SER,FLD_NO,DOC_APPRVD_FLG,INV_DOC_TYPE,FLD_DATE,FLD_JV_TYPE,fld_desc
                  FROM INV_V_DOC_TYPE 
                    WHERE DOC_TYPE= P_DOC_TYPE          
             EXCEPTION WHEN OTHERS THEN
             END;
                 BEGIN
                    V_AC_CODE :=YS_GEN_PKG.GET_VAL('Select AC_CODE  From '||V_TBL_MST||'  
                                                                                                        Where '||V_FLD_SER||'='|| P_DOC_SER|| '                                                                
                 EXCEPTION WHEN OTHERS THEN
                 END;
                  BEGIN
                      V_AC_CODE :=YS_GEN_PKG.GET_VAL('Select A_CODE  From '||V_TBL_MST||'  
                                                                                                        Where '||V_FLD_SER||'='|| P_DOC_SER|| '                                                                
                  EXCEPTION WHEN OTHERS THEN
                  END;
   BEGIN
    V_AC_CODE_DTL:=YS_GEN_PKG.GET_VAL('Select AC_CODE_DTL  From '||V_TBL_MST||'  
                                                        Where '||V_FLD_SER||'='|| P_DOC_SER|| '                                                                
       EXCEPTION WHEN OTHERS THEN
  END;
   BEGIN
    V_AC_DTL_TYP :=YS_GEN_PKG.GET_VAL('Select AC_DTL_TYP  From '||V_TBL_MST||'  
                                                        Where '||V_FLD_SER||'='|| P_DOC_SER|| '                                                                
   EXCEPTION WHEN OTHERS THEN
    END;
                          BEGIN
                             V_AC_CODE_DTL:=YS_GEN_PKG.GET_VAL('Select c_code  From '||V_TBL_MST||'  
                                                                                                                        Where '||V_FLD_SER||'='|| P_DOC_SER|| '                                                                 
                          EXCEPTION WHEN OTHERS THEN
                          END;
                          BEGIN
                             V_AC_CODE_DTL :=YS_GEN_PKG.GET_VAL('Select v_code  From '||V_TBL_MST||'  
                                                                                                                        Where '||V_FLD_SER||'='|| P_DOC_SER|| '                                                                 
                          EXCEPTION WHEN OTHERS THEN
                          END;
           BEGIN   
           EXCEPTION WHEN OTHERS THEN
            END;          
   BEGIN   
    EXECUTE IMMEDIATE(' SELECT         '||V_FLD_NO||'   ,
                      FROM '||V_TBL_MST||'
                     WHERE  '||V_FLD_SER||'= :P_DOC_SER  
    EXCEPTION WHEN OTHERS THEN
    END;                 
 PROCEDURE FETCH_SERIALNO_DATA (   P_SRL_TBL        IN OUT   SRL_TBL_TCH,
(  SELECT Serialno,Desc_No ,0 FREE_FLG
  FROM Ias_item_serialno
 WHERE i_code = '''||P_I_CODE||''' 
   Group By i_code,w_code,Serialno,Desc_No
Order By Lpad(Serialno,20,''0'') ) ';
                                        Select SerialNo,Desc_No,Free_Flg
                                              From Ias_item_serialno
                                            WHERE  i_code = '''||P_I_CODE||''' 
                                                   And SerialNo In ( Select SerialNo From Ias_item_serialno  A
                                                                      Where (Doc_Type=1 Or (Doc_Type=3 and not exists(Select 1 From Ias_Rt_Bill_Mst Where Rt_Bill_Ser=a.Doc_Ser And RowNum<=1)))
                                                                       Group By SerialNo 
                                     Select SerialNo,Desc_No,Free_Flg
                                              From IAS_V_ITEM_SERIALNO_YR
                                             WHERE  i_code = '''||P_I_CODE||''' 
                                               And SerialNo In ( Select SerialNo From (
                                                                 Select SerialNo,Doc_Type,In_Out From Ias_Item_SerialNo Where Doc_Type In (1,3)
                                                                 Select SerialNo,Doc_Type,In_Out From IAS_V_ITEM_SERIALNO_YR Where Doc_Type In (1,3))
                                                                 Group By SerialNo Having Sum(In_Out)<0) )'; 
                        Begin
                        Select 1 into V_Cnt
                         From user_objects
                          Where Object_Name ='IAS_V_ITEM_SERIALNO_YR'
                    Exception When Others Then
                    End; 
                                        Select SerialNo,Desc_No,Free_Flg
                                              From IAS_V_ITEM_SERIALNO_YR
                                             WHERE  i_code = '''||P_I_CODE||''' 
                                               And SerialNo In ( Select SerialNo From (
                                                                 Select SerialNo,Doc_Type,In_Out From Ias_Item_SerialNo Where Doc_Type In (1,3)
                                                                 Select SerialNo,Doc_Type,In_Out From IAS_V_ITEM_SERIALNO_YR Where Doc_Type In (1,3))
                                                                 Group By SerialNo Having Sum(In_Out)<0) )'; 
                              Select SerialNo,Desc_No,Free_Flg
                                      From Ias_item_serialno
                                    WHERE  i_code = '''||P_I_CODE||''' 
                                       And SerialNo In ( Select SerialNo From Ias_item_serialno 
                                                          Where Doc_Type In (1,3) Group By SerialNo 
                       V_SQL:=' ( Select serialno,Desc_No,Sum(Free_Flg) Free_Flg
                                      FROM Ias_item_serialno
                                     WHERE    i_code = '''||P_I_CODE||''' 
                                        Group By I_Code,W_Code,Serialno ,Desc_No
                     V_SQL:=' ( Select serialno,Desc_No,Sum(Free_Flg) Free_Flg
                                      FROM Ias_V_Item_Serialno_Yr
                                         WHERE    i_code = '''||P_I_CODE||''' 
                                        Group By I_Code,W_Code,Serialno ,Desc_No
                      V_SQL:=' ( Select serialno,Desc_No,Sum(Free_Flg) Free_Flg
                                      FROM Ias_item_serialno
                                         WHERE    i_code = '''||P_I_CODE||''' 
                                        Group By I_Code,W_Code,Serialno ,Desc_No
                      Select Serialno ,Desc_No,0 FREE_FLG
                        From Ias_Item_Serialno
                          WHERE    i_code = '''||P_I_CODE||''' 
              V_SQL:='INSERT INTO INV_ITM_SRLNO_TMP( DOC_NO ,DOC_SER, RCRD_NO, I_CODE,SERIALNO,DESC_NO,FREE_FLG,  EXPIRE_DATE, BATCH_NO,  W_CODE,F_DOC_NO, F_DOC_SER,F_RCRD_NO  ,F_W_CODE )
                          SELECT  '''||P_DOC_NO||''' DOC_NO , '''||P_DOC_SER||''' DOC_SER, 
                                           '''||P_F_DOC_SER||''' F_DOC_SER,'''||P_F_RCRD_NO||'''  F_RCRD_NO,'''||P_F_W_CODE||'''  F_W_CODE  FROM   '||V_SQL;      
         V_SQL:='SELECT   SERIALNO,DESC_NO,0 FREE_FLG  FROM  '||V_SQL ;
    EXCEPTION
 FUNCTION CHK_SERIALNO_DATA (    P_PRSS_TYP        IN NUMBER DEFAULT NULL, -- 1 CHANGE QTY, 2 DELETE RECORD, 3  POST COMMIT 
 BEGIN
            BEGIN
               SELECT 1 INTO V_CNT FROM GR_NOTE WHERE DOC_SER=P_DOC_SER AND PI_TYPE=2 AND NVL(PUR_TYPE,0)=2 AND ROWNUM<=1 ;  
            EXCEPTION WHEN OTHERS THEN 
            END;
          V_DOC_TYPE:=TO_NUMBER(ys_gen_pkg.get_fld_value ('INV_V_DOC_TYPE','DOC_TYPE','WHERE INV_DOC_TYPE='||P_DOC_TYPE||' AND ROWNUM<=1'));
         BEGIN
             SELECT TB_MST,TB_DTL,FLD_SER,FLD_NO
                  FROM INV_V_DOC_TYPE 
                    WHERE  DOC_TYPE= V_DOC_TYPE                     
         EXCEPTION WHEN OTHERS THEN 
         END;
             V_SQL:=' SELECT 1, I_CODE ,SUM(DECODE(NVL(FREE_FLG,0),0,1,0)) I_QTY,SUM(DECODE(NVL(FREE_FLG,0),0,0,1)) FREE_QTY                    
                           FROM Ias_item_serialno 
                              WHERE  I_CODE              = '''||P_I_code||''' 
                        GROUP BY I_CODE ';
              V_SQL:='SELECT 1,I_CODE, ,SUM(DECODE(NVL(FREE_FLG,0),0,1,0)) I_QTY,SUM(DECODE(NVL(FREE_FLG,0),0,0,1)) FREE_QTY FROM IAS_ITEM_SERIALNO
                         WHERE (I_CODE,RCRD_NO_DOC)IN(Select  D.I_CODE,D.RCRD_NO  From '||V_TBL_DTL||' D 
                                        Where D.'||V_FLD_SER||'='||P_Doc_Ser||'
                                         AND (NVL(D.I_QTY,0)'||V_FLD_FREE_QTY||')<NVL((SELECT COUNT(SERIALNO) FROM IAS_ITEM_SERIALNO
                                                                                                             WHERE W_CODE=D.W_CODE
                                           AND ROWNUM<=1 )'||V_WHR_SRL||' GROUP BY I_CODE ';
              BEGIN
              EXCEPTION WHEN no_data_found then
 EXCEPTION when OTHERS THEN 
CREATE OR REPLACE PACKAGE IAS_INV_KIT_ITM_PKG IS
FUNCTION GET_KIT_AVLQTY_FNC(P_Kit_Item_No       IN IAS_ITM_DTL.I_CODE%TYPE   DEFAULT NULL ,                                                                             
PROCEDURE SHW_KIT_ITM_AVLQTY_PRC ( SQL_CV             IN OUT TRNS_CV ,
CREATE OR REPLACE PACKAGE BODY IAS_INV_KIT_ITM_PKG IS 
 FUNCTION  GET_KIT_AVLQTY_FNC( P_Kit_Item_No       IN IAS_ITM_DTL.I_CODE%TYPE   DEFAULT NULL ,                                                                             
                G_DYN_QRY:='  Select M.Kit_Item_No, I.I_NAME,I.I_E_NAME, D.Itm_Unt,M.W_CODE  w_code,D.P_SIZE ,TRUNC(ROUND(M.Avl_Qty/D.P_SIZE,4),4) Avl_Qty
                                                     from ( 
                                                     SELECT Kit_Item_No,W_CODE,MIN(Avl_Qty) Avl_Qty FROM(
                                                     select Kit_Item_No, I_Code,Itm_Unt,W.W_CODE,
                                                                         From   Kit_Items ,WAREHOUSE_DETAILS W
                                                                       where Kit_Item_No=NVL(:P_Kit_Item_No,Kit_Item_No)
                                                    GROUP BY Kit_Item_No,W_CODE) M,IAS_ITM_DTL D,IAS_ITM_MST I
                                                      WHERE I.I_CODE=D.I_CODE
                                                   order by Kit_Item_No '  ;                         
                               BEGIN
                                                             BEGIN
                                                             EXCEPTION
                                                             END;
                                EXCEPTION WHEN OTHERS THEN
                                 END;                             
               BEGIN
                  G_DYN_QRY:=' Select M.Kit_Item_No, I.I_NAME,I.I_E_NAME, D.Itm_Unt,NULL  w_code,D.P_SIZE ,TRUNC(ROUND(M.Avl_Qty/D.P_SIZE,4),4) Avl_Qty
                                                 from ( 
                                                 SELECT Kit_Item_No,MIN(Avl_Qty) Avl_Qty FROM(
                                                 select Kit_Item_No, I_Code,Itm_Unt,
                                                                     From   Kit_Items 
                                                                   where Kit_Item_No=NVL(:P_Kit_Item_No,Kit_Item_No))
                                                GROUP BY Kit_Item_No) M,IAS_ITM_DTL D,IAS_ITM_MST I
                                                  WHERE I.I_CODE=D.I_CODE
                                               order by Kit_Item_No ';
                                                             BEGIN
                                                             EXCEPTION
                                                             END;
                                EXCEPTION WHEN OTHERS THEN
                                 END;
PROCEDURE SHW_KIT_ITM_AVLQTY_PRC ( SQL_CV             IN OUT TRNS_CV ,
    V_WHR:=' WHERE 1=1 '||P_WHR;
 V_SQL:= ' SELECT Kit_Item_No, I_NAME,I_E_NAME, Itm_Unt,W_CODE  ,P_SIZE, Avl_Qty 
                                            FROM TABLE(IAS_INV_KIT_ITM_PKG.GET_KIT_AVLQTY_FNC(P_Kit_Item_No => :P_Kit_Item_No,                                                                             
 EXCEPTION
CREATE OR REPLACE Package Ias_Itm_Barcode_Pkg   Is
Procedure Insrt_Itm_Barcode_Serialno_Prc (P_Apprvd_Bracode_Same_Serialno  In Number                               ,
CREATE OR REPLACE Package Body Ias_Itm_Barcode_Pkg Is
Procedure Insrt_Itm_Barcode_Serialno_Prc (P_Apprvd_Bracode_Same_Serialno  In Number                               ,
 Begin
         Begin
           Select 1 Into V_Cnt
            From Ias_Itm_Unt_Barcode 
              Where I_Code   = P_I_Code
         Exception 
         End;   
            --## Insert Into Ias_Itm_Unt_Barcode
            Begin
              Insert Into Ias_Itm_Unt_Barcode(I_Code      ,
            Exception
CREATE OR REPLACE Package Inv_Qty_Pkg Is
   Function Get_Avl_Qty_Fnc (  P_Itm_Code      In Item_Movement.I_Code%Type      Default Null 
Function Get_Avl_Qty_By_Typ_Fnc  ( P_Itm_Code        In Item_Movement.I_Code%Type      Default Null 
CREATE OR REPLACE Package Body Inv_Qty_Pkg Is 
Function Get_Avl_Qty_Fnc ( P_Itm_Code        In Item_Movement.I_Code%Type      Default Null 
     Begin 
        Select Nvl(Use_Out_Bills,0),Nvl(Add_Porder_Qty,0),
                From Ias_Para_Ar, Ias_Para_Ap,Ias_Para_Inv  ;
      Exception  When Others Then
            V_Sql:='Select I_CODE,W_CODE,Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0) /Nvl( '||V_Itm_Size||',1) AVL_QTY  ,expire_date , batch_no      
                 From Item_Movement
                Where I_CODE = Decode('''||P_Itm_Code||''',Null,I_CODE,'''||P_Itm_Code||''')
                    GROUP BY I_CODE,
            V_Sql:='Select I_CODE,0 W_CODE,Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0) /Nvl( '||V_Itm_Size||',1) AVL_QTY  ,expire_date , batch_no      
                         From Item_Movement
                        Where I_CODE = Decode('''||P_Itm_Code||''',Null,I_CODE,'''||P_Itm_Code||''')                      
                            GROUP BY I_CODE,                                
            V_Sql:='Select I_CODE,W_CODE,Nvl(Sum(Distinct Avl_Qty),0)/Nvl( '||V_Itm_Size||',1) ,NULL expire_date , NULL batch_no                 
                     From Ias_Itm_Wcode
                Where I_CODE = Decode('''||P_Itm_Code||''',Null,I_CODE,'''||P_Itm_Code||''')
                  GROUP BY I_CODE,W_CODE ';
            V_Sql:='Select I_CODE,0 W_CODE,Nvl(Sum(Distinct Avl_Qty),0)/Nvl( '||V_Itm_Size||',1) ,NULL expire_date , NULL batch_no                 
                     From Ias_Itm_Wcode
                Where I_CODE = Decode('''||P_Itm_Code||''',Null,I_CODE,'''||P_Itm_Code||''')  '||P_Whr||'             
                  GROUP BY I_CODE ';
     Begin
                  V_Rsrv_Qty := Ias_Gen_Pkg.Get_Cnt('Select Nvl(Sum(Nvl(CP_Qty,0)),0) /Nvl('||V_Itm_Size||',1)
                                                       From Ias_Reserve_Dtl
                                                         Where I_Code             = '''||V_Blk_Tbl_Itm(I).Itm_Code||'''
                    Begin
                        Begin
                        Select 1 into V_Cnt
                         From user_objects
                          Where Object_Name ='IAS_V_BILL_DTL_OUT'
                    Exception When Others Then
                    End; 
                        Execute Immediate' SELECT  SUM((NVL(IAS_BILL_DTL.I_QTY,0)+NVL(IAS_BILL_DTL.FREE_QTY,0))*IAS_BILL_DTL.P_SIZE)-
                                                               FROM '||V_Tbl_Dtl||'
                                                       WHERE  I_CODE='''||V_Blk_Tbl_Itm(I).Itm_Code||'''         
                        Execute Immediate' SELECT  SUM((NVL(IAS_BILL_DTL.I_QTY,0)+NVL(IAS_BILL_DTL.FREE_QTY,0))*IAS_BILL_DTL.P_SIZE)-
                                                               FROM '||V_Tbl_Mst||V_Tbl_Dtl||'
                                                       WHERE IAS_BILL_DTL.BILL_SER=IAS_BILL_MST.BILL_SER
                    Exception 
                    End; 
                    Begin
                        Begin
                        Select 1 Into V_Cnt
                         From user_objects
                          Where Object_Name ='IAS_V_RT_BILL_DTL_OUT'
                    Exception When Others Then
                    End; 
                        Execute Immediate' SELECT  SUM((NVL(IAS_RT_BILL_DTL.I_QTY,0)+NVL(IAS_RT_BILL_DTL.FREE_QTY,0))*IAS_RT_BILL_DTL.P_SIZE)-
                                                               FROM '||V_Tbl_Dtl||'
                                                       WHERE  I_CODE='''||V_Blk_Tbl_Itm(I).Itm_Code||'''         
                          Execute Immediate' SELECT  SUM((NVL(IAS_RT_BILL_DTL.I_QTY,0)+NVL(IAS_RT_BILL_DTL.FREE_QTY,0))*IAS_RT_BILL_DTL.P_SIZE)-
                                                  FROM IAS_RT_BILL_DTL,IAS_RT_BILL_MST
                                                  WHERE IAS_RT_BILL_DTL.RT_BILL_SER=IAS_RT_BILL_MST.RT_BILL_SER
                    Exception 
                    End;
                    Begin
                                      SELECT SUM((NVL(P_ORDER_DETAIL.I_QTY,0)+NVL(P_ORDER_DETAIL.FREE_QTY,0))*P_ORDER_DETAIL.P_SIZE)-
                                      FROM  P_ORDER ,P_ORDER_DETAIL 
                                      WHERE P_ORDER.PO_SER=P_ORDER_DETAIL.PO_SER
                    Exception 
                    End;                                     
                 Begin
                        Execute Immediate'  SELECT SUM((NVL(GR_DETAIL.I_QTY,0)+NVL(GR_DETAIL.FREE_QTY,0))*GR_DETAIL.P_SIZE)                         
                                                  FROM   GR_NOTE,GR_DETAIL
                                                  WHERE  GR_NOTE.GR_NO = GR_DETAIL.GR_NO 
                 Exception 
                 End;                                                                                                      
                 Begin
                  Execute Immediate'SELECT SUM(DECODE(IAS_WHTRNS_MST.TR_INOUT_TYPE,1,NVL(P_QTY,0),2,-1*NVL(P_QTY,0)))                         
                                          FROM IAS_WHTRNS_MST,IAS_WHTRNS_DTL
                                          WHERE  IAS_WHTRNS_MST.TR_SER = IAS_WHTRNS_DTL.TR_SER
                 Exception 
                 End;                            
                    Begin
                         V_Sqlstr:=' Select Nvl(Sum(P_Qty),0) From '||P_Tbl_Nm_Mst||','||P_Tbl_Nm_Dtl||
                        '  Where  '||P_Tbl_Nm_Mst||'.Bill_no='||P_Tbl_Nm_Dtl||'.Bill_no  
                          Begin
                          Exception 
                          End;
                          V_Sqlstr:=' Select Nvl(Sum(P_Qty),0) From '||P_Tbl_Nm_Mst||','||P_Tbl_Nm_Dtl||
                           '  Where  '||P_Tbl_Nm_Mst||'.Rt_Bill_no='||P_Tbl_Nm_Dtl||'.Rt_Bill_no  
       Begin
                          Exception 
                          End;
                   Exception
                   End;       
                    Begin
                         V_Sqlstr:=' Select Nvl(Sum(P_Qty),0) From '||P_Tbl_Nm_Mst||','||P_Tbl_Nm_Dtl||
                        '  Where  '||P_Tbl_Nm_Mst||'.Bill_Srl='||P_Tbl_Nm_Dtl||'.Bill_Srl  
                          Begin
                          Exception 
                          End;
                          V_Sqlstr:=' Select Nvl(Sum(P_Qty),0) From '||P_Tbl_Nm_Mst||','||P_Tbl_Nm_Dtl||
                           '  Where  '||P_Tbl_Nm_Mst||'.Rt_Bill_Srl='||P_Tbl_Nm_Dtl||'.Rt_Bill_Srl  
                          Begin
                          Exception 
                          End;
                   Exception
                   End;       
                    Begin
                         V_Sqlstr:=' Select Nvl(Sum(P_Qty),0) From '||P_Tbl_Nm_Mst||','||P_Tbl_Nm_Dtl||
                        '  Where  '||P_Tbl_Nm_Mst||'.Bill_no='||P_Tbl_Nm_Dtl||'.Bill_no  
                          Begin
                          Exception 
                          End;
                          V_Sqlstr:=' Select Nvl(Sum(P_Qty),0) From '||P_Tbl_Nm_Mst||','||P_Tbl_Nm_Dtl||
                           '  Where  '||P_Tbl_Nm_Mst||'.Rt_Bill_no='||P_Tbl_Nm_Dtl||'.Rt_Bill_no  
                           Begin
                           Exception 
                           End;
                    Exception
                    End;       
              Begin                                                        
                Select 
                 From Dual;
             End; 
     End;                                           
Function Get_Avl_Qty_By_Typ_Fnc  ( P_Itm_Code        In Item_Movement.I_Code%Type      Default Null 
 Begin
   Execute Immediate ' Select '|| V_Fld_Nm ||'  From 
 Exception 
CREATE OR REPLACE PACKAGE Ias_Web_Srvc_Pkg As
PROCEDURE SHW_ITM_DOC_PRPRTN ( SQL_CV     IN OUT TRNS_CV
Function Get_Auto_Xml( P_DOC_TYPE  IN NUMBER,
Function  Insrt_Web_Srvc(P_Url  In Varchar2 ,P_V_Content In Varchar2  ) Return Varchar ;
--##Web Service Calling procedures
procedure Call_Web_Service_char(p_url     varchar2,
procedure Call_Web_Service_blob(p_url     varchar2,
procedure Call_Web_Srvc_Ovr_Prxy_Srvc(p_url     varchar2,
function call_gnr_web_srvc( p_doc_type number,
function call_gnr_web_srvc( p_srvc_no number,
--##End Web Service Call Procedures
--##Request Body Procedure -- Josn Construction
function Bld_Rqust_body_json(p_srvc_no number,
--##end Request Body Procedure -- Josn Construction
function Knawat_GET_Token(p_sys_no number) return varchar2;
procedure Knawat_Add_Item(   p_sys_no number,
procedure Knawat_Update_Items   (p_sys_no number,
procedure Knawat_Update_Item(   p_sys_no number,
procedure Log_Api_Call( p_f_sys_no number,
FUNCTION blob_to_clob (p_data  IN  BLOB) RETURN CLOB;
FUNCTION Convert_Json_Array_Into_Object(p_obj sys.pljson,
CREATE OR REPLACE PACKAGE Body Ias_Web_Srvc_Pkg as
PROCEDURE SHW_ITM_DOC_PRPRTN ( SQL_CV     IN OUT TRNS_CV
      V_WHR:=' WHERE DOC_TYPE='|| P_DOC_TYPE|| ' AND ROWNUM<=1 ';
  OPEN SQL_CV FOR 'SELECT  D.RCRD_NO ,
                      FROM '||V_TBL_NM||' D,IAS_ITM_MST M
                     WHERE D.I_CODE = M.I_CODE
Function Get_Auto_Xml( P_DOC_TYPE  IN NUMBER,
  Begin
    V_WHR:=' WHERE DOC_TYPE='|| P_DOC_TYPE|| ' AND ROWNUM<=1 ';
    V_Sql:='SELECT  D.RCRD_NO ,
                      FROM '||V_TBL_NM||' D,IAS_ITM_MST M
                     WHERE D.I_CODE = M.I_CODE
          Begin       
             Select Count(*) Into V_Cnt From Table(Xmlsequence(Extract(V_Xml_Typ,'/ROWSET/ROW') ))Xmldummay;
          Exception
          End;
  Exception
 Function Insrt_Web_Srvc(P_Url  In Varchar2 ,P_V_Content In Varchar2                                                    
   Req := Utl_Http.Begin_Request (Url, 'POST', ' HTTP/1.1');
      Begin
      Exception
      End;
   Begin
   Exception
   End;
Exception
--##Web Service Calling procedures
procedure Call_Web_Service_char(p_url     varchar2,
  v_req := utl_http.begin_request(p_url, p_method,' HTTP/1.1');
  begin
  exception
  end;
  -- process the response from the HTTP call
  exception when others then
procedure Call_Web_Service_blob(p_url     varchar2,
  v_req := utl_http.begin_request(p_url, p_method,' HTTP/1.1');
  begin
  exception
  end;
  -- process the response from the HTTP call
  begin
  exception
  END;   
procedure Call_Web_Srvc_Ovr_Prxy_Srvc(p_url     varchar2,
        begin
        exception when others then 
        end;
function call_gnr_web_srvc( p_doc_type number,
  v_whr := ' WHERE DOC_TYPE='||P_DOC_TYPE||' AND ROWNUM<=1'; 
  select srvc_url,
  from gnr_web_srve_mst
  where srvc_no = p_srvc_no
  exception when others then 
function call_gnr_web_srvc( p_srvc_no number,
  select srvc_url,
  from gnr_web_srve_mst
  where srvc_no = p_srvc_no
  /*exception when others then 
--##End Web Service Call Procedures
--##Request Body Procedure -- Josn Construction
function Bld_Rqust_body_json(p_srvc_no number,
    v_cnt := ias_gen_pkg.get_cnt('select 1 from gnr_web_srve_mst where srvc_no='||p_srvc_no||' and rownum<=1');
    select rqust_body_tmplt,
    from gnr_web_srve_mst
    where srvc_no=p_srvc_no;
    begin
            (SELECT trim(regexp_substr(v_non_aray_objs, '[^,]+', 1, LEVEL)) l
             FROM dual
    exception when others then
    end;
--##end Request Body Procedure -- Josn Construction
function Knawat_Get_Token(p_sys_no number) return varchar2
begin 
    begin
        select get_token_srvc_no,proxy_srvc_url
        from IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no = p_sys_no;
    exception when no_data_found then
    end;
    BEGIN
        select srvc_url,
        from GNR_WEB_SRVE_MST
        where srvc_no = v_srvc_no;
    EXCEPTION WHEN NO_DATA_FOUND THEN
    end;
        update IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no=p_sys_no;
        update IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no=p_sys_no;
        update IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no=p_sys_no;
procedure Knawat_Add_Item(   p_sys_no number,
    begin
        select add_itm_srvc_no,pricing_lev,proxy_srvc_url
        from IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no = p_sys_no;
    exception when no_data_found then
    end;
    BEGIN
        select srvc_url,
        from GNR_WEB_SRVE_MST
        where srvc_no = v_srvc_no;
    EXCEPTION WHEN NO_DATA_FOUND THEN
    end;
    begin
        select api_token
        from IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no=p_sys_no;
    exception when no_data_found then 
    end;
    begin
        select gln_code
        from warehouse_details
        where w_code=p_w_code;
    exception when others then
        begin
            select nvl(avl_qty,0)
            from ias_itm_wcode
            where w_code=p_w_code
        exception when others then
        end;
        begin
            select nvl(i_price,0)
            from ias_item_price
            where i_code=p_i_code
        exception when others then
        end;
    begin
        select field10 
        from ias_itm_mst
        where i_code=p_i_code;
    exception when others then 
    end;
        BEGIN
                    update ias_itm_mst 
                    where i_code=p_i_code;
        END;
            update IAS_EXTRNL_SYS_OVR_WEB_API
            where e_sys_no=p_sys_no;
procedure Knawat_Update_Items(p_sys_no number,
                              p_success out boolean) --This procedure is just for testing please use Kanawat_update_Item
    begin
        select UPD_ITMS_SRVC_NO,pricing_lev,proxy_srvc_url
        from IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no = p_sys_no;
    exception when no_data_found then
    end;
    BEGIN
        select srvc_url,
        from GNR_WEB_SRVE_MST
        where srvc_no = v_srvc_no;
    EXCEPTION WHEN NO_DATA_FOUND THEN
    end;
    begin
        select api_token
        from IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no=p_sys_no;
    exception when no_data_found then 
    end;    
    log_api_call(1, v_url, 'Update Items', v_content, v_resp_txt, v_http_resp_code);                 
            update IAS_EXTRNL_SYS_OVR_WEB_API
            where e_sys_no=p_sys_no;
exception when others then 
procedure Knawat_Update_Item(   p_sys_no number,
    begin
        select upd_itm_srvc_no,pricing_lev,proxy_srvc_url
        from IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no = p_sys_no;
    exception when no_data_found then
    end;
    BEGIN
        select srvc_url,
        from GNR_WEB_SRVE_MST
        where srvc_no = v_srvc_no;
    EXCEPTION WHEN NO_DATA_FOUND THEN
    end;
    begin
        select api_token
        from IAS_EXTRNL_SYS_OVR_WEB_API
        where e_sys_no=p_sys_no;
    exception when no_data_found then 
    end;
    --This is a static construction, to avoid Mutuaing error when call from isnside trigger
    begin
        select gtin_code
        from ias_itm_mst
        where i_code=p_i_code;
    exception when others then
    end;
    begin
        select gln_code
        from warehouse_details
        where w_code=p_w_code;
    exception when others then
    end;
        begin
            select nvl(avl_qty,0)
            from ias_itm_wcode
            where w_code=p_w_code
        exception when others then
        end;
        begin
            select nvl(i_price,0)
            from ias_item_price
            where i_code=p_i_code
        exception when others then
        end;
            update IAS_EXTRNL_SYS_OVR_WEB_API
            where e_sys_no=p_sys_no;
procedure Log_Api_Call( p_f_sys_no number,
    select nvl(max(seq_no),0)+1 
    from IAS_EXTRNL_SYS_SYNC_LOG;
    INSERT INTO IAS_EXTRNL_SYS_SYNC_LOG (
FUNCTION blob_to_clob (p_data  IN  BLOB)
function Convert_Json_Array_Into_Object(p_obj sys.pljson,
Create Or Replace Package Inv_Itm_Price_Pkg As
Function Get_Itm_Prev_Price_Fnc ( P_I_Code      In Ias_Itm_Mst.I_Code%Type                      ,
Create Or Replace Package Body Inv_Itm_Price_Pkg As
    Function Get_Itm_Prev_Price_Fnc ( P_I_Code      In Ias_Itm_Mst.I_Code%Type                      ,
    Begin
             V_Qry:='Select Prev_I_Price From Ias_Item_Price_History
                        Where Ad_Date=(
                        Select Max(Ad_Date) From Ias_Item_Price_History
                        Where '||V_Whr || ') And '||V_Whr||' And Rownum<=1';
             Begin
             Exception When Others Then
             End;
     Exception When Others Then
CREATE OR REPLACE package Ias_Get_Othr_Qty_Pkg as
FUNCTION Out_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
FUNCTION Out_Rt_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
FUNCTION P_Order_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
FUNCTION Pi_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
Function Pos_Diff    ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
Function Tr_Qty_Not_Rec ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
CREATE OR REPLACE Package Body  Ias_Get_Othr_Qty_Pkg is
FUNCTION Out_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
  /*Select  Sum((Nvl(Ias_Bill_Dtl.I_Qty,0)+Nvl(Ias_Bi
  From Ias_Bill_Dtl,Ias_Bill_Mst
  Where Ias_Bill_Dtl.Bill_Ser=Ias_Bill_Mst.Bill_ser
  /*Begin
    Select 1 into V_Cnt
     From user_objects
      Where Object_Name ='IAS_V_BILL_MST_YR'
  Exception When Others Then
  End; 
     Begin
        Select 1 into V_Cnt
         From user_objects
          Where Object_Name ='IAS_V_BILL_DTL_YR'
     Exception When Others Then
     End; 
  Execute Immediate 'Select  Sum((Nvl(Ias_Bill_Dtl.I_Qty,0)+Nvl(Ias_Bill_Dtl.Free_Qty,0))*Ias_Bill_Dtl.P_Size)-
  From '||V_Tbl_Mst||V_Tbl_Dtl||'
  Where Ias_Bill_Dtl.Bill_Ser=Ias_Bill_Mst.Bill_ser
  Begin
    Select 1 into V_Cnt
     From user_objects
      Where Object_Name ='IAS_V_BILL_DTL_OUT'
  Exception When Others Then
  End;   
      Execute Immediate 'Select  Sum((Nvl(IAS_BILL_DTL.I_Qty,0)+Nvl(IAS_BILL_DTL.Free_Qty,0))*IAS_BILL_DTL.P_Size)-
      From '||V_Tbl_Dtl||'
      Where I_code='''||P_Icode||'''
     Execute Immediate 'Select  Sum((Nvl(Ias_Bill_Dtl.I_Qty,0)+Nvl(Ias_Bill_Dtl.Free_Qty,0))*Ias_Bill_Dtl.P_Size)-
      From '||V_Tbl_Mst||V_Tbl_Dtl||'
      Where Ias_Bill_Dtl.Bill_Ser=Ias_Bill_Mst.Bill_ser
Exception
FUNCTION Out_Rt_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
  /*Select  Sum((Nvl(Ias_Rt_Bill_Dtl.I_Qty,0)+Nvl(Ias_Rt_Bill_Dtl.Free_Qty,0))*Ias_Rt_Bill_Dtl.P_Size)-
  From Ias_Rt_Bill_Dtl,Ias_Rt_Bill_Mst
  Where Ias_Rt_Bill_Dtl.Rt_Bill_Ser=Ias_Rt_Bill_Mst.Rt_Bill_ser
  /*Begin
    Select 1 into V_Cnt
     From user_objects
      Where Object_Name ='IAS_V_RT_BILL_MST_YR'
  Exception When Others Then
  End; 
     Begin
        Select 1 into V_Cnt
         From user_objects
          Where Object_Name ='IAS_V_RT_BILL_DTL_YR'
     Exception When Others Then
     End; 
  Execute Immediate 'Select  Sum((Nvl(Ias_Rt_Bill_Dtl.I_Qty,0)+Nvl(Ias_Rt_Bill_Dtl.Free_Qty,0))*Ias_Rt_Bill_Dtl.P_Size)-
  From '||V_Tbl_Mst||V_Tbl_Dtl||'
  Where Ias_Rt_Bill_Dtl.Rt_Bill_Ser=Ias_Rt_Bill_Mst.Rt_Bill_ser
  Begin
    Select 1 into V_Cnt
     From user_objects
      Where Object_Name ='IAS_V_RT_BILL_DTL_OUT'
  Exception When Others Then
  End; 
     Execute Immediate 'Select  Sum((Nvl(Ias_Rt_Bill_Dtl.I_Qty,0)+Nvl(Ias_Rt_Bill_Dtl.Free_Qty,0))*Ias_Rt_Bill_Dtl.P_Size)-
      From '||V_Tbl_Dtl||'
      Where I_code='''||P_Icode||'''
     Execute Immediate 'Select  Sum((Nvl(Ias_Rt_Bill_Dtl.I_Qty,0)+Nvl(Ias_Rt_Bill_Dtl.Free_Qty,0))*Ias_Rt_Bill_Dtl.P_Size)-
      From '||V_Tbl_Mst||V_Tbl_Dtl||'
      Where Ias_Rt_Bill_Dtl.Rt_Bill_Ser=Ias_Rt_Bill_Mst.Rt_Bill_ser
Exception
FUNCTION P_Order_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
  Select Sum((Nvl(P_Order_Detail.I_Qty,0)+Nvl(P_Order_Detail.Free_Qty,0))*P_Order_Detail.P_Size)-
  From  P_Order ,P_Order_Detail 
  Where P_Order.Po_Ser=P_Order_Detail.Po_Ser
Exception
FUNCTION Pi_Bill_Diff (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
  Select Sum((Nvl(Gr_Detail.I_Qty,0)+Nvl(Gr_Detail.Free_Qty,0))*Gr_Detail.P_Size)
  From   Gr_Note,Gr_Detail
  Where  Gr_Note.Gr_No = Gr_Detail.Gr_No 
Exception
Function Pos_Diff ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
 V_SqlStr:=' Select Nvl(Sum(P_Qty),0) From '||P_Tbl_Nm_Mst||','||P_Tbl_Nm_Dtl||
'  Where  '||P_Tbl_Nm_Mst||'.Bill_no='||P_Tbl_Nm_Dtl||'.Bill_no  
V_SqlStr:=' Select Nvl(Sum(P_Qty),0) From '||P_Tbl_Nm_Mst||','||P_Tbl_Nm_Dtl||
'  Where  '||P_Tbl_Nm_Mst||'.Rt_Bill_no='||P_Tbl_Nm_Dtl||'.Rt_Bill_no  
Exception
Function Tr_Qty_Not_Rec ( P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,
  Select Sum(Decode(Ias_Whtrns_Mst.Tr_Inout_Type,1,Nvl(P_Qty,0),2,-1*Nvl(P_Qty,0)))
  From Ias_Whtrns_Mst,Ias_Whtrns_Dtl
  Where  Ias_Whtrns_Mst.Tr_Ser = Ias_Whtrns_Dtl.Tr_Ser
Exception
CREATE OR REPLACE Package INV_Fetch_Data_Pkg Is
Procedure Get_Diff_Costs_Gl_Inv ( a_cv         In Out t_cv                                ,
CREATE OR REPLACE Package Body INV_Fetch_Data_Pkg is
Procedure Get_Diff_Costs_Gl_INV ( a_cv         In Out t_cv                                ,
   'SELECT POST.DOC_TYPE DOC_TYPE,
   FROM INV_V_REEVLT_ITM_MOVMNT MOV,
   (SELECT POST_DTL.DOC_TYPE,
   ( SELECT FLG_DESC  
            FROM S_FLAGS
            WHERE LANG_NO  = :P_LANG_NO
            SUM(DECODE(NVL((SELECT 1 FROM EX_RATE WHERE L_F=1 AND STOCK_CUR=1),0),1,AMT,AMT_F)) POST_AMT
            FROM IAS_POST_DTL POST_DTL
            WHERE A_CODE IN (
            SELECT INV_A_CODE FROM IAS_CONN_ACC_INV_BY_GL
            GROUP BY DOC_TYPE,JV_TYPE,BRN_NO,DOC_NO,DOC_DATE,TO_CHAR(DOC_SER)
  WHERE POST.DOC_SER=MOV.DOC_SER '||V_Whr||'
  GROUP BY POST.DOC_TYPE,POST.DOCTYPNAME,POST.JV_TYPE,POST.BRN_NO,POST.DOC_NO,POST.DOC_SER,POST.DOC_DATE,NVL(MOV.AUDIT_REF,0),POST_AMT
  ORDER BY ABS(ABS(POST_AMT)-ABS(SUM(((I_QTY+NVL(FREE_QTY,0))*STK_COST)*IN_OUT))) DESC'
CREATE OR REPLACE Package Inv_Itm_Bin_Pkg Is
Procedure Inv_Auto_Fill_Bin_Prc( P_DOC_TYPE      IN NUMBER   ,
CREATE OR REPLACE Package Body Inv_Itm_Bin_Pkg Is 
Procedure INV_Auto_Fill_Bin_Prc( P_DOC_TYPE      IN NUMBER   ,
 Begin   
      Begin
         Select Lang_No
           From Ias_Sys.Lang_Def
          Where Lang_Dflt = 1 And Rownum <= 1;
      Exception
      End; 
      begin
        select nvl(USE_OUT_BILLS,0),nvl(USE_ITM_BIN_MOV,0),nvl(USE_PRPRTN_QTY,0) into v_USE_OUT_BILLS,V_USE_ITM_BIN_MOV,V_USE_PRPRTN_QTY from ias_para_ar,ias_para_inv;
     Exception When Others Then 
     Begin
     Select  doc_type,typ_no
                     From     Inv_Prprtn_Stp                                                                                                                                 
                    where typ_no not in(8,4) and nvl(PR_TYPE,0)<>1
                    and 1=(case  when doc_type=4 then (case when  Exists(select 1 from Inv_Prprtn_Stp where doc_type=53 and TYP_NO=21 and PR_TYPE=1 and V_USE_PRPRTN_QTY=1  and  rownum<=1 )then 0 else 1 end )
                                 when doc_type=13 then (case when  Exists(select 1 from Inv_Prprtn_Stp where doc_type=53 and TYP_NO=21 and PR_TYPE=1 and V_USE_PRPRTN_QTY=1 and rownum<=1 )then 0 else 1 end )
                                 when doc_type=11 then (case when  Exists(select 1 from Inv_Prprtn_Stp where doc_type=31 and TYP_NO=14 and PR_TYPE=1 and V_USE_PRPRTN_QTY=1 and rownum<=1 )then 0 else 1 end )
                                 when doc_type=5 then (case when  Exists(select 1 from Inv_Prprtn_Stp where doc_type=136 and TYP_NO=22 and PR_TYPE=1 and V_USE_PRPRTN_QTY=1 and rownum<=1 )then 0 else 1 end )
                                 when doc_type=14 then (case when  Exists(select 1 from Inv_Prprtn_Stp where doc_type=136 and TYP_NO=22 and PR_TYPE=1 and V_USE_PRPRTN_QTY=1 and rownum<=1 )then 0 else 1 end )
                                 when doc_type=6 and TYP_NO=5 then (case when  Exists(select 1 from Inv_Prprtn_Stp where doc_type=43 and TYP_NO=17 and PR_TYPE=1 and V_USE_PRPRTN_QTY=1 and rownum<=1 )then 0 else 1 end )
                    and Exists(Select 1
                                    From   Inv_V_Doc_Type
                                    Where  Doc_Type = Inv_Prprtn_Stp.Doc_Type 
      Exception When Others Then 
      Begin 
      select USE_BIN_MOV into  v_USE_BIN_MOV from WAREHOUSE_DETAILS
        where w_code=p_w_code
      Exception When Others Then 
      --Insert Into INV_ITM_BIN_MOVMNT_TMP(i_code,W_Code,Expire_Date,Batch_No,B_Code,i_qty)
               Select i_code,W_Code,Expire_Date,Batch_No,B_Code,sum(pick_qty)I_qty
                from (
                select s.* ,
         from (                
                Select  I_Code,Doc_Date,W_Code,Expire_Date,Batch_No,B_Code,Doc_Sequence,In_Out,I_Qty,                
                         nvl(Sum((CASE when i_qty- (Sum_In_Qty - Out_Qty)<=0 Then i_qty Else  (Sum_In_Qty - Out_Qty) END )) Over(Partition By I_Code,W_Code,Expire_Date,Batch_No Order By I_Code,W_Code, Expire_Date,Batch_No,Doc_Date,B_Code Rows between Unbounded Preceding and 1 Preceding),0) sum_prv_qty
                    From (      
                    Select I_Code,Doc_Date,W_Code,Expire_Date,Batch_No,B_Code,Doc_Sequence,In_Out,I_Qty
                                   Sum(I_Qty) Over(Partition By I_Code,W_Code,Expire_Date,Batch_No,B_Code,In_Out Order By I_Code,W_Code, Expire_Date,Batch_No,B_Code,Doc_Date,Doc_Sequence Rows Unbounded Preceding)
                              From (  Select I_Code,Doc_Date,W_Code,Expire_Date,Batch_No,B_Code,Doc_Sequence,In_Out,I_Qty,
                                             Sum(p_Qty * In_Out)Over(Partition By I_Code,W_Code, Expire_Date, Batch_No,B_Code Order By I_Code, W_Code, Expire_Date,Batch_No, B_Code,Doc_Date,Doc_Sequence Rows Unbounded Preceding) Sum_Qty,
                                        From Inv_Itm_Bin_Movmnt
                                       where i_code =p_i_code
                                    Order By I_Code,W_Code,Expire_Date,Batch_No,B_Code,Doc_Date,Doc_Sequence
                             Where Avl_Qty > 0
                          Order By I_Code,W_Code,Expire_Date,Batch_No,B_Code,Doc_Date,Doc_Sequence
                   Where (Sum_In_Qty - Out_Qty) > 0
                Order By I_Code,W_Code,Expire_Date,Batch_No,Doc_Date,Doc_Sequence,B_Code                
                          where s.sum_prv_qty<V_Req_Qty
                          group by i_code,W_Code,Expire_Date,Batch_No,B_Code
                          order by i_code,W_Code,Expire_Date,Batch_No,B_Code)
                    Begin
                       Select Sum(I_Qty * In_Out)
                         From Inv_Itm_Bin_Movmnt
                        Where I_Code = I.I_Code
                    Exception
                    End;   
                Begin 
                   Insert Into Inv_Itm_Bin_Movmnt(Doc_Type_Ref,
                 Exception when others then
                 Raise_Application_Error(-20001, 'Error when insert Into Inv_Itm_Bin_Movmnt '||Sqlerrm) ; 
CREATE OR REPLACE Package Ias_Doc_Serial_Pkg As 
 FUNCTION Request_Out_Trnsfr_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                     ,
 FUNCTION Gr_Incoming_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                    ,
 FUNCTION Incoming_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
 FUNCTION Outgoing_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
 FUNCTION Transfer_Out_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
 FUNCTION Transfer_In_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
 FUNCTION Stk_Adj_Serial (P_Brn_No           In  S_Brn.Brn_No%Type                    ,
 FUNCTION Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
 FUNCTION Machine_Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
 FUNCTION Rq_Assmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                    ,
 Function Assmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type) Return Number ;
 Function Disassmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type) Return Number ; 
CREATE OR REPLACE Package Body Ias_Doc_Serial_Pkg As 
 FUNCTION Request_Out_Trnsfr_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                     ,
  Begin
        Begin
         Select Nvl(Max(Out_Req_No),0)+1  
            From Ias_Out_Request_Mst
             Where Brn_No = P_Brn_No  ;
        Exception
         Begin
           Select Nvl(Max(Out_Req_No),0)+1  
           From Ias_Out_Request_Mst
            Where Brn_No       = P_Brn_No
         Exception
         Begin
           Select Nvl(Max(Out_Req_No),0)+1  
           From Ias_Out_Request_Mst
            Where Brn_No       = P_Brn_No
                  (Select W_Code From Warehouse_Details
                    Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                          From Warehouse_Details 
                                           Where W_Code = P_W_Code) ) ;
         Exception
         Begin
           Select Nvl(Max(Out_Req_No),0)+1  
           From Ias_Out_Request_Mst
            Where Brn_No       = P_Brn_No
         Exception
 FUNCTION Gr_Incoming_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                    ,
  Begin
        Begin
         Select Nvl(Max(Inc_No),0)+1  
            From Ias_Gr_Incoming_Mst 
             Where Brn_No = P_Brn_No ;
        Exception
        Begin
         Select Nvl(Max(Inc_No),0)+1  
            From Ias_Gr_Incoming_Mst
             Where Brn_No = P_Brn_No 
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                            From Warehouse_Details 
                                             Where W_Code = P_W_Code) ) ;
        Exception
        Begin
         Select Nvl(Max(Inc_No),0)+1  
            From Ias_Gr_Incoming_Mst
             Where Brn_No     = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Inc_No),0)+1  
            From Ias_Gr_Incoming_Mst
             Where Brn_No     = P_Brn_No
        Exception
 FUNCTION Incoming_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
        Begin
         Select Nvl(Max(Gr_No),0)+1  
            From Gr_Note
             Where Brn_No = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Gr_No),0)+1  
            From Gr_Note
             Where Brn_No = P_Brn_No
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                            From Warehouse_Details 
                                             Where W_Code = P_W_Code) ) ;
        Exception
        Begin
         Select Nvl(Max(Gr_No),0)+1  
            From Gr_Note
             Where Brn_No     = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Gr_No),0)+1  
            From Gr_Note
             Where Brn_No     = P_Brn_No
        Exception
 FUNCTION Outgoing_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
        Begin
         Select Nvl(Max(Out_No),0)+1  
            From Ias_Outgoing_Mst
             Where Brn_No     = P_Brn_No ;
        Exception
        Begin
         Select Nvl(Max(Out_No),0)+1  
            From Ias_Outgoing_Mst
             Where Brn_No     = P_Brn_No
                      (Select W_Code From Warehouse_Details
                         Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                                From Warehouse_Details 
                                                 Where W_Code = P_W_Code) ) ;
        Exception
        Begin
         Select Nvl(Max(Out_No),0)+1  
            From Ias_Outgoing_Mst
             Where Brn_No   = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Out_No),0)+1  
            From Ias_Outgoing_Mst
             Where Brn_No    = P_Brn_No
        Exception
 FUNCTION Transfer_Out_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
        Begin
         Select Nvl(Max(Tr_No),0)+1  
            From Ias_Whtrns_Mst 
             Where Brn_No        = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Tr_No),0)+1  
            From Ias_Whtrns_Mst
             Where Brn_No        = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Tr_No),0)+1  
            From Ias_Whtrns_Mst
             Where Brn_No       = P_Brn_No
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                            From Warehouse_Details 
                                             Where W_Code = P_W_Code) ) ;
        Exception
        Begin
         Select Nvl(Max(Tr_No),0)+1  
            From Ias_Whtrns_Mst
             Where Brn_No        = P_Brn_No
        Exception
 FUNCTION Transfer_In_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
        Begin
         Select Nvl(Max(Tr_No),0)+1  
            From Ias_Whtrns_Mst 
             Where Brn_No        = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Tr_No),0)+1  
            From Ias_Whtrns_Mst
             Where Brn_No        = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Tr_No),0)+1  
            From Ias_Whtrns_Mst
             Where Brn_No        = P_Brn_No
              (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                            From Warehouse_Details 
                                             Where W_Code = P_W_Code) ) ;
        Exception
        Begin
         Select Nvl(Max(Tr_No),0)+1  
            From Ias_Whtrns_Mst
             Where Brn_No        = P_Brn_No
        Exception
 FUNCTION Stk_Adj_Serial (P_Brn_No           In  S_Brn.Brn_No%Type                    ,
  Begin
         Begin
           Select Nvl(Max(Doc_No),0)+1  
            From Stk_Adjustment 
             Where Brn_No     = P_Brn_No ;
         Exception
         Begin
           Select Nvl(Max(Doc_No),0)+1  
            From Stk_Adjustment 
             Where Brn_No     = P_Brn_No 
         Exception
 FUNCTION Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
      Begin
        Select Nvl(Max(Inv_No),0)+1  
          From Master_Inv 
           Where Brn_No     = P_Brn_No ;
      Exception
      Begin
        Select Nvl(Max(Inv_No),0)+1  
          From Master_Inv 
           Where Brn_No   = P_Brn_No
      Exception
 FUNCTION Machine_Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
      Begin
        Select Nvl(Max(Inv_No),0)+1  
          From Ias_Inv_Machine_Mst 
           Where Brn_No     = P_Brn_No ;
      Exception
      Begin
        Select Nvl(Max(Inv_No),0)+1  
          From Ias_Inv_Machine_Mst 
           Where Brn_No   = P_Brn_No
      Exception
 FUNCTION Rq_Assmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                    ,
  Begin
        Begin
         Select Nvl(Max(Doc_No),0)+1  
            From Inv_Rq_Assmbl_Mst 
             Where Brn_No = P_Brn_No ;
        Exception
        Begin
         Select Nvl(Max(Doc_No),0)+1  
            From Inv_Rq_Assmbl_Mst
             Where Brn_No = P_Brn_No 
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                            From Warehouse_Details 
                                             Where W_Code = P_W_Code) ) ;
        Exception
        Begin
         Select Nvl(Max(Doc_No),0)+1  
            From Inv_Rq_Assmbl_Mst
             Where Brn_No     = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Doc_No),0)+1  
            From Inv_Rq_Assmbl_Mst
             Where Brn_No     = P_Brn_No
        Exception
Function Assmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type) Return Number Is 
  Begin
     Begin
       Select Nvl(Max(Doc_No),0)+1  
        From Assemble_Kit_Items 
         Where Brn_No     = P_Brn_No ;
     Exception
Function Disassmbl_Kit_Itm_Serial(P_Brn_No    In  S_Brn.Brn_No%Type) Return Number Is 
  Begin
     Begin
       Select Nvl(Max(Doc_No),0)+1  
        From Disassemble_Kit_Items 
         Where Brn_No     = P_Brn_No ;
     Exception
SELECT NVL(USE_INDV_INV_SYSTEM,0),NVL(USE_NEGATIVE_INV,0)   FROM IAS_PARA
                                                    FROM '||V_Tbl_Mst||V_Tbl_Dtl||'
                                                       WHERE IAS_BILL_DTL.BILL_SER=IAS_BILL_MST.BILL_SER
                    Exception 
                    End; 
                    Begin
                        Begin
                        Select 1 Into V_Cnt
                         From user_objects
                          Where Object_Name ='IAS_V_RT_BILL_DTL_OUT'
                    Exception When Others Then
                    End; 
                        Execute Immediate' SELECT  SUM((NVL(IAS_RT_BILL_DTL.I_QTY,0)+NVL(IAS_RT_BILL_DTL.FREE_QTY,0))*IAS_RT_BILL_DTL.P_SIZE)-
                                                               FROM '||V_Tbl_Dtl||'
                                                       WHERE  I_CODE='''||V_Blk_Tbl_Itm(I).Itm_Code||'''         
DROP TABLE REEVAL CASCADE CONSTRAINTS
Alter Table Ias_Reeval Add (inv_wtavg_frc       NUMBER,
CREATE TABLE Ias_Reeval  (
DROP TABLE STK_CNFRM CASCADE CONSTRAINTS
DROP TABLE CHCK_CP_QTY CASCADE CONSTRAINTS
Create Index CHCK_CP_QTY_Indx On CHCK_CP_QTY(I_Code,W_Code,Expire_Date,Batch_No)
create or replace Force view Inv_Reeval_Chk_Cost As Select Null i_code,Null Expr,Null Itm_cost,Null Itm_cost_reeval,Null Diff_cost From Dual
create or replace  Procedure Inv_Chk_Diff_Itm_Cst_Prc is
            Begin
            select wtavg_type into v_wtavg_type from ias_para_inv where costing_type=2
                select max_rcrd.i_code,max_rcrd.expr,max_rcrd.rcrd_count op_rcrd_cnt,min_rcrd.rcrd_count reeval_rcrd_cnt,max_rcrd.rcrd_count-min_rcrd.rcrd_count reeval_cnt from(
                select item_movement.i_code,case when '||v_wtavg_type|| '=2 then item_movement.w_code when '||v_wtavg_type|| '=3 then item_movement.whg_code ELSE 0  end expr 
                ,count(last_reeval_serial)rcrd_count from item_movement,
                (select i_code,(case when '||v_wtavg_type|| '=2 then w_code when '||v_wtavg_type|| '=3 then whg_code ELSE 0  end) expr 
                ,min(last_reeval_serial)last_reeval_serial from ias_itm_wcode
                group by i_code,case when '||v_wtavg_type|| '=2 then w_code when '||v_wtavg_t
                where wcode_tbl.i_code=item_movement.i_code 
                group by item_movement.i_code,case when '||v_wtavg_type|| '=2 then item_movement.w_code when '||v_wtavg_type|| '=3 then item_movement.whg_code ELSE 0  end
                select i_code,(case when '||v_wtavg_type|| '=2 then w_code when '||v_wtavg_type|| '=3 then whg_code ELSE 0  end) expr 
                ,count(serial)rcrd_count from item_movement
                group by i_code,case when '||v_wtavg_type|| '=2 then w_code when '||v_wtavg_type|| '=3 then whg_code ELSE 0  end
                where max_rcrd.i_code=min_rcrd.i_code and max_rcrd.expr=min_rcrd.expr';
          Exception when others Then 
            End;
create or replace Force view chk_rcrd_must_revlt As Select Null I_Code,Null Expr,Null Op_Rcrd_Cnt,Null Reeval_Rcrd_Cnt,Null Reeval_Cnt From Dual
CREATE OR REPLACE PACKAGE Inv_Reevlt_Pkg
   PROCEDURE load_para(P_CHK_CST_ONLY In Number Default 0,P_CHK_MAKE_CPY In Number Default 0,P_CHK_APROV_CST In Number Default 0,P_LONG_MONITOR NUMBER DEFAULT 0);
  Function get_Ser_Ref(P_Doc_Sequence In Number, P_Seri
   procedure Upd_inv_cmltv_blnc;
  Procedure INV_FULL_MOV_INSRTTEMP;
 Procedure INV_FULL_MOV_REEVAL(p_reeval_type in number default 0 );
 procedure update_op_table;
 PROCEDURE create_ddl_objects(p_type in number);
 PROCEDURE exec_DDL (ddl_string IN VARCHAR2);
 procedure upd_avl_qty_bfr;
 Procedure Upd_Primary_Cost;
 Procedure Upd_Last_Serial (P_cost_max_diff in number default 0.1, p_type in number default 0) ;
 Procedure inv_cost_compare(P_cost_max_diff in number);
 Procedure Inv_Chk_Diff_Itm_Cst_Prc(p_type in number);
 Procedure Statstics_Reeval_Mst(a_cv  In Out t_cv);
 Procedure Statstics_Reeval_Dtl(a_cv  In Out t_cv,P_ACTION IN Varchar2);
Procedure Create_Reev_Tbl;
procedure create_reeval_job(p_action in varchar2);
procedure Sale_Cost_Reeval;
FUNCTION Insrt_To_Sale_Cost_TMP (pI_CODE in VARCHAR2) RETURN SAL_COST_RCRD0 PIPELINED ;
Procedure Insrt_To_Sale_CostPIP  (p_full_insrt in number);
Procedure Upd_Tbl_Aftr_Revl ;
Procedure Upd_inv_cmltv_blnc ( P_I_Code In Ias_Itm_Mst.I_Code%Type,
CREATE OR REPLACE PACKAGE BODY Inv_Reevlt_Pkg As
   Procedure Load_Para(P_CHK_CST_ONLY In Number Default 0,P_CHK_MAKE_CPY In Number Default 0,P_CHK_APROV_CST In Number Default 0,P_LONG_MONITOR NUMBER DEFAULT 0) Is
   Begin
      Select Use_Out_Bills, 0                                                                                                                                                                 --Conn_Product_System,
        From Ias_Para_Inv, Ias_Para_Ar;
   Exception
   Procedure Exec_Ddl(Ddl_String In Varchar2) Is
   Begin
   Exception
   End;
   Procedure Create_Ddl_Objects(P_Type In Number) Is
   Begin
         Exec_Ddl('create index out_bill_dtl_seq on detail_out_bills(doc_sequence)');
         Exec_Ddl('create index ret_bill_dtl_seq on ias_ret_bill_dtl(doc_sequence)');
         Exec_Ddl('create index mov_doctyp_indx on item_movement(doc_type)');
         Exec_Ddl('create index bill_dtl_seq on ias_bill_dtl(doc_sequence)');
         Exec_Ddl('create index rt_bill_dtl_seq on ias_rt_bill_dtl(doc_sequence)');
         Exec_Ddl('create index outgo_dtl_seq on ias_outgoing_dtl(doc_sequence)');
         Exec_Ddl('create index whtrns_dtl_seq on ias_whtrns_dtl(doc_sequence)');
         Exec_Ddl('create index prbill_dtl_seq on ias_pr_bill_dtl(doc_sequence)');
         Exec_Ddl('create index stk_aduj_seq on STK_ADJUSTMENT_DET(doc_sequence)');
         Exec_Ddl('create index kit_item_seq on KIT_ITEMS_DETAIL(doc_sequence,rcrd_no)');
         Exec_Ddl('create index diskit_item_seq on dis_KIT_ITEMS_
         Exec_Ddl('create index ass_item_seq on ASSEMBLE_KIT_ITEMS_DET(doc_sequence)');
         Exec_Ddl('create index diss_item_seq on disASSEMBLE_KIT_ITEMS_DET(doc_sequence)');
         Exec_Ddl('create index mov_seq_indx on item_movement(doc_sequence)');
         Exec_Ddl('create index gr_dtl_rec_indx on gr_detail(rec_no)');
         Exec_Ddl('create index reeval_tmp_indx on reeval(serial)');
         Exec_Ddl('create index reeval_tmp_indx1 on reeval(doc_sequence)');
         Exec_Ddl('create index reeval_tmp_ser_ref_indx2 on reeval(serial_ref,in_out)');
         Exec_Ddl('create index reeval_tmp_inout_indx3 on reeval(in_out,processed)');
         Exec_Ddl('create index STK_COST_OPR_indx on STK_COST_OPR(DOC_TYPE,I_CODE,DOC_SEQUENCE,RCRD_NO)');
         Exec_Ddl('CREATE INDEX doutbills_reval_indx ON detail_out_bills (BILL_SER,I_CODE,RCRD_NO)');
   End;
   Function Get_Ser_Ref(P_Doc_Sequence In Number, P_Serial In Number, P_Doc_Type In Number, P_Type In Number)
   Begin
         Select Doc_Sequence_Si
           From Ias_Rt_Bill_Dtl, Ias_Rt_Bill_Mst
          Where P_Year = 0 And Ias_Rt_Bill_Dtl.Rt_Bill_Ser = Ias_Rt_Bill_Mst.Rt_Bill_Ser And Doc_Sequence = P_Doc_Sequence And Rownum <= 1;
             Select Doc_Sequence_Si
           From Ias_Ret_Bill_Dtl, Ias_Ret_Bill_Mst
          Where rt_type = 0 And Ias_Ret_Bill_Dtl.Ret_Ser = Ias_Ret_Bill_Mst.Ret_Ser And Doc_Sequence = P_Doc_Sequence And Rownum <= 1;
         Select Doc_Sequence_Tr
           From Ias_Whtrns_Dtl
          Where Tr_Inout_Type = 2 And Doc_Sequence = P_Doc_Sequence And Rownum <= 1;
         Select Serial
           From Item_Movement
          Where Doc_Sequence = Doc_Seq_Ref;
      Select Decode(P_Type, 0, Nvl2(Doc_Seq_Ref, P_Serial, Doc_Seq_Ref), Doc_Ser_Ref) Into Doc_Ser_Ref From Dual;
   Exception
   End;
   Procedure Inv_Full_Mov_Insrttemp Is
   Begin
       Begin
           Select 1 into V_Cnt  from Reeval Where Rownum<=1;
           Exception When No_Data_Found Then
            Insert Into Reeval
              Select Doc_Type,I_Code,W_Code,Whg_Code,Expire_Date,Batch_No, Doc_Sequence,Stk_Cost,P_Si
        ,I_Cost, Exp_Amt, Doc_Type_Dtl,Serial_Ref_Out,Rec_No,Rcrd_No ,Processed,Last_Reeval_Serial,inv_wtavg_frc,wt_avg_before From Ias_Reeval;
           End; 
         SELECT NVL(SUM(OP_RCRD_CNT),0)INTO P_TOTAL_WORK_RCRD FROM chk_rcrd_must_revlt WHERE REEVAL_CNT>0 ;
        Insert Into Reeval(
          Select Doc_Type,I_Code,W_Code,Whg_Code,Expire_Date,Batch_No, Doc_Sequence,Stk_Cost,P_Size, In_Out,Rn,Serial,Psum_Qty,Kit_Qty,Stk_Cost0,Serial_Ref1,Avl_Qty_Bfr ,Avl_Qty_Bfr_Dvd,  Wt_Avg_After,Wt_Avg_After1,Wt_Avg_After2, Serial_Ref
        ,I_Cost, Exp_Amt, Doc_Type_Dtl,Serial_Ref_Out,Rec_No,Rcrd_No ,Processed,Last_Reeval_Serial,inv_wtavg_frc,wt_avg_before From Item_Movement
        WHERE EXISTS(SELECT 1 FROM IAS_REEVALUATE WHERE I_CODE=Item_Movement.I_CODE)
        Reference Conv_Ref On (Select  Wt_Avg_After, I_Code,W_Code, Doc_Sequence,Expire_Date,Batch_No,Rec_No From Gr_Detail
        where not exists( select 1 from gr_note where pi_type=2 and c_flag=0 and g_ser=gr_detail.g_ser))
        Reference Gr_Dtl On (Select  Wt_Avg_After,Rec_No From Gr_Detail
        where not exists( select 1 from gr_note where pi_type=2 and c_flag=0 and g_ser=gr_detail.g_ser))
        Select * From (Select  Avg(Primary_Cost)Primary_Cost,Max(Nvl(Last_Reeval_Serial,0))Last_Reeval_Serial,I_Code,
        From Ias_Itm_Wcode
        Group By I_Code,
         Reference Rt_Bills On (Select Doc_Sequence,Doc_Sequence_Si,P_Year From ( 
         Select  Doc_Sequence,Doc_Sequence_Si,(Select P_Year From Ias_Rt_Bill_Mst Where Rt_Bill_Ser=Ias_Rt_Bill_Dtl.Rt_Bill_Ser)P_Year
                        From Ias_Rt_Bill_Dtl
               Where v_use_out_bills=0 and Service_Item=0
               Select  Doc_Sequence,Doc_Sequence_Si,(Select rt_type From Ias_Ret_Bill_Mst Where Ret_Ser=Ias_Ret_Bill_Dtl.Ret_Ser)P_Year
                        From Ias_Ret_Bill_Dtl
                        where v_use_out_bills=1
               Reference Whtrns On(Select  Doc_Sequence,Doc_Sequence_Tr,(Select Tr_Cost_Type From Ias_Whtrns_Mst Where Tr_Ser=Ias_Whtrns_Dtl.Tr_Ser)Tr_Cost_Type ,Ias_Whtrns_Dtl.I_Price,Ias_Whtrns_Dtl.Exp_Amt,Ias_Whtrns_Dtl.Tr_Inout_Type
                From Ias_Whtrns_Dtl)
                  Reference Assemble On(Select  Doc_Sequence,Exp_Amt
                From Assemble_Kit_Items_Det)
                 Reference Kit_Items On(Select  I_Code,Doc_Sequence,Rcrd_No,ITM_UNT,W_CODE,EXPIRE_DATE,BATCH_NO,P_Qty
                From Kit_Items_Detail Where Doc_Sequence>0)
                  Reference Outgoing On(Select  Doc_Sequence, Pur_Type ,Ias_Outgoing_Dtl.I_Price
                From Ias_Outgoing_Dtl,Ias_Outgoing_Mst Where Ias_Outgoing_Dtl.Out_Ser=Ias_Outgoing_Mst.Out_Ser)
        Dimension By (Row_number() Over(Partition By I_Code ,(Case When V_Wtavg_Type=2 Then W_Code When V_Wtavg_Type=3 Then  Whg_Code Else Null End ) Order By Serial)Rn)
   End;
   Procedure Inv_Full_Mov_Reeval(P_Reeval_Type In Number Default 0) Is
         Select Serial, Wt_Avg_After2
           From Reeval
          Where Serial In (Select Serial_Ref
                             From Reeval
                            Where (serial_ref= last_reeval_serial  or Serial = Last_Reeval_Serial) And In_Out = -1 );
        Select *
             From Reeval
            Where In_Out = 1 And Processed = 0
         Order By Serial;
   Begin
      Begin
        SELECT NVL(COUNT(*),0) INTO P_TOTAL_WORK_RCRD FROM Reeval WHERE Processed = 0 ;
           Begin
                  Update Reeval
                   Where Serial_Ref = Ser.Serial And In_Out = -1 And Processed = 0;
           End;
               Begin
                     Select Nvl(Wt_Avg_After2, 0)
                       From Reeval
                      Where Serial = Mov.Serial_Ref_Out And Rownum <= 1;
               Exception
               End;
                     Begin
                        Select Wt_Avg_After2
                          From Reeval
                         Where Serial = Mov.Serial_Ref1;
                     Exception
                     End;
                  Begin
                     Select Sum(Wt_Avg_After2 * Kit_Qty)
                       From Reeval
                      Where Doc_Sequence = Mov.Doc_Sequence And Doc_Type = 11;
                  Exception
                  End;
                  Begin
                     Select Case When V_Use_Price_Whtrns_Rec_Cost = 1 And Doc_Type_Dtl <> 1 Then I_Cost Else Wt_Avg_After2 End Case
                       From Reeval
                      Where Serial = Mov.Serial_Ref1;
                  Exception
                  End;
               Update Reeval
                  Where Serial = Mov.Serial;
               Update Reeval
                Where Serial_Ref = Mov.Serial And In_Out = -1;
                     Update Reeval
                      Where Serial = Mov.Serial;
                     Update Reeval
                      Where Serial = Mov.Serial;
                     Update Reeval
                      Where Serial = Mov.Serial;
      End;
          delete from Reeval where processed=1;
         SELECT SUM(CNT) INTO P_TOTAL_WORK_RCRD FROM(
        SELECT COUNT(*)CNT FROM Reeval WHERE IN_OUT=1 
        SELECT COUNT(*)CNT FROM Reeval 
               Select Serial, Stk_Cost, I_Cost From Reeval;
               Select Rec_No, Stk_Cost, Wt_Avg_After2,inv_wtavg_frc,wt_avg_before
                 From Reeval
                Where In_Out = 1;
         Begin
                  Update (Select Stk_Cost, Wt_Avg_After,wt_avg_before,inv_wtavg_frc
                            From Gr_Detail
                           Where Rec_No = Gr(Gw).Rec_No)
                   Where (Nvl(Wt_Avg_After, 0) <> Gr(Gw).Wt_Avg_After2 Or Nvl(Stk_Cost, 0) <> Gr(Gw).Stk_Cost);
                  Update (Select Stk_Cost, I_Cost
                            From Item_Movement
                           Where Serial = Mov1(Rw).Serial)
                   Where (
         Exception
               Raise_Application_Error(-20987, 'proplem in update item_movement and gr_detail'|| Sqlerrm);
         End;
         Insert Into Ias_Reeval(Doc_Type,I_Code,W_Code,Whg_Code,Expire_Date,Batch_No, Doc_Sequence,Stk_Cost,P_Size, In_Out,Rn,Serial,Psum_Qty,Kit_Qty,Stk_Cost0,Serial_Ref1,Avl_Qty_Bfr ,Avl_Qty_Bfr_Dvd,  Wt_Avg_After,Wt_Avg_After1,Wt_Avg_After2, Serial_Ref
            Select Doc_Type,I_Code,W_Code,Whg_Code,Expire_Date,Batch_No, Doc_Sequence,Stk_Cost,P_Size, In_Out,Rn,Serial,Psum_Qty,Kit_Qty,Stk_Cost0,Serial_Ref1,Avl_Qty_Bfr ,Avl_Qty_Bfr_Dvd,  Wt_Avg_After,Wt_Avg_After1,Wt_Avg_After2, Serial_Ref
              From Reeval;
   End;
   Procedure Update_Op_Table Is
         Select I_Code, Doc_Sequence, Stk_Cost, Rcrd_No
           From reeval
          Where   Doc_Type = Doctype;
           Select I_Code, (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else Null End) Expr, Avg(Wt_Avg_After) Keep (Dense_Rank Last Order By Rec_No) Wt_Avg_After
             From Gr_Detail
         Group By I_Code, (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else Null End);
           Select I_Code, (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else 0 End) Expr, Max(Serial) Keep (Dense_Rank Last Order By Serial) Last_Serial
             From Item_Movement
         Group By I_Code, (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else 0 End);
   Begin
        SELECT NVL(COUNT(*),0) INTO P_TOTAL_WORK_RCRD FROM Reeval  ;    
      Select Distinct Doc_Type
        From Item_Movement
       Where Doc_Type Not In (0, 2, 5);
               Update (Select Stk_Cost
                            From Ias_Bill_Dtl
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence)
                   Where Nvl(Stk_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Stk_Cost
                            From Ias_Rt_Bill_Dtl
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence)
                   Where Nvl(Stk_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Stk_Cost
                            From detail_out_bills
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence)
                   Where Nvl(Stk_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Stk_Cost
                            From Ias_Ret_Bill_Dtl
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence)
                   Where Nvl(Stk_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Stk_Cost
                            From Ias_Pr_Bill_Dtl
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence)
                   Where Nvl(Stk_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Stk_Cost
                            From Ias_Outgoing_Dtl
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence)
                   Where Nvl(Stk_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Stk_Cost
                            From Ias_Whtrns_Dtl
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence)
                   Where Nvl(Stk_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select I_Cost
                            From Kit_Items_Detail
                           Where I_Code = Mov(L_Index).I_Code And Doc_Sequence = Mov(L_Index).Doc_Sequence And Rcrd_No = Mov(L_Index).Rcrd_No)
                   Where Nvl(I_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select I_Cost
                            From Dis_Kit_Items_Detail
                           Where I_Code = Mov(L_Index).I_Code And Doc_Sequence = Mov(L_Index).Doc_Sequence And Rcrd_No = Mov(L_Index).Rcrd_No)
                   Where Nvl(I_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Kit_Cost
                            From Assemble_Kit_Items_Det
            Where Doc_Sequence = Mov(L_Index).Doc_Sequence And Rcrd_No = Mov(L_Index).Rcrd_No)
                   Where Nvl(Kit_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Kit_Cost
                            From Disassemble_Kit_Items_Det
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence And Rcrd_No = Mov(L_Index).Rcrd_No)
                   Where Nvl(Kit_Cost, 0) <> Mov(L_Index).Stk_Cost;
                  Update (Select Wtavg
                            From Stk_Adjustment_Det
                           Where Doc_Sequence = Mov(L_Index).Doc_Sequence )
                   Where Nvl(Wtavg, 0) <> Mov(L_Index).Stk_Cost;
               Begin
                  Update Ias_Bill_Dtl D
                            (Select Round(Nvl(Sum((Nvl(I_Qty, 0) + Nvl(Free_Qty, 0)) * Nvl(Stk_Cost, 0)), 0) / Nvl(Sum(Nvl(I_Qty, 0) + Nvl(Free_Qty, 0)), 1), V_Stkcost_Fraction)
                               From Detail_Out_Bills
                              Where Bill_Ser = D.Bill_Ser And I_Code = D.I_Code And Rcrd_No = D.Rcrd_No)
                   Where  Exists
                            (                 Select 1
                                                From Detail_Out_Bills 
                                                Where Bill_Ser = D.Bill_Ser And I_Code = D.I_Code And Rcrd_No = D.Rcrd_No );
               Exception
               End;
               Begin
                  Update Ias_Rt_Bill_Dtl A
                            (Select Round(Nvl(Sum((Nvl(I_Qty, 0) + Nvl(Free_Qty, 0)) * Nvl(Stk_Cost, 0)), 0) / Nvl(Sum(Nvl(I_Qty, 0) + Nvl(Free_Qty, 0)), 1), V_Stkcost_Fraction)
                               From Ias_Ret_Bill_Dtl
                              Where Rt_Bill_Ser = A.Rt_Bill_Ser And I_Code = A.I_Code And Rcrd_No = A.Rcrd_No)
                   Where Exists
                            (                 Select 1
                                                From Ias_Ret_Bill_dtl
                                                Where Rt_Bill_Ser = A.Rt_Bill_Ser And I_Code = A.I_Code And Rcrd_No = A.Rcrd_No);
               Exception
               End;
                 Begin
                     Update Ias_Bill_Dtl D
                        Set Stk_Cost =(select stk_cost from ias_outgoing_dtl i 
                      Where D.Doc_Ser_Ref = I.out_Ser  And d.Doc_No_Ref = I.out_No And D.I_Code = I.I_Code and d.rcrd_no_ref=i.rcrd_no)
                       where Doc_Type_Ref = 9 and Exists
                               ( Select 1
                                   From Ias_Bill_Mst M
                                  Where M.Bill_Ser = D.Bill_Ser And Nvl(Conn_Si_With_Outgong, 0) = 1);
                  Exception
                        Raise_Application_Error(-20549, 'Error When Update Stk_cost In Ias_Bill_Dtl From OutGoing ' || Chr(13) || Sqlerrm);
                  End;
        Update Ias_Itm_Mst
             Where I_Code = Grd(L_Index).I_Code;
            Update Ias_Itm_Wcode
             Where I_Code = Grd(L_Index).I_Code And (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else Null End) = Grd(L_Index).Expr;
         Update Ias_Itm_Wcode
          Where I_Code = Last_Ser(L_Index).I_Code And (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then
   Exception
   End;
   Procedure Upd_Avl_Qty_Bfr Is
         Select *
           From (Select I_Code, Doc_Type, Doc_Sequence, W_Code, Expire_Date, Batch_No, Serial, In_Out, Sum((Nvl(P_Qty, 0) + Nvl(Pf_Qty, 0)) * In_Out) Over(Partition By I_Code, Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else Null End Order By Serial Range Between Unbounded Preceding And 1 Preceding) Avl_Qty_Bfr From Item_Movement)
          Where In_Out = 1;
   Begin
      Exec_Ddl('Create Index Gr_Doc_Seq_Indx    On Gr_Detail(Doc_Sequence)');
            Update (Select Avl_Qty_Before
                      From Gr_Detail
                     Where Doc_Sequence = Avl.Doc_Sequence)
             Where Nvl(Avl_Qty_Before, 0) <> Nvl(Avl.Avl_Qty_Bfr, 0);
            Update (Select Avl_Qty_Before
                      From Gr_Detail
                     Where Doc_Sequence = Avl.Doc_Sequence And I_Code = Avl.I_Code And W_Code = Avl.W_Code And Batch_No = Avl.Batch_No And Expire_Date = Avl.Expire_Date)
             Where Nvl(Avl_Qty_Before, 0) <> Nvl(Avl.Avl_Qty_Bfr, 0);
   Exception
         Raise_Application_Error(-20978, 'Error When Update Avl_Qty_Before In Gr_Detail'|| Sqlerrm);
   End;
 Procedure Upd_inv_cmltv_blnc Is
         Select *
           From (Select I_Code, Doc_Type, Doc_Sequence, W_Code, Expire_Date, Batch_No, Serial, In_Out, Sum((Nvl(P_Qty, 0) + Nvl(Pf_Qty, 0)) *stk_cost/p_size* In_Out) Over(Partition By I_Code, Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else Null End Order By Serial Range Between Unbounded Preceding And 1 Preceding) inv_cmltv_blnc From Item_Movement)
          Where In_Out = 1;
   Begin
      Exec_Ddl('Create Index Gr_Doc_Seq_Indx    On Gr_Detail(Doc_Sequence)');
            Update (Select inv_cmltv_blnc
                      From Gr_Detail
                     Where Doc_Sequence = blnc.Doc_Sequence)
             Where Nvl(inv_cmltv_blnc, 0) <> Nvl(blnc.inv_cmltv_blnc, 0);
            Update (Select inv_cmltv_blnc
                      From Gr_Detail
                     Where Doc_Sequence = blnc.Doc_Sequence And I_Code = blnc.I_Code And W_Code = blnc.W_Code And Batch_No = blnc.Batch_No And Expire_Date = blnc.Expire_Date)
             Where Nvl(inv_cmltv_blnc, 0) <> Nvl(blnc.inv_cmltv_blnc, 0);
   Exception
aise_Application_Error(-20978, 'Error When Update inv_cmltv_blnc In Gr_Detail'|| Sqlerrm);
   End;
   Procedure Upd_Primary_Cost Is
           Select I_Code, Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else Null End Expr, Avg(Stk_Cost / P_Size) Stk_Cost
             From Ias_Open_Stock
         Group By I_Code, Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else Null End;
   Begin
            Update (Select Primary_Cost
                      From Ias_Itm_Mst
                     Where I_Code = Op.I_Code)
             Where Nvl(Primary_Cost, 0) <> Nvl(Op.Stk_Cost, 0);
         Update Ias_Itm_Mst
          Where Nvl(Primary_Cost, 0) = 0;
         Update Ias_Itm_Wcode Wcode
                   (Select Primary_Cost
                      From Ias_Itm_Mst
                     Where I_Code = Wcode.I_Code);
            Update (Select Primary_Cost
                      From Ias_Itm_Wcode
                     Where I_Code = Op.I_Code And (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else Null End) = Op.Expr)
             Where Nvl(Primary_Cost, 0) <> Nvl(Op.Stk_Cost, 0);
         Update Ias_Itm_Wcode
          Where Nvl(Primary_Cost, 0) = 0;
         Update Ias_Itm_Wcode Wcode
                   (Select Primary_Cost
                      From Ias_Itm_Mst
                     Where I_Code = Wcode.I_Code)
          Where Nvl(Primary_Cost, 0) = 0;
   Exception
         Raise_Application_Error(-20978, 'Error When Update Primary_Cost '|| Sqlerrm);
   End;
   Procedure Upd_Last_Serial(P_Cost_Max_Diff In Number Default 0.1, P_Type In Number Default 0) Is
   Begin
                 Select I_Code, (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else 0 End) Expr, Max(Serial) Serial
                   From Stk_Cnfrm
                  Where Cost_Cnfrm = 1
               Group By I_Code, Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else 0 End;
         Begin
               Update Ias_Itm_Wcode
                Where I_Code = Itm.I_Code And (Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else 0 End) = Itm.Expr;
         End;
   Exception
         Raise_Application_Error(-20987, 'Error When Update Last_Serial In Ias_itm_wcode'|| Sqlerrm);
   End;
   Procedure Inv_Cost_Compare(P_Cost_Max_Diff In Number) Is
   Begin
Insert Into  Stk_Cnfrm
Select Doc_Type,Doc_Ser,Doc_No,I_Code,W_Code,Whg_Code,Expire_Date,Batch_No,Psum_Qty, Serial,Doc_Sequence,Stk_Cost,Stk_Cost0,Sum_Stk_Cost,Cost_Diff, Sum_Stk_Cost0,Cost_Cnfrm,P_Size, In_Out,Rn
,I_Cost,Rcrd_No  From Item_Movement
Reference Gr_Dtl On (select Wt_Avg_After, I_Code,W_Code, Doc_Sequence,Expire_Date,Batch_No,Rec_No,sum_cmltv_frc from(
 Select  Wt_Avg_After, I_Code,W_Code, Doc_Sequence,Expire_Date,Batch_No,Rec_No,
Then Whg_Code Else 0 End Order By rec_no Range Between Unbounded Preceding And 1 Preceding) sum_cmltv_frc
  From Gr_Detail
where not exists( select 1 from gr_note where pi_type=2 and c_flag=0 and g_ser=gr_detail.g_ser)))
Dimension By (Row_number() Over(Partition By I_Code ,(Case When V_Wtavg_Type=2 Then W_Code When V_Wtavg_Type=3 Then  Whg_Code Else Null End ) Order By Serial)Rn)
   Exception
   End;
Procedure Sale_Cost_Reeval Is
      Select Bill_Type, Doc_Ser, Nvl(Out_Gr_Ser, 0) Out_Gr_Ser, I_Code, Itm_Unt, W_Code, Expire_Date, Batch_No, Rcrd_No, Doc_Sequence From Sale_Cost
      Select Doc_Type Bill_Type, Doc_Ser, Nvl(Out_Gr_Ser, 0) Out_Gr_Ser, I_Code, Itm_Unt, W_Code, Expire_Date, Batch_No, Rcrd_No, Doc_Sequence From Item_Movement;
   Begin
         Delete From Sale_Cost
               Where (Bill_Type, Doc_Ser, Nvl(Out_Gr_Ser, 0), I_Code, Itm_Unt, W_Code, Expire_Date, Batch_No, Rcrd_No, Doc_Sequence) In (Select Rcrd.Bill_Type, Rcrd.Doc_Ser, Rcrd.Out_Gr_Ser, Rcrd.I_Code, Rcrd.Itm_Unt,
                                                                                                                                           From Dual);
   End;
   Begin
      For Rcrd In (  Select Sum(P_Qty) Sp_Qty, Rec_No
                       From Sale_Cost
                   Group By Rec_No) Loop
         Update Gr_Detail
          Where Rec_No = Rcrd.Rec_No;
   End;
   Begin
      Insert Into Chck_Cp_Qty(I_Code, W_Code, Expire_Date, Batch_No)
           Select I_Code, W_Code, Expire_Date, Batch_No
             From (  Select Rec_No, I_Code, W_Code, Expire_Date, Batch_No, Sum(P_Qty) P_Qty
                       From Sale_Cost
                   Group By Rec_No, I_Code, W_Code, Expire_Date, Batch_No
    Select Rec_No, I_Code, W_Code, Expire_Date, Batch_No, Sum((P_Qty + (Nvl(Free_Qty, 0) * P_Size)) - Nvl(Cp_Qty, 0)) P_Qty
                       From Gr_Detail
                   Group By Rec_No, I_Code, W_Code, Expire_Date, Batch_No)
         Group By I_Code, W_Code, Expire_Date, Batch_No;
   End;
         Select I_Code, W_Code, Expire_Date, Batch_No From Chck_Cp_Qty;
   Begin
         Update Gr_Detail
          Where Gr_Detail.I_Code = I.I_Code And Gr_Detail.W_Code = I.W_Code And Gr_Detail.Expire_Date = I.Expire_Date And Gr_Detail.Batch_No = I.Batch_No;
         Delete From Sale_Cost
               Where Sale_Cost.I_C
   End;
   Procedure Insrt_To_Sale_Cost (p_full_insrt in number) is
      cursor c_mov(PI_CODE IN VARCHAR2) is select doc_type,bill_doc_type,doc_no,doc_ser,doc_sequence,i_date,item_movement.i_code,itm_unt,nvl(p_qty,0)+nvl(pf_qty,0)psum_qty,p_size,stk_cost,item_movement.w_code,whg_code,cc_code
        from item_movement   where in_out=-1 AND I_CODE=PI_CODE
         order by serial;  
CURSOR DIFF_CR IS SELECT I_CODE FROM CHCK_CP_QTY GROUP BY I_CODE;     
   BEGIN   
   update gr_detail set cp_qty=p_qty +(nvl(free_qty,0)*p_size);
    INSERT INTO CHCK_CP_QTY(I_CODE)
     SELECT I_CODE from item_movement   where in_out=-1
     GROUP BY I_CODE;
   Begin
--update item_movement set external_post=MOV.doc_type;
                Select gr.I_Code, gr.Gr_No, gr.Cp_Qty, P_Size, gr.Pi_Type, Nvl(gr.Stk_Cost, 0) Stk_Cost, gr.V_Code, gr.W_Code, gr.Rec_No, gr.Expire_Date,
                  From Gr_Detail gr
                 Where I_Code = mov.i_code And gr.W_Code = mov.w_code And Nvl(Expire_Date, To_date('01/01/1900', 'DD/MM/YYYY')) = Nvl(mov.expire_date, To_date('01/01/1900', 'DD/MM/YYYY')) And Nvl(Batch_No, '0') =
            --For Update Nowait
              Order By gr.Rec_No;
      Begin 
               Begin
                  Update Gr_Detail
                   Where  Rec_No = Gr_Rec.Rec_No;
               Exception
                     Raise_Application_Error(-20420, 'Error when update gr_detail ' || Gr_Rec.I_Code || Chr(13) || Sqlerrm);
               End;
               Begin
                  Insert Into Sale_Cost(Bill_Type, Bill_Doc_Type, Bill_No, Doc_Date, I_Code, I_Qty, Itm_Unt, P_Size, P_Qty, I_Cost, Pi_Type, Gr_No, G_Ser, Doc_Sequence_Gr, W_Code, Whg_Code, Cc_Code, Pj_No,
               Exception
               End;
               Begin
                  Update Gr_Detail
                   Where Rec_No = Gr_Rec.Rec_No;
               Exception
                     Raise_Application_Error(-20422, 'Error When Update gr_detail ,i_code =' || Gr_Rec.I_Code || Chr(13) || Sqlerrm);
               End;
               Begin
                     Insert Into Sale_Cost(Bill_Type, Bill_Doc_Type, Bill_No, Doc_Date, I_Code, I_Qty, Itm_Unt, P_Size, P_Qty, I_Cost, Pi_Type, Gr_No, G_Ser, Doc_Sequence_Gr, W_Code, Whg_Code, Cc_Code, Pj_No,
               Exception
               End;
      Exception
      End;
 update gr_detail set cp_qty=p_qty +(nvl(free_qty,0)*p_size)
      where  not exists(select 1 from sale_cost where  gr_detail.rec_no=sale_cost.rec_no 
   END;
   Procedure Insrt_To_Sale_CostPIP  (p_full_insrt in number) is
      CURSOR DIFF_CR IS SELECT I_CODE FROM CHCK_CP_QTY GROUP BY I_CODE;     
   BEGIN   
   update gr_detail set cp_qty=p_qty +(nvl(free_qty,0)*p_size);
    INSERT INTO CHCK_CP_QTY(I_CODE)
     SELECT I_CODE from item_movement   where in_out=-1
     GROUP BY I_CODE;
   Begin
               Begin
                     Insert Into Sale_Cost(Bill_Type, Bill_Doc_Type, Bill_No, Doc_Date, I_Code, I_Qty, Itm_Unt, P_Size, P_Qty, I_Cost, Pi_Type, Gr_No, G_Ser, Doc_Sequence_Gr, W_Code, Whg_Code, Cc_Code, Pj_No,
                         SELECT Bill_Type, Bill_Doc_Type, Bill_No, Doc_Date, I_Code, I_Qty, Itm_Unt, P_Size, P_Qty, I_Cost, Pi_Type, Gr_No, G_Ser, Doc_Sequence_Gr, W_Code, Whg_Code, Cc_Code, Pj_No,
                                 Brn_No, Brn_Year, Cmp_No, Brn_Usr FROM TABLE(Insrt_To_Sale_Cost_TMP(DIFF.I_CODE));
               Exception
               End;
 update gr_detail set cp_qty=p_qty +(nvl(free_qty,0)*p_size)
      where  not exists(select 1 from sale_cost where  gr_detail.rec_no=sale_cost.rec_no 
   END;
  FUNCTION Insrt_To_Sale_Cost_TMP (pI_CODE in VARCHAR2) RETURN SAL_COST_RCRD0 PIPELINED AS
      cursor c_mov is select doc_type,bill_doc_type,doc_no,doc_ser,doc_sequence,i_date,item_movement.i_code,itm_unt,nvl(p_qty,0)+nvl(pf_qty,0)psum_qty,p_size,stk_cost,item_movement.w_code,whg_code,cc_code
        from item_movement   where in_out=-1 AND I_CODE=PI_CODE
         order by serial;  
   BEGIN   
--update item_movement set external_post=MOV.doc_type;
                Select gr.I_Code, gr.Gr_No, gr.Cp_Qty, P_Size, gr.Pi_Type, Nvl(gr.Stk_Cost, 0) Stk_Cost, gr.V_Code, gr.W_Code, gr.Rec_No, gr.Expire_Date,
                  From Gr_Detail gr
                 Where I_Code = mov.i_code And gr.W_Code = mov.w_code And Nvl(Expire_Date, To_date('01/01/1900', 'DD/MM/YYYY')) = Nvl(mov.expire_date, To_date('01/01/1900', 'DD/MM/YYYY')) And Nvl(Batch_No, '0') =
            --For Update Nowait
              Order By gr.Rec_No;
      Begin 
               Begin
                  Update Gr_Detail
                   Where  Rec_No = Gr_Rec.Rec_No;
               Exception
                     Raise_Application_Error(-20420, 'Error when update gr_detail ' || Gr_Rec.I_Code || Chr(13) || Sqlerrm);
               End;
               Begin
               Exception
               End;
               Begin
                  Update Gr_Detail
                   Where Rec_No = Gr_Rec.Rec_No;
               Exception
                     Raise_Application_Error(-20422, 'Error When Update gr_detail ,i_code =' || Gr_Rec.I_Code || Chr(13) || Sqlerrm);
               End;
               Begin
               Exception
               End;
      Exception
      End;
 Procedure Inv_Chk_Diff_Itm_Cst_Prc(p_type in number) is
 Begin
        select max_rcrd.i_code,max_rcrd.expr,max_rcrd.rcrd_count op_rcrd_cnt,min_rcrd.rcrd_count reeval_rcrd_cnt,max_rcrd.rcrd_count-min_rcrd.rcrd_count reeval_cnt from(
        select item_movement.i_code,case when '||v_wtavg_type|| '=2 then item_movement.w_code when '||v_wtavg_type|| '=3 then item_movement.whg_code ELSE 0  end expr 
        ,count(last_reeval_serial)rcrd_count from item_movement,
        (select i_code,(case when '||v_wtavg_type|| '=2 then w_code when '||v_wtavg_type|| '=3 then whg_code ELSE 0  end) expr 
        ,min(last_reeval_serial)last_reeval_serial from ias_itm_wcode
        group by i_code,case when '||v_wtavg_type|| '=2 then w_code when '||v_wtavg_type|| '=3 then whg_code ELSE 0  end)wcode_tbl
        where wcode_tbl.i_code=item_movement.i_code 
        group by item_movement.i_code,case when '||v_wtavg_type|| '=2 then item_movement.w_code when '||v_wtavg_type|| '=3 then item_movement.whg_code ELSE 0  end
  select i_code,(case when '||v_wtavg_type|| '=2 then w_code when '||v_wtavg_type|| '=3 then whg_code ELSE 0  end) expr 
        ,count(serial)rcrd_count from item_movement
        group by i_code,case when '||v_wtavg_type|| '=2 then w_code when '||v_wtavg_type|| '=3 then whg_code ELSE 0  end
        where max_rcrd.i_code=min_rcrd.i_code and max_rcrd.expr=min_rcrd.expr');
        /*select count(1) into rcrd_cnt from(
        select i_code,(case when  v_wtavg_type=2 then w_code when  v_wtavg_type=3 then whg_code else 0 end) expr
        ,last_reeval_serial from ias_reeval 
        group by  i_code,(case when  v_wtavg_type=2 then w_code when  v_wtavg_type=3 then whg_code else 0 end) 
        select i_code,(case when  v_wtavg_type=2 then w_code when  v_wtavg_type=3 then whg_code else 0 end)  expr
        ,last_reeval_serial from ias_itm_wcode 
        group by  i_code,(case when  v_wtavg_type=2 then w_code when  v_wtavg_type=3 then whg_code else 0 end)  
        select mov.i_code,mov.expr,mov.itm_cost,reeval.itm_cost itm_cost_reeval,abs(mov.itm_cost-reeval.itm_cost) diff_cost
        select i_code,(case when  '||v_wtavg_type|| '=2 then w_code when  '||v_wtavg_type|| '=3 then whg_code else 0 end) expr 
        ,sum((p_qty+nvl(pf_qty,0))*stk_cost/p_size*in_out)itm_cost from item_movement
        group by i_code,case when  '||v_wtavg_type|| '=2 then w_code when  '||v_wtavg_type|| '=3 then whg_code else 0 end)mov,
        select i_code,(case when  '||v_wtavg_type|| '=2 then w_code when  '||v_wtavg_type|| '=3 then whg_code else 0 end) expr 
        ,sum((stk_cost/p_size)*psum_qty)itm_cost from reeval
        group by i_code,case when  '||v_wtavg_type|| '=2 then w_code when  '||v_wtavg_type|| '=3 then whg_code else 0 end
        select i_code,(case when  '||v_wtavg_type|| '=2 then w_code when  '||v_wtavg_type|| '=3 then whg_code else 0 end) expr 
        ,sum((stk_cost/p_size)*psum_qty)itm_cost from ias_reeval
        where not exists(select 1 from reeval) and '||rcrd_cnt||'=0
        group by i_code,case when  '||v_wtavg_type|| '=2 then w_code when  '||v_wtavg_type|| '=3 then whg_code else 0 end
        where mov.i_code=reeval.i_code and mov.expr=reeval.expr
        order by diff_cost desc');
 Exception when others Then 
 End;   
 Procedure Statstics_Reeval_Mst(a_cv In Out t_cv ) is
 Begin
   V_qry:='SELECT  Sum(FETCHES) FETCHES , Sum(END_OF_FETCH_COUNT) END_OF_FETCH_COUNT, Min(FIRST_LOAD_TIME) FIRST_LOAD_TIME,
       FROM  v$sqlarea
       where PARSING_SCHEMA_NAME=user
       Group By ACTION';
  Exception
  Procedure Statstics_Reeval_Dtl(a_cv  In Out t_cv ,P_ACTION IN Varchar2) 
   Begin
    V_qry:='SELECT FETCHES, END_OF_FETCH_COUNT,
       FROM   v$sqlarea
        where PARSING_SCHEMA_NAME=user
   Exception
   End;         
Procedure Insrt_Upd_Long_Op(P_Op_Type In Number, P_Total_Work In Number Default 0, P_Units In Varchar2 Default Null, P_Sofar In Number Default 0) Is
   Select Module, Action
     From V$session
    Where Audsid = Sys_context('USERENV', 'SESSIONID') And Rownum <= 1;
Procedure Create_Reev_Tbl Is
   Begin
      Insert Into Ias_Reevaluate(I_Code)
           Select Kit_Items_Detail.I_Code
             From Kit_Items_Detail, Chk_Rcrd_Must_Revlt
            Where Chk_Rcrd_Must_Revlt.I_Code = Kit_Items_Detail.Kit_Item_No And Reeval_Cnt > 0
         Group By Kit_Items_Detail.I_Code
         Select I_Code
           From Chk_Rcrd_Must_Revlt
          Where Reeval_Cnt > 0;
   Exception
   End;
   END;  
  procedure create_reeval_job(p_action in varchar2) is
  Begin
   Exception when others then 
  Exception when others then 
END;                      
Procedure Upd_Tbl_Aftr_Revl IS
/*cursor gr_avg_bfr is SELECT LAG(wt_avg_after, 1) OVER(PARTITION BY i_code, CASE
       END ORDER BY rec_no) wt_avg_before,
FROM   gr_detail
where not exists( select 1 from gr_note where pi_type=2 and c_flag=0 and g_ser=gr_detail.g_ser);
update gr_detail set wt_avg_before=rcrd.wt_avg_before
where rec_no=rcrd.rec_no;
exception when others then
raise_application_error(-20945,'Error When Update Wt_Avg_Before In Gr_Detail');
end;*/
  -- Update C_Price On Gr_Detail Table 
  Begin
    Update Gr_Detail
    Where Exists ( Select 1 From Reeval
                     Where R
  Exception When Others Then
    Raise_Application_Error(-20001, 'Err in update Gr_Detail , '|| Sqlerrm);
  End;
  -- Update I_Price On ias_outgoing_Dtl Table
   Cursor C Is Select Out_Dtl.Out_Ser,Out_Dtl.I_Code,Out_Dtl.Doc_Sequence,Out_Mst.STOCK_RATE,Out_Mst.AC_RATE
                 From ias_outgoing_Mst Out_Mst,ias_outgoing_Dtl Out_Dtl
                  Where  Out_Mst.Out_Ser = Out_Dtl.Out_Ser
                     And Exists ( Select 1 From Reeval
                                     Where Reeval.Doc_Sequence = Out_Dtl.Doc_Sequence
  Begin
      Update ias_outgoing_Dtl
      Where Out_Ser      = I.Out_Ser
  Exception When Others Then
    Raise_Application_Error(-20002, 'Err in update ias_outgoing_Dtl.I_Price , '|| Sqlerrm);
  End;
   -- Update Out_Amt On ias_outgoing_Mst Table
  Begin
     Update ias_outgoing_mst a  
        Set Out_amt = (Select Round(Nvl(Sum(I_Qty*I_Price),0),V_No_Of_Decimal_Inv)
                       From ias_outgoing_dtl
                        Where ias_outgoing_dtl.out_ser = a.out_ser)
        Where  Exists ( Select 1 From Reeval,ias_outgoing_Dtl
                         Where Reeval.Doc_Sequence = ias_outgoing_Dtl.Doc_Sequence
  Exception When Others Then
    Raise_Application_Error(-20003, 'Err in update ias_outgoing_mst.Exp_Amt , '|| Sqlerrm);
  End;
  -- Update Exp_Amt On ias_outgoing_Mst Table
  Begin
     Update ias_outgoing_mst a  
        Set exp_amt = (Select Sum(i_qty*i_price)-((Sum(i_qty*stk_cost)*a.stock_rate)/a.exp_rate)
                       From ias_outgoing_dtl
                        Where ias_outgoing_dtl.out_ser = a.out_ser)
        Where Nvl(pur_type,1) <> 1
          And Exists ( Select 1 From Reeval,ias_outgoing_Dtl
                         Where Reeval.Doc_Sequence = ias_outgoing_Dtl.Doc_Sequence
  Exception When Others Then
    Raise_Application_Error(-20003, 'Err in update ias_outgoing_mst.Exp_Amt , '|| Sqlerrm);
  End;
 -- Update I_price On ias_whtrns_dtl Table
 Begin    
 Update ias_whtrns_dtl
   Where Tr_Inout_Type = 1 
    And  Exists( Select 1 From ias_whtrns_mst
                  Where Nvl(Tr_Cost_Type,1)=1
    And Exists ( Select 1 From Reeval
                     Where Reeval.Doc_Sequence = ias_whtrns_dtl.Doc_Sequence
 Exception When Others Then
    Raise_Application_Error(-20004, 'Err in update ias_whtrns_dtl.I_Price , '|| Sqlerrm);
 begin
      update ias_itm_mst  set I_Cwtavg=( 
       Select Avg(I_Cwtavg)
          From Ias_Itm_Wcode
          Where I_Code = ias_itm_mst.I_Code
         update ias_itm_mst m  set I_Cwtavg=( 
         Select Avg(I_Cwtavg)
           From (  Select Max(I_Cwtavg) I_Cwtavg,i_code,Itm_Unt
                    From Ias_Itm_Wcode
                   Group By i_code,Itm_Unt,Whg_Code)
             Where I_Code   = m.i_code
 Exception When Others Then
  Raise_Application_Error(-20004, 'Err in update ias_itm_mst.i_cwtavg , '|| Sqlerrm);
Procedure Upd_inv_cmltv_blnc ( P_I_Code In Ias_Itm_Mst.I_Code%Type,
     Select *
       From (Select I_Code, Doc_Type, Doc_Sequence, W_Code, Expire_Date, Batch_No, Serial, In_Out, Sum((Nvl(P_Qty, 0) + Nvl(Pf_Qty, 0)) *stk_cost/p_size* In_Out) Over(Partition By I_Code, Case When V_Wtavg_Type = 2 Then W_Code When V_Wtavg_Type = 3 Then Whg_Code Else N
ull End Order By Serial Range Between Unbounded Preceding And 1 Preceding) inv_cmltv_blnc From Item_Movement)
      Where In_Out = 1
      Exec_Ddl('Create Index Gr_Doc_Seq_Indx    On Gr_Detail(Doc_Sequence)');
            Update (Select inv_cmltv_blnc
                      From Gr_Detail
                     Where Doc_Sequence = blnc.Doc_Sequence)
             Where Nvl(inv_cmltv_blnc, 0) <> Nvl(blnc.inv_cmltv_blnc, 0);
            Update (Select inv_cmltv_blnc
                      From Gr_Detail
                     Where Doc_Sequence = blnc.Doc_Sequence And I_Code = blnc.I_Code And W_Code = blnc.W_Code And Batch_No = blnc.Batch_No And Expire_Date = blnc.Expire_Date)
             Where Nvl(inv_cmltv_blnc, 0) <> Nvl(blnc.inv_cmltv_blnc, 0);
Exception
     Raise_Application_Error(-20978, 'Error When Update inv_cmltv_blnc In Gr_Detail'|| Sqlerrm);
   ( SELECT FLG_DESC  
            FROM S_FLAGS
            WHERE LANG_NO  = :P_LANG_NO
            SUM(DECODE(NVL((SELECT 1 FROM EX_RATE WHERE L_F=1 AND STOCK_CUR=1),0),1,AMT,AMT_F)) POST_AMT
            FROM IAS_POST_DTL POST_DTL
            WHERE A_CODE IN (
            SELECT INV_A_CODE FROM IAS_CONN_ACC_INV_BY_GL
            GROUP BY DOC_TYPE,JV_TYPE,BRN_NO,DOC_NO,DOC_DATE,TO_CHAR(DOC_SER)
  WHERE POST.DOC_SER=MOV.DOC_SER '||V_Whr||'
  GROUP BY POST.DOC_TYPE,POST.DOCTYPNAME,POST.JV_TYPE,POST.BRN_NO,POST.DOC_NO,POST.DOC_SER,POST.DOC_DATE,NVL(MOV.AUDIT_REF,0),POST_AMT
  ORDER BY ABS(ABS(POST_AMT)-ABS(SUM(((I_QTY+NVL(FREE_QTY,0))*STK_COST)*IN_OUT))) DESC'
CREATE OR REPLACE Package  Inv_Api_Trns_Pkg
  Function Ftch_Whtrns_MST(    P_T_W_Code In Number                              
   Function Ftch_Whtrns_Dtl (P_Doc_Ser In Number, P_Lng_No In Number Default 1)Return Clob;
   Procedure Get_Prmtr_Prc (P_Sys_No           In     Number Default Null
                           ,P_Pst_From_Br      In     Number--## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Procedure Insrt_Doc_Into_Onyx (P_Doc_Typ          In     Ias_Post_Mst.Doc_Type%Type                                
  Procedure Insrt_Doc_By_Xml (P_Doc_Typ       In     Ias_Post_Mst.Doc_Type%Type
                              ,P_Pst_From_Br   In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Procedure Insrt_Ias_Whtrns_Mst (P_Sys_No           In     Number
   Procedure Insrt_Ias_Whtrns_Dtl (P_I_Code                     In     Ias_Whtrns_Dtl.I_Code%Type Default Null
   Procedure Get_Doc_No (P_Doc_Typ In Number);
   Procedure Get_Doc_Ser (P_Doc_Typ In Number);
   Procedure Chk_Doc_No (P_Doc_Typ   In     Number
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
   Procedure Clr_Glbl_Var;
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
   Procedure Insrt_Gnr_Tax_Itm_Movmnt (P_Doc_Typ                In     Gnr_Tax_Itm_Movmnt.Doc_Type%Type Default Null
   Procedure Chk_Amt_And_Itm_Tax (P_Clc_Typ_No_Tax      In     Gnr_Tax_Itm_Movmnt.Clc_Typ_No%Type Default Null
   Procedure Chk_Mndtry_Flids (P_Doc_Typ        In     Ias_Post_Dtl.Doc_Type%Type
   Procedure Post_Transfer_In_Doc (P_DOC_TYPE              In     Number
                                   ,P_Pst_From_Br           In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Procedure Chk_Insrt_Data (P_Doc_Typ   In     Ias_Post_Mst.Doc_Type%Type
CREATE OR REPLACE Package Body Inv_Api_Trns_Pkg
 Function Ftch_Whtrns_MST(  P_T_W_Code In Number                              
       V_Sql   := 'Select Distinct M.Tr_No DOC_NO
                    From Ias_Whtrns_Mst M
                   Where M.Tr_Inout_Type = 1 
                  and  Exists (Select privilege_wh.w_code
                             From privilege_wh 
                              Where privilege_wh.w_code = M.T_W_Code
                Order By M.Tr_No, M.Tr_Type';
Exception WHEN NO_DATA_FOUND THEN
Function Ftch_Whtrns_Dtl (P_Doc_Ser In Number, P_Lng_No In Number Default 1)
   V_Sql       := 'SELECT *FROM (
        Select M.I_Code As I_Code
                 - Nvl ( (Select Sum (I_Qty)
                            From Ias_Whtrns_Dtl D
                           Where D.F_Tr_Ser = D.Tr_Ser 
                                        FROM IAS_WHTRNS_DTL M,IAS_ITM_MST I
                                        WHERE M.I_CODE = I.I_CODE
                                        WHERE NVL(I_QTY,0)>0';
Exception WHEN NO_DATA_FOUND THEN
   Procedure Get_Prmtr_Prc (P_Sys_No           In     Number Default Null
                           ,P_Pst_From_Br      In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Begin
         Begin
            Select Lang_No
              From Ias_Sys.Lang_Def
             Where Lang_Dflt = 1 And Rown
         Exception
               P_Msg_Txt   := 'Error When Select Deflt Language ';
         End;
         Begin
            Select 1
              From Ias_Sys.Lang_Def
             Where Lang_No = G_Lng_No And Rownum <= 1;
         Exception
         End;
      Begin
         Select Nvl (Check_Lmt_Sorder, 0)
           From Ias_Para_Gen
      Exception
            P_Msg_Txt   := 'Error When Select PARAMETER ' || Sqlerrm;
      End;
      /* Begin
          Select Max(Yr_No)
            From S_Prd_Dtl
           Where To_Date(G_Doc_Date, 'DD/MM/RRRR') Between F_Date And T_Date;
       Exception
       End;*/
      Begin
      Exception
      End;
   Exception
   Procedure Insrt_Doc_Into_Onyx (P_Doc_Typ          In     Ias_Post_Mst.Doc_Type%Type                                
   Begin
   Exception
   Procedure Insrt_Doc_By_Xml (P_Doc_Typ       In     Ias_Post_Mst.Doc_Type%Type
                              ,P_Pst_From_Br   In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Begin
         For M_Cv In (Select Extractvalue (Value (Xmlmstdmy), '*/SYS_NO                      ') As Sys_No
                        From Table (Xmlsequence (Extract (V_Xml_Type, '/WHTRNS/IAS_WHTRNS_MST'))) Xmlmstdmy)
            Begin --(1)
            Exception
            End; --(1)
            For D_Cv In (Select Extractvalue (Value (Xmldtldmy), '*/I_CODE                      ') As I_Code
                           From Table (Xmlsequence (Extract (V_Xml_Type, '/WHTRNS/IAS_WHTRNS_DTL'))) Xmldtldmy)
               Begin --(2)
               Exception
               End; --(2)
   Exception
   Procedure Insrt_Ias_Whtrns_Mst (P_Sys_No           In     Number
   Begin
         Begin
            Select Conn_Brn_No
              From Warehouse_Details
             Where W_Code = P_T_W_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select Nvl (Tr_Rec, 0)
              From Transfer_Types
             Where Tr_Type = G_Typ_No And Rownum <= 1;
         Exception
         End;
         Begin
            Select Ias_Whtrns_Mst.T_W_Code
              From Ias_Whtrns_Mst
             Where Ias_Whtrns_Mst.Tr_Inout_Type = 1 And Tr_Ser = G_F_Tr_Ser And Tr_No = G_F_Tr_No And Nvl (T_W_Code, 0) = Decode (Nvl (G_Allow_Mod_Rec_Wcode, 0), 0, Decode (Nvl (P_Rtn_Tr, 0), 0, Nvl (G_W_Code, 0), Nvl (G_T_W_Code, 0)), Nvl (G_T_W_Code, 0));
         Exception
         End;
         Begin
            Select Tr_A_Code
              From Warehouse_Details
             Where W_Code = G_T_W_Code;
         Exception
         End;
      Begin
      Exception
      End;
         Begin
            Select Diff_Whtrns_A_Code
              From Interface_Acc
             Where Brn_No = G_Brn_No;
         Exception
         End;
      Begin
         Select Nvl (Allow_Enter_Zero_Cost, 0)
           From Privilege_Fixed
          Where U_Id = G_Ad_U_Id And Rownum <= 1;
      Exception
            P_Msg_Txt   := 'Error When Select From Privilege_Fixed In Post_Transfer_In , ' || Chr (13) || Sqlerrm;
      End;
      Begin
         Insert Into Ias_Whtrns_Mst (Tr_Ser
      Exception
            P_Msg_Txt   := ' ERROR WHEN INSERT INTO Ias_Whtrns_Mst ' || Sqlerrm;
      End;
         Begin
         Exception
               P_Msg_Txt   := 'Error When Insert Into Gr_Note  ' || Sqlerrm;
         End;
   Exception
         P_Msg_Txt   := 'ERROR WHEN INSERT INTO  IAS_WHTRNS_MST ' || Chr (10) || Sqlerrm;
   Procedure Insrt_Ias_Whtrns_Dtl (P_I_Code                     In     Ias_Whtrns_Dtl.I_Code%Type Default Null
   Begin
      Begin
            Begin
            Exception
            End;
            Begin
               Select Decode (G_Use_Price_Whtrns_Rec_Cost, 1, Nvl (I_Price, 0), Nvl (Stk_Cost, 0)), I_Price, Doc_Sequence,I_QTY
                 From Ias_Whtrns_Dtl
                Where Tr_Inout_Type =
            Exception
                  Begin
                     Select Decode (G_Use_Price_Whtrns_Rec_Cost, 1, Nvl (I_Price, 0), Nvl (Stk_Cost, 0)), I_Price, Doc_Sequence,I_QTY
                       From Ias_Whtrns_Dtl
                      Where Tr_Inout_Type = 1 And Tr_Ser = G_F_Tr_Ser And I_Code = P_I_Code And Itm_Unt = P_Itm_Unt And T_W_Code = G_W_Code And Nvl (Doc_Sequence_Ref_Dtl, 0) = P_Doc_Sequence_Tr And Rownum <= 1;
                  Exception
                        P_Msg_Txt   := 'Error When Get ITEM From Ias_Whtrns_Dtl Transfer ' || Chr (13) || Sqlerrm;
                  End;
                  P_Msg_Txt   := 'Error When Get ITEM From Ias_Whtrns_Dtl Transfer ' || Chr (13) || Sqlerrm;
            End;
         Begin
         Exception
         End;
         Begin
            Select Ias_Doc_Seq.Nextval Into V_Doc_Sequence From Dual;
         Exception
         End;
         Select Service_Itm, Use_Serialno, Used_Itm
           From Ias_Itm_Mst
          Where I_Code = P_I_Code And Rownum <= 1;
         Begin
            Insert Into Ias_Whtrns_Dtl (Tr_Inout_Type
         Exception
               P_Msg_Txt   := 'Err. When INSERT INTO IAS_WHTRNS_DTL' || Chr (13) || Sqlerrm;
         End;
               Begin
               Exception
               End;
               Begin
               Exception
               End;
                  Begin
                  Exception
                  End;
               --## Insert Into Gr_Detail
               Begin
               Exception
               End;
               --## Insert Into Item_Movement
               Begin
               Exception
               End;
      Exception
      End;
   Procedure Get_Doc_No (P_Doc_Typ In Number)
   Begin
   Exception
   Procedure Get_Doc_Ser (P_Doc_Typ In Number)
   Begin
   Exception
   Procedure Chk_Doc_No (P_Doc_Typ   In     Number
   Begin
         Begin
            Select 1
              From Ias_Whtrns_Mst
             Where Tr_Ser = G_Doc_Ser And Tr_Inout_Type = 1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Ias_Whtrns_Mst
             Where Tr_Ser = G_Doc_Ser And Tr_Inout_Type = 2 And Rownum <= 1;
         Exception
         End;
   Exception
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
   Begin
         Begin
            Select 1
              From S_Flags
             Where Flg_Code = 'TYPE_NAME_SI' And Flg_Value = Nvl (P_Bill_Doc_Type, 0) And Rownum <= 1;
         Exception
         End;
            Begin
            Exception
            End;
            Begin
            Exception
            End;
            Begin
            Exception
            End;
            Begin
            Exception
            End;
               Begin
               Exception
               End;
            Begin
            Exception
            End;
         Begin
         Exception
         End;
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
   Begin
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
   Begin
            Begin
               Select Nvl (Max (Doc_No), 0) + 1
                 From Ias_Reserve_Mst
                Where Doc_Type_Ref = G_Doc_Typ;
            Exception
            End;
            Begin
               Insert Into Ias_Reserve_Mst (Doc_Type
            Exception
            End;
         Begin
            Insert Into Ias_Reserve_Dtl (Doc_Type
         Exception
         End;
   Procedure Insrt_Gnr_Tax_Itm_Movmnt (P_Doc_Typ                In     Gnr_Tax_Itm_Movmnt.Doc_Type%Type Default Null
   Begin
            Insert Into Gnr_Tax_Itm_Movmnt (Doc_Type
            Insert Into Gnr_Tax_Itm_Movmnt_Br (Doc_Type
         Insert Into Gnr_Rq_Tax_Itm_Movmnt (Doc_Type
   Exception
   Procedure Clr_Glbl_Var
   Begin
   Procedure Chk_Amt_And_Itm_Tax (P_Clc_Typ_No_Tax      In     Gnr_Tax_Itm_Movmnt.Clc_Typ_No%Type Default
   Begin
      Begin
         Select Nvl (Use_Vat, 0) Into V_Use_Vat From Ias_Para_Gen;
      Exception
      End;
      Begin
         V_Cnt   := Ias_Gen_Pkg.Get_Cnt (' SELECT 1  FROM (
                                             SELECT ' || P_Fld_Doc_No || ',' || P_Fld_Doc_Ser || ' FROM ' || P_Tbl_Mst_Nm || ' WHERE ' || P_Fld_Doc_Ser || ' =' || P_Doc_Ser || '
                            SELECT ' || P_Fld_Doc_No || ', ' || P_Fld_Doc_Ser || ' FROM ' || P_Tbl_Dtl_Nm || ' WHERE ' || P_Fld_Doc_Ser || ' = ' || P_Doc_Ser || ')
                                         WHERE ROWNUM<=1 ');
      Exception
      End;
   Exception
   Procedure Chk_Mndtry_Flids (P_Doc_Typ        In     Ias_Post_Dtl.Doc_Type%Type
   Begin
      Begin
         Select Nvl (Link_With_Gl, 0)
           From Ias_Para_Gen, Ias_Para_Inv, Ias_Para_Gl;
      Exception
      End;
      Begin
         Select 1
           From Account_Curr
          Where A_Code = P_Tr_A_Code And A_Cy = Ias_Gen_Pkg.Get_Stk_Cur And Rownum <= 1;
      Exception
      End;
         Begin
            Select 1
              From Account_Curr
             Where A_Code = P_Diff_A_Code And A_Cy = Ias_Gen_Pkg.Get_Stk_Cur And Rownum <= 1;
         Exception
         End;
   Exception
Procedure Post_Transfer_In_Doc (P_Doc_Type              In     Number
                               ,P_Pst_From_Br           In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
      Begin
         Select Nvl (Use_Auto_Rec_Whtrns, 0), Conn_Brn_No
           From Warehouse_Details
          Where W_Code = P_T_W_Code;
      Exception
      End;
            Begin
               Select 1
                 From Ias_Whtrns_Mst
                Where Tr_Inout_Type = 2 And Nvl (F_Tr_Ser, 0) = Nvl (P_F_Tr_Ser, 0) And Rownum <= 1;
            Exception
            End;
         Begin
            Select T_Tr_Type
              From Ias_Whtrns_Mst
             Where Tr_Inout_Type = 1 And Tr_Ser = P_F_Tr_Ser;
         Exception
         End;
            Begin
               Select Tr_Type
                 From Transfer_Types
                Where Tr_Rec In (2, 3) And Nvl (Tr_Res, 0) = 0 And Rownum <= 1;
            Exception
            End;
               Select *
                 From Ias_Whtrns_Mst
                Where Ias_Whtrns_Mst.Tr_Ser = P_F_Tr_Ser And Ias_Whtrns_Mst.Tr_Inout_Type = 1 And Nvl (Hung, 0) = 0;
         Begin
               Begin
               Exception
               End;
                     Select *
                       From Ias_Whtrns_Dtl
                      Where Tr_Ser = M_Cv.Tr_Ser And Tr_Inout_Type = 1;
               Begin
                     Begin
                     Exception
                     End; 
               End;
         End;
Exception
   Procedure Chk_Insrt_Data (P_Doc_Typ   In     Ias_Post_Mst.Doc_Type%Type
   Begin
             BEGIN
             EXCEPTION
             END;
        Begin 
           For J In (Select TR_SER
                       From (Select    M.TR_SER
                                   , (Select Sum (I_Qty)
                                        From Ias_Whtrns_Dtl D
                                       Where D.F_TR_SER = G_F_TR_SER  
                               From Ias_Whtrns_Dtl M
                              Where M.TR_SER = G_F_TR_SER
        EXCEPTION When Others Then
        End;
         Begin
         Exception
         End;
         Begin
         Exception
         End;
         --## Update Warehouse Transfer Process = 1
         Begin
            Update Ias_Whtrns_Mst
             Where Tr_Inout_Type = 1 And Tr_Ser = G_F_TR_SER;
         Exception
         End;
   Exception
INV_DBA_PROCEDURE_SCRIPT
INV_DBA_PROCEDURE_SCRIPT
CREATE INDEX IAS_WHTRNS_DTL_I_CODE_INDX ON IAS_WHTRNS_DTL (I_CODE)
CREATE INDEX INV_ITMMV_DOC_SQ_INDX ON ITEM_MOVEMENT(DOC_SEQUENCE)
CREATE INDEX INV_GRDTL_DOC_SQ_INDX ON GR_DETAIL(DOC_SEQUENCE)
INV_DBA_FUNCTION_SCRIPT
INV_DBA_PROCEDURE_SCRIPT
INV_DBA_FUNCTION_SCRIPT
"PKG INIT"INV_DBA_FUNCTION_SCRIPT"V_USE_INDV_INV_SYSTEM"V_USE_NEGATIVE_INV"V_CONS_NAME"<cursor ptr>"<SQL statement. Line 710>""
INV_DBA_FUNCTION_SCRIPT
CREATE OR REPLACE Function Get_Comp_Itm_Qty( P_icode          In Ias_itm_mst.I_code%Type
      Begin
         Select 1
         From   Ias_itm_mst
         Where  I_code = P_icode 
         And Exists(Select 1
                        From   Compound_items
                        Where  I_code = Ias_itm_mst.I_code And Rownum <= 1)
      Exception
      End;
         Begin
               Begin
                 EXECUTE IMMEDIATE' Select Min(I_qty),Max(I_qty)       
                             From   (Select   K.I_CODE
                                     From  (  select i_code,(i_qty*p_size) I_qty,p_size from '||P_TBL_NM||' 
                                                 where  W_code = :P_wcode ' ||P_WHR||'       ) D,
                                     Where    D.I_code(+) = K.DI_CODE 
                                     Group By K.I_CODE
               Exception
               End;
               Begin
               Exception
               End;
         End;
            Begin
                 EXECUTE IMMEDIATE' Select SUM(I_Qty) From '||P_TBL_NM||' 
                                           Where  W_Code = :P_Wcode  ' ||P_WHR||' ' 
            Exception
            End;      
Exception
Create Or Replace Function Last_Purchase_Price ( P_Wtavg_Type In Number, 
 Begin
     Begin
             Select (Nvl(Stk_Cost,0)/Nvl(P_Size,1))  Into V_Lst_Prchs_Price
               From Gr_Detail ,
                    From Gr_Detail
                   Where Gr_Detail.Pi_Type = 2 
             Where Gr_Detail.Pi_Type          = 2
             Select (Nvl(Stk_Cost,0)/Nvl(P_Size,1))  Into V_Lst_Prchs_Price
               From Gr_Detail ,
                    From Gr_Detail
                   Where Gr_Detail.Pi_Type = 2
             Where Gr_Detail.Pi_Type = 2
     Exception
     End;
CREATE OR REPLACE Function Get_Col_Batch_Nm (P_Lng_No In Number ,P_Col In Number) Return Char Is
Exception
CREATE OR REPLACE Function Get_Itm_Batch_Sq_Auto (P_Pcode   In   Ias_Itm_Mst.I_Code%Type ) Return Char Is
           Select Length(P_Pcode) + 2  
           From Dual ;
           Select Nvl(Max(To_Number(Substr(Batch_No,V_Lngh_Itm))),0) + 1
           Into V_New_Batch  From  Gr_Detail
           Where  I_Code=P_Pcode ; 
Exception
CREATE OR REPLACE Function Inv_Get_Itm_Batch_Auto_Sq_Fnc( P_Icode     In Ias_Itm_Mst.I_Code%Type    ,
         Begin                                                    
              Begin
                Select Nvl(Use_Batch_No,0),Nvl(Use_Batch_No_Auto_Sq_Flg,0),Batch_No_Mthd_No_Sq 
                        From Ias_Itm_Mst
                       Where I_Code=P_Icode;                                     
                Exception 
                End;
                              Select Fld_Nm,Fld_Lngth,Fld_Frmt,FLD_CODE  
                                From Inv_Batch_No_Mthd_Dtl
                                Where Mthd_No = V_Batch_No_Mthd_No_Sq
                                Order By Rcrd_No ;
                Begin
                       Begin 
                           Select Max(Batch_No)  Into V_Max_Batch 
                           From Ias_Itm_Mst , Gr_Detail
                           Where Ias_Itm_Mst.I_Code = Gr_Detail.I_Code 
                       Exception 
                        End;
                       Begin 
                        Select To_Char(To_Date(P_Doc_Date),Nvl(I.Fld_Frmt,'DD')) Into V_Config_Batch   From Dual; 
                       Exception 
                       End;
                       Begin 
                        Select To_Char(To_Date(P_Doc_Date),Nvl(I.Fld_Frmt,'MM')) Into V_Config_Batch   From Dual; 
                        Exception 
                       End;
                       Begin
                        Select To_Char(To_Date(P_Doc_Date),Nvl(I.Fld_Frmt,'YY')) Into V_Config_Batch   From Dual; 
                        Exception 
                       End;
                       Begin 
                        Select To_Char(To_Date(P_Doc_Date),Nvl(I.Fld_Frmt,'DD/MM')) Into V_Config_Batch   From Dual; 
                       Exception 
                       End; 
                       Begin 
                        Select To_Char(To_Date(P_Doc_Date),Nvl(I.Fld_Frmt,'MM/YY')) Into V_Config_Batch   From Dual; 
                       Exception 
                       End; 
                       Begin 
                        Select To_Char(To_Date(P_Doc_Date),Nvl(I.Fld_Frmt,'DD/MM/YY')) Into V_Config_Batch   From Dual; 
                       Exception 
                       End; 
              End;  
CREATE OR REPLACE Function Inv_Get_Itm_QR_Code_Mthd_No ( P_QR_Code_Type In Ias_Itm_Mst.Use_Qr_Code_Type%Type ,
       Select QR_Code_Mthd_No
         From Ias_Itm_Mst
        Where I_Code = P_Itm_Code
       Select QR_Code_Mthd_No
         From Ias_Itm_Dtl
        Where I_Code  = P_Itm_Code
 Exception 
CREATE OR REPLACE Function Open_Stock ( P_I_code  In   Ias_Itm_Mst.I_Code%Type,
 Begin
     Begin
       V_Sqlstr:=' Select Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0)  
                      From  '||V_Tbl_Nm||' Itm_Mov 
                        Where I_Code =  '||''''||P_I_Code||''''||' '  ;
     Exception  When Others Then
     End;
CREATE OR REPLACE Function Open_Stock_Exp_Bat ( P_I_code  In   Ias_Itm_Mst.I_Code%Type,
 Begin
     Begin
       V_Sqlstr:=' Select Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0)  
                      From  '||V_Tbl_Nm||' Itm_Mov 
                        Where I_Code =  '||''''||P_I_Code||''''||' '  ;
     Exception  When Others Then
     End;
Create Or Replace Function Yr_Open_Stock_Fnc ( P_Icode       In   Ias_Itm_Mst.I_Code%Type,
      Begin
          V_SqlStr := ' Select   Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0)
              From '||P_Tble_Nm_Dtl||' Itm_Mov,'||P_Tble_Nm_Mst||' Itm_Dtl
      Exception
      End; 
      Begin      
        V_SqlStr :=  ' Select   Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0) 
          From '||P_Tble_Nm_Dtl||' Itm_Mov,'||P_Tble_Nm_Mst||' Itm_Dtl
             Where  Itm_Mov.I_Code=Itm_Dtl.I_code And Itm_Dtl.I_Code      = '||''''||P_Ic
      Exception
      End; 
         Begin
          V_SqlStr :=   ' Select   Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0)
              From '||P_Tble_Nm_Dtl||' Itm_Mov,'||P_Tble_Nm_Mst||' Itm_Dtl
             Where Itm_Mov.I_Code=Itm_Dtl.I_code And Itm_Dtl.I_Code      = '||''''||P_Icode||''''||' AND ITM_DTL.Itm_Unt = Itm_Pkg.Get_Icode_Min_Unit  (P_I_Code => '||''''||P_Icode||'''' || ')'||' '  ;
         Exception
         End; 
Exception
CREATE OR REPLACE Function Get_Icode_Trns_Qty_Not_Receved ( P_Icode   In   Ias_Itm_Mst.I_Code%Type,
     Begin
           Begin
            select Nvl(Sum(P_Qty),0)/P_Psize Into V_Tr_Qty 
             from Ias_Whtrns_Dtl
                Where Tr_Inout_Type=1
                And Not Exists ( Select 1 From 
                            Where Wht_M.Tr_Ser         =  Wht_D.Tr_Ser
                --Group by I_Code,T_W_code;
           Exception
           End; 
           Begin 
            select Nvl(Sum(P_Qty),0)/P_Psize Into V_Rec_Qty 
             from Ias_Whtrns_Dtl
                Where Tr_Inout_Type=2
                And Not Exists ( Select 1 From 
                            Where Wht_M.Tr_Ser         =  Wht_D.Tr_Ser
               -- Group BY I_Code,W_code;
           Exception
           End;      
         Exception
     Begin
           Begin 
            select Nvl(Sum(P_Qty),0)/P_Psize Into V_Tr_Qty 
             from Ias_Whtrns_Dtl
                Where Tr_Inout_Type=1
               -- Group by I_Code,T_W_code,Expire_Date,Batch_No;
           Exception
           End;      
           Begin
            select Nvl(Sum(P_Qty),0)/P_Psize Into V_Rec_Qty 
             from Ias_Whtrns_Dtl
                Where Tr_Inout_Type=2
               -- Group BY I_Code,w_code,Expire_Date,Batch_No;
           Exception
           End; 
  Exception
  End;
Exception
CREATE OR REPLACE Function Check_Item_Move( P_Csttype    In Number   ,
 Begin
alter table IAS_ITM_WCODE drop constraint 
CREATE OR REPLACE Function Check_Item_Move( P_Csttype    In Number   ,
 Begin
                 Select 1 Into V_Cnt From Item_Movement
                   Where I_Code  = P_Icode
                 Select 1 Into V_Cnt From Item_Movement
                   Where I_Code = P_Icode
                 Select 1 Into V_Cnt From Item_Movement
                   Where I_Code  = P_Icode
                 Select 1 Into V_Cnt From Item_Movement
                   Where I_Code = P_Icode
                        Select 1 Into V_Cnt From Item_Movement
                          Where I_Code  = P_Icode
                           And Serial >( Select Min(Serial) From Item_Movement
                                          Where Doc_Type    = P_Doctype
                                Select 1 Into V_Cnt From Item_Movement
                                  Where I_Code = P_Icode
                                   And Serial >( Select Min(Serial) From Item_Movement
                                                  Where Doc_Type      = P_Doctype
                     Select 1 Into V_Cnt From Item_Movement
                      Where I_Code  = P_Icode
                       And Serial >( Select Min(Serial) From Item_Movement
                                      Where Doc_Type    = P_Doctype
                            Select 1 Into V_Cnt From Item_Movement
                              Where I_Code = P_Icode
                               And Serial >( Select Min(Serial) From Item_Movement
                                              Where Doc_Type      = P_Doctype
                    Select 1 Into V_Cnt From Gr_Detail
                     Where Pi_Type         = P_Doctype
                  Select 1 Into V_Cnt From Item_Movement
                   Where I_Code               = P_Icode
                    And Serial >( Select Max(Serial) From Item_Movement
                                   Where Doc_Type    = P_Doctype
                  Select 1 Into V_Cnt From Item_Movement
                   Where I_Code  = P_Icode
                    And Serial >( Select Max(Serial) From Item_Movement
                                   Where Doc_Type    = P_Doctype
 Exception 
ALTER TABLE IAS_ITM_WCODE ADD (CONSTRAINT IASSTG_AVLQTY_CHKVL CHECK (AVL_QTY >= 0))
CREATE OR REPLACE FUNCTION Get_Pri_Cost_Fifo (pcode    Ias_Itm_Mst.I_CODE%TYPE   ,
  Begin
                     Begin
                       Select Sum((((Nvl(p_qty,0)+Nvl(pf_qty,0))*Nvl(stk_cost,0))/Nvl(p_size,1))*in_out)/sum((Nvl(p_qty,0)+Nvl(pf_qty,0))*in_out)
                         From item_movement
                        Where I_Code = pcode
                       Exception
                      End;
                   Begin
                      Select Sum((((Nvl(p_qty,0)+Nvl(pf_qty,0))*Nvl(stk_cost,0))/Nvl(p_size,1))*in_out)/sum((Nvl(p_qty,0)+Nvl(pf_qty,0))*in_out)
                       From Item_Movement
                      Where I_Code = pcode
                     Exception   When Others  Then
                  End;
                    Begin
                         Select Sum((((Nvl(p_qty,0)+Nvl(pf_qty,0))*Nvl(stk_cost,0))/Nvl(p_size,1))*in_out)/sum((Nvl(p_qty,0)+Nvl(pf_qty,0))*in_out)
                           From item_movement
                          Where I_Code = pcode
                       Exception
                      End;
                    Begin
                         Select Sum((((Nvl(p_qty,0)+Nvl(pf_qty,0))*Nvl(stk_cost,0))/Nvl(p_size,1))*in_out)/sum((Nvl(p_qty,0)+Nvl(pf_qty,0))*in_out)
                           From item_movement
                          Where I_Code = pcode
                       Exception
                      End;
Exception
CREATE OR REPLACE FUNCTION Get_Icode_AvlQty_Priv ( P_Icode   In   Ias_Itm_Mst.I_Code%Type,
       Begin
          Select nvl(Sum(distinct avl_qty),0)/P_Psize
             From Ias_Itm_Wcode,Privilege_wh
            Where I_Code  = P_Icode
       Exception
         End;
      Begin
         Select Sum(avlq)/P_Psize Into avlq From (
                Select Sum(distinct Avl_qty) avlq,Ias_Itm_Wcode.w_code 
                  From Ias_Itm_Wcode,Privilege_wh
                 Where I_Code  = P_Icode
                 Group By Ias_Itm_Wcode.w_code  );
        Exception When Others Then
      End;                 
EXCEPTION
Create Or Replace Function Get_Icode_Avlqty ( P_Icode   In   Ias_Itm_Mst.I_Code%Type,
  Begin
       Select Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0) /Nvl( P_Psize,1)
         From Item_Movement
        Where I_Code = P_Icode
   Exception
  End;
     Begin
              Select Nvl(Sum(Distinct Avl_Qty),0)/P_Psize
                 From Ias_Itm_Wcode
            Where I_Code=P_Icode
         Exception
     Begin
        Select Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0) /Nvl( P_Psize,1)
          From Item_Movement
         Where I_Code = P_Icode
Exception
  End;
      Begin
     Select Sum(Avlq) Into Avlq From (
          Select (Sum(Distinct Avl_Qty)/Nvl( P_Psize,1)) Avlq,W_Code 
            From Ias_Itm_Wcode
               Where Ias_Itm_Wcode.I_Code = P_Icode
       Group By W_Code  );
Exception When Others Then
      End;
Exception
CREATE OR REPLACE Function Calc_Wtavg_Cost ( P_Cost_Type  In Number,
  Begin
               Begin
                  Select Nvl(I_cwtavg,0)
                    From Ias_Itm_Mst 
                   Where I_code=P_Icode
               Exception
                   Begin  
                      Select Nvl(I_Cwtavg,0) 
                        From Ias_Itm_Wcode 
                       Where I_code  = P_Icode
                   Exception 
                  Begin                                       
                      Select Max(Nvl(I_Cwtavg,0)) 
                        From Ias_Itm_Wcode 
                       Where I_code    = P_Icode
                  Exception 
     Begin
      Exception
     End;
      Begin
        Update Ias_Itm_Mst Set I_cwtavg = Round(nvl(v_Nwtavg,0) ,P_Frc_No)
         Where I_Code = P_Icode;
        Update Ias_Itm_Mst Set Primary_Cost = Nvl(I_cwtavg,0)
         Where I_Code = P_Icode
       Exception
      End;
      Begin
        Update Ias_Itm_Wcode Set I_cwtavg = Round(nvl(v_Nwtavg,0) * nvl(p_size,1),P_Frc_No)
         Where I_Code = P_Icode
        Update Ias_Itm_Wcode Set Primary_Cost = Nvl(I_cwtavg,0)
         Where I_Code = P_Icode
       Exception
      End;
      Begin
        Update Ias_Itm_Wcode Set I_cwtavg = Round(nvl(v_Nwtavg,0) * nvl(p_size,1),P_Frc_No)
         Where I_Code   = P_Icode
        Update Ias_Itm_Wcode Set Primary_Cost = Nvl(I_cwtavg,0)
         Where I_Code   = P_Icode
       Exception
      End;
        Begin
        Update Ias_Itm_Mst
         Where I_Code = P_Icode ; 
      Exception
      End;
Create Or Replace Function Inv_Get_Avg_Itm_Cst_Fnc ( P_Cost_Type  In Ias_Para_Inv.Costing_Type%Type ,
         Select Nvl(I_Cwtavg, 0)
          From Ias_Itm_Mst
          Where I_Code = P_I_Code ;
         Select Avg(I_Cwtavg)
           From Ias_Itm_Wcode
          Where I_Code = P_I_Code
         Select Avg(I_Cwtavg)
           From (  Select Max(I_Cwtavg) I_Cwtavg
                    From Ias_Itm_Wcode
                     Where I_Code   = P_I_Code
                  Group By Whg_Code)
          Where Nvl(I_Cwtavg, 0) > 0;
CREATE OR REPLACE FUNCTION Last_Incoming_Price_To_Date ( P_Wtavg_Type In Number, 
    Begin
       Select (nvl(stk_cost,0)/nvl(p_size,1))* P_Psize
         From Gr_Detail ,
               ( SELECT MAX(gr_Detail.gr_date)  GDate
                 From Gr_detail
                Where I_code = P_Icode
      Where I_Code = P_Icode
   Exception
    End;
    Begin
     Select (nvl(stk_cost,0)/nvl(p_size,1))  Into v_Lst_Inc_Price
            From Gr_Detail
           Where I_code = P_Icode
     Where I_Code = P_Icode
     Exception
        Begin
             Select nvl(I_Cwtavg,0) 
               From Ias_Itm_Mst
                where I_Code=P_Icode;
               Select nvl(I_Cwtavg,0) 
               From Ias_Itm_Wcode
                where I_code=P_Icode
           Exception When Others Then
          End;
    End;
CREATE OR REPLACE Function Get_Wcode_Revaluate_Cost (P_Icode   In  Ias_Itm_Dtl.I_Code%Type ,
  Begin
          Begin
             Select  Decode(Sum(Nvl( Ias_Itm_Wcode.Avl_Qty,0)),0,Sum(Nvl(Ias_Itm_Wcode.I_Cwtavg,0)),Sum(Nvl( Ias_Itm_Wcode.Avl_Qty,0)*Nvl(Ias_Itm_Wcode.I_Cwtavg,0)))/
               From Ias_Itm_Wcode
                Where Ias_Itm_Wcode.I_Code   =  P_Icode
          Exception
          End;
          Begin
            Select Wtavg_Type 
            From Ias_Para_Inv ;
          Exception
             Cursor C_Itm Is Select    Distinct W_Code , 
                                    From Ias_Itm_Wcode 
                                      Where  I_Code    = P_Icode
           Begin
  Exception
Create Or Replace Function Get_Post_Code_Inv ( 
     Begin
      Select G_Code 
       From Ias_Itm_Mst 
        Where I_Code = P_I_Code 
     Exception  When Others Then
     Begin
      Select Whg_Code 
       From Warehouse_Details 
        Where W_Code = P_W_Code 
     Exception When Others Then
CREATE OR REPLACE FUNCTION Get_Pri_Cost ( P_Wtavg_Type In  NUMBER,
      Begin
      Select nvl(i_cwtavg,0)
        From Ias_Itm_Mst
       Where I_Code = P_Icode;
      Select nvl(i_cwtavg,0)
        From Ias_Itm_Wcode
       Where I_Code   = P_Icode
       Exception
      End;
   Elsif P_isfd = 1  Then      -- select first date of periods
      Select Min (f_date)
        From S_PRD_DTL;
         BEGIN
            Select nvl(gd.wt_avg_after,0)
              From gr_detail gd
             Where gd.I_Code   = P_Icode
                      (Select Max (rec_no)
                         From gr_detail gd
                        Where gd.I_Code   = P_Icode
         EXCEPTION
         END;
         BEGIN
            Select nvl(gd.wt_avg_after,0)
              From gr_detail gd
             Where gd.I_Code   = P_Icode
                      (Select Max (rec_no)
                         From gr_detail gd
                        Where gd.I_Code   = P_Icode
         EXCEPTION
         END;
         BEGIN
            Select nvl(gd.wt_avg_after,0)
              From gr_detail gd
             Where gd.I_Code   = P_Icode
                      (Select Max (rec_no)
                         From gr_detail gd
                        Where gd.I_Code   = P_Icode
         EXCEPTION
         END;
         BEGIN
            Select nvl(gd.wt_avg_after,0)
              From gr_detail gd
             Where gd.I_Code   = P_Icode
                      (Select MAX (rec_no)
                         From gr_detail gd
                        Where gd.I_Code   = P_Icode
         EXCEPTION
         END;
         BEGIN
            Select nvl(gd.wt_avg_after,0)
              From gr_detail gd
             Where gd.I_Code   = P_Icode
                      (Select MAX (rec_no)
                         From gr_detail gd
                        Where gd.I_Code   = P_Icode
         EXCEPTION
         END;
         BEGIN
            Select nvl(gd.wt_avg_after,0)
              From gr_detail gd
             Where gd.I_Code   = P_Icode
                      (Select MAX (rec_no)
                         From gr_detail gd
                        Where gd.I_Code   = P_Icode
         EXCEPTION
         END;
      BEGIN
         Select nvl(gd.wt_avg_after,0)
           From gr_detail gd
          Where gd.I_Code   = P_Icode
                   (Select MAX (rec_no)
                      From gr_detail gd
                     Where gd.I_Code   = P_Icode
      EXCEPTION
      END;
      BEGIN
         Select nvl(gd.wt_avg_after,0)
           From gr_detail gd
          Where gd.I_Code  
                   (Select MAX (rec_no)
                      From gr_detail gd
                     Where gd.I_Code   = P_Icode
      EXCEPTION
      END;         
      BEGIN
         Select nvl(gd.wt_avg_after,0)
           From gr_detail gd
          Where gd.I_Code   = P_Icode
                   (Select MAX (rec_no)
                      From gr_detail gd
                     Where gd.I_Code   = P_Icode
      EXCEPTION
      END;
 EXCEPTION
Create Or Replace Function  Inv_Get_Itm_Prmry_Cst_Fnc ( P_I_Code     In Ias_Itm_Mst.I_Code%Type      
             Begin
               Select Primary_Cost
                 From Ias_Itm_Mst
                Where I_Code = P_I_Code 
             Exception
             End;
             Begin
               Select Nvl(Primary_Cost, 0)
                 From Ias_Itm_Wcode
                Where I_Code = P_I_Code 
             Exception
             End;
             Begin
               Select Max(Nvl(Primary_Cost, 0))
                 From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
             Exception
             End;
         Begin
            Select Nvl(Primary_Cost, 0)
              From Ias_Itm_Mst
             Where I_Code  = P_I_Code 
         Exception
         End;
         Begin
            Select Nvl(Stk_Cost, 0)/ Nvl(P_Size,1)
              From Gr_Detail
             Where I_Code = P_I_Code 
              And  Rec_No = ( Select Min(Rec_No)
                       From Gr_Detail
                        Where I_Code   = P_I_Code ) ;
         Exception
         End;
      Begin
      Exception
      End;
Exception
Create Or Replace Function Inv_Get_Lst_Itm_Prmry_Cst_Fnc ( P_I_Code     In Ias_Itm_Mst.I_Code%Type   
        Select Cst_Code
          From Inv_Itm_Cst_Ordr
         Where Cst_Type = 2
      Order By Cst_Ordr ;
Exception
Create Or Replace Function Inv_Get_Itm_Wtavg_Fnc( P_I_Code       In Ias_Itm_Mst.I_Code%Type
 Begin
            Begin
               Select I_Cwtavg
               From Ias_Itm_Mst
                Where I_Code  = P_I_Code 
            Exception
            End;
            Begin
               Select I_Cwtavg
               From Ias_Itm_Wcode
                Where I_Code  = P_I_Code 
            Exception
            End;
            Begin
               Select Max(Nvl(I_Cwtavg, 0))
               From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
            Exception
            End;           
            Begin
               Select Max(I_Cwtavg)
                 From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
            Exception
            End;
            Begin
               Select Max(I_Cwtavg)
                 From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
            Exception
            End;
               Begin
                  Select Max(I_Cwtavg)
                    From Ias_Itm_Wcode
                   Where I_Code   = P_I_Code 
               Exception
               End;
            Begin
               Select I_Cwtavg
               From Ias_Itm_Mst
                Where I_Code  = P_I_Code
            Exception
            End;         
            Begin
               Select Primary_Cost
                 From Ias_Itm_Mst
                Where I_Code  = P_I_Code
            Exception
            End;
            Begin
               Select Nvl(Primary_Cost, 0)
                 From Ias_Itm_Wcode
                Where I_Code  = P_I_Code 
            Exception
            End;
            Begin
               Select Max(Nvl(Primary_Cost, 0))
                 From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
            Exception
            End;
         Begin
            Select Nvl(Primary_Cost, 0)
             From Ias_Itm_Mst
              Where I_Code  = P_I_Code 
         Exception
         End;
         Begin
            Select Nvl(I_Cwtavg, 0)
              From Ias_Itm_Mst
             Where I_Code  = P_I_Code
         Exception
         End;
         Begin
            Select (Nvl(Vndr_Price, 0) * Ias_Gen_Pkg.Get_Cur_Rate(Ias_V_Vndr_Itm.A_Cy)) / Ias_Gen_Pkg.Get_Cur_Rate(Ias_Gen_Pkg.Get_Stk_Cur)
              From Ias_V_Vndr_Itm
             Where I_Code            = P_I_Code 
         Exception
               Begin
                  Select (Nvl(Vndr_Price, 0) * Ias_Gen_Pkg.Get_Cur_Rate(Ias_V_Vndr_Itm.A_Cy)) / Ias_Gen_Pkg.Get_Cur_Rate(Ias_Gen_Pkg.Get_Stk_Cur)
                    From Ias_V_Vndr_Itm
                   Where I_Code  = P_I_Code 
               Exception
               End;
         End;
      Begin
      Exception
      End;
Exception
Create Or Replace Function Inv_Get_Lst_Itm_Wtavg_Fnc ( P_I_Code     In Ias_Itm_Mst.I_Code%Type
     Select Cst_Code
     From Inv_Itm_Cst_Ordr
         Where Cst_Type = 1
      Order By Cst_Ordr;
 Begin
 Exception
CREATE OR REPLACE Function  Inv_Get_Wcode_Cost( P_Costing_Type  Ias_Para_Inv.Costing_Type%Type,
   Select Sum(Nvl(Avl_Qty, 0) * Nvl(I_Cwtavg, 0))
     From (Select I_Code,
             From (  Select I_Code, W_Code, Nvl(Sum(In_Out * (Nvl(P_Qty, 0) + Nvl(Pf_Qty, 0))), 0) Avl_Qty
                       From Item_Movement
                      Where W_Code = p_wcode
                   Group By I_Code, W_Code
Exception
Create Or Replace Function Sync_Doc_To_Tra(p_doc_type number,
    for i in (SELECT b.bill_no,
                   (select nvl(count(*),0) from ias_bill_dtl where ias_bill_dtl.bill_ser=b.bill_ser) items_cnt,
                   (SELECT r_e_name FROM regions WHERE r_code = c.r_code) area,
                   (SELECT city_e_name FROM cities WHERE city_no = c.city_no) city,
                   (SELECT cntry_e_name FROM cntry WHERE cntry_no = c.cntry_no) cntry,
            FROM ias_bill_mst b, customer c
            WHERE b.c_Code = c.c_Code AND bill_ser = p_doc_ser)
        select xmlelement("AccountingSupplierParty",
                               (SELECT city_e_name FROM cities WHERE city_no = s_brn.city_no)),
                               (SELECT city_e_name FROM cities WHERE city_no = s_brn.city_no)),
                               (SELECT cntry_e_name FROM cntry WHERE cntry_no = s_brn.cntry_no)))),
               )).getClobVal() into v_fragment from s_brn
        where brn_no=i.brn_no;
        select xmlagg( 
                                          (select brn_tax_code from s_brn where s_brn.brn_no=ias_bill_mst.brn_no) /*ro be replaced with saller tax code ??*/)),
                        )).GetClobVal() into v_fragment    from ias_bill_mst,ias_bill_dtl,ias_itm_mst
            where ias_bill_mst.bill_ser=ias_bill_dtl.bill_ser 
      SELECT v_xml.extract('//SendInvoiceResponse/SendInvoiceResult/@IsSucceded','xmlns="http://tempuri.org/"').getStringVal(),
      FROM   dual;
        --update the ias_bill_mst with the TRA_bill_no,
        update ias_bill_mst 
        where  to_char(bill_ser)=v_bill_ser_rt;
    for i in (SELECT b.r
                   (select nvl(count(*),0) from ias_rt_bill_dtl where ias_rt_bill_dtl.rt_bill_ser=b.rt_bill_ser) items_cnt,
                   (SELECT r_e_name FROM regions WHERE r_code = c.r_code) area,
                   (SELECT city_e_name FROM cities WHERE city_no = c.city_no) city,
                   (SELECT cntry_e_name FROM cntry WHERE cntry_no = c.cntry_no) cntry,
            FROM ias_rt_bill_mst b, customer c
            WHERE b.c_Code = c.c_Code AND rt_bill_ser = p_doc_ser)
        select xmlelement("AccountingSupplierParty",
                               (SELECT city_e_name FROM cities WHERE city_no = s_brn.city_no)),
                               (SELECT city_e_name FROM cities WHERE city_no = s_brn.city_no)),
                               (SELECT cntry_e_name FROM cntry WHERE cntry_no = s_brn.cntry_no)))),
               )).getClobVal() into v_fragment from s_brn
        where brn_no=i.brn_no;
        select xmlagg( 
                                          (select brn_tax_code from s_brn where s_brn.brn_no=ias_rt_bill_mst.brn_no) /*ro be replaced with saller tax code ??*/)),
                        )).GetClobVal() into v_fragment    from ias_rt_bill_mst,ias_rt_bill_dtl,ias_itm_mst
            where ias_rt_bill_mst.rt_bill_ser=ias_rt_bill_dtl.rt_bill_ser 
      SELECT v_xml.extract('//SendInvoiceResponse/SendInvoiceResult/@IsSucceded','xmlns="http://tempuri.org/"').getStringVal(),
      FROM   dual;
        --update the ias_rt_bill_mst with the TRA_bill_no,
        update ias_rt_bill_mst 
        where  to_char(rt_bill_ser)=v_bill_ser_rt;
    for i in (SELECT d.doc_no,
                   (select nvl(count(*),0) from IAS_BILL_DTL_ADD_DISC where IAS_BILL_DTL_ADD_DISC.doc_ser=d.doc_ser) items_cnt,
                   (SELECT r_e_name FROM regions WHERE r_code = c.r_code) area,
                   (SELECT city_e_name FROM cities WHERE city_no = c.city_no) city,
                   (SELECT cntry_e_name FROM cntry WHERE cntry_no = c.cntry_no) cntry,
            FROM IAS_BILL_MST_ADD_DISC d,ias_bill_mst b, customer c
            where d.bill_ser=b.bill_ser
        select xmlelement("AccountingSupplierParty",
                               (SELECT city_e_name FROM cities WHERE city_no = s_brn.city_no)),
                               (SELECT city_e_name FROM cities WHERE city_no = s_brn.city_no)),
                               (SELECT cntry_e_name FROM cntry WHERE cntry_no = s_brn.cntry_no)))),
               )).getClobVal() into v_fragment from s_brn
        where brn_no=i.brn_no;
        select xmlagg( 
                                          (select brn_tax_code from s_brn where s_brn.brn_no=IAS_BILL_MST_ADD_DISC.brn_no) /*ro be replaced with saller tax code ??*/)),
                        )).GetClobVal() into v_fragment    from IAS_BILL_MST_ADD_DISC,
            where IAS_BILL_MST_ADD_DISC.doc_ser=IAS_BILL_DTL_ADD_DISC.doc_ser 
      SELECT v_xml.extract('//SendInvoiceResponse/SendInvoiceResult/@IsSucceded','xmlns="http://tempuri.org/"').getStringVal(),
      FROM   dual;
        --update the IAS_BILL_MST_ADD_DISC with the TRA_bill_no,
        update IAS_BILL_MST_ADD_DISC 
        where  to_char(doc_ser)=v_bill_ser_rt;
Exception When Others Then 
SELECT NVL(USE_INDV_INV_SYSTEM,0),NVL(USE_NEGATIVE_INV,0)   FROM IAS_PARA_INV,IAS_PARA_GEN"
      Begin
          V_SqlStr := ' Select   Nvl(Sum(In_Out*(Nvl(P_Qty,0)+Nvl(Pf_Qty,0)) ),0)
              From '||P_Tble_Nm_Dtl||' Itm_Mov,'||P_Tble_Nm_Mst||' Itm_Dtl
CREATE INDEX INV_GRDTL_DOC_SQ_INDX ON GR_DETAIL(DOC_SEQUENCE)
INV_DBA_FUNCTION_SCRIPT
INV_DBA_PROCEDURE_SCRIPT
ALTER TABLE IAS_ITM_WCODE drop CONSTRAINT IAS_ITM_DTL_WCODE_PSIZE 
ALTER TABLE IAS_ITM_DTL drop CONSTRAINT IAS_ITM_DTL_ICODE_PSIZE
ALTER TABLE IAS_ITEM_SERIALNO DROP CONSTRAINT IASITMSERIALNO_PK
ALTER TABLE IAS_ITEM_SERIALNO ADD (CONSTRAINT IASITMSERIALNO_PK PRIMARY KEY (DOC_SER, I_CODE,W_Code, SERIALNO)
 Begin
                 Select 1 Into V_Cnt From Item_Movement
                   Where I_Code  = P_Icode
                 Select 1 Into V_Cnt From Item_Movement
                   Where I_Code = P_Icode
INV_DBA_FUNCTION_SCRIPT
INV_DBA_PROCEDURE_SCRIPT
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/AMSLIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
Insert into S_LST_SLCT
   ('LST_CUR_CODE', 'SELECT TO_CHAR (CUR_NO)||'' - ''||CUR_CODE ,CUR_CODE FROM EX_RATE WHERE 1=1 ', NULL, NULL, NULL)
Insert into S_LST_SLCT
   ('LST_PJ', 'SELECT TO_CHAR(PJ_NO)||''-''||Decode(:PARAMETER.LANG_NO,1,PJ_A_NAME,nvl(PJ_A_NAME,PJ_E_NAME)) PJ_NM , TO_CHAR(PJ_NO) FROM IAS_PROJECTS M WHERE NVL(INACTIVE,0)= 0 ', NULL, 'PJ_NO', NULL)
SELECT TABLE_NAME,COLUMN_NAME   FROM USER_COL_COMMENTS  WHERE COLUMN_NAME IN ( ''AD_U_ID'',''AD_DATE'',''VHCL_NO'',''OUT_STS'',''TRLR2_NO'',''DOC_NO_REF_TRNS'',''DOC_DSC'',''CLR_AMT'',''FLD1'',''FLD8'',''PHON_NO'',''INS_CMP_L_NM'',''INS_CMP_TEL'',''CNTCT_PRSN'',''ITM_TYP_F_NM'',''PARA_NO'',''MNTNC_OTHR_PLCY'',''PNLTY_RSP'',''MAIN_VHCL_PRC_PRCNT'',''SCND_VHCL_PRC_AMT'',''PRC_TYP_NO'',''PRC_L_DSC'',''LOC_NO_SRC'',''APRV_DATE'',''DRVR_NO_MAIN'',''UNT_PRC'',''DSCNT_PRCNT'',''VAT_AMT'',''NET_AMT'',''VHCL_F_DSC'',''SCNDRY_METER_CURRENT_VLU'',''FIELD1'',''FIELD6'',''INACTIV'',''INACTIV_RES'',''UP_U_ID'',''UP_TRMNL_NM'',''TRNS_DSC'',''BRN_YEAR'',''FLD4'',''FLD5'',''FLD10'',''DOC_RNW_DATE'',''INS_CMP_NO'',''LSNC_ISSU_PLC'',''EXPIRE_DATE'',''FUL_TYP_L_NM'',''MNTNC_TYP_NO'',''DOC_END_RMNDR_BFR_DAY'',''LOC_NO_DST'',''M_MTR_VLU'',''SCHDL_ARVL_DATE'',''ACTL_DPRT_DATE'',''CTGRY_NO'',''CHASSIS_NO'',''ENGN_NO'',''SCNDRY_METER_INIT_VLU'',''LSNC_ID'',''BRND_F_NM'',''VHCL_TYP_L_NM'',''CHKLST_LMNT_NO'',''INACTIV_U_ID'',''TRNS_DATE'',''V_CODE_NEW'',''CNTRCT_TYP_L_NM'',''DOC_SRL'',''IN_NOTE'',''LMNT_NOTE'',''FLD3'',''FLD7'',''FLD9'',''DOC_RNW_SER'',''EMAIL'',''ITM_TYP_NO'',''LOC_NO'',''LOC_L_NM'',''MNTNC_TYP_L_NM'',''PATH_L_DSC'',''PATH_F_DSC'',''DST_LOC_NO'',''C_CODE'',''ITM_UNT'',''TOT_PRC'',''DSTNC_MSUR'',''APPROVED'',''QTY'',''VHCL_NO_MAIN'',''SCND_MTR_VLU'',''SCND_MTR_RCV_VLU'',''SCHDL_DPRT_DATE'',''ACTL_ARVL_DATE'',''DOC_TYP_REF_TRNS'',''TRNSPRT_TYP_L_NM'',''VHCL_CONN1'',''MAIN_METER_CURRENT_VLU'',''CHKLST_LMNT_L_NM'',''INACTIV_DATE'',''UP_DATE'',''DOC_NO'',''OUT_NOTE'',''IN_STS'',''LMNT_AMT'',''BRN_USR'',''REF_NO'',''CSTDY_AMT'',''FLD6'',''DRVR_ADDRSS'',''ID_NO'',''PLACE_OF_ISSUE'',''FUL_TYP_NO'',''LGSTC_DOC_SERIAL'',''AVOID_UP_V_CODE'',''PATH_NO'',''PNLTY_TYP_F_NM'',''SCND_VHCL_PRC_PRCNT'',''M_MTR_RCV_VLU'',''DSCNT_TYP'',''INSUR_ISSU_PLC'',''AS_BRN_NO'',''LSNC_ISSU_DATE'',''CONN_TYP'',''TRNS_NO'',''TYP_NO'',''RMN_AMT'',''EXPR_DATE'',''FUL_TYP_F_NM'',''INS_CMP_F_NM'',''LOC_TYP_F_NM'',''MNTNC_TYP_F_NM'',''ALLOW_DOC_DEL_NO'',''CONN_SRC_LOC_TYP'',''PNLTY_TYP_NO'',''
Forms_DDL('CREATE TABLE AMS_MNT_JOB_PRT
Forms_DDL('CREATE TABLE AMS_MNT_JOB_SRV
CREATE INDEX INDX_
Complete Create Index AMS
SELECT DISTINCT M.TABLE_NAME   FROM USER_CONSTRAINTS M  WHERE M.CONSTRAINT_TYPE = ''R''  AND M.DELETE_RULE = ''CASCADE''  AND (M.TABLE_NAME LIKE  ''AMS%'' ) AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''%TMP''  AND M.TABLE_NAME NOT LIKE  ''%OLD%'' ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_CONSTRAINTS M,USER_CONS_COLUMNS D  WHERE M.CONSTRAINT_NAME = D.CONSTRAINT_NAME  AND M.TABLE_NAME = D.TABLE_NAME  AND
 M.CONSTRAINT_TYPE = ''R''  AND M.DELETE_RULE = ''CASCADE''  AND M.TABLE_NAME = :b1  AND NOT EXISTS  (SELECT 1   FROM USER_IND_COLUMNS  WHERE TABLE_NAME = M.TABLE_NAME  AND COLUMN_NAME = D.COLUMN_NAME  AND ROWNUM <= 1 )"
A tools common schema table is missing from the object store
Unable to fetch record from table %[1]s.
Unable to update old version of library.
  Procedure Table_Filed_Prc (P_Ent In Number Default 0) ;
Forms_DDL('CREATE TABLE AMS_MNT_JOB_CHK
Insert into AMS_PARA
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_MST
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into AMS_COD_DTL
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
   (2, 8205, 'Update Plan', 0, 1, 
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
', 'Update Plan', 1, 0, 
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
Insert into IAS_SYS.GNR_DDC_TBL
INSERT INTO AMS_ODMTR_HST (
 SELECT DOC_TYP,
   FROM 
   WHERE DOC_TYP=8206
   GROUP BY DOC_TYP,BRN_AS_NO,AS_CODE,MSUR_UNT
   ORDER BY BRN_AS_NO,AS_CODE
SELECT 1   FROM AMS_PARA  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_COD_MST  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_COD_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_MSUR_UNT  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_MSUR_CNVRT  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_COD_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_
SRV_CONN_AST  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV_CONN_SPR  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_TAX_SRV  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV_CNTR  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV_CNTR_CONN_SRV  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV_CNTR_LBR  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV_CNTR_MTRL  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_FUL_TNK  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV_NTF  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV_NTF_PRT  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SRV_NTF_SRV  WHERE ROWNUM <= 1"SELECT 1   FROM AMS_SPR_PRT_RCV  WHERE ROWNUM <= 1"SELECT SUBSTR(:b1,4,4)   FROM DUAL"SELECT 1   FROM AMS_ODMTR_HST  WHERE ROWNUM <= 1"
CREATE OR REPLACE PACKAGE AMS_GNRL_PKG
    FUNCTION GET_MSUR_UNT_NM ( P_LANG    IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION GET_COD_NM ( P_LANG          IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION GET_SRV_NM ( P_LANG    IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION GET_FUL_TNK_NM ( P_LANG         IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION GET_AST_NM ( P_LANG   IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION Get_Emp_Eng (P_Emp_No In S_Emp.Emp_No%Type , 
    FUNCTION GET_COD_DTL_NM ( P_LANG       IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION GET_AVL_QTY (P_TNK_NO IN   NUMBER ) RETURN NUMBER;  
    FUNCTION GET_MSUR_UNT_NO ( P_TNK_NO IN   NUMBER ) RETURN NUMBER ; 
    FUNCTION GET_TNK_CPCTY (P_TNK_NO IN   NUMBER ) RETURN NUMBER; 
    FUNCTION GET_SPR_PRT_NM ( P_LANG        IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION GET_SRV_CNTR_NM ( P_LANG          IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION GET_PLN_NM ( P_LANG    IN   LANG_DEF.LANG_NO%TYPE,
    FUNCTION GET_NTF_NM ( P_LANG      IN   LANG_DEF.LANG_NO%TYPE,
CREATE OR REPLACE PACKAGE BODY AMS_GNRL_PKG AS
    FUNCTION GET_MSUR_UNT_NM ( P_LANG       IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LANG ,1,MSUR_L_NM, NVL(MSUR_F_NM,MSUR_L_NM)) 
          FROM AMS_MSUR_UNT 
         WHERE MSUR_NO= P_MSUR_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_COD_NM ( P_LANG          IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN
        SELECT COD_LBL_NO 
          FROM AMS_COD_MST 
         WHERE COD_TYP_NO= P_COD_TYP_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_SRV_NM ( P_LANG    IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LANG,1,SRV_L_NM,NVL(SRV_F_NM,SRV_L_NM))  
          FROM AMS_SRV 
         WHERE SRV_NO = P_SRV_NO 
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_FUL_TNK_NM ( P_LANG         IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LANG ,1,TNK_L_NM, NVL(TNK_F_NM,TNK_L_NM)) 
          FROM AMS_FUL_TNK 
         WHERE TNK_NO= P_TNK_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_AST_NM ( P_LANG   IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LANG ,1,AST_L_NM, NVL(AST_F_NM,AST_L_NM)) 
          FROM AMS_V_AST_VHCL 
         WHERE AST_NO= P_AST_NO
    EXCEPTION 
    FUNCTION Get_Emp_Eng ( P_Emp_No In S_Emp.Emp_No%Type , 
    Begin
        Select  Decode (P_Lng_No,1,Emp_L_Nm,Nvl(Emp_F_Nm,Emp_L_Nm) ) 
          From  S_Emp
         Where Emp_No = P_Emp_No  
    Exception When Others Then
    End;
    FUNCTION GET_COD_DTL_NM ( P_LANG        IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LANG ,1,COD_L_NM, NVL(COD_F_NM,COD_L_NM)) 
          FROM AMS_COD_DTL 
         WHERE COD_NO= P_COD_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_AVL_QTY ( P_TNK_NO IN   NUMBER 
    BEGIN
        SELECT NVL(AVL_QTY,0) 
          FROM AMS_FUL_TNK 
         WHERE TNK_NO = P_TNK_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_MSUR_UNT_NO ( P_TNK_NO IN   NUMBER 
    BEGIN
        SELECT NVL(MSUR_UNT,0)
          FROM AMS_FUL_TNK 
         WHERE TNK_NO= P_TNK_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_TNK_CPCTY ( P_TNK_NO IN   NUMBER 
    BEGIN
        SELECT NVL(TNK_CPCTY,0)
          FROM AMS_FUL_TNK 
         WHERE TNK_NO= P_TNK_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_SPR_PRT_NM ( P_LANG          IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN 
        SELECT DECODE(P_LANG ,1,SPR_PRT_L_NM, NVL(SPR_PRT_F_NM,SPR_PRT_L_NM))  
          FROM AMS_SPR_PRT_RCV 
         WHERE SPR_PRT_NO= P_SPR_PRT_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_SRV_CNTR_NM ( P_LANG          IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN 
        SELECT DECODE(P_LANG ,1,CNTR_L_NM, NVL(CNTR_F_NM,CNTR_L_NM))  
          FROM AMS_SRV_CNTR 
         WHERE CNTR_NO= P_CNTR_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_PLN_NM ( P_LANG    IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LANG,1,PLN_L_DSC,NVL(PLN_F_DSC,PLN_L_DSC))  
          FROM AMS_PLN_MST 
         WHERE PLN_NO = P_PLN_NO
    EXCEPTION  WHEN OTHERS  THEN 
    END;
    FUNCTION GET_NTF_NM ( P_LANG         IN   LANG_DEF.LANG_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LANG ,1,NTF_L_NM, NVL(NTF_F_NM,NTF_L_NM)) 
          FROM AMS_SRV_NTF 
         WHERE NTF_NO= P_NTF_NO
    EXCEPTION WHEN OTHERS THEN
CREATE OR REPLACE PACKAGE AMS_TRNS_PKG
    FUNCTION GET_LST_ODOMTR_READ ( P_AS_BRN_NO    IN   NUMBER,
    FUNCTION GET_MSUR_UNT_NO ( P_TNK_NO IN   NUMBER ) RETURN NUMBER ;
    FUNCTION GET_TNK_CPCTY (P_TNK_NO IN   NUMBER ) RETURN NUMBER;
    FUNCTION GET_UNT_CST ( P_DOC_SRL  IN   AMS_MNT_EXEC_DTL.DOC_SRL_REF%TYPE,
    FUNCTION GET_AST_CLS (   P_BRN_NO IN   NUMBER,
    FUNCTION GET_EXEC_STS ( P_DOC_SRL    IN   NUMBER ) RETURN NUMBER;
    FUNCTION GET_SRV_NTF (P_BRN_AS_NO   NUMBER,
    FUNCTION GET_NTF_STS (P_BRN_AS_NO   NUMBER,
    FUNCTION GET_SRV_NTF_MTR (P
    FUNCTION GET_NTF_MTR (P_BRN_AS_NO   NUMBER,
    FUNCTION GET_AST_ODMTR_MSUR ( P_AS_BRN_NO    IN   NUMBER,
    FUNCTION GET_CNTRCT_RMN_AMT ( P_DOC_SRL    IN   NUMBER,
    Procedure TRNSFR_TRNS_PRC ( P_CRNT_YEAR_UNIT    IN   VARCHAR2,
        SELECT MAX(ODMTR_VLU) 
          FROM AMS_ODMTR_hst 
         WHERE BRN_AS_NO= P_AS_BRN_NO
        SELECT MAX(ODMTR_VLU) 
          FROM AMS_ODMTR_hst 
         WHERE BRN_AS_NO= P_AS_BRN_NO
CREATE OR REPLACE PACKAGE BODY AMS_TRNS_PKG AS
 FUNCTION GET_LST_ODOMTR_READ ( P_AS_BRN_NO    IN   NUMBER,
 BEGIN  
 EXCEPTION WHEN OTHERS THEN
 FUNCTION GET_MSUR_UNT_NO (P_TNK_NO IN   NUMBER ) RETURN NUMBER IS 
 BEGIN
         BEGIN
             SELECT NVL(MSUR_UNT,0)INTO V_MSUR_UNT_NO FROM AMS_FUL_TNK 
             WHERE TNK_NO= P_TNK_NO;
         END;
 FUNCTION GET_TNK_CPCTY (P_TNK_NO IN   NUMBER ) RETURN NUMBER IS 
 BEGIN
         BEGIN
             SELECT NVL(TNK_CPCTY,0)INTO V_TNK_CPCTY FROM AMS_FUL_TNK 
             WHERE TNK_NO= P_TNK_NO;
         END;
 FUNCTION GET_UNT_CST ( P_DOC_SRL  IN   AMS_MNT_EXEC_DTL.DOC_SRL_REF%TYPE,
 BEGIN
   SELECT ITM_CST 
     FROM AMS_MNT_EXEC_DTL 
    WHERE DOC_SRL_REF=P_DOC_SRL
 EXCEPTION 
 FUNCTION GET_AST_CLS (   P_BRN_NO IN   NUMBER,
    SELECT COUNT(*)
      FROM AMS_MNT_JOB_ORDR
     WHERE CLOSED =0
  EXCEPTION 
  FUNCTION GET_EXEC_STS ( P_DOC_SRL    IN   NUMBER ) RETURN NUMBER IS 
 BEGIN
    SELECT NVL(COUNT(*),0)
   FROM AMS_MNT_JOB_PRT
                FROM AMS_MNT_JOB_SRV)
    WHERE DOC_SRL= P_DOC_SRL;
    SELECT NVL(COUNT(*),0)
                FROM AMS_MNT_JOB_PRT
                FROM AMS_MNT_JOB_SRV)
    WHERE EXEC = 0 AND
 EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_SRV_NTF (P_BRN_AS_NO   NUMBER,
    begin
        SELECT READ_IS_VRBL,NVL(MTR_NTF_VLU,99999999)MTR_NTF_VLU,NVL(DAY_NTF_VLU,99999)DAY_NTF_VLU,
          FROM AMS_SRV_NTF
         WHERE BRN_AS_NO = P_BRN_AS_NO
        IF V_READ_IS_VRBL =1 THEN --- WHEN NTF VALUE COM FROM MAINTENANCE
            BEGIN
                SELECT DOC_DATE, NVL(MTR_VLU_CRNT,0),NVL(MTR_NTF,V_MTR_NTF_VLU),NVL(DAY_NTF,V_DAY_NTF_VLU)
                      (SELECT DOC_DATE, MTR_VLU_CRNT,MTR_NTF,DAY_NTF
                         FROM AMS_MNT_JOB_ORDR R ,AMS_MNT_JOB_SRV S
                        WHERE R.DOC_SRL=S.DOC_SRL
                          AND DOC_DATE = (SELECT MAX(DOC_DATE)
                                            FROM AMS_MNT_JOB_ORDR R ,AMS_MNT_JOB_SRV S
                                           WHERE R.DOC_SRL=S.DOC_SRL
                        ORDER BY MTR_NTF DESC NULLS LAST )
                 WHERE ROWNUM <=1;
            EXCEPTION WHEN OTHERS THEN
            END;
            BEGIN
                SELECT DOC_DATE, NVL(MTR_VLU_CRNT,0)
                      (SELECT DOC_DATE,R.DOC_NO, MTR_VLU_CRNT,MTR_NTF,DAY_NTF
                         FROM AMS_MNT_JOB_ORDR R ,AMS_MNT_JOB_SRV S
                        WHERE R.DOC_SRL=S.DOC_SRL
DATE = (SELECT MAX(DOC_DATE)
                                            FROM AMS_MNT_JOB_ORDR R ,AMS_MNT_JOB_SRV S
                                           WHERE R.DOC_SRL=S.DOC_SRL
                        ORDER BY DOC_DATE,R.DOC_NO DESC )
                 WHERE ROWNUM <=1;
            EXCEPTION WHEN OTHERS THEN
            END;
    FUNCTION GET_NTF_STS (P_BRN_AS_NO   NUMBER,
            SELECT SRV_NO 
                FROM AMS_SRV_NTF_SRV
             WHERE NTF_NO=P_NTF_NO
    BEGIN 
    FUNCTION GET_SRV_NTF_MTR (P_BRN_AS_NO   NUMBER,
    begin
        SELECT READ_IS_VRBL,NVL(MTR_NTF_VLU,99999999)MTR_NTF_VLU,NVL(DAY_NTF_VLU,99999)DAY_NTF_VLU,
          FROM AMS_SRV_NTF
         WHERE BRN_AS_NO = P_BRN_AS_NO
        IF V_READ_IS_VRBL =1 THEN --- WHEN NTF VALUE COM FROM MAINTENANCE
            BEGIN
                SELECT DOC_DATE, NVL(MTR_VLU_CRNT,0),NVL(MTR_NTF,V_MTR_NTF_VLU),NVL(DAY_NTF,V_DAY_NTF_VLU)
                      (SELECT DOC_DATE, MTR_VLU_CRNT,MTR_NTF,DAY_NTF
                         FROM AMS_MNT_JOB_ORDR R ,AMS_MNT_JOB_SRV S
                        WHERE R.DOC_SRL=S.DOC_SRL
                          AND DOC_DATE = (SELECT MAX(DOC_DATE)
                                            FROM AMS_MNT_JOB_ORDR R ,AMS_MNT_JOB_SRV S
                                           WHERE R.DOC_SRL=S.DOC_SRL
                        ORDER BY MTR_NTF DESC NULLS LAST )
                 WHERE ROWNUM <=1;
            EXCEPTION WHEN OTHERS THEN
            END;
            BEGIN
                SELECT DOC_DATE, NVL(MTR_VLU_CRNT,0)
                      (SELECT DOC_DATE,R.DOC_NO, MTR_VLU_CRNT,MTR_NTF,DAY_NTF
                         FROM AMS_MNT_JOB_ORDR R ,AMS_MNT_JOB_SRV S
                        WHERE R.DOC_SRL=S.DOC_SRL
                          AND DOC_DATE = (SELECT MAX(DOC_DATE)
                                            FROM AMS_MNT_JOB_ORDR R ,AMS_MNT_JOB_SRV S
                                           WHERE R.DOC_SRL=S.DOC_SRL
                        ORDER BY DOC_DATE,R.DOC_NO DESC )
                 WHERE ROWNUM <=1;
            EXCEPTION WHEN OTHERS THEN
            END;
    FUNCTION GET_NTF_MTR (P_BRN_AS_NO   NUMBER,
            SELECT SRV_NO 
                FROM AMS_SRV_NTF_SRV
             WHERE NTF_NO=P_NTF_NO
    BEGIN 
   FUNCTION GET_AST_ODMTR_MSUR ( P_AS_BRN_NO    IN   NUMBER,
    BEGIN
        SELECT MSUR_UNT 
         WHERE BRN_AS_NO= P_AS_BRN_NO
    EXCEPTION WHEN OTHERS THEN
    FUNCTION GET_CNTRCT_RMN_AMT ( P_DOC_SRL    IN   NUMBER,
    BEGIN
        SELECT SUM(SRV_CST)
          FROM AMS_MNT_JOB_SRV 
         WHERE DOC_SRL_REF_CNTRCT= P_DOC_SRL
        SELECT DECODE(RCRD_NO,NULL,CNTRCT_PRC,AMT)
          FROM AMS_MNT_CNTRCT M
         WHERE M.DOC_SRL= P_DOC_SRL  
    EXCEPTION WHEN OTHERS THEN
    Procedure TRNSFR_TRNS_PRC ( P_CRNT_YEAR_UNIT    IN   VARCHAR2,
            SELECT DOC_TYP, DOC_NO, DOC_SRL,
              FROM AMS_MNT_JOB_ORDR 
             WHERE AMS_TRNS_PKG.GET_EXEC_STS(DOC_SRL) IN (1,2)
             ORDER BY BRN_NO,DOC_TYP,DOC_NO;
    BEGIN
        SELECT Ias_gen_Pkg.get_Frst_Day 
          FROM DUAL;
        SELECT TRNS_DOC_SRL
  FROM AMS_PARA
         WHERE ROWNUM<=1;
        SELECT NVL(COUNT(*),0) 
          FROM AMS_MNT_REQ_MST;
            V_SQL_ST:= 'SELECT DOC_TYP, DOC_SRL, BRN_NO
                          FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_REQ_MST R
                         WHERE NOT EXISTS(SELECT 1 FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_CHK_MST   WHERE DOC_SRL_REF_REQ =R.DOC_SRL AND ROWNUM <=1)
                           AND NOT EXISTS(SELECT 1 FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_ORDR  WHERE DOC_SRL_REF_REQ =R.DOC_SRL AND ROWNUM <=1) 
                         ORDER BY BRN_NO,DOC_TYP,DOC_NO';
                V_SQL_ST:= 'INSERT INTO AMS_MNT_REQ_MST (
                            SELECT DOC_TYP,:V_DOC_NO,:V_DOC_SRL, 
                              FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_REQ_MST
                             WHERE DOC_SRL=:IDOC_SRL';
                BEGIN
                    V_SQL_ST:= 'SELECT PRBLM_NO
                                  FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_REQ_DTL
                                 WHERE DOC_SRL='||C_DOC_SRL||
                               ' ORDER BY PRBLM_NO';
                        V_SQL_ST:= 'INSERT INTO AMS_MNT_REQ_DTL (
                                    SELECT :V_DOC_NO,:V_DOC_SRL,PRBLM_NO, 
                                      FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_REQ_DTL
                                     WHERE DOC_SRL=:IDOC_SRL
        SELECT NVL(COUNT(*),0) 
          FROM AMS_MNT_CHK_MST;
            V_SQL_ST:= 'SELECT DOC_TYP, DOC_SRL, BRN_NO
                          FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_CHK_MST C
                         WHERE NOT EXISTS (SELECT 1 FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_ORDR WHERE  DOC_SRL_REF_CHK =
                         ORDER BY BRN_NO,DOC_TYP,DOC_NO';
           V_SQL_ST:= 'INSERT INTO AMS_MNT_CHK_MST (
                            SELECT DOC_TYP,:V_DOC_NO,:V_DOC_SRL, 
                              FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_CHK_MST
                             WHERE DOC_SRL=:IDOC_SRL';
                BEGIN
                    V_SQL_ST:= 'SELECT PRBLM_NO
                                  FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_CHK_DTL
                                 WHERE DOC_SRL='||C_DOC_SRL||
                               ' ORDER BY PRBLM_NO';
                        V_SQL_ST:= 'INSERT INTO AMS_MNT_CHK_DTL (
                                    SELECT :V_DOC_NO,:V_DOC_SRL,PRBLM_NO, 
                                      FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_CHK_DTL
                                     WHERE DOC_SRL=:IDOC_SRL
        SELECT NVL(COUNT(*),0) 
          FROM AMS_MNT_JOB_ORDR;
            V_SQL_ST:= 'SELECT DOC_TYP, DOC_SRL, BRN_NO
                          FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_ORDR
                         WHERE '||P_CRNT_YEAR_UNIT||'.AMS_TRNS_PKG.GET_EXEC_STS(DOC_SRL) IN (1,2)
                         ORDER BY BRN_NO,DOC_TYP,DOC_NO';
                V_SQL_ST:= 'INSERT INTO AMS_MNT_JOB_ORDR (
                            SELECT DOC_TYP,:V_DOC_NO,:V_DOC_SRL, 
                              FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_ORDR
                             WHERE DOC_SRL=:IDOC_SRL';
                BEGIN
                    V_SQL_ST:= 'SELECT PRBLM_NO 
                                  FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_PRBLM P
                                 WHERE (EXISTS (SELECT 1 
                                                  FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_SRV 
                                                 WHERE DOC_SRL = P.DOC_SRL 
                                    OR  EXISTS (SELECT 1 
                                                  FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_PRT 
                                                 WHERE DOC_SRL = P.DOC_SRL 
                               ' ORDER BY PRBLM_NO';
                        V_SQL_ST:= 'INSERT INTO AMS_MNT_JOB_PRBLM (
                                    SELECT :V_DOC_NO,:V_DOC_SRL,PRBLM_NO, 
                                      FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_PRBLM
                                     WHERE DOC_SRL=:IDOC_SRL
                    V_SQL_ST:= 'SELECT PRBLM_NO, RCRD_NO
                                  FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_SRV 
                                 WHERE EXEC=0
                               ' ORDER BY RCRD_NO';
                        V_SQL_ST:= 'INSERT INTO AMS_MNT_JOB_SRV (
                                    SELECT :V_DOC_NO,:V_DOC_SRL,PRBLM_NO, 
                                      FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_SRV
                                     WHERE DOC_SRL = :IDOC_SRL
                    V_SQL_ST:= 'SELECT PRBLM_NO, RCRD_NO
                                  FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_PRT 
                                 WHERE EXEC=0
                               ' ORDER BY RCRD_NO';
                        V_SQL_ST:= 'INSERT INTO AMS_MNT_JOB_PRT (
                                    SELECT :V_DOC_NO,:V_DOC_SRL,PRBLM_NO, 
                                      FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_PRT
                                     WHERE DOC_SRL = :IDOC_SRL
                    V_SQL_ST:= 'SELECT PRBLM_NO, SRV_RCRD_NO, RCRD_NO
                                  FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_LBR L
                                 WHERE EXISTS (SELECT 1 
                                                 FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_SRV 
                                                WHERE DOC_SRL = L.DOC_SRL 
                               ' ORDER BY RCRD_NO';
                        V_SQL_ST:= 'INSERT INTO AMS_MNT_JOB_LBR (
                                    SELECT :V_DOC_NO,:V_DOC_SRL,PRBLM_NO, 
                                      FROM '||P_CRNT_YEAR_UNIT||'.AMS_MNT_JOB_LBR
                                     WHERE DOC_SRL = :IDOC_SRL
    EXCEPTION WHEN OTHERS THEN
CREATE OR REPLACE PACKAGE AMS_POSTING_PKG IS
-- This Package Contains All Financial Procedures And Functions Of AMS System.
-- This Procedure Get The Basic Parameters. 
PROCEDURE GET_PARA ( P_LANG_NO   IN NUMBER     DEFAULT 1,
Procedure Post_AMS_ORDR_EXEC
PROCEDURE Post_Doc_In_Sav 
CREATE OR REPLACE PACKAGE BODY AMS_POSTING_PKG IS
-- This Package Contains All Financial Procedures And Functions Of AMS System.
PROCEDURE GET_PARA ( P_LANG_NO   IN NUMBER     DEFAULT 1,
-- This Procedure Get The Basic Parameters.
  BEGIN
    SELECT NVL(USE_BALANCED_CC,0),NVL(USE_BALANCED_BRN,0),
      FROM IAS_PARA_GEN,AMS_PARA,IAS_PARA_GL,IAS_PARA_INV;
  EXCEPTION 
  END;
  SELECT CUR_CODE 
    FROM EX_RATE 
   WHERE L_F = 1;
EXCEPTION 
Procedure Get_Interface_Ac(P_Brn_no     In NUMBER     ) Is
 Select  AMS_A_CODE_EXPNS ,AMS_A_CODE_LBR,AMS_CC_CODE_LBR,AMS_PRT_EXPNS_AC 
   From Interface_Acc 
  Where Brn_No=P_Brn_No 
  Exception 
Procedure Post_AMS_ORDR_EXEC
 Begin
     ( Select 
     From AMS_MNT_EXEC_MST M  
    Where nvl(M.POSTED,0)  =Decode(Nvl(P_Post_Typ,0),0,0,nvl(M.POSTED,0))
        And Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = G_User_no                            
    If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_typ,M_cv.doc_ser),0)  = 0 Then -- (Begin Chk Exist) --
     --## Insert into Ias_Post_Mst
            (SELECT *
                    (SELECT M.DOC_SRL, EXP_AC_CODE A_CODE,'' A_CODE_DTL
                    FROM AMS_MNT_EXEC_MST M, AMS_MNT_EXEC_DTL D
                    WHERE M.DOC_SRL=D.DOC_SRL
                    GROUP BY M.DOC_SRL,EXP_AC_CODE,M.A_CY,M.AC_RATE,EXP_CC_CODE,PJ_NO,ACTV_NO,M.DOC_DSC,M.DOC_NO_REF)
                    WHERE DOC_SRL=M_cv.doc_ser
            (SELECT *
                    (SELECT M.DOC_SRL, AC_CODE A_CODE,'' A_CODE_DTL
                    FROM AMS_MNT_EXEC_MST M, AMS_MNT_EXEC_DTL D,AMS_SRV S
                    WHERE M.DOC_SRL=D.DOC_SRL
                    SELECT M.DOC_SRL, G_PRT_EXPNS_AC A_CODE,'' A_CODE_DTL
                    FROM AMS_MNT_EXEC_MST M, AMS_MNT_EXEC_DTL D
                    WHERE M.DOC_SRL=D.DOC_SRL
                    GROUP BY M.DOC_SRL,NET_AMT,D.A_CY,D.AC_RATE,EXP_CC_CODE,ACTV_NO,PJ_NO,M.DOC_DSC,M.DOC_NO_REF)
                    WHERE DOC_SRL=M_cv.doc_ser
            (SELECT *
                    (SELECT M.DOC_SRL, G_EXPNS_AC A_CODE,'' A_CODE_DTL
                    FROM AMS_MNT_EXEC_MST M, AMS_MNT_EXEC_DTL D
                    WHERE M.DOC_SRL=D.DOC_SRL
                    GROUP BY M.DOC_SRL,M.A_CY,M.AC_RATE,EXP_CC_CODE,ACTV_NO,PJ_NO,M.DOC_DSC,M.DOC_NO
                    WHERE DOC_SRL=M_cv.doc_ser
            (SELECT *
                    (SELECT M.DOC_SRL, G_LBR_CR_AC A_CODE,'' A_CODE_DTL
                    FROM AMS_MNT_EXEC_MST M, AMS_MNT_EXEC_DTL D
                    WHERE M.DOC_SRL=D.DOC_SRL
                    GROUP BY M.DOC_SRL,D.A_CY,D.AC_RATE,EXP_CC_CODE,M.DOC_DSC,M.DOC_NO_REF
                    SELECT M.DOC_SRL, IAS_VNDR_PKG.GET_ACODE(V_CODE) A_CODE,V_CODE A_CODE_DTL
                    FROM AMS_MNT_EXEC_MST M, AMS_MNT_EXEC_DTL D
                    WHERE M.DOC_SRL=D.DOC_SRL
                    GROUP BY M.DOC_SRL,V_CODE,D.A_CY,D.AC_RATE,EXP_CC_CODE,M.DOC_DSC,M.DOC_NO_REF)
                    WHERE DOC_SRL=M_cv.doc_ser
            (SELECT *
                    (SELECT M.DOC_SRL, INV_A_CODE A_CODE,'' A_CODE_DTL
                    FROM AMS_MNT_EXEC_MST M, AMS_MNT_EXEC_DTL D, IAS_ITM_MST I, GROUP_DETAILS G,IAS_CONN_ACC_INV_BY_GL C
                    WHERE M.DOC_SRL=D.DOC_SRL
                    GROUP BY M.DOC_SRL,INV_A_CODE,I.G_CODE,D.A_CY,D.AC_RATE,EXP_CC_CODE,M.DOC_DSC,M.DOC_NO_REF)
                    WHERE DOC_SRL=M_cv.doc_ser
            (SELECT *
                    (SELECT M.DOC_SRL, INV_A_CODE A_CODE,'' A_CODE_DTL
                    FROM AMS_MNT_EXEC_MST M, AMS_MNT_EXEC_DTL D, WAREHOUSE_DETAILS I, WAREHOUSE_GROUP G,IAS_CONN_ACC_INV_BY_GL C
                    WHERE M.DOC_SRL=D.DOC_SRL
                    GROUP BY M.DOC_SRL,INV_A_CODE,I.WHG_CODE,D.A_CY,D.AC_RATE,EXP_CC_CODE,M.DOC_DSC,M.DOC_NO_REF)
                    WHERE DOC_SRL=M_cv.doc_ser
        (SELECT *
                (SELECT DOC_SRL,A_CODE,'' A_CODE_DTL,0 DTL_TYP,TAX_AMT AMT,A_CY,A
                WHERE DOC_SRL=M_cv.doc_ser
--## Update Post flag
   If P_Post_Typ = 1 Then -- From Screen Post
     Begin
       Update AMS_MNT_EXEC_MST Set POSTED=1
        Where Doc_srl =M_cv.doc_ser;
     Exception 
     End;
     --## Update Interm tables.
PROCEDURE Post_Doc_In_Sav   (   G_Doc_Type      In  NUMBER                  ,
        Begin
        Exception
        End; 
    SELECT COUNT(*)
      FROM AMS_MNT_JOB_ORDR
     WHERE CLOSED =0
  EXCEPTION 
  FUNCTION GET_EXEC_STS ( P_DOC_SRL    IN   NUMBER ) RETURN NUMBER IS 
 BEGIN
    SELECT NVL(COUNT(*),0)
AMS_FUNCTION_PKG
/TMP1/AMS_FUNCTION_PKG
"AMS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
Function Prc 
AMS_PROCEDURE_PKG
/TMP1/AMS_PROCEDURE_PKG
"AMS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
INSERT INTO FORM_DETAIL ( F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP, SYS_NO, SCR_ORGNL )   VALUES  ('SPS',360,0,null,0,0,20,8,0,null,169,null)
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES (1,360,'
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES (1,360,'Special System')
INSERT INTO PRIVILEGE (U_ID, FORM_NO, INCLUDE_FLAG,AD_FLAG, DEL_FLAG, MOD_FLAG,VIEW_FLAG, PRINT_FLAG, VWREP_FLAG,F_ORDER_NO, AD_DATE, AD_U_ID,UP_DATE, UP_U_ID)
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
   (2, 3361, 'Plan Update Reports')
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
   (2, 3305, 'Update Plan')
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FOR
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
SELECT COUNT(FORM_NO)   FROM FORM_DETAIL  WHERE FORM_NO = 360"UPDATE FORM_DETAIL SET F_INACTIVE=0 WHERE FORM_NO = 360"SELECT COUNT(1)   FROM USER_R R,FORM_DETAIL F  WHERE R.U_ID = 1"SELECT COUNT(1)   FROM PRIVILEGE"SELECT F.FORM_NO,R.U_ID,F.F_ORDER_NO   FROM FORM_DETAIL F,USER_R R  WHERE SYS_NO = 92  AND R.U_ID = 1  AND F.FORM_NO || LPAD(R.U_ID,5,''0'')  IN (SELECT FORM_NO || LPAD(U_ID,5,''0'')    FROM FORM_DETAIL,USER_R  MINUS SELECT FORM_NO || LPAD(U_ID,5,''0'')    FROM PRIVILEGE )"INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,F_ORDER_NO,AD_DATE,AD_U_ID )  VALUES ( :b1,:b2,1,1,1,1,1,1,:b3,IAS_GEN_PKG.GET_CURDATE,1  )"
 Begin
     ( Select 
     From AMS_MNT_EXEC_MST M  
    Where nvl(M.POSTED,0)  =Decode(Nvl(P_Post_Typ,0),0,0,nvl(M.POSTED,0))
        And Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = G_User_no                            
    If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_typ,M_cv.doc_ser),0)  = 0 Then -- (Begin Chk Exist) --
 ALTER TABLE AMS_MNT_TAX_MOVMNT
 ALTER TABLE AMS_MNT_JOB_ORDR
 ALTER TABLE AMS_MNT_TAX_MOVMNT
 ALTER TABLE AMS_MNT_CHK_DTL
 ALTER TABLE AMS_MNT_EXEC_DTL
 ALTER TABLE AMS_MNT_JOB_LBR
 ALTER TABLE AMS_MNT_JOB_PRT
 ALTER TABLE AMS_MNT_JOB_SRV
 ALTER TABLE AMS_MNT_REQ_DTL
 ALTER TABLE AMS_PLN_DTL
 ALTER TABLE AMS_PLN_LBR
 ALTER TABLE AMS_PLN_PRT
 ALTER TABLE AMS_REQ_PRT_DTL
 ALTER TABLE AMS_SRV_NTF_PRT
 ALTER TABLE AMS_SRV_NTF_SRV
 ALTER TABLE AMS_TAX_SRV
 ALTER TABLE AMS_FUL_TRNS
 ALTER TABLE AMS_MNT_TAX_MOVMNT
 ALTER TABLE AMS_FUL_TRNS
 ALTER TABLE AMS_MNT_CHK_MST
 ALTER TABLE AMS_MNT_REQ_MST
 ALTER TABLE AMS_MNT_EXEC_MST
 ALTER TABLE AMS_MNT_JOB_CHK
 ALTER TABLE AMS_MNT_JOB_DLVR
 ALTER TABLE AMS_MNT_JOB_ORDR
 ALTER TABLE AMS_MNT_TAX_MOVMNT
 ALTER TABLE AMS_ODMTR_READ
 ALTER TABLE AMS_PLN_UPD
 ALTER TABLE AMS_SPR_PRT_CHNG
 ALTER TABLE AMS_SPR_PRT_RNW
 ALTER TABLE AMS_SRV_CNTR_MTRL
 ALTER TABLE AMS_TNK_RFLNG
 ALTER TABLE AMS_MNT_JOB_ORDR
 ALTER TABLE
 ALTER TABLE AMS_MNT_CHK_MST
 ALTER TABLE AMS_MNT_JOB_ORDR
 ALTER TABLE AMS_REQ_PRT_MST
 ALTER TABLE AMS_SRV_CNTR_LBR
 ALTER TABLE AMS_SRV_CNTR_MTRL
 ALTER TABLE AMS_COD_DTL
 ALTER TABLE AMS_MNT_EXEC_DTL
 ALTER TABLE AMS_MNT_JOB_ORDR
 ALTER TABLE AMS_MNT_JOB_SRV
 ALTER TABLE AMS_TNK_RFLNG
 ALTER TABLE AMS_MNT_CHK_DTL
 ALTER TABLE AMS_MNT_JOB_CHK
 ALTER TABLE AMS_MNT_JOB_DLVR
 ALTER TABLE AMS_MNT_JOB_LBR
 ALTER TABLE AMS_MNT_REQ_MST
 ALTER TABLE AMS_PLN_DTL
 ALTER TABLE AMS_SRV_CNTR_LBR
 ALTER TABLE AMS_MNT_JOB_ORDR
 ALTER TABLE AMS_MSUR_CNVRT
 ALTER TABLE AMS_REQ_PRT_DTL
 ALTER TABLE AMS_MNT_JOB_PRT
 ALTER TABLE AMS_PLN_PRT
 ALTER TABLE AMS_SRV_CONN_SPR
 ALTER TABLE AMS_SRV_NTF_PRT
 ALTER TABLE AMS_PLN_LBR
 ALTER TABLE AMS_MNT_EXEC_MST
 ALTER TABLE AMS_MNT_TAX_MOVMNT
 ALTER TABLE AMS_PLN_UPD
 ALTER TABLE AMS_REQ_PRT_MST
 ALTER TABLE AMS_MNT_EXEC_DTL
 ALTER TABLE AMS_SPR_PRT_CHNG
 ALTER TABLE AMS_MNT_CHK_MST
 ALTER TABLE AMS_REQ_PRT_MST
 ALTER TABLE AMS_PLN_MST
 ALTER TABLE AMS_SRV_CNTR_CONN_SRV
 ALTER TABLE AMS_SRV_CONN_AST
 ALTER TABLE AMS_SRV_CONN_SPR
 ALTER TABLE AMS_MNT_JOB_LBR
 ALTER TABLE AMS_MNT_JOB_SRV
 ALTER TABLE AMS_SRV_NTF_SRV
 ALTER TABLE AMS_FUL_TRNS
 ALTER TABLE AMS_MSUR_CNVRT
 ALTER TABLE AMS_TNK_RFLNG
 ALTER TABLE AMS_REQ_PRT_DTL
 ALTER TABLE AMS_MNT_EXEC_DTL
 ALTER TABLE AMS_MNT_JOB_ORDR
 ALTER TABLE AMS_MNT_JOB_SRV
 ALTER TABLE AMS_SRV_CNTR
 ALTER TABLE AMS_MNT_JOB_PRT
ALTER TABLE AMS_MNT_JOB_ORDR ADD CONSTRAINT FK_NTF_AMS_MNT_JOB_ORDR 
ALTER TABLE AMS_MNT_JOB_SRV ADD CONSTRAINT FK_PO_AMS_MNT_JOB_SRV
ALTER TABLE AMS_MNT_JOB_ORDR
ALTER TABLE AMS_MNT_JOB_ORDR
 ALTER TABLE 
Complete ALTER TABLE Constraint AMS 
SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_CONSTRAINTS M,USER_CONS_COLUMNS D  WHERE M.CONSTRAINT_NAME = D.CONSTRAINT_NAME  AND M.TABLE_NAME = D.TABLE_NAME  AND (M.TABLE_NAME LIKE  ''AMS%'' ) AND M.CONSTRAINT_TYPE = ''R''  AND M.DELETE_RULE = ''CASCADE''  AND M.TABLE_NAME NOT LIKE  ''%$%''  AND EXISTS  (SELECT 1   FROM USER_TAB_COLS  WHERE TABLE_NAME = M.TABLE_NAME  AND COLUMN_NAME = D.COLUMN_NAME  AND NULLABLE = ''Y''  AND ROWNUM <= 1 ) ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_TABLES M,USER_TAB_COLS D  WHERE M.TABLE_NAME = D.TABLE_NAME  AND (M.TABLE_NAME LIKE  ''%_PRIV''  OR M.TABLE_NAME LIKE  ''%_PRV'' ) AND (M.TABLE_NAME LIKE  ''AMS%'' ) AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''HSTRY%''  AND D.COLUMN_NAME LIKE  ''U_ID%''  AND NOT EXISTS  (SELECT 1   FROM USER_CONS_COLUMNS DT,USER_CONSTRAINTS MS  WHERE MS.TABLE_NAME = DT.TABLE_NAME  AND MS.CONSTRAINT_NAME = DT.TABLE_NAME  AND MS.TABLE_NAME = M.TABLE_NAME  AND DT.COLUMN_NAME = D.COLUMN_NAME  AND MS.CONSTRAINT_TYPE = ''R''  AND NVL(DELETE_RULE,''0'') != ''CASCADE''  AND ROWNUM <= 1 )  ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_TABLES M,USER_TAB_COLS D  WHERE M.TABLE_NAME = D.TABLE_NAME  AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''%HSTRY%''  AND M.TABLE_NAME NOT LIKE  ''%_DTL''  AND M.TABLE_NAME NOT LIKE  ''%TMP''  AND (M.TABLE_NAME LIKE  ''AMS%'' ) AND D.COLUMN_NAME LIKE  ''BRN_NO%''  AND NOT EXISTS  (SELECT 1   FROM USER_CONS_COLUMNS DT,USER_CONSTRAINTS MS  WHERE MS.TABLE_NAME = DT.TABLE_NAME  AND MS.CONSTRAINT_NAME = DT.TABLE_NAME  AND MS.TABLE_NAME = M.TABLE_NAME  AND DT.COLUMN_NAME = D.COLUMN_NAME  AND MS.CONSTRAINT_TYPE = ''R''  AND ROWNUM <= 1 )  ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_TABLES M,USER_TAB_COLS D  WHERE M.TABLE_NAME = D.TABLE_NAME  AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''%TMP''  AND (M.TABLE_NAME LIKE  ''AMS%'' ) AND D.COLUMN_NAME != ''A_CODE_DTL''  AND (D.COLUMN_NAME LIKE  ''%A_CODE%''  OR D.COLUMN_NAME LIKE  ''%CC_CODE%''  OR D.COLUMN_NAME LIKE  ''PJ_NO%''  OR D.COLUMN_NAME LIKE  ''ACTV_NO%''  OR D.COLUMN_NAME LIKE  ''CUR_CODE%''  OR D.COLUMN_NAME LIKE  ''A_CY%'' ) AND NOT EXISTS  (SELECT 1   FROM USER_CONS_COLUMNS DT,USER_CONSTRAINTS MS  WHERE MS.TABLE_NAME = DT.TABLE_NAME  AND MS.CONSTRAINT_NAME = DT.TABLE_NAME  AND MS.TABLE_NAME = M.TABLE_NAME  AND DT.COLUMN_NAME = D.COLUMN_NAME  AND MS.CONSTRAINT_TYPE = ''R''  AND ROWNUM <= 1 )  ORDER BY M.TABLE_NAME"
Forms_DDL('CREATE TABLE AMS_MNT_JOB_PRT
Forms_DDL('CREATE TABLE AMS_MNT_JOB_SRV
update FORM_DETAIL set DOC_TYP=12 where FORM_NO=3310
ALTER TABLE AMS_SRV_CNTR MODIFY(AD_U_ID  NULL)
ALTER TABLE AMS_PARA ADD (LBR_POST_MTHD NUMBER(1) DEFAULT 1 NOT NULL)
ALTER TABLE AMS_MNT_JOB_ORDR ADD (NTF_NO NUMBER(6))
ALTER TABLE AMS_MNT_JOB_ORDR ADD CONSTRAINT FK_NTF_AMS_MNT_JOB_ORDR 
ALTER TABLE AMS_MNT_JOB_SRV ADD (PO_NO NUMBER(15))
ALTER TABLE AMS_MNT_JOB_SRV ADD (PO_SER NUMBER(38))
ALTER TABLE AMS_MNT_JOB_SRV ADD CONSTRAINT FK_PO_AMS_MNT_JOB_SRV
ALTER TABLE AMS_MNT_JOB_ORDR ADD (DOC_NO_REF_REQ NUMBER(15))
ALTER TABLE AMS_MNT_JOB_ORDR ADD (DOC_SRL_REF_REQ NUMBER(38))
ALTER TABLE AMS_MNT_JOB_ORDR ADD CONSTRAINT FK_REQ_AMS_MNT_JOB_ORDR
ALTER TABLE AMS_MNT_JOB_ORDR ADD (CLS_TIME DATE)
ALTER TABLE AMS_MNT_JOB_ORDR ADD (CLS_U_ID NUMBER(6))
ALTER TABLE AMS_MNT_JOB_ORDR ADD (CLS_DATE DATE)
ALTER TABLE AMS_MNT_JOB_PRT ADD (BATCH_NO VARCHAR2(30 BYTE) DEFAULT 0 NOT NULL)
ALTER TABLE AMS_MNT_JOB_PRT ADD (BARCODE VARCHAR2(30 BYTE)
ALTER TABLE AMS_MNT_JOB_PRT ADD (EXPIRE_DATE DATE  NOT NULL)
ALTER TABLE AMS_MNT_EXEC_DTL ADD (BATCH_NO VARCHAR2(30 BYTE) DEFAULT 0 NOT NULL)
ALTER TABLE AMS_MNT_EXEC_DTL ADD (BARCODE VARCHAR2(30 BYTE)
ALTER TABLE AMS_MNT_EXEC_DTL ADD (EXPIRE_DATE DATE  NOT NULL)
ALTER TABLE AMS_ODMTR_HST ADD (MSUR_UNT NUMBER(3))
ALTER TABLE AMS_PARA ADD (LBR_DSC_MNDTRY NUMBER(1) DEFAULT 0 NOT NULL)
ALTER TABLE AMS_PARA ADD (CHK_QTY_JOB_ORDR NUMBER(1) DEFAULT 1 NOT NULL)
ALTER TABLE AMS_PARA ADD (PO_PRTL NUMBER(1) DEFAULT 0
ALTER TABLE AMS_MNT_JOB_SRV ADD (DOC_NO_REF_CNTRCT NUMBER(15))
ALTER TABLE AMS_MNT_JOB_SRV ADD (DOC_SRL_REF_CNTRCT NUMBER(38))
ALTER TABLE AMS_MNT_JOB_SRV ADD (DOC_RCRD_REF_CNTRCT NUMBER(6))
ALTER TABLE AMS_PARA ADD (USE_CNTRCT NUMBER(1) DEFAULT 0 NOT NULL)
ALTER TABLE AMS_MNT_REQ_DTL MODIFY(PRBLM_DSC VARCHAR2(500 BYTE))
ALTER TABLE AMS_MNT_CHK_DTL MODIFY(PRBLM_DSC VARCHAR2(500 BYTE))
ALTER TABLE AMS_MNT_CHK_DTL MODIFY(TST_RSLT VARCHAR2(500 BYTE))
ALTER TABLE AMS_MNT_JOB_ORDR ADD (PJ_NO VARCHAR2(15 Byte))
ALTER TABLE AMS_MNT_JOB_ORDR ADD (ACTV_NO VARCHAR2(15 Byte))
ALTER TABLE AMS_MNT_EXEC_MST ADD (PJ_NO VARCHAR2(15 Byte))
ALTER TABLE AMS_MNT_EXEC_MST ADD (ACTV_NO VARCHAR2(15 Byte))
ALTER TABLE AMS_MNT_EXEC_MST ADD (REF_NO VARCHAR2(50 Byte))
  Procedure Table_Filed_Prc (P_Ent In Number Default 0) ;
Forms_DDL('CREATE TABLE AMS_MNT_JOB_CHK
CREATE TABLE AMS_PARA
CREATE TABLE AMS_COD_MST
CREATE TABLE AMS_COD_DTL
CREATE TABLE AMS_MSUR_UNT
CREATE TABLE AMS_MSUR_CNVRT
CREATE TABLE AMS_SRV
CREATE TABLE AMS_SRV_CONN_AST
CREATE TABLE AMS_SRV_CONN_SPR
CREATE TABLE AMS_TAX_SRV
CREATE TABLE AMS_SRV_CNTR
CREATE TABLE AMS_SRV_CNTR_CONN_SRV
CREATE TABLE AMS_SRV_CNTR_LBR
CREATE TABLE AMS_SRV_CNTR_MTRL
CREATE TABLE AMS_FUL_TNK
CREATE TABLE AMS_SRV_NTF
CREATE TABLE AMS_SRV_NTF_PRT
CREATE TABLE AMS_SRV_NTF_SRV
CREATE TABLE AMS_PLN_MST
CREATE TABLE AMS_PLN_DTL
CREATE TABLE AMS_PLN_PRT
CREATE TABLE AMS_PLN_LBR
CREATE TABLE AMS_SPR_PRT_RCV
CREATE TABLE AMS_FUL_TRNS
CREATE TABLE AMS_TNK_RFLNG
CREATE TABLE AMS_SPR_PRT_CHNG
CREATE TABLE AMS_SPR_PRT_RNW
CREATE TABLE AMS_PLN_UPD
CREATE TABLE AMS_ODMTR_READ_MST
CREATE TABLE AMS_ODMTR_READ_DTL
CREATE TABLE AMS_ODMTR_HST
CREATE TABLE AMS_MNT_REQ_MST
CREATE TABLE AMS_MNT_REQ_DTL
CREATE TABLE AMS_MNT_CHK_MST
CREATE TABLE AMS_MNT_CHK_DTL
CREATE TABLE AMS_REQ_PRT_MST
CREATE TABLE AMS_REQ_PRT_DTL
CREATE TABLE AMS_MNT_JOB_ORDR
CREATE TABLE AMS_MNT_JOB_PRBLM
CREATE TABLE AMS_MNT_JOB_PRT
CREATE TABLE AMS_MNT_JOB_SRV
CREATE TABLE AMS_MNT_JOB_LBR
CREATE TABLE AMS_MNT_EXEC_MST
CREATE TABLE AMS_MNT_EXEC_DTL
CREATE TABLE AMS_MNT_TAX_MOVMNT
CREATE TABLE AMS_MNT_JOB_CHK
CREATE TABLE AMS_MNT_JOB_DLVR
CREATE TABLE AMS_MNT_CNTRCT
CREATE TABLE AMS_MNT_CNTRCT_PRC
CREATE TABLE AMS_MNT_CNTRCT_SRV
Complete FORMS_DDL CREATE Tables AMS
SELECT COUNT(1)   FROM V$TABLESPACE  WHERE NAME LIKE  ''AMS%''"
        Exception
        End; 
    SELECT COUNT(*)
      FROM AMS_MNT_JOB_ORDR
     WHERE CLOSED =0
  EXCEPTION 
  FUNCTION GET_EXEC_STS ( P_DOC_SRL    IN   NUMBER ) RETURN NUMBER IS 
 BEGIN
    SELECT NVL(COUNT(*),0)
        Delete From AMS_ODMTR_HST
        Where DOC_SRL=:Old.DOC_SRL;
            Insert Into AMS_ODMTR_HST
        Delete From AMS_ODMTR_HST
        Where DOC_SRL=:Old.DOC_SRL;
                Insert Into AMS_ODMTR_HST
        Delete From AMS_ODMTR_HST
        Where DOC_SRL=:Old.DOC_SRL
            Insert Into AMS_ODMTR_HST
        Delete From AMS_ODMTR_HST
        Where DOC_SRL=:Old.DOC_SRL;
                Insert Into AMS_ODMTR_HST
            Insert Into AMS_ODMTR_HST
            Insert Into AMS_ODMTR_HST
        Delete From AMS_ODMTR_HST
        Where DOC_SRL=:Old.DOC_SRL;
                Insert Into AMS_ODMTR_HST
            Insert Into AMS_ODMTR_HST
            Insert Into AMS_ODMTR_HST
        Delete From AMS_ODMTR_HST
        Where DOC_SRL=:Old.DOC_SRL;
            Insert Into AMS_ODMTR_HST
        Delete From AMS_ODMTR_HST
        Where DOC_SRL=:Old.DOC_SRL;
                Insert Into AMS_ODMTR_HST
        Delete From AMS_ODMTR_HST
        Where DOC_SRL=:Old.DOC_SRL
            Insert Into AMS_ODMTR_HST
   SELECT 0 BRN_NO,
   FROM   FMS_VHCL
   (SELECT BRN_NO,
    FROM   FAS_ASSETS_MST
    WHERE  (BRN_NO, AS_CODE) NOT IN (SELECT AS_BRN_NO,
                                     FROM   FMS_VHCL
                                     WHERE  AS_CODE IS NOT NULL))
   SELECT BRN_NO,
    FROM   FAS_ASSETS_MST
   SELECT doc_no
   FROM   ams_mnt_job_ordr
   SELECT doc_no
   FROM   ams_mnt_chk_mst
   SELECT doc_no
   FROM   ams_mnt_req_mst
   SELECT doc_no
   FROM   ams_ful_trns
   SELECT doc_no
   FROM   ams_odmtr_read_MST
   SELECT doc_no
   FROM   ams_pln_upd
   SELECT doc_no
   FROM   ams_req_prt_mst
   SELECT doc_no
   FROM   ams_spr_prt_chng
   SELECT doc_no
   FROM   ams_spr_prt_rnw
   SELECT doc_no
   FROM   ams_tnk_rflng
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
set CAPTION_DET = 'forms_dml(update Reason'
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
update ias_sys.IAS_LABELS
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into FORM_DETAIL
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
   (2, 3, 3, 'EXPNS_ACCNT_AMS', 'From Interface Account', 
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
Insert into S_FLAGS
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_SPR_PRT_CHNG', 14174, 'SELECT doc_srl,
FROM   ams_spr_prt_chng
WHERE  1 = 1', 7, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_FUL_TRNS', 8048, 'SELECT doc_srl,
FROM   ams_ful_trns
WHERE  1 = 1', 8, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_SPR_PRT', 9571, 'SELECT SPR_PRT_NO,DECODE(:PARAMETER.LANG_NO,1,SPR_PRT_L_NM,SPR_PRT_F_NM) TNK_NM  FROM AMS_SPR_PRT_RCV WHERE 1=1', 2, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_ODMTR_READ_MST', 14214, 'SELECT doc_srl,
FROM   ams_odmtr_read_MST
WHERE  1 = 1', 6, 
INSERT into S_LOV_SLCT
   (811, 'LOV_AMS_PLN', 2301, 'SELECT  PLN_NO,DECODE(:PARAMETER.LANG_NO,1,PLN_L_DSC,NVL(PLN_F_DSC,PLN_L_DSC)) PLN_DSC  FROM AMS_PLN_MST WHERE 1=1', 2, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_MNT_JOB_DLVR', 14361, 'SELECT doc_srl,
FROM   ams_mnt_job_dlvr
WHERE  1 = 1', 9, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_FUL_TNK', 14153, 'SELECT TNK_NO,DECODE(:PARAMETER.LANG_NO,1,TNK_L_NM,TNK_F_NM) TNK_NM  FROM AMS_FUL_TNK WHERE 1=1', 2, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_REQ_PRT_MST', 14305, 'SELECT doc_srl,
FROM   AMS_REQ_PRT_MST
WHERE  1 = 1', 7, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_PLN_DTL', 14227, 'SELECT m.brn_as_no,
FROM   ams_pln_dtl d,
WHERE  d.pln_no = m.pln_no
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_PLN_UPD', 14237, 'SELECT doc_srl,
FROM   ams_pln_upd
WHERE  1 = 1', 9, 
INSERT into S_LOV_SLCT
   (811, 'LOV_AMS_SRV', 2301, 'SELECT  SRV_NO,DECODE(:PARAMETER.LANG_NO,1,SRV_L_NM,NVL(SRV_F_NM,SRV_L_NM)) SRV_NM,SRV_TYP_NO,IS_NTF,AC_CODE FROM AMS_SRV', 5, 
INSERT into S_LOV_SLCT
   (811, 'LOV_AMS_SRV_NTF', 14550, 'SELECT  NTF_NO,DECODE(:PARAMETER.LANG_DFLT,1,NTF_L_NM,NVL(NTF_F_NM,NTF_L_NM)) NTF_NM,
   FROM AMS_SRV_NTF', 4, 
INSERT into S_LOV_SLCT
   (811, 'LOV_AMS_SRV_CNTR', 2301, 'SELECT  CNTR_NO,DECODE(:PARAMETER.LANG_NO,1,CNTR_L_NM,NVL(CNTR_F_NM,CNTR_L_NM)) CNTR_NM,CNTR_ADD,CITY_NO,LOC,V_CODE,TEL_NO,PRSN_NM   FROM AMS_SRV_CNTR', 8, 
INSERT into S_LOV_SLCT
   (811, 'LOV_AMS_FUL_TNK_DATA', 2301, 'SELECT  TNK_NO,DECODE(:PARAMETER.LANG_NO,1,TNK_L_NM,NVL(TNK_F_NM,TNK_L_NM)) TNK_NM,TNK_ADD,FUL_TYP,MSUR_UNT,TNK_CPCTY,AVL_QTY,LOW_LVL,REC_LVL   FROM AMS_FUL_TNK', 9, 
INSERT into S_LOV_SLCT
   (811, 'LOV_AMS_PLN_MST', 2301, 'SELECT  PLN_NO,DECODE(:PARAMETER.LANG_NO,1,PLN_L_DSC,NVL(PLN_F_DSC,PLN_L_DSC)) PLN_DSC,PLN_DATE
,BRN_AS_NO,AS_CODE,SRV_NO,AMS_GNRL_PKG.GET_SRV_NM(:PARAMETER.LANG_NO, SRV_NO) SRV_NM,TOT_CST    FROM AMS_PLN_MST', 8, 
INSERT into S_LOV_SLCT
   (811, 'LOV_AMS_SPR_PRT_RCV', 2301, 'SELECT   SPR_PRT_NO,DECODE(:PARAMETER.LANG_NO,1,SPR_PRT_L_NM,NVL(SPR_PRT_F_NM,SPR_PRT_L_NM)) SPR_PRT_NM,SRL_NO,DOC_NO_REF_OUT,ISSU_DATE,BRN_AS_NO,AS_CO
DE,LOC_NO,MTR_VLU,ACTL_DSTNC FROM AMS_SPR_PRT_RCV', 10, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_MNT_CHK_MST', 14305, 'SELECT doc_srl,
FROM   ams_mnt_chk_mst
WHERE  1 = 1', 9, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_MNT_REQ_MST', 14245, 'SELECT doc_srl,
FROM   ams_mnt_req_mst
WHERE  1 = 1', 9, 
INSERT into S_LOV_SLCT
   (125, 'LOV_AMS_SRV_NM', 1259, 'SELECT  SRV_NO,DECODE(:PARAMETER.LANG_DFLT,1,SRV_L_NM,SRV_F_NM) SRV_NM  FROM AMS_SRV WHERE 1=1', 2, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_MNT_JOB_CHK', 14346, 'SELECT doc_srl,
FROM   ams_mnt_job_chk
WHERE  1 = 1', 8, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_MNT_JOB_ORDR', 14357, 'SELECT DOC_SRL,
FROM   AMS_MNT_JOB_ORDR
WHERE  1 = 1', 10, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_MSUR_UNT', 9581, 'SELECT MSUR_NO ,DECODE(:PARAMETER.LANG_DFLT,1,MSUR_L_NM,NVL(MSUR_F_NM,MSUR_L_NM)) MSUR_NM FROM AMS_MSUR_UNT WHERE 1=1', 2, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_AST_VHCL', 4288, 'SELECT BRN_NO,AST_NO ,DECODE(:PARAMETER.LANG_NO,1,AST_L_NM,NVL(AST_F_NM,AST_L_NM)) AST_NM FROM AMS_V_AST_VHCL WHERE 1=1', 3, 
INSERT into S_LOV_SLCT
   (125, 'AMS_LOV_SRV_NM', 1259, 'SELECT  SRV_NO,DECODE(:PARAMETER.LANG_DFLT,1,SRV_L_NM,SRV_F_NM) SRV_NM  FROM AMS_SRV WHERE 1=1', 2, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_TNK_RFLNG', 14147, 'SELECT doc_srl,
FROM   ams_tnk_rflng
WHERE  1 = 1', 7, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_COD_MST', 14043, 'SELECT COD_TYP_NO ,YS_GEN_PKG.GET_PROMPT(:PARAMETER.LANG_NO,COD_LBL_NO) COD_NM FROM AMS_COD_MST WHERE 1=1', 2, 
INSERT into S_LOV_SLCT
   (19, 'LOV_AMS_EMP_ENG', 2301, 'SELECT DECODE (:parameter.lang_no, 1, emp_l_nm, NVL (emp_f_nm, emp_l_nm) )
FROM   s_emp m
WHERE  NVL (emp_st, 0) = 1
    ',1,', '  AND EXISTS (SELECT 1 FROM S_BRN_USR_PRIV WHERE U_ID = :PARAMETER.USER_NO AND BRN_NO = M.BRN_NO AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1)   AND 1 = (CASE WHEN Ys_Gen_Pkg.Get_Fld_Value(''IAS_PARA_GEN'',''EMP_PRV_TYP'')=0 THEN 1 ELSE (SELECT 1 FROM S_EMP_PRV WHERE U_ID = :PARAMETER.USER_NO AND EMPNO_HRCHYNO = Decode(EMP_PRV_TYP,1,M.Emp_No,2,M.Hrchy_no)  AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1  AND ROWNUM<=1) END)        ', NULL, NULL, NULL, 
INSERT into S_LOV_SLCT
   (19, 'LOV_EMP_ENG', 2301, 'SELECT DECODE (:parameter.lang_no, 1, emp_l_nm, NVL (emp_f_nm, emp_l_nm) )
FROM   s_emp m
WHERE  NVL (emp_st, 0) = 1
    ',1,', '  AND EXISTS (SELECT 1 FROM S_BRN_USR_PRIV WHERE U_ID = :PARAMETER.USER_NO AND BRN_NO = M.BRN_NO AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1 AND ROWNUM<=1)   AND 1 = (CASE WHEN Ys_Gen_Pkg.Get_Fld_Value(''IAS_PARA_GEN'',''EMP_PRV_TYP'')=0 THEN 1 ELSE (SELECT 1 FROM S_EMP_PRV WHERE U_ID = :PARAMETER.USER_NO AND EMPNO_HRCHYNO = Decode(EMP_PRV_TYP,1,M.Emp_No,2,M.Hrchy_no)  AND DECODE(:PARAMETER.SCR_TYP,4,VIEW_FLAG,5,VIEW_FLAG,ADD_FLAG)=1  AND ROWNUM<=1) END)        ', NULL, NULL, NULL, 
INSERT into S_LOV_SLCT
   (999, 'LOV_AMS_SPR_PRT_RNW', 14174, 'SELECT doc_srl,
FROM   ams_spr_prt_rnw
WHERE  1 = 1', 7, 
Insert into S_LOV_SLCT
   (999, 'LOV_AMS_MNT_EXEC', 14375, 'SELECT DOC_SRL,
FROM   AMS_MNT_EXEC_MST
WHERE  1 = 1', 8, 
Insert into S_LOV_SLCT
   (203, 'LOV_AMS_P_ORDER', 112, 'SELECT PO_SER,PO_NO,PO_DATE,V_CODE,IAS_Vndr_Pkg.Get_v_Name (P_v_code => V_CODE,P_Lng_no => :PARAMETER.LANG_NO)  V_NAME
WHERE NVL(PO_PROCESSED,0)=0', 5, 
                   SELECT 1
                     FROM IAS_PRIV_VENDOR
                    WHERE U_ID = :PARAMETER.USER_NO
Forms_DDL('CREATE TABLE AMS_MNT_JOB_SRV
  Procedure Table_Filed_Prc (P_Ent In Number Default 0) ;
Forms_DDL('CREATE TABLE AMS_MNT_JOB_CHK
SELECT NTF_NO,READ_IS_VRBL,NVL(MTR_NTF_VLU,0) MTR_NTF_VLU,NVL(DAY_NTF_VLU,0) DAY_NTF_VLU,NVL(STRT_DATE,SYSDATE) STRT_DATE,NVL(MTR_NTF_BFR,0) MTR_NTF_BFR,NVL(DAY_NTF_BFR,0) DAY_NTF_BFR   FROM AMS_SRV_NTF  WHERE BRN_AS_NO = :b1  AND AS_CODE = :b2"SELECT SRV_NO   FROM AMS_SRV_NTF_SRV  WHERE NTF_NO = :b1  AND INACTIV = 0"
CREATE TABLE AMS_SRV_CONN_AST
Insert into S_LST_SLCT
   ('LST_CUR_CODE', 'SELECT TO_CHAR (CUR_NO)||'' - ''||CUR_CODE ,CUR_CODE FROM EX_RATE WHERE 1=1 ', NULL, NULL, NULL)
Insert into S_LST_SLCT
   ('LST_PJ', 'SELECT TO_CHAR(PJ_NO)||''-''||Decode(:PARAMETER.LANG_NO,1,PJ_A_NAME,nvl(PJ_A_NAME,PJ_E_NAME)) PJ_NM , TO_CHAR(PJ_NO) FROM IAS_PROJECTS M WHERE NVL(INACTIVE,0)= 0 ', NULL, 'PJ_NO', NULL)
Insert into S_LST_SLCT
   ('LST_CUR_CODE', 'SELECT TO_CHAR (CUR_NO)||'' - ''||CUR_CODE ,CUR_CODE FROM EX_RATE WHERE 1=1 ', NULL, NULL, NULL)
Insert into S_LST_SLCT
   ('LST_PJ', 'SELECT TO_CHAR(PJ_NO)||''-''||Decode(:PARAMETER.LANG_NO,1,PJ_A_NAME,nvl(PJ_A_NAME,PJ_E_NAME)) PJ_NM , TO_CHAR(PJ_NO) FROM IAS_PROJECTS M WHERE NVL(INACTIVE,0)= 0 ', NULL, 'PJ_NO', NULL)
AMS_FUNCTION_PKG
AMS_FUNCTION_PKG
AMS_PROCEDURE_PKG
AMS_PROCEDURE_PKG
AMS_PROCEDURE_PKG
"AMS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
AMS_FUNCTION_PKG
"AMS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/DTSLIB_NEW.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
DTS_FUNCTION_PKG
"DTS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
SELECT TABLE_NAME,COLUMN_NAME   FROM USER_COL_COMMENTS  WHERE COLUMN_NAME IN ( ''AD_U_UID'',''AD_DATE'',''UP_U_ID'',''UP_DATE'',''UP_CNT'',''PR_REP'',''AD_TRMNL_NM'',''BRN_NO'',''CMP_NO'',''BRN_YEAR'',''BRN_USR'',''DOC_BRN_NO'',''A_CODE'',''AC_CODE'',''AC_CODE_DTL'',''AC_DTL_TYP'',''CC_CODE'',''PJ_NO'',''ACTV_NO'',''C_CODE'',''V_CODE'',''CASH_NO'',''EMP_NO'',''ARTCL_NO'',''COL_NO'',''R_CODE'',''REP_CODE'',''AS_CODE'',''LOC_CODE'',''I_CODE'',''W_CODE'',''I_PRICE'',''I_QTY'',''INACTIVE'',''INACTIVE_U_ID'',''INACTIVE_DATE'',''INACTIVE_RES'',''APPROVED'',''APRV_U_ID'',''APRV_DATE'',''APRV_DSC'',''CUR_CODE'',''A_CY'',''RCRD_NO'',''DOC_TYP'',''DOC_TYPE'',''DOC_JV_TYP'',''DOC_JV_TYPE'',''DOC_NO'',''DOC_DATE'',''REF_NO'',''DOC_DSC'',''DOC_DESC'',''A_DESC'',''AC_DESC'',''J_DESC'',''DOC_SER'',''DOC_SRL'',''DOC_SQ'',''DOC_SEQUENCE'',''DOC_SEQ'',''FIELD1'',''FIELD2'',''FIELD3'',''FIELD4'',''FIELD5'',''FIELD6'',''FIELD7'',''FIELD8'',''FIELD9'',''FIELD10'',''FIELD11'',''FIELD12'',''FIELD13'',''FIELD14'',''FIELD15'',''FIELD16'',''FIELD17'',''FIELD18'',''FIELD19'',''FIELD20'',''MACHINE_NO'',''ROUTE_NO'',''CNTRY_NO'',''PROV_NO'',''ZONE_NO'',''CITY_NO''  ) AND TABLE_NAME NOT LIKE  ''%$%''  AND TABLE_NAME NOT LIKE  ''%_OLD%''  AND COMMENTS IS NULL"SELECT *   FROM USER_COL_COMMENTS  WHERE (COLUMN_NAME LIKE  ''%PHONE%''  OR COLUMN_NAME LIKE  ''%FAX%''  OR COLUMN_NAME LIKE  ''%BOX%''  OR COLUMN_NAME LIKE  ''%MOB%''  OR COLUMN_NAME LIKE  ''%MAIL%''  OR COLUMN_NAME LIKE  ''%WEB_SI%'' ) AND TABLE_NAME NOT LIKE  ''%$%''  AND TABLE_NAME NOT LIKE  ''%_OLD%''  AND COMMENTS IS NULL"
                  Exception
                  End;
         End;
 ALTER TABLE   DTS_GRP_DTL ADD (CONSTRAINT DTSGRPDSTDTL_FK FOREIGN KEY (GRP_CODE) REFERENCES DTS_GRP_MST (GRP_CODE) ON DELETE CASCADE) 
 ALTER TABLE   DTS_ITM_RVL_DTL ADD (CONSTRAINT DTS_ITMRVLDTL_FK FOREIGN KEY (I_CODE_RVL) REFERENCES DTS_ITM_RVL_MST(I_CODE_RVL)) 
 ALTER TABLE   DTS_PLAN_SMAN_DTL ADD (CONSTRAINT DTSPLANSMANDTL_FK FOREIGN KEY (DOC_SER)  REFERENCES DTS_PLAN_SMAN_MST (DOC_SER) ON DELETE CASCADE) 
 ALTER TABLE   DTS_PLAN_SMAN_SUB_DTL ADD (CONSTRAINT DTSPLANSMANSUBDTL_FK FOREIGN KEY (DOC_SER,C_CODE) REFERENCES DTS_PLAN_SMAN_DTL (DOC_SER,C_CODE) ON DELETE CASCADE) 
 ALTER TABLE   DTS_OUT_PLAN_SMAN_DTL ADD (CONSTRAINT DTS_OUTPLANSMANDTL_FK FOREIGN KEY (DOC_SER) REFERENCES DTS_PLAN_SMAN_MST (DOC_SER) ON DELETE CASCADE) 
 ALTER TABLE   DTS_OUT_PLAN_SMAN_SUB_DTL ADD (CONSTRAINT DTSOUTPLANSMANSUBDTL_FK FOREIGN KEY (DOC_SER, C_CODE) REFERENCES DTS_OUT_PLAN_SMAN_DTL (DOC_SER,C_CODE) ON DELETE CASCADE) 
 ALTER TABLE   DTS_PLAN_PRD_DTL ADD (CONSTRAINT DTSPLANPRDDTL_FK FOREIGN KEY (DOC_SER) REFERENCES DTS_PLAN_PRD_MST (DOC_SER) ON DELETE CASCADE) 
 ALTER TABLE   DTS_EXPNS_DTL ADD (CONSTRAINT DTSEXPNSDTL_FK FOREIGN KEY (DOC_SER) REFERENCES DTS_EXPNS_MST (DOC_SER) ON DELETE CASCADE) 
 ALTER TABLE   DTS_ITM_INFO_DTL ADD (CONSTRAINT DTSITMINFODTL_FK FOREIGN KEY (DOC_SER) REFERENCES DTS_ITM_INFO_MST (DOC_SER) ON DELETE CASCADE) 
 ALTER TABLE   DTS_ITM_INFO_DTL ADD (CONSTRAINT DTSITMINFODTL_ITM_DTL_FK FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE)) 
 ALTER TABLE   DTS_STK_CST_DTL ADD (CONSTRAINT DTSSTKCSTDTL_FK FOREIGN KEY (DOC_SER) REFERENCES DTS_STK_CST_MST (DOC_SER) ON DELETE CASCADE) 
 ALTER TABLE   DTS_OPTN_PRIV ADD (CONSTRAINT DTSOPTNPRIV_DTSOPTN_FK FOREIGN KEY (OPTN_NO) REFERENCES DTS_OPTN (OPTN_NO)) 
 ALTER TABLE   DTS_OPTN_PRIV ADD (CONSTRAINT DTSOPTNPRIV_USRS_FK FOREIGN KEY (U_ID) REFERENCES USER_R (U_ID)) 
 ALTER TABLE   DTS_CST_VST_MST ADD (CONSTRAINT DTSCSTVSTMST_CST_FK FOREIGN KEY (C_CODE) REFERENCES CUSTOMER (C_CODE)) 
 ALTER TABLE   DTS_CST_VST_MST ADD (CONSTRAINT DTSCSTVSTMST_SLSMAN_FK FOREIGN KEY (REP_CODE) REFERENCES SALES_MAN (REPRS_CODE)) 
 ALTER TABLE   DTS_CST_VST_DTL ADD (CONSTRAINT DTSCSTVSTDTL_FK FOREIGN KEY (VST_SRL) REFERENCES DTS_CST_VST_MST (VST_SRL) ON DELETE CASCADE) 
ALTER TABLE DTS_CST_VST_MST ADD (CONSTRAINT DTSCSTVSTMST_SLSMAN_FK FOREIGN KEY (REP_CODE) REFERENCES SALES_MAN (REPRS_CODE))
ALTER TABLE DTS_CST_VST_MST ADD (CONSTRAINT DTSCSTVSTMST_RESON_TYP_FK FOREIGN KEY (RESON_TYP) REFERENCES DTS_VST_FAIL_REASON (RESON_TYP))
ALTER TABLE DTS_CST_VST_MST ADD (CONSTRAINT DTSCSTVSTMST_CST_FK FOREIGN KEY (C_CODE) REFERENCES CUSTOMER (C_CODE))
ALTER TABLE DTS_CST_VST_MST DROP ( CONSTRAINT CHCK_VST_STS CHECK (Vst_Sts in (1,-1)))
 ALTER TABLE   DTS_CST_VST_MST ADD (CONSTRAINT CHCK_VST_STS CHECK (Vst_Sts in (1,0))) 
ALTER TABLE DTS_SURVEY_CST_GPS ADD (CONSTRAINT  DTSSURVEYCSTGPS_UQ UNIQUE (POINT_ID,POINT_GPS_LAT_Y ,POINT_GPS_LNGT_X))
 ALTER TABLE DTS_SMAN_CST_MST ADD (CONSTRAINT FK_DTSSMANCSTMST_BRN FOREIGN KEY (BRN_NO) REFERENCES S_BRN (BRN_NO)) 
 ALTER TABLE DTS_SMAN_CST_MST ADD (CONSTRAINT FK_DTSSMANCSTMST_F_SMAN FOREIGN KEY (F_REP_CODE) REFERENCES SALES_MAN (REPRS_CODE)) 
 ALTER TABLE DTS_SMAN_CST_MST ADD (CONSTRAINT FK_DTSSMANCSTMST_T_SMAN FOREIGN KEY (T_REP_CODE) REFERENCES SALES_MAN (REPRS_CODE)) 
 ALTER TABLE DTS_SMAN_CST_DTL ADD (CONSTRAINT FK_DTSSMANCSTDTL FOREIGN KEY (DOC_SER) REFERENCES DTS_SMAN_CST_MST (DOC_SER) ON DELETE CASCADE) 
 ALTER TABLE DTS_SMAN_CST_DTL ADD (CONSTRAINT FK_DTSSMANCSTDTL_BRN FOREIGN KEY (BRN_NO) REFERENCES S_BRN (BRN_NO)) 
 ALTER TABLE DTS_SMAN_CST_DTL ADD (CONSTRAINT FK_DTSSMANCSTDTL_T_SMAN FOREIGN KEY (T_REP_CODE) REFERENCES SALES_MAN (REPRS_CODE)) 
 ALTER TABLE DTS_SMAN_CST_DTL ADD (CONSTRAINT FK_DTSSMANCSTDTL_CST FOREIGN KEY (C_CODE) REFERENCES CUSTOMER (C_CODE)) 
ALTER TABLE DTS_VST_FAIL_REASON ADD (CONSTRAINT DTSVSTFAILREASON_PK PRIMARY KEY (RESON_TYP))
 ALTER TABLE DTS_VST_RSLT_TYPS ADD (CONSTRAINT DTSVSTRSLTTYPS_PK PRIMARY KEY (VST_RSLT_TYP)) 
 ALTER TABLE DTS_GRP_DTL ADD (CONSTRAINT DTSGRPDTL_ICODE_FK FOREIGN KEY (I_CODE,ITM_UNT) REFERENCES IAS_ITM_DTL (I_CODE,ITM_UNT))
ALTER TABLE 
Complete Alter Table Constraint DTS 
SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_CONSTRAINTS M,USER_CONS_COLUMNS D  WHERE M.CONSTRAINT_NAME = D.CONSTRAINT_NAME  AND M.TABLE_NAME = D.TABLE_NAME  AND (M.TABLE_NAME LIKE  ''DTS%'' ) AND M.CONSTRAINT_TYPE = ''R''  AND M.DELETE_RULE = ''CASCADE''  AND M.TABLE_NAME NOT LIKE  ''%$%''  AND EXISTS  (SELECT 1   FROM USER_TAB_COLS  WHERE TABLE_NAME = M.TABLE_NAME  AND COLUMN_NAME = D.COLUMN_NAME  AND NULLABLE = ''Y''  AND ROWNUM <= 1 ) ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,M.COLUMN_NAME   FROM USER_TAB_COLS M  WHERE COLUMN_NAME IN ( ''DOC_NO'',''DOC_SRL''  ) AND (M.TABLE_NAME LIKE  ''DTS%'' ) AND M.TABLE_NAME NOT LIKE  ''TST%''  AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''%TMP''  AND EXISTS  (SELECT 1   FROM USER_TABLES  WHERE TABLE_NAME = M.TABLE_NAME  AND ROWNUM <= 1 )  AND NULLABLE = ''Y'' ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_TABLES M,USER_TAB_COLS D  WHERE M.TABLE_NAME = D.TABLE_NAME  AND (M.TABLE_NAME LIKE  ''%_PRIV''  OR M.TABLE_NAME LIKE  ''%_PRV'' ) AND (M.TABLE_NAME LIKE  ''DTS%'' ) AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''HSTRY%''  AND D.COLUMN_NAME LIKE  ''U_ID%''  AND NOT EXISTS  (SELECT 1   FROM USER_CONS_COLUMNS DT,USER_CONSTRAINTS MS  WHERE MS.TABLE_NAME = DT.TABLE_NAME  AND MS.CONSTRAINT_NAME = DT.TABLE_NAME  AND MS.TABLE_NAME = M.TABLE_NAME  AND DT.COLUMN_NAME = D.COLUMN_NAME  AND MS.CONSTRAINT_TYPE = ''R''  AND NVL(DELETE_RULE,''0'') != ''CASCADE''  AND ROWNUM <= 1 )  ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_TABLES M,USER_TAB_COLS D  WHERE M.TABLE_NAME = D.TABLE_NAME  AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''%HSTRY%''  AND M.TABLE_NAME NOT LIKE  ''%_DTL''  AND M.TABLE_NAME NOT LIKE  ''%TMP''  AND (M.TABLE_NAME LIKE  ''DTS%'' ) AND D.COLUMN_NAME LIKE  ''BRN_NO%''  AND NOT EXISTS  (SELECT 1   FROM USER_CONS_COLUMNS DT,USER_CONSTRAINTS MS  WHERE MS.TABLE_NAME = DT.TABLE_NAME  AND MS.CONSTRAINT_NAME = DT.TABLE_NAME  AND MS.TABLE_NAME = M.TABLE_NAME  AND DT.COLUMN_NAME = D.COLUMN_NAME  AND MS.CONSTRAINT_TYPE = ''R''  AND ROWNUM <= 1 )  ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_TABLES M,USER_TAB_COLS D  WHERE M.TABLE_NAME = D.TABLE_NAME  AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''%TMP''  AND (M.TABLE_NAME LIKE  ''DTS%'' ) AND D.COLUMN_NAME != ''A_CODE_DTL''  AND (D.COLUMN_NAME LIKE  ''A_CODE%''  OR D.COLUMN_NAME LIKE  ''%CC_CODE%''  OR D.COLUMN_NAME LIKE  ''PJ_NO%''  OR D.COLUMN_NAME LIKE  ''ACTV_NO%''  OR D.COLUMN_NAME LIKE  ''CUR_CODE%'' ) AND NOT EXISTS  (SELECT 1   FROM USER_CONS_COLUMNS DT,USER_CONSTRAINTS MS  WHERE MS.TABLE_NAME = DT.TABLE_NAME  AND MS.CONSTRAINT_NAME = DT.TABLE_NAME  AND MS.TABLE_NAME = M.TABLE_NAME  AND DT.COLUMN_NAME = D.COLUMN_NAME  AND MS.CONSTRAINT_TYPE = ''R''  AND ROWNUM <= 1 )  ORDER BY M.TABLE_NAME"
DTS_FUNCTION_PKG
DTS_PROCEDURE_PKG
DTS_PROCEDURE_PKG
DTS_FUNCTION_PKG
/TMP1/DTS_FUNCTION_PKG
"DTS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
 CREATE OR REPLACE Function Get_Dts_Trans_Ser(     P_Doc_Type       In NUMBER,   --##  1 QUOTATION 2- sale order 3- bill 4 -rt bill -9  Rt Bills Request                                                        
Begin 
   Select  nvl(dts_Invoicing_Serials,1) ,nvl(dts_Invoicing_Serials_Sr,1),nvl(DTS_SORDER_SERIAL,1),nvl(DTS_QUOT_SERIAL,1)
     From dts_para;
    Select s.W_Code,s.CC_Code ,rep_ser 
      From  Sales_Man s
       Where Reprs_Code=P_Sman;
                 Select Nvl(Max(To_Number(Quot_No)), 0) + 1 into v_Doc_No                         
                                  From Quotation
                                 Where Rep_Code = P_Sman
                  Select Nvl(Max(To_Number(Quot_No)), 0) + 1 into v_Doc_No                          
                                  From Quotation
                                 Where Rep_Code = P_Sman
                  Select Nvl(Max(To_Number(Order_No)), 0) + 1  Into v_Doc_No
                              From Sales_Order
                             Where Rep_Code = P_Sman
                 Select Nvl(Max(To_Number(Order_No)), 0) + 1 Into v_Doc_No
                      From Sales_Order
                     Where Rep_Code = P_Sman
                   Select Nvl(Max(To_Number(Bill_No)), 0) + 1 into v_doc_no
                               From (Select Bill_No,
                                       From Ias_Bill_Mst
                                      Where Nvl(External_Post, 0) = 70
                                     Select Bill_No,
                                       From Ias_Bill_Mst_Br
                                      Where Nvl(External_Post, 0) = 70)
                              Where Rep_Code = P_Sman
                   Select Nvl(Max(To_Number(Bill_No)), 0) + 1 into v_doc_no
                              From (Select Bill_No,
                                      From Ias_Bill_Mst
                Where Nvl(External_Post, 0) = 70
                                    Select Bill_No,
                                      From Ias_Bill_Mst_Br
                                     Where Nvl(External_Post, 0) = 70)
                             Where Rep_Code = P_Sman
                    Select Nvl(Max(To_Number(Bill_No)), 0) + 1 into v_doc_no
                              From (Select Bill_No,
                                      From Ias_Bill_Mst
                                    Select Bill_No,
                                      From Ias_Bill_Mst_Br)
                             Where Brn_No =p_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                                                           Where W_Code =V_Wcode));
                  Select Nvl(Max(To_Number(Bill_No)), 0) + 1 into v_doc_no
                                  From (Select Bill_No,
                                          From Ias_Bill_Mst
                                        Select Bill_No,
                                          From Ias_Bill_Mst_Br)
                                 Where Brn_No = P_Brn_No
                                       And W_Code In (Select W_Code
                                                        From Warehouse_Details
                                                       Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                                From Warehouse_Details
                                                                               Where W_Code = V_Wcode)) ;                                               
                 Select Nvl(Max(To_Number(Bill_No)), 0) + 1 into v_doc_no
                              From (Select Bill_No,
                                      From Ias_Bill_Mst
                                    Select Bill_No,
                                      From Ias_Bill_Mst_Br)
          Where Brn_No = P_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                                                           Where W_Code = V_Wcode)) ;                                          
                  Select Nvl(Max(To_Number(Bill_No)), 0) + 1 into v_doc_no
                              From (Select Bill_No,
                                      From Ias_Bill_Mst
                                    Select Bill_No,
                                      From Ias_Bill_Mst_Br)
                             Where Brn_No =p_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                                                           Where W_Code =V_Wcode));                                                                                                      
                   Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                               From (Select rt_Bill_No,
                                       From Ias_rt_Bill_Mst
                                      Where Nvl(External_Post, 0) = 70
                                     Select rt_Bill_No,
                                       From Ias_rt_Bill_Mst_Br
                                      Where Nvl(External_Post, 0) = 70)
                              Where Rep_Code = P_Sman
                   Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                              From (Select rt_Bill_No,
                                      From Ias_rt_Bill_Mst
                                     Where Nvl(External_Post, 0) = 70
                                    Select rt_Bill_No,
                                      From Ias_rt_Bill_Mst_Br
                                     Where Nvl(External_Post, 0) = 70)
                             Where Rep_Code = P_Sman
                    Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                              From (Select rt_Bill_No,
                                      From Ias_rt_Bill_Mst
                                    Select rt_Bill_No,
                                      From Ias_rt_Bill_Mst_Br)
                             Where Brn_No =p_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                                                           Where W_Code =V_Wcode));
                  Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                                  From (Select rt_Bill_No,
                                          From Ias_rt_Bill_Mst
                                        Select rt_Bill_No,
                                          From Ias_rt_Bill
                                 Where Brn_No = P_Brn_No
                                       And W_Code In (Select W_Code
                                                        From Warehouse_Details
                                                       Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                                From Warehouse_Details
                                                                               Where W_Code = V_Wcode)) ;                                               
                 Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                              From (Select rt_Bill_No,
                                      From Ias_rt_Bill_Mst
                                    Select rt_Bill_No,
                                      From Ias_rt_Bill_Mst_Br)
                             Where Brn_No = P_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                                                           Where W_Code = V_Wcode)) ;                                          
                  Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                              From (Select rt_Bill_No,
                                      From Ias_rt_Bill_Mst
                                    Select rt_Bill_No,
                                      From Ias_rt_Bill_Mst_Br)
                             Where Brn_No =p_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                    Where W_Code =V_Wcode));                                                                                                      
                   Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                               From (Select rt_Bill_No,
                                       From IAS_RT_BILL_MST_RQ
                Where Nvl(External_Post, 0) = 70)
                              Where Rep_Code = P_Sman
                   Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                              From (Select rt_Bill_No,
                                      From IAS_RT_BILL_MST_RQ
                                     Where Nvl(External_Post, 0) = 70)
                             Where Rep_Code = P_Sman
                    Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                              From (Select rt_Bill_No,
                                      From IAS_RT_BILL_MST_RQ )
                             Where Brn_No =p_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                                                           Where W_Code =V_Wcode));
                  Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                                  From (Select rt_Bill_No,
                                          From IAS_RT_BILL_MST_RQ)
                                 Where Brn_No = P_Brn_No
                                       And W_Code In (Select W_Code
                                                        From Warehouse_Details
                                                       Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                                From Warehouse_Details
                                                                               Where W_Code = V_Wcode)) ;                                               
                 Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                              From (Select rt_Bill_No,
                                      From IAS_RT_BILL_MST_RQ)
                             Where Brn_No = P_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                                                           Where W_Code = V_Wcode)) ;                                          
                  Select Nvl(Max(To_Number(rt_Bill_No)), 0) + 1 into v_doc_no
                              From (Select rt_Bill_No,
                                      From IAS_RT_BILL_MST_RQ )
                             Where Brn_No =p_Brn_No
                                   And W_Code In (Select W_Code
                                                    From Warehouse_Details
                                                   Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                            From Warehouse_Details
                                                                           Where W_Code =V_Wcode));                                                                                                      
Exception When Others Then
 CREATE OR REPLACE Function Get_AR_Trans_Ser( P_Trns_Type    In NUMBER,  -- Transaction  Type 
      begin
                  Select Ar_Quot_Serial  Into V_Para_Ser    From Ias_Para_Ar; 
                   Select nvl(Max(QUOT_NO),0)+1    Into V_doc_No  From QUOTATION Where
                   Select nvl(Max(QUOT_NO),0)+1    Into V_doc_No  From QUOTATION Where
             Select Ar_Sorder_Serial  Into V_Para_Ser    From Ias_Para_Ar ;
                  Select nvl(Max(ORDER_NO),0)+1    Into V_doc_No  From Sales_Order Where
                    Select nvl(Max(ORDER_NO),0)+1    Into V_doc_No  From Sales_Order Where
               Select nvl(Max(doc_no),0)+1    Into V_doc_No  From Dts_Stk_Cst_Mst 
               Select nvl(Max(To_Number(C_Code)),0)
+1    Into V_doc_No  From DTS_CUSTOMER_TRGT
                  Where 1=1 ;      
    Exception When Others Then
  CREATE OR REPLACE FUNCTION  dts_chk_crdt_prd (
                                            BEGIN
                                               BEGIN
                                                  SELECT ar_ac_link_type, paid_instllmnt_man, no_of_decimal_ar
                                                    FROM ias_para_ar;
                                               EXCEPTION
                                               END;
                                               BEGIN
                                                  SELECT u_id
                                                    FROM user_r
                                                   WHERE rep_code IS NOT NULL AND rep_code = v_rep_code;
                                               EXCEPTION
                                               END;
                                               BEGIN
                                                  SELECT NVL (ar_allow_sales_prv_dr, 0), NVL (ar_chk_prd_aftr_due, 0),
                                                    FROM privilege_fixed
                                                   WHERE u_id = v_user_no;
                                               EXCEPTION
                                               END;
                                               BEGIN
                                                  SELECT credit_period,
                                                    FROM customer
                                                   WHERE c_code = v_c_code;
                                               EXCEPTION
                                               END;
                             BEGIN
                                                                    SELECT MIN (i_date)
                                                                      FROM installment
                                                                     WHERE c_code = v_c_code
                                                                 EXCEPTION
                                                                 END;
                                                     BEGIN
                                                        SELECT MIN (doc_date)
                                                          FROM ias_si_dr_dtl_tmp
                                                         WHERE c_code = v_c_code
                                                     EXCEPTION
                                                     END;               
                                            EXCEPTION
                                            END;     
 CREATE OR REPLACE FUNCTION DTS_Doc_Type_Name(   P_lang    In NUMBER,
                                                                BEGIN                                                                
                                                  Begin
                                                                        Select IAS_GEN_PKG.GET_PROMPT(P_lang,LBL_NO)
                                                                            From DTS_DOC_TYPE
                                                                        Where  DOC_TYPE = P_Doctype
                                                                    Exception 
                                                                    End;                                                                    
                                                                        Begin
                                                                            Select Flg_Desc 
                                                                                From S_Flags
                                                                            Where Lang_no  = P_lang
                                                                        Exception 
                                                                        End;
                                                                        Begin
                                                                            Select Flg_Desc 
                                                                                From S_Flags
                                                                            Where Lang_no  = P_lang
                                                                        Exception 
                                                                        End;     
                                                                Exception 
Function Prc 
               Exception
               End;
               Begin
                  For D_Cv In (Select Nvl (Round (Sum (Nvl (VAT_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt, Sum (Nvl (Vat_Per, 0)) Vat_Per
                                 From Order_Detail
                                Where Order_Ser = I.Doc_Ser)
                     For Tax_Cv In (Select Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt, Nvl (Sum (Nvl (Tax_Prcnt, 0)), 0) Vat_Per
                                      From Gnr_Rq_Tax_Itm_
CREATE INDEX INDX_
CREATE INDEX INDX_DTSPLANPRDDTL_FK ON DTS_PLAN_PRD_DTL(DOC_SER)
CREATE INDEX INDX_DTSPLANSMANDTL_FK ON DTS_PLAN_SMAN_DTL(DOC_SER)
ALTER TABLE DTS_GRP_DTL ADD (CONSTRAINT DTSGRPDTL_UQ PRIMARY KEY(GRP_CODE,I_CODE,ITM_UNT))
Complete Create Index DTS
SELECT DISTINCT M.TABLE_NAME   FROM USER_CONSTRAINTS M  WHERE M.CONSTRAINT_TYPE = ''R''  AND M.DELETE_RULE = ''CASCADE''  AND (M.TABLE_NAME LIKE  ''DTS%'' ) AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''%TMP''  AND M.TABLE_NAME NOT LIKE  ''%OLD%'' ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_CONSTRAINTS M,USER_CONS_COLUMNS D  WHERE M.CONSTRAINT_NAME = D.CONSTRAINT_NAME  AND M.TABLE_NAME = D.TABLE_NAME  AND M.CONSTRAINT_TYPE = ''R''  AND M.DELETE_RULE = ''CASCADE''  AND M.TABLE_NAME = :b1  AND NOT EXISTS  (SEL
ECT 1   FROM USER_IND_COLUMNS  WHERE TABLE_NAME = M.TABLE_NAME  AND COLUMN_NAME = D.COLUMN_NAME  AND ROWNUM <= 1 )"
 Not Complete  Create table ......
 INSERT INTO DTS_PARA
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(1, 'Collect Requests', 4516, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(2, 'Delivery Goods', 4522, 0, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)ValueS   (3, 'Promoting goods', 4521, 0, 0) 
 insert into DTS_PRFRM
 insert into DTS_PRFRMNCE_INDCTR   (PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values   (5, 'Get Info.About Competitor Item', 4517, 0, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(6, 'Showing Items', 4534, 1, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(7, 'Offers Prices', 4523, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(8, 'Delivery Invoice', 4524, 0, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(9, 'Sales', 4525, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(10, 'Money Collecting', 1230, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(11, 'Inventory Stocks Customer', 4526, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(12, 'Others', 4511, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(13, 'TASTING', 14160, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values (14, 'Distributed Free_Qty And Promotion', 14161, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values (15, 'Items Questionnaire', 15258, 1, 1)
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,DOC_PST,FLG_ST,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM,DOC_APPRVD_FLG)  VALUES (2,1401,'Daily Route Planing For Sales Man',1,SYSDATE,NULL,NULL,NULL,0,0,NULL,NULL,NULL,0) 
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,DOC_PST,FLG_ST,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM,DOC_APPRVD_FLG)  VALUES (1,1401,'
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,DOC_PST,FLG_ST,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM,DOC_APPRVD_FLG)  VALUES (3,1401,'Plan d'action quotidien du d
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS (LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,AD_DATE,UP_DATE,FLG_ST,DOC_PST)  VALUES (2,1401,1,'Daily Route Planing For Sales Man',NULL,SYSDATE,NULL,1,0) 
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS (LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,AD_DATE,UP_DATE,FLG_ST,DOC_PST)  VALUES (1,1401,1,'
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS (LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,AD_DATE,UP_DATE,FLG_ST,DOC_PST)  VALUES (3,1401,1,'Plan d'action quotidien du d
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,DOC_PST,FLG_ST,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM,DOC_APPRVD_FLG)  VALUES (2,1404,'Expenses Of Sales Man',1,SYSDATE,NULL,NULL,NULL,0,0,NULL,NULL,NULL,0) 
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,DOC_PST,FLG_ST,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM,DOC_APPRVD_FLG)  VALUES (1,1404,'??????? ?????????',1,SYSDATE,NULL,NULL,NULL,0,0,NULL,NULL,NULL,0) 
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,DOC_PST,FLG_ST,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM,DOC_APPRVD_FLG)  VALUES (3,1404,'D
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS (LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,AD_DATE,UP_DATE,FLG_ST,DOC_PST) VALUES (2,1404,1,'Expenses Of Sales Man',NULL,SYSDATE,NULL,1,0) 
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS (LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,AD_DATE,UP_DATE,FLG_ST,DOC_PST) VALUES (1,1404,1,'??????? ?????????',NU
INSERT INTO  IAS_DOCJV_TYPE_SYSTEMS (LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,AD_DATE,UP_DATE,FLG_ST,DOC_PST) VALUES (3,1404,1,'D
INSERT INTO IAS_SYS.IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,DOC_PST,FLG_ST,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM,DOC_APPRVD_FLG) VALUES (2,1402,'Periodic Route Planing For Sales Man',1,SYSDATE,NULL,NULL,NULL,0,0,NULL,NULL,NULL,0) 
INSERT INTO IAS_SYS.IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,DOC_PST,FLG_ST,RPRT_NM,AD_TRMNL_NM,UP_TRMNL_NM,DOC_APPRVD_FLG)  VALUES (1,1402,'
INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS (LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,AD_DATE,UP_DATE,FLG_ST,DOC_PST) VALUES (2,1402,1,'Periodic Route Planing For Sales Man',NULL,SYSDATE,NULL,1,0) 
INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS (LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,AD_DATE,UP_DATE,FLG_ST,DOC_PST) VALUES (1,1402,1,'
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MS
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values (1, 1406, '
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(1, 1407, '
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST,  FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(1, 1408, '
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(1, 1409, '
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(1, 1410, '
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(1, 1411, '
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(2, 1405, 'Target Customer Details', 1, 0,    1, 'DTS', 70, 0)  
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(2, 1406, 'Show Items', 1, 0, 1, 'DTS', 70, 0)  
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(2, 1407, 'Items Questionnaire', 1, 0, 1, 'DTS', 70, 0)  
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(2, 1408, 'Updating Costomer Info', 1, 0, 1, 'DTS', 70, 0)  
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(2, 1409, 'Customer Locations Scanning', 1, 0, 1, 'DTS', 70, 0)  
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(2, 1410, 'Customer W.H Stocktaking ', 1, 0, 1, 'DTS', 70, 0)  
 Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST(LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, DOC_PST, FLG_ST, F_SYS, SYS_NO, ARCHV_FLG)Values(2, 1411, 'Sales Reps Visits', 1, 0, 1, 'DTS', 70, 0)  
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,J
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (1, 1406, 1, '
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (1, 1407, 1, '
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (1, 1408, 1, '
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (1, 1409, 1, '
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (1, 1410, 1, '
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (1, 1411, 1, '
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg) Values (2, 1405, 1, 'Target Customer Details', 1, 0, 0)  
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (2, 1406, 1, 'Show Items', 1, 0, 0)  
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (2, 1407, 1, 'Items Questionnaire', 1, 0, 0)  
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (2, 1408, 1, 'Updating Costomer Info', 1, 0, 0)  
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (2, 1409, 1, 'Customer Locations Scanning', 1, 0, 0)  
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (2, 1410, 1, 'Customer W.H Stocktaking ', 1, 0, 0)  
 Insert Into Ias_Sys.Ias_Docjv_Type_Systems(Lang_No,Doc_Type,Jv_Type,Jv_Name,Flg_St,Doc_Pst,Archv_Flg)Values (2, 1411, 1, 'Sales Reps Visits', 1, 0, 0)  
 Insert Into Dts_doc_type_sign (Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (1, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (2, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (3, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (9, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (4, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (6, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign) Values (0, '
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values   (0, 2, 2688, 'Recipet Voucher', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD) Values(1, 52, 3928, 'Sales Quotation', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values(2, 53, 14771, 'Sale Order', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values (3, 4, 2793, 'Sales Inv.', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values(4, 5, 1409, 'Sales Return Inv.', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values(6, 1410, 4526, 'Customer W.H Stocktaking ', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values  (9, 136, 6584, 'Sales Retuen Request', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values (13, 1407, 15258, 'Items Questionnaire', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD) Values (11, 1406, 2119, 'Show Items', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values (16, 1408, 4473, 'Updating Costomer Info', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values  (12, 1405, 5062, 'Target Customer Details', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values (15, 1409, 16238, 'Customer Locations Scanning', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values(14, 1411, 16239, 'Sales Reps Visits', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD) Values (10, 31, 2709, 'Request Transfer', 1)
Err. When Update S_Flags Dts, 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 1, 1, 'DTS_PLAN_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 1, 1, 'DTS_PLAN_TYP', 'Sale Man', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 3, 3, 'DTS_PLAN_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 3, 3, 'DTS_PLAN_TYP', 'Promoter', 1, 0, SYSDATE, NULL) 
 Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 1, 1, 'DTS_SAVE_DOC_METHOD', 'General',  1, 0)
 Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 1, 1, 'DTS_SAVE_DOC_METHOD', '
 Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 2, 2, 'DTS_SAVE_DOC_METHOD', '
 Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values(2, 2, 2, 'DTS_SAVE_DOC_METHOD', 'General BY Salesman', 1, 0)
 Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values(1, 3, 3, 'DTS_SAVE_DOC_METHOD', '
 Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 3, 3, 'DTS_SAVE_DOC_METHOD', 'BY Doc Type', 1, 0)
 Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values (1, 4, 4, 'DTS_SAVE_DOC_METHOD', '
 Insert  into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV)Values(2, 4, 4, 'DTS_SAVE_DOC_METHOD', 'BY Doc Type And Salesman',  1, 0)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 1, 1, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 1, 1, 'DTS_PRFRMNCE_INDCTR', 'Collect Requests',1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 2, 2, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 2, 2, 'DTS_PRFRMNCE_INDCTR', 'Delivery Goods', 0, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 3, 3, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 4, 4, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 4, 4, 'DTS_PRFRMNCE_INDCTR', 'Sales Return', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 5, 5, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 5, 5, 'DTS_PRFRMNCE_INDCTR', 'Get Info.About Competitor Item', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 6, 6, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 6, 6, 'DTS_PRFRMNCE_INDCTR', 'Showing Items', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 7, 7, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 7, 7, 'DTS_PRFRMNCE_INDCTR', 'Offers Prices', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 8, 8, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 8, 8, 'DTS_PRFRMNCE_INDCTR', 'Delivery Invoice', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 9, 9, 'DTS_PRFRMNCE_INDCTR', ' 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 9, 9, 'DTS_PRFRMNCE_INDCTR', 'Sales', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 10, 10, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 10, 10, 'DTS_PRFRMNCE_INDCTR', 'Money Collecting', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 11, 11, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 11, 11, 'DTS_PRFRMNCE_INDCTR', 'Inventory StocksCustomer', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 12, 12, 'DTS_PRFRMNCE_INDCTR', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 12, 12, 'DTS_PRFRMNCE_INDCTR', 'Others.', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 2, 2, 'DTS_CST_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 1, 1, 'DTS_CST_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 1, 1, 'DTS_CST_TYP', 'Company
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 2, 2, 'DTS_CST_TYP', 'Customer Target', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 1, 1, 'DTS_POST', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 2, 2, 'DTS_POST', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 3, 3, 'DTS_POST', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 1, 1, 'DTS_POST', 'Sales Invoice', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 2, 2, 'DTS_POST', 'Sales Return Invoice', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 3, 3, 'DTS_POST', 'Receipt And Payment Vouchers', 0, 0, SYSDATE, NULL) 
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
 Values(2, 1, 1, 'DTS_EXE_PLN_TYP', 'From Daily Plan',1, 0)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 1, 1, 'DTS_MAP_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 1, 1, 'DTS_MAP_TYP', 'Identify Sales Mans Locations', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 2, 2, 'DTS_MAP_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 2, 2, 'DTS_MAP_TYP', 'Identify Customers Locations', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 3, 3, 'DTS_MAP_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 3, 3, 'DTS_MAP_TYP', 'Draw Daily Plan For Sales Man', 1, 0, SYSDA
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 4, 4, 'DTS_MAP_TYP', 'Draw Route Line Between Sales Man & Customer', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 4, 4, 'DTS_MAP_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 5, 5, 'DTS_MAP_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 5, 5, 'DTS_MAP_TYP', 'Identify Customers Locations By Region', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 1, 1, 'COMM_DTS_PAID_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 2, 2, 'COMM_DTS_PAID_TYP', '
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 2, 2, 'COMM_DTS_PAID_TYP', 'Distribution Paid Of Manual', 1, 0, SYSDATE, NULL) 
Insert into S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 1, 1, 'COMM_DTS_PAID_TYP', 'Distribution Paid Of Automatic', 1, 0, SYSDATE, NULL) 
 INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 1, 1, 'DTS_SMAN_CST_LNK_TYP', '
 INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 2, 2, 'DTS_SMAN_CST_LNK_TYP', '
 INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 3, 3, 'DTS_SMAN_CST_LNK_TYP', '
 INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (1, 4, 4, 'DTS_SMAN_CST_LNK_TYP', '
 INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 1, 1, 'DTS_SMAN_CST_LNK_TYP', 'Connect with customers', 1, 0, SYSDATE, NULL) 
 INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 2, 2, 'DTS_SMAN_CST_LNK_TYP', 'Swap connecting with customers',1, 0, SYSDATE, NULL) 
 INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 3, 3, 'DTS_SMAN_CST_LNK_TYP', 'Disconnect with customers',1, 0, SYSDATE, NULL) 
 INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) Values (2, 4, 4, 'DTS_SMAN_CST_LNK_TYP', 'Update customer details',1, 0, SYSDATE, NULL) 
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values (1, 1, 1, 'DTS_AR_SERIAL', '
Insert into S_FLAGS (LANG_NO,FLG_SR, F
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 1, 1, 'DTS_AR_SERIAL', 'By Sman',  1, 0) 
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values(2, 2, 2, 'DTS_AR_SERIAL', 'By Sman And Type', 1, 0) 
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 1, 1, 'DTS_SI_SERIAL', '
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 2, 2, 'DTS_SI_SERIAL', '
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 3, 3, 'DTS_SI_SERIAL', '
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 4, 4, 'DTS_SI_SERIAL', '
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 5, 5, 'DTS_SI_SERIAL', '
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 6, 6, 'DTS_SI_SERIAL', '
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 2, 2, 'DTS_SI_SERIAL', 'By Sman And Pay Type', 1, 0) 
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 3, 3, 'DTS_SI_SERIAL', 'By W_code', 1, 0) 
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 4, 4, 'DTS_SI_SERIAL', 'By W_code And Pay Type', 1, 0) 
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 5, 5, 'DTS_SI_SERIAL', 'By Type And Warehouse', 1, 0) 
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 6, 6, 'DTS_SI_SERIAL', 'By Type And Warehouse And Pay Type', 1, 0) 
 delete from s_flags where flg_code='DTS_VST_STS' 
 Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 2, 1, 'DTS_VST_STS', '
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV)Values(1, 1, 0, 'DTS_VST_STS', '
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(2, 1, 0, 'DTS_VST_STS', 'UnSuccessful', 1, 0)
 Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,    FLG_ST, FLG_PRIV)Values   (2, 2, 1, 'DTS_VST_STS', 'Successful',  1, 0)
 Insert into S_LOV_SLCT
               (154, 'LOV_DTS_GRP_DTL', 5535, 'SELECT M.Grp_Code,DECODE (:Parameter.Lang_No,1, NVL (M.Grp_L_Nm, M.Grp_F_Nm),
            NVL (M.Grp_F_Nm, M.Grp_L_Nm)) Grp_Nm  FROM Dts_Grp_Mst M Where 1=1', 2, 
 Insert into S_LOV_SLCT
               (156, 'LOV_DTS_TYP_DTL', 4481, 'SELECT M.TYP_No,DECODE (:Parameter.Lang_no,1,NVL(M.TYP_L_NM, M.TYP_F_NM),NVL(M.TYP_F_NM, M.TYP_L_NM)) TYP_Nm FROM DTS_TYP_DTL M Where 1=1 ', 2, 
 Insert into S_LOV_SLCT
               (155, 'LOV_DTS_GRP_RVL', 5536, 'SELECT M.Grp_Code,DECODE (:Parameter.Lang_no,1,NVL(M.Grp_L_Nm, M.Grp_F_Nm),NVL(M.Grp_F_Nm, M.Grp_L_Nm)) Grp_Nm FROM DTS_GRP_ITM_RVL M Where 1=1 ', 2, 
 Insert into S_LOV_SLCT
               (157, 'LOV_DTS_CMPNY_RVL', 5537, 'SELECT M.CMPNY_NO,DECODE(:Parameter.Lang_no,1,NVL(M.CMPNY_L_NM,M.CMPNY_F_NM),NVL(M.CMPNY_F_NM,M.CMPNY_L_NM)) CMPNY_NM FROM DTS_CMPNY_RIVAL_DTL M Where 1=1 ', 2, 
 Insert into S_LOV_SLCT
               (158, 'LOV_DTS_AGENT', 5538, 'SELECT M.AGENT_NO,DECODE(:Parameter.Lang_no,1,NVL(M.AGENT_L_NM,M.AGENT_F_NM),NVL(M.AGENT_F_NM,M.AGENT_L_NM)) AGENT_NM FROM DTS_AGENTS_DTL M Where 1=1 ', 2, 
 Insert into S_LOV_SLCT
               (159, 'LOV_DTS_ITM_RVL', 5539, 'SELECT M.I_CODE_RVL,DECODE(:Parameter.Lang_no,1,NVL(M.I_L_NM,M.I_F_Nm),NVL(M.I_F_Nm, M.I_L_Nm)) I_Nm  ,ITM_UNT FROM DTS_ITM_RVL_MST M Where 1=1 ', 3, 
 Insert into S_LOV_SLCT
               (160, 'LOV_DTS_CST_TRGT', 5062, 'Select C_Code,Decode (:Parameter.Lang_No,1,Nvl(C_L_Nm, C_F_Nm),Nvl (C_F_Nm, C_L_Nm)) C_Name From Dts_Customer_Trgt Where 1=1', 2, 
 Insert into S_LOV_SLCT
               (164, 'LOV_DTS_PLAN_DYLY', 4938, 'SELECT doc_no,doc_date,plan_typ_nm,rep_code,rep_nm,ref_no,doc_dsc,brn_no
            FROM (SELECT a.doc_no,a.doc_date,c.flg_desc plan_typ_nm,a.ref_no,a.doc_dsc,a.rep_code,DECODE (:parameter.lang_no,1, NVL (b.reprs_a_name, b.reprs_e_name), NVL (b.reprs_e_name, b.reprs_a_name)) rep_nm,a.doc_ser,a.brn_no
                  FROM dts_plan_sman_mst a, sales_man b, s_flags c
                  WHERE     a.plan_typ = 1
                  SELECT a.doc_no,
                  FROM dts_plan_sman_mst a, ias_promoters b, s_flags c
                  WHERE     a.plan_typ = 2
 Insert into S_LOV_SLCT
               (168, 'LOV_DTS_PLAN_PRD', 5542, 'Select a.Doc_No, a.Doc_Date, a.Rep_Code, Decode(:Parameter.Lang_No,1,Nvl(b.Reprs_A_Name,b.Reprs_E_Name),Nvl(b.Reprs_E_Name,b.Reprs_A_Name)) Rep_Nm, a.Ref_No, a.Doc_Dsc,a.Brn_No
                  from Dts_Plan_Prd_Mst a,Sales_Man b
                 Where a.rep_code=b.Reprs_Code', 7, 
 Insert into S_LOV_SLCT
               (169, 'LOV_DTS_EXP_TYP', 4927, 'SELECT   TYP_NO,DECODE(:PARAMETER.LANG_NO,1, NVL(TYP_L_NM, TYP_F_NM),NVL(TYP_F_NM, TYP_L_NM)) TYP_NM FROM DTS_TYP_DTL
            WHERE 1=1 And  DTS_TYP_NO = 4', 2, 
 Insert into S_LOV_SLCT
               (170, 'LOV_DTS_SMAN_EXP', 4927, 'Select a.Doc_No, a.Doc_Date, a.Rep_Code, Decode(:Parameter.Lang_No,1,Nvl(b.Reprs_A_Name,b.Reprs_E_Name),Nvl(b.Reprs_E_Name,b.Reprs_A_Name)) Rep_Nm, a.Ref_No, a.Doc_Dsc,a.Brn_No
                  from DTS_EXPNS_MST a,Sales_Man b
                 Where a.rep_code=b.Reprs_Code', 7, 
 Insert into S_LOV_SLCT
               (171, 'LOV_DTS_ITM_RVL_UNT', 75, 'SELECT  ITM_UNT,P_SIZE FROM DTS_ITM_RVL_MST WHERE 1=1', 2, 
 Insert into S_LOV_SLCT
               (172, 'LOV_DTS_RVL_ITM_INFO', 5569, 'SELECT   Doc_No,Doc_Date,Plan_Typ_Nm,Rep_Code,Rep_Nm,Ref_No,Doc_Dsc,Brn_No
            FROM (SELECT A.DOC_NO,A.DOC_DATE,C.FLG_DESC PLAN_TYP_NM,A.REF_NO,A.DOC_DSC,A.REP_CODE,
            FROM DTS_ITM_INFO_MST A,SALES_MAN B,S_FLAGS C WHERE A.PLAN_TYP = 1 AND A.REP_CODE = B.REPRS_CODE AND C.FLG_CODE = ''DTS_PLAN_TYP''
            UNION ALL SELECT A.DOC_NO,A.DOC_DATE,C.FLG_DESC PLAN_TYP_NM,A.REF_NO,A.DOC_DSC,A.PRM_CODE REP_CODE,
            FROM DTS_ITM_INFO_MST A,IAS_PROMOTERS B,S_FLAGS C
            WHERE A.PLAN_TYP = 3 AND A.PRM_CODE = B.PRM_CODE  AND C.FLG_CODE = ''DTS_PLAN_TYP'' AND C.FLG_VALUE = A.PLAN_TYP AND C.LANG_NO = :PARAMETER.LANG_NO)
 Insert into S_LOV_SLCT
               (173, 'LOV_DTS_STK_CST', 4526, 'SELECT   A.DOC_NO, A.DOC_DATE, A.REF_NO, A.DOC_DESC, A.REP_CODE,DECODE(:PARAMETER.LANG_NO,1,NVL(B.REPRS_A_NAME, B.REPRS_
            FROM DTS_STK_CST_MST A, SALES_MAN B WHERE A.REP_CODE = B.REPRS_CODE ', 7, 
 Insert into S_LOV_SLCT
               (165, 'LOV_DTS_PLAN_DYLY_PRSUT', 4938, 'SELECT doc_no,doc_date,plan_typ_nm,rep_code,rep_nm,ref_no,doc_dsc,brn_no,Approved,PRCSSD_FLG
            FROM (SELECT a.doc_no,a.doc_date,c.flg_desc plan_typ_nm,a.ref_no,a.doc_dsc,a.rep_code,DECODE (:parameter.lang_no,1, NVL (b.reprs_a_name, b.reprs_e_name), NVL (b.reprs_e_name, b.reprs_a_name)) rep_nm,a.doc_ser,a.brn_no,Approved,PRCSSD_FLG
                  FROM dts_plan_sman_mst a, sales_man b, s_flags c
                  WHERE     a.plan_typ=1
                  SELECT a.doc_no,
                 FROM dts_plan_sman_mst a, ias_promoters b, s_flags c
            WHERE a.plan_typ=2 AND a.prm_code=b.prm_code AND c.flg_code=''DTS_PLAN_TYP'' AND c.flg_value=a.plan_typ AND c.lang_no=:parameter.lang_no
            Where 1=1 ', 10, 
 Insert into S_LOV_SLCT
 Values (401, 'LOV_DTS_CST_GPS', 8662, ' SELECT  LTRIM(RTRIM(CONCAT(CON
CAT(LTRIM(RTRIM(POINT_GPS_LAT_Y)),'',''),LTRIM(RTRIM(POINT_GPS_LNGT_X)))))  POINT_GPS,POINT_ID,POINT_DESC, POINT_GPS_LAT_Y, POINT_GPS_LNGT_X,REP_CODE,C_CODE FROM DTS_SURVEY_CST_GPS C '
INSERT INTO S_LOV_SLCT
SELECT   RESON_TYP,DECODE (:PARAMETER.LANG_NO,1,NVL (RESON_L_DSC,RESON_F_DSC),NVL (RESON_F_DSC,RESON_L_DSC)) RESON_DSC
                       FROM DTS_VST_FAIL_REASON   ORDER BY RESON_TYP',
Insert into S_LOV_SLCT
   (160, 'LOV_DTS_ITMS_SHW', 10454, 'SELECT    A.DOC_SER,A.DOC_NO, A.DOC_DATE, A.REF_NO, A.DOC_DSC, A.REP_CODE,DECODE(:PARAMETER.LANG_DFLT,1,NVL(B.REPRS_A_NAME, B.REPRS_E_NAME),NVL(B.REPRS_E_NAME, B.REPRS_A_NAME)) REP_NM, A.BRN_NO
                                        FROM DTS_ITMS_SHW_MST A, SALES_MAN B WHERE A.REP_CODE = B.REPRS_CODE ', 8, '0,292,1137,143,146,395,396,2555', '0,50,70,60,150,70,150,30', '1,2', ',1,2,3,7,', ',4,6,', 0) 
Insert into S_LST_SLCT (LST_NM, LST_SQL, LST_WHR, LST_ORDRBY, LST_SQL_PRV)
             Values('LST_STN_PRD', 'SELECT  TO_CHAR(PRD_NO) || ''-'' || DECODE(:PARAMETER.LANG_NO,1,NVL(PRD_A_NM, PRD_F_NM),NVL(PRD_F_NM,PRD_A_NM)) , TO_CHAR(PRD_NO) FROM  STN_PRD WHERE 1=1', NULL, '1', NULL) ; 
UPDATE STN_COUNTERS o SET PRIMARY_READ= ( Select Max(CUNTR_READ_CRNT) From STN_BILL_DTL  i Where i.CUNTR_NO=o.CUNTR_NO Group By i.CUNTR_NO)
                       Where CUNTR_NO In(Select CUNTR_NO From  STN_BILL_DTL )
SELECT COUNT(1)   FROM TAB  WHERE TABTYPE = ''TABLE''  AND (TNAME LIKE  ''DTS%'' )"SELECT 1   
FROM DTS_PARA  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_PRFRMNCE_INDCTR  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_PRFRMNCE_INDCTR  WHERE PR_NO IN ( 13,14  ) AND ROWNUM <= 1"SELECT COUNT(1)   FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS  WHERE DOC_TYPE = 1401"SELECT COUNT(1)   FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS  WHERE DOC_TYPE = 1404"SELECT COUNT(1)   FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS  WHERE DOC_TYPE = 1402"SELECT 1   FROM DTS_DOC_TYPE_SIGN  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_DOC_TYPE  WHERE ROWNUM <= 1"UPDATE IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST SET FLG_ST=1 WHERE DOC_TYPE = 1401  AND FLG_ST = 0"UPDATE IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST SET FLG_ST=1 WHERE DOC_TYPE = 1404  AND FLG_ST = 0"UPDATE IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST SET FLG_ST=1 WHERE DOC_TYPE = 1402  AND FLG_ST = 0"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_PLAN_TYP''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_SAVE_DOC_METHOD''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_PRFRMNCE_INDCTR''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_CST_TYP''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_POST''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_EXE_PLN_TYP''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_VST_STS''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_MAP_TYP''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''COMM_DTS_PAID_TYP''"SELECT COUNT(FLG_CODE)   FROM S_FLAGS  WHERE FLG_CODE = ''DTS_SMAN_CST
_LNK_TYP''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_GRP_DTL''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_TYP_DTL''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_GRP_RVL''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_CMPNY_RVL''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_AGENT''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_ITM_RVL''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_CST_TRGT''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_PLAN_DYLY''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_PLAN_PRD''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_EXP_TYP''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_SMAN_EXP''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_ITM_RVL_UNT''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_RVL_ITM_INFO''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_STK_CST''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_PLAN_DYLY_PRSUT''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_CST_GPS''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_VST_FAIL_REASON''"SELECT COUNT(LOV_NM)   FROM S_LOV_SLCT  WHERE LOV_NM = ''LOV_DTS_ITMS_SHW''  AND ROWNUM <= 1"SELECT COUNT(LST_NM)   FROM S_LST_SLCT  WHERE LST_NM = ''LST_STN_PRD''"SELECT 1   FROM DTS_TYP_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_PARA  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_DOC_TYPE_SIGN  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_DOC_TYP  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_PRFRMNCE_INDCTR  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_GRP_ITM_RVL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_ITM_RVL_MST  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_ITM_RVL_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_GRP_MST  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_GRP_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_ITM_INFO_MST  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_ITM_INFO_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_ITM_INFO_SUB_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_ITM_INFO_SUB_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_AGENTS_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_CMPNY_RIVAL_DTL  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_CUSTOMER_TRGT  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_SURVEY_CST_GPS  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_VST_FAIL_REASON  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_OPTN  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_VST_RSLT_TYPS  WHERE ROWNUM 
<= 1"SELECT 1   FROM DTS_DOC_TYP  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_DOC_TYPE  WHERE ROWNUM <= 1"SELECT 1   FROM STN_PRD  WHERE ROWNUM <= 1"SELECT 1   FROM STN_FUEL_TYP  WHERE ROWNUM <= 1"SELECT 1   FROM STN_COUNTERS  WHERE ROWNUM <= 1"SELECT 1   FROM STN_COUNTERS_EMP  WHERE ROWNUM <= 1"
 INSERT INTO Form_Detail(F_Sys,Sys_No,Form_No,F_Parent_No,F_File_Name,F_Bt_Priv,F_Inactive,F_Order_No,Scr_Orgnl,Scr_Theme_No,Scr_Typ,Doc_Typ)Values('DTS',70,1420,1400,'DTST020',1,0,1420,Null,Null,3,Null) 
 INSERT INTO Ias_Form_Name(Lang_No, Form_No, Form_Name) Values(1, 1420, '
 INSERT INTO Ias_Form_Name(Lang_No, Form_No, Form_Name) Values(2, 1420, 'Post To Onyx System') 
Insert into FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)Values('DTS', 70, 1357, 1350, 'DTSI006', 1, 0, 1357, NULL, NULL, 2, NULL)
Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values(1, 1357, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)Values(2, 1357, 'Check Settings')
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1300, 44  ,  NULL    , 0,0, 1300,   NULL, 0, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1301, 1300,  NULL    , 0,0, 1301,   NULL, 0, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1302, 1301, 'DTSS001', 1,0, 1302, NULL, 1, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1303, 1301, 'DTSS002', 1,0, 1303, NULL, 1, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1304, 1301, 'DTSS003', 1,0, 1304, NULL, 1, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1306, 1301, 'DTSS003', 1,0, 1306, NULL, 1, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1307, 1301, 'DTSS003', 1,0, 1307, NULL, 1, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1308, 1301, 'DTSS003', 1,0, 1308, NULL, 1, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1350, 1300,  NULL    , 0,0, 1350, NULL, 0, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1351, 1350, 'DTSI001', 1,0, 1351, NULL, 2, NULL,70, NULL)
 INSERT INTO FOR
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1353, 1350, 'DTSI003', 1,0, 1353, NULL, 2, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1354, 1350, 'DTSI004', 1,0, 1354, NULL, 2, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1355, 1350, 'ARSI017', 1,0, 1355, NULL, 2, NULL,70, 812)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1356, 1350, 'DTSI005', 1,0, 1356, NULL, 2, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1400, 1300, NULL     , 0,0, 1400, NULL, 0, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1401, 1400, 'DTST001', 1,0, 1401, NULL, 3, 1401,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1402, 1400, 'DTST002', 1,0, 1402, NULL, 3, 1402,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1403, 1400, 'DTST003', 1,0, 1403, NULL, 3, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1404, 1400, 'DTST004', 1,0, 1404, NULL, 3, 1404,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1405, 1400, 'DTST005', 1,0, 1405, NULL, 3, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1406, 1400, 'DTST006', 1,0, 1406, NULL, 3, NULL,70, 356)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL)  VALUES ('DTS', 1407, 1400, 'DTST010', 1,0, 1407, NULL, 3, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1450, 1300, NULL, 0,0, 1450, NULL, 0, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1451, 1450, 'DTSR001', 0,0, 1451, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1452, 1450, 'DTSR002', 0,0, 1452, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1453, 1450, 'DTSR003', 0,0, 1453, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1454, 1450, 'DTSR004', 0,0, 1454, NULL, 4, NULL,70, NU
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1455, 1450, 'DTSR005', 0,0, 1455, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1456, 1450, 'DTSR006', 0,0, 1456, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1457, 1450, 'DTSR007', 0,0, 1457, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1458, 1450, 'DTSR008', 0,0, 1458, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1459, 1450, 'DTSR009', 0,0, 1459, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1460, 1450, 'DTSR010', 0,0, 1460, NULL, 4, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1309, 1301, 'DTSS006', 1,0, 1309, NULL, 1, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1310, 1301
  INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1462, 1450, 'DTSR012', 0,0, 1460, NULL, 4, NULL,70, NULL)
  INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1411, 1400, 'DTST011', 0,0, 1411, NULL, 3, NULL,70, NULL)
  INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1311, 1301, 'DTSS008', 0,0, 1311, NULL, 1, NULL,70, NULL)
 INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_TYP)Values('STK', 44, 356, 401, 'DTST006', 1, 0, 35, 3) 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1300, 'Distribution System') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1300, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1301, 'Configuration') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1301, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1302, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1302, 'Sales Man Route Planning Items') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1303, 'Items Competition Group') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1303, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1304, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1304, 'Ways Entry Items Competition') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1306, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1306, 'Characteristics For Items Competitior') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1307, 'Types Of Expenses Of S
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1307, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1308, 'Tyeps Of Price Competition Items') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1308, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1309, 'Distribution Parameters') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1309, ' 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1310, 'Customer Visit Fail Reasons') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1310, ' 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1350, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1350, 'Inputs') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1351, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1351, 'Details Companies Producing Items Competition') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1352, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1352, 'Details Agents Items  Competition') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1353, 'Details Distribution Group') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1353, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1354, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1354, 'Item Details Rival') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1355, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1355, 'Promoter Details') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1356, 'Details Target Customer') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1356, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1400, 'Operations') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1400, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1401, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1401, 'Daily Route Planing For Sales Man') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1402, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1402, 'Period Route Planing For Sales Man') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1403, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1403, 'Keep Track Of Daily Route For Sales Man') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1404, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1404, 'Expenses Of Sales Man') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1405, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1405, 'Statistical Info. About Items Competition') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1406, 'Stock Customer inventories') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1406, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1407, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1407, 'MAPS') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1411, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1411, 'Items Show For Promotion') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1450, 'Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1450, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1451, 'Item Details Rival Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1451, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1452, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1452, 'Details Target Customer Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1453, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1453, 'Promoter Details Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1454, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1454, 'Details Distribution Group Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1455, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1455, 'Daily Route Planing For Sales Man Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1456, 'Keep Track Of Daily Route For Sales Man Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1456, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1457, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1457, 'Expenses Of Sales Man Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1458, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1458, 'Statistical Info. About Items Competition Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1459, 'Stock Customer inventories Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1459, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1460, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1460, 'Distributors Sales Reports') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1462, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1462, 'Distributors Customers Visits Reports') 
 Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values(2, 356, 'Stocking cutomer') 
 Insert into IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)Values(1, 356, '
SELECT COUNT(*)   FROM FORM_DETAIL  WHERE F_SYS = ''DTS''"DELETE FROM FORM_DETAIL WHERE F_SYS = ''DTS''"UPDATE FORM_DETAIL SET F_INACTIVE=0 WHERE F_SYS = ''DTS''"SELECT FORM_DETAIL.FORM_NO,U_ID,F_ORDER_NO   FROM FORM_DETAIL,USER_R  WHERE F_SYS = ''DTS''  AND (USER_R.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(USER_R.U_ID) = 1 ) AND ( FORM_DETAIL.FORM_NO,U_ID  ) IN (SELECT FORM_NO,USER_R.U_ID   FROM FORM_DETAIL,USER_R  WHERE (USER_R.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(USER_R.U_ID) = 1 ) MINUS SELECT FORM_NO,USER_R.U_ID   FROM PRIVILEGE  WHERE (PRIVILEGE.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(PRIVILEGE.U_ID) = 1 ))"INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,F_ORDER_NO,AD_DATE,AD_U_ID )  VALUES ( :b1,:b2,1,1,1,1,1,1,:b3,IAS_GEN_PKG.GET_CURDATE,1  )"
 CREATE OR REPLACE PACKAGE DTS_GEN_PKG  AS
             PROCEDURE  GET_PARA(P_REP_CODE IN SALES_MAN.REPRS_CODE%TYPE);
             FUNCTION   GET_DOC_TYP_SERIAL (P_DOC_TYP In NUMBER) RETURN NUMBER ; 
             FUNCTION GET_DOC_NO  (  P_DOC_TYP      IN NUMBER,
             FUNCTION GET_DOC_SER(   P_DOC_TYP      IN NUMBER,
             PROCEDURE INSRT_RQ_TRNSFR_MST ( P_DOC_TYP           IN NUMBER,   ---##--  REQUEST=31    ---##--  RECIEVE =8  
             PROCEDURE  INSRT_RQ_TRNSFR_DTL (P_I_CODE        IN  IAS_ITM_MST.I_CODE%TYPE,
            PROCEDURE Insrt_Apprvd_Lv
             PROCEDURE INSRT_RSRVD_TBL ;
               Function Get_Cst_Trns_bal( P_Bal_Typ       In number    default 1 ,    --- 1= Gl_Balance   ---##---  Unposted_trasns=2  ---##---- 3=Due_Cheque
             PROCEDURE  EXECUTE_PLN(P_DOC_TYPE   NUMBER,P_DOC_SER    NUMBER,P_C_CODE  VARCHAR2,P_REP_CODE  VARCHAR2,P_DOC_DATE  DATE);
              Function Get_Cst_Lmt(        P_C_Code        In Varchar2  ,                                                      
                  Function Get_Vchr_Doc_No(    P_Brn_No             In Number,
 CREATE OR REPLACE PACKAGE BODY DTS_GEN_PKG AS
                PROCEDURE   GET_PARA(P_REP_CODE IN SALES_MAN.REPRS_CODE%TYPE)  IS
                BEGIN
                    SELECT CONN_BRN_NO,W_CODE,CC_CODE,PJ_NO,ACTV_NO  ---,SO_TYPE, SO_DSC
                    FROM Sales_Man 
                   WHERE REPRS_CODE=P_REP_CODE 
                    BEGIN
                     SELECT U_ID ,CONN_BRN_NO
                        FROM USER_R 
                      WHERE  REP_CODE IS NOT NULL 
                    EXCEPTION WHEN OTHERS THEN
                        RAISE_APPLICATION_ERROR (-20003,'Error When Select Default User Online , '||SQLERRM);
                    BEGIN
                     SELECT CONN_BRN_NO
                        FROM WAREHOUSE_DETAILS 
                      WHERE  CONN_BRN_NO IS NOT NULL 
                    EXCEPTION WHEN NO_DATA_FOUND THEN
                        RAISE_APPLICATION_ERROR (-20003,'Error When Select CONN_BRN_NO Online , '||SQLERRM);
                EXCEPTION WHEN OTHERS THEN
                   RAISE_APPLICATION_ERROR (-20005,'Error When Select Parameter Of System , '||SQLERRM);
                END;
                FUNCTION GET_DOC_TYP_SERIAL (P_DOC_TYP In NUMBER) RETURN NUMBER IS
                BEGIN
                      EXECUTE IMMEDIATE ('SELECT '||V_FLD_NM||' FROM IAS_PARA_INV ') INTO V_DOC_SERIAL;
                EXCEPTION WHEN OTHERS THEN
                 FUNCTION GET_DOC_NO  (  P_DOC_TYP      IN NUMBER,
                BEGIN
                          RAISE_APPLICATION_ERROR (-20001,'Error When Select Serial Typ For Document , '||SQLERRM); 
                 FUNCTION GET_DOC_SER(   P_DOC_TYP      IN NUMBER,
                BEGIN
                          RAISE_APPLICATION_ERROR (-20004,'Error When Select Serial Typ For Document , '||SQLERRM); 
                 --  BEGIN
                 PROCEDURE INSRT_RQ_TRNSFR_MST ( P_DOC_TYP           IN NUMBER,   ---##--  REQUEST=31    ---##--  RECIEVE =8  
                 BEGIN
                                            BEGIN
                                                   SELECT W_CODE INTO G_F_W_CODE FROM WAREHOUSE_DETAILS WHERE DECODE(CONN_BRN_NO,NULL,G_BRN_NO,CONN_BRN_NO)=G_BRN_NO 
                                            EXCEPTION WHEN OTHERS THEN
                                            END;      
                   BEGIN
                    SELECT NVL(TR_CS_TYPE,0), NVL(TR_PJ_TYPE,0),NVL(TR_ACTV_TYPE,0) INTO G_TR_CS_TYPE, G_TR_PJ_TYPE,G_TR_ACTV_TYPE FROM IAS_PARA_INV;
                   EXCEPTION WHEN OTHERS THEN 
                   END; 
                 Insert Into IAS_OUT_REQUEST_MST  
                    EXCEPTION WHEN OTHERS THEN
                              RAISE_APPLICATION_ERROR (-20002,'Error When Insert Into Transfer Request Master , '||SQLERRM);
                 BEGIN
                   BEGIN
                     SELECT NVL(P_SIZE,1) INTO V_P_SIZE FROM IAS_ITM_DTL WHERE I_CODE = P_I_CODE AND ITM_UNT = P_ITM_UNT AND ROWNUM<=1;
                     EXCEPTION WHEN OTHERS THEN
                   END;
                       SELECT BRN_USR INTO G_BRN_USR FROM IAS_OUT_REQUEST_MST  WHERE OUT_REQ_SER=G_DOC_SER;
                    INSERT INTO IAS_OUT_REQUEST_DTL (
                   EXCEPTION WHEN OTHERS THEN
                              RAISE_APPLICATION_ERROR (-20003,'Error When Insert Into Transfer Request Detail , '||SQLERRM);   
                              PROCEDURE Insrt_Apprvd_Lvl_Prc IS
                              BEGIN
                                --## Insert Into S_Apprvd_Mov     
                                 Begin  
                                    Exception 
                              END;
                 PROCEDURE INSRT_RSRVD_TBL IS
                 BEGIN
                           BEGIN    
                             SELECT NVL(MAX(DOC_NO),0)+1 INTO V_RSRV_NO FROM IAS_RESERVE_MST WHERE DOC_TYPE_REF = 31 ;
                            EXCEPTION WHEN OTHERS THEN
                            END;    
                            BEGIN
                               INSERT INTO IAS_RESERVE_MST ( DOC_TYPE, 
                                                      SELECT 1, 
                                                        FROM  IAS_OUT_REQUEST_MST
                                                       WHERE OUT_REQ_NO  = G_DOC_NO
                             EXCEPTION WHEN OTHERS THEN
                              RAISE_APPLICATION_ERROR (-20004,'Error When Insert Into Ias_Reserve_Mst , '||SQLERRM);
                             END;
                            BEGIN
                               INSERT INTO IAS_RESERVE_DTL( DOC_TYPE     ,
                                                     SELECT 1                          , 
                                                       FROM IAS_OUT_REQUEST_MST M,IAS_OUT_REQUEST_DTL D
                                                      WHERE M.OUT_REQ_SER=D.OUT_REQ_SER
                              EXCEPTION WHEN OTHERS THEN
                                RAISE_APPLICATION_ERROR (-20005,'Error When Insert Into Ias_Reserve_Dtl , '||SQLERRM);
                             END;   
               Function Get_Cst_Trns_bal( P_Bal_Typ       In number    default 1 ,   --- 1= Gl_Balance   ---##---  Unposted_trasns=2  ---##---- 3=Due_Cheque ---##-- all
             Begin
                 Begin
                 Select NVL (CSTMR_BLNC_TYPE, 0) Into V_CSTMR_BLNC_TYPE From DTS_PARA;
                 Exception When Others Then
                 End;
                           'Select Sum(Decode(Nvl('||P_Due_Amt_Typ||',0),1,Nvl(Amt,0)
                             From  ias_post_dtl                             
                            Where Ac_Dtl_Typ=3
                           'Select Sum(Decode(Nvl('||P_Due_Amt_Typ||',0),1,Nvl(Net_Amt,0)
                             From  Dts_V_Cst_Unpsted_Sales
                            Where Decode(Nvl('||P_Due_Amt_Typ||',0),1,Ys_Gen_Pkg.Get_Local_Cur, A_Cy) =Decode(Nvl('||P_Due_Amt_Typ||',0),1,Ys_Gen_Pkg.Get_Local_Cur,'''||P_Acy||''')'||V_WHR;                            
                            --  And Decode(Nvl('||V_Rep_Code||',''0''),''0'',''0'','''||P_Rep_Code||''') =  Decode(Nvl('||V_Rep_Code||',''0''),''0'',''0'','''||P_Rep_Code||''');         --          insert into t_tst values(v_sql); commit;
                      --  If P_loc_amt  = 0  Then --(1)v  by currency      --And a_code in (select a_code from ias_acc_tree where ac_tree='''||P_GRP_V1||''')   
                          'Select Sum(Decode(Nvl('||P_Due_Amt_Typ||',0),1,Nvl(Ac_Amt,0)
                             From Voucher_Detail
                            Where Decode(Nvl('||P_Due_Amt_Typ||',0),1,Ys_Gen_Pkg.Get_Local_Cur, A_Cy) =Decode(Nvl('||P_Due_Amt_Typ||',0),1,Ys_Gen_Pkg.Get_Local_Cur,'''||P_Acy||''')
                              And A_Code Not In (Select A_Code From Cash_In_Hand) 
                              And V_Ser In (Select V_Ser From Vouchers Where Cheq_Type<>0)
                         --     And Decode(Nvl('||V_Rep_Code||',''0''),''0'',''0'','''||P_Rep_Code||''') =  Decode(Nvl('||V_Rep_Code||',''0''),''0'',''0'','''||P_Rep_Code||''');         --          Insert Into T_Tst Values(V_
            Exception When Others Then
            PROCEDURE EXECUTE_PLN(P_DOC_TYPE   NUMBER,P_DOC_SER    NUMBER,P_C_CODE  VARCHAR2,P_REP_CODE  VARCHAR2,P_DOC_DATE  DATE) IS
                      ---P_DOC_TYPE   FROM  DTS_V_PDA_TYPS_PRIV  View
                    BEGIN
                        V_WHR:=' WHERE V_SER='||P_DOC_SER;
                        V_WHR:=' WHERE QUOT_SER='||P_DOC_SER;
                        V_WHR:=' WHERE ORDER_SER='||P_DOC_SER;
                        V_WHR:='  WHERE BILL_SER='||P_DOC_SER;
                        V_WHR:=' WHERE RT_BILL_SER='||P_DOC_SER;
                        V_WHR:=' WHERE DOC_SER='||P_DOC_SER;
                    BEGIN
                                                    V_SQLSTR:=' SELECT COUNT(1) FROM  '||V_TBL_NM||V_WHR; 
                                        EXCEPTION 
                                            RAISE_APPLICATION_ERROR (-20001,'Error When Retrive Data From ,'||V_TBL_NM||SQLERRM);   
                                            RAISE_APPLICATION_ERROR (-20002,'Error When Retrive Data From ,'||V_TBL_NM||SQLERRM);   
                                        END;      
                               BEGIN 
TE'UPDATE DTS_PLAN_SMAN_DTL SET '||V_COL_NM_UPD||'  = 1 
                                                                WHERE NVL('||V_COL_NM_UPD||',0) <> 1 AND  C_CODE='''||P_C_CODE||'''
                                                                   AND DOC_SER IN(SELECT  DOC_SER  FROM DTS_PLAN_SMAN_MST 
                                                                         WHERE  
                               EXCEPTION WHEN No_Data_Found THEN
                                      RAISE_APPLICATION_ERROR (-20003,'Error When Update Dts_Plan_Sman_Dtl ,'||SQLERRM);
                                      RAISE_APPLICATION_ERROR (-20004,'Error When Update Dts_Plan_Sman_Dtl ,'||SQLERRM);
                               END;
                    EXCEPTION 
        Function Get_Cst_Lmt(        P_C_Code        In Varchar2  ,                                                      
         Begin
               BEGIN
                 select nvL(MAX_AMT,0) INTO V_MAX_AMT from IAS_AC_CC_LMT
                         where AC_DTL_TYP=3
                        EXCEPTION WHEN OTHERS THEN 
                  END;                                             
         END;  
         Function Get_Vchr_Doc_No( P_Brn_No             In Number,
                            Begin
                                     Select Nvl(Max(Voucher_No), 0) + 1
                                       From Vouchers
                                      Where Voucher_Type = 1
                                            And Cash_No = P_Cash_Non (Select Cash_No From Cash_In_HAnd Where nvl(Cash_Sr,0)=v_sr)
                                     Select Nvl(Max(Voucher_No), 0) + 1
                                       From Vouchers
                                      Where Voucher_Type = 1
                                            And Cash_No = P_Cash_Non (Select Cash_No From Cash_In_HAnd Where nvl(Cash_Sr,0)=v_sr)
                                     Begin
                                        Select Nvl(Cash_Sr, 0)
                                          From Cash_In_Hand
                                         Where Cash_In_Hand.Cash_No = P_Cash_No;
                                     Exception
                                     End;
                                     Select Nvl(Max(Voucher_No), 0) + 1
                                       From Vouchers
                                      Where Voucher_Type = 1
                                            And Cash_No In (Select Cash_No
                                                              From Cash_In_Hand
                                                             Where Nvl(Cash_Sr, 0) = V_Sr);
                                     Select Nvl(Max(Voucher_No), 0) + 1
                                       From Vouchers
                                      Where Voucher_Type = 1
                                            And Cash_No = P_Cash_Non (Select Bank_No From Cash_At_Bank Where nvl(Bank_Sr,0)=v_sr)
                                     Select Nvl(Max(Voucher_No), 0) + 1
                                       From Vouchers
                                      Where Voucher_Type = 1
elect Bank_No From Cash_At_Bank Where nvl(Bank_Sr,0)=v_sr)
                                     Begin
                                        Select Nvl(Bank_Sr, 0)
                                          From Cash_At_Bank
                                         Where Cash_At_Bank.Bank_No = P_Cash_No;
                                     Exception
                                     End;
                               Select Nvl(Max(Voucher_No), 0) + 1
                                       From Vouchers
                                      Where Voucher_Type = 1
                                            And Cash_No In (Select Bank_No
                                                              From Cash_At_Bank
                                                             Where Nvl(Bank_Sr, 0) = V_Sr);
                            Exception
 CREATE OR REPLACE PACKAGE DTS_DSHBORD_PKG IS
                            FUNCTION   DTS_Get_Rep_Net_Sls  ( P_Prd_Typ       In varchar2    default null ,   --- Period First Letter  ===> Year ='Y'  Or Month = 'M'  Or Week='W' Or Day='D'
                            FUNCTION   DTS_GET_REP_RCPT_VCHR ( P_Prd_Typ       In varchar2    default null ,   --- Period First Letter  ===>  Year ='Y'  Or Month = 'M'  Or Week='W' Or Day='D'
                            FUNCTION   DTS_GET_REP_VSTS_Statstcs (  P_Prd_Typ       In varchar2    default null ,   --- Period First Letter  ===>  Year ='Y'  Or Month = 'M'  Or Week='W' Or Day='D'
                            FUNCTION   DTS_GET_REP_SLCT_PRFRMNS   ( P_Prd_Typ       In varchar2    default null ,   --##---  Period First Letter  ===>  Year ='Y'  Or Month = 'M'  Or Week='W' Or Day='D'
 CREATE OR REPLACE PACKAGE BODY DTS_DSHBORD_PKG IS
                            FUNCTION DTS_Get_Rep_Net_Sls  (   P_Prd_Typ       In varchar2    default null ,   --- Period First Letter  ===> Year ='Y'  Or Month = 'M'  Or Week='W' Or 
                            BEGIN
                                          V_QRY_DYN:=    'Select DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),
                                                            From  DTS_V_GET_REP_NET_SLS 
                                                            WHERE  DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),''Q'',''0''||To_CHAR(DOC_DATE,''Q/RRRR''),''M'',To_CHAR(DOC_DATE,''MM''),''W'',To_CHAR(DOC_DATE,''W/MM''),''D'',DECODE(LENGTH('''||V_PRD_VAL||'''),2,To_CHAR(DOC_DATE,''DD''),3,To_CHAR(DOC_DATE,''DDD''),To_CHAR(TO_DATE(DOC_DATE,''DD/MM/RRRR''),''DD/MM/RRRR'')),To_CHAR(TO_DATE(DOC_DATE,''DD/MM/RRRR''),''DD/MM/RRRR''))= 
                                                            group by DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),''Q'',''0''||To_CHAR(DOC_DATE,''Q/RRRR''),''M'',To_CHAR(DOC_DATE,''MM''),''W'',Substr(To_CHAR(DOC_DATE,''W/MM''),1,1),''D'',To_CHAR(DOC_DATE,''DD''),To_CHAR(DOC_DATE,''DD/MM/RRRR'')),
                                             BEGIN
                                             EXCEPTION WHEN OTHERS THEN
                                                   RAISE_APPLICATION_ERROR (-20004,'Error When Fitch V_RTRN_REF In DTS_Get_Rep_Net_Sls Function , '||SQLERRM);
                                             End;  
                                EXCEPTION WHEN OTHERS THEN
                                       RAISE_APPLICATION_ERROR (-20005,'Error When Retrive Values From Calling DTS_Get_Rep_Net_Sls Function , '||SQLERRM);
                          FUNCTION DTS_GET_REP_RCPT_VCHR  (   P_Prd_Typ       In varchar2    default null,   --- Period First Letter  ===> Year ='Y'  Or Month = 'M'  Or Week='W' Or Day='D' 
                            BEGIN
                              V_QRY:='Select DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),
                                        From  DTS_V_GET_RCPT_VCHRS
                                        WHERE  DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),''Q'',''0''||To_CHAR(DOC_DATE,''Q/RRRR''),''M'',To_CHAR(DOC_DATE,''MM''),''W'',To_CHAR(DOC_DATE,''W/MM''),''D'',DECODE(LENGTH('''||V_PRD_VAL||'''),2,T
                                        group by DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),''Q'',''0''||To_CHAR(DOC_DATE,''Q/RRRR''),''M'',To_CHAR(DOC_DATE,''MM''),''W'',Substr(To_CHAR(DOC_DATE,''W/MM''),1,1),''D'',To_CHAR(DOC_DATE,''DD''),To_CHAR(DOC_DATE,''DD/MM/RRRR'')),
                                             BEGIN
                                             EXCEPTION WHEN OTHERS THEN
                                                   RAISE_APPLICATION_ERROR (-20004,'Error When Fitch V_RTRN_REF In DTS_Get_Rep_Rcpt_Vchr Function , '||SQLERRM);
                                             End;  
                                 EXCEPTION WHEN OTHERS THEN
                                       RAISE_APPLICATION_ERROR (-20005,'Error When Retrive Values From Calling DTS_Get_Rep_Rcpt_Vchr Function , '||SQLERRM);
                            FUNCTION   DTS_GET_REP_VSTS_Statstcs ( P_Prd_Typ        In varchar2    default null ,   --- Period First Letter  ===> Year ='Y'  Or Month = 'M'  Or Week='W' Or Day='D' 
                            BEGIN
                             V_QRY:=   'Select DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(PLN_DATE,''RRRR''),''H'',(Decode(TO_CHAR(PLN_DATE,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(PLN_DATE,''RRRR'')),
                                        From  DTS_V_GET_VSTS_INFO WHERE  DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(PLN_DATE,''RRRR''),''H'',(Decode(TO_CHAR(PLN_DATE,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(PLN_DATE,''RRRR'')),''Q'',''0''||To_CHAR(PLN_DATE,''Q/RRRR''),''M'',To_CHAR(PLN_DATE,''MM''),
                                        group by DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(PLN_DATE,''RRRR''),''H'',(Decode(TO_CHAR(PLN_DATE,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(PLN_DATE,''RRRR'')),
                                             BEGIN
                                             EXCEPTION WHEN OTHERS THEN
                                             End;  
                                EXCEPTION WHEN OTHERS THEN
                                       RAISE_APPLICATION_ERROR (-20005,'Error When Retrive Values From Calling DTS_GET_REP_VSTS_Statstcs Function , '||SQLERRM);
                          FUNCTION   DTS_GET_REP_SLCT_PRFRMNS   (   P_Prd_Typ       In varchar2    default null ,   --##---  Period First Letter  ===> Year ='Y'  Or Month = 'M'  Or Week='W' Or Day='D' 
                            BEGIN
                                   V_QRY1:= 'SELECT * From( Select q.prd,q.mnth,q.yr,q.rep_code,q.c_code,q.a_cy,decode('''||p_slct_prfrmns|
                                                   FROM (Select DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),''Q'',''0''||To_CHAR(DOC_DATE,''Q/RRRR''),''M'',To_CHAR(DOC_DATE,''MM''),''W'',Substr(To_CHAR(DOC_DATE,''W/MM''),1,1),''D'',To_CHAR(DOC_DATE,''DD''),
                                                    From  DTS_V_GET_REP_NET_SLS WHERE 
                                                    group by DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),''Q'',''0''||To_CHAR(DOC_DATE,''Q/RRRR''),''M'',To_CHAR(DOC_DATE,''MM''),''W'',Substr(To_CHAR(DOC_DATE,''W/MM''),1,1),''D'',To_CHAR(DOC_DATE,''DD''),To_CHAR(DOC_DATE,''DD/MM/RRRR'')),
                                                     DECODE(upper('''||V_Prd_Typ||'''),''Y'',null,''H'',null,''Q'',null,''M'',To_CHAR(DOC_DATE,''MM''),''W'',To_CHAR(DOC_DATE,''MM''),''D'',To_CHAR(DOC_DATE,''MM''),To_CHAR(DOC_DATE,''MM'')),DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',TO_CHAR(Doc_Date,''RRRR''),''Q'',To_CHAR(DOC_DATE,''RRRR''),''M'',To_CHAR(DOC_DATE,''RRRR''),''W'',To_CHAR(DOC_DATE,''RRRR''),''D'',To_CHAR(DOC_DATE,''RRRR''),To_CHAR(DOC_DATE,''RRRR'')),DECODE('''||P_GRP2||''',1,REP_CODE,3,REP_CODE,null) ,DECODE('''||P_GRP2||''',2,C_CODE,3,C_CODE,null) ,A_CY ) q  ORDER BY 7  DESC) where Rownum<='''||P_Slct_Cnt||''' ';
                                    V_QRY:='SELECT * From( Select q.prd,q.mnth,q.yr,q.rep_code,q.c_code,q.a_cy,decode('''||p_slct_prfrmns||''',4,q.Tot_Due_amt,5,q.cash_amt,6,(Nvl(q.cheq_amt,0)+Nvl(q.UnDue_Cheq_amt,0)),7,q.cheq_amt,8,q.UnDue_Cheq_amt) amt ,decode('''||p_slct_prfrmns||''',4,q.Tot_Due_amt_l,5,q.cash_amt_l,6,(Nvl(q.cheq_amt_l,0)+Nvl(q.UnDue_Cheq_amt_l,0)),7,q.cheq_amt_l,8,q.UnDue_Cheq_amt_l) amt_l  
                                           FROM (Select DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),
                                                From  DTS_V_GET_RCPT_VCHRS
                                                WHERE  DECODE(upper('''||V_Prd_Typ||'''),''Y'',
                                                group by DECODE(upper('''||V_Prd_Typ||'''),''Y'',To_CHAR(DOC_DATE,''RRRR''),''H'',(Decode(TO_CHAR(Doc_Date,''Q''),1,''01'',2,''01'',3,''02'',4,''02'' )||''/''||TO_CHAR(Doc_Date,''RRRR'')),''Q'',''0''||To_CHAR(DOC_DATE,''Q/RRRR''),''M'',To_CHAR(DOC_DATE,''MM''),''W'',Substr(To_CHAR(DOC_DATE,''W/MM''),1,1),''D'',To_CHAR(DOC_DATE,''DD''),To_CHAR(DOC_DATE,''DD/MM/RRRR'')),
_CODE,3,C_CODE,null) ,A_CY ) q  ORDER BY 7  DESC) where Rownum<='''||P_Slct_Cnt||'''' ;
                                             BEGIN
                                             EXCEPTION WHEN OTHERS THEN
                                                   RAISE_APPLICATION_ERROR (-20004,'Error When Retrive Values From Calling DTS_Get_Rep_Net_Sls Function , '||SQLERRM);
                                                    RAISE_APPLICATION_ERROR (-20005,'Error When Fitch V_RTRN_REF In DTS_Get_Rep_Rcpt_Vchr Function , '||SQLERRM);
                                             End;  
                                EXCEPTION WHEN OTHERS THEN
                                       RAISE_APPLICATION_ERROR (-20006,'Error When Retrive Values From Calling DTS_GET_REP_SLCT_PRFRMNS Function , '||SQLERRM);
CREATE OR REPLACE PACKAGE DTS_CRT_VW_PKG_old IS
                FUNCTION DYN_CRT_SRL_VW(P_TRNS_TYP  IN NUMBER ,P_DTL_TYP  IN NUMBER DEFAULT NULL)  RETURN TP_DYN_TBL PIPELINED ;
                FUNCTION DYN_CRT_DSCNT_VW   RETURN TP_DSCNT_TBL PIPELINED ;
                FUNCTION DYN_CRT_FQTY_VW   RETURN TP_FQTY_TBL  PIPELINED ;
                FUNCTION SHW_SMAN_DATA ( P_REP_CODE     IN VARCHAR2  ) RETURN TP_SMAN_TBL PIPELINED;
 CREATE OR REPLACE PACKAGE BODY DTS_CRT_VW_PKG_old IS
                FUNCTION DYN_CRT_SRL_VW(P_TRNS_TYP IN NUMBER ,P_DTL_TYP IN NUMBER DEFAULT NULL)  RETURN TP_DYN_TBL PIPELINED   IS 
                BEGIN   
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','AR_QUOT_SERIAL',' WHERE  1=1 ');
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','AR_SORDER_SERIAL',' WHERE  1=1 ');
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','INVOICING_SERIALS',' WHERE  1=1 ');   
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','INVOICING_SERIALS_SR',' WHERE  1=1 ');   
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','INVOICING_SERIALS_SR',' WHERE  1=1 ');   
                                                 AND S.CASH_NO  IN (SELECT C.'||G_CSHBNK||'_NO FROM '||G_TBL_NM_DMY||'  WHERE NVL (C.'||G_CSHBNK||'_SR, 0) =
                                                   (SELECT NVL(C.'||G_CSHBNK||'_SR,0) FROM  '||G_TBL_NM_DMY||'  WHERE C.'||G_CSHBNK||'_NO = R.'||G_CSHBNK||'_NO))'  ;
                                                 AND S.'||G_CSHBNK||'_NO NOT IN (SELECT DISTINCT CASH_NO FROM VOUCHERS V
                                                                                 WHERE VOUCHER_TYPE=1 AND VOUCHER_PAY_TYPE='||G_BILTYP_FLD||' AND V.BRN_NO = R.BRN_NO)
                                                 AND S.'||G_CSHBNK||'_NO  IN (SELECT C.'||G_CSHBNK||'_NO FROM '||G_TBL_NM_DMY||'  WHERE NVL (C.'||G_CSHBNK||'_SR, 0) =
                                                                             (SELECT NVL(C.'||G_CSHBNK||'_SR,0) FROM  '||G_TBL_NM_DMY ||'  WHERE C.'||G_CSHBNK||'_NO = R.'||G_CSHBNK||'_NO))';
                           G_INR_WHR_QRY1   :='  AND S.'||G_CONN||'BRN_NO=R.BRN_NO  AND S.CC_CODE IN (SELECT I.CC_CODE  FROM COST_CENTERS I WHERE  NVL(I.C_SR,0)= 
                                                (SELECT NVL(II.C_SR,0) FROM COST_CENTERS II WHERE II.CC_CODE=R.CC_CODE)) AND R.CC_CODE IS NOT NULL ';
                           G_INR_WHR_QRY3   := ' AND R.CC_CODE IN (SELECT I.CC_CODE  FROM COST_CENTERS I WHERE  NVL(I.C_SR,0)= 
                                                 (SELECT NVL(II.C_SR,0) FROM COST_CENTERS II WHERE II.CC_CODE=R.CC_CODE)) AND R.CC_CODE IS NOT NULL ';
                           G_INR_WHR_QRY1   :='  AND S.'||G_CONN||'BRN_NO=R.BRN_NO  AND S.W_CODE IN (SELECT I.W_CODE  FROM WAREHOUSE_DETAILS I WHERE  NVL(I.W_SER,0)= 
                                               (SELECT NVL(II.W_SER,0) FROM WAREHOUSE_DETAILS II WHERE II.W_CODE=R.W_CODE)) AND R.W_CODE IS NOT NULL ';
                           G_INR_WHR_QRY3   :=' AND R.W_CODE IN (SELECT I.W_CODE  FROM WAREHOUSE_DETAILS I WHERE  NVL(I.W_SER,0)= 
                                               (SELECT NVL(II.W_SER,0) FROM WAREHOUSE_DETAILS II WHERE II.W_CODE=R.W_CODE)) AND R.W_CODE IS NOT NULL ';
                      G_DYN_QRY:=' Select 0 Doc_Typ
                                  From ( 
                  Select              R.Rep_Code Rep_Code
                                                          ,(Select Nvl (Max (To_Number (V.Voucher_No)), 0)+1 Bno from Vouchers V
                                                                        where  V.Voucher_Type = 1
                                                                        AND 1=  (CASE WHEN R.RCPT_SRL_TYP=3 THEN (SELECT 1 from Vouchers
                                                                                                                                  WHERE v_ser =V.v_ser 
                                                                                     WHEN R.RCPT_SRL_TYP=1 THEN (SELECT 1 FROM Vouchers
                                                                                                                      WHERE V_SER=V.V_SER
                                                                                                                      And Cash_No In (Select Bank_No
                                                                                                                                          From Cash_At_Bank
                 Where Nvl (Bank_Sr, 0)=Nvl (R.Bank_Sr, 0) )
                                                    From Dts_V_Sman_Bank R                        
                                                    WHERE  R.Brn_No Is Not Null) '; 
                               ' SELECT '||P_TRNS_TYP||' DOC_TYP,'||''''||G_TRNS_NM||''''||' DOC_TYP_NM,NVL (MAX (Q.BNO), 0) + 1 DOC_NO,
                                  FROM (SELECT  NVL(MAX (TO_NUMBER ('||G_PK_FLD||')),0) BNO,'||G_REP_FLD||' REP_CODE,R.BRN_NO  BRN_NO,'||G_BILTYP_FLD||' BILL_DOC_TYPE,'||G_TYP_FLD||' TYP_NO
                                         FROM DTS_V_SMAN_INFO R'||G_TBL_NM_QRY1||' WHERE NVL(SMAN_TYP,0)=1  AND R.REP_CODE IS NOT NULL '||G_INR_WHR_QRY1||' 
                                         GROUP BY R.BRN_NO,'||G_REP_FLD||','||G_BILTYP_FLD||','||G_TYP_FLD||' '||G_INR_GRP_BY1||'
                                        SELECT   NVL(MAX (TO_NUMBER ('||G_PK_FLD2||')),0) BNO,'||G_REP_FLD||' REP_CODE,R.BRN_NO BRN_NO,'||G_BILTYP_FLD||' BILL_DOC_TYPE,'||G_TYP_FLD2||' TYP_NO
                                         FROM DTS_V_SMAN_INFO R '||G_TBL_NM_QRY2||'
                                        WHERE NVL(SMAN_TYP,0)=1 AND R.REP_CODE IS NOT NULL ' ||G_INR_WHR_QRY2||'
                                        GROUP BY R.BRN_NO,'||G_REP_FLD||','||G_BILTYP_FLD||','||G_TYP_FLD2||' '||G_INR_GRP_BY2||'
                                        SELECT  0 BNO, '||G_REP_FLD||' REP_CODE,R.BRN_NO BRN_NO,'||G_BILTYP_FLD3||' BILL_DOC_TYPE,'||G_TYP_FLD3||' TYP_NO
                                         FROM  DTS_V_SMAN_INFO R  '||G_TBL_NM_QRY3||'
                                        WHERE NVL(SMAN_TYP,0)=1  AND R.REP_CODE IS NOT NULL ' ||G_INR_WHR_QRY3||' 
                                        GROUP BY R.BRN_NO,'||G_REP_FLD||','||G_BILTYP_FLD3||','||G_TYP_FLD3||' '||G_INR_GRP_BY3||'
                                         ) Q   GROUP BY Q.REP_CODE, Q.BRN_NO ,Q.BILL_DOC_TYPE,Q.TYP_NO '; 
                                         BEGIN
                                         EXCEPTION
                                         END;
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(0,1))  
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(0,2)) 
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(1))  
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(2))  
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(3))  
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(4))
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(9)) 
                  EXCEPTION
                FUNCTION DYN_CRT_DSCNT_VW  RETURN TP_DSCNT_TBL PIPELINED 
                     V_USE_DTS_INV   NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','USE_DTS_WITHOUT_INV',' WHERE  1=1 '),0);
                     V_DISC_W        NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_DISC_WCODE',' WHERE  1=1 '),0);
                     V_DISC_TYP      NUMBER(2):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_DISC_TYPE',' WHERE  1=1 '),0);
                     V_SHW_DISC      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SHOW_DISC_PER_ITEMS_AR',' WHERE  1=1 '),0);
                     V_DISC_PRD      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_DISC_PERIODIC',' WHERE  1=1 '),0);
                BEGIN 
                                            'SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP|| ' SALES_DISC_TYPE ,'||V_DISC_PRD||' SALES_DISC_PERIODIC,
                                              FROM SALES_DISC SD,DTS_V_GET_ITM_DTL I,DTS_V_SMAN_INFO S ,PRIVILEGE_FIXED PR 
                                           ' SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP||' SALES_DISC_TYPE,'||V_DISC_PRD||' SALES_DISC_PERIODIC,SD.I_CODE AS "I_CODE", SD.ITM_UNT AS "ITM_UNT",
                                              FROM SALES_DISC SD,DTS_V_GET_ITM_DTL I,DTS_V_GET_REP_STORAGE_BR ST,DTS_V_SMAN_INFO S,PRIVILEGE_FIXED PR,DTS_V_GET_ITM_PRICE L
                                             WHERE  S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.REP_CODE = L.REP_CODE AND I.REP_CODE = L.REP_CODE
                                           ' SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP||' SALES_DISC_TYPE,'||V_DISC_PRD||' SALES_DISC_PERIODIC,''0'' AS "I_CODE",''0'' AS "ITM_UNT",
                                              FROM SALES_DISC SD,DTS_V_GET_CUSTOMER SM,DTS_V_SMAN_INFO S, PRIVILEGE_FIXED PR
                                             WHERE     S.SMAN_TYP=1 
                                            ' SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP||' SALES_DISC_TYPE,'||V_DISC_PRD||' SALES_DISC_PERIODIC,
                                              FROM SALES_DISC SD,DTS_V_GET_CUSTOMER SM, DTS_V_GET_ITM_DTL I,
                                             WHERE     S.SMAN_TYP = 1 
                                            ' SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP||' SALES_DISC_TYPE,'||V_DISC_PRD||' SALES_DISC_PERIODIC,SD.I_CODE AS "I_CODE",SD.ITM_UNT AS "ITM_UNT",
                                              FROM SALES_DISC SD,DTS_V_GET_CUSTOMER SM,DTS
                                             WHERE     S.SMAN_TYP = 1 
                                            ' SELECT S.U_ID, S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP|| ' SALES_DISC_TYPE ,'||V_DISC_PRD||' SALES_DISC_PERIODIC,
                                              FROM DTS_V_SMAN_INFO S, DTS_V_GET_ITM_DTL I, PRIVILEGE_FIXED PR  WHERE  NVL (I.ALLOW_DISC, 0) <> 0 AND S.SMAN_TYP = 1 
                                            ' SELECT S.U_ID, S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP|| ' SALES_DISC_TYPE ,'||V_DISC_PRD||' SALES_DISC_PERIODIC,
                                              FROM DTS_V_SMAN_INFO S, DTS_V_GET_ITM_DTL I, PRIVILEGE_FIXED PR  WHERE  1=2 AND NVL (I.ALLOW_DISC, 0) <> 0 AND S.SMAN_TYP = 1 
                                         BEGIN
                                         EXCEPTION
                                         END;
                                      AS SELECT * FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_DSCNT_VW) ; 
                    EXCEPTION
                FUNCTION    DYN_CRT_FQTY_VW  RETURN TP_FQTY_TBL PIPELINED 
                     V_USE_DTS_INV   NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','USE_DTS_WITHOUT_INV',' WHERE  1=1 '),0);
                     V_FQTY_W        NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_FREE_QTY_WCODE',' WHERE  1=1 '),0);
                     V_FQTY_TYP      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_FREE_QTY_TYPE',' WHERE  1=1 '),0);
_QTY',' WHERE  1=1 '),0);
                     V_FQTY_PRD      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_FREE_QTY_PERIODIC',' WHERE  1=1 '),0);
                BEGIN 
                           'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||', 0) SALES_FREE_QTY_WCODE ,NVL('||V_FQTY_TYP||', 0) SALES_FREE_QTY_TYPE,
                              FROM SALES_FREE_QTY SF, DTS_V_GET_ITM_DTL I, DTS_V_SMAN_INFO S, PRIVILEGE_FIXED PR
                             WHERE S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.U_ID = NVL (PR.U_ID, 0)
                           'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||', 0) SALES_FREE_QTY_WCODE ,NVL('||V_FQTY_TYP||', 0) SALES_FREE_QTY_TYPE,
                              FROM SALES_FREE_QTY SF, DTS_V_GET_ITM_DTL I, DTS_V_GET_REP_STORAGE_BR ST, DTS_V_SMAN_INFO S, PRIVILEGE_FIXED PR
                             WHERE S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.U_ID = NVL (PR.U_ID, 0)
                               AND DECODE(YS_GEN_PKG.GET_FLD_VALUE(''DTS_PARA'',''USE_DTS_WITHOUT_INV'','' WHERE  1=1 ''),0,I.I_CODE||S.REP_CODE||S.W_CODE,''0'')=
                                   DECODE(YS_GEN_PKG.GET_FLD_VALUE(''DTS_PARA'',''USE_DTS_WITHOUT_INV'','' WHERE  1=1 ''),0,ST.I_CODE||ST.REP_CODE || ST.W_CODE,''0'')
                           'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL ('||V_FQTY_TYP||',0) SALES_FREE_QTY_TYPE,NVL ('||V_FQTY_PRD||',0) SALES_FREE_QTY_PERIODIC, ''0'' AS "I_CODE", ''0'' AS "ITM_UNT",
                              FROM SALES_FREE_QTY SF,DTS_V_SMAN_CST SM,DTS_V_SMAN_INFO S,PRIVILEGE_FIXED PR
                             WHERE S.SMAN_TYP = 1 AND S.U_ID = NVL (PR.U_ID, 0) AND S.W_CODE IS NOT NULL AND S.REP_CODE = SM.REP_CODE
                          ' SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL ('||V_FQTY_TYP||',0) SALES_FREE_QTY_TYPE,NVL ('||V_FQTY_PRD||', 0) SALES_FREE_QTY_PERIODIC, 
                              FROM SALES_FREE_QTY SF,DTS_V_SMAN_CST SM,DTS_V_GET_ITM_DTL I, DTS_V_SMAN_INFO S, PRIVILEGE_FIXED PR
                             WHERE S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND SF.G_CODE || SF.I_CODE || SF.ITM_UNT = I.G_CODE || I.I_CODE || I.ITM_UNT AND S.U_ID = NVL (PR.U_ID, 0)
                               'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL('||V_FQTY_TYP||', 0) SALES_FREE_QTY_TYPE,NVL('||V_FQTY_PRD||', 0) SALES_FREE_QTY_PERIODIC,
                                  FROM SALES_FREE_QTY SF,DTS_V_SMAN_CST SM,DTS_V_GET_ITM_DTL I,DTS_V_SMAN_INFO S,PRIVILEGE_FIXED PR
                                 WHERE S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.U_ID = NVL (PR.U_ID, 0)AND S.REP_CODE = SM.REP_CODE AND SF.I_CODE || SF.ITM_UNT = I.I_CODE || I.ITM_UNT
                                'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL('||V_FQTY_TYP||',0) SALES_FREE_QTY_TYPE,NVL('||V_FQTY_PRD||',0) SALES_FREE_QTY_PERIODIC,
                                  FROM DTS_V_SMAN_INFO S, DTS_V_GET_ITM_DTL I,PRIVILEGE_FIXED PR
                                 WHERE NVL(I.ALLOW_FREE_QTY,0) <> 0 AND S.SMAN_TYP = 1 AND S.REP_CODE IS NOT NULL AND S.REP_CODE = I.REP_CODE 
                                'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL('||V_FQTY_TYP||',0) SALES_FREE_QTY_TYPE,NVL('||V_FQTY_PRD||',0) SALES_FREE_QTY_PERIODIC,
                                  FROM DTS_V_SMAN_INFO S, DTS_V_GET_ITM_DTL I,PRIVILEGE_FIXED PR
                                 WHERE 1=2  AND  NVL(I.ALLOW_FREE_QTY,0) <> 0 AND S.SMAN_TYP = 1 AND S.REP_CODE IS NOT NULL AND S.REP_CODE = I.REP_CODE 
                                         BEGIN
                                         EXCEPTION
                                         END;
                                      AS SELECT * FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_FQTY_VW) ; 
                EXCEPTION WHEN OTHERS THEN
                FUNCTION SHW_SMAN_DATA ( P_REP_CODE     IN VARCHAR2  ) RETURN TP_SMAN_TBL PIPELINED Is 
                   BEGIN              
                               OPEN V_SMAN_RFC FOR( 'SELECT          REPRS_CODE                                            
                                                                    FROM SALES_MAN
                                                         BEGIN
                                                         Exception  WHEN NO_DATA_FOUND THEN
                                                          End; 
CREATE OR REPLACE PACKAGE DTS_CRT_VW_PKG IS
                FUNCTION DYN_CRT_SRL_VW(P_TRNS_TYP  IN NUMBER ,P_DTL_TYP  IN NUMBER DEFAULT NULL)  RETURN TP_DYN_TBL PIPELINED ;
                FUNCTION DYN_CRT_DSCNT_VW   RETURN TP_DSCNT_TBL PIPELINED ;
                FUNCTION DYN_CRT_FQTY_VW   RETURN TP_FQTY_TBL  PIPELINED ;
                FUNCTION SHW_SMAN_DATA ( P_REP_CODE     IN VARCHAR2  ) RETURN TP_SMAN_TBL PIPELINED;
 CREATE OR REPLACE PACKAGE BODY DTS_CRT_VW_PKG IS
                FUNCTION DYN_CRT_SRL_VW(P_TRNS_TYP IN NUMBER ,P_DTL_TYP IN NUMBER DEFAULT NULL)  RETURN TP_DYN_TBL PIPELINED   IS 
                BEGIN   
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','DTS_QUOT_SERIAL',' WHERE  1=1 ');
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','DTS_SORDER_SERIAL',' WHERE  1=1 ');
                               G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','DTS_INVOICING_SERIALS',' WHERE  1=1 ');                               
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','DTS_INVOICING_SERIALS_SR',' WHERE  1=1 ');
                              G_DYN_SRL      :=YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','DTS_INVOICING_SERIALS_SR',' WHERE  1=1 ');   
                      Begin
                       select YR_NO into V_brn_year from s_prd_dtl
                         where rownum<=1;
                      Exception when others then 
                     End;                   
                                                 AND S.CASH_NO  IN (SELECT C.'||G_CSHBNK||'_NO FROM '||G_TBL_NM_DMY||'  WHERE NVL (C.'||G_CSHBNK||'_SR, 0) =
                                                   (SELECT NVL(C.'||G_CSHBNK||'_SR,0) FROM  '||G_TBL_NM_DMY||'  WHERE C.'||G_CSHBNK||'_NO = R.'||G_CSHBNK||'_NO))'  ;
                                                 AND S.'||G_CSHBNK||'_NO NOT IN (SELECT DISTINCT CASH_NO FROM VOUCHERS V
                                                                                 WHERE VOUCHER_TYPE=1 AND VOUCHER_PAY_TYPE='||G_BILTYP_FLD||' AND V.BRN_NO = R.BRN_NO)
                                                 AND S.'||G_CSHBNK||'_NO  IN (SELECT C.'||G_CSHBNK||'_NO FROM '||G_TBL_NM_DMY||'  WHERE NVL (C.'
                                                                             (SELECT NVL(C.'||G_CSHBNK||'_SR,0) FROM  '||G_TBL_NM_DMY ||'  WHERE C.'||G_CSHBNK||'_NO = R.'||G_CSHBNK||'_NO))';
                      G_DYN_QRY:=' Select 0 Doc_Typ
                                  From ( 
                                        Select              R.R
                                                          ,(Select Nvl (Max (To_Number (V.Voucher_No)), 0)+1 Bno from Vouchers V
                                                                        where  V.Voucher_Type = 1
                                                                        AND 1=  (CASE WHEN R.RCPT_SRL_TYP=3 THEN (SELECT 1 from Vouchers
                                                                                                                                  WHERE v_ser =V.v_ser 
                                                                                     WHEN R.RCPT_SRL_TYP=1 THEN (SELECT 1 FROM Vouchers
                                                                                                                      WHERE V_SER=V.V_SER
            And Cash_No In (Select Bank_No
                                                                                                                                          From Cash_At_Bank
                                                                                                                                         Where Nvl (Bank_Sr, 0)=Nvl (R.Bank_Sr, 0) )
                                                    From Dts_V_Sman_Bank R                        
                                                    WHERE  R.Brn_No Is Not Null) ';
                                  G_DYN_QRY:= '  Select '||P_TRNS_TYP||' Doc_Typ,
                                            From Dts_V_Sman_Info R
                                           Where Nvl(Sman_Typ, 0) = 1
                                        Group By R.Rep_Code, R.Brn_No ';
                                   G_DYN_QRY:= '  Select '||P_TRNS_TYP||' Doc_Typ,
                                            From Dts_V_Sman_Info R, Dts_V_Pda_Typs_Priv P
                                           Where Nvl(Sman_Typ, 0) = 1
                                        Group By R.Rep_Code,
                                        Order By R.Rep_Code, P.Typ_No  ';
                                  G_DYN_QRY:= '  Select '||P_TRNS_TYP||' Doc_Typ,
                                            From Dts_V_Sman_Info R
                                           Where Nvl(Sman_Typ, 0) = 1
                                        Group By R.Rep_Code, R.Brn_No ';
                                   G_DYN_QRY:= '  Select '||P_TRNS_TYP||' Doc_Typ,
                                            From Dts_V_Sman_Info R, Dts_V_Pda_Typs_Priv P
                                           Where Nvl(Sman_Typ, 0) = 1
                                        Group By R.Rep_Code,
                                        Order By R.Rep_Code, P.Typ_No  ';
                         G_DYN_QRY:= '  Select '||P_TRNS_TYP||' Doc_Typ,
                            FROM DTS_V_SMAN_INFO R
                           WHERE   NVL(SMAN_TYP,0)=1 
                        GROUP BY R.REP_CODE, R.BRN_NO ';
                        G_DYN_QRY:= ' Select '||P_TRNS_TYP||' Doc_Typ,
                            FROM DTS_V_SMAN_INFO R, S_FLAGS_PRIV P 
                           WHERE  NVL(SMAN_TYP,0)=1 AND R.REP_CODE IS NOT NULL   
                        Group By R.Rep_Code, r.Brn_No,p.FLG_VALUE
                        order by r.rep_code,p.FLG_VALUE ';
                        G_DYN_QRY:= ' Select '||P_TRNS_TYP||' Doc_Typ,
                            FROM DTS_V_SMAN_INFO R
                           WHERE  NVL(SMAN_TYP,0)=1
                        GROUP BY R.REP_CODE, R.BRN_NO,R.W_CODE ';
                        G_DYN_QRY:= ' Select '||P_TRNS_TYP||' Doc_Typ,
                            FROM DTS_V_SMAN_INFO R, S_FLAGS_PRIV P 
                           WHERE  NVL(SMAN_TYP,0)=1 AND R.REP_CODE IS NOT NULL   
                        Group By R.Rep_Code, r.Brn_No,p.FLG_VALUE,r.w_code
                        order by r.rep_code,p.FLG_VALUE ';
                         G_DYN_QRY:= ' Select '||P_TRNS_TYP||' Doc_Typ,
                            FROM DTS_V_SMAN_INFO R, DTS_V_PDA_TYPS_PRIV  P 
                           WHERE  NVL(SMAN_TYP,0)=1 AND R.REP_CODE IS NOT NULL   
                        Group By R.Rep_Code, r.Brn_No,p.TYP_NO,r.w_code
                        order by r.rep_code,p.TYP_NO ';
                         G_DYN_QRY:= 'Select '||P_TRNS_TYP||' Doc_Typ,
                            FROM DTS_V
                           WHERE  NVL(SMAN_TYP,0)=1 AND R.REP_CODE IS NOT NULL   
                        Group By R.Rep_Code, r.Brn_No,p.TYP_NO,r.w_code,F.Flg_Value
                        order by r.rep_code,p.TYP_NO,F.Flg_Value ';
                               ' SELECT '||P_TRNS_TYP||' DOC_TYP,'||''''||G_TRNS_NM||''''||' DOC_TYP_NM,NVL (MAX (Q.BNO), 0) + 1 DOC_NO,
                                  FROM (SELECT  NVL(MAX (TO_NUMBER ('||G_PK_FLD||')),0) BNO,'||G_REP_FLD||' REP_CODE,R.BRN_NO  BRN_NO,'||G_BILTYP_FLD||' BILL_DOC_TYPE,'||G_TYP_FLD||' TYP_NO
                                         FROM DTS_V_SMAN_INFO R'||G_TBL_NM_QRY1||' WHERE NVL(SMAN_TYP,0)=1  AND R.REP_CODE IS NOT NULL '||G_INR_WHR_QRY1||' 
                                         GROUP BY R.BRN_NO,'||G_REP_FLD||','||G_BILTYP_FLD||','||G_TYP_FLD||' '||G_INR_GRP_BY1||'
                                        SELECT   NVL(MAX (TO_NUMBER ('||G_PK_FLD2||')),0) BNO,'||G_REP_FLD||' REP_CODE,R.BRN_NO BRN_NO,'||G_BILTYP_FLD||' BILL_DOC_TYPE,'||G_TYP_FLD2||' TYP_NO
                                         FROM DTS_V_SMAN_INFO R '||G_TBL_NM_QRY2||'
                                        WHERE NVL(SMAN_TYP,0)=1 AND R.REP_CODE IS NOT NULL ' ||G_INR_WHR_QRY2||'
                                        GROUP BY R.BRN_NO,'||G_REP_FLD||','||G_BILTYP_FLD||','|
                                        SELECT  0 BNO, '||G_REP_FLD||' REP_CODE,R.BRN_NO BRN_NO,'||G_BILTYP_FLD3||' BILL_DOC_TYPE,'||G_TYP_FLD3||' TYP_NO
                                         FROM  DTS_V_SMAN_INFO R  '||G_TBL_NM_QRY3||'
                                        WHERE NVL(SMAN_TYP,0)=1  AND R.REP_CODE IS NOT NULL ' ||G_INR_WHR_QRY3||' 
                                        GROUP BY R.BRN_NO,'||G_REP_FLD||','||G_BILTYP_FLD3||','||G_TYP_FLD3||' '||G_INR_GRP_BY3||'
                                         ) Q   GROUP BY Q.REP_CODE, Q.BRN_NO ,Q.BILL_DOC_TYPE,Q.TYP_NO '; 
                                         BEGIN
                                         EXCEPTION
                                         END;
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(0,1))  
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(0,2)) 
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(1))  
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(2))  
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(3))  
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(4))
                                            SELECT DOC_TYP ,DOC_TYP_NM ,DOC_NO,REP_CODE,BRN_NO,BILL_DOC_TYPE,TYP_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_SRL_VW(9)) 
                  EXCEPTION
                FUNCTION DYN_CRT_DSCNT_VW  RETURN TP_DSCNT_TBL PIPELINED 
                     V_USE_DTS_INV   NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','USE_DTS_WITHOUT_INV',' WHERE  1=1 '),0);
                     V_DISC_W        NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_DISC_WCODE',' WHERE  1=1 '),0);
                     V_DISC_TYP      NUMBER(2):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_DISC_TYPE',' WHERE  1=1 '),0);
                     V_SHW_DISC      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SHOW_DISC_PER_ITEMS_AR',' WHERE  1=1 '),0);
                     V_DISC_PRD      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_DISC_PERIODIC',' WHERE  1=1 '),0);
                BEGIN 
                                            'SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP|| ' SALES_DISC_TYPE ,'||V_DISC_PRD||' SALES_DISC_PERIODIC,
                                              FROM SALES_DISC SD,DTS_V_GET_ITM_DTL I,DTS_V_SMAN_INFO S ,PRIVILEGE_FIXED PR 
                                             WHERE     S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.U_ID = NVL (PR.U_ID, 0) AND S.W_CODE IS NOT NULL
                                           ' SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP||' SALES_DISC_TYPE,'||V_DISC_PRD||' SALES_DISC_PERIODIC,SD.I_CODE AS "I_CODE", SD.ITM_UNT AS "ITM_UNT",
                                              FROM SALES_DISC SD,DTS_V_GET_ITM_DTL I,DTS_V_GET_REP_STORAGE_BR ST,DTS_V_SMAN_INFO S,PRIVILEGE_FIXED PR,DTS_V_GET_ITM_PRICE L
                                             WHERE  S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.REP_CODE = L.REP_CODE AND I.REP_CODE = L.REP_CODE
                                           ' SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP||' SALES_DISC_TYPE,'||V_DISC_PRD||' SALES_DISC_PERIODIC,''0'' AS "I_CODE",''0'' AS "ITM_UNT",
                                              FROM SALES_DISC SD,DTS_V_GET_CUSTOMER SM,DTS_V_SMAN_INFO S, PRIVILEGE_FIXED PR
                                             WHERE     S.SMAN_TYP=1 
                                            ' SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP||' SALES_DISC_TYPE,'||V_DISC_PRD||' SALES_DISC_PERIODIC,
                                              FROM SALES_DISC SD,DTS_V_GET_CUSTOMER SM, DTS_V_GET_ITM_DTL I, DTS_V_SMAN_INFO S,PRIVILEGE_FIXED PR
                                             WHERE     S.SMAN_TYP = 1 
                                            ' SELECT S.U_ID,S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP||' SALES_DISC_TYPE,'||V_DISC_PRD||' SALES_DISC_PERIODIC,SD.I_CODE AS "I_CODE",SD.ITM_UNT AS "ITM_UNT",
                                              FROM SALES_DISC SD,DTS_V_GET_CUSTOMER SM,DTS_V_GET_ITM_DTL I,DTS_V_SMAN_INFO S,PRIVILEGE_FIXED PR
                                             WHERE     S.SMAN_TYP = 1 
                                            ' SELECT S.U_ID, S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP|| ' SALES_DISC_TYPE ,'||V_DISC_PRD||' SALES_DISC_PERIODIC,
                                              FROM DTS_V_SMAN_INFO S, DTS_V_GET_ITM_DTL I, PRIVILEGE_FIXED PR  WHERE  NVL (I.ALLOW_DISC, 0) <> 0 AND S.SMAN_TYP = 1 
                                            ' SELECT S.U_ID, S.REP_CODE REP_CODE,'||V_DISC_W||' SALES_DISC_WCODE,'||V_DISC_TYP|| ' SALES_DISC_TYPE ,'||V_DISC_PRD||' SALES_DISC_PERIODIC,
                                              FROM DTS_V_SMAN_INFO S, DTS_V_GET_ITM_DTL I, PRIVILEGE_FIXED PR  WHERE  1=2 AND NVL (I.ALLOW_DISC, 0) <> 0 AND S.SMAN_TYP = 1 
                                         BEGIN
                                         EXCEPTION
                                         END;
                                      AS SELECT * FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_DSCNT_VW) ; 
                    EXCEPTION
                FUNCTION    DYN_CRT_FQTY_VW  RETURN TP_FQTY_TBL PIPELINED 
                     V_USE_DTS_INV   NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('DTS_PARA','USE_DTS_WITHOUT_INV',' WHERE  1=1 '),0);
_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_FREE_QTY_WCODE',' WHERE  1=1 '),0);
                     V_FQTY_TYP      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_FREE_QTY_TYPE',' WHERE  1=1 '),0);
                     V_SHW_FQTY      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','AR_USE_FREE_QTY',' WHERE  1=1 '),0);
                     V_FQTY_PRD      NUMBER(1):=NVL(YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_AR','SALES_FREE_QTY_PERIODIC',' WHERE  1=1 '),0);
                BEGIN 
                           'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||', 0) SALES_FREE_QTY_WCODE ,NVL('||V_FQTY_TYP||', 0) SALES_FREE_QTY_TYPE,
                              FROM SALES_FREE_QTY SF, DTS_V_GET_ITM_DTL I, DTS_V_SMAN_INFO S, PRIVILEGE_FIXED PR
                             WHERE S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.U_ID = NVL (PR.U_ID, 0)
                           'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||', 0) SALES_FREE_QTY_WCODE ,NVL('||V_FQTY_TYP||', 0) SALES_FREE_QTY_TYPE,
                              FROM SALES_FREE_QTY SF, DTS_V_GET_ITM_DTL I, DTS_V_GET_REP_STORAGE_BR ST, DTS_V_SMAN_INFO S, PRIVILEGE_FIXED PR
                             WHERE S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.U_ID = NVL (PR.U_ID, 0)
                               AND DECODE(YS_GEN_PKG.GET_FLD_VALUE(''DTS_PARA'',''USE_DTS_WITHOUT_INV'','' WHERE  1=1 ''),0,I.I_CODE||S.REP_CODE||S.W_CODE,''0'')=
                                   DECODE(YS_GEN_PKG.GET_FLD_VALUE(''DTS_PARA'',''USE_DTS_WITHOUT_INV'','' WHERE  1=1 ''),0,ST.I_CODE||ST.REP_CODE || ST.W_CODE,''0'')
                           'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL ('||V_FQTY_TYP||',0) SALES_FREE_QTY_TYPE,NVL ('||V_FQTY_PRD||',0) SALES_FREE_QTY_PERIODIC, ''0'' AS "I_CODE", ''0'' AS "ITM_UNT",
                              FROM SALES_FREE_QTY SF,DTS_V_SMAN_CST SM,DTS_V_SMAN_INFO S,PRIVILEGE_FIXED PR
                             WHERE S.SMAN_TYP = 1 AND S.U_ID = NVL (PR.U_ID, 0) AND S.W_CODE IS NOT NULL AND S.REP_CODE = SM.REP_CODE
                          ' SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL ('||V_FQTY_TYP||',0) SALES_FREE_QTY_TYPE,NVL ('||V_FQTY_PRD||', 0) SALES_FREE_QTY_PERIODIC, 
                              FROM SALES_FREE_QTY SF,DTS_V_SMAN_CST SM,DTS_V_GET_ITM_DTL I, DTS_V_SMAN_INFO S, PRIVILEGE_FIXED PR
                             WHERE S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND SF.G_CODE || SF.I_CODE || SF.ITM_UNT = I.G_CODE || I.I_CODE || I.ITM_UNT AND S.U_ID = NVL (PR.U_ID, 0)
                               'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL('||V_FQTY_TYP||', 0) SALES_FREE_QTY_TYPE,NVL('||V_FQTY_PRD||', 0) SALES_FREE_QTY_PERIODIC,
                                  FROM SALES_FREE_QTY SF,DTS_V_SMAN_CST SM,DTS_V_GET_ITM_DTL I,DTS_V_SMAN_INFO S,PRIVILEGE_FIXED PR
                                 WHERE S.SMAN_TYP = 1 AND S.REP_CODE = I.REP_CODE AND S.U_ID = NVL (PR.U_ID, 0)AND S.REP_CODE = SM.REP_CODE AND SF.I_CODE || SF.ITM_UNT = I.I_CODE || I.ITM_UNT
                                'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL('||V_FQTY_TYP||',0) SALES_FREE_QTY_TYPE,NVL('||V_FQTY_PRD||',0) SALES_FREE_QTY_PERIODIC,
                                  FROM DTS_V_SMAN_INFO S, DTS_V_GET_ITM_DTL I,PRIVILEGE_FIXED PR
                                 WHERE NVL(I.ALLOW_FREE_QTY,0) <> 0 AND S.SMAN_TYP = 1 AND S.REP_CODE IS NOT NULL AND S.REP_CODE = I.REP_CODE 
                                'SELECT S.U_ID,S.REP_CODE REP_CODE,NVL('||V_FQTY_W||',0) SALES_FREE_QTY_WCODE,NVL('||V_FQTY_TYP||',0) SALES_FREE_QTY_TYPE,NVL('||V_FQTY_PRD||',0) SALES_FREE_QTY_PERIODIC,
                                  FROM DTS_V_SMAN_INFO S, DTS_V_GET_ITM_DTL I,PRIVILEGE_FIXED PR
                                 WHERE 1=2  AND  NVL(I.ALLOW_FREE_QTY,0) <> 0 AND S.SMAN_TYP = 1 AND S.REP_CODE IS NOT NULL AND S.REP_CODE = I.REP_CODE 
                                         BEGIN
                                         EXCEPTION
                                         END;
                                      AS SELECT * FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_FQTY_VW) ; 
                EXCEPTION WHEN OTHERS THEN
                FUNCTION SHW_SMAN_DATA ( P_REP_CODE     IN VARCHAR2  ) RETURN TP_SMAN_TBL PIPELINED Is 
                   BEGIN              
                               OPEN V_SMAN_RFC FOR( 'SELECT          REPRS_CODE                                            
                                                                    FROM SALES_MAN
                                                         BEGIN
                                                         Exception  WHEN NO_DATA_FOUND THEN
                                                          End; 
CREATE OR REPLACE PACKAGE DTS_INSRT_TRNS_PKG IS
PROCEDURE INSRT_DTS_ITMS_SHW_MST(P_DOC_DATE                   IN DTS_ITMS_SHW_MST.DOC_DATE%TYPE                 DEFAULT NULL
PROCEDURE  INSRT_DTS_ITMS_SHW_DTL(   P_RCRD_NO                    IN DTS_ITMS_SHW_DTL.RCRD_NO%TYPE                  DEFAULT NULL
PROCEDURE  INSRT_DTS_ITMS_SHW_IMG(   P_I_CODE                     IN DTS_ITMS_SHW_IMG.I_CODE%TYPE                   DEFAULT NULL
Procedure Insrt_doc_prc( P_xml            In Clob
Procedure Insrt_ARS_QUESTNNR_MST(  P_doc_no         In ARS_QUESTNNR_MST.Doc_no%Type Default Null
Procedure Insrt_ARS_QUESTNNR_DTL(  P_i_code         In ARS_QUESTN
Procedure Insrt_ARS_Questnnr_Sub_Dtl(P_i_code         In ARS_QUESTNNR_SUB_DTL.I_code%Type Default Null
PROCEDURE CLR_GLBL_VAR ;
Procedure Chk_insrt_data(  P_doc_type       In Ias_post_mst.Doc_type%Type
 CREATE OR REPLACE PACKAGE BODY DTS_INSRT_TRNS_PKG IS 
PROCEDURE INSRT_DTS_ITMS_SHW_MST(P_DOC_DATE                   IN DTS_ITMS_SHW_MST.DOC_DATE%TYPE                 DEFAULT NULL
           BEGIN
            SELECT DECODE(G_LNG_NO,1,REPRS_A_NAME,NVL(REPRS_E_NAME,REPRS_A_NAME)),NVL(INACTIVE,0) INTO V_INPT_NM,V_INACTV_FLG FROM SALES_MAN
             WHERE REPRS_CODE = P_REP_CODE AND ROWNUM<=1;
           EXCEPTION 
           END;
           BEGIN
            SELECT DECODE(G_LNG_NO,1,C_A_NAME,NVL(C_E_NAME,C_A_NAME)),NVL(INACTIVE,0) INTO V_INPT_NM,V_INACTV_FLG FROM CUSTOMER 
             WHERE C_CODE = P_C_CODE AND ROWNUM<=1;
           EXCEPTION 
           END;
    BEGIN
      SELECT U_ID ,BRN_NO INTO G_AD_U_ID,G_BRN_NO  FROM DTS_V_SMAN_INFO
         WHERE SMAN_TYP=1 AND REP_CODE=P_REP_CODE
    EXCEPTION WHEN OTHERS  THEN
    END;
           BEGIN
            SELECT DECODE(G_LNG_NO,1,CMP_LNAME,NVL(CMP_FNAME,CMP_LNAME)),NVL(INACTIVE,0) INTO V_INPT_NM,V_INACTV_FLG FROM S_BRN 
             WHERE BRN_NO   =G_BRN_NO           
           EXCEPTION 
          END;
  BEGIN
      SELECT BRN_USR,BRN_YEAR INTO G_BRN_USR,G_BRN_YEAR FROM S_BRN
      WHERE BRN_NO=G_BRN_NO
  EXCEPTION WHEN OTHERS  THEN
  END;
    BEGIN
        Select nvl(max(to_number(Doc_No)),0)+1 into G_Doc_No 
                From DTS_ITMS_SHW_MST 
               Where Brn_No = G_Brn_No;
    EXCEPTION WHEN OTHERS  THEN
    END;
   INSERT INTO DTS_ITMS_SHW_MST (    DOC_NO                   
 EXCEPTION WHEN OTHERS THEN
  RAISE_APPLICATION_ERROR (-20018,'Error When Insert Into DTS_ITMS_SHW_MST , '||SQLERRM); 
PROCEDURE  INSRT_DTS_ITMS_SHW_DTL(   P_RCRD_NO                    IN DTS_ITMS_SHW_DTL.RCRD_NO%TYPE                  DEFAULT NULL
   BEGIN
           SELECT 1 INTO V_CNT
                   FROM IAS_ITM_MST 
                  WHERE I_CODE = P_I_CODE
   EXCEPTION WHEN OTHERS THEN
   END;
   INSERT INTO DTS_ITMS_SHW_DTL( DOC_NO                   
EXCEPTION WHEN OTHERS THEN
         RAISE_APPLICATION_ERROR (-20022,'Error When Insert Into DTS_ITMS_SHW_DTL , '||SQLERRM); 
PROCEDURE  INSRT_DTS_ITMS_SHW_IMG(   P_I_CODE                     IN DTS_ITMS_SHW_IMG.I_CODE%TYPE                   DEFAULT NULL
   BEGIN
           SELECT 1 INTO V_CNT
                   FROM IAS_ITM_MST 
                  WHERE I_CODE = P_I_CODE
   EXCEPTION WHEN OTHERS THEN
   END;
  BEGIN
    SELECT 1 INTO V_CNT  FROM DTS_ITMS_SHW_DTL
    WHERE I_CODE=P_I_CODE
  EXCEPTION WHEN OTHERS THEN
   END;
   INSERT INTO DTS_ITMS_SHW_IMG(DOC_NO
EXCEPTION WHEN OTHERS THEN
ERROR (-20028,'Error When Insert Into INSRT_DTS_ITMS_SHW_IMG , '||SQLERRM);
Procedure Insrt_doc_prc( P_xml            In Clob
   For M_cv In (Select 
                FROM   TABLE(XMLSEQUENCE(EXTRACT(V_XML_TYPE, '/QUESTNNR/QST_MST'))) XMLMSTDMY) LOOP                                                                                                                                                     --(11)
      BEGIN                                                                                                                                                                                                                                              --(1)
      Exception
      End;                                                                                                                                                                                                                                                --(1)
      For D_cv In (Select Extractvalue(Value(Xmldtldmy), '*/I_CODE                      ') As I_code
                   From   Table(Xmlsequence(Extract(V_xml_type, '/QUESTNNR/QST_DTL'))) Xmldtldmy) 
         Begin                                                                                                                                                                                                                                           --(2)
         Exception
         End;                                                                                                                                                                                                                                             --(2)
       For D_SUB_CV In (Select Extractvalue(Value(XMLSUBDTLDMY), '*/I_CODE                      ') As I_code
                       From   Table(Xmlsequence(Extract(V_xml_type, '/QUESTNNR/QST_SUB_DTL'))) XMLSUBDTLDMY)
             Begin                                                                                                                                                                                                          
             Exception
             End;
Exception
Procedure INSRT_ARS_QUESTNNR_MST(  P_doc_no         In ARS_QUESTNNR_MST.Doc_no%Type Default Null
    Begin
   Exception
   End;
      Begin
         Select 1
      from Sales_Man
     Where Reprs_Code=P_Rep_Code
  Exception when others Then
  End;
      Begin
         Select 1
      from Customer
     Where C_CODE=P_C_CODE
  Exception when others Then
  End;
    Begin
       Select Nvl(Max(To_number(Doc_no)), 0) + 1
       From   ARS_QUESTNNR_MST
       Where  Brn_no = G_brn_no;
    Exception
    End;
  Insert Into ARS_QUESTNNR_MST
Exception
Procedure Insrt_ARS_QUESTNNR_DTL(  P_i_code         In ARS_QUESTNNR_DTL.I_code%Type Default Null
    Begin
                Select 1                             
                From   Ias_Itm_Mst 
                Where  I_Code = P_I_CODE And Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1                             
                From   Ias_gnr_code_dtl
               Where  Main_code = 10 And Sub_no =P_QUESTNR_NO And Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1                             
                From   ARS_QUESTNNR_DTL
               Where  DOC_SER = G_DOC_SER And QUESTNR_NO =P_QUESTNR_NO AND I_CODE=P_I_CODE And Rownum <= 1;  
    Exception When Others Then
    End;
   Insert Into ARS_QUESTNNR_DTL
Exception
      Raise_application_error(-20063, 'Error When Insert Into ARS_QUESTNNR_DTL' || Chr(10) || Sqlerrm);
Procedure Insrt_ARS_Questnnr_Sub_Dtl(P_i_code         In ARS_QUESTNNR_SUB_DTL.I_code%Type Default Null
    Begin
                Select 1                             
                From   Ias_Itm_Mst 
                Where  I_Code = P_I_CODE And Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1                             
                From   Ias_gnr_code_dtl
               Where  Main_code = 10 And Sub_no =P_QUESTNR_NO And Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1                             
                From   ARS_QUESTN_QUESTNNR
               Where    QUESTNR_NO =P_QUESTNR_NO And QST_NO=P_QST_NO AND  Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1                             
                From   ARS_ANSWR_QUESTNNR_MST
               Where    MODL_NO =P_MODL_NO AND  Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1          
                From   ARS_QUESTN_QUESTNNR
               Where    QUESTNR_NO =P_QUESTNR_NO And QST_NO=P_QST_NO and  MODL_NO =P_MODL_NO AND  Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1                             
                From   ARS_ANSWR_QUESTNNR_DTL
               Where    MODL_NO =P_MODL_NO  AND ANSWR_NO=P_ANSWR_NO AND  Rownum <= 1;  
    Exception When Others Then
    End;   
    Begin
                Select 1                             
                From   ARS_QUESTNNR_DTL
               Where  DOC_SER = G_DOC_SER And QUESTNR_NO =P_QUESTNR_NO AND I_CODE=P_I_CODE  And Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1                             
                From   ARS_QUESTN_QUESTNNR
               Where  QST_NO=P_QST_NO AND MODL_NO=P_MODL_NO  And Rownum <= 1;  
    Exception When Others Then
    End;
    Begin
                Select 1                             
                From   ARS_QUESTNNR_SUB_DTL
               Where  DOC_SER = G_DOC_SER And QUESTNR_NO =P_QUESTNR_NO AND I_CODE=P_I_CODE AND QST_NO=P_QST_NO And Rownum <= 1;  
    Exception When Others Then
    End;
   Insert Into ARS_QUESTNNR_SUB_DTL
Exception
      Raise_application_error(-20063, 'Error When Insert Into ARS_QUESTNNR_SUB_DTL' || Chr(10) || Sqlerrm);
PROCEDURE CLR_GLBL_VAR IS
Procedure Chk_insrt_data(  P_doc_type       In Ias_post_mst.Doc_type%Type
         Begin
            Select 1
            From   (Select Doc_no
                    From   ARS_QUESTNNR_MST
                    Where  Doc_ser = P_Doc_ser
                    Select Doc_no
                    From   ARS_QUESTNNR_DTL
                    Where  Doc_ser = P_Doc_ser)
            Where  Rownum <= 1;
         Exception            
         End;
 FOR I IN(Select DOC_SER,
                From   ARS_QUESTNNR_DTL
               Where  DOC_SER = P_DOC_SER )
        Begin
                    Select 1                             
                    From   ARS_QUESTNNR_SUB_DTL
                   Where  DOC_SER = I.DOC_SER And QUESTNR_NO =I.QUESTNR_NO AND I_CODE=I.I_CODE  And Rownum <= 1;  
        Exception When Others Then
        End;
  BEGIN
CREATE OR REPLACE PACKAGE  DTS_POST_INV_TRNS_PKG AS
                 PROCEDURE Post_Trns_Data_Auto;
                 PROCEDURE Post_Sales_Prc(P_Doc_Typ In Ias_Post_Mst.Doc_Type%Type, 
                 Procedure Post_RT_Sales_Prc(P_Doc_Typ In Ias_Post_Mst.Doc_Type%Type, 
                PROCEDURE CHK_ITM  ( P_I_CODE                IN IAS_ITM_MST.I_CODE%TYPE          
                PROCEDURE CHK_AVL_QTY (  P_I_CODE        IN ITEM_MOVEMENT.I_CODE%TYPE 
                PROCEDURE Update_Bill_Disc_Prc  (P_docser In Number, P_disc_type In Number);
                PROCEDURE Update_Other_Charges(P_Bill_Ser Number ) ;
                PROCEDURE Insert_Installemnt_BR (BillNo      Number,
                PROCEDURE Update_RtBill_Disc_Prc (P_docser In Number, P_disc_type In Number);
                PROCEDURE Update_RtBill_Other_Charges(p_rt_bill_ser number);
  CREATE OR REPLACE Package Body Dts_Post_Inv_Trns_Pkg Is
                           Procedure Post_Trns_Data_Auto Is
                           BEGIN
                            Begin
                             SELECT NVL(USE_BATCH_NO  ,0),
                          From 
                           Exception 
                                 Select   Doc_Type
                                 From     (Select   1 Doc_Type
                                           From     Ias_Bill_Mst_Br M
                                           Where    M.Bill_Ser = D.Bill_Ser And Nvl(M.Stand_By, 0) = 0 
                                            And Exists(Select 1 From   Ias_Bill_Dtl_Br Where  Bill_Ser = M.Bill_Ser And Rownum <= 1)
                                            And Not Exists(Select 1
                                                                   From   Ias_Bill_Mst
                                                                   Where  Bill_Ser = M.Bill_Ser And Rownum <= 1)
                                           Group By M.Bill_Ser
                                           Select   3 Doc_Type
                                           From     Ias_Rt_Bill_Mst_Br M
                                           Where    M.Rt_Bill_Ser = D.Rt_Bill_Ser And Nvl(M.Stand_By, 0) = 0 
                                           And Exists(Select 1 From   Ias_Rt_Bill_Dtl_Br
                                                         Where  Rt_Bill_Ser = M.Rt_Bill_Ser 
                                          And Not Exists(Select 1
                                                                   From   Ias_Rt_Bill_Mst
                                                                   Where  Rt_Bill_Ser = M.Rt_Bill_Ser And Rownum <= 1)
 Group By M.Rt_Bill_Ser)
                                 Order By Doc_Sequence;
                            Begin
                            END;    
                           Procedure Post_Sales_Prc(P_Doc_Typ In Ias_Post_Mst.Doc_Type%Type, 
                           Begin                                                                                                                                                                                                                        -- Bill Sales
                                 Begin
                                    For M_Cv In (Select 70 As Sys_No,
                                                 From   Ias_Bill_Mst_Br
                                                 Where  Bill_Ser = P_Doc_Ser) Loop
                                              BEGIN
                                               Select 1 into V_CNT  From Ias_Bill_Mst
                                                   Where bill_ser=M_CV.BILL_SER
                                              EXCEPTION WHEN OTHERS THEN
                                              END; 
                                       For D_Cv In (Select   Bill_Doc_Type             , 
                                                    From   Ias_Bill_Dtl_Br
                                                    Where  Bill_Ser = M_CV.BILL_SER) Loop  --(12)
                                                         Begin
                                                            Select 1 into v_cnt
                                                                  From (  Select D.I_Code,                               
                                                                                 nvl((Select Sum(In_Out)
                                                                                        From Ias_Item_Serialno
                                                                                       Where I_Code = D.I_Code
                                                                            From Ias_Bill_Mst_Br M, Ias_Item_Serialno_Br D, Ias_Itm_Mst
                                                                           Where M.Bill_Ser = D.Doc_Ser
                                                                        Group By D.I_Code,                       
                                                                 Where Nvl(Avl, 0) - Nvl(Cnt_Srl, 0) < 0
                                                         EXCEPTION WHEN no_data_found Then
                                                         END;
                                                       BEGIN                  
                                                       EXCEPTION WHEN OTHERS THEN
                                                       END;
                                                       BEGIN
                                                       UPDATE IAS_BILL_DTL_BR SET POST_CODE=V_POST_CODE
                                                          WHERE BILL_SER=M_CV.BILL_SER AND I_CODE=D_CV.I_CODE AND W_CODE=D_CV.W_CODE;
                                                        EXCEPTION WHEN OTHERS THEN
                                                       END;   
                                             BEGIN
                                                 SELECT 1  INTO V_CNT FROM ( SELECT BILL_NO, BILL_SER FROM IAS_BILL_MST_BR WHERE BILL_SER =M_CV.BILL_SER
                                                                  SELECT BILL_NO, BILL_SER FROM IAS_BILL_DTL_BR WHERE BILL_SER = M_CV.BILL_SER)
                                                                             WHERE ROWNUM<=1 ;
                                             EXCEPTION 
                                             END;
                                                BEGIN
                                                   SELECT 1 INTO V_CNT  FROM IAS_BILL_DTL_BR D 
                                                                                 WHERE BILL_SER =M_CV.BILL_SER
                                                                                   AND EXISTS ( SELECT 1 FROM  
                        WHERE           TI.TAX_NO = TM.TAX_NO
                                                EXCEPTION 
                                                END;
                                                       BEGIN
                                                          SELECT 1 INTO V_CNT FROM GNR_TAX_ITM_MOVMNT_BR WHERE DOC_TYPE =4 AND DOC_SER = M_CV.BILL_SER AND ROWNUM<=1 ;
                                                       EXCEPTION
                                                    Begin            
                                                          Select Round (Nvl (Bill_Amt, 0), G_No_Of_Decimal_Ar )  ,
                                                            From     Ias_Bill_Mst_Br  
                                                            Where Bill_Ser =M_Cv.Bill_Ser  
                                                           Select    Round(Sum(Nvl(I_Price,0) * Nvl(I_Qty,0)),G_No_Of_Decimal_Ar)   ,
                                                                           From Ias_Bill_Dtl_Br  Where Bill_Ser = M_Cv.Bill_Ser;                                                                                                                                    
                                                   Exception  When Others Then
                                                   End;  
                                               Begin            
                                                      Select   Nvl(Round(Nvl(Vat_Amt,0),G_No_Of_Decimal_Ar),0) 
                                                      From Ias_Bill_Mst_Br Where Bill_Ser = M_Cv.Bill_Ser And Rownum<=1;
                                                       Select  Nvl(Round(Sum(Nvl(Tax_Amt,0) * Nvl(I_Qty,0)),G_No_Of_Decimal_Ar),0) 
                                                       From  Gnr_Tax_Itm_Movmnt_Br Where Doc_Ser = M_Cv.Bill_Ser ;
                                               Exception  When Others Then
                                                Begin
                                                    Select  Round(Sum(Nvl(Vat_Amt,0)),G_No_Of_Decimal_Ar) Vat_Amt,
                                               From Ias_Bill_Dtl_Br 
                                                    Where Bill_Ser = M_Cv.Bill_Ser; ---Dtl
                                                    Select  Round(Nvl(Sum(Nvl(Tax_Amt,0)),0),G_No_Of_Decimal_Ar) Vat_Amt,
                                                    From  Gnr_Tax_I
                                                    Where Doc_Ser = M_Cv.Bill_Ser; ---Tax
                                               Exception  When Others Then
                                            BEGIN 
                                            Exception  When Others Then
                                            BEGIN
                                                 DELETE FROM DTS_POST_TRNS_HSTRY WHERE DOC_SER=M_CV.BILL_SER;
                                            EXCEPTION WHEN OTHERS THEN 
                                            END;
                                                 BEGIN
                                                   DELETE FROM DTS_POST_TRNS_HSTRY WHERE DOC_SER=M_CV.BILL_SER;
                                                 EXCEPTION WHEN OTHERS THEN 
                                                 END;                                                           
                                                 BEGIN
                                                     INSERT INTO DTS_POST_TRNS_HSTRY(DOC_TYPE,DOC_NO,DOC_SER,DOC_DATE,MSG_TXT,LINE_NO)  
                                                 EXCEPTION WHEN OTHERS THEN 
                                                 END; 
                                 Exception
                                 End;          
                         Procedure Post_RT_Sales_Prc(P_Doc_Typ In Ias_Post_Mst.Doc_Type%Type, 
                           Begin                                       
                                    For M_Cv In (Select 70 As Sys_No,
                                                 From   Ias_Rt_Bill_Mst_Br
                                                 Where  Rt_Bill_Ser = P_Doc_Ser) Loop 
                                      BEGIN
                                       Select 1 into V_CNT  From Ias_rt_Bil
                                           Where rt_bill_ser=M_CV.RT_BILL_SER
                                      EXCEPTION WHEN OTHERS THEN
                                      END; 
                                       For D_Cv In (Select rt_Bill_Doc_Type                , 
                                                    From   Ias_Rt_Bill_Dtl_Br
                                                    Where  Rt_Bill_Ser = M_CV.Rt_Bill_Ser) Loop                                                                                                                                                                                         --(12)
   BEGIN                  
                                                       EXCEPTION WHEN OTHERS THEN
                                                       END;
                                                       BEGIN
                                                       UPDATE IAS_RT_BILL_DTL_BR SET POST_CODE=V_POST_CODE
                                                          WHERE RT_BILL_SER=M_CV.RT_BILL_SER AND I_CODE=D_CV.I_CODE AND W_CODE=D_CV.W_CODE;
                                                        EXCEPTION WHEN OTHERS THEN
                                                       END; 
                                             BEGIN
                                                 SELECT 1  INTO V_CNT FROM ( SELECT RT_BILL_NO, RT_BILL_SER FROM IAS_RT_BILL_MST_BR WHERE RT_BILL_SER =M_CV.RT_BILL_SER
                                                                  SELECT RT_BILL_NO, RT_BILL_SER FROM IAS_RT_BILL_DTL_BR WHERE RT_BILL_SER = M_CV.RT_BILL_SER)
                                                                             WHERE ROWNUM<=1 ;
                                             EXCEPTION 
                                             END;
                                                BEGIN
                                                   SELECT 1 INTO V_CNT  FROM IAS_RT_BILL_DTL_BR D 
                                                                                 WHERE RT_BILL_SER =M_CV.RT_BILL_SER
                                                                                   AND EXISTS ( SELECT 1 FROM  
                                                                                                           WHERE           TI.TAX_NO = TM.TAX_NO
                                                EXCEPTION 
                                                END;
                                                       BEGIN
                                                          SELECT 1 INTO V_CNT FROM GNR_TAX_ITM_MOVMNT_BR WHERE DOC_TYPE =5 AND DOC_SER = M_CV.RT_BILL_SER AND ROWNUM<=1 ;
                                                       EXCEPTION
                                                    Begin            
                                                          Select Round (Nvl (Bill_Amt, 0), G_No_Of_Decimal_Ar )  ,
                                                            From     Ias_Rt_Bill_Mst_Br  
                                                            Where Rt_Bill_Ser =M_Cv.Rt_Bill_Ser  
                                                           Select    Round(Sum(Nvl(I_Price,0) * Nvl(I_Qty,0)),G_No_Of_Decimal_Ar)   ,
                                                                           From Ias_RT_Bill_Dtl_Br  Where Rt_Bill_Ser = M_Cv.Rt_Bill_Ser;                                                                                                                                    
                                                   Exception  When Others Then
                                                   End;  
                                              Begin            
                                                      Select   Nvl(Round(Nvl(Vat_Amt,0),G_No_Of_Decimal_Ar),0) 
                                                                             From Ias_Rt_Bill_Mst_Br Where Rt_Bill_Ser = M_Cv.Rt_Bill_Ser And Rownum<=1;                                                                             
                                                       Select  Nvl(Round(Sum(Nvl(Tax_Amt,0) * Nvl(I_Qty,0)),G_No_Of_Decimal_Ar),0) 
                                                       From  Gnr_Tax_Itm_Movmnt_Br Where Doc_Ser = M_Cv.Rt_Bill_Ser ;                                                                             
                                               Exception  When Others Then
                                                Begin            
                                                    Select  Sum(Nvl(Round(Nvl(Vat_Amt,0),G_No_Of_Decimal_Ar),0)) Vat_Amt,
                                                        From Ias_RT_Bill_Dtl_Br 
                                                        Where Rt_Bill_Ser = M_Cv.Rt_Bill_Ser; ---Dtl                                                             
                                                      Select  Nvl(Sum(Round(Nvl(Tax_Amt,0),G_No_Of_Decimal_Ar)),0) Vat_Amt,
                                                           From  Gnr_Tax_Itm_Movmnt_Br 
                                                           Where Doc_Ser = M_Cv.Rt_Bill_Ser; ---Tax                                                                  
                                               Exception  When Others Then
                                    BEGIN   
                                    Exception  When Others Then
                                     BEGIN
                                       DELETE FROM DTS_POST_TRNS_HSTRY WHERE DOC_SER=M_CV.RT_BILL_SER;
                                       EXCEPTION WHEN OTHERS THEN 
                                       END;        
                                             BEGIN
                                               DELETE FROM DTS_POST_TRNS_HSTRY WHERE DOC_SER=M_CV.RT_BILL_SER;
                                             EXCEPTION WHEN OTHERS THEN 
                                             END;                                                           
                                             BEGIN
                                             INSERT INTO DTS_POST_TRNS_HSTRY(DOC_TYPE,DOC_NO,DOC_SER,DOC_DATE,MSG_TXT,LINE_NO)  
                                             EXCEPTION WHEN OTHERS THEN 
                                             END; 
                                 Exception
                        PROCEDURE CHK_ITM  ( P_I_CODE                IN IAS_ITM_MST.I_CODE%TYPE          
                        BEGIN
                               BEGIN
                      SELECT 1 INTO V_CNT
                                           FROM IAS_ITM_MST 
                                          WHERE I_CODE = P_I_CODE
                               EXCEPTION WHEN OTHERS THEN
                               END;
                               BEGIN
                                 SELECT 1,P_SIZE,NVL(NO_SALE,0),NVL(INACTIVE,0) INTO V_CNT, P_P_SIZE,V_NO_SAL_FLG,V_INACTV_FLG
                                   FROM IAS_ITM_DTL 
                                  WHERE I_CODE = P_I_CODE AND ITM_UNT = P_ITM_UNT AND ROWNUM<=1;  
                               EXCEPTION WHEN OTHERS THEN
                               END;
                                BEGIN
                                SELECT NVL(INACTIVE,0),CONN_BRN_NO INTO V_INACTV_FLG,V_BRN_NO 
                                   FROM WAREHOUSE_DETAILS WHERE W_CODE = P_W_CODE AND ROWNUM<=1;
                               EXCEPTION 
                               END;     
                               SELECT NVL(USE_EXP_DATE,0) USE_EXP_DATE,NVL(USE_QTY_FRACTION,0) USE_QTY_FRACTION ,USE_BATCH_NO,
                                 FROM IAS_ITM_MST WHERE I_CODE = P_I_CODE AND ROWNUM<=1;
                             BEGIN
                             END;
                         PROCEDURE CHK_AVL_QTY (  P_I_CODE        IN ITEM_MOVEMENT.I_CODE%TYPE 
                        BEGIN    
                        select AVL_QTY,RSRV_QTY,NET_OUT_BILL_QTY,PRCHS_ORD_QTY
                                             FROM TABLE(Inv_Qty_Pkg.Get_Avl_Qty_Fnc  ( P_Itm_Code        =>P_I_CODE
                        EXCEPTION WHEN OTHERS THEN
                        PROCEDURE Update_Bill_Disc_Prc  (P_docser In Number, P_disc_type In Number) IS
                        Begin
                              Begin
                                  Update Ias_Bill_Dtl_Br a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Bill_Mst_Br
                                                                          Where bill_ser=a.bill_ser
                                                               dis_amt =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Bill_Mst_Br
                                                                          Where bill_ser=a.bill_ser
                                   where bill_ser=P_docser;
                                Exception When others Then
                              End;
                          Begin
                                  Update Ias_Bill_Dtl_Br a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Bill_Mst_Br
                                                                          Where bill_ser=a.bill_ser
                                                               dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0)) + nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0) From Ias_Bill_Mst_Br
                                                                          Where bill_ser=a.bill_ser
                                   where bill_ser=P_docser;
                                Exception When others Then
                              End;
                        PROCEDURE Update_Other_Charges(P_Bill_Ser Number ) IS
                        BEGIN
                            Begin
                            Update Ias_Bill_Dtl_Br Set Othr_Amt=0,Othr_Amt_Disc=0,Vat_Amt_Othr=0 where bill_ser=P_Bill_Ser;       
                             Exception When others Then
                          End;                                  
                           V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From OTHER_CHARGES_BR 
                                                                                  Where Bill_Ser = '||P_Bill_Ser||'
                             V_Cntf := Ias_Gen_Pkg.Get_Cnt('Select 1 From Sales_Charges 
                                                                                  Where Nvl(Inv_Item,0)=1    
                                Begin
                                      Update Ias_Bill_Dtl_Br a Set Othr_Amt=(Select Sum(Decode(Nvl(Unit_Amt,0),0,(nvl(OTHER_CHARGES_ITEMS_BR.Amt,0)/Decode(Nvl(A.I_Qty,0),0,Decode(Nvl(A.Free_Qty,0),0,1,A.Free_Qty),A.I_Qty)),Unit_Amt)) From OTHER_CHARGES_ITEMS_BR
                                                                      Where OTHER_CHARGES_ITEMS_BR.bill_ser=a.bill_ser
                                                                Othr_Amt_Disc=(Select Sum(Decode(Nvl(Unit_Amt,0),0,(nvl(OTHER_CHARGES_ITEMS_BR.Amt,0)/Decode(Nvl(A.I_Qty,0),0,Decode(Nvl(A.Free_Qty,0),0,1,A.Free_Qty),A.I_Qty)),Unit_Amt))*-1 From OTHER_CHARGES_ITEMS_BR
                                                                              Where OTHER_CHARGES_ITEMS_BR.bill_ser=a.bill_ser
                                                                                And Exists(Select 1 From Sales_Charges
                                                                                                              Where Sc_No = OTHER_CHARGES_ITEMS_BR.Sc_No
                                         where bill_ser=P_Bill_Ser;
                                         Update Ias_Bill_Dtl_Br a Set Othr_Amt=(Select Sum(nvl(OTHER_CHARGES_ITEMS_BR.Amt,0)/Decode(Nvl(A.I_Qty,0),0,Decode(Nvl(A.Free_Qty,0),0,1,A.Free_Qty),A.I_Qty)) From OTHER_CHARGES_ITEMS_BR
                                                                      Where OTHER_CHARGES_ITEMS_BR.bill_ser = a.bill_ser
                                                                Othr_Amt_Disc=(Select Sum(nvl(OTHER_CHARGES_ITEMS_BR.Amt,0)/Decode(Nvl(A.I_Qty,0),0,Decode(Nvl(A.Free_Qty,0),0,1,A.Free_Qty
),A.I_Qty))*-1 From OTHER_CHARGES_ITEMS_BR
                                                                              Where OTHER_CHARGES_ITEMS_BR.bill_ser = a.bill_ser
                                                                                And Exists(Select 1 From Sales_Charges
                                                                                                              Where Sc_No = OTHER_CHARGES_ITEMS_BR.Sc_No
                                         where bill_ser=P_Bill_Ser;
                                      Exception When others Then
                                    End;                                  
                            BEGIN    
                                Select Bill_Amt InTo V_BillAmt  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = P_Bill_Ser                 
                                   BEGIN    
                                        Select 1 InTo V_Cnt  From Ias_Bill_Dtl_Br
                                         Where Bill_Ser = P_Bill_Ser     
                                   Exception When others Then
                                           Select Sum(Nvl(Free_Qty,0)*Nvl(I_Price,0)) InTo V_FBillAmt From Ias_Bill_Dtl_Br
                                                  Where Bill_Ser = P_Bill_Ser;
                                      End;               
                                    Exception When others Then
                                  End;                           
                                V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From OTHER_CHARGES_BR 
                                                                                  Where Bill_Ser ='|| P_Bill_Ser ||'
                                    Begin                     
                                              Update Ias_Bill_Dtl_Br a Set Othr_Amt=(Select Nvl(A.Othr_Amt,0)+(Sum(nvl(OTHER_CHARGES_BR.Amt,0))/nvl(V_BillAmt,0))* nvl(a.i_price,0) From OTHER_CHARGES_BR
                                                                          Where OTHER_CHARGES_BR.bill_ser=a.bill_ser
                                                                Othr_Amt_Disc=(Select Nvl(A.Othr_Amt_Disc,0)+(Sum(nvl(OTHER_CHARGES_BR.Amt,0))/nvl(V_BillAmt,0))* nvl(a.i_price,0)*-1 From OTHER_CHARGES_BR
                                                                                      Where OTHER_CHARGES_BR.bill_ser=a.bill_ser
                                                                                        And Exists(Select 1 From Sales_Charges
                                                                                                              Where Sc_No = OTHER_CHARGES_BR.Sc_No
                                                 where bill_ser=P_Bill_Ser
                                            Update Ias_Bill_Dtl_Br a Set Othr_Amt=(Select Nvl(A.Othr_Amt,0)+(Sum(nvl(OTHER_CHARGES_BR.Amt,0))/nvl(V_FBillAmt,0))* nvl(a.i_price,0) From OTHER_CHARGES_BR
                                                                          Where OTHER_CHARGES_BR.bill_ser=a.bill_ser
                                                                Othr_Amt_Disc=(Select Nvl(A.Othr_Amt_Disc,0)+(Sum(nvl(OTHER_CHARGES_BR.Amt,0))/nvl(V_FBillAmt,0))* nvl(a.i_price,0)*-1 From OTHER_CHARGES_BR
                                                                                      Where OTHER_CHARGES_BR.bill_ser=a.bill_ser
                                                                                        And Exists(Select 1 From Sales_Charges
                                                                                                              Where Sc_No = OTHER_CHARGES_BR.Sc_No
                                                 where bill_ser=P_Bill_Ser;
                                          Exception When others Then
                                        End;                                  
                                      Begin
               Update Ias_Bill_Mst_Br a Set Vat_Amt_Othr =(Select sum(nvl(Vat_Amt,0)) From OTHER_CHARGES_BR
                                                                                  Where bill_ser=a.bill_ser
                                           where bill_ser=P_Bill_Ser;
                                          Update Ias_Bill_Dtl_Br a Set Vat_Amt_Othr =(Select (nvl(Ias_Bill_Mst_Br.Vat_Amt_Othr,0)/nvl(Ias_Bill_Mst_Br.bill_amt,0))*nvl(a.i_price,0) From Ias_Bill_Mst_Br
                                                                                  Where bill_ser=a.bill_ser
                                           where bill_ser=P_Bill_Ser;
                                           Update Ias_Bill_Mst_Br a Set OTHR_AMT =(Select sum(nvl(AMT,0)) From OTHER_CHARGES_BR
                                                                                  Where bill_ser=a.bill_ser
                                           where bill_ser=P_Bill_Ser;                
                                        Exception When others Then
                                        End;
                                  Begin
                                   Update Ias_Bill_Mst_Br a Set Vat_Amt_Othr =0
                                   where bill_ser=P_Bill_Ser;
                                  Update Ias_Bill_Dtl_Br a Set Vat_Amt_Othr =0
                                   where bill_ser=P_Bill_Ser;          
                                    Exception When others Then
                                    End;
                        Exception When others Then
                        PROCEDURE Insert_Installemnt_BR (BillNo      Number,
                        BEGIN
                                         Select 1 I_No, 
                                         From Ias_Bill_Mst_Br
                                        where Ias_Bill_Mst_Br.bill_ser= BillSer               
                                        Begin    
                                               Begin         
                                                      Insert Into Installment_BR (  Doc_Type, 
                                             Exception
                                              End;     
                                        End;
                        PROCEDURE Update_RtBill_Disc_Prc (P_docser In Number, P_disc_type In Number) Is
                        Begin
                              Begin
                                  Update Ias_Rt_Bill_Dtl_Br a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst_Br
                                                                              Where rt_bill_ser=a.rt_bill_ser
(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst_Br
                                                                                  Where rt_bill_ser=a.rt_bill_ser
                                   where rt_bill_ser=P_docser;
                                Exception When others Then
                              End;
                              Begin
                                  Update Ias_Rt_Bill_Dtl_Br a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst_Br
                                                                              Where rt_bill_ser=a.rt_bill_ser
                                                               dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0)) + nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0) From Ias_Rt_Bill_Mst_Br
                                                                          Where rt_bill_ser=a.rt_bill_ser
                                   where rt_bill_ser=P_docser;
                                Exception When others Then
                              End;
                        PROCEDURE Update_RtBill_Other_Charges(p_rt_bill_ser number) IS
                        BEGIN
                            Begin
                            Update Ias_Rt_Bill_Dtl_Br Set Othr_Amt=0,Othr_Amt_Disc=0,Vat_Amt_Othr=0 where Rt_Bill_Ser=P_Rt_Bill_Ser;       
                                  Exception When others Then
                          End;   
                            Begin
                             Select 1 InTo Cnt  From Other_Charges_br 
                                  Where Bill_Ser = P_Rt_Bill_Ser 
                           Exception When others Then
                           End;
                        Begin
                             Select BILL_AMT InTo v_BILL_AMT  From IAS_RT_BILL_MST_BR 
                                  Where rt_Bill_Ser = P_Rt_Bill_Ser ;            
                           Exception When others Then
                           End;
                            Begin
                             Select 1 InTo Cntf 
 From Sales_Charges 
                              Where Nvl(Inv_Item,0)=1
                           Exception When others Then
                           End;                                                         
                               Begin
                                  Update Other_Charges_br a Set Amt=(Select Round(nvl(Sum(Amt),0),G_NO_OF_DECIMAL_AR) Amt
                                                                                                    From Other_Charges_Items_br 
                                                                                                      Where bill_type = 3
                                     Where bill_type = 3
                                  Exception When others Then
                                End;    
                                  Begin
                                      Update Ias_Rt_Bill_Dtl_Br a Set Othr_Amt=(Select Sum(Decode(Nvl(Unit_Amt,0),0,(nvl(Other_Charges_Items_br.Amt,0)/Decode(Nvl(A.I_Qty,0),0,Decode(Nvl(A.Free_Qty,0),0,1,A.Free_Qty),A.I_Qty)),Unit_Amt)) From Other_Charges_Items_br
                                                                                        Where Other_Charges_Items_br.Bill_ser=a.Rt_Bill_ser                                                                  
                                                                   Othr_Amt_Disc=(Select Sum(Decode(Nvl(Unit_Amt,0),0,(nvl(Other_Charges_Items_br.Amt,0)/Decode(Nvl(A.I_Qty,0),0,Decode(Nvl(A.Free_Qty,0),0,1,A.Free_Qty),A.I_Qty)),Unit_Amt)) From Other_Charges_Items_br
                                                                                        Where Other_Charges_Items_br.Bill_ser=a.Rt_Bill_ser                                                                  
                                                                                          And Exists(Select 1 From Sales_Charges
                                                                                                              Where Sc_No = Other_Charges_Items_br.Sc_No
                                         Where Rt_Bill_ser=P_Rt_Bill_Ser;
                                      Exception When others Then
                                      End;
                                    Begin
                                      Update Ias_Rt_Bill_Dtl_Br a Set Othr_Amt=(Select Sum(nvl(Other_Charges_Items_br.Amt,0)/Decode(Nvl(A.I_Qty,0),0,Decode(Nvl(A.Free_Qty,0),0,1,A.Free_Qty),A.I_Qty)) From Other_Charges_Items_br
                                                                                        Where Other_Charges_Items_br.Bill_ser=a.Rt_Bill_ser                                                                  
                                                                   Othr_Amt_Disc=(Select Sum(nvl(Other_Charges_Items_br.Amt,0)/Decode(Nvl(A.I_Qty,0),0,Decode(Nvl(A.Free_Qty,0),0,1,A.Free_Qty),A.I_Qty)) From Other_Charges_Items_br
                                                                                        Where Other_Charges_Items_br.Bill_ser=a.Rt_Bill_ser                                                                  
                                                                                          And Exists(Select 1 From Sales_Charges
                                                                                                              Where Sc_No = Other_Charges_Items_br.Sc_No
                                         Where Rt_Bill_ser=P_Rt_Bill_Ser;
                                      Exception When others Then
                                      End;                                  
                             Begin    
                                Select 1 InTo Cnt  From Other_Charges_br 
                                      Where Bill_Ser = P_Rt_Bill_Ser 
                              Exception When others Then
                              End;                                          
                                Begin        
                                      Update Ias_Rt_Bill_Dtl_Br a Set Othr_Amt=(Select Nvl(A.Othr_Amt,0)+(Sum(nvl(Other_Charges_br.Amt,0))/nvl(v_BILL_AMT,0))*nvl(a.i_price,0) From Other_Charges_br
                                                                                                Where Other_Charges_br.Bill_ser=a.Rt_Bill_ser
                                                                                                     Othr_Amt_Disc=(Select Nvl(A.Othr_Amt_Disc,0)+(Sum(nvl(Other_Charges_br.Amt,0))/nvl(v_BILL_AMT,0))*nvl(a.i_price,0) From Other_Charges_br
                                                                                                            Where Other_Charges_br.Bill_ser=a.Rt_Bill_ser
                                                                                                                               And Exists(Select 1 From Sales_Charges
                                                                                                              Where Sc_No = Other_Charges_br.Sc_No
                                         Where Rt_Bill_ser=P_Rt_Bill_Ser
                                    Exception When others Then
                                  End;                                  
                             Begin
                                 Update Ias_Rt_Bill_Mst_Br Set Othr_amt = (Select Round(nvl(sum(amt),0),G_NO_OF_DECIMAL_AR) 
                                                                                                                   From Other_Charges_br
                                                                                                                  where bill_type=3
                                                                                        Othr_Amt_Disc = (Select Round(nvl(sum(amt),0),G_NO_OF_DECIMAL_AR) 
                                                                                                                       From Other_Charges_br
                                                                                                                 where bill_type=3
                                                                                                                        And Exists(Select 1 From Sales_Charges
                                                                                                              Where Sc_No = Other_Charges_br.Sc_No
                                  where Rt_bill_ser=P_Rt_Bill_Ser; 
                             Exception When others Then
                             End; 
                                      Begin
                                           Update Ias_Rt_Bill_Mst_Br a Set Vat_Amt_Othr =(Select sum(nvl(Vat_Amt,0)) From Other_Charges_br
                                                                                        Where Bill_ser=a.Rt_Bill_ser
                                           where Rt_Bill_ser=P_Rt_Bill_Ser;
                                          Update Ias_Rt_Bill_Dtl_Br a Set Vat_Amt_Othr =(Select (nvl(Ias_Rt_Bill_Mst_Br.Vat_Amt_Othr,0)/nvl(Ias_Rt_Bill_Mst_Br.Bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst_Br
                                                                                       Where Rt_Bill_ser=a.Rt_Bill_ser
                                           where Rt_Bill_ser=P_Rt_Bill_Ser;
                                        Exception When others Then
                                        End;
                                  Begin
                                   Update Ias_Rt_Bill_Mst_Br a Set Vat_Amt_Othr =0
                                   where Rt_Bill_ser=P_Rt_Bill_Ser;
                                  Update Ias_Rt_Bill_Dtl_Br a Set Vat_Amt_Othr =0
                                   where Rt_Bill_ser=P_Rt_Bill_Ser;
                                      Update Other_Charges_br a Set Vat_Per=0,Vat_Amt =0
                                   where Bill_Type=3
                                    Exception When others Then
                                    End;
 CREATE OR REPLACE PACKAGE DTS_GET_DATA_BILL_PKG IS
FUNCTION GET_BILL_MST ( P_rep_code          In Varchar2 Default Null ,
FUNCTION GET_BILL_dtl ( P_BILL_SER          In ias_bill_mst.BILL_SER%TYPE Default Null,
FUNCTION GET_OTHR_CHRG ( P_BILL_SER         In ias_bill_mst.BILL_SER%TYPE Default Null,
FUNCTION GET_TAX_ITM_MOVMNT (  P_BILL_SER          In ias_bill_mst.BILL_SER%TYPE Default Null,
 CREATE OR REPLACE PACKAGE BODY DTS_GET_DATA_BILL_PKG IS
FUNCTION GET_BILL_MST (     P_rep_code          In Varchar2 Default Null ,
   BEGIN 
        V_CNT := IAS_GEN_PKG.GET_CNT('Select 1 From All_Users Where UserName='''||V_YR||''' And RowNum<=1');
         Begin
           Select Nvl(User_view_doc_entr,0) Into V_user_view_doc_entr
             From Privilege_fixed
            Where U_id = P_usr_no;
         Exception When Others Then
         Begin
           Select nvl(AR_Wc_Type,1),NVL(P_Rate_Type,0),NVL(Vat_Prd_Typ,0),NVL(Use_Vat,0) 
             From Ias_para_ar,Ias_para_gl,Ias_para_GEN;           
         Exception When Others Then
            V_WHR:=V_WHR||'And Exists (Select 1
                                    From Ias_Shw_Doc_Priv
                                   Where U_Id = '||P_usr_no||' 
         V_WHR:=V_WHR||' and Exists ( Select 1 From S_Brn_Usr_Priv
                        Where U_Id = '||P_usr_no||'  
              V_Price_Include_Vat := Ias_Gen_Pkg.Get_Cnt('Select Use_Price_Include_Vat From '||V_YR||'Ias_Para_Gen');
              V_prv_Use_Vat       := Ias_Gen_Pkg.Get_Cnt('Select Use_Vat From '||V_YR||'Ias_Para_Gen');             
              Begin
                Select Clc_Typ_No Into V_Clc_Typ_No_Tax From Gnr_Tax_Typ_Clc_Mst Where Clc_Tax_Typ=4 and rownum<=1;
              Exception When Others Then
              End; 
           V_SQL:= ' SELECT Bill_date,                                                   
   FROM '||V_YR||'Ias_Bill_Mst M, '||V_YR||'S_Flags
    WHERE Bill_Doc_Type = Flg_value
                                       ORDER BY bill_no, bill_doc_type, bill_date';
              V_SQL:= ' SELECT Bill_date,                                                   
                                        FROM '||V_YR||'Ias_Bill_Mst M, '||V_YR||'S_Flags
                                       WHERE Bill_Doc_Type = Flg_value
                                        SELECT Bill_date,                                                   
                                        FROM '||V_YR||'Ias_Bill_Mst_BR M, '||V_YR||'S_Flags
                                       WHERE Bill_Doc_Type = Flg_value
                 BEGIN
                 Exception  WHEN NO_DATA_FOUND THEN
                  End; 
 FUNCTION GET_BILL_dtl ( P_BILL_SER          In ias_bill_mst.BILL_SER%TYPE Default Null,
   BEGIN 
        V_CNT := IAS_GEN_PKG.GET_CNT('Select 1 From All_Users Where UserName='''||V_YR||''' And RowNum<=1');
         Begin
           select nvl(Apprvd_Freeqty_Dscnt_Rtrn_Si,0),nvl(Show_Disc_Per_Items_Ar,0),nvl(Use_Price_Include_Vat,0),nvl(Use_Vat,0) 
           from ias_para_ar,ias_para_gen;
         Exception when Others Then 
         End; 
         V_SQL:=  'SELECT D.i_code,
                                                          From '||v_YR||'IAS_BILL_MST M ,'||v_YR||'IAS_BILL_DTL D,IAS_ITM_MST I
                                                          Where M.Bill_Ser=D.Bill_Ser  
            V_prv_Price_Include_Vat := Ias_Gen_Pkg.Get_Cnt('Select Use_Price_Include_Vat From '||V_YR||'Ias_Para_Gen');
              V_prv_Use_Vat       := Ias_Gen_Pkg.Get_Cnt('Select Use_Vat From '||V_YR||'Ias_Para_Gen');              
              Begin
                Select Clc_Typ_No Into V_Clc_Typ_No_Tax From Gnr_Tax_Typ_Clc_Mst Where Clc_Tax_Typ=4 and rownum<=1;
              Exception When Others Then
              End;  
        Begin
                     Begin
                         Select nvl(Sum(b.i_qty),0),nvl(Sum(b.free_qty),0) Into rt_qty,rt_fqty From Ias_Rt_Bill_Mst a,Ias_Rt_Bill_Dtl b
                        Where a.rt_bill_ser = b.rt_bill_ser
                     Exception when others Then  
                     Begin
                         Select nvl(Sum(b.i_qty),0),nvl(Sum(b.free_qty),0) Into rt_qty_br,rt_fqty_br From Ias_Rt_Bill_Mst_br a,Ias_Rt_Bill_Dtl_br b
                        Where a.rt_bill_ser = b.rt_bill_ser
                     Exception when others Then  
                     Begin
                           Rtqty_Py := Ias_Gen_Pkg.Get_Cnt('Select nvl(sum(D.p_qty),0) From  '||V_Yr||'Ias_Rt_Bill_Mst m,'||V_Yr||'Ias_Rt_Bill_Dtl d
                                                                                                            Where m.rt_bill_ser=d.rt_bill_ser
                           Rtfqty_Py := Ias_Gen_Pkg.Get_Cnt('Select nvl(sum(Nvl(D.free_qty,0)*Nvl(P_Size,1)),0) From  '||V_Yr||'Ias_Rt_Bill_Mst m,'||V_Yr||'Ias_Rt_Bill_Dtl d
                                                                                                            Where m.rt_bill_ser=d.rt_bill_ser
                     Exception When Others Then
                     End; 
                     Begin
                         Select nvl(Sum(b.i_qty),0),nvl(Sum(b.free_qty),0) Into rt_qty,rt_fqty From Ias_Rt_Bill_Mst a,Ias_Rt_Bill_Dtl b
                        Where a.rt_bill_ser = b.rt_bill_ser
                     Exception when others Then  
                     Begin
                         Select nvl(Sum(b.i_qty),0),nvl(Sum(b.free_qty),0) Into rt_qty_br,rt_fqty_br From Ias_Rt_Bill_Mst_br a,Ias_Rt_Bill_Dtl_br b
                        Where a.rt_bill_ser = b.rt_bill_ser
                     Exception when others Then  
                       Begin
                          Select Nvl (Sum (I_Qty), 0),
                            From Detail_Out_Bills
                           Where Bill_No = V_Blk_Tbl_Dtl(I).Bill_No
                       Exception
                       End;
                        Begin       
                          SELECT 
                         INTO G_Bill_Dtl_REC FROM dual ;
                        Exception 
                        End;         
         End;                              
FUNCTION GET_OTHR_CHRG ( P_BILL_SER         In ias_bill_mst.BILL_SER%TYPE Default Null,
   BEGIN 
       V_CNT := IAS_GEN_PKG.GET_CNT('Select 1 From All_Users Where UserName='''||V_YR||''' And RowNum<=1');
           V_SQL:= '  Select a.sc_no,sc_name,a.a_code,per,a.amt
                                            From '||V_YR||'other_charges a ,sales_charges  
                                          Where sales_charges.sc_no=a.sc_no
                       Select a.sc_no,sc_name,a.a_code,per,a.amt
                                            From '||V_YR||'other_charges_br a ,sales_charges  
                                          Where sales_charges.sc_no=a.sc_no
                                            And Exists (Select 1 from '||V_YR||'ias_bill_mst_br
                                                             where bill_ser=a.bill_ser 
                 BEGIN
                 Exception  WHEN NO_DATA_FOUND THEN
                  End; 
FUNCTION GET_TAX_ITM_MOVMNT (   P_BILL_SER          In ias_bill_mst.BILL_SER%TYPE Default Null,
        V_CNT := IAS_GEN_PKG.GET_CNT('Select 1 From All_Users Where UserName='''||V_YR||''' And RowNum<=1');
         Begin
           select nvl(CALC_VAT_AMT_TYPE,0),nvl(Show_Disc_Per_Items_Ar,0),nvl(USE_VAT,0) ,NVL(Clc_Tax_Dscnt2,0),NVL(Clc_Tax_Dscnt3,0),NVL(P_Rate_Type,0)
           from ias_para_ar,ias_para_gen,ias_para_gL;
         Exception when Others Then 
         End;
      V_WHR:='  And Exists(Select 1 From IAS_BILL_MST_B
                               Where BILL_SER=T.DOC_SER 
           V_SQL:= 'SELECT T.DOC_TYPE, 
                                                  FROM table( DTS_GET_DATA_BILL_PKG.GET_BILL_dtl(   P_BILL_SER=>'||P_BILL_SER ||',
                                                 WHERE D.BILL_SER          = T.DOC_SER                                                                                                      
          Begin
                 BEGIN
                 Exception  WHEN NO_DATA_FOUND THEN
                  End; 
         End; 
SELECT OBJECT_NAME VW_NM   FROM USER_OBJECTS  WHERE UPPER(OBJECT_TYPE) = UPPER(''PACKAGE'')  AND UPPER(OBJECT_NAME) LIKE  UPPER(''DTS_%'')"
                                                 WHERE D.BILL_SER          = T.DOC_SER                                                                                                      
DTS_PROCEDURE_PKG
/TMP1/DTS_PROCEDURE_PKG
"DTS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
 CREATE OR REPLACE procedure Dts_Updt_Prv_Trns_Pln IS 
            SELECT 0 Doc_Typ,m.V_Ser Doc_ser ,d.Rep_Code,d.AC_CODE_DTL C_Code,m.Voucher_Date Doc_Date
                                  FROM Voucher_detail d,Vouchers m
                                  WHERE m.v_ser=d.v_ser
             SELECT 1 Doc_Typ,m.Quot_Ser Doc_ser ,m.Rep_Code,m.C_Code,m.Quot_Date Doc_Date
                                  FROM QUOTATION m
                                  WHERE nvl(m.external_post,0)=70
              SELECT 2 Doc_Typ,m.Order_Ser Doc_ser ,m.Rep_Code,m.C_Code,m.Order_Date Doc_Date
                                  FROM Sales_Order m
                                  WHERE nvl(m.external_post,0)=70
              SELECT 3 Doc_Typ,m.bill_Ser Doc_ser ,m.Rep_Code,m.C_Code,m.bill_Date Doc_Date
                                  FROM Ias_Bill_mst_br m
                                  WHERE  nvl(m.bill_post,0)=0
              SELECT  4 Doc_Typ,m.Rt_bill_Ser Doc_ser ,m.Rep_Code,m.C_Code,m.rt_bill_Date Doc_Date
                                  FROM Ias_Rt_Bill_mst_br m
                                  WHERE nvl(m.rt_bill_post,0)=0
              SELECT  5 Doc_Typ,m.Doc_Ser Doc_ser ,m.Rep_Code,m.C_Code,m.Doc_Date Doc_Date
                                  FROM DTS_STK_CST_MST m
                                  WHERE  m.Rep_Code is Not Null
       Begin
       EXCEPTION WHEN NO_DATA_FOUND THEN   
 CREATE OR REPLACE PROCEDURE DTS_INSRT_ITMS_SRLNO(P_DOC_TYPE IN NUMBER,P_DOC_SER IN IAS_BILL_MST.BILL_SE
       BEGIN
              FOR I IN  (SELECT M.BILL_DOC_TYPE, M.BILL_NO DOC_NO, 
                        FROM IAS_BILL_MST_BR M,IAS_BILL_DTL_BR D, DTS_ITMS_SRL_BR S
                        WHERE M.BILL_SER=D.BILL_SER  
                      INSERT INTO IAS_ITEM_SERIALNO( 
                      UPDATE  DTS_ITMS_SRL_BR SET PST_ST=1 WHERE DOC_TYPE=3 AND DOC_SER=I.DOC_SER AND I_CODE=I.I_CODE AND SRL_NO=I.SRL_NO;
                  FOR I IN  (SELECT M.RT_BILL_DOC_TYPE, M.RT_BILL_NO DOC_NO, 
                            FROM IAS_RT_BILL_MST_BR M,IAS_RT_BILL_DTL_BR D, DTS_ITMS_SRL_BR S
                            WHERE M.RT_BILL_SER=D.RT_BILL_SER  
                          INSERT INTO IAS_ITEM_SERIALNO( 
                      UPDATE  DTS_ITMS_SRL_BR SET PST_ST=1 WHERE DOC_TYPE=4 AND DOC_SER=I.DOC_SER AND I_CODE=I.I_CODE AND SRL_NO=I.SRL_NO;
       EXCEPTION WHEN NO_DATA_FOUND THEN   
CREATE OR REPLACE PROCEDURE DTS_APPRV_MULTI_DYLY_PLN
                      (SELECT  SM.DOC_SER_REF PRD_PLN_SER,SM.DOC_NO DYLY_PLN_NO,SM.DOC_SER DYLY_PLN_SER,SM.DOC_DATE DYLY_PLN_DATE
                              FROM DTS_PLAN_SMAN_MST SM WHERE SM.DOC_SER_REF =P_PRD_PLN_SER ) ;         
       BEGIN
                        BEGIN  
                        EXCEPTION  
                        BEGIN  
                          UPDATE DTS_PLAN_SMAN_MST SET APPROVED=P_APPRVD ,
                                    WHERE DOC_SER=I.DYLY_PLN_SER; 
                           EXCEPTION  
                        BEGIN  
                          UPDATE S_APPRVD_MOV SET  APPRVD=P_APPRVD ,
                                    WHERE DOC_TYP=1401 
                           EXCEPTION  
                        BEGIN  
                        EXCEPTION  
                                      RAISE_APPLICATION_ERROR (-20007,'Err.In Delete Daily Plan From Apprvd Movmnt '||SQLERRM) ;
       EXCEPTION WHEN NO_DATA_FOUND THEN   
CREATE OR REPLACE PROCEDURE DTS_INSRT_GPS_EVENT_HSTRY IS  
       BEGIN
             INSERT INTO GPS_EVENT_HSTRY (
               GPS_DATE  FROM GPS_EVENT
               WHERE TO_DATE(GPS_DATE,'DD/MM/YYYY')<TO_DATE(SYSDATE,'DD/MM/YYYY');
           DELETE FROM GPS_EVENT
             WHERE TO_DATE(GPS_DATE,'DD/MM/YYYY')<TO_DATE(SYSDATE,'DD/MM/YYYY');
             EXCEPTION
                             JOB_TYPE        => 'STORED_PROCEDURE',
 CREATE OR REPLACE PROCEDURE   DTS_DSTR_CRDT_PRD_PRC (p_rep_code   IN   sales_man.reprs_code%TYPE )  Is                                             
                             Cursor Cst_Rep Is select c_code from DTS_V_SMAN_CST
                                                                  where SMAN_TYP=1
                                            BEGIN
                                               BEGIN
                                                  SELECT ar_ac_link_type, paid_instllmnt_man, no_of_decimal_ar
                                                    FROM ias_para_ar;
                                               EXCEPTION
                                               END;
                                               BEGIN
                                                  SELECT u_id
                                                    FROM user_r
                                                   WHERE rep_code IS NOT NULL AND rep_code = v_rep_code;
                                               EXCEPTION
                                               END;
                                               BEGIN
                                                  SELECT NVL (ar_allow_sales_prv_dr, 0), NVL (ar_chk_prd_aftr_due, 0),
                                                    FROM privilege_fixed
                                                   WHERE u_id = v_user_no;
                                               EXCEPTION
                                               END;
                                                               BEGIN
                                                                  SELECT credit_period,
                                             FROM customer
                                                                   WHERE c_code = I.c_code;
                                                               EXCEPTION
                                                               END;
                                                                 BEGIN
                                                                    SELECT COUNT (DISTINCT a_cy)
                                                                      FROM ias_post_dtl
                                                                     WHERE c_code = I.c_code;
                                                                 EXCEPTION
                                                                 END;
EXCEPTION
CREATE OR REPLACE Procedure Dts_Chk_Stp_Prc(P_Usr_No In Number, P_Lng_No Number Default 1) Is
            Begin
               Begin
                  Select Nvl(Cc_Avail, 0)
                  From   Ias_Para_Gen
               Exception
               End;
               Begin
                  Delete From Dts_Chk_Stp_Tmp;
               Exception
               End;
               Begin
                  From   User_R
                  Where  U_Id = P_Usr_No And Rownum <= 1;
               Exception
               End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                  Begin
                     Insert Into Dts_Chk_Stp_Tmp
                  Exception
                  End;
               Begin
                  Select Count(*)
                  From   User_R
                  Where  Rep_Code = V_Rep_Code;
               Exception
               End;
                  Begin
                     Insert Into Dts_Chk_Stp_Tmp
                  Exception
                  End;
               Begin
                  Select 1
                  From   Sales
                  Where  Reprs_Code = V_Rep_Code And Rownum <= 1;
               Exception
               End;
                  Begin
                     Insert Into Dts_Chk_Stp_Tmp
                  Exception
                  End;
               For I In (Select Reprs_Code Rep_Code
                         From   Sales_Man
                         Where  Reprs_Code = V_Rep_Code And Rownum <= 1) Loop
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                     Begin
                        Select 1
                        From   S_Brn_Usr_Priv
                        Where  U_Id = P_Usr_No And Brn_No = V_Conn_Brn_No And Add_Flag = 1 And Rownum <= 1;
                     Exception
                     End;
                        Begin
                            Begin
                              Select Decode(P_Lng_No, 1, Nvl(Brn_Lname, Brn_Fname), Nvl(Brn_Fname, Brn_Lname)) Into V_Brn_Nm
                              From S_Brn
                              Where Brn_No=V_Conn_Brn_No
                            Exception When Others Then
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                     Begin
                        Select 1
                        From   Sales_Man
                        Where  Cash_No = I.Cash_No And Reprs_Code <> I.Rep_Code And Rownum <= 1;
                     Exception
                     End;
                     Begin
                       Select Decode(P_Lng_No, 1, Nvl(Cash_Name, Cash_E_Name), Nvl(Cash_E_Name, Cash_Name))
                       From   Cash_In_Hand
                       Where  Cash_No = I.Cash_No And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Select Count(1)
                        From   Sales_Man
                        Where  Cash_No In(Select Cash_No
                                          From   Cash_In_Hand
                                          Where  Nvl(Cash_Sr, 0) In(Select Nvl(Cash_Sr, 0)
                                                                    From   Cash_In_Hand
                                                                    Where  Cash_No = I.Cash_No));
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Select 1
                        From   Priv_Cash
                        Where  U_Id = P_Usr_No And Add_Flag = 1 And Cash_Type = 1 And Cash_No = I.Cash_No And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Select 1
                        From   Cash_In_Hand
                        Where  Cash_No = I.Cash_No And Nvl(Conn_Brn_No, 0) = Nvl(V_Conn_Brn_No, 0) And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                     Begin
                       Select Decode(P_Lng_No, 1, Nvl(Bank_Name, Bank_E_Name), Nvl(Bank_E_Name, Bank_Name)),Nvl(Rcpt_srl_typ, 0)
                       From   Cash_At_Bank
                       Where  Bank_No = I.Bank_No And Rownum <= 1;
                     Exception
                     End;
                          Begin
                               Insert Into Dts_Chk_Stp_Tmp
                          Exception
                          End;
                         Begin
                            Select 1
                            From   Sales_Man
                            Where  Bank_No = I.Bank_No And Reprs_Code <> I.Rep_Code And Rownum <= 1;
                         Exception
                         End;
                            Begin
                               Insert Into Dts_Chk_Stp_Tmp
                            Exception
                            End;
                            Begin
                               Insert Into Dts_Chk_Stp_Tmp
                            Exception
                            End;                                              
                     Begin
                        Select 1
                        From   Priv_Cash
                        Where  U_Id = P_Usr_No And Add_Flag = 1 And Cash_Type = 2 And Cash_No = I.Bank_No And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Select 1
                        From   DTS_V_SMAN_BANK
                        Where  rep_code=I.Rep_code And MEDIATOR = 0 And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                     Begin
                        Select 1
                        From   Sales_Man
                        Where  W_Code = I.W_Code And Reprs_Code <> I.Rep_Code And Rownum <= 1;
                     Exception
                     End;
                       Select Decode(P_Lng_No, 1, Nvl(W_Name, W_E_Name), Nvl(W_E_Name, W_Name))
                       From   Warehouse_Details
                       Where  W_Code = I.W_Code And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                        Begin
                           Select Count(1)
                           From   Sales_Man
                           Where  W_Code In(Select W_Code
                                            From   Warehouse_Details
                                            Where  Nvl(W_Ser, 0) In(Select Nvl(W_Ser, 0)
                                                                    From   Warehouse_Details
                                                                    Where  W_Code = I.W_Code));
                        Exception
                        End;
                           Begin
                              Insert Into Dts_Chk_Stp_Tmp
                           Exception
                           End;
                     Begin
                        Select 1
                        From   Warehouse_Details
                        Where  W_Code = I.W_Code And Nvl(Conn_Brn_No, 0) = Nvl(V_Conn_Brn_No, 0) And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Select 1
                        From   Privilege_Wh
                        Where  U_Id = P_Usr_No And Add_Flag = 1 And W_Code = I.W_Code And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                     Begin
                        Select 1, Decode(P_Lng_No, 1, Nvl(GRP_L_NM, GRP_f_NM), Nvl(GRP_f_NM, GRP_L_NM))
                        From   Dts_Grp_Dtl d,Dts_Grp_mst m
                        Where m.Grp_Code = d.Grp_Code 
                     Exception
                     End;
                        Begin
                           Select 1
                           From   Dts_Grp_Dtl
                           Where  Grp_Code = I.Grp_Code And Nvl(Inactive, 0) = 0 And Rownum <= 1;
                        Exception
                        End;
                           Begin
                              Insert Into Dts_Chk_Stp_Tmp
                           Exception
                           End;
                     Begin
                        Select 1
                        From   Customer
                        Where  Rep_Code = I.Rep_Code And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                        Begin
                           Select 1
                           From   Customer
                           Where  Rep_Code = I.Rep_Code And Nvl(Inactive, 0) = 0 And Rownum <= 1;
                        Exception
                        End;
                           Begin
                              Insert Into Dts_Chk_Stp_Tmp
                           Exception
                           End;
                           Begin
                              Select 1
                              From   Customer
                              Where  Rep_Code = I.Rep_Code And C_Class Is Not Null And Rownum <= 1;
                           Exception
                           End;
                              Begin
                                 Insert Into Dts_Chk_Stp_Tmp
                              Exception
                     Begin
                        Select 1
                        From   Ias_Cst_Sman
                        Where  Rep_Code = I.Rep_Code And Rownum <= 1;
                     Exception
                     End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                        Begin
                           Select 1
                           From   Customer C
                           Where  C.C_Code = S.C_Code And S.Rep_Code = I.Rep_Code And Nvl(Inactive, 0) = 0 And Rownum <= 1;
                        Exception
                        End;
                           Begin
                              Insert Into Dts_Chk_Stp_Tmp
                           Exception
                           End;
                           Begin
                              Select 1
                              From   Customer C
                              Where  C.C_Code = S.C_Code And S.Rep_Code = I.Rep_Code And C_Class Is Not Null And Rownum <= 1;
                           Exception
                           End;
                              Begin
                                 Insert Into Dts_Chk_Stp_Tmp
                              Exception
                              End;
                        Begin
                           Insert Into Dts_Chk_Stp_Tmp
                        Exception
                        End;
                                    Begin
                                       Select Decode(P_Lng_No, 1, Nvl(CLC_TYP_L_NM, CLC_TYP_f_NM), Nvl(CLC_TYP_f_NM, CLC_TYP_L_NM))
                                       From   Gnr_Tax_Typ_Clc_Mst
                                       Where  CLC_TYP_NO =I.Clc_Typ_No_Tax And Rownum <= 1;
                                    Exception
                                    End;
                                    Begin
                                       Select 1
                                       From   Gnr_Tax_Typ_Clc_Mst M
                                       Where  M.Clc_Typ_No = Db.Clc_Typ_No 
                                       And(M.Clc_Tax_Typ <> 0 Or Exists(Select D.Clc_Typ_No
                                                                            From   Gnr_Tax_Typ_Clc_Dtl D
                                                                            Where  D.Tax_No = T.Tax_No 
                                     Exception
                                    End;
                           Begin
                              Insert Into Dts_Chk_Stp_Tmp
                           Exception
                           End;
                           Begin
                              Select 1
                              From   Gnr_Tax_Typ_Clc_Mst M
                              Where  M.Clc_Typ_No = Db.Clc_Typ_No 
                                                  Select D.Clc_Typ_No
                                                  From   Gnr_Tax_Typ_Clc_Dtl D
                                                  Where  D.Tax_No = T.Tax_No And D.Clc_Typ_No = M.Clc_Typ_No An
                           Exception
                           End;
                              Begin
                                 Insert Into Dts_Chk_Stp_Tmp
                              Exception
                              End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                     Begin
                        Insert Into Dts_Chk_Stp_Tmp
                     Exception
                     End;
                      Begin
                         Insert Into Dts_Chk_Stp_Tmp
                      Exception
                      End;
                      Begin
                         Insert Into Dts_Chk_Stp_Tmp
                      Exception
                      End;
                      Begin
                         Insert Into Dts_Chk_Stp_Tmp
                      Exception
                      End;
                      Begin
                         Insert Into Dts_Chk_Stp_Tmp
                      Exception
                      End;
CREATE OR REPLACE Procedure DTS_Chk_Itm  ( P_I_Code                In Ias_Itm_Mst.I_Code%Type          
     Begin
             Select Lang_No Into V_lng_no  From Ias_Sys.Lang_Def
             Where Lang_Dflt=1
     Exception   When Others Then
     End;
   Begin
      Select Nvl(Use_expire_date, 0)
      From   Ias_para_ar
   Exception
   End;
  Begin
        Select Clc_Vat_Price_Typ Into V_Clc_Vat_Price_Typ
           From Ias_Rt_Bill_Mst_br
           Where Rt_Bill_Ser=P_Doc_Ser 
        Select Clc_Vat_Price_Typ Into V_Clc_Vat_Price_Typ
           From Ias_Bill_Mst_br
           Where bill_ser=P_Doc_Ser 
   Exception
   End;
      Begin
         Select 1
         From   Ias_itm_mst
         Where  I_code = P_i_code And Rownum <= 1;
      Exception
      End;
      Begin
         Select 1
 From   Ias_itm_dtl
         Where  I_code = P_i_code And Itm_unt = P_itm_unt And Rownum <= 1;
      Exception
      End;
      Begin
         Select Nvl(Inactive, 0)
         From   Warehouse_details
         Where  W_code = P_w_code And Rownum <= 1;
      Exception
      End;
         Select Nvl(Use_exp_date, 0) Use_exp_date
         From   Ias_itm_mst
         Where  I_code = P_i_code And Rownum <= 1;
   Begin
            Begin
               Select 1
               From   Item_movement D
               Where  I_code = P_i_code And Expire_date = P_expire_date And W_code = P_w_code And Rownum <= 1;
            Exception
                Begin
                  Select 1
                       From   Ias_rt_bill_Dtl_Br 
                       Where  I_code = P_i_code And Expire_date = P_expire_date And W_code = P_w_code And Rownum <= 1;
                Exception When Others Then                 
            End;
            Begin
               Select 1
               From   Item_movement D
               Where  I_code = P_i_code And Batch_no = P_batch_no And W_code = P_w_code And Rownum <= 1;
            Exception
            End;
   End;
      Create Or Replace Procedure     Dts_Cst_Aging_Prc ( P_Sys_No          In     Number,
   Begin
      Select Nvl (Ar_Ac_Link_Type, 0), Nvl (Conn_Cst_Multi_Sman, 0),NVL(PAID_INSTLLMNT_MAN,0)
        From Ias_Para_Ar;
   Exception
   End;
     Begin
       V_cstmr_blnc_type:=Ias_gen_pkg.Get_cnt('Select NVL (CSTMR
_BLNC_TYPE, 0) From DTS_PARA');                     
     Exception When Others Then
     End;
   Begin
   End;
   V_Whr_Data :=     V_Whr_Data || ' And Exists(Select C_Code
                        From Ias_V_List_Ccode
                       Where C_Code = A.C_Code 
   V_Whr_Inst_Mnl := V_Whr_Inst_Mnl || ' And Exists(Select C_Code
                        From Ias_V_List_Ccode
                       Where C_Code = A.C_Code 
                               Select 1
                                 From Priv_Acc
                                Where U_Id = ' || P_User_No || ' 
                               Select 1
                                 From Ias_Priv_Customer
                                Where U_Id =' || P_User_No || '
                               Select 1
                                 From Priv_Acc
                                Where U_Id = ' || P_User_No || ' 
                               Select 1
                                 From Ias_Priv_Customer
                                Where U_Id =' || P_User_No || '
   Begin
         V_Whr_Sman := ' And C_Code In (Select C_Code From Ias_Cst_Sman Where 1=1) ' || V_Whr_Sman || ' ';
      Execute Immediate ('CREATE OR REPLACE VIEW Ias_V_List_Ccode As Select C_Code From Customer Where 1=1 '||V_Whr_CST||' ' || V_Whr_Sman);
   End;
              Select Column_Name
                From User_Tab_Columns
               Where Table_Name = 'IAS_POST_DTL'
            Order By Column_Name;
      Begin
         V_Sql := 'Select ' || Field || ' From IAS' || (To_Number (P_Brn_Year) - 1) || P_Brn_Usr || '.Ias_Post_Dtl
                     Select ' || Field || ' From Ias_Post_Dtl Where Doc_Type<>0';
         Begin
         Exception
         End;
      End;
   Begin
   Exception
   End;
   V_Prd1 :=' (select round(decode (A.a_cy,Ias_Gen_Pkg.Get_Local_Cur,sum(dr_amt),sum(dr_amtf)),2) 
                 from IAS_CST_CR_TMP
                        where c_code=A.c_code 
   V_Prd2 :=' (select round(decode (A.a_cy,Ias_Gen_Pkg.Get_Local_Cur,sum(dr_amt),sum(dr_amtf)),2) 
                 from IAS_CST_CR_TMP
                        where c_code=A.c_code 
   V_Prd3 :=' ( select round(decode (A.a_cy,Ias_Gen_Pkg.Get_Local_Cur,sum(dr_amt),sum(dr_amtf)),2) 
                 from IAS_CST_CR_TMP
                        where c_code=A.c_code 
   V_Prd4 :=         ' ( select round(decode (A.a_cy,Ias_Gen_Pkg.Get_Local_Cur,sum(dr_amt),sum(dr_amtf)),2) 
                 from IAS_CST_CR_TMP
                        where c_code=A.c_code 
   V_Prd5 :=' ( select round(decode (A.a_cy,Ias_Gen_Pkg.Get_Local_Cur,sum(dr_amt),sum(dr_amtf)),2) 
                 from IAS_CST_CR_TMP
                        where c_code=A.c_code 
                             (Select  round(Sum(Decode(A.A_Cy,Ias_Gen_Pkg.Get_Local_Cur,(Dr_Amt),(Dr_Amtf))),2) From IAS_CST_CR_TMP
                              Where C_Code =   A.C_Code 
                        Ias_Gen_Pkg.Get_Cnt(''Select  Decode(''||A.A_Cy||'',Ias_Gen_Pkg.Get_Local_Cur,Sum(Dr_Amt),Sum(Dr_Amtf))  From IAS_CST_CR_TMP
                                  Where C_Code =''||A.C_Code ||''
        V_Sql_Qry :='SELECT C_CODE,c_name,A_CY,SUM(Bal)BAL ,SUM(PRD_0_30)PRD_0_30,SUM(PRD_31_60)PRD_31_60,SUM(PRD_61_90)PRD_61_90,SUM(PRD_91_120)PRD_91_120,SUM(PRD_MORE_120) PRD_MORE_120,SUM(DUE_AMT) DUE_AMT,SUM(Unpsted_TRANS)Unpsted_TRANS 
           FROM (select  a.c_code,
              from  IAS_CST_CR_TMP a,customer b 
            where a.c_code=b.c_code      
            group by a.c_code,
            SELECT a.c_code,decode(1,1, nvl(c_a_name,c_e_name) , nvl(c_a_name,c_e_name))c_name, a.a_cy ,              
            FROM DTS_V_CST_UNPSTED_SALES A ,customer b 
                where a.c_code=b.c_code
                And Exists(Select C_Code
                        From Ias_V_List_Ccode
                       Where C_Code = A.C_Code 
   WHERE 1=1 ' || P_Whr || ' 
GROUP BY C_CODE,c_name,A_CY ';
      V_Sql_Qry :=' SELECT *
               FROM (select  a.c_code,
                  from  IAS_CST_CR_TMP a,customer b 
                where a.c_code=b.c_code      
                group by a.c_code,
                ) TBL WHERE 1=1 ' || P_Whr || ' ';
   Begin
   Exception
   End;
Exception
        V_Sql_Qry :='SELECT C_CODE,c_name,A_CY,SUM(Bal)BAL ,SUM(PRD_0_30)PRD_0_30,SUM(PRD_31_60)PRD_31_60,SUM(PRD_61_90)PRD_61_90,SUM(PRD_91_120)PRD_91_120,SUM(PRD_MORE_120) PRD_MORE_120,SUM(DUE_AMT) DUE_AMT,SUM(Unpsted_TRANS)Unpsted_TRANS 
           FROM (select  a.c_code,
              from  IAS_CST_CR_TMP a,customer b 
            where a.c_code=b.c_code      
            group by a.c_code,
            SELECT a.c_code,decode(1,1, nvl(c_a_name,c_e_name) , nvl(c_a_name,c_e_name))c_name, a.a_cy ,              
            FROM DTS_V_CST_UNPSTED_SALES A ,customer b 
                where a.c_code=b.c_code
                And Exists(Select C_Code
                        From Ias_V_List_Ccode
                       Where C_Code = A.C_Code 
   WHERE 1=1 ' || P_Whr || ' 
GROUP BY C_CODE,c_name,A_CY ';
      V_Sql_Qry :=' SELECT *
               FROM (select  a.c_code,
DTS_FUNCTION_PKG
DTS_PROCEDURE_PKG
DTS_FUNCTION_PKG
DTS_PROCEDURE_PKG
ALTER TABLE   GPS_EVENT DROP CONSTRAINT GPS_EVENT_PK
ALTER TABLE   GPS_EVENT ADD (CONSTRAINT PK_GPS_EVENT PRIMARY KEY  (Srl))
ALTER TABLE DTS_SURVEY_CST_GPS DROP  CONSTRAINT DTSSURVEYCSTGPS_UQ
ALTER TABLE DTS_SURVEY_CST_GPS ADD  CONSTRAINT DTSSRVYCSTGPS_PK PRIMARY KEY (POINT_ID)
 INSERT INTO DTS_PARA
 Update GPS_EVENT Set GPS_DATE=GPS_LAST_DATE
 CREATE TABLE DTS_VST_RSLT_TYPS
CREATE TABLE DTS_VST_FAIL_REASON
CREATE TABLE DTS_ITMS_SHW_MST
ALTER TABLE DTS_ITMS_SHW_MST ADD (
ALTER TABLE DTS_ITMS_SHW_MST ADD (
ALTER TABLE DTS_ITMS_SHW_MST 
CREATE TABLE DTS_ITMS_SHW_DTL
ALTER TABLE DTS_ITMS_SHW_DTL ADD (
ALTER TABLE DTS_ITMS_SHW_DTL ADD (
CREATE TABLE DTS_ITMS_SHW_IMG
  ALTER TABLE DTS_CST_VST_MST ADD (
  ALTER TABLE DTS_CST_VST_MST ADD (
  ALTER TABLE DTS_CST_VST_MST ADD (
  CREATE TABLE DTS_CST_VST_DTL_TSK
  ALTER TABLE DTS_CST_VST_DTL_TSK ADD (CONSTRAINT PK_DTSCSTVSTDTLTSK  PRIMARY KEY(TSK_SEQ))
  ALTER TABLE DTS_CST_VST_DTL_TSK ADD (
  ALTER TABLE DTS_CST_VST_DTL_TSK ADD (
  ALTER TABLE DTS_CST_VST_DTL_TSK ADD (
  ALTER TABLE DTS_CST_VST_DTL_TSK ADD (
ALTER TABLE DTS_GRP_ITM_RVL DROP CONSTRAINT DTSGRPDTL_PK 
ALTER TABLE DTS_GRP_ITM_RVL ADD (CONSTRAINT
ALTER TABLE DTS_GRP_DTL DROP CONSTRAINT DTSGRPDTL_PK 
ALTER TABLE DTS_GRP_DTL DROP CONSTRAINT DTSGRPDTL_UQ 
ALTER TABLE DTS_GRP_MST ADD  LEV_NO1   NUMBER(3)  
update DTS_GRP_MST set  LEV_NO1=LEV_NO
ALTER TABLE DTS_GRP_dtl ADD  LEV_NO1   NUMBER(3)  
update DTS_GRP_dtl set  LEV_NO1=LEV_NO
ALTER TABLE DTS_GRP_MST DROP COLUMN LEV_NO
ALTER TABLE DTS_GRP_DTL DROP COLUMN LEV_NO
ALTER TABLE DTS_GRP_MST ADD LEV_NO  NUMBER(3) DEFAULT NULL 
ALTER TABLE DTS_GRP_DTL ADD LEV_NO  NUMBER(3) DEFAULT NULL 
update DTS_GRP_MST set  LEV_NO=LEV_NO1
ALTER TABLE DTS_GRP_MST DROP COLUMN LEV_NO1
update DTS_GRP_dtl set  LEV_NO=LEV_NO1
ALTER TABLE DTS_GRP_DTL DROP COLUMN LEV_NO1
CREATE TABLE DTS_ITMS_SRL_BR
CREATE INDEX INDX_DTSPLANPRDDTL_FK ON DTS_PLAN_PRD_DTL(DOC_SER)
CREATE INDEX INDX_DTSPLANSMANDTL_FK ON DTS_PLAN_SMAN_DTL(DOC_SER)
ALTER TABLE DTS_GRP_DTL ADD (CONSTRAINT DTSGRPDTL_UQ PRIMARY KEY(GRP_CODE,I_CODE,ITM_UNT))
CREATE TABLE GPS_EVENT_HSTRY
DROP TABLE  GPS_EVENT_HISTORY PURGE
CREATE TABLE GNR_GPS_EVNT_CRNT
 CREATE TABLE DTS_DOC_TYP(
ALTER TABLE DTS_ITMS_SHW_IMG DROP  CONSTRAINT PK_DTSITMSSHWIMG  
ALTER TABLE DTS_ITMS_SHW_IMG DROP  CONSTRAINT FK_DOCSER_DTSITMSSHWIMG  
ALTER TABLE DTS_ITMS_SHW_DTL DROP  CONSTRAINT DTSITMSSHWDTL_PK 
ALTER TABLE DTS_ITMS_SHW_DTL DROP  CONSTRAINT FK_DOCSER_DTSITMSSHWDTL
ALTER TABLE  DTS_ITMS_SHW_IMG MODIFY(DOC_SEQ  NULL)
ALTER TABLE DTS_ITMS_SHW_DTL ADD (CONSTRAINT FK_DOCSER_DTSITMSSHWDTL  FOREIGN KEY (DOC_SER) 
ALTER TABLE DTS_ITMS_SHW_DTL ADD ( CONSTRAINT DTSITMSSHWDTL_PK PRIMARY KEY (DOC_SER,I_CODE,RCRD_NO) )
 ALTER TABLE DTS_ITMS_SHW_IMG ADD ( CONSTRAINT FK_DOCSER_DTSITMSSHWIMG  FOREIGN KEY (DOC_SER,I_CODE,RCRD_NO) 
CREATE TABLE DTS_POST_TRNS_HSTRY( DOC_TYPE NUMBE
CREATE TABLE DTS_DOC_TYPE_SIGN
 Insert Into Dts_doc_type_sign (Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (1, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (2, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (3, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (9, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (4, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_name, Type_f_name, Snd_aftr_sign)Values (6, '
 Insert Into Dts_doc_type_sign(Doc_type, Type_l_nam
 ALTER TABLE DTS_GRP_DTL ADD (CONSTRAINT DTSGRPDTL_ICODE_FK FOREIGN KEY (I_CODE,ITM_UNT) REFERENCES IAS_ITM_DTL (I_CODE,ITM_UNT))
CREATE TABLE DTS_DOC_TYPE
CREATE TABLE IAS_SMAN_DOC_SYNC_DTS
ALTER TABLE IAS_SMAN_DOC_SYNC_DTS ADD (
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values   (0, 2, 2688, 'Recipet Voucher', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD) Values(1, 52, 3928, 'Sales Quotation', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values(2, 53, 14771, 'Sale Order', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values (3, 4, 2793, 'Sales Inv.', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values(4, 5, 1409, 'Sales Return Inv.', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values(6, 1410, 4526, 'Customer W.H Stocktaking ', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values  (9, 136, 6584, 'Sales Retuen Request', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values (13, 1407, 15258, 'Items Questionnaire', 1)
 Insert into DTS_DOC_TYPE(DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD) Values (11, 1406, 2119, 'Show Items', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values (16, 1408, 4473, 'Updating Costomer Info', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values  (12, 1405, 5062, 'Target Customer Details', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values (15, 1409, 16238, 'Customer Locations Scanning', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD)Values(14, 1411, 16239, 'Sales Reps Visits', 1)
 Insert into DTS_DOC_TYPE (DOC_TYPE_NO, DOC_TYPE, LBL_NO, DOC_TYPE_NAME, SYNC_METHOD) Values (10, 31, 2709, 'Request Transfer', 1)
 update Dts_Cst_Vst_Dtl v  set doc_type_ref= case 
where  v.DOC_SER_REF is null
(SELECT INVOICING_SERIALS,INVOICING_SERIALS_SR,AR_SORDER_SERIAL,AR_QUOT_SERIAL FROM IAS_PARA_AR ) AR
 UPDATE SET DTS_PARA.DTS_INVOICING_SERIALS= CASE WHEN INVOICING_SERIALS=4 THEN 3
SELECT COUNT(1)   FROM DTS_PARA"SELECT COUNT(1)   FROM USER_TAB_COLUMNS  WHERE UPPER(TABLE_NAME) = ''GPS_EVENT''  AND UPPER(COLUMN_NAME) = ''GPS_LAST_DATE''"SELECT COUNT(1)   FROM USER_TAB_COLUMNS  WHERE UPPER(TABLE_NAME) = ''GPS_EVENT''  AND UPPER(COLUMN_NAME) = ''GPS_DATE''"SELECT COUNT(1)   FROM USER_TABLES  WHERE UPPER(TABLE_NAME) = ''DTS_VST_RSLT_TYPS''"SELECT COUNT(1)   FROM USER_TABLES  WHERE UPPER(TABLE_NAME) = ''DTS_VST_FAIL_REASON''"SELECT COUNT(1)   FROM USER_TABLES  WHERE UPPER(TABLE_NAME) = ''DTS_ITMS_SHW_MST''"SELECT COUNT(1)   FROM USER_TABLES  WHERE UPPER(TABLE_NAME) = ''DTS_ITMS_SHW_
DTL''"SELECT COUNT(1)   FROM USER_TABLES  WHERE UPPER(TABLE_NAME) = ''DTS_ITMS_SHW_DTL''"SELECT COUNT(1)   FROM USER_TABLES  WHERE UPPER(TABLE_NAME) = ''DTS_ITMS_SRL_BR''"SELECT 1   FROM DTS_DOC_TYPE  WHERE ROWNUM <= 1"SELECT M.VST_SRL,D.DOC_NO_REF,D.DOC_TYPE_REF,M.C_CODE,M.REP_CODE   FROM DTS_CST_VST_MST M,DTS_CST_VST_DTL D  WHERE M.VST_SRL = D.VST_SRL  AND D.DOC_TYPE_REF = 3  AND D.DOC_SER_REF IS NULL"SELECT DOC_SER_EXTRNL,4   FROM IAS_BILL_MST_BR M  WHERE EXTERNAL_POST = 70  AND M.BILL_NO = :b1  AND M.REP_CODE = :b2  AND M.C_CODE = :b3  AND ROWNUM <= 1"SELECT DOC_SER_EXTRNL,53   FROM SALES_ORDER M  WHERE EXTERNAL_POST = 70  AND M.ORDER_NO = :b1  AND M.REP_CODE = :b2  AND M.C_CODE = :b3  AND ROWNUM <= 1"UPDATE DTS_CST_VST_DTL SET DOC_TYPE_REF=NVL(:b1,DOC_TYPE_REF),DOC_SER_REF=NVL(:b2,DOC_SER_REF) WHERE VST_SRL = :b3  AND DOC_TYPE_REF = 3  AND DOC_NO_REF = :b4  AND DOC_SER_REF IS NULL"UPDATE DTS_CST_VST_DTL V SET DOC_SER_REF=(SELECT DOC_SER_EXTRNL   FROM IAS_RT_BILL_MST_BR M  WHERE EXTERNAL_POST = 70  AND M.RT_BILL_NO = V.DOC_NO_REF  AND ( M.REP_CODE,M.C_CODE  ) =  (SELECT REP_CODE,C_CODE   FROM DTS_CST_VST_MST  WHERE VST_SRL = V.VST_SRL )  AND ROWNUM <= 1 ) WHERE V.DOC_SER_REF IS NULL  AND V.DOC_TYPE_REF = 5"UPDATE DTS_CST_VST_DTL V SET DOC_SER_REF=(SELECT DOC_SER_EXTRNL   FROM QUOTATION M  WHERE EXTERNAL_POST = 70  AND M.QUOT_NO = V.DOC_NO_REF  AND ( M.REP_CODE,M.C_CODE  ) =  (SELECT REP_CODE,C_CODE   FROM DTS_CST_VST_MST  WHERE VST_SRL = V.VST_SRL )  AND ROWNUM <= 1 ) WHERE DOC_SER_REF IS NULL  AND V.DOC_TYPE_REF = 52"UPDATE DTS_CST_VST_DTL V SET DOC_SER_REF=(SELECT DOC_SER_EXTRNL   FROM SALES_ORDER M  WHERE EXTERNAL_POST = 70  AND M.ORDER_NO = V.DOC_NO_REF  AND ( M.REP_CODE,M.C_CODE  ) =  (SELECT REP_CODE,C_CODE   FROM DTS_CST_VST_MST  WHERE VST_SRL = V.VST_SRL )  AND ROWNUM <= 1 ) WHERE DOC_SER_REF IS NULL  AND V.DOC_TYPE_REF = 53"UPDATE DTS_CST_VST_DTL V SET DOC_SER_REF=(SELECT M.DOC_SER_EXTRNL   FROM VOUCHERS M,VOUCHER_DETAIL D  WHERE M.V_SER = D.V_SER  AND M.EXTERNAL_POST = 70  AND M.VOUCHER_NO = V.DOC_NO_REF  AND D.AC_DTL_TYP = 3  AND ( NVL(D.REP_CODE,M.REP_CODE),D.AC_CODE_DTL  ) =  (SELECT REP_CODE,C_CODE   FROM DTS_CST_VST_MST  WHERE VST_SRL = V.VST_SRL )  AND ROWNUM <= 1 ) WHERE DOC_SER_REF IS NULL  AND V.DOC_TYPE_REF = 2"UPDATE DTS_CST_VST_DTL V SET DOC_SER_REF=(SELECT DOC_SER_EXTRNL   FROM DTS_STK_CST_MST M  WHERE M.DOC_NO = V.DOC_NO_REF  AND ( M.REP_CODE,M.C_CODE  ) =  (SELECT REP_CODE,C_CODE   FROM DTS_CST_VST_MST  WHERE VST_SRL = V.VST_SRL )  AND ROWNUM <= 1 ) WHERE DOC_SER_REF IS NULL  AND V.DOC_TYPE_REF = 1410"UPDATE DTS_CST_VST_DTL V SET DOC_SER_REF=(SELECT DOC_SER_EXTRNL   FROM IAS_RT_BILL_MST_RQ M  WHERE EXTERNAL_POST = 70  AND M.RT_BILL_NO = V.DOC_NO_REF  AND ( M.REP_CODE,M.C_CODE  ) =  (SELECT REP_CODE,C_CODE   FROM DTS_CST_VST_MST  WHERE VST_SRL = V.VST_SRL )  AND ROWNUM <= 1 ) WHERE DOC_SER_REF IS NULL  AND V.DOC_TYPE_REF = 136"UPDATE DTS_CST_VST_DTL V SET DOC_SER_REF=(SELECT DOC_SER_EXTRNL   FROM DTS_ITMS_SHW_MST M  WHERE M.DOC_NO = V.DOC_NO_REF  AND ( M.REP_CODE,M.C_CODE  ) =  (SELECT REP_CODE,C_CODE   FROM DTS_CST_VST_MST  WHERE VST_SRL = V.VST_SRL )  AND ROWNUM <= 1 ) WHERE DOC_SER_REF IS NULL  AND V.DOC_TYPE_REF = 1406"UPDATE DTS_CST_VST_DTL V SET DOC_SER_REF=(SELECT DOC_SER_EXTRNL   FROM ARS_QUESTNNR_MST M  WHERE M.DOC_NO = V.DOC_NO_REF  AND ( M.REP_CODE,M.C_CODE  ) =  (SELECT REP_CODE,C_CODE   FROM DTS_CST_VST_MST  WHERE VST_SRL = V.VST_SRL )  AND ROWNUM <= 1 ) WHERE DOC_SER_REF IS NULL  AND V.DOC_TYPE_REF = 1407"
_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
 CREATE OR REPLACE Function Get_Dts_Trans_Ser(     P_Doc_Type       In NUMBER,   --##  1 QUOTATION 2- sale order 3- bill 4 -rt bill -9  Rt Bills Request                                                        
Begin 
   Select  nvl(dts_Invoicing_Serials,1) ,nvl(dts_Invoicing_Serials_Sr,1),nvl(DTS_SORDER_SERIAL,1),nvl(DTS_QUOT_SERIAL,1)
     From dts_para;
    Select s.W_Code,s.CC_Code ,rep_ser 
CREATE TABLE DTS_PRFRMNCE_INDCTR(
CREATE TABLE DTS_GRP_ITM_RVL(
CREATE TABLE DTS_TYP_DTL        (
CREATE TABLE DTS_CMPNY_RIVAL_DTL(CMPNY_NO     NUMBER(5),
CREATE TABLE DTS_AGENTS_DTL( AGENT_NO     NUMBER(5),
CREATE TABLE DTS_GRP_MST(GRP_CODE     VARCHAR2(6),
CREATE TABLE DTS_GRP_DTL(
CREATE TABLE DTS_ITM_RVL_MST(
CREATE TABLE DTS_ITM_RVL_DTL(
CREATE TABLE DTS_CUSTOMER_TRGT(
CREATE TABLE DTS_PLAN_SMAN_MST(
CREATE TABLE DTS_PLAN_SMAN_DTL(
CREATE TABLE DTS_PLAN_SMAN_SUB_DTL (
CREATE TABLE DTS_OUT_PLAN_SMAN_DTL(
CREATE TABLE DTS_OUT_PLAN_SMAN_SUB_DTL(
CREATE TABLE DTS_PLAN_PRD_MST(
CREATE TABLE DTS_PLAN_PRD_DTL(
CREATE TABLE DTS_EXPNS_MST(
CREATE TABLE DTS_EXPNS_DTL(
CREATE TABLE DTS_ITM_INFO_MST(
CREATE TABLE DTS_ITM_INFO_DTL(
CREATE TABLE DTS_ITM_INFO_SUB_DTL(
CREATE TABLE DTS_STK_CST_MST(
CREATE TABLE DTS_STK_CST_DTL(
CREATE TABLE DTS_OPTN
CREATE TABLE DTS_OPTN_PRIV
CREATE TABLE DTS_PARA
CREATE TABLE DTS_CST_VST_MST
CREATE TABLE DTS_CST_VST_DTL
CREATE  TABLE  DTS_SURVEY_CST_GPS
CREATE TABLE GPS_EVENT
CREATE TABLE DTS_VST_FAIL_REASON
CREATE TABLE DTS_SMAN_CST_MST(
CREATE TABLE DTS_SMAN_CST_DTL (
CREATE TABLE DTS_VST_FAIL_REASON
ALTER TABLE DTS_VST_FAIL_REASON ADD (CONSTRAINT DTSVSTFAILREASON_PK PRIMARY KEY (RESON_TYP))
 CREATE TABLE DTS_VST_RSLT_TYPS
 ALTER TABLE DTS_VST_RSLT_TYPS ADD (CONSTRAINT DTSVSTRSLTTYPS_PK PRIMARY KEY (VST_RSLT_TYP)) 
ALTER TABLE   GPS_EVENT DROP CONSTRAINT GPS_EVENT_PK
ALTER TABLE   GPS_EVENT ADD (CONSTRAINT PK_GPS_EVENT PRIMARY KEY  (Srl))
ALTER TABLE DTS_SURVEY_CST_GPS DROP  CONSTRAINT DTSSURVEYCSTGPS_UQ
ALTER TABLE DTS_SURVEY_CST_GPS ADD  CONSTRAINT DTSSRVYCSTGPS_PK PRIMARY KEY (POINT_ID)
 Update GPS_EVENT Set GPS_DATE=GPS_LAST_DATE
CREATE TABLE DTS_ITMS_SHW_MST
ALTER TABLE DTS_ITMS_SHW_MST ADD (
ALTER TABLE DTS_ITMS_SHW_MST ADD (
ALTER TABLE DTS_ITMS_SHW_MST 
CREATE TABLE DTS_ITMS_SHW_DTL
ALTER TABLE DTS_ITMS_SHW_DTL ADD (
ALTER TABLE DTS_ITMS_SHW_DTL ADD (
CREATE TABLE DTS_ITMS_SHW_IMG
CREATE TABLE DTS_ITMS_SRL_BR
CREATE TABLE GPS_EVENT_HSTRY
CREATE TABLE GNR_GPS_EVNT_CRNT
 CREATE TABLE DTS_DOC_TYP(
ALTER TABLE DTS_ITMS_SHW_DTL ADD (CONSTRAINT FK_DOCSER_DTSITMSSHWDTL  FOREIGN KEY (DOC_SER) 
ALTER TABLE DTS_ITMS_SHW_DTL ADD ( CONSTRAINT DTSITMSSHWDTL_PK PRIMARY KEY (DOC_SER,I_CODE,RCRD_NO) )
 ALTER TABLE DTS_ITMS_SHW_IMG ADD ( CONSTRAINT FK_DOCSER_DTSITMSSHWIMG  FOREIGN KEY (DOC_SER,I_CODE,RCRD_NO) 
CREATE TABLE DTS_POST_TRNS_HSTRY( DOC_TYPE NUMBER
CREATE TABLE DTS_DOC_TYPE_SIGN
CREATE TABLE DTS_DOC_TYPE
Complete Create Tables DTS
SELECT COUNT(1)   FROM V$TABLESPACE  WHERE NAME LIKE  ''DTS%''"SELECT COUNT(1)   FROM USER_TAB_COLUMNS  WHERE UPPER(TABLE_NAME) = ''GPS_EVENT''  AND UPPER(COLUMN_NAME) = ''GPS_LAST_DATE''"SELECT COUNT(1)   FROM USER_TAB_COLUMNS  WHERE UPPER(TABLE_NAME) = ''GPS_EVENT''  AND UPPER(COLUMN_NAME) = ''GPS_DATE''"
CREATE TABLE DTS_ITMS_SHW_DTL
ALTER TABLE DTS_ITMS_SHW_DTL ADD (
ALTER TABLE DTS_ITMS_SHW_DTL ADD (
              BEGIN  
                        BEGIN
                                Exception when others then                                        
              BEGIN  
                        BEGIN
                                Exception when others then                                        
CREATE INDEX INDX_DTSPLANPRDDTL_FK ON DTS_PLAN_PRD_DTL(DOC_SER)
CREATE INDEX INDX_DTSPLANSMANDTL_FK ON DTS_PLAN_SMAN_DTL(DOC_SER)
ALTER TABLE DTS_GRP_DTL ADD (CONSTRAINT DTSGRPDTL_UQ PRIMARY KEY(GRP_CODE,I_CODE,ITM_UNT))
CREATE TABLE GPS_EVENT_HSTRY
DROP TABLE  GPS_EVENT_HISTORY PURGE
              Select  G.Grp_Code Grp_Code,S.Reprs_Code  Rep_Code, 
                              ((Select Nvl (I_Price, 0)
                                  From Ias_Item_Price Ii
                                 Where Ii.I_Code = G.I_Code
                                                                      ' Where  1=1 '
                                                                       ' Where  1=1 '
                                          (Select Lev_No
                                             From Ias_Pricing_Levels L
                                            Where Nvl (L.Lev_Low, 0) = 1
                              ((Select Nvl (I_Price, 0)
                                  From Ias_Item_Price Ii
                                 Where Ii.I_Code = G.I_Code
                                                                      ' Where  1=1 '
                                                                       ' Where  1=1 '
                                          (Select Lev_No
                                             From Ias_Pricing_Levels L
                                            Where Nvl (L.Lev_High, 0) = 1
                      From Dts_Grp_Dtl G,
                     Where G.I_Code = Mi.I_Code
                           (Ys_Gen_Pkg.Get_Fld_Value ('Ias_Para_Inv','Use_One_Barcode_For_Itm',' Where  1=1 ')=1)
                          or ( Ys_Gen_Pkg.Get_Fld_Value ('Ias_Para_Inv','Use_One_Barcode_For_Itm',' Where  1=1 ')=0
                               And (Di.I_CODE,Di.Itm_Unt) not in(select i_code,Itm_Unt from  Ias_Itm_Unt_Barcode))
                                                             ' Where  1=1 '
                                                                ' Where  1=1 '
            Select  G.Grp_Code Grp_Code,S.Reprs_Code  Rep_Code, 
                              ((Select Nvl (I_Price, 0)
                                  From Ias_Item_Price Ii
                                 Where Ii.I_Code = G.I_Code
                                                                      ' Where  1=1 '
                                                                       ' Where  1=1 '
                                          (Select Lev_No
                                             From Ias_Pricing_Levels L
                                            Where Nvl (L.Lev_Low, 0) = 1
                              ((Select Nvl (I_Price, 0)
                                  From Ias_Item_Price Ii
                                 Where Ii.I_Code = G.I_Code
                                                                      ' Where  1=1 '
                                                                       ' Where  1=1 '
                                          (Select Lev_No
                                             From Ias_Pricing_Levels L
                                            Where Nvl (L.Lev_High, 0) = 1
                      From Dts_Grp_Dtl G,
                     Where G.I_Code = Mi.I_Code
                       And Ys_Gen_Pkg.Get_Fld_Value ('Ias_Para_Inv','Use_One_Barcode_For_Itm',' Where  1=1 ')=0
                                                             ' Where  1=1 '
                                                                ' Where  1=1 '
   SELECT DISTINCT m.rep_code rep_code, d.i_code i_code, ti.tax_no tax_no,
   FROM            DTS_V_SMAN_INFO m,
   WHERE           m.grp_code = d.grp_code
SELECT DISTINCT 
                                                FROM (
   SELECT g.grp_code grp_code, s.reprs_code rep_code, g.i_code i_code,
          NVL ((SELECT SUM (tax_prcnt)
                FROM   dts_v_gnr_tax_item tx
                WHERE  tx.rep_code = s.reprs_code AND tx.i_code = g.i_code),
   FROM   dts_grp_dtl g,
   WHERE  g.i_code = mi.i_code
                                                                (Select 1
                                                                   From Ias_Itm_Unt_Barcode
                                                                  Where I_Code = Di.I_Code
          NVL ((SELECT SUM (tax_prcnt)
                FROM   dts_v_gnr_tax_item tx
                WHERE  tx.rep_code = s.reprs_code AND tx.i_code = g.i_code),
   FROM   dts_grp_dtl g,
   WHERE  g.i_code = mi.i_code
                   (SELECT   REP_CODE, GRP_CODE, I_CODE, I_NAME, I_E_NAME, W_CODE,
                        FROM (SELECT   S.REPRS_CODE REP_CODE, S.GRP_CODE, M.I_CODE, MI.I_NAME,
                                  FROM ITEM_MOVEMENT M,
                                 WHERE M.I_CODE = MI.I_CODE
                              GROUP BY S.REPRS_CODE,
                              SELECT S.REPRS_CODE REP_CODE, S.GRP_CODE, G.I_CODE, MI.I_NAME,
                                FROM IAS_ITM_WCODE M,
                               WHERE MI.I_CODE =
                    GROUP BY REP_CODE,
                    Select   U_Id, U_L_Nm, U_F_Nm, Doc_Type, Doc_Typ_Nm, Typ_No, Typ_L_Nm,
       From ( 
                         Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U, Ias_Priv_Ar Ar, Ias_Sales_Types S
              Where U.U_Id = Ar.U_Id
             Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U,Ias_Priv_Ar Ar, Ias_Rt_Sales_Types R
              Where U.U_Id = Ar.U_Id
             Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U, Ias_Priv_Ar Ar, Ias_Quot_Types Q
              Where U.U_Id = Ar.U_Id
             Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U, Ias_Priv_Ar Ar, Ias_Sorder_Types O
              Where U.U_Id = Ar.U_Id
             Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U, Ias_Priv_Ar Ar, Ias_Ar_Typs O
              Where U.U_Id = Ar.U_Id
             Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U, Ias_Vouchr_Type V
              Where V.V_Type = 1
             Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U, Ias_Priv_Inv_Type Invp, Ias_Inv_Types Inv
              Where U.U_Id = Invp.U_Id And Invp.Inv_Type = Inv.Inv_Type
              Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U, PRIV_REQ_TYPE Invp, REQUEST_TYPES Inv
              Where U.U_Id = Invp.U_Id And nvl(Inv.Out_Trnsfr,0)<>1  
                          Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
               From User_R U, PRIV_TRNSFR_TYPE Invp, TRANSFER_TYPES Inv
              Where U.U_Id = Invp.U_Id And nvl(Inv.TR_REC,0)<>1  
                        Order By U_Id, Doc_Type, Typ_No, Typ_No 
                               SELECT sman_typ,
                                 FROM (SELECT S.sman_typ,
                                         FROM Dts_V_Sman_Info s,
                                        WHERE     NVL (p.CONN_CST_MULTI_SMAN,0) = 0
                                              AND 1= (CASE WHEN ( NVL(P.Ar_Ac_Link_Type,1) = 1 AND EXISTS(SELECT 1
                                                                                                             FROM PRIV_ACC
                                                                                                            WHERE U_ID = S.U_ID
                                                                                                           SELECT 1
                                                                                                             FROM IAS_PRIV_CUSTOMER
                                                                                                            WHERE U_ID = S.U_ID
                                       SELECT S.sman_typ,
                                         FROM Dts_V_Sman_Info s,
                                        WHERE     NVL (p.CONN_CST_MULTI_SMAN, 0) = 1
                                              AND 1= (CASE WHEN ( NVL(P.Ar_Ac_Link_Type,1) = 1 AND EXISTS(SELECT 1
                                                                                                             FROM PRIV_ACC
                                                                                                            WHERE U_ID = S.U_ID
                                                                                                           SELECT 1
                                                                                                             FROM IAS_PRIV_CUSTOMER
                                                                                    WHERE U_ID = S.U_ID
                                       SELECT 3 sman_typ,
                                         FROM ias_promoters s,
                                        WHERE     c.prm_CODE IS NOT NULL
   Select C.C_Code,
                Nvl((Select Nvl(I.Lev_No, 0)
                       From Customer_Curr I, Dts_V_Get_Prc_Lvls P
                      Where I.C_Code = S.C_Code
                Nvl((Select Nvl(I.Lev_No_Csh, 0)
                       From Customer_Curr I, Dts_V_Get_Prc_Lvls P
                      Where I.C_Code = S.C_Code
     From Customer C,
 Where C.C_Code = S.C_Code
            (SELECT  sf.U_id,
                  Decode(P.Sales_disc_type,11,DECODE((Select Distinct C.Csh_Cst From DTS_V_GET_CUSTOMER c Where Rep_Code=SF.Rep_Code ),0,Nvl(Sd.Bill_Doc_Type,0),1),NULL) Bill_Doc_Type,
            FROM Sales_disc Sd,
            WHERE   NVL(P.SHOW_DISC_PER_ITEMS_AR,0)=1
                  AND I.I_CODE = Decode(Ys_Gen_Pkg.Get_Fld_Value('Dts_Para','USE_DTS_WITHOUT_INV',' Where  1=1 '),0,Nvl(st.I_CODE,'0'),I.I_CODE)
                      Decode(Ys_Gen_Pkg.Get_Fld_Value('Dts_Para','USE_DTS_WITHOUT_INV',' Where  1=1 '),0,DECODE(I.USE_BATCH_NO,1,st.Batch_no,'0'),'0'),'0')=
                      Decode(Ys_Gen_Pkg.Get_Fld_Value('Dts_Para','USE_DTS_WITHOUT_INV',' Where  1=1 '),0,DECODE(I.USE_BATCH_NO,1,sd.Batch_no,'0'),'0'),'0')
     SELECT              sf.U_id,
                  Decode((Select Distinct C.Csh_Cst From DTS_V_GET_CUSTOMER c Where Rep_Code=Sm.Rep_Code ),0,Nvl(Sd.Bill_Doc_Type,0),1) Bill_Doc_Type,
            FROM Sales_disc Sd,
            WHERE   NVL(P.SHOW_DISC_PER_ITEMS_AR,0)=1
       SELECT         sf.U_id,
                  Decode((Select Distinct C.Csh_Cst From DTS_V_GET_CUSTOMER c Where Rep_Code=Sm.Rep_Code ),0,Nvl(Sd.Bill_Doc_Type,0),1) Bill_Doc_Type,
            FROM  Sales_disc Sd,
            WHERE   NVL(P.SHOW_DISC_PER_ITEMS_AR,0)=1
   SELECT             sf.U_id,
                  Decode((Select Distinct C.Csh_Cst From DTS_V_GET_CUSTOMER c Where Rep_Code=Sm.Rep_Code ),0,Nvl(Sd.Bill_Doc_Type,0),1) Bill_Doc_Type,
            FROM  Sales_disc Sd,
            WHERE   NVL(P.SHOW_DISC_PER_ITEMS_AR,0)=1
         SELECT   sm.U_id,
             FROM DTS_V_SMAN_INFO sm,
            WHERE     NVL(p.Show_disc_per_items_ar, 0) = 1
                        AS SELECT  U_ID,
   LEV_NO FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_DSCNT_VW)
                          AS SELECT * FROM  TABLE(DTS_CRT_VW_PKG.DYN_CRT_FQTY_VW)
          (SELECT S.U_ID,
          FROM SALES_FREE_QTY SF,
         WHERE     NVL (P.AR_USE_FREE_QTY, 0) = 1
                                                   ' WHERE  1=1 '),
        SELECT S.U_ID,
          FROM SALES_FREE_QTY SF,
         WHERE     NVL (P.AR_USE_FREE_QTY, 0) = 1
        SELECT S.U_ID,
          FROM SALES_FREE_QTY SF,
         WHERE     NVL (P.AR_USE_FREE_QTY, 0) = 1
        SELECT S.U_ID,
          FROM SALES_FREE_QTY SF,
         WHERE     NVL (P.AR_USE_FREE_QTY, 0) = 1
        SELECT S.U_ID,
          FROM DTS_V_SMAN_INFO S,
         WHERE     NVL (P.AR_USE_FREE_QTY, 0) = 1
   Select Doc_Typ,
     From Table (Dts_Crt_Vw_Pkg.Dyn_Crt_Srl_Vw (0, 1))
   Select Doc_Typ,
     From Table (Dts_Crt_Vw_Pkg.Dyn_Crt_Srl_Vw (0, 2))
   Select Doc_Typ,
     From Table (Dts_Crt_Vw_Pkg.Dyn_Crt_Srl_Vw (1))
   Select Doc_Typ,
     From Table (Dts_Crt_Vw_Pkg.Dyn_Crt_Srl_Vw (2))
   Select Doc_Typ,
     From Table (Dts_Crt_Vw_Pkg.Dyn_Crt_Srl_Vw (3))
   Select Doc_Typ,
     From Table (Dts_Crt_Vw_Pkg.Dyn_Crt_Srl_Vw (4))
   Select Doc_Typ,
     From Table (Dts_Crt_Vw_Pkg.Dyn_Crt_Srl_Vw (9)) 
   SELECT doc_typ, doc_typ_nm, doc_no, rep_code, brn_no, bill_doc_type,
     FROM (
           SELECT 0 doc_typ, 'Voucher Receipt' doc_typ_nm, bill_no doc_no,
             FROM ((SELECT NVL (q.bno, 0) + 1 bill_no, o.rep_code, q.brn_no,
                      FROM (SELECT   NVL (MAX (TO_NUMBER (voucher_no)),
                                FROM vouchers v,
                               WHERE voucher_type = 1
                            GROUP BY v.brn_no, cash_sr, u.u_id
                            SELECT   0 bno, u.conn_brn_no, u.u_id
                                FROM cash_in_hand c, sales_man r, user_r u
                               WHERE u.conn_brn_no IS NOT NULL
          SELECT DISTINCT cash_no
                                                   FROM vouchers v
                                                  WHERE voucher_type = 1
                            GROUP BY u.conn_brn_no, cash_sr, u.u_id) q,
                     WHERE o.rep_code IS NOT NULL
                   (SELECT NVL (q.bno, 0) + 1 bill_no, o.rep_code, q.brn_no,
                      FROM (SELECT   NVL (MAX (TO_NUMBER (voucher_no)),
                                FROM vouchers v,
                               WHERE voucher_type = 1
                            GROUP BY v.brn_no, bank_sr, u.u_id
                            SELECT   0 bno, u.conn_brn_no, u.u_id
                                FROM cash_at_bank c, sales_man r, user_r u
                               WHERE u.conn_brn_no IS NOT NULL
                                        SELECT DISTINCT cash_no
                                                   FROM vouchers v
                                                  WHERE voucher_type = 1
                            GROUP BY u.conn_brn_no, bank_sr, u.u_id) q,
                     WHERE o.rep_code IS NOT NULL
           SELECT 1 doc_typ, 'Quotation' doc_typ_nm, bill_no doc_no, rep_code,
             FROM (SELECT bill_no, u.rep_code, i.brn_no brn_no,
                     FROM (SELECT   NVL (MAX (q.bno), 0) + 1 bill_no,
       FROM (SELECT   NVL
                                         FROM quotation s,
                                        WHERE NVL (b.ar_quot_serial, 0) = 1
                                     GROUP BY s.brn_no
                                     SELECT   0 bno, 0 rep_code,
                                         FROM ias_para_ar b,
                                        WHERE NVL (ar_quot_serial, 0) = 1
                                     GROUP BY u.conn_brn_no) q
                           GROUP BY brn_no) i,
                    WHERE u.rep_code IS NOT NULL
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (quot_no)), 0) bno,
                                 FROM quotation s,
                                WHERE NVL (b.ar_quot_serial, 0) = 2
                             GROUP BY rep_code, brn_no, qt_type
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE p.doc_type = 1
                             GROUP BY reprs_code, u.conn_brn_no, typ_no) q
                   GROUP BY rep_code, brn_no, bill_doc_type, typ_no
           SELECT 2 doc_typ, 'Sales Order' doc_typ_nm, bill_no doc_no,
             FROM (SELECT bill_no, u.rep_code, i.brn_no brn_no,
                     FROM (SELECT   NVL (MAX (q.bno), 0) + 1 bill_no,
                               FROM (SELECT   NVL
                                         FROM sales_order s,
                                        WHERE NVL (b.ar_sorder_serial, 0) = 1
                                     GROUP BY s.brn_no
                                     SELECT   0 bno, 0 rep_code,
                                         FROM ias_para_ar b,
                                        WHERE NVL (ar_sorder_serial, 0) = 1
                                     GROUP BY u.conn_brn_no) q
                           GROUP BY brn_no) i,
                    WHERE u.rep_code IS NOT NULL
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (order_no)), 0) bno,
                                 FROM sales_order s,
                                WHERE NVL (b.ar_sorder_serial, 0) = 2
                             GROUP BY rep_code, brn_no, so_type
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE p.doc_type = 2
            GROUP BY reprs_code, u.conn_brn_no, typ_no) q
                   GROUP BY rep_code, brn_no, bill_doc_type, typ_no
           SELECT 3 doc_typ, 'Sales Bill' doc_typ_nm, bill_no doc_no,
             FROM (SELECT bill_no, u.rep_code, i.brn_no brn_no,
                     FROM (SELECT   NVL (MAX (q.bno), 0) + 1 bill_no,
                               FROM (SELECT   NVL
                                         FROM ias_bill_mst s,
                                        WHERE NVL (b.invoicing_serials, 0) = 1
                                     GROUP BY brn_no
                                     SELECT   NVL
                                         FROM ias_bill_mst_br s,
                                        WHERE NVL (bill_post, 0) <> 1
                                     GROUP BY brn_no
                                     SELECT   0 bno, 0 rep_code,
                                         FROM ias_para_ar b,
                                        WHERE u.rep_code IS NOT NULL
                                     GROUP BY u.conn_brn_no) q
                           GROUP BY brn_no) i,
                    WHERE u.rep_code IS NOT NULL
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE NVL (b.invoicing_serials, 0) = 2
                             GROUP BY rep_code, brn_no, bill_doc_type
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                             GROUP BY rep_code, brn_no, bill_doc_type
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE flg_code = 'TYPE_NAME_SI'
                             GROUP BY reprs_code, u.conn_brn_no, flg_value) q
                   GROUP BY rep_code, brn_no, bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE s.cc_code IN (
                                         SELECT cc_code
                                           FROM cost_centers
                                          WHERE NVL (c_sr, 0) =
                                                   (SELECT NVL (c_sr, 0)
                                                      FROM cost_centers
                                                     WHERE cc_code = r.cc_code))
                             GROUP BY rep_code, brn_no, s.cc_code
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                                         SELECT cc_code
                                           FROM cost_centers
                                          WHERE NVL (c_sr, 0) =
                                                   (SELECT NVL (c_sr, 0)
                     FROM cost_centers
                                                     WHERE cc_code = r.cc_code))
                             GROUP BY rep_code, brn_no, s.cc_code
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b, sales_man r, user_r u
                                WHERE r.cc_code IN (
                                         SELECT cc_code
                                           FROM cost_centers
                                          WHERE NVL (c_sr, 0) =
                                                   (SELECT NVL (c_sr, 0)
                                                      FROM cost_centers
                                                     WHERE cc_code = r.cc_code))
                             GROUP BY reprs_code, u.conn_brn_no, r.cc_code) q
                   GROUP BY rep_code, brn_no, bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE NVL (b.invoicing_serials, 0) = 6
                             GROUP BY rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                             GROUP BY rep_code,
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE flg_code = 'TYPE_NAME_SI'
                             GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE NVL (b.invoicing_serials, 0) = 4
                             GROUP BY rep_code, brn_no, s.w_code
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                             GROUP BY rep_code,
                             SELECT   0 bno, rep_code, u.conn_brn_no brn_no,
                                 FROM ias_para_ar b, sales_man r, user_r u
                                WHERE NVL (b.invoicing_serials, 0) = 4
                             GROUP BY rep_code, u.conn_brn_no, r.w_code) q
                   GROUP BY rep_code, brn_no, bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE NVL (b.invoicing_serials, 0) = 5
                             GROUP BY rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                             GROUP BY rep_code,
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE NVL (b.invoicing_serials, 0) = 5
                             GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE t.typ_no = s.si_type
                             GROUP BY NVL (r.reprs_code, 0),
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                             GROUP BY NVL (r.reprs_code, 0),
                             SELECT   0 bno, NVL (r.reprs_code, 0) rep_code,
                                 FROM ias_para_ar b,
                                WHERE doc_type = 4
                             GROUP BY NVL (r.reprs_code, 0),
                   GROUP BY rep_code, brn_no, bill_doc_type, typ_no
             SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE t.typ_no = s.si_type
                             GROUP BY s.rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                             GROUP BY s.rep_code,
                             SELECT   0 bno, r.reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE doc_type = 4
                             GROUP BY r.reprs_code, u.conn_brn_no, t.typ_no) q
                   GROUP BY rep_code, brn_no, bill_doc_type, typ_no
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE t.typ_no = s.si_type
                             GROUP BY s.rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                             GROUP BY s.rep_code,
                             SELECT DISTINCT 0 bno, r.reprs_code rep_code,
                                        FROM ias_para_ar b,
                                       WHERE flg_code = 'TYPE_NAME_SI'
                                    GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, bill_doc_type, typ_no
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst s,
                                WHERE t.typ_no = s.si_type
                             GROUP BY s.rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (bill_no)), 0) bno,
                                 FROM ias_bill_mst_br s,
                                WHERE NVL (bill_post, 0) <> 1
                             GROUP BY s.rep_code,
                             SELECT DISTINCT 0 bno, r.reprs_code rep_code,
                                        FROM ias_para_ar b,
                                       WHERE flg_code = 'TYPE_NAME_SI'
                                    GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, bill_doc_type, typ_no)
           SELECT 4 doc_typ, 'Rt_Sales Bill' doc_typ_nm, bill_no doc_no,
             FROM (SELECT bill_no, u.rep_code, i.brn_no brn_no,
                     FROM (SELECT   NVL (MAX (q.bno), 0) + 1 bill_no,
                               FROM (SELECT   NVL
                                         FROM ias_rt_bill_mst s,
                                        WHERE NVL (b.invoicing_serials_sr, 0) =1
                                     GROUP BY brn_no
                                     SELECT   NVL
                                         FROM ias_rt_bill_mst_br s,
                                        WHERE NVL (rt_bill_post, 0) <> 1
                                     GROUP BY brn_no
                                     SELECT   0 bno, 0 rep_code,
                                         FROM ias_para_ar b,
                                        WHERE u.rep_code IS NOT NULL
                                     GROUP BY u.conn_brn_no) q
                           GROUP BY brn_no) i,
                    WHERE u.rep_code IS NOT NULL
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst s,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 2
                             GROUP BY rep_code, brn_no, rt_bill_doc_type
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                             GROUP BY rep_code, brn_no, rt_bill_doc_type
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE flg_code = 'TYPE_NAME'
                             GROUP BY reprs_code, u.conn_brn_no, flg_value) q
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst s,
                                WHERE s.cc_code IN (
                                         SELECT cc_code
                                           FROM cost_centers
                                          WHERE NVL (c_sr, 0) =
                                                   (SELECT NVL (c_sr, 0)
                                                      FROM cost_centers
                                                     WHERE cc_code = r.cc_code))
                             GROUP BY rep_code, brn_no, s.cc_code
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                                         SELECT cc_code
                                           FROM cost_centers
                                          WHERE NVL (c_sr, 0) =
                                                   (SELECT NVL (c_sr, 0)
                                                      FROM cost_centers
                                                     WHERE cc_code = r.cc_code))
                             GROUP BY rep_code, brn_no, s.cc_code
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b, sales_man r, user_r u
                                WHERE r.cc_code IN (
                                         SELECT cc_code
                                           FROM cost_centers
                                          WHERE NVL (c_sr, 0) =
                                                   (SELECT NVL (c_sr, 0)
                                                      FROM cost_centers
                                                     WHERE cc_code = r.cc_code))
                             GROUP BY reprs_code, u.conn_brn_no, r.cc_code) q
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst s,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 6
                             GROUP BY rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                             GROUP BY rep_code,
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE flg_code = 'TYPE_NAME'
                             GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst s,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 4
                             GROUP BY rep_code, brn_no, s.w_code
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                             GROUP BY rep_code,
                             SELECT   0 bno, rep_code, u.conn_brn_no brn_no,
                                 FROM ias_para_ar b, sales_man r, user_r u
                                WHERE NVL (b.invoicing_serials_sr, 0) = 4
                             GROUP BY rep_code, u.conn_brn_no, r.w_code) q
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst s,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 5
                             GROUP BY rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                             GROUP BY rep_code,
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 5
                             GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst s,
                                WHERE t.typ_no = s.sr_type
                             GROUP BY NVL (r.reprs_code, 0),
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                             GROUP BY NVL (r.reprs_code, 0),
                             SELECT   0 bno, NVL (r.reprs_code, 0) rep_code,
                                 FROM ias_para_ar b,
                                WHERE doc_type = 4
                             GROUP BY NVL (r.reprs_code, 0),
                   GROUP BY rep_code, brn_no, rt_bill_doc_type, typ_no
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MA
                                 FROM ias_rt_bill_mst s,
                                WHERE t.typ_no = s.sr_type
                             GROUP BY s.rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                             GROUP BY s.rep_code,
                             SELECT   0 bno, r.reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE doc_type = 4
                             GROUP BY r.reprs_code, u.conn_brn_no, t.typ_no) q
                   GROUP BY rep_code, brn_no, rt_bill_doc_type, typ_no
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst s,
                                WHERE t.typ_no = s.sr_type
                             GROUP BY s.rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                             GROUP BY s.rep_code,
                             SELECT DISTINCT 0 bno, r.reprs_code rep_code,
                                        FROM ias_para_ar b,
                                       WHERE flg_code = 'TYPE_NAME'
                                    GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, rt_bill_doc_type, typ_no
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst s,
                                WHERE t.typ_no = s.sr_type
                             GROUP BY s.rep_code,
                             SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_br s,
                                WHERE NVL (rt_bill_post, 0) <> 1
                             GROUP BY s.rep_code,
                             SELECT DISTINCT 0 bno, r.reprs_code rep_code,
                                        FROM ias_para_ar b,
                                       WHERE flg_code = 'TYPE_NAME'
                                    GROUP BY reprs_code,
                 GROUP BY rep_code, brn_no, rt_bill_doc_type, typ_no)
           SELECT 9 doc_typ, 'Rt_Sales Requst' doc_typ_nm, bill_no doc_no,
             FROM (SELECT bill_no, u.rep_code, i.brn_no brn_no,
                     FROM (SELECT   NVL (MAX (q.bno), 0) + 1 bill_no,
                               FROM (SELECT   NVL
                                         FROM ias_rt_bill_mst_rq s,
                                        WHERE NVL (b.invoicing_serials_sr, 0) =1
                                     GROUP BY brn_no
                                     SELECT   0 bno, 0 rep_code,
                                         FROM ias_para_ar b,
                                        WHERE u.rep_code IS NOT NULL
                                     GROUP BY u.conn_brn_no) q
                           GROUP BY brn_no) i,
                    WHERE u.rep_code IS NOT NULL
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 2
                             GROUP BY rep_code, brn_no, rt_bill_doc_type
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE flg_code = 'TYPE_NAME'
                             GROUP BY reprs_code, u.conn_brn_no, flg_value) q
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE s.cc_code IN (
                                         SELECT cc_code
                                           FROM cost_centers
                                          WHERE NVL (c_sr, 0) =
                                                   (SELECT NVL (c_sr, 0)
                                                      FROM cost_centers
                                                     WHERE cc_code = r.cc_code))
                             GROUP BY rep_code, brn_no, s.cc_code
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b, sales_man r, user_r u
                                WHERE r.cc_code IN (
                                         SELECT cc_code
                                           FROM cost_centers
                                          WHERE NVL (c_sr, 0) =
                                                   (SELECT NVL (c_sr, 0)
                                                      FROM cost_centers
                                                     WHERE cc_code = r.cc_code))
                             GROUP BY reprs_code, u.conn_brn_no, r.cc_code) q
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 6
                             GROUP BY rep_code,
                             SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE flg_code = 'TYPE_NAME'
                             GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 4
                             GROUP BY rep_code, brn_no, s.w_code
                             SELECT   0 bno, rep_code, u.conn_brn_no brn_no,
                                 FROM ias_para_ar b, sales_man r, user_r u
                                WHERE NVL (b.invoicing_serials_sr, 0) = 4
                             GROUP BY rep_code, u.conn_brn_no, r.w_code) q
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 5
                             GROUP BY rep_code,
                         SELECT   0 bno, reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE NVL (b.invoicing_serials_sr, 0) = 5
                             GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, rt_bill_doc_type
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE t.typ_no = s.sr_type
                             GROUP BY NVL (r.reprs_code, 0),
                             SELECT   0 bno, NVL (r.reprs_code, 0) rep_code,
                                 FROM ias_para_ar b,
                                WHERE doc_type = 9
                             GROUP BY NVL (r.reprs_code, 0),
                   GROUP BY rep_code, brn_no, rt_bill_doc_type, typ_no
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                 FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE t.typ_no = s.sr_type
                             GROUP BY s.rep_code,
                             SELECT   0 bno, r.reprs_code rep_code,
                                 FROM ias_para_ar b,
                                WHERE doc_type = 9
                             GROUP BY r.reprs_code, u.conn_brn_no, t.typ_no) q
                   GROUP BY rep_code, brn_no, rt_bill_doc_type, typ_no
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE t.typ_no = s.sr_type
                             GROUP BY s.rep_code,
                             SELECT DISTINCT 0 bno, r.reprs_code rep_code,
                                        FROM ias_para_ar b,
                                       WHERE flg_code = 'TYPE_NAME'
                                    GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, rt_bill_doc_type, typ_no
                   SELECT   NVL (MAX (q.bno), 0) + 1 bill_no, q.rep_code,
                       FROM (SELECT   NVL (MAX (TO_NUMBER (rt_bill_no)),
                                 FROM ias_rt_bill_mst_rq s,
                                WHERE t.typ_no = s.sr_type
                             GROUP BY s.rep_code,
                             SELECT DISTINCT 0 bno, r.reprs_code rep_code,
                                        FROM ias_para_ar b,
                                       WHERE flg_code = 'TYPE_NAME'
                                    GROUP BY reprs_code,
                   GROUP BY rep_code, brn_no, rt_bill_doc_type, typ_no)       
                                                                       SELECT sman_typ, u.rep_code, sm.c_code, ccy.a_cy, u.u_id,
                                                                       FROM   customer c,
                                                                       WHERE  c.c_code = sm.c_code
                                                                        AND 1= (CASE WHEN ( NVL(P.Ar_Ac_Link_Type,1) = 1 AND EXISTS(SELECT 1
                                                                                                             FROM PRIV_ACC
                                                                                                            WHERE U_ID = U.U_ID
                                                                                                                                   SELECT 1
                                                                                                                                     FROM IAS_PRIV_CUSTOMER
                                                                                                                                    WHERE U_ID = U.U_ID
   (SELECT   rep_code, grp_code, i_code, i_name, i_e_name, w_code,
    FROM     (SELECT   s.rep_code rep_code, s.grp_code, m.i_code, g.i_name,
              FROM     item_movement m,
                       (SELECT DISTINCT rep_code, grp_code, i_code, i_name,
                        FROM            dts_v_get_itm_dtl) g,
              WHERE    m.i_code = g.i_code
              AND 1=(CASE WHEN S.W_CODE IS NULL THEN  (SELECT 1 FROM   privilege_wh WHERE W_CODE=M.W_CODE
                         ELSE (SELECT 1 FROM SALES_MAN WHERE REPRS_CODE=S.REP_CODE AND W_CODE=M.W_CODE AND ROWNUM<=1 )
              GROUP BY s.rep_code,
              SELECT s.rep_code rep_code, s.grp_code, g.i_code, g.i_name,
              FROM   WAREHOUSE_DETAILS m,
                     (SELECT DISTINCT rep_code, grp_code, i_code, i_name,
                        FROM            dts_v_get_itm_dtl) g,
              WHERE g.grp_code = s.grp_code
                  AND 1=(CASE WHEN NVL(P.use_dts_without_inv,0) =0  THEN  (SELECT 1 FROM   ias_itm_wcode 
                                                                                   WHERE W_CODE=M.W_CODE
                  AND 1=(CASE WHEN S.W_CODE IS NULL THEN  (SELECT 1 FROM   privilege_wh WHERE W_CODE=M.W_CODE
                             ELSE (SELECT 1 FROM SALES_MAN WHERE REPRS_CODE=S.REP_CODE AND W_CODE=M.W_CODE AND ROWNUM<=1 )
                  AND    (g.i_code, M.w_code) NOT IN (SELECT i_code, w_code
                                                      FROM   item_movement)
              SELECT   s.rep_code rep_code, s.grp_code, d.i_code, g.i_name,
              FROM     ias_bill_dtl_br d,
                       (SELECT DISTINCT rep_code, grp_code, i_code, i_name,
                        FROM            dts_v_get_itm_dtl)  g,
              WHERE    m.bill_ser = d.bill_ser
               AND 1=(CASE WHEN S.W_CODE IS NULL THEN  (SELECT 1 FROM   privilege_wh WHERE W_CODE=D.W_CODE
                         ELSE (SELECT 1 FROM SALES_MAN WHERE REPRS_CODE=S.REP_CODE AND W_CODE=D.W_CODE AND ROWNUM<=1 )
              GROUP BY s.rep_code,
              SELECT   s.rep_code rep_code, s.grp_code, d.i_code, g.i_name,
              FROM     ias_rt_bill_mst_br m,
                       (SELECT DISTINCT rep_code, grp_code, i_code, i_name,
                        FROM            dts_v_get_itm_dtl) g,
              WHERE    m.rt_bill_ser = d.rt_bill_ser
 IS NULL THEN  (SELECT 1 FROM   privilege_wh WHERE W_CODE=D.W_CODE
                         ELSE (SELECT 1 FROM SALES_MAN WHERE REPRS_CODE=S.REP_CODE AND W_CODE=D.W_CODE AND ROWNUM<=1 )
              GROUP BY s.rep_code,
    GROUP BY rep_code,
   SELECT sman_typ, rep_code, u_id, brn_no, w_code, cash_no, bank_no,
   FROM   (SELECT 1 sman_typ, s.reprs_code rep_code, u.u_id,
                  NVL ((SELECT   COUNT (vst_sts) sucses_vsts
                        FROM     dts_cst_vst_mst m
                        WHERE    vst_sts = 1
                        GROUP BY m.rep_code),
                  NVL ((SELECT   COUNT (vst_sts) failed_vsts
                  FROM     dts_cst_vst_mst m
                        WHERE    vst_sts = 0
                        GROUP BY m.rep_code),
           FROM   sales_man s,
           WHERE  NVL (s.inactive, 0) = 0
Select U.U_Id, Nvl (U_A_Name, U_E_Name) U_L_Nm,
                           From User_R U,Sales_Man s, WAREHOUSE_DETAILS  i,   PRIVILEGE_WH ip
                          Where U.U_Id = ip.U_Id   And U.rep_Code is not null 
           Select C_CODE , REP_CODE, A_CY, Sum(BAMT) BAmt, Sum(BAMTF) BAMTF,Sum(disc_amt_ccode) disc_amt_ccode
             from ( 
              SELECT   m.C_Code , m.rep_code,m.bill_Currency a_cy,SUM (NVL (i_qty, 0) * NVL (i_price, 0)) bamt,
                    FROM ias_bill_dtl_br  d ,ias_bill_mst_br m
                   WHERE m.bill_ser = d.BILL_ser
0)=0 or m.bill_ser not in(select i.bill_ser from ias_bill_mst i where nvl(external_post,0)=70))
           GROUP BY  m.C_Code , m.rep_code,m.bill_Currency ,
                SELECT   m.C_Code , m.rep_code,m.rt_bill_Currency a_cy ,
                FROM ias_rt_bill_dtl_br  d ,ias_rt_bill_mst_br m
               WHERE m.rt_bill_ser = d.rt_bill_ser 
                 and (nvl(m.rt_bill_post,0)=0 or m.rt_bill_ser not in(select i.rt_bill_ser from ias_rt_bill_mst i where nvl(external_post,0)=70))
            GROUP BY  C_Code , rep_code,rt_bill_Currency ,
          GROUP BY  C_Code , rep_code,A_Cy ,
     Select C_Code,
       From (  Select C_Code,
                 From Ias_Bill_Mst_Br M
                Where Nvl(External_Post, 0) = 70
                      And  Not exists (Select 1
                                             From Ias_Bill_Mst I
                                            Where Nvl(External_Post, 0) = 70
             Group By C_Code, Rep_Code, Bill_Currency
               Select C_Code,
                 From Ias_Rt_Bill_Mst_Br
                Where Nvl(External_Post, 0) = 70
                      And  Not exists (Select 1
                                             From Ias_Rt_Bill_Mst I
                                            Where Nvl(External_Post, 0) = 70
             Group By C_Code, Rep_Code, Rt_Bill_Currency)
   Group By C_Code, Rep_Code, A_Cy 
               SELECT   rep_c
           FROM (SELECT   rep_code, c_code, COUNT (vst_sts) sucses_vst,
                   FROM dts_cst_vst_mst m
                WHERE vst_sts = 1
             GROUP BY m.rep_code, m.c_code
             SELECT   rep_code, c_code, 0 sucses_vst,
                 FROM dts_cst_vst_mst m
                WHERE vst_sts = 0
             GROUP BY m.rep_code, m.c_code
             SELECT   rep_code, c_code, 0 sucses_vst, 0 failed_vst,
                 FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 0
             GROUP BY m.rep_code, m.c_code
             SELECT   rep_code, c_code, 0 sucses_vst, 0 failed_vst,
                 FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 1
             GROUP BY m.rep_code, m.c_code
             SELECT   rep_code, c_code, 0 sucses_vst, 0 failed_vst,
                 FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 2
             GROUP BY m.rep_code, m.c_code
             SELECT   rep_code, c_code, 0 sucses_vst, 0 failed_vst,
                 FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 3
             GROUP BY m.rep_code, m.c_code
             SELECT   rep_code, c_code, 0 sucses_vst, 0 failed_vst,
                 FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 4
             GROUP BY m.rep_code, m.c_code
  SELECT   rep_code, c_code, 0 sucses_vst, 0 failed_vst,
                 FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 5
             GROUP BY m.rep_code, m.c_code
             SELECT   rep_code, c_code, 0 sucses_vst, 0 failed_vst,
                 FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 31
             GROUP BY m.rep_code, m.c_code
             SELECT   rep_code, c_code, 0 sucses_vst, 0 failed_vst,
                 FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 8
             GROUP BY m.rep_code, m.c_code)
   GROUP BY rep_code, c_code
                (SELECT   TO_DATE (d.doc_date, 'DD/MM/RRRR') doc_date, d.rep_code,
                        FROM ias_post_dtl d
                       WHERE doc_type = 2
                         AND a_code NOT IN (SELECT a_code
                                              FROM cash_in_hand)
                    GROUP BY TO_DATE (d.doc_date, 'DD/MM/RRRR'),
                    SELECT   TO_DATE (d.doc_date, 'DD/MM/RRRR') doc_date, d.rep_code,
                         FROM ias_post_dtl d
                       WHERE doc_type = 2
                         AND a_code NOT IN (SELECT a_code
                                              FROM cash_in_hand)
                    GROUP BY TO_DATE (d.doc_date
                    SELECT   TO_DATE (m.voucher_date, 'DD/MM/RRRR') doc_date, d.rep_code,
                        FROM voucher_detail d, vouchers m
                       WHERE m.v_ser = d.v_ser
                         AND a_code NOT IN (SELECT a_code
                                              FROM cash_in_hand)
                    GROUP BY TO_DATE (m.voucher_date, 'DD/MM/RRRR'),
                    SELECT   doc_date, c_code, rep_code, a_cy, NVL (SUM (b_amt), 0) b_amt,
                           FROM ( 
                              SELECT   TO_CHAR (m.bill_date, 'DD/MM/RRRR') doc_date, c_code,
                                     FROM ias_bill_mst m
        WHERE  nvl(m.Stand_by,0)=0
                                 GROUP BY TO_CHAR (m.bill_date, 'DD/MM/RRRR'),
                                 SELECT   TO_CHAR (rt_bill_date, 'DD/MM/RRRR') doc_date, c_code,
                                     FROM ias_rt_bill_mst m
                                    WHERE  nvl(m.Stand_by,0)=0
                                GROUP BY TO_CHAR (rt_bill_date, 'DD/MM/RRRR'),
                       GROUP BY doc_date,c_code, rep_code, a_cy
            SELECT  doc_date , c_code, rep_code, a_cy,
                FROM (
                 SELECT   TO_CHAR (m.bill_date, 'DD/MM/RRRR') doc_date, c_code,
                          FROM ias_bill_mst_br m
                         WHERE  nvl(m.Stand_by,0)=0
                                OR bill_ser NOT IN (SELECT i.bill_ser
                                                      FROM ias_bill_mst i
                                                     WHERE NVL (external_post, 0) = 70)
                      GROUP BY TO_CHAR (m.bill_date, 'DD/MM/RRRR'),
                   SELECT   TO_CHAR (rt_bill_date, 'DD/MM/RRRR') doc_date, c_code,
                          FROM ias_rt_bill_mst_br
                         WHERE  nvl(Stand_by,0)=0
                                OR rt_bill_ser NOT IN (SELECT i.rt_bill_ser
                                                         FROM ias_rt_bill_mst i
                                                        WHERE NVL (external_post, 0) = 70)
                      GROUP BY TO_CHAR (rt_bill_date, 'DD/MM/RRRR'),
            GROUP BY  doc_date, c_code, rep_code, a_cy 
            SELECT      To_DATE(DOC_DATE,'DD/MM/RRRR') Doc_Date, C_CODE, REP_CODE, 
            FROM (SELECT      To_DATE(DOC_DATE,'DD/MM/RRRR') Doc_Date, C_CODE, REP_CODE, 
                            FROM DTS_V_GET_REP_PSTD_NET_SLS
                      SELECT     To_DATE(DOC_DATE,'DD/MM/RRRR') doc_date, C_CODE, REP_CODE, 
                            FROM DTS_V_GET_REP_UnPSTD_NET_SLS  
            group by 
      SELECT     to_date(pln_date,'DD/MM/RRRR') pln_date ,rep_code,c_code, NVL (SUM (sucses_vst), 0) sucses_vsts,
                           FROM (SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , COUNT (vst_sts) sucses_vst,
                                     FROM dts_cst_vst_mst m
                                    WHERE vst_sts = 1
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst,
                                     FROM dts_cst_vst_mst m
                                    WHERE vst_sts = 0
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst, 0 failed_vst,
                                     FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                                    WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 0
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst, 0 failed_vst,
                                     FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                                    WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 1
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst, 0 failed_vst,
                                     FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                                    WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 2
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst, 0 failed_vst,
                                     FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                                    WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 3
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst, 0 failed_vst,
                                     FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                                    WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 4
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst, 0 failed_vst,
                                     FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                                    WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 5
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst, 0 failed_vst,
                                     FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                                    WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 31
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code
                                 SELECT    rep_code,c_code,to_date(ARIVL_TM,'DD/MM/RRRR') pln_date , 0 sucses_vst, 0 failed_vst,
                                     FROM dts_cst_vst_mst m, dts_cst_vst_dtl d
                                    WHERE m.vst_srl = d.vst_srl AND doc_type_ref = 8
                                 GROUP BY to_date(ARIVL_TM,'DD/MM/RRRR') ,m.rep_code,m.c_code)
                       GROUP BY  to_date(pln_date,'DD/MM/RRRR'),rep_code, c_code
                SELECT   m.rep_code, m.c_code, NVL (c.c_a_name, 'no local name') cst_l_nm,
                       FROM customer c, dts_v_sman_cst m
                      WHERE sman_typ = 1 
                   ORDER BY c.sortinroute, m.c_code
                select d.Rep_Code,To_Date(To_char(d.GPS_DATE, 'DD/MM/YYYY HH24:MI:SS'), 'DD/MM/YYYY HH24:MI:SS') gps_date,srl,nvl(c.REPRS_a_name,'no local name') Sman_L_Nm,nvl(c.REPRS_e_name,'no foreign name') Sman_F_Nm,
                  From Sales_Man c ,GPS_EVENT_HSTRY d 
                Where SMAN_TYP=1
                Order By  d.rep_code,srl 
                select d.Rep_Code,To_Date(To_char(d.GPS_DATE, 'DD/MM/YYYY HH24:MI:SS'), 'DD/MM/YYYY HH24:MI:SS') gps_date,srl,nvl(c.REPRS_a_name,'no local name') Sman_L_Nm,nvl(c.REPRS_e_name,'no foreign name') Sman_F_Nm,
                  From Sales_Man c ,GPS_EVENT d 
                Where SMAN_TYP=1
                Order By  d.rep_code,srl 
                select m.Rep_Code,m.DOC_NO,m.Doc_Ser,m.Doc_date plan_date,d.c_code,nvl(c.c_a_name,'no local name') Cst_L_Nm,nvl(c.c_e_name,'no foreign name') Cst_F_Nm,c.GPS,
                   From Customer c ,Dts_Plan_Sman_Dtl d ,Dts_Plan_Sman_mst m 
                Where m.doc_ser=d.doc_ser
                Order By  c.sortinroute,d.c_code 
    Select   u.u_id,nvl(u_a_name,u_e_name) u
       From  user_r u ,sales_man s ,warehouse_details i, privilege_wh ip   
      Where  u.u_id = ip.u_id
SELECT   REP_CODE, GRP_CODE, I_CODE,ITM_UNT,P_SIZE,SRL_NO,W_CODE,NVL (SUM (AVL_QTY),0) AVL_QTY
(SELECT   S.REP_CODE, S.GRP_CODE, 
                                  FROM IAS_ITEM_SERIALNO M,
                                 WHERE DECODE (YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_INV', 'USE_SERIALNO',' WHERE 1=1 '),1,1,0)=1
                          GROUP BY S.REP_CODE,S.GRP_CODE,S.W_CODE, 
                  SELECT   S.REP_CODE, S.GRP_CODE, 
                                  FROM IAS_ITEM_SERIALNO_BR M,
                                 WHERE DECODE (YS_GEN_PKG.GET_FLD_VALUE ('IAS_PARA_INV', 'USE_SERIALNO',' WHERE 1=1 '),1,1,0)=1
                                   AND (DOC_TYPE,DOC_SER,SERIALNO) NOT IN(SELECT DOC_TYPE,DOC_SER,SERIALNO FROM IAS_ITEM_SERIALNO)
                          GROUP BY S.REP_CODE,S.GRP_CODE,S.W_CODE, 
GROUP BY REP_CODE, GRP_CODE, I_CODE,ITM_UNT,P_SIZE,SRL_NO,W_CODE   
   (SELECT   W_CODE, I_CODE, IAS_ITM_PKG.GET_ICODE_MIN_UNIT (I_CODE) ITM_UNT,
        FROM (SELECT   M.W_CODE, M.I_CODE,
                  FROM ITEM_MOVEMENT M,
                 WHERE DECODE (NVL (SHW_QTY_IN_ALL_WRHS, 0),
              GROUP BY M.I_CODE, M.W_CODE, M.EXPIRE_DATE, M.BATCH_NO
              SELECT   D.W_CODE, D.I_CODE,
                  FROM IAS_BILL_DTL_BR D,
                 WHERE M.BILL_SER = D.BILL_SER
              GROUP BY D.I_CODE, D.W_CODE, D.EXPIRE_DATE, D.BATCH_NO
              SELECT   D.W_CODE, D.I_CODE,
                  FROM IAS_RT_BILL_MST_BR M,
                 WHERE M.RT_BILL_SER = D.RT_BILL_SER
              GROUP BY D.I_CODE, D.W_CODE, D.EXPIRE_DATE, D.BATCH_NO)
    GROUP BY I_CODE, W_CODE, EXPIRE_DATE, BATCH_NO)
AS SELECT REP_CODE, RT_BILL_DOC_TYPE, RT_BILL_NO, RT_BILL_SER, 
FROM IAS_RT_BILL_MST_RQ
WHERE NVL(PROCESSED,0)<>1
SELECT  M.REP_CODE, D.RT_BILL_SER, D.DOC_SEQUENCE,  
FROM IAS_RT_BILL_DTL_RQ  D,IAS_RT_B
WHERE D.RT_BILL_SER=M.RT_BILL_SER
                                                                                       SELECT s
                                                                                       FROM   ias_pricing_levels l,
                                                                                       WHERE  NVL (pl.add_flag, 0) = 1
   SELECT DISTINCT l.rep_code, p.lev_no, p.i_code, p.itm_unt, p.p_size,
   FROM            ias_item_price p,
   WHERE           g.i_code = p.i_code
   AND 1=(CASE  WHEN pv.price_type IN(2,4) THEN (  CASE WHEN S.W_CODE IS NULL THEN  (SELECT 1 FROM   privilege_wh WHERE privilege_wh.W_CODE=P.W_CODE
                                                               ELSE (SELECT 1 FROM SALES_MAN WHERE SALES_MAN.REPRS_CODE=S.REP_CODE AND SALES_MAN.W_CODE=P.W_CODE AND ROWNUM<=1 )
                WHEN pv.price_type=5  THEN   (SELECT 1 FROM dts_v_sman_info WHERE REP_CODE=S.REP_CODE AND brn_no=p.brn_no AND ROWNUM<=1 ) 
   SELECT sm.rep_code, ac.a_code, ac.a_name, ac.a_name_eng e_name, acy.a_cy,
   FROM   ACCOUNT ac,
   WHERE  ac.a_code = acy.a_code
   AND    a_s_m IN (SELECT account_type
                    FROM   account_types
                    WHERE  affected_by_trans = 1)
             SELECT 1
             FROM   priv_acc
             WHERE  u_id = sm.u_id
   SELECT sm.rep_code, ac.a_code, cst.c_a_name a_name, cst.c_e_name e_name,
   FROM   ACCOUNT ac,
   WHERE  ac.a_code = acy.a_code
   AND    a_s_m IN (SELECT account_type
                    FROM   account_types
                    WHERE  affected_by_trans = 1)
             SELECT 1
             FROM   priv_acc
             WHERE  u_id = sm.u_id
                    THEN (SELECT 1
                          FROM   ias_priv_customer
                          WHERE  u_id = sm.u_id
                 ELSE (SELECT 1
                       FROM   customer_curr a,
                       WHERE  a.c_code = b.c_code
   SELECT sm.rep_code, ac.a_code, vnd.v_a_name a_name, vnd.v_e_name e_name,
   FROM   ACCOUNT ac,
   WHERE  ac.a_code = acy.a_code
   AND    a_s_m IN (SELECT account_type
                    FROM   account_types
                    WHERE  affected_by_trans = 1)
             SELECT 1
             FROM   priv_acc
             WHERE  u_id = sm.u_id
                    THEN (SELECT 1
                          FROM   ias_priv_vendor
                          WHERE  u_id = sm.u_id
                 ELSE (SELECT 1
                       FROM   vendor_curr a,
                       WHERE  a.v_code = b.v_code
   SELECT sm.rep_code, ac.a_code, csh.cash_name a_name,
   FROM   ACCOUNT ac,
   WHERE  ac.a_code = acy.a_code
   AND    a_s_m IN (SELECT account_type
                    FROM   account_types
                    WHERE  affected_by_trans = 1)
             SELECT 1
             FROM   priv_acc
             WHERE  u_id = sm.u_id
             SELECT 1
             FROM   priv_cash
             WHERE  u_id = sm.u_id
   SELECT sm.rep_code, ac.a_code, bnk.bank_name a_name,
   FROM   ACCOUNT ac,
   WHERE  ac.a_code = acy.a_code
   AND    a_s_m IN (SELECT account_type
                    FROM   account_types
                    WHERE  affected_by_trans = 1)
             SELECT 1
             FROM   priv_acc
             WHERE  u_id = sm.u_id
             SELECT 1
             FROM   priv_cash
             WHERE  u_id = sm.u_id
   SELECT sm.rep_code, ac.a_code, s.emp_l_nm a_name, s.emp_f_nm e_name,
   FROM   ACCOUNT ac,
   WHERE  ac.a_code = acy.a_code
   AND    a_s_m IN (SELECT account_type
                    FROM   account_types
                    WHERE  affected_by_trans = 1)
             SELECT 1
             FROM   priv_acc
             WHERE  u_id = sm.u_id
             SELECT 1
             FROM   s_brn_usr_priv
             WHERE  u_id = sm.u_id
                 ELSE (SELECT 1
                       FROM   s_emp_prv
                       WHERE  u_id = sm.u_id
   Select 4 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Ias_Bill_Mst_Br Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 5
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Ias_Rt_Bill_Mst_Br Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 52 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Quotation Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 53 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Sales_Order Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 1410 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Dts_Stk_Cst_Mst Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 2 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Vouchers Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 136 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Ias_Rt_Bill_Mst_Rq Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 1406 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Dts_Itms_Shw_Mst Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 1407 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Ars_Questnnr_Mst Br
    Where M.Vst_Srl = D.Vst_Srl
   Select 31 Doc_Type,
     From Dts_Cst_Vst_Mst M, Dts_Cst_Vst_Dtl D, Ias_Out_Request_Mst Br
    Where M.Vst_Srl = D.Vst_Srl
   SELECT sm.rep_code, m.quot_no, m.quot_ser, m.i_code, m.itm_unt, m.p_size,
          Nvl((SELECT SUM (NVL (b.i_qty, 0)+nvl(FREE_QTY,0))
                           FROM   ias_bill_dtl b
                           WHERE  m.quot_ser = b.qt_prm_ser AND m.rcrd_no = b.qt_prm_rcrd_no),0)
   FROM   ias_qut_prm_dtl m,
   WHERE  1 =
                   THEN (SELECT 1
                         FROM   dts_v_get_itm_dtl
                         WHERE  rep_code = sm.rep_code
   SELECT sm.rep_code, m.rcrd_no, m.quot_no, m.quot_ser, m.i_code, m.free_q
   FROM   ias_qut_prm_sub_dtl m,
   WHERE  i.i_code = m.i_code
                           SELECT    doc_type,
                           FROM     installment
                           WHERE   DOC_TYPE=4
                           GROUP BY  doc_type,
   SELECT 4, m.bill_doc_type, m.si_type, m.bill_no doc_no, m.bill_ser doc_ser,
   FROM   ias_bill_mst_br m,
   WHERE  m.bill_ser = d.bill_ser
   SELECT 5, m.rt_bill_doc_type, m.sr_type, m.rt_bill_no doc_no,
   FROM   ias_rt_bill_mst_br m,
   WHERE  m.rt_bill_ser = d.rt_bill_ser
 Select     S.I_Code,
       From (Select Doc_Type,
               From Ias_Item_Serialno R,Sales_Man s
               where r.w_code=s.w_code
               and Exists(Select 1
                            From Dts_Grp_Dtl
                           Where Grp_Code = s.Grp_Code
             Select Doc_Type,
               From Ias_Item_Serialno_Br R,Sales_Man s
               where r.w_code=s.w_code
                     and Exists(Select 1 From Dts_Grp_Dtl
                                       Where Grp_Code = s.Grp_Code
                     and  Exists (select 1 from ias_bill_mst_br
                                        where bill_ser=r.doc_ser
                    and  Exists (select 1 from ias_Rt_bill_mst_br
                                        where Rt_bill_ser=r.doc_ser
   Group By S.I_Code,
   Select Doc_type
   From   (Select Doc_type
           From   Ias_item_serialno
           Where  Doc_type = 1
           Select Doc_type
           From   Ias_item_serialno_br
           Where  Doc_type = 1) S
   Where  Exists(Select 1
                 From   Dts_v_get_itm_dtl
                 Where  I_code = S.I_code And Nvl(Use_Serialno, 0) = 1) 
     And Exists(Select 1
                     From   Dts_v_sman_info
                     Where  W_code = S.W_code) 
   Select M.Questnr_no
   From   Ars_questn_questnnr M
   Where  M.Questnr_no = D.Sub_no And Main_code = 10 And D.Inactv = 0 And M.Inactv = 0
   Select M.Modl_no
   From  Ars_answr_questnnr_MST M ,Ars_answr_questnnr_dtl D
   WHERE M.Modl_no=D.Modl_no 
   Select C.Bank_No,
     From Cash_At_Bank C, Dts_V_Sman_Info S
    Where Nvl (C.Inactive, 0) = 0
                 (Select 1
                    From Priv_Acc
                   Where A_Code = C.A_Code
                 (Select 1
                    From Priv_Cash
                   Where Cash_Type = 2
   Select 2 Bill_type
   From   Ias_bill_mst
   Select 1 Bill_type
   From   Ias_bill_mst_br
   Select 2 Rt_bill_type
   From   Ias_rt_bill_mst
   Select 1 Rt_bill_type
   From   Ias_rt_bill_mst_br
   Select Rep_Code,
     From Credit_Card_Types,
    Where Credit_Card_Types.Cr_Card_Type = Ias_Cr_Card_Types.Cr_Card_Type
               Select S_Flags.Lang_No,
                 From S_Flags, S_Flags_Priv, Dts_V_Sman_Info
                Where S_Flags.Flg_Code = S_Flags_Priv.Flg_Code 
                    Select Distinct sm.rep_code,m.Clc_Typ_No CLC_TYP_NO_TAX ,Clc_Typ_L_Nm,Clc_Typ_F_Nm ,sm.Grp_Code, decode(nvl(sm.CLC_TYP_NO_TAX,0),nvl(m.Clc_Typ_No,0),1,0) DFLT_FLG
                            From  Gnr_Tax_Typ_Clc_Mst M,Gnr_Tax_Typ_Clc_Brn DB,Dts_V_Sman_Info sm
                           Where M.Clc_Typ_No=DB.Clc_Typ_No
                             And (M.Clc_Tax_Typ<>0 Or Exists(Select D.Clc_Typ_No
                                                             From Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Typ_Clc_Brn DB , Gnr_Tax_Code_Mst T
                                                            Where D.Tax_No    =T.Tax_No            
                                    Order By m.Clc_Typ_No 
                                   Select Distinct M.Rep_Code Rep_Code,
                                     From DTS_V_CLC_TAX_TYPE M,
                                    Where M.Grp_Code = D.Grp_Code
   Select Doc_Type ,DOC_TYPE_NAME(2,Doc_Type) DOC_TYPE_NAME,Sync_Method, Rep_Code
     From (Select D.Doc_Type, Decode(Nvl(P.Save_Doc_Method, 0), 1, P.Sync_Method, D.Sync_Method) Sync_Method, Null Rep_Code
             From Dts_Doc_Type D, Dts_Para P
            Where Nvl(P.Save_Doc_Method, 0) In (1, 3)
           Select D.Doc_Type, Nvl(S.Sync_Method, 1) Sync_Method, S.Reprs_Code Rep_Code
             From Dts_Doc_Type D, Sales_Man S, Dts_Para P
            Where Nvl(P.Save_Doc_Method, 0) = 2
                         (Select 1
                            From Dts_V_Sman_Info
                           Where Rep_Code = S.Reprs_Code
           Select S.Doc_Type, Nvl(S.Sync_Method, 1) Sync_Method, S.Rep_Code Rep_Code
             From Ias_Sman_Doc_Sync_Dts S, Dts_Para P
            Where Nvl(P.Save_Doc_Method, 0) = 4
                         (Select 1
                            From Dts_V_Sman_Info
                           Where Rep_Code = S.Rep_Code
Select C_Code,
  From Dts_Customer_Trgt
  where nvl(Inactive,0)=0
Complete Create View Dts
SELECT OBJECT_NAME VW_NM   FROM USER_OBJECTS  WHERE UPPER(OBJECT_TYPE) = UPPER(''VIEW'')  AND UPPER(OBJECT_NAME) LIKE  UPPER(''DTS_%'')"
"DTS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
Update Form_Detail Set Doc_Typ=1402 Where Form_No=1402 And Doc_Typ<>1402
 ALTER TABLE DTS_CST_VST_MST MODIFY(C_CODE  NULL) 
 ALTER TABLE DTS_CST_VST_DTL DROP COLUMN DOC_SER_REF_TMP
  Update Dts_Cst_Vst_Dtl Set Doc_Ser_Ref_Tmp = Doc_Ser_Ref 
 ALTER TABLE DTS_CST_VST_DTL DROP COLUMN DOC_SER_REF 
  Update Dts_Cst_Vst_Dtl Set Doc_Ser_Ref = DOC_SER_REF_TMP 
 ALTER TABLE DTS_CST_VST_DTL DROP COLUMN DOC_SER_REF_TMP 
Update  Dts_Plan_Prd_Mst Set Prcssd_Flg=1 Where  Nvl(Prcssd_Flg,0) =0 And Doc_Ser In(Select Doc_Ser From  Dts_Plan_Prd_Dtl Where Plan_Ser In (Select Doc_Ser From Dts_Plan_Sman_Mst)) 
DELETE FROM  S_LOV_SLCT WHERE LOV_NM='LOV_DTS_CST_GPS'
 Insert into S_LOV_SLCT
 Values (401, 'LOV_DTS_CST_GPS', 8662, ' SELECT  LTRIM(RTRIM(CONCAT(CONCAT(LTRIM(RTRIM(POINT_GPS_LAT_Y)),'',''),LTRIM(RTRIM(POINT_GPS_LNGT_X)))))  POINT_GPS,POINT_ID,POINT_DESC, POINT_GPS_LAT_Y, POINT_GPS_LNGT_X,REP_CODE,C_CODE FROM DTS_SURVEY_CST_GPS C '
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
 Values(2, 1, 1, 'DTS_EXE_PLN_TYP', 'From Daily Plan',1, 0)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV)
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1309, 1301, 'DTSS006', 1,0, 1309, NULL, 1, NULL,70, NULL)
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1309, 'Distribution Parameters') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1309, ' 
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1310, 1301, 'DTSS007', 1,0, 1310, NULL, 1, NULL,70, NULL)
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1310, 'Customer Visit Fail Reasons') 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1310, ' 
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1462, 1450, 'DTSR012', 0,0, 1460, NULL, 
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1462, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1462, 'Distributors Customers Visits Reports') 
  INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1311, 1301, 'DTSS008', 0,0, 1311, NULL, 1, NULL,70, NULL)
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1311, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1311, 'Visits Results Coding') 
 INSERT INTO FORM_DETAIL(F_SYS, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV,F_INACTIVE, F_ORDER_NO, SCR_THEME_NO, SCR_TYP, DOC_TYP,SYS_NO, SCR_ORGNL) VALUES ('DTS', 1411, 1400, 'DTST011', 0,0, 1411, NULL, 3, NULL,70, NULL)
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1411, '
 INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1411, 'Items Show For Promotion') 
Update  S_FLAGS Set FLG_ST=0 Where FLG_SR=3 AND FLG_VALUE=3 AND FLG_CODE='DTS_POST' 
Update  DTS_PLAN_SMAN_DTL O Set BRN_NO=(SELECT BRN_NO FROM DTS_PLAN_SMAN_MST WHERE DOC_SER=O.DOC_SER) 
Update  DTS_PLAN_SMAN_DTL O Set BRN_USR=(SELECT BRN_USR FROM DTS_PLAN_SMAN_MST WHERE DOC_SER=O.DOC_SER) 
Update  DTS_PLAN_SMAN_DTL O Set BRN_YEAR=(SELECT BRN_YEAR FROM DTS_PLAN_SMAN_MST WHERE DOC_SER=O.DOC_SER) 
Update  DTS_PLAN_SMAN_DTL O Set REP_CODE=(SELECT REP_CODE FROM DTS_PLAN_SMAN_MST WHERE DOC_SER=O.DOC_SER) 
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
Insert into DTS_DOC_TYP
 UPDATE DTS_PARA SET  SHW_QTY_IN_ALL_WRHS=0 
DELETE FROM S_LOV_SLCT WHERE LOV_NM='LOV_DTS_STK_CST' 
 Insert into S_LOV_SLCT
      (160, 'LOV_DTS_STK_CST', 4526, 'SELECT    A.DOC_SER,A.DOC_NO, A.DOC_DATE, A.REF_NO, A.DOC_DESC, A.REP_CODE,DECODE(:PARAMETER.LANG_NO,1,NVL(B.REPRS_A_NAME, B.REPRS_E_NAME),NVL(B.REPRS_E_NAME, B.REPRS_A_NAME)) REP_NM, A.BRN_NO
            FROM DTS_STK_CST_MST A, SALES_MAN B WHERE A.REP_CODE = B.REPRS_CODE ', 8, '0,1463,1464,143,146,395,396,2555', '0,50,70,60,150,70,150,30', '1,2', ',1,2,3,7,', ',4,6,', 0) 
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
UPDATE S_FLAGS SET FLG_DESC='
                WHERE   FLG_CODE='VST_OPN_TYP'
UPDATE S_FLAGS SET FLG_DESC='By Map To Region Range'
                    WHERE   FLG_CODE='VST_OPN_TYP'
UPDATE S_FLAGS SET FLG_DESC='
                    WHERE   FLG_CODE='VST_OPN_TYP'
UPDATE S_FLAGS SET FLG_DESC='By Customers Location GPS'
                    WHERE   FLG_CODE='VST_OPN_TYP'
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)Values(1, 5, 5, 'VST_OPN_TYP', '
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values(2, 5, 5, 'VST_OPN_TYP', 'Location GPS OR Barcode OR Manual', 1, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(1, 'Collect Requests', 4516, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(2, 'Delivery Goods', 4522, 0, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)ValueS   (3, 'Promoting goods', 4521, 0, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(4, 'Sales Return', 4520, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR   (PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values   (5, 'Get Info.About Competitor Item', 4517, 0, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(6, 'Showing Items', 4534, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(7, 'Offers Prices', 4523, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(8, 'Delivery Invoice', 4524, 0, 0) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(10, 'Money Collecting', 1230, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(11, 'Inventory Stocks Customer', 4526, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(12, 'Others', 4511, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values(13, 'TASTING', 14160, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values (14, 'Distributed Free_Qty And Promotion', 14161, 1, 1) 
 insert into DTS_PRFRMNCE_INDCTR(PR_NO, PR_NM, LBL_NO, PR_FLG, USE_IN_MOB_APP)Values (15, 'Items Questionnaire', 15258, 1, 1)
UPDATE IAS_FORM_NAME SET FORM_NAME='
                        WHERE FORM_NO=1302
UPDATE IAS_FORM_NAME SET FORM_NAME='Sales Man Route Planning Items'
                    WHERE FORM_NO=1302
UPDATE DTS_PRFRMNCE_INDCTR SET USE_IN_MOB_APP=0,PR_FLG=0 WHERE PR_NO IN(2,3,5,8) 
UPDATE DTS_PRFRMNCE_INDCTR SET USE_IN_MOB_APP=0,PR_FLG=0 WHERE PR_NO IN(13,14) 
UPDATE DTS_PRFRMNCE_INDCTR SET USE_IN_MOB_APP=1 WHERE PR_NO=6 
UPDATE DTS_PRFRMNCE_INDCTR SET USE_IN_MOB_APP=1 WHERE PR_NO=15 
SELECT COUNT(1)   FROM FORM_DETAIL  WHERE FORM_NO = 1309"SELECT COUNT(1)   FROM FORM_DETAIL  WHERE FORM_NO = 1310"SELECT COUNT(1)   FROM FORM_DETAIL  WHERE FORM_NO = 1462"SELECT COUNT(1)   FROM FORM_DETAIL  WHERE FORM_NO = 1411"SELECT COUNT(1)   FROM FORM_DETAIL  WHERE FORM_NO = 1411"SELECT FORM_DETAIL.FORM_NO,U_ID,F_ORDER_NO   FROM FORM_DETAIL,USER_R  WHERE F_SYS = ''DTS''  AND (USER_R.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(USER_R.U_ID) = 1 ) AND ( FORM_DETAIL.FORM_NO,U_ID  ) IN (SELECT FORM_NO,USER_R.U_ID   FROM FORM_DETAIL,USER_R  WHERE (USER_R.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(USER_R.U_ID) = 1 ) MINUS SELECT FORM_NO,USER_R.U_ID   FROM PRIVILEGE  WHERE (PRIVILEGE.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(PRIVILEGE.U_ID) = 1 ))"INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,F_ORDER_NO,AD_DATE,AD_U_ID )  VALUES ( :b1,:b2,1,1,1,1,1,1,:b3,IAS_GEN_PKG.GET_CURDATE,1  )"SELECT 1   FROM DTS_PRFRMNCE_INDCTR  WHERE ROWNUM <= 1"SELECT 1   FROM DTS_PRFRMNCE_INDCTR  WHERE PR_NO IN ( 13,14  ) AND ROWNUM <= 1"SELECT 1   FROM DTS_PRFRMNCE_INDCTR  WHERE PR_NO = 15  AND R
               SELECT   rep_c
 CREATE OR REPLACE Package Ars_Chk_Insrt_Data_Pkg
   Procedure Chk_Conn_Cst_Col (P_C_Code     In     Customer.C_Code%Type Default Null
   Procedure Chk_Sman_Conn_Data (P_Sys_No          In     Number
   Procedure Chk_Insrt_Bill_Prc (P_Sys_No     In     Number
   Procedure Chk_Insrt_Rt_Bill_Prc (P_Sys_No     In     Number
   Procedure Chk_Credit_Period (P_C_Code          In     Customer.C_Code%Type
   Procedure Chk_Credit_Limit (P_Doc_Date       In     Ias_Bill_Mst.Bill_Date%Type Default Null
 CREATE OR REPLACE Package Body Ars_Chk_Insrt_Data_Pkg
   Procedure Chk_Conn_Cst_Col (P_C_Code     In     Customer.C_Code%Type Default Null
   Begin
      Begin
         Select Nvl (Mndtry_Conn_Cst_Col, 0), Nvl (Conn_Cst_Multi_Col, 0), Nvl (Si_Col_Mandtry, 0)
           From Ias_Para_Ar
          Where Rownum <= 1;
      Exception
      End;
            Begin
               Select 1
                 From Customer
                Where C_Code = P_C_Code And Col_No = P_Col_No And Rownum <= 1;
  Exception
            End;
            Begin
               Select 1
                 From Ias_Cst_Col
                Where C_Code = P_C_Code And Col_No = P_Col_No And Rownum <= 1;
            Exception
            End;
   Procedure Chk_Sman_Conn_Data (P_Sys_No          In     Number
   Begin
      Begin
         Select Nvl (Conn_Sman_Wc_Csh_Cc, 0)
           From Ias_Para_Ar, Ias_Para_Gen
          Where Rownum <= 1;
      Exception
      End;
         Begin
            Select W_Code
              From Sales_Man
             Where Reprs_Code = 
         Exception
         End;
   Procedure Chk_Insrt_Bill_Prc (P_Sys_No     In     Number
   Begin
      Begin
         Select Nvl (Use_Vat, 0)
           From Ias_Para_Gen, Ias_Para_Ar, Ias_Para_Gl;
      Exception
      End;
      V_Sql := 'SELECT 4 DOC_TYP
                   FROM   ' || V_Tbl_Mst_Nm || ' WHERE BILL_SER = ' || P_Doc_Ser;
      Begin
            Begin
               V_Cnt := Ias_Gen_Pkg.Get_Cnt (' SELECT 1  FROM (
                                             SELECT BILL_NO, BILL_SER FROM ' || V_Tbl_Mst_Nm || ' WHERE BILL_SER =' || J.Doc_Ser || '
                                             SELECT BILL_NO, BILL_SER FROM ' || V_Tbl_Dtl_Nm || ' WHERE BILL_SER = ' || J.Doc_Ser || ')
                                         WHERE ROWNUM<=1 ');
            Exception
            End;
               Begin
                  V_Cnt := Ias_Gen_Pkg.Get_Cnt (' SELECT 1  FROM ' || V_Tbl_Dtl_Nm || ' D 
                                             WHERE BILL_SER =' || J.Doc_Ser || '
                                               AND EXISTS ( SELECT 1 FROM  
                                                                       WHERE           TI.TAX_NO = TM.TAX_NO
               Exception
               End;
                  Begin
                     V_Cnt := Ias_Gen_Pkg.Get_Cnt (' SELECT 1  FROM ' || V_Tbl_Tax_Mvmnt_Nm || ' WHERE DOC_TYPE =' || J.Doc_Typ || ' AND DOC_SER = ' || J.Doc_Ser || ' AND ROWNUM<=1 ');
                  Exception
                  End;
            Begin
               Execute Immediate '  SELECT ROUND  (NVL (BILL_AMT, 0), ' || V_No_Of_Decimal_Ar || ' )  ,
                                FROM     ' || V_Tbl_Mst_Nm || '  WHERE BILL_SER =' || J.Doc_Ser
               Execute Immediate ' SELECT      ROUND(SUM(NVL(I_PRICE,0) * NVL(I_QTY,0)),' || V_No_Of_Decimal_Ar || ')   ,
                                   FROM ' || V_Tbl_Dtl_Nm || '  WHERE BILL_SER = ' || J.Doc_Ser
            Exception
            End;
            Begin
               Execute Immediate ' SELECT   NVL(ROUND(NVL(VAT_AMT,0),' || V_No_Of_Decimal_Ar || '),0) 
                                     FROM ' || V_Tbl_Mst_Nm || ' WHERE BILL_SER = ' || J.Doc_Ser Into V_Mst_Vat_Amt;
               Execute Immediate ' SELECT  NVL(ROUND(SUM(NVL(TAX_AMT,0) * NVL(I_QTY,0)),' || V_No_Of_Decimal_Ar || '),0) 
                         FROM  ' || V_Tbl_Tax_Mvmnt_Nm || ' WHERE DOC_SER = ' || J.Doc_Ser Into V_Dtl_Vat_Amt;
            Exception
            End;
            Begin
               Execute Immediate ' SELECT  Nvl (Round (Sum (Nvl (VAT_Amt, 0) * Nvl (I_Qty, 0)), '||V_No_Of_Decimal_Ar||'), 0) Vat_Amt,SUM(NVL(VAT_PER,0)) VAT_PER
                                            FROM ' || V_Tbl_Dtl_Nm || ' W
               Execute Immediate ' SELECT  Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)), '||V_No_Of_Decimal_Ar||'), 0) Vat_Amt,NVL(SUM(NVL(TAX_PRCNT,0)),0) VAT_PER
                                           FROM  ' || V_Tbl_Tax_Mvmnt_Nm || ' WHERE DOC_SER =' || J.Doc_Ser Into V_Mvt_Vat_Amt, V_Mvt_Vat_Per
            Exception
            End;
               Begin
               End;
                  Begin
                  Exception
                  End;
            Begin
               Begin
                  Select (Nvl (Bill_Amt, 0) - Nvl (Disc_Amt, 0) + Nvl (Othr_Amt, 0) + Nvl (Vat_Amt, 0)), Disc_Amt_Mst, Disc_Amt_Dtl
                    From Ias_Bill_Mst
                   Where Bill_Ser = J.Doc_Ser And Rownum <= 1;
               Exception
               End;
               Begin
               Exception
               End;
            End
      End;
   Procedure Chk_Insrt_Rt_Bill_Prc (P_Sys_No     In     Number
   Begin
      Begin
         Select Nvl (Use_Vat, 0)
           From Ias_Para_Gen, Ias_Para_Ar, Ias_Para_Gl;
      Exception
      End;
      V_Sql := 'SELECT 4 DOC_TYP
                   FROM   ' || V_Tbl_Mst_Nm || ' WHERE RT_BILL_SER = ' || P_Doc_Ser;
      Begin
            Begin
               V_Cnt := Ias_Gen_Pkg.Get_Cnt (' SELECT 1  FROM (
                                             SELECT RT_BILL_NO, RT_BILL_SER FROM ' || V_Tbl_Mst_Nm || ' WHERE RT_BILL_SER =' || J.Doc_Ser || '
                                             SELECT RT_BILL_NO, RT_BILL_SER FROM ' || V_Tbl_Dtl_Nm || ' WHERE RT_BILL_SER = ' || J.Doc_Ser || ')
                                         WHERE ROWNUM<=1 ');
            Exception
            End;
               Begin
CT 1  FROM ' || V_Tbl_Dtl_Nm || ' D 
                                             WHERE BILL_SER =' || J.Doc_Ser || '
                                               AND EXISTS ( SELECT 1 FROM  
                                                                       WHERE           TI.TAX_NO = TM.TAX_NO
               Exception
               End;
                  Begin
                     V_Cnt := Ias_Gen_Pkg.Get_Cnt (' SELECT 1  FROM ' || V_Tbl_Tax_Mvmnt_Nm || ' WHERE DOC_TYPE =' || J.Doc_Typ || ' AND DOC_SER = ' || J.Doc_Ser || ' AND ROWNUM<=1 ');
                  Exception
                  End;
            Begin
               Execute Immediate '  SELECT ROUND  (NVL (BILL_AMT, 0), ' || V_No_Of_Decimal_Ar || ' )  ,
                                FROM     ' || V_Tbl_Mst_Nm || '  WHERE RT
               Execute Immediate ' SELECT      ROUND(SUM(NVL(I_PRICE,0) * NVL(I_QTY,0)),' || V_No_Of_Decimal_Ar || ')   ,
                                   FROM ' || V_Tbl_Dtl_Nm || '  WHERE RT_BILL_SER = ' || J.Doc_Ser
            Exception
            End;
            Begin
               Execute Immediate ' SELECT   NVL(ROUND(NVL(VAT_AMT,0),' || V_No_Of_Decimal_Ar || '),0) 
                                     FROM ' || V_Tbl_Mst_Nm || ' WHERE BILL_SER = ' || J.Doc_Ser Into V_Mst_Vat_Amt;
               Execute Immediate ' SELECT  NVL(ROUND(SUM(NVL(TAX_AMT,0) * NVL(I_QTY,0)),' || V_No_Of_Decimal_Ar || '),0) 
                         FROM  ' || V_Tbl_Tax_Mvmnt_Nm || ' WHERE DOC_SER = ' || J.Doc_Ser Into V_Dtl_Vat_Amt;
            Exception
            End;
            Begin
               Execute Immediate ' SELECT  Nvl (Round (Sum (Nvl (VAT_Amt, 0) * Nvl (I_Qty, 0)), '||V_No_Of_Decimal_Ar||'), 0) Vat_Amt,SUM(NVL(VAT_PER,0)) VAT_PER
                                            FROM ' || V_Tbl_Dtl_Nm || ' WHERE BILL_SER = ' || J.Doc_Ser Into V_Dtl_Vat_Amt, V_Dtl_Vat_Per
               Execute Immediate ' SELECT  Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)), '||V_No_Of_Decimal_Ar||'), 0) Vat_Amt,NVL(SUM(NVL(TAX_PRCNT,0)),0) VAT_PER
                                           FROM  ' || V_Tbl_Tax_Mvmnt_Nm || ' WHERE DOC_SER =' || J.Doc_Ser Into V_Mvt_Vat_Amt, V_Mvt_Vat_Per
            Exception
            End;
               Begin
               End;
      End;
   Procedure Chk_Credit_Period (P_C_Code          In     Customer.C_Code%Type
   Begin
      Begin
         Select Nvl (Paid_Instllmnt_Man, 0), Nvl (No_Of_Decimal_Ar, 2), Nvl (Ar_Ac_Link_Type, 0)
           From Ias_Para_Ar;
      Exception
      End;
         Begin
            Select Nvl (Ar_Allow_Sales_Prv_Dr, 0), Nvl (Ar_Chk_Prd_Aftr_Due, 0), Nvl (Check_Credit_Period
              From Privilege_Fixed
             Where U_Id = P_Usr_No;
         Exception
         End;
         Begin
            Select Credit_Period
              From Customer
             Where C_Code = P_C_Code;
         Exception
         End;
               Begin
                  Select Min (I_Date)
                    From Installment
                   Where C_Code = P_C_Code And Bill_Ser <> Nvl (P_Doc_Ser, -1) And Trunc (Nvl (I_Amt, 0)) > (Trunc (Nvl (Paid_Amt, 0) + Nvl (Adj_Amt, 0)) + 1) And Dr_No Is Null;
               Exception
               End;
               Begin
                  Select Count (Distinct A_Cy)
                    From Ias_Post_Dtl
                   Where C_Code = P_C_Code;
               Exception
               End;
               Begin
                  Delete From Ias_Dr_Det_Tmp;
               Exception
               End;
               Begin
                  --Select Min(To_Date(Doc_Date)+Decode(Doc_Type,0,Nvl(v_Credit_Period,0),0)) Into V_Min_Idate
                  Select Min (Doc_Date)
                    From Ias_Si_Dr_Dtl_Tmp
                   Where C_Code = P_C_Code And Doc_Ser <> Nvl (P_Doc_Ser, -1) And Trunc (Nvl (I_Amt, 0)) > (Trunc (Nvl (Paid_Amt, 0)) + 1);
               Exception
               End;
            Begin
               Delete From Ias_Si_Dr_Dtl_Tmp;
            Exception
            End;
   Exception
   Procedure Chk_Credit_Limit (P_Doc_Date       In     Ias_Bill_Mst.Bill_Date%Type Default Null
   Begin
      Begin
         Select Nvl (Inv_Dis_Lmt, 0), Nvl (Inv_Dis_Lmt_Itm, Inv_Dis_Lmt)
           From Privilege_Fixed
          Where U_Id = P_User_No;
      Exception
      End;
 BEGIN
CREATE OR REPLACE Package Ars_Api_Trns_Pkg
   G_Exception_Err               Varchar2 (4000) := Null;
   Procedure Insrt_Cst_Rq_Prc (P_Lang_No             In     Number
   Procedure Insrt_Cst_Prc (P_Lang_No             In     Number
                           ,P_Upd_Flg             In     Number Default 0                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     --##  0 insert NEW CST_CODE ,--##  0 update customer data
   Procedure Get_Prmtr_Prc (P_Sys_No    In Number Default Null
   Procedure Insrt_Doc_Prc (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
   Procedure Post_From_Br_Prc (P_Sys_No     In     Number
   Procedure Insrt_Sales_Order (P_Sys_No              In     Number
   Procedure Insrt_Order_Detail (P_I_Code                 In     Order_Detail.I_Code%Type Default Null
   Procedure Insrt_Ias_Bill_Mst (P_Sys_No                       In     Number
   Procedure Insrt_Ias_Bill_Dtl (P_I_Code                   In     Ias_Bill_Dtl.I_Code%Type Default Null
   Procedure Insrt_Ias_Rt_Bill_Mst (P_Sys_No              In     Number
   Procedure Chk_Inpt_Data (P_Inpt_Typ     In     Varchar2
   Procedure Insrt_Ias_Rt_Bill_Dtl (P_I_Code                 In     Ias_Rt_Bill_Dtl.I_Code%Type Default Null
   Procedure Insrt_Tax_Itm_Movmnt_Old (P_Doc_Seq          In     Gnr_Rq_Tax_Itm_Movmnt.Doc_Sequence%Type Default Null
   Procedure Insrt_Aftr_Save_Tax_Itm_Movmnt (P_Doc_Typ          In     Number Default Null
   Procedure Get_Doc_No (P_Doc_Typ In Number);
   Procedure Get_Doc_Ser (P_Doc_Typ In Number);
   Procedure Chk_Doc_No (P_Doc_Typ    In     Number
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
   Procedure Chk_Itm (P_I_Code             In     Ias_Itm_Mst.I_Code%Type
   Procedure Chk_Sub_Ldgr (P_Mst_Flg    In     Number
   Procedure Chk_Avl_Qty (P_I_Code         In     Item_Movement.I_Code%Type
   Procedure Chk_Avl_Qty_old (P_I_Code         In     Item_Movement.I_Code%Type                        
   Procedure Clr_Glbl_Var;
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
   Procedure Insrt_Installment (P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type
   Procedure Insert_Other_Cha
   Procedure Insert_Other_Charges_Sr_Fbr (P_Rt_Billno         Number
   Procedure Updt_Bill_Disc_Prc_Old (P_Doc_Typ In Number Default Null, P_Pst_Typ In Number Default Null, P_Doc_Ser In Ias_Bill_Mst.Bill_Ser%Type);
   Procedure Updt_Bill_Disc_Prc (P_Doc_Typ             In     Number
   Procedure Chk_Insrt_Data (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
 CREATE OR REPLACE Package Body Ars_Api_Trns_Pkg
   Procedure Insrt_Cst_Rq_Prc (P_Lang_No             In     Number
   Begin
      Begin
         Select Cust_D_Type, Cst_Seq_Type, Ar_Ac_Link_Type
           From Ias_Para_Ar
          Where Rownum <= 1;
      Exception
      End;
         Begin
            Select 1
              From Customer_Group
             Where C_Group_Code = P_C_Group_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Class
             Where C_Class = P_C_Class And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Class_Typ
             Where C_Class_Typ = P_C_Class_Typ And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Rq
             Where Nvl (C_Mobile, 0) = Nvl (P_C_Mobile, 0) And Rownum <= 1;
         Exception
         End;
      Begin
         Select 1
           From Customer_Rq
          Where C_Code_Trgt = P_C_Code And Rownum <= 1;
      Exception
      End;
               Begin
                  Select Nvl (Max (To_Number (C_Code)), 0) + 1 Into V_Cst_Code From Customer_Rq;
               Exception
               End;
               Begin
                  Select Nvl (Max (To_Number (C_Code)), 0) + 1
                    From Customer_Rq
                   Where C_Group_Code = P_C_Group_Code;
               Exception
               End;
               Begin
                  Select Nvl (Max (To_Number (C_Code)), 0) + 1
                    From Customer_Rq
                   Where C_Group_Code = P_C_Group_Code And C_Class = P_C_Class;
               Exception
               End;
      Begin
         Select C_A_Code
           From Customer_Group
          Where C_Group_Code = P_C_Group_Code And Rownum <= 1;
      Exception
      End;
      Begin
         Select Nvl (Max (Cst_Seq), 0) + 1 Into V_Cst_Seq From Customer_Rq;
      Exception
      End;
      Begin
         Select 1
           From Customer_Rq
          Where C_Code = V_Cst_Code And Rownum <= 1;
      Exception
      End;
      Begin
         Insert Into Customer_Rq (C_Code
      Exception
            Raise_Application_Error (-20008, 'Err INSERT INTO CUSTOMER_RQ  ' || Chr (10) || Sqlerrm);
      End;
      If Nvl (Ias_Gen_Pkg.Get_Cnt ('Select 1 From CUSTOMER_RQ Where 
         For I In (Select A_Cy, Inactive
                     From Account_Curr
                    Where A_Code = V_C_Acode)
            Begin
               Insert Into Customer_Curr_Rq (C_Code
            Exception
                  Raise_Application_Error (-20009, 'Err INSERT INTO CUSTOMER_CURR_RQ  ' || Chr (10) || Sqlerrm);
            End;
   Procedure Insrt_Cst_Prc (P_Lang_No             In     Number
                                     --##  0 insert NEW CST_CODE ,--##  0 update customer data
   Begin
      Begin
         Select Cust_D_Type, Cst_Seq_Type, Ar_Ac_Link_Type
           From Ias_Para_Ar
          Where Rownum <= 1;
      Exception
      End;
         Begin
            Select 1
              From Customer_Group
             Where C_Group_Code = P_C_Group_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Class
             Where C_Class = P_C_Class And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Class_Typ
             Where C_Class_Typ = P_C_Class_Typ And Rownum <= 1;
         Exception
         End;
            Begin
               Select 1
                 From Customer
                Where Nvl (C_Mobile, 0) = Nvl (P_C_Mobile, 0) And Rownum <= 1;
            Exception
            End;
            Begin
               Select 1
                 From Customer
                Where Nvl (C_Mob
            Exception
            End;
            Begin
               Select 1
                 From Customer
                Where Nvl (C_Code_Trgt, 0) = Nvl (P_C_Code, 0) And Rownum <= 1;
            Exception
            End;
                  Begin
                     Select Nvl (Max (To_Number (C_Code)), 0) + 1 Into V_Cst_Code From Customer;
                  Exception
                  End;
                  Begin
                     Select Nvl (Max (To_Number (C_Code)), 0) + 1
                       From Customer
                      Where C_Group_Code = P_C_Group_Code;
                  Exception
                  End;
                  Begin
                     Select Nvl (Max (To_Number (C_Code)), 0) + 1
                       From Customer
                      Where C_Group_Code = P_C_Group_Code And C_Class = P_C_Class;
                  Exception
                  End;
         Begin
            Select C_A_Code
              From Customer_Group
             Where C_Group_Code = P_C_Group_Code And Rownum <= 1;
         Exception
         Begin
            Select Nvl (Max (Cst_Seq), 0) + 1 Into V_Cst_Seq From Customer;
         Exception
         End;
         Begin
            Select 1
              From Customer
             Where C_Code = V_Cst_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Insert Into Customer (C_Code
         Exception
               Raise_Application_Error (-20008, 'Err INSERT INTO CUSTOMER  ' || Chr (10) || Sqlerrm);
         End;
         If Nvl (Ias_Gen_Pkg.Get_Cnt ('Select 1 From CUSTOMER Where 
(Select A_Cy, Inactive
                        From Account_Curr
                       Where A_Code = V_C_Acode)
               Begin
                  Insert Into Customer_Curr (C_Code
               Exception
                     Raise_Application_Error (-20009, 'Err INSERT INTO CUSTOMER_CURR ' || Chr (10) || Sqlerrm);
               End;
            Begin
               For J In (Select Distinct U_Id
                           From Priv_Acc P, Customer C
                          Where P.A_Code = C.C_A_Code And P.A_Code = V_C_Acode And C.C_Code = V_Cst_Code And Nvl (Add_Flag, 0) + Nvl (View_Flag, 0) > 0)
                  Insert Into Ias_Priv_Customer (U_Id
            Exception
                  Raise_Application_Error (-20009, 'Err INSERT INTO Ias_Priv_Customer ' || Chr (10) || Sqlerrm);
            End;
         Begin
            Update Customer
             Where C_Code = P_C_Code;
         Exception
               Raise_Application_Error (-20008, 'Err WHEN UPDATE CUSTOMER  ' || Chr (10) || Sqlerrm);
         End;
   Procedure Get_Prmtr_Prc (P_Sys_No    In Number Default Null
   Begin
      Begin
         Select Lang_No
           From Ias_Sys.Lang_Def
          Where Lang_Dflt = 1 And Rownum <= 1;
      Exception
            Raise_Application_Error (-20005, 'Error When Select Deflt LANG  , ' || Sqlerrm);
      End;
      Begin
         Select Nvl (Check_Lmt_Sorder, 0)
           From Ias_Para_Gen
      Exception
            Raise_Application_Error (-20006, 'Error When Select PARAMETER , ' || Sqlerrm);
      End;
         Begin
            Select Max (Yr_No)
              From S_Prd_Dtl
             Where To_Date (Sysdate, 'DD/MM/RRRR') Between F_Date And T_Date;
         Exception
         End;
      Begin
      Exception
      End;
         V_Msg_Txt := 'Error When Select Local Cur. from EX_RATE';
         V_Msg_Txt := 'Error When Select Stock Cur. from EX_RATE ';
   Exception
   Procedure Insrt_Doc_Prc (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
   Begin
         For M_Cv In (Select Extractvalue (Value (Xmlmstdmy), '*/SYS_NO              ') As Sys_No
                        From Table (Xmlsequence (Extract (V_Xml_Type, '/SAL_ORDR/SALES_ORDER'))) Xmlmstdmy)
            Begin
            Exception
            End
            For D_Cv In (Select Extractvalue (Value (Xmldtldmy), '*/I_CODE               ') As I_Code
                           From Table (Xmlsequence (Extract (V_Xml_Type, '/SAL_ORDR/ORDER_DETAIL'))) Xmldtldmy)
               Begin
               Exception
               End
         For M_Cv In (Select Extractvalue (Value (Xmlmstdmy), '*/SYS_NO                                   ') As Sys_No
                        From Table (Xmlsequence (Extract (V_Xml_Type, '/BILL/IAS_BILL_MST'))) Xmlmstdmy)
            Begin                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 --(1)
            Exception
            End
            For D_Cv In (Select Extractvalue (Value (Xmldtldmy), '*/I_CODE                                           ') As I_Code
                           From Table (Xmlsequence (Extract (V_Xml_Type, '/BILL/IAS_BILL_DTL'))) Xmldtldmy)
               Begin
                  Select Ias_Doc_Seq.Nextval Into V_Doc_Seq From Dual;
               Exception
               End;
               Begin
               Exception
               End
         For M_Cv In (Select Extractvalue (Value (Xmlmstdmy), '*/SYS_NO                          ') As Sys_No
                        From Table (Xmlsequence (Extract (V_Xml_Type, '/RT_BILL/IAS_RT_BILL_MST'))) Xmlmstdmy)
            Begin
            Exception
            End
            For D_Cv In (Select Extractvalue (Value (Xmldtldmy), '*/I_CODE                          ') As I_Code
                           From Table (Xmlsequence (Extract (V_Xml_Type, '/RT_BILL/IAS_RT_BILL_DTL'))) Xmldtldmy)
               Begin
               Exception
               End;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
   Exception
   Procedure Post_From_Br_Prc (P_Sys_No     In     Number
         For M_Cv In (Select P_Sys_No As Sys_No
                        From Ias_Bi
                       Where Bill_Ser = P_Doc_Ser)
            Begin                                                                                                                                                                                                                                                                      
            Exception
            End
            For D_Cv In (Select I_Code As I_Code
                           From Ias_Bill_Dtl_Br
                          Where Bill_Ser = P_Doc_Ser)
               Begin                                                                                                                                                                                                                                                                                                                               
               Exception
               End
            Begin
               Update Ias_Bill_Mst_Br
                Where Bill_Ser = G_Doc_Ser;
            Exception
                  Raise_Application_Error (-20102, 'Err when UPDATE IAS_BILL_MST_BR DOC_NO= ' || V_Doc_No || ' ' || Chr (10) || Sqlerrm);
            End;
         For M_Cv In (Select P_Sys_No As Sys_No
                        From Ias_Rt_Bill_Mst_Br
                       Where Rt_Bill_Ser = P_Doc_Ser)
            Begin
            Exception
            End;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  --(1)
            For D_Cv In (Select I_Code As I_Code
                           From Ias_Rt_Bill_Dtl_Br
                          Where Rt_Bill_Ser = P_Doc_Ser)
               Begin
               Exception
               End
            Begin
               Update Ias_Rt_Bill_Mst_Br
                Where Rt_Bill_Ser = G_Doc_Ser;
            Exception
                  Raise_Application_Error (-20102, 'Err when UPDATE IAS_BILL_MST_BR DOC_NO= ' || V_Doc_No || ' ' || Chr (10) || Sqlerrm);
            End;
   Exception
   Procedure Insrt_Sales_Order (P_Sys_No              In     Number
   Begin
         Begin
            Select Max (Yr_No)
              From S_Prd_Dtl
             Where To_Date (P_Doc_Date, 'DD/MM/RRRR') Between F_Date And T_Date;
         Exception
         End;
            Begin
               Select Credit_Period
                 From Customer
                Where C_Code = P_C_Code And Rownum <= 1;
            Exception
            End;
         Begin
            Select G_Doc_Date + Nvl (G_Max_Prd_Exp_Date_So_Day, 1) Into V_Ordr_Exp_Date From Dual;
         Exception
         End;
            Begin
               Select R_Code
                 From Customer
                Where C_Code = P_C_Code And Rownum <= 1;
            Exception
            End;
      Begin
         Select 1
           From Sales_Order
          Where Order_Ser = G_Doc_Ser And Rownum <= 1;
      Exception
      End;
      Insert Into Sales_Order (Order_No
   Exception
         Raise_Application_Error (-20050, 'Error When Insert Into Sales Order Master , ' || Chr (10) || Sqlerrm);
   Procedure Insrt_Order_Detail (P_I_Code                 In     Order_Detail.I_Code%Type Default Null
   Begin
              BEGIN
              SELECT DOC_NO,DOC_SER INTO G_DOC_NO,G_DOC_SER FROM ARS_SAL_ORDR_MST WHERE DOC_M_SQ = G_DOC_M_SQ AND ROWNUM<=1;
          EXCEPTION
          END;*/
      Begin
      Exception
      End;
         Begin
            Select 1
              From Ias_Sys.Ias_Docjv_Type_Systems
             Where Doc_Type = P_Doc_Type_Ref And Rownum <= 1;
         Exception
         End;
            Begin
           Select 1
                 From Quotation_Detail
                Where Quot_No = P_Doc_No_Ref And Quot_Ser = P_Doc_Ser_Ref And Rownum <= 1;
            Exception
            End;
         Begin
            Select Ias_Doc_Seq_Othr.Nextval Into V_Doc_Seq From Dual;
         Exception
         End;
      Insert Into Order_Detail (So_Type
   Exception
         Raise_Application_Error (-20063, 'Error When Insert Into Sales Order Detail , ' || Chr (10) || Sqlerrm);
   Procedure Insrt_Ias_Bill_Mst (P_Sys_No                       In     Number
   Begin
         Begin
            Select Max (Yr_No)
              From S_Prd_Dtl
             Where To_Date (P_Doc_Date, 'DD/MM/RRRR') Between F_Date And T_Date;
         Exception
         End;
            Begin
               Select Credit_Period
                 From Customer
                Where C_Code = P_C_Code And Rownum <= 1;
            Exception
            End;
            Begin
               Select R_Code
                 From Customer
                Where C_Code = G_C_Code And Rownum <= 1;
            Exception
            End;
         Begin
            Select 1
              From Ias_V_All_Bill_Mst
             Where Bill_Ser = G_Doc_Ser And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2 And Rownum <= 1;
         Exception
         End;
         Insert Into Ias_Bill_Mst (Bill_Doc_Type
         Insert Into Ias_Bill_Mst_Br (Bill_Doc_Type
   Exception
   Procedure Insrt_Ias_Bill_Dtl (P_I_Code                   In     Ias_Bill_Dtl.I_Code%Type Default Null
   Begin
      Begin
         Begin
         Exception
         End;
            Begin
               Select 1
                 From Ias_Sys.Ias_Docjv_Type_Systems
                Where Doc_Type = P_Doc_Type_Ref And Rownum <= 1;
            Exception
            End;
               Begin
                  Select 1
                    From Order_Detail
                   Where Order_No = P_Doc_No_Ref And Order_Ser = P_Doc_Ser_Ref And Rownum <= 1;
               Exception
               End;
         Begin
         Exception
         End;
            Begin
               Select Ias_Doc_Seq.Nextval Into V_Doc_Sequence From Dual;
            Exception
            End;
         Select Service_Itm, Use_Serialno, Used_Itm
           From Ias_Itm_Mst
          Where I_Code = P_I_Code And Rownum <= 1;
            Begin            
            Exception
            End;
            Insert Into Ias_Bill_Dtl (Bill_Doc_Type
            Insert Into Ias_Bill_Dtl_Br (Bill_Doc_Type
      Exception
            Raise_Application_Error (-20063, 'Error When Insert Into ' || V_Tbl_Dtl || ' , ' || Chr (10) || Sqlerrm);
      End;
   Procedure Insrt_Ias_Rt_Bill_Mst (P_Sys_No              In     Number
   Begin
         Begin
            Select Max (Yr_No)
              From S_Prd_Dtl
             Where To_Date (P_Doc_Date, 'DD/MM/RRRR') Between F_Date And T_Date;
         Exception
         End;
            Begin
               Select Credit_Period
                 From Customer
                Where C_Code = P_C_Code And Rownum <= 1;
            Exception
            End;
            Begin
               Select R_Code
                 From Customer
                Where C_Code = G_C_Code And Rownum <= 1;
            Exception
            End;
         Begin
            Select 1
              From Ias_V_All_Rt_Bill_Mst
             Where Rt_Bill_Ser = G_Doc_Ser And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2 And Rownum <= 1;
         Exception
         End;
         Begin
            Insert Into Ias_Rt_Bill_Mst (Rt_Bill_No
         Exception
         End;
         Begin
         Exception
               Raise_Application_Error (-20004, 'Error When Insert Into Gr_Note In Post Rt Sales' || Chr (13) || Sqlerrm);
         End;
         Begin
            Insert Into Ias_Rt_Bill_Mst_Br (Rt_Bill_No
         Exception
         End;
   Exception
   Procedure Insrt_Ias_Rt_Bill_Dtl (P_I_Code                 In     Ias_Rt_Bill_Dtl.I_Code%Type Default Null
   Begin
      Begin
            Begin
               Select 1
                 From Ias_Sys.Ias_
                Where Doc_Type = P_Doc_Type_Ref And Rownum <= 1;
            Exception
            End;
                 BEGIN
                  SELECT 1,BILL_NO,DOC_SEQUENCE,RCRD_NO,BILL_DOC_TYPE ,I_QTY,FREE_QTY
                     SELECT BILL_NO,BILL_SER,DOC_SEQUENCE,RCRD_NO,BILL_DOC_TYPE,I_CODE,ITM_UNT, EXPIRE_DATE,BATCH_NO,I_QTY,FREE_QTY FROM IAS_BILL_DTL
                     SELECT BILL_NO,BILL_SER,DOC_SEQUENCE,RCRD_NO,BILL_DOC_TYPE ,I_CODE,ITM_UNT,EXPIRE_DATE,BATCH_NO,I_QTY ,FREE_QTY FROM  IAS_BILL_DTL_BR
                       WHERE BILL_SER=P_BILL_SER
                 EXCEPTION WHEN OTHERS THEN
                  END;
         Begin
         Exception
         End;
         Begin
            Select Ias_Doc_Seq.Nextval Into V_Doc_Sequence From Dual;
         Exception
         End;
         Begin
               Select Allow_Enter_Zero_Cost
             From Privilege_Fixed
                Where U_Id = G_Ad_U_Id And Rownum <= 1;
         Exception
               Raise_Application_Error (-20002, 'Error When Select From Privilege_Fixed In Post_Rt_Sales_Detail' || Chr (13) || Sqlerrm);
         End;
         Select Service_Itm, Use_Serialno, Used_Itm
           From Ias_Itm_Mst
          Where I_Code = P_I_Code And Rownum <= 1;
                  Begin
                     Select W_Code
                       From Warehouse_Details
                      Where Nvl (Main_Wcode, 0) = 1;
                  Exception
                  End;
            Begin
               Insert Into Ias_Rt_Bill_Dtl (Rt_Bill_No
            Exception
                  Raise_Application_Error (-20063, 'Error When Insert Into IAS_RT_BILL_DTL' || Chr (10) || Sqlerrm);
            End;
               Begin
               Exception
               End;
               Begin
               Exception
                     Raise_Application_Error (-20010, 'Error When Insert Into Gr Detail , (Rt Sales) ' || Chr (13) || Sqlerrm);
               End;
               --## Insert Into Item_movement
               Begin
               Exception
                     Raise_Application_Error (-20010, 'Error When Insert Into Item Movement , (Rt Sales) ' || Chr (13) || Sqlerrm);
               End;
            Begin
               Insert Into Ias_Rt_Bill_Dtl_Br (Rt_Bill_No
            Exception
                  Raise_Application_Error (-20063, 'Error When Insert Into IAS_RT_BILL_DTL_BR' || Chr (10) || Sqlerrm);
            End;
      Exception
            Raise_Application_Error (-20063, 'Error When Insert Into ' || V_Tbl_Dtl || ' , ' || Chr (10) || Sqlerrm);
      End;
   Procedure Insrt_Tax_Itm_Movmnt_Old (P_Doc_Seq          In     Gnr_Rq_Tax_Itm_Movmnt.Doc_Sequence%Type Default Null
   Begin
            Begin
               Select 1
                 From Order_Detail
                Where Order_Ser = G_Doc_Ser And I_Code = P_I_Code And Doc_Seq = P_Doc_Seq And Rownum <= 1;
            Exception
            End;
            Begin
               V_Cnt := Ias_Gen_Pkg.Get_Cnt ('Select 1 from ' || V_Tbl_Dtl_Nm || '    
                                       where BILL_SER=' || G_Doc_Ser || '
            -- SELECT 1 INTO V_CNT FROM IAS_BILL_DTL WHERE BILL_SER = G_DOC_SER AND I_CODE= P_I_CODE AND DOC_SEQUENCE = P_DOC_SEQ AND ROWNUM<=1;
            Exception
            End;
      /*  BEGIN
    EXECUTE IMMEDIATE 'DELETE '||V_TBL_MVMNT_NM||' WHERE DOC_TYPE='||G_DOC_TYP||' AND DOC_SER='||G_DOC_SER;
        EXCEPTION WHEN OTHERS THEN NULL;
        END;*/
      Begin
                  'INSERT INTO '
                                                SELECT '
                                                  FROM '
                                                 WHERE '
                                              ORDER BY '
                  'INSERT INTO '
                                                SELECT '
                                                  FROM '
                                                 WHERE '
                                              ORDER BY '
         --INSERT INTO TST (FLD) VALUES (V_SLCT);
         --## UPDATE TAX TABLES FOR DOCUMENT
         V_Cnt := Ys_Gen_Pkg.Get_Cnt ('SELECT 1 FROM ' || V_Tbl_Mvmnt_Nm || ' 
                                    WHERE DOC_TYPE = ' || G_Doc_Typ || '
      Exception
      End;
   Procedure Insrt_Aftr_Save_Tax_Itm_Movmnt (P_Doc_Typ          In     Number Default Null
   Begin
      /*  BEGIN
          EXECUTE IMMEDIATE 'DELETE '||V_TBL_MVMNT_NM||' WHERE DOC_TYPE='||G_DOC_TYP||' AND DOC_SER='||G_DOC_SER;
        EXCEPTION WHEN OTHERS THEN NULL;
        END;*/
      Begin
                  'INSERT INTO '
                                                SELECT '
                                                  FROM '
                                                 WHERE '
                                              ORDER BY '
                  'INSERT INTO '
                                                SELECT '
                                                  FROM '
                                                 WHERE '
                                              ORDER BY '
         --INSERT INTO TST (FLD) VALUES (V_SLCT);
         --## UPDATE TAX TABLES FOR DOCUMENT
  BEGIN
                 EXECUTE IMMEDIATE 'UPDATE '||V_TBL_DTL_NM||' M SET '||V_FLD_VAT_AMT||' = ( SELECT SUM(NVL(T.TAX_AMT,0))
                                                                                              FROM '||V_TBL_MVMNT_NM||' T
                                                                                             WHERE T.DOC_TYPE     = '||P_DOC_TYP||'
                                     WHERE '||V_FLD_DOC_SER||'='||P_DOC_SER;
           EXCEPTION WHEN OTHERS THEN
           END;
           BEGIN
             EXECUTE IMMEDIATE 'UPDATE '||V_TBL_MST_NM||' M SET '||V_FLD_VAT_AMT||' = ( SELECT SUM(NVL(T.I_QTY,0)*NVL(T.TAX_AMT,0))
                                                                                          FROM '||V_TBL_MVMNT_NM||' T
                                                                                         WHERE T.DOC_TYPE = '||P_DOC_TYP||'
                                 WHERE '||V_FLD_DOC_SER||' = '||P_DOC_SER;
           EXCEPTION WHEN OTHERS THEN
           END;*/
         V_Cnt := Ys_Gen_Pkg.Get_Cnt ('SELECT 1 FROM ' || V_Tbl_Mvmnt_Nm || ' 
                                    WHERE DOC_TYPE = ' || G_Doc_Typ || '
      Exception
      End;
   Procedure Get_Doc_No (P_Doc_Typ In Number)
   Begin
            Begin
               Select Nvl (Max (To_Number (Order_No)), 0) + 1
                 From Sales_Order
                Where Brn_No = G_Brn_No;
            Exception
            End;
            Begin
               Select Nvl (Max (To_Number (Order_No)), 0) + 1
                 From Sales_Order
                Where So_Type = G_So_Type And Brn_No = G_Brn_No;
            Exception
            End;
         Begin
                  Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                    From Ias_V_All_Bill_Mst
                   Where Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      Where Bill_Doc_Type = G_Bill_Doc_Type And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      Where     Cc_Code In (Select Cc_Code
                                              From Cost_Centers
                                             Where Nvl (C_Sr, 0) = (Select Nvl (C_Sr, 0)
                                                                      From Cost_Centers
                                                                     Where Cc_Code = G_Cc_Code))
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      Where Bill_Doc_Type = G_Bill_Doc_Type And Cc_Code = G_Cc_Code And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      --where w_code=G_W_code;
                      Where     W_Code In (Select W_Code
                                     From Warehouse_Details
                                            Where Nvl (W_Ser, 0) = (Select Nvl (W_Ser, 0)
                                                                      From Warehouse_Details
                                                                     Where W_Code = G_W_Code))
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      Where Bill_Doc_Type = G_Bill_Doc_Type And W_Code = G_W_Code And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      Where Si_Type = G_Si_Type And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      Where Si_Type = G_Si_Type And W_Code = G_W_Code And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      Where Si_Type = G_Si_Type And W_Code = G_W_Code And Bill_Doc_Type = G_Bill_Doc_Type And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Bill_No)), 0) + 1
                       From Ias_V_All_Bill_Mst
                      Where Si_Type = G_Si_Type And Bill_Doc_Type = G_Bill_Doc_Type And Brn_No = G_Brn_No;
         Exception
         End;
         Begin
                  Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                    From Ias_V_All_Rt_Bill_Mst
                   Where Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      Where Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      Where     Cc_Code In (Select Cc_Code
                                              From Cost_Centers
                                             Where Nvl (C_Sr, 0) = (Select Nvl (C_Sr, 0)
                                                                      From Cost_Centers
                                                                     Where Cc_Code = G_Cc_Code))
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      Where Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Cc_Code = G_Cc_Code And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      --where w_code=G_W_code;
                      Where     W_Code In (Select W_Code
                                             From Warehouse_Details
                                            Where Nvl (W_Ser, 0) = (Select Nvl (W_Ser, 0)
                                                                      From Warehouse_Details
                                                                     Where W_Code = G_W_Code))
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      Where Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And W_Code = G_W_Code And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      Where Sr_Type = G_Sr_Type And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      Where Sr_Type = G_Sr_Type And W_Code = G_W_Code And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      Where Sr_Type = G_Sr_Type And W_Code = G_W_Code And Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Brn_No = G_Brn_No;
                     Select Nvl (Max (To_Number (Rt_Bill_No)), 0) + 1
                       From Ias_V_All_Rt_Bill_Mst
                      Where Sr_Type = G_Sr_Type And Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Brn_No = G_Brn_No;
         Exception
         End;
   Procedure Get_Doc_Ser (P_Doc_Typ In Number)
   Begin
            Select G_Brn_Year || Lpad (G_Brn_No, 6, '0') || P_Doc_Typ || G_Doc_No Into G_Doc_Ser From Dual;
            Select G_Brn_Year || Lpad (G_Brn_No, 6, '0') || P_Doc_Typ || To_Number (Ltrim (G_Doc_No)) || Ltrim (Lpad (G_So_Type, 5, '0')) Into G_Doc_Ser From Dual;
         Begin
         End;
         Begin
         End;
   Procedure Chk_Doc_No (P_Doc_Typ    In     Number
   Begin
            V_Cnt := Ias_Gen_Pkg.Get_Cnt ('Select 1 from Sales_Order 
                                       where Order_No=' || P_Doc_No || '
            V_Cnt := Ias_Gen_Pkg.Get_Cnt ('Select 1 from Sales_Order 
                                       where Order_No=' || P_Doc_No || '
         Begin
Select Count (1)
                 From Ias_V_All_Bill_Mst
                Where Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2 And Rownum <= 1;
               Select Count (1)
                 From Ias_V_All_Bill_Mst
                Where Bill_Doc_Type = G_Bill_Doc_Type And Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2 And Rownum <= 1;
               Select Count (1)
                 From Ias_V_All_Bill_Mst
                Where     Bill_No = G_Doc_No
                      --And Cc_Code In (Select Cc_Code From Cost_Centers Where Nvl(C_Sr,0)=Nvl(G_C_Sr,0))
                      And Cc_Code In (Select Cc_Code
                                        From Cost_Centers
                                       Where Nvl (C_Sr, 0) = (Select Nvl (C_Sr, 0)
                                                                From Cost_Centers
                                                               Where Cc_Code = G_Cc_Code))
               Select Count (1)
                 From Ias_V_All_Bill_Mst
                Where Bill_Doc_Type = G_Bill_Doc_Type And Bill_No = G_Doc_No And Cc_Code = G_Cc_Code And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2 And Rownum <= 1;
               Select Count (1)
                 From Ias_V_All_Bill_Mst
                Where     Bill_No = G_Doc_No
                      And W_Code In (Select W_Code
                                       From Warehouse_Details
                                      Where Nvl (W_Ser, 0) = (Select Nvl (W_Ser, 0)
                                                                From Warehouse_Details
                                                               Where W_Code = G_W_Code))
               Select Count (1)
                 From Ias_V_All_Bill_Mst
                Where Bill_Doc_Type = G_Bill_Doc_Type And Bill_No = G_Doc_No And W_Code = G_W_Code And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2 And Rownum <= 1;
                  Select Count (1)
                    From Ias_V_All_Bill_Mst
                   Where Si_Type = G_Si_Type And Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2;
                  Select Count (1)
                    From Ias_V_All_Bill_Mst
                   Where Si_Type = G_Si_Type And W_Code = G_W_Code And Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2;
                  Select Count (1)
                    From Ias_V_All_Bill_Mst
                   Where Si_Type = G_Si_Type And W_Code = G_W_Code And Bill_Doc_Type = G_Bill_Doc_Type And Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2;
                  Select Count (1)
                    From Ias_V_All_Bill_Mst
                   Where Si_Type = G_Si_Type And Bill_Doc_Type = G_Bill_Doc_Type And Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Bill_Type, 2) = 2;
         Exception
         End;
         Begin
               Select Count (1)
                 From Ias_V_All_Rt_Bill_Mst
                Where Rt_Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2 And Rownum <= 1;
               Select Count (1)
                 From Ias_V_All_Rt_Bill_Mst
                Where Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Rt_Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2 And Rownum <= 1;
               Select Count (1)
                 From Ias_V_All_Rt_Bill_Mst
                Where     Rt_Bill_No = G_Doc_No
                      --And Cc_Code In (Select Cc_Code From Cost_Centers Where Nvl(C_Sr,0)=Nvl(G_C_Sr,0))
                      And Cc_Code In (Select Cc_Code
                                        From Cost_Centers
                                       Where Nvl (C_Sr, 0) = (Select Nvl (C_Sr, 0)
                                                                From Cost_Centers
                                                               Where Cc_Code = G_Cc_Code))
               Select Count (1)
                 From Ias_V_All_Rt_Bill_Mst
                Where Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Rt_Bill_No = G_Doc_No And Cc_Code = G_Cc_Code And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2 And Rownum <= 1;
               Select Count (1)
                 From Ias_V_All_Rt_Bill_Mst
                Where     Rt_Bill_No = G_Doc_No
                      And W_Code In (Select W_Code
                                       From Warehouse_Details
                                      Where Nvl (W_Ser, 0) = (Select Nvl (W_Ser, 0)
                                                                From Warehouse_Details
                                                               Where W_Code = G_W_Code))
               Select Count (1)
                 From Ias_V_All_Rt_Bill_Mst
                Where Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Rt_Bill_No = G_Doc_No And W_Code = G_W_Code And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2 And Rownum <= 1;
                  Select Count (1)
                    From Ias_V_All_Rt_Bill_Mst
                   Where Sr_Type = G_Sr_Type And Rt_Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2;
                  Select Count (1)
                    From Ias_V_All_Rt_Bill_Mst
                   Where Sr_Type = G_Sr_Type And W_Code = G_W_Code And Rt_Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2;
                  Select Count (1)
                    From Ias_V_All_Rt_Bill_Mst
                   Where Sr_Type = G_Sr_Type And W_Code = G_W_Code And Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Rt_Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2;
                  Select Count (1)
                    From Ias_V_All_Rt_Bill_Mst
                   Where Sr_Type = G_Sr_Type And Rt_Bill_Doc_Type = G_Rt_Bill_Doc_Type And Rt_Bill_No = G_Doc_No And Brn_No = G_Brn_No And Decode (G_Pst_Typ, 2, Rt_Bill_Type, 2) = 2;
         Exception
         End;
   Procedure Chk_Inpt_Data (P_Inpt_Typ     In     Varchar2
   Begin
         Begin
            Select Decode (P_Lng_Dflt, 1, U_A_Name, Nvl (U_E_Name, U_A_Name)), Nvl (Inactive, 0)
              From User_R
             Where U_Id = P_Inpt_Code1 And Rownum <= 1;
   Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Cmp_Lname, Nvl (Cmp_Fname, Cmp_Lname)), Nvl (Inactive, 0)
              From S_Brn
             Where Brn_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, A_Name, Nvl (A_Name_Eng, A_Name)), Nvl (Ac_Close, 0)
              From Account
             Where     A_Code = P_Inpt_Code1
                   And A_S_M In (Select Account_Type
                                   From Account_Types
                                  Where Affected_By_Trans = 1 And Rownum <= 1)
         Exception
         End;
         Begin
            /*SELECT DECODE(P_LNG_DFLT,1,AC_CODE_DTL_L_NM,NVL(AC_CODE_DTL_F_NM,AC_CODE_DTL_L_NM)),NVL(INACTV_FLG,0) INTO P_INPT_NM,V_INACTV_FLG
              FROM GNR_ACCNT_DTL_VW
             WHERE AC_CODE     = P_INPT_CODE1
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Emp_L_Nm, Nvl (Emp_F_Nm, Emp_L_Nm)), Nvl (Inactive, 0), Nvl (Emp_St, 0)
              From S_Emp
             Where Emp_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, C_A_Name, Nvl (C_E_Name, C_A_Name)), Nvl (Inactive, 0)
              From Customer
             Where C_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, V_A_Name, Nvl (V_E_Name, V_A_Name)), Nvl (Inactive, 0)
              From V_Details
             Where V_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Reprs_A_Name, Nvl (Reprs_E_Name, Reprs_A_Name)), Nvl (Inactive, 0)
              From Sales_Man
             Where Reprs_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Col_Name, Nvl (Col_E_Name, Col_Name)), Nvl (Inactive, 0)
              From Collerctor
             Where Col_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Cc_A_Name, Nvl (Cc_E_Name, Cc_A_Name)), Nvl (Inactive, 0)
              From Cost_Centers
             Where     Cc_Code = P_Inpt_Code1
                   And C_S_M In (Select Cc_Type
                                   From Cost_Center_Types
                                  Where Affected_By_Trans = 1 And Rownum <= 1)
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Pj_A_Name, Nvl (Pj_E_Name, Pj_A_Name)), Nvl (Inactive, 0)
              From Ias_Projects
             Where Pj_No = P_Inpt_Code1 And Pj_Sub = 1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Actv_A_Name, Nvl (Actv_E_Name, Actv_A_Name)), Nvl (Inactive, 0)
              From Ias_Actvty
             Where Actv_No = P_Inpt_Code1 And Actv_Sub = 1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, R_A_Name, Nvl (R_E_Name, R_A_Name))
              From Regions
             Where R_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, W_Name, Nvl (W_E_Name, W_Name)), Nvl (Inactive, 0), Conn_Brn_No
              From Warehouse_Details
             Where W_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select D
              From Cash_In_Hand
             Where Cash_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Bank_Name, Nvl (Bank_E_Name, Bank_Name)), Nvl (Inactive, 0), Conn_Brn_No
              From Cash_At_Bank
             Where Bank_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Lev_A_Name, Nvl (Lev_E_Name, Lev_A_Name)), Nvl (Inactive, 0)
              From Ias_Pricing_Levels
             Where Lev_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Lev_A_Name, Nvl (Lev_E_Name, Lev_A_Name)), Nvl (M.Inactive, 0)
              From Ias_Pricing_Levels M, Ias_Item_Price D
             Where M.Lev_No = D.Lev_No And M.Lev_No = P_Inpt_Code1 And D.I_Code = P_Inpt_Code2 And D.Itm_Unt = P_Inpt_Code3 And Rownum <= 1;
         Exception
         End;
           BEGIN
            SELECT DECODE(G_LNG_DFLT,1,TYP_L_NM,NVL(TYP_F_NM,TYP_L_NM)),NVL(INACTV_FLG,0) INTO P_INPT_NM,V_INACTV_FLG
              FROM GNR_DOC_TYP_DTL
             WHERE DOC_TYP = P_INPT_CODE1
           EXCEPTION
           END;
         Begin
            Select Decode (P_Lng_Dflt, 1, Tax_L_Nm, Nvl (Tax_F_Nm, Tax_L_Nm)), Nvl (Inactive, 0)
              From Gnr_Tax_Code_Mst
             Where Tax_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1, Decode (P_Lng_Dflt, 1, Nvl (Clc_Typ_L_Nm, Clc_Typ_F_Nm), Nvl (Clc_Typ_F_Nm, Clc_Typ_L_Nm))
              From Gnr_Tax_Typ_Clc_Mst M, Gnr_Tax_Typ_Clc_Brn Db
             Where     M.Clc_Typ_No = Db.Clc_Typ_No
                              (Select D.Clc_Typ_No
                                 From Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Code_Mst T
                                Where D.Tax_No = T.Tax_No And D.
         Exception
         End;
            Begin
               Select 1, Decode (P_Lng_Dflt, 1, Nvl (Clc_Typ_L_Nm, Clc_Typ_F_Nm), Nvl (Clc_Typ_F_Nm, Clc_Typ_L_Nm))
                 From Gnr_Tax_Typ_Clc_Mst M, Gnr_Tax_Typ_Clc_Brn Db
                Where     M.Clc_Typ_No = Db.Clc_Typ_No
                                 (Select D.Clc_Typ_No
                                    From Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Typ_Clc_Brn Db, Gnr_Tax_Code_Mst T
                                   Where D.Tax_No = T.Tax_No And D.Clc_Typ_No = M.Clc_Typ_No And D.Clc_Typ_No = Db.Clc_Typ_No And T.Clc_Doc_Typ In (1, 3) And Db.Brn_No = Decode (Nvl (P_Inpt_Code2, 0),  0, 0,  Db.Brn_No, Nvl (P_Inpt_Code2, 0)) And Rownum <= 1))
            Exception
            End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Sc_Name, Nvl (Sc_Name, Sc_Name))
              From Sales_Charges
             Where Sc_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, So_A_Name, Nvl (So_E_Name, So_A_Name))
              From Ias_Sorder_Types
             Where So_Type = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Si_A_Name, Nvl (Si_E_Name, Si_A_Name))
              From Ias_Sales_Types
             Where Si_Type = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Sr_A_Name, Nvl (Sr_E_Name, Sr_A_Name))
              From Ias_Rt_Sales_Types
             Where Sr_Type = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
   Exception
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
   Begin
         Begin
            Select 1
              From S_Flags
             Where Flg_Code = 'TYPE_NAME_SI' And Flg_Value = Nvl (P_Bill_Doc_Type, 0) And Rownum <= 1;
         Exception
         End;
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
   Begin
   Procedure Chk_Itm (P_I_Code             In     Ias_Itm_Mst.I_Code%Type
   Begin
         Begin
            Select 1
              From Ias_Itm_Mst
             Where I_Code = P_I_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Ias_Itm_Dtl
             Where I_Code = P_I_Code And Itm_Unt = P_Itm_Unt And Rownum <= 1;
         Exception
         End;
            Select Nvl (Use_Exp_Date, 0) Use_Exp_Date
              From Ias_Itm_Mst
             Where I_Code = P_I_Code And Rownum <= 1;
      Begin
               Begin
                  Select 1
                    From Item_Movement D
                   Where I_Code = P_I_Code And Expire_Date = P_Expire_Date And W_Code = G_W_Code And Rownum <= 1;
               Exception
               End;
               Begin
                  Select 1
                    From Item_Movement D
                   Where I_Code = P_I_Code And Batch_No = P_Batch_No And W_Code = G_W_Code And Rownum <= 1;
               Exception
               End;
      End;
   Procedure Chk_Sub_Ldgr (P_Mst_Flg    In     Number
   Begin
      Else
            Begin
               Select Cc_Code
                 From Sales_Man
                Where Reprs_Code = G_Rep_Code And Rownum <= 1;
            Exception
            End;
            Begin
               Select Pj_No
                 From Sales_Man
                Where Reprs_Code = G_Rep_Code And Rownum <= 1;
            Exception
            End;
            Begin
               Select Pj_No
                 From Sales_Man
                Where Reprs_Code = G_Rep_Code And Rownum <= 1;
            Exception
            End;
   Procedure Chk_Avl_Qty ( P_I_Code         In     Item_Movement.I_Code%Type
    Begin
          Begin
             Select Chk_Avl_Qty
               From Warehouse_Details
              Where W_Code = P_W_Code And Rownum <= 1;
          Exception
          End;
             Begin
                Select Nvl (Pay_Avl_Qty, 1),nvl(Pay_Itm_Min_Qty,0)
                  From Privilege_Fixed
                 Where U_Id = G_AD_U_ID;
             Exception
             End;
       Begin
       Exception
       End;
             Begin
                Select Sum (Nvl (I_Qty, 0))
                  From (Select Sum ( (Nvl (I_Qty, 0) + Nvl (Free_Qty, 0)) * Nvl (P_Size, 1)) I_Qty
                          From Ias_Bill_Mst M, Ias_Bill_Dtl D
                         Where M.Bill_Ser = D.Bill_Ser And Nvl (M.Conn_Si_With_Outgong, 0) = 0 And D.I_Code = P_I_Code And D.W_Code = P_W_Code And Nvl (D.Expire_Date, '01/01/1900') = Nvl ( P_Expiredate, Nvl (D.Expire_Date, '01/01/1900')) And Nvl (D.Batch_No, '0') = Nvl ( P_Batchno, Nvl (D.Batch_No, '0'))
                        Select Sum ( (Nvl
                          From Detail_Out_Bills
                         Where I_Code = P_I_Code And W_Code = P_W_Code And Nvl (Expire_Date, '01/01/1900') = Nvl ( P_Expiredate, Nvl (Expire_Date, '01/01/1900')) And Nvl (Batch_No, '0') = Nvl ( P_Batchno, Nvl (Batch_No, '0'))
                        Select Sum ( (Nvl (D.I_Qty, 0) + Nvl (D.Free_Qty, 0)) * Nvl (D.P_Size, 1)) * -1 I_Qty
                          From Ias_Rt_Bill_Mst M, Ias_Rt_Bill_Dtl D
                         Where M.Rt_Bill_Ser = D.Rt_Bill_Ser And M.P_Year = 3 And D.I_Code = P_I_Code And D.W_Code = P_W_Code And Nvl (D.Expire_Date, '01/01/1900') = Nvl ( P_Expiredate, Nvl (D.Expire_Date, '01/01/1900')) And Nvl (D.Batch_No, '0') = Nvl ( P_Batchno, Nvl (D.Batch_No, '0')));
             Exception
             End;
             Begin
                Select Sum ( ( (Nvl (I_Qty, 0) - Nvl (Ret_Qty, 0)) + (Nvl (Free_Qty, 0) - Nvl (Ret_Free_Qty, 0))) * Nvl (P_Size, 1))
                  From Ias_Rt_Bill_Mst, Ias_Rt_Bill_Dtl
                 Where Ias_Rt_Bill_Mst.Rt_Bill_Ser = Ias_Rt_Bill_Dtl.Rt_Bill_Ser And Ias_Rt_Bill_Mst.P_Year <> 3 And I_Code = P_I_Code And Ias_Rt_Bill_Dtl.W_Code = P_W_Code And Nvl (Expire_Date, '01/01/1900') = Nvl ( P_Expiredate, Nvl (Expire_Date, '01/01/1900')) And Nvl (Batch_No, '0') = Nvl ( P_Batchno, Nvl (Batch_No, '0')) And ( (Nvl (I_Qty, 0) > Nvl (Ret_Qty, 0)) Or (Nvl (Free_Qty, 0) > Nvl (Ret_Free_Qty, 0)));
             Exception
             End;
             Begin
             Exception
             End;
    Exception
   Procedure Chk_Avl_Qty_old (P_I_Code         In     Item_Movement.I_Code%Type
   Begin
      Select Avl_Qty
        From Table (Inv_Qty_Pkg.Get_Avl_Qty_Fnc (P_Itm_Code      => P_I_Code
               BEGIN
               EXCEPTION WHEN OTHERS THENSELECT SUM(((NVL(I_QTY,0)-NVL(OUT_QTY,0))+(NVL(FREE_QTY,0)+NVL(OUT_FREE_QTY,0)))*NVL(P_SIZE,1))
                      FROM IAS_BILL_MST,IAS_BILL_DTL
                     WHERE IAS_BILL_MST.BILL_SER=IAS_BILL_DTL.BILL_SER
               END;
               BEGIN
                 SELECT SUM(((NVL(I_QTY,0)-NVL(RET_QTY,0))+(NVL(FREE_QTY,0)+NVL(RET_FREE_QTY,0)))*NVL(P_SIZE,1))
                      FROM IAS_RT_BILL_MST,IAS_RT_BILL_DTL
                     WHERE IAS_RT_BILL_MST.RT_BILL_SER=IAS_RT_BILL
               EXCEPTION WHEN OTHERS THEN
               END;
         BEGIN
             SELECT (SUM(NVL(P_QTY,0)+(NVL(FREE_QTY,0)*NVL(P_SIZE,1))) - SUM(NVL(PI_QTY,0)/NVL(P_SIZE,1))) INTO V_PO_QTY
               FROM P_ORDER A , P_ORDER_DETAIL B
              WHERE A.PO_SER           = B.PO_SER
         EXCEPTION WHEN OTHERS THEN
         END;
                     BEGIN
                         SELECT NVL(SUM(NVL(CP_QTY,0)),0) /NVL( P_P_SIZE,1)
                          FROM IAS_RESERVE_DTL
                           WHERE I_CODE             = P_I_CODE
                     EXCEPTION WHEN OTHERS THEN
                       END;
   Exception
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
   Begin
            Begin
               Select Nvl (Max (Doc_No), 0) + 1
                 From Ias_Reserve_Mst
                Where Doc_Type_Ref = G_Doc_Typ;
            Exception
            End;
            Begin
               Insert Into Ias_Reserve_Mst (Doc_Type
            Exception
            End;
         Begin
            Insert Into Ias_Reserve_Dtl (Doc_Type
         Exception
         End;
   Procedure Insrt_Installment (P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type
   Begin
         V_Cnt := Ias_Gen_Pkg.Get_Cnt ('Select Count(1) From ' || V_Tbl_Instil || ' 
                                                              Where doc_type= 4 
         V_Cnt_Paid := Ias_Gen_Pkg.Get_Cnt ('Select Count(1) From  ' || V_Tbl_Instil || '           
                                                                          Where doc_type= 4 
            Begin
               Execute Immediate ' DELETE  ' || V_Tbl_Instil || ' WHERE BILL_SER=' || P_Doc_Ser || ' AND NVL(I_PY,0)=0 ';
            Exception
            End;
            --BEGIN
               Begin
                  Execute Immediate '   INSERT INTO ' || V_Tbl_Instil || ' ( DOC_TYPE        , 
                                                      SELECT  4               , 
                                                         FROM ' || V_Tbl_Mst || '
                                                        WHERE BILL_SER=' || P_Doc_Ser;
               Exception
               End;
               Begin
                  Execute Immediate '  SELECT ((NVL(BILL_AMT,0)-NVL(DISC_AMT_MST,0)-NVL(DISC_AMT_DTL,0)-NVL(DISC_AMT_AFTR_VAT,0)-NVL(POINT_RPLC_AMT,0)-NVL(INSRNCE_CSH_AMT,0))+(NVL(OTHR_AMT,0)+NVL(VAT_AMT,0)+NVL(VAT_AMT_OTHR,0)+NVL(ASS_AMT,0))-(NVL(CR_CARD_AMT,0)+NVL(CR_CARD_AMT_SCND,0)+NVL(CR_CARD_AMT_THRD,0))),NVL(OTHR_AMT,0)  
                        FROM ' || V_Tbl_Mst || ' 
                       WHERE BILL_SER=' || P_Doc_Ser Into V_Bamt, V_Oamt;
                  Execute Immediate '  SELECT SUM(NVL(I_AMT,0)),SUM(NVL(PAID_AMT,0)+NVL(ADJ_AMT,0))   
                        FROM ' || V_Tbl_Instil || ' 
                       WHERE DOC_TYPE=4
               Exception
               End;
            Begin
               Execute Immediate '   INSERT INTO ' || V_Tbl_Instil || '( DOC_TYPE        , 
                                              SELECT  4               , 
                                                 FROM ' || V_Tbl_Mst || ' 
                                                WHERE BILL_SER=' || P_Doc_Ser || '
            Exception
            End;
   Procedure Insert_Other_Charges_Fbr (P_Billno         Number
   Begin
               Select Amt
                 From Ias_Bill_Mst_Br, Other_Charges_Br
                Where Ias_Bill_Mst_Br.Bill_Ser = Other_Charges_Br.Bill_Ser And Other_Charges_Br.Bill_Type = 1 And Nvl (Ias_Bill_Mst_Br.Bill_Post, 0) = 0 And Nvl (Ias_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Bill_Mst_Br.Bill_Ser = P_Billser;
         Begin
               Begin
                  Insert Into Other_Charges (Bill_Type
               Exception
               End;
         End;
               Select Nvl (Amt, 0) Amt
                 From Ias_Bill_Mst_Br, Other_Charges_Items_Br
                Where Ias_Bill_Mst_Br.Bill_Ser = Other_Charges_Items_Br.Bill_Ser And Other_Charges_Items_Br.Bill_Type = 1 And Nvl (Ias_Bill_Mst_Br.Bill_Post, 0) = 0 And Nvl (Ias_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Bill_Mst_Br.Bill_Ser = P_Billser;
         Begin
               Begin
                  Insert Into Other_Charges_Items (Bill_Type
               Exception
               End;
         End;
                 Select Nvl (Sum (Amt), 0) Amt
                   From Ias_Bill_Mst_Br, Other_Charges_Br
                  Where Ias_Bill_Mst_Br.Bill_Ser = Other_Charges_Br.Bill_Ser And Other_Charges_Br.Bill_Type = 1 And Ias_Bill_Mst_Br.Bill_Doc_Type <> 4 And Nvl (Ias_Bill_Mst_Br.Bill_Post, 0) = 0 And Nvl (Ias_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Bill_Mst_Br.Bill_Date = P_Billdate And Ias_Bill_Mst_Br.Ad_U_Id = P_User_Id And Ias_Bill_Mst_Br.Bill_Currency = P_Billcur And Nvl (Ias_Bill_Mst_Br.Cash_No, 0) = Nvl (P_Cashno, 0) And Nvl (Ias_Bill_Mst_Br.C_Code, 0) = Nvl (P_Ccode, 0)
               Group By Nvl (Per, 0)
         Begin
               Begin
                  Insert Into Other_Charges (Bill_Type
               Exception
               End;
         End;
                 Select Nvl (Sum (Amt), 0) Amt
                   From Ias_Bill_Mst_Br, Other_Charges_Items_Br
                  Where Ias_Bill_Mst_Br.Bill_Ser = Other_Charges_Items_Br.Bill_Ser And Ias_Bill_Mst_Br.Bill_Doc_Type <> 4 And Other_Charges_Items_Br.Bill_Type = 1 And Nvl (Ias_Bill_Mst_Br.Bill_Post, 0) = 0 And Nvl (Ias_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Bill_Mst_Br.Bill_Date = P_Billdate And Ias_Bill_Mst_Br.Ad_U_Id = P_User_Id And Ias_Bill_Mst_Br.Bill_Currency = P_Billcur And Nvl (Ias_Bill_Mst_Br.Cash_No, 0) = Nvl (P_Cashno, 0) And Nvl (Ias_Bill_Mst_Br.C_Code, 0) = Nvl (P_Ccode, 0)
               Group By Nvl (Per, 0)
         Begin
               Begin
                  Insert Into Other_Charges_Items (Bill_Type
               Exception
               End;
         End;
   Procedure Insert_Other_Charges_Sr_Fbr (P_Rt_Billno         Number
   Begin
               Select Amt
                 From Ias_Rt_Bill_Mst_Br, Other_Charges_Br
                Where Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser = Other_Charges_Br.Bill_Ser And Other_Charges_Br.Bill_Type = 3 And Nvl (Ias_Rt_Bill_Mst_Br.Rt_Bill_Post, 0) = 0 And Nvl (Ias_Rt_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser = P_Rt_Billser;
         Begin
               Begin
                  Insert Into Other_Charges (Bill_Type
               Exception
               End;
         End;
               Select Nvl (Amt, 0) Amt
                 From Ias_Rt_Bill_Mst_Br, Other_Charges_Items_Br
                Where Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser = Other_Charges_Items_Br.Bill_Ser And Other_Charges_Items_Br.Bill_Type = 3 And Nvl (Ias_Rt_Bill_Mst_Br.Rt_Bill_Post, 0) = 0 And Nvl (Ias_Rt_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser = P_Rt_Billser;
         Begin
               Begin
                  Insert Into Other_Charges_Items (Bill_Type
               Exception
               End;
         End;
                 Select Nvl (Sum (Amt), 0) Amt
                   From Ias_Rt_Bill_Mst_Br, Other_Charges_Br
                  Where Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser = Other_Charges_Br.Bill_Ser And Other_Charges_Br.Bill_Type = 3 And Ias_Rt_Bill_Mst_Br.Rt_Bill_Doc_Type <> 4 And Nvl (Ias_Rt_Bill_Mst_Br.Rt_Bill_Post, 0) = 0 And Nvl (Ias_Rt_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Rt_Bill_Mst_Br.Rt_Bill_Date = P_Rt_Billdate And Ias_Rt_Bill_Mst_Br.Ad_U_Id = P_User_Id And Ias_Rt_Bill_Mst_Br.Rt_Bill_Currency = P_Rt_Billcur And Nvl (Ias_Rt_Bill_Mst_Br.Cash_No, 0) = Nvl (P_Cashno, 0) And Nvl (Ias_Rt_Bill_Mst_Br.C_Code, 0) = Nvl (P_Ccode, 0)
               Group By Per
         Begin
      Begin
                  Insert Into Other_Charges (Bill_Type
               Exception
               End;
         End;
                 Select Nvl (Sum (Amt), 0) Amt
                   From Ias_Rt_Bill_Mst_Br, Other_Charges_Items_Br
                  Where Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser = Other_Charges_Items_Br.Bill_Ser And Ias_Rt_Bill_Mst_Br.Rt_Bill_Doc_Type <> 4 And Other_Charges_Items_Br.Bill_Type = 3 And Nvl (Ias_Rt_Bill_Mst_Br.Rt_Bill_Post, 0) = 0 And Nvl (Ias_Rt_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Rt_Bill_Mst_Br.Rt_Bill_Date = P_Rt_Billdate And Ias_Rt_Bill_Mst_Br.Ad_U_Id = P_User_Id And Ias_Rt_Bill_Mst_Br.Rt_Bill_Currency = P_Rt_Billcur And Nvl (Ias_Rt_Bill_Mst_Br.Cash_No, 0) = Nvl (P_Cashno, 0) And Nvl (Ias_Rt_Bill_Mst_Br.C_Code, 0) = Nvl (P_Ccode, 0)
               Group By Per
         Begin
               Begin
                  Insert Into Other_Charges_Items (Bill_Type
               Exception
               End;
         End;
   Procedure Updt_Bill_Disc_Prc_Old (P_Doc_Typ In Number Default Null, P_Pst_Typ In Number Default Null, P_Doc_Ser In Ias_Bill_Mst.Bill_Ser%Type)
   Begin
      Begin
         Execute Immediate ' SELECT  NVL(SUM(NVL(I_PRICE,0) * NVL(I_QTY,0)),0)
                   FROM ' || V_Tbl_Dtl_Nm || '
                                WHERE BILL_SER=' || P_Doc_Ser Into V_Doc_Amt;
      Exception
      End;
         Begin
            Execute Immediate ' UPDATE ' || V_Tbl_Mst_Nm || ' M SET DISC_AMT_DTL =(SELECT SUM((NVL(D.DIS_AMT_DTL,0)+NVL(D.DIS_AMT_DTL2,0)+NVL(D.DIS_AMT_DTL3,0))*NVL(D.I_QTY,0)) FROM ' || V_Tbl_Dtl_Nm || ' D
                                                                                  WHERE D.BILL_SER=M.BILL_SER)                   
                             WHERE M.BILL_SER=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20052, 'ERROR WHEN UPDATE  DISC_AMT_DTL ' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || '  D SET DIS_AMT_MST =(SELECT (NVL(M.DISC_AMT_MST,0)/' || Nvl (V_Doc_Amt, 0) || ')*NVL(D.I_PRICE,0) FROM ' || V_Tbl_Mst_Nm || ' M
                                                                                  WHERE M.BILL_SER=D.BILL_SER)                   
                             WHERE BILL_SER=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20052, 'ERROR WHEN UPDATE  DIS_AMT_MST ' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE ' || V_Tbl_Mst_Nm || '  SET DISC_AMT=NVL(DISC_AMT_MST,0)+NVL(DISC_AMT_DTL,0)                  
                             WHERE BILL_SER=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20052, 'ERROR WHEN UPDATE  DISC_AMT ' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE ' || V_Tbl_Dtl_Nm || ' D SET DIS_AMT =NVL(DIS_AMT_MST,0)+ NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0)                  
                                  WHERE BILL_SER=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20052, 'ERROR WHEN UPDATE  DISC_AMT ' || Chr (10) || Sqlerrm);
         End;
   Procedure Updt_Bill_Disc_Prc (P_Doc_Typ             In     Number
   Begin
      Select Nvl (Calc_Si_Disc_Without_Itm_Disc, 0), Nvl (No_Of_Decimal_Ar, 2), Nvl (Show_Disc_Per_Items_Ar, 0)
        From Ias_Para_Ar;
      Execute Immediate 'SELECT NVL(SUM((NVL(I_QTY,0) * NVL(I_PRICE,0))),0),NVL(SUM((NVL(I_QTY,0) * NVL(I_PRICE_VAT,0))),0) 
                         FROM ' || V_Tbl_Dtl_Nm || '
                         WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Bill_Amt, V_Bill_Amt_Vat;
      Execute Immediate 'SELECT  nvl(disc_amt_Mst,0) ,NVL(disc_amt_mst_vat,0)
                       FROM ' || V_Tbl_Mst_Nm || ' 
                       WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Disc_Amt_Mst, V_Disc_Amt_Mst_Vat;
         Begin
               Begin
                  Execute Immediate ' UPDATE ' || V_Tbl_Dtl_Nm || ' SET 
                      WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
               Exception
                     Raise_Application_Error (-20040, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate '  UPDATE  ' || V_Tbl_Dtl_Nm || ' SET 
                                                         WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
               Exception
                     Raise_Application_Error (-20041, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
te '  UPDATE ' || V_Tbl_Dtl_Nm || ' SET 
                                                         WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
               Exception
                     Raise_Application_Error (-20042, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
                  Begin
                     Execute Immediate '  UPDATE ' || V_Tbl_Dtl_Nm || ' SET 
                                                           WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
                  Exception
                        Raise_Application_Error (-20043, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
                  End;
                  Begin
                     Execute Immediate '  UPDATE ' || V_Tbl_Dtl_Nm || ' SET 
                                                         WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
                  Exception
                        Raise_Application_Error (-20044, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
                  End;
         End;
      Begin
            Begin
               Execute Immediate 'SELECT SUM((NVL(DIS_AMT_DTL_VAT,0)+NVL(DIS_AMT_DTL2_VAT,0)+NVL(DIS_AMT_DTL3_VAT,0))*NVL(I_QTY,0)) 
                                               FROM ' || V_Tbl_Dtl_Nm || ' 
                                    WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Sum_Dis_Amt_Dtl_Vat;
            Exception
                  Raise_Application_Error (-20045, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
            End;
            Begin
               Execute Immediate ' SELECT SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0))*NVL(I_QTY,0)) 
                                      FROM ' || V_Tbl_Dtl_Nm || '
                                     WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Sum_Dis_Amt_Dtl;
            Exception
                  Raise_Application_Error (-20046, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
            End;
      Exception
      End;
               Begin
                  Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt_Mst_Vat=Round((((' || Nvl (V_Bill_Amt_Vat, 0) || '- ' || Nvl (V_Sum_Dis_Amt_Dtl_Vat, 0) || ')*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ') 
                         WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
               Exception
                     Raise_Application_Error (-20047, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt_Mst_Vat=Round(((' || Nvl (V_Bill_Amt_Vat, 0) || '*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ') 
                                           WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
               Exception
                     Raise_Application_Error (-20048, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt_Mst=Round((((' || Nvl (V_Bill_Amt, 0) || '- ' || Nvl (V_Sum_Dis_Amt_Dtl, 0) || ')*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ')
                                                     WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
               Exception
                     Raise_Application_Error (-20049, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt_Mst=Round(((' || Nvl (V_Bill_Amt, 0) || ' *' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ') 
                                WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
               Exception
                     Raise_Application_Error (-20050, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
         Begin
            Execute Immediate ' SELECT NVL(disc_amt_mst_vat,0)  FROM ' || V_Tbl_Mst_Nm || ' 
                                        WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || ' 
         Exception
               Raise_Application_Error (-20051, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || ' Set Dis_Amt_Mst_Vat = ((((100 *' || Nvl (V_Disc_Amt_Mst_Vat, 0) || ')/' || V_Bill_Amt_Vat || ')*Nvl(i_price_vat,0))/100),
           Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20052, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' Set Disc_Amt_Mst = (Select SUM(Nvl(I_Qty,0)*Nvl(Dis_Amt_Mst,0)) From ' || V_Tbl_Dtl_Nm || ' Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '),
                                  Disc_Amt_Dtl = (Select SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0))*NVL(I_QTY,0)) From ' || V_Tbl_Dtl_Nm || ' Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || ')                              
           Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20053, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || '  Set Dis_Amt = Nvl(Dis_Amt_Ms
           Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20054, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            -- Update Ias_Bill_Mst Set Disc_Amt = Nvl(Disc_Amt_Mst,0)+Nvl(Disc_Amt_Dtl,0) Where Bill_Ser=P_DOC_SER;
            Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt=Round((nvl(disc_amt_mst,0)+nvl(disc_amt_dtl,0)+nvl(Disc_Amt_Aftr_Vat,0)),' || V_No_Of_Decimal || ') 
                        WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20055, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
                  Begin
                     Update Ias_Bill_Dtl_Br A
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                      Where Bill_Ser = P_Doc_Ser;
                  Exception
                  End;
                  Begin
                     Update Ias_Bill_Dtl_Br A
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                               (Select ( (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)) + Nvl (A.Dis_Amt_Dtl, 0) + Nvl (A.Dis_Amt_Dtl2, 0) + Nvl (A.Dis_Amt_Dtl3, 0)
                                  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                      Where Bill_Ser = P_Doc_Ser;
                  Exception
                  End;
                  Begin
                     Update Ias_Rt_Bill_Dtl_Br A
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Rt_Bill_Ser = A.Rt_Bill_Ser And Rt_Bill_Ser = P_Doc_Ser)
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Rt_Bill_Ser = A.Rt_Bill_Ser And Rt_Bill_Ser = P_Doc_Ser)
                      Where Rt_Bill_Ser = P_Doc_Ser;
                  Exception
                  End;
                  Begin
                     Update Ias_Rt_Bill_Dtl_Br A
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Rt_Bill_Ser = A.Rt_Bill_Ser And Rt_Bill_Ser = P_Doc_Ser)
                               (Select ( (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)) + Nvl (A.Dis_Amt_Dtl, 0) + Nvl (A.Dis_Amt_Dtl2, 0) + Nvl (A.Dis_Amt_Dtl3, 0)
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Rt_Bill_Ser = A.Rt_Bill_Ser And Rt_Bill_Ser = P_Doc_Ser)
                      Where Rt_Bill_Ser = P_Doc_Ser;
                  Exception
                  End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' m Set Disc_Amt_Dtl=(select SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0))*NVL(I_QTY,0))
                                                                                           from ' || V_Tbl_Dtl_Nm || ' d 
                                                                                             where m.' || V_Fld_Doc_Ser || '=d.' || V_Fld_Doc_Ser || ' )
                 Where M.' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20056, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt=Round(nvl(disc_amt_mst,0)+nvl(disc_amt_dtl,0),' || V_No_Of_Decimal || ') 
                      WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20057, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
      Begin
         Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || ' SET Vat_Amt_Bfr_Dis= (Nvl(i_price,0)*Nvl(vat_per,0))/100
                               WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            Raise_Application_Error (-20058, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
      End;
      Begin
         Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || ' SET Vat_Amt_Aftr_Dis = ((Nvl(i_price,0)-(Nvl(Dis_Amt_Dtl,0)+Nvl(Dis_Amt_Dtl2,0)+Nvl(Dis_Amt_Dtl3,0)+Nvl(Dis_Amt_Mst,0)))*Nvl(vat_per,0))/100          
           WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            Raise_Application_Error (-20059, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
      End;
   Exception
         Raise_Application_Error (-20060, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
   Procedure C
   Begin
      G_Exception_Err := Null;
   Procedure Chk_Insrt_Data (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
   Begin
               Select 53 Doc_Typ
                 From Sales_Order
                Where Order_Ser = P_Doc_Ser;
         Begin
               Begin
                  Select 1
                    From (Select Order_No, Order_Ser
                            From Sales_Order
                           Where Order_Ser = I.Doc_Ser
                          Select Order_No, Order_Ser
                            From Order_Detail
                           Where Order_Ser = I.Doc_Ser)
                   Where Rownum <= 1;
               Exception
               End;
                     Begin
                 EXCEPTION
                     End;
               --## UPDATE DISC
               Begin
               Exception
               End;
              Begin
                    Select Nvl (Round (Sum (Nvl (VAT_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt Into V_vat_amt_dtl
                                                        From Order_detail
                                                       Where Order_ser = I.Doc_ser;
        Exception When Others Then
              End; 
                  Begin
                  Exception
                  End;
                  Begin
                     Select 1
                       From Order_Detail D
                      Where     Order_Ser = I.Doc_Ser
                                   (Select 1
                                      From Gnr_Tax_Itm Ti
                                     Where Ti.Tax_No = Tm.Tax_No And Ti.Tax_No = Td.Tax_No And Ti.Agncy_No = Td.Agncy_No And Ti.Tax_No = Tc.Tax_No And Tm.Tax_No = Td.Tax_No And Tm.Tax_No = Tc.Tax_No And Td.Tax_No = Tc.Tax_No And Nvl (Tm.Inactive, 0) = 0 And I_Code = D.I_Code And Tc.Clc_Typ_No = I.Clc_Typ_No_Tax And Rownum <= 1)
                  Exception
                  End;
                     Begin
                        Select 1
                          From Gnr_Rq_Tax_Itm_Movmnt
                         Where Doc_Type = I.Doc_Typ And Doc_Ser = I.Doc_Ser And Rownum <= 1;
                     Exception
                     End;
               Begin
                  For M_Cv In (Select Round (Nvl (Order_Amt, 0), G_No_Of_Decimal_Ar) Doc_Amt
                                 From Sales_Order
                                Where Order_Ser = I.Doc_Ser)
                     For D_Cv In (Select Round (Sum (Nvl (I_Price, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar) Doc_Amt_Dtl
                                    From Order_Detail
              Where Order_Ser = I.Doc_Ser)
               Exception
               End;
               Begin
                  For M_Cv In (Select Nvl (Round (Nvl (Vat_Amt, 0), G_No_Of_Decimal_Ar), 0) Vat_Amt
                                 From Sales_Order
                                Where Order_Ser = I.Doc_Ser)
                     For Tax_Cv In (Select Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt
                                      From Gnr_Rq_Tax_Itm_Movmnt
                                     Where Doc_Ser = I.Doc_Ser)
               Exception
               End;
               Begin
                  For D_Cv In (Select Nvl (Round (Sum (Nvl (VAT_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt, Sum (Nvl (Vat_Per, 0)) Vat_Per
                                 From Order_Detail
                                Where Order_Ser = I.Doc_Ser)
                     For Tax_Cv In (Select Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt, Nvl (Sum (Nvl (Tax_Prcnt, 0)), 0) Vat_Per
                                      From Gnr_Rq_Tax_Itm_
                                     Where Doc_Ser = I.Doc_Ser)
               Exception
               End;
               Begin
               Exception
               End;               
         End;
         Begin
            V_Sql := ' SELECT   4 DOC_TYP
                              FROM ' || V_Tbl_Mst_Nm || ' WHERE BILL_SER =' || P_Doc_Ser || '
               --## UPDATE DISC
               Begin
               Exception
               End;
                 Begin
                      Execute Immediate ' SELECT   NVL(ROUND(NVL(VAT_AMT,0),' || G_no_of_decimal_ar || '),0) 
                                         FROM ' || V_tbl_mst_nm || ' WHERE BILL_SER = ' || J.BILL_ser Into V_vat_amt_mst;
                 Exception When Others Then
                 End; 
                 Begin
                                            FROM ' || V_Tbl_Dtl_Nm || ' WHERE BILL_SER = ' || J.BILL_ser Into V_Vat_Amt_Dtl
                 Exception When Others Then
                 End; 
                     Begin
                        Insert Into Gnr_Tax_Itm_Movmnt (Doc_Type
                           Select Doc_Type
                             From Gnr_Tax_Itm_Movmnt_Br
                            Where Doc_Type = J.Doc_Typ And Doc_Ser = J.Bill_Ser;
                     Exception
                     End;
                     Begin
                     Exception
                     End;                    
                  Begin
                      Begin
                        Execute Immediate ' SELECT  Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)),'||G_no_of_decimal_ar||'), 0) Vat_Amt 
                           FROM  ' || V_tbl_tax_mvmnt_nm || ' WHERE DOC_SER = ' || J.Bill_ser Into V_vat_amt_mvmnt;
                      Exception
                      End;
                  End;    
                  Begin
                  Exception
                        Raise_Application_Error (-20005, 'Err. When Insert Into Others Charges ' || Chr (13) || Sqlerrm);
                  End;
               Begin
               Exception
               End;
               Begin
               End;
                  Begin
                  Exception
                  End;
                  Begin
                  Exception
                  End;
                  Begin
                     Update Item_Movement M
                               (Select Dis_Amt
                                  From Detail_Out_Bills D
                                 Where M.Out_Gr_Ser = D.Out_Ser And M.I_Code = D.I_Code And M.Doc_Sequence = D.Doc_Sequence)
                      Where Doc_Ser = J.Bill_Ser;
                  Exception
                  End;
                  Begin
                     Update Item_Movement M
                               (Select Dis_Amt
                                  From Ias_Bill_Dtl D
                                 Where M.Doc_Ser = D.Bill_Ser And M.I_Code = D.I_Code And M.Doc_Sequence = D.Doc_Sequence)
                      Where Doc_Ser = J.Bill_Ser;
                  Exception
                  End;
                  Begin
                  Exception
                  End;
         End;
         Begin
            V_Sql := ' SELECT   5 DOC_TYP
                              FROM ' || V_Tbl_Mst_Nm || ' WHERE RT_BILL_SER =' || P_Doc_Ser || '
               --## UPDATE DISC
               Begin
               Exception
               End;
                 Begin
                      Execute Immediate ' SELECT   NVL(ROUND(NVL(VAT_AMT,0),' || G_no_of_decimal_ar || '),0) 
                                         FROM ' || V_tbl_mst_nm || ' WHERE RT_BILL_SER = ' || J.RT_BILL_ser Into V_vat_amt_mst;
                 Exception When Others Then
                 End; 
                 Begin
                      Execute Immediate ' SELECT  Nvl (Round (Sum (Nvl (VAT_Amt, 0) * Nvl (I_Qty, 0)), '|| G_no_of_decimal_ar ||'), 0) Vat_Amt
                                            FROM ' || V_Tbl_Dtl_Nm || ' WHERE RT_BILL_SER = ' || J.RT_BILL_ser Into V_Vat_Amt_Dtl;                                                                                                                                                                                                                                                                                   
                 Exception When Others Then
                 End; 
                     Begin
                        Insert Into Gnr_Tax_Itm_Movmnt (Doc_Type
                           Select Doc_Type
                             From Gnr_Tax_Itm_Movmnt_Br
                            Where Doc_Type = J.Doc_Typ And Doc_Ser = J.Rt_Bill_Ser;
                     Exception
                     End;
                     Begin
                     Exception
                     End;
                  Begin
                      Begin
                        Execute Immediate ' SELECT  Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)),'||G_no_of_decimal_ar||'), 0) Vat_Amt 
                           FROM  ' || V_tbl_tax_mvmnt_nm || ' WHERE DOC_SER = ' || J.RT_Bill_ser Into V_vat_amt_mvmnt;
           Exception
                      End;
                  End; 
                  Begin
                  Exception
                        Raise_Application_Error (-20005, 'Err. When Insert Into Others Charges SR ' || Chr (13) || Sqlerrm);
                  End;
               Begin
               Exception
               End;
                  Begin
                  Exception
                        Raise_Application_Error (-20011, 'Error When Insert Into Out Bills Tables , (Rt Sales)' || Chr (13) || Sqlerrm);
                  End;
                  Begin
                     Update Gr_Detail M
                               (Select Dis_Amt
                                  From Ias_Ret_Bill_Dtl D
                                 Where M.G_Ser = D.Ret_Ser And M.I_Code = D.I_Code And M.Doc_Sequence = D.Doc_Sequence)
                      Where 
                  Exception
                  End;
                  Begin
                     Update Item_Movement M
                               (Select Dis_Amt
                                  From Ias_Ret_Bill_Dtl D
                                 Where M.Out_Gr_Ser = D.Ret_Ser And M.I_Code = D.I_Code And M.Doc_Sequence = D.Doc_Sequence)
                      Where Doc_Ser = J.Rt_Bill_Ser;
                  Exception
                  End;
                  Begin
                     Update Gr_Detail M
                               (Select Dis_Amt
                                  From Ias_Rt_Bill_Dtl D
                                 Where M.Doc_Ser = D.Rt_Bill_Ser And M.I_Code = D.I_Code And M.Doc_Sequence = D.Doc_Sequence)
                      Where Doc_Ser = J.Rt_Bill_Ser;
                  Exception
                  End;
                  Begin
                     Update Item_Movement M
                               (Select Dis_Amt
                                  From Ias_Rt_Bill_Dtl D
                                 Where M.Doc_Ser = D.Rt_Bill_Ser And M.I_Code = D.I_Code And M.Doc_Sequence = D.Doc_Sequence)
                      Where Doc_Ser = J.Rt_Bill_Ser;
                  Exception
                  End;
                  Begin
                  Exception
                  End;
         End;
 BEGIN
               Exception
               End;
         End;
   Procedure Insert_Other_Charges_Sr_Fbr (P_Rt_Billno         Number
   Begin
               Select Amt
                 From Ias_Rt_Bill_Mst_Br, Other_Charges_Br
                Where Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser = Other_Charges_Br.Bill_Ser And Other_Charges_Br.Bill_Type = 3 And Nvl (Ias_Rt_Bill_Mst_Br.Rt_Bill_Post, 0) = 0 And Nvl (Ias_Rt_Bill_Mst_Br.Stand_By, 0) = 0 And Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser = P_Rt_Billser;
         Begin
               Begin
                  Insert Into Other_Charges (Bill_Type
UPDATE IAS_SYS.S_CRRNT_BRN_USR_MOBILE SET DTS_VRSN=8800 WHERE SYS_NO = 57  AND BRN_YEAR = :b1  AND BRN_USR = :b2"
DTS_PROCEDURE_PKG
"DTS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
DTS_FUNCTION_PKG
DTS_PROCEDURE_PKG
DTS_FUNCTION_PKG
DTS_FUNCTION_PKG
DTS_PROCEDURE_PKG
DTS_PROCEDURE_PKG
DTS_PROCEDURE_PKG
DTS_PROCEDURE_PKG
DTS_FUNCTION_PKG
"DTS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/MRPLIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
SELECT COUNT(*)   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = :b1  AND COLUMN_NAME = :b2  AND OWNER = :b3"
SELECT DISTINCT ATT_PKG.GET_ATT_DESC(
     FROM   VIEW_ITEMS_ATTACHS
   WHERE    I_CODE         = 
 ORDER BY 1
     FROM   VIEW_ITEMS_ATTACHS
   WHERE    CMP_NO         = 
     FROM   VIEW_ITEMS_ATTACHS
   WHERE    I_CODE          =
SELECT ATTCH_NO,DECODE(DECODE(:b1,1,1,2),1,ATTCH_A_NAME,ATTCH_E_NAME) NAME   FROM VIEW_ATTACHS  WHERE NVL(CONN_C_CODE,0) != 1"SELECT ATTCH_NO,DECODE(DECODE(:b1,1,1,2),1,ATTCH_A_NAME,ATTCH_E_NAME) NAME,CONN_C_CODE   FROM VIEW_ATTACHS"SELECT ATTCH_NO,DECODE(:b1,1,ATTCH_A_NAME,NVL(ATTCH_E_NAME,ATTCH_A_NAME)) ATTCH_NAME   FROM VIEW_ATTACHS"
SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"
SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"
SELECT DECODE(:b1,1,DECODE(:b2,1,120,2,192,3,144,4,132),2,DECODE(:b2,1,120,2,144,3,144,4,132),3,DECODE(:b2,1,120,2,120,3,120,4,122))   FROM DUAL"SELECT SFC_BOST_DATE   FROM MRP_MPS_WORK_ORDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND WORK_ORDER = :b3"SELECT TIME_F,TIME_T   FROM MRP_SGS_SHIFTS_MAST A  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND SHF_CODE = :b3  AND SHIFT_CODE = :b4  AND P_CNTU = 0"SELECT TIME_F,TIME_T   FROM MRP_SGS_SHIFTS_MAINT B  WHERE P_CNTU = 0  AND CMP_NO = :b1  AND BRN_NO = :b2  AND SHF_CODE = :b3  AND SHIFT_CODE = :b4"
    SELECT  TIME_F  ,  TIME_T 
  FROM    MRP_SGS_SHIFTS_MAST A
    WHERE   CMP_NO     =  P_CMP_NO
EXCEPTION WHEN NO_DATA_FOUND 
SELECT  TIME_F  ,  TIME_T 
      FROM   MRP_SGS_SHIFTS_MAINT  B 
      WHERE  P_CNTU    =0 
       EXCEPTION WHEN OTHERS 
PROCEDURE PRC_CHCK_CONFLCT_DATE_TIME(P_FDATE DATE ,P_FTIME DATE ,P_TDATE DATE ,P_TTIME DATE) IS
SELECT YER_CODE   FROM MRP_YEAR  WHERE P_CLS = 0  AND P_CNTU = 0"SELECT PERIOD_CODE   FROM MRP_SGS_PERIOD_COSTONG  WHERE YER_CODE = :b1  AND P_CLS = 0  AND P_CNTU = 0"SELECT YER_CODE,PERIOD_CODE   FROM MRP_SGS_PERIOD_COSTONG  WHERE P_CLS = 0  AND P_CNTU = 0  AND :b1 BETWEEN DATE_F AND DATE_T"SELECT TO_DATE(MNTH_FRM || ''/''  || YR_FRM ,''MM/YYYY'') F_PRD,LAST_DAY(TO_DATE(MNTH_TO || ''/''  || YR_TO ,''MM/YYYY'')) T_PRD   FROM MRP_YEAR  WHERE P_CLS = 0  AND P_C
NTU = 0"SELECT COUNT(*)   FROM MRP_SGS_PERIOD_COSTONG D,MRP_YEAR M  WHERE M.P_CLS = 0  AND M.P_CNTU = 0  AND D.P_CLS = 0  AND D.P_CNTU = 0  AND D.YER_CODE = M.YER_CODE  AND :b1 BETWEEN D.DATE_F AND D.DATE_T"SELECT NVL(SUM(NVL(QTY,0)),0)   FROM MRP_SFC_WHM_ITEMS_MOVE  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND WH_CODE = NVL(:b3,WH_CODE)  AND ITEM_CODE = :b4"SELECT NVL(SC_SATURDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 1"SELECT NVL(SC_SUNDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 2"SELECT NVL(SC_MONDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 3"SELECT NVL(SC_TUESDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 4"SELECT NVL(SC_WEDNESDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,
''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 5"SELECT NVL(SC_THURSDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 6"SELECT NVL(SC_FRIDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 7"SELECT NVL(COUNT(*),0)   FROM MRP_SGS_SCHDUL_CLNDR_DTLS  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND :b4 BETWEEN FRM_DATE AND TO_DATE"SELECT NVL(COUNT(*),0)   FROM MRP_CRP_WAREHOUSES_TRANSACTION  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND WH_CODE = NVL(:b3,WH_CODE)  AND MRP_WH_CODE = NVL(:b4,MRP_WH_CODE)  AND ITEM_CODE = NVL(:b5,ITEM_CODE)"SELECT NVL(COUNT(*),0)   FROM MRP_CRP_WAREHOUSES_TRANSACTION  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND WH_CODE = NVL(:b3,WH_CODE)  AND MRP_WH_CODE = NVL(:b4,MRP_WH_CODE)  AND ITEM_CODE = NVL(:b5,ITEM_CODE)  AND TRANSACTION_TYPE = :b6"SELECT COUNT(*)   FROM MRP_SGS_PERIOD_COSTONG D,MRP_YEAR M  WHERE M.P_CLS = 0  AND M.P_CNTU = 0  AND D.P_CLS = 0  AND D.YER_CODE = M.YER_CODE  AND :b1 BETWEEN D.DATE_F AND D.DATE_T"
  FROM  MRP_SGS_SCHDUL_CLNDR_WH
  WHERE BRN_NO    = V_BRN
  SELECT NVL(SC_THURSDAY,0)
 FROM  MRP_SGS_SCHDUL_CLNDR_MSTR
 WHERE CMP_NO    = V_CMP
 SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T , 'HH24:MI') , 'HH24:MI') - TO_DATE(TO_CHAR(TIME_F , 'HH24:MI') , 'HH24:MI')),0) * 24
  FROM  MRP_SGS_SCHDUL_CLNDR_WH
  WHERE BRN_NO    = V_BRN
  SELECT NVL(SC_FRIDAY,0)
 FROM  MRP_SGS_SCHDUL_CLNDR_MSTR
 WHERE CMP_NO    = V_CMP
 SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T , 'HH24:MI') , 'HH24:MI') - TO_DATE(TO_CHAR(TIME_F , 'HH24:MI') , 'HH24:MI')),0) * 24
  FROM  MRP_SGS_SCHDUL_CLNDR_WH
  WHERE BRN_NO    = V_BRN
  SELECT NVL(COUNT(*),0)
   FROM  MRP_SGS_SCHDUL_CLNDR_DTLS
   WHERE BRN_NO    = V_BRN
EXCEPTION
FUNCTION FUNC_CHECK_VALID_WH(V_CMP  NUMBER , V_BRN  NUMBER , F_WH VARCHAR2 , T_WH VARCHAR2 , V_ITEM VARCHAR2 , V_TRX  NUMBER , V_TP NUMBER) RETURN NUMBER IS
  SELECT NVL(COUNT(*),0)
   FROM  MRP_CRP_WAREHOUSES_TRANSACTION
   WHERE CMP_NO           = V_CMP
  BEGIN
 SELECT NVL(COUNT(*),0)
  FROM  MRP_CRP_WAREHOUSES_TRANSACTION
  WHERE CMP_NO           = V_CMP
SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT MSG_CODE,MSG_NUM,MSG_TEXT,MSG_TITLE,MSG_BUT1,MSG_BUT2,MSG_BUT3,MSG_STYLE   FROM IAS_SYS.MRP_MSGS  WHERE (UPPER(MSG_CODE) = UPPER(:b1) ) AND (MSG_NUM = :b2 ) AND (LANG_NO = :b3 )"
SELECT DISTINCT 1   FROM PRIVILEGE  WHERE FORM_NO = :b1  AND U_ID = :b2  AND VIEW_FLAG = 1"
SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"
SELECT :b1,:b2   FROM S_BRN  WHERE CMP_NO = :b3  AND BRN_NO = :b4"
    SELECT ATTCH_NO,DECODE(DECODE(P_LANG,1,1,2) ,1,ATTCH_A_NAME,ATTCH_E_NAME     ) NAME
    FROM   VIEW_ATTACHS      
SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"
 SELECT decode(
                   FROM  EX_RATE 
                   WHERE decode(
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/WMSLIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
WMS_FUNCTION_PKG
/TMP1/WMS_FUNCTION_PKG
"WMS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
CREATE OR REPLACE FUNCTION wms_getbranchfunc (
         (   'SELECT BRN_NO, CMP_NO, CMP_LNAME, CMP_FNAME, BRN_LNAME, BRN_FNAME FROM S_BRN ');
      SELECT COUNT (*)
        FROM TABLE (XMLSEQUENCE (EXTRACT (v_xml_type, '/ROWSET/ROW'))) xmldummay;
WMS_FUNCTION_PKG
    FUNCTION get_news (
    FUNCTION get_company_profile (
    FUNCTION mix_xml (
ALTER TABLE WMS_AGENT_COMM ADD ( CONSTRAINT WMS_AGENT_COMM_R01  FOREIGN KEY (FRM_C_CLASS) REFERENCES CUSTOMER_CLASS (C_CLASS)
ALTER TABLE WMS_AGENT_COMM ADD ( CONSTRAINT WMS_AGENT_COMM_FOSRV FOREIGN KEY (SRV_NO) REFERENCES WMS_SRV_MAN (SRV_NO)
ALTER TABLE WMS_AGENT_COMM ADD ( CONSTRAINT WMS_AGENT_COMM_R02 FOREIGN KEY (COMM_C_CODE) REFERENCES ACCOUNT (A_CODE)) 
ALTER TABLE WMS_BLK_LST ADD ( CONSTRAINT WMS_BLK_LST_R01 FOREIGN KEY (C_CODE) REFERENCES WMS_CUSTOMER_SUB (C_CODE))
ALTER TABLE WMS_FEE ADD ( CONSTRAINT WMS_FEE_R01 FOREIGN KEY (C_A_CODE) REFERENCES ACCOUNT (A_CODE))
ALTER TABLE WMS_AGENT_LMT ADD(CONSTRAINT WMS_AGENT_C_CODE_FK FOREIGN KEY (AGENT_C_CODE)REFERENCES WMS_CUSTOMER_SUB (C_CODE) )
ALTER TABLE WMS_GROUP_FEES ADD(CONSTRAINT WMS_FEE_APP_FK FOREIGN KEY (FEE_APP)REFERENCES WMS_FEE_APP (FEE_APP_NO) )
ALTER TABLE WMS_GROUP_FEES ADD(CONSTRAINT WMS_FEE_MEB_FK FOREIGN KEY (FEE_MEB)REFERENCES WMS_FEE_MEB (FEE_MEB_NO) )
ALTER TABLE WMS_GROUP_FEES ADD(CONSTRAINT WMS_FEE_MIC_FK FOREIGN KEY (FEE_MIC)REFERENCES WMS_FEE_MIC (FEE_MIC_NO) )
ALTER TABLE WMS_SRV_MAN ADD(CONSTRAINT WMS_SRV_GRP_NO_FK FOREIGN KEY (SRV_GRP_NO)REFERENCES WMS_SRV_GRP (SRV_GRP_NO) )
ALTER TABLE WMS_FEE_DIST ADD(CONSTRAINT WMS_FEE_DIST_FEE_NO_FK FOREIGN KEY (FEE_NO)REFERENCES WMS_FEE (FEE_NO) )
ALTER TABLE WMS_GPS_LOC ADD(CONSTRAINT WMS_GPS_LOC_NO_FK FOREIGN KEY (LOC_TY_NO)REFERENCES WMS_LOC_TY (LOC_TY_NO) )
ALTER TABLE WMS_GROUP_LMT ADD(CONSTRAINT WMS_GROUP_LMT_C_CLASS_FK FOREIGN KEY (C_CLASS)REFERENCES CUSTOMER_CLASS (C_CLASS) )
ALTER TABLE WMS_GROUP_SRV ADD(CONSTRAINT WMS_GROUP_SRV_C_CLASS_FK FOREIGN KEY (C_CLASS)REFERENCES CUSTOMER_CLASS (C_CLASS) )
ALTER TABLE WMS_GROUP_ST ADD(CONSTRAINT WMS_GROUP_ST_C_CLASS_FK FOREIGN KEY (C_CLASS)REFERENCES CUSTOMER_CLASS (C_CLASS) )
ALTER TABLE WMS_SRV_FEE  ADD(CONSTRAINT WMS_SRN_FEE_FRM_C_CLASS_FK FOREIGN KEY(FRM_C_CLASS) REFERENCES CUSTOMER_CLASS(C_CLASS))
ALTER TABLE WMS_SRV_FEE  ADD(CONSTRAINT WMS_SRN_FEE_TO_C_CLASS_FK FOREIGN KEY(TO_C_CLASS) REFERENCES CUSTOMER_CLASS(C_CLASS))
ALTER TABLE WMS_SRV_FEE_DSC  ADD(CONSTRAINT WMS_SRV_FEE_DSC_SVR_F_NO_FK FOREIGN KEY(SRV_FEE_NO) REFERENCES WMS_SRV_FEE(SRV_FEE_NO))
ALTER TABLE WMS_SRV_LMT  ADD(CONSTRAINT WMS_SRN_LMTFRM_C_CLASS_FK FOREIGN KEY(FRM_C_CLASS) REFERENCES CUSTOMER_CLASS(C_CLASS))
ALTER TABLE WMS_SRV_LMT  ADD(CONSTRAINT WMS_SRN_LMT_TO_C_CLASS_FK FOREIGN KEY(TO_C_CLASS) REFERENCES CUSTOMER_CLASS(C_CLASS))
ALTER TABLE WMS_SRV_LMT  ADD(CONSTRAINT WMS_SRV_LMT_SRV_NO_FK FOREIGN KEY(SRV_NO) REFERENCES WMS_SRV_MAN(SRV_NO))
ALTER TABLE WMS_SRV_MSG  ADD(CONSTRAINT WMS_SRV_MSG_SRV_NO_FK FOREIGN KEY(SRV_NO) REFERENCES WMS_SRV_MAN(SRV_NO))
ALTER TABLE WMS_CODE_DTL  ADD(CONSTRAINT WMS_CODE_DTL_MAIN_
ALTER TABLE WMS_CUSTOMER_SUB  ADD(CONSTRAINT WMS_CUST_SUB_C_CLASS_FK FOREIGN KEY(C_CLASS) REFERENCES CUSTOMER_CLASS(C_CLASS))
ALTER TABLE WMS_CUST_BAL ADD(CONSTRAINT WMS_CUST_BAL_C_CODE_FK FOREIGN KEY(C_CODE) REFERENCES WMS_CUSTOMER_SUB(C_CODE))
ALTER TABLE WMS_CUST_GLOBAL ADD(CONSTRAINT WMS_CUST_GLOBAL_C_CODE_FK FOREIGN KEY(C_CODE) REFERENCES WMS_CUSTOMER_SUB(C_CODE))
ALTER TABLE WMS_CUST_LMT_MST ADD(CONSTRAINT WMS_CUST_LMT_MST_CUST_MLTNO_FK FOREIGN KEY(C_CODE) REFERENCES WMS_CUSTOMER_SUB(C_CODE))
ALTER TABLE WMS_OPRTOR_LNK ADD (  CONSTRAINT WMS_OPRTOR_LNK_C_CODE_DFK  FOREIGN KEY (C_CODE) 
ALTER TABLE WMS_CUST_OBJCTION ADD (
    FROM   TABLE(XMLSequence( xmltype(str))) XMLDUMMAY;
    EXCEPTION
    END;
    FUNCTION add_log (
    BEGIN
    END;
    FUNCTION create_xml (
    BEGIN
    END;
    FUNCTION gen_xml (
"WMS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
CREATE  INDEX WMS_AGENT_COMM_INDX_SRV_CLASS ON WMS_AGENT_COMM (FRM_C_CLASS, TO_C_CLASS , SRV_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_AGENT_COMM_A_CODE ON WMS_AGENT_COMM(COMM_A_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_AGENT_COMM_INDX_R1 ON WMS_AGENT_LMT (SUPR_AGENT_C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_AGENT_COMM_INDX_R2 ON WMS_AGENT_LMT (AGENT_C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_BLK_INDEX_R2 ON WMS_BLK_LST (C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_DISC_INDX_R1 ON WMS_DISC (F_DATE, T_DATE, F_TIME, T_TIME) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_EVEL_INDEX_R1 ON WMS_EVELATION (MOBILE_NO, C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_FEE_I
CREATE  INDEX WMS_FEE_DIST_FEE_NO_INX ON WMS_FEE_DIST(FEE_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_GPS_LOC_TY_NO_INX ON WMS_GPS_LOC(LOC_TY_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_GROUP_FEES_FEE_APP_INX ON WMS_GROUP_FEES(FEE_APP) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_GROUP_FEES_FEE_MEB_INX ON WMS_GROUP_FEES(FEE_MEB) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_GROUP_FEES_FEE_MIC_INX ON WMS_GROUP_FEES(FEE_MIC) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_GROUP_LMT_C_CLASS_INX ON WMS_GROUP_LMT(C_CLASS) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_GROUP_SRV_C_CLASS_INX ON WMS_GROUP_SRV(C_CLASS) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_GROUP_ST_C_CLASS_INX ON WMS_GROUP_ST(C_CLASS) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_HISTRY_C_CODE ON WMS_HISTRY(C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_HISTRY_MOBILE_NO ON WMS_HISTRY(MOBILE_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_HISTRY_DOC_TY ON WMS_HISTRY(DOC_TY) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_HOLD_C_CODE ON WMS_HOLD(C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_HOLD_MOBILE_NO ON WMS_HOLD(MOBILE_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_NOTFY_C_CODE ON WMS_NOTFY(C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_NOTFY_MOBILE_NO ON WMS_NOTFY(MOBILE_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_OTP_C_CODE ON WMS_OTP(C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_OTP_MOBILE_NO ON WMS_OTP(MOBILE_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_OTP_IMEI ON WMS_OTP(IMEI) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SMS_INBOX_MOBILE_NO ON WMS_SMS_INBOX(MOBILE_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_FEE_FRM_CLASS_NO ON WMS_SRV_FEE(FRM_C_CLASS) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_FEE_TO_CLASS_NO ON WMS_SRV_FEE(TO_C_CLASS) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_MAN_SRV_NO ON WMS_SRV_FEE(SRV_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_MAN_FEE_NO ON WMS_SRV_FEE(FEE_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_FEE_DSC_NO ON WMS_SRV_FEE_DSC(SRV_FEE_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_LMT_FRM_CLASS_NO ON WMS_SRV_LMT(FRM_C_CLASS) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_LMT_TO_CLASS_NO ON WMS_SRV_LMT(TO_C_CLASS) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_LMT_SRV_NO ON WMS_SRV_LMT(SRV_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_MAN_SRV_GRP_NO ON WMS_SRV_MAN(SRV_GRP_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_SRV_MSG_SRV_NO ON WMS_SRV_MSG(SRV_NO) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_CUSTOMER_SUB_C_CLASS_INX ON WMS_CUSTOMER_SUB(C_CLASS) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_CUST_BAL_C_CODE_INX ON WMS_CUST_BAL(C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_CUST_GLOBAL_C_CODE_INX ON WMS_CUST_GLOBAL(C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE  INDEX WMS_CUST_LMT_MST_C_CODE ON WMS_CUST_LMT_MST(C_CODE) LOGGING TABLESPACE WMS_INDX_TRNS
CREATE INDEX INDX_
SELECT DISTINCT M.TABLE_NAME   FROM USER_CONSTRAINTS M  WHERE M.CONSTRAINT_TYPE = ''R''  AND M.DELETE_RULE = ''CASCADE''  AND (M.TABLE_NAME LIKE  ''WMS%'' ) AND M.TABLE_NAME NOT LIKE  ''%$%''  AND M.TABLE_NAME NOT LIKE  ''%TMP''  AND M.TABLE_NAME NOT LIKE  ''%OLD%'' ORDER BY M.TABLE_NAME"SELECT M.TABLE_NAME,D.COLUMN_NAME   FROM USER_CONSTRAINTS M,USER_CONS_COLUMNS D  WHERE M.CONSTRAINT_NAME = D.CONSTRAINT_NAME  AND M.TABLE_NAME = D.TABLE_NAME  AND M.CONSTRAINT_TYPE = ''R''  AND M.DELETE_RULE = ''CASCADE''  AND M.TABLE_NAME = :b1  AND NOT EXISTS  (SELECT 1   FROM USER_IND_COLUMNS  WHERE TABLE_NAME = M.TABLE_NAME  AND COLUMN_NAME = D.COLUMN_NAME  AND ROWNUM <= 1 )"
FORMS_DDL('CREATE TABLE WMS_FEE_DIST
FORMS_DDL('CREATE TABLE WMS_FEE_DSC
FORMS_DDL('CREATE TABLE WMS_FEE_DTL
 Not Complete  Create table ......
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
   (2, 4005, 'Cash In From Agent', 1, sysdate, 
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
Insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST
INSERT into IAS_DOCJV_TYPE_SYSTEMS_MST
INSERT into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
Insert into IAS_DOCJV_TYPE_SYSTEMS_MST
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values  (2, 4060, 1, 'Mobile No Change', 1,0)
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS  (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values  (1, 4060, 1, '
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS  (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values  (1, 4061, 1, '
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS  (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values  (2, 4061, 1, 'Send PIN', 1,0)
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS   (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values(2, 4062, 1, 'Active Wallet', 1, 0)
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS   (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values(1, 4062, 1, '
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS   (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values(1, 4063, 1, '
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS   (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values(2, 4063, 1, 'Send Password', 1,0) 
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS   (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values(2, 4064, 1, 'DeActive Wallet', 1,0) 
insert  into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS   (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, FLG_ST,DOC_PST)Values(1, 4064, 1, '
INSERT into IAS_DOCJV_TYPE_SYSTEMS
INSERT into IAS_DOCJV_TYPE_SYSTEMS
Insert into IAS_DOCJV_TYPE_SYSTEMS
Insert into IAS_DOCJV_TYPE_SYSTEMS
Err. When Update S_Flags WMS, 
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert into S_FLAGS
 Insert into S_FLAGS
 Insert into S_FLAGS
 Insert into S_FLAGS
 Insert into S_FLAGS
 Insert into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert  into S_FLAGS
 Insert into S_FLAGS
 Insert into S_FLAGS
 Insert into S_FLAGS
 Insert into S_FLAGS
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,1,1,'WMS_FEE_CLC','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,2,2,'WMS_FEE_CLC','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,2,2,'WMS_FEE_CLC','ratio',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,3,3,'WMS_FEE_CLC','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,3,3,'WMS_FEE_CLC','Range',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,1,1,'WMS_FEE_CLC','amount',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,1,1,'WMS_SRV_TY','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,1,1,'WMS_SRV_TY','Internel',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,2,2,'WMS_SRV_TY','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,2,2,'WMS_SRV_TY','External',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,1,1,'WMS_LMT_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,2,2,'WMS_LMT_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,1,1,'WMS_ACC_STATUS','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,2,2,'WMS_ACC_STATUS','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,4,4,'WMS_ACC_STATUS','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,5,5,'WMS_ACC_STATUS','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,6,6,'WMS_ACC_STATUS','
 delete from S_LOV_SLCT where lov_nm='WMS_LOV_SRV_MAIN' And LOV_SPCL_FLG = 0 
Insert into S_LOV_SLCT
   (75, 'WMS_LOV_SRV_MAIN', 5202, 'SELECT   wms_srv_man.srv_no,
FROM     wms_srv_man,
WHERE    wms_srv_man.srv_grp_no = wms_srv_grp.srv_grp_no', NULL, 
 delete from S_LOV_SLCT where lov_nm='WMS_LOV_OBJCTION_DOC' And LOV_SPCL_FLG = 0 
Insert into S_LOV_SLCT
   (75, 'WMS_LOV_OBJCTION_DOC', 15374, 'SELECT objction_no, objction_date, wms_cust_objction.srv_no,
FROM   wms_cust_objction,
WHERE  wms_cust_objction.srv_no = wms_srv_man.srv_no', NULL, 
 delete from S_LOV_SLCT where lov_nm='WMS_LOV_ONLINE_DOC' And LOV_SPCL_FLG = 0 
Insert into S_LOV_SLCT
   (75, 'WMS_LOV_ONLINE_DOC', 6928, 'SELECT doc_no, trns_date, 
FROM   v_wms_trans_online
WHERE  1 = 1', NULL, 
 delete from S_LOV_SLCT where lov_nm='WMS_LOV_WLLT_CUST' And LOV_SPCL_FLG = 0 
Insert into S_LOV_SLCT
   (75, 'WMS_LOV_WLLT_CUST', 116, 'Select Customer.C_Code,
  From Customer,WMS_CUSTOMER_SUB
  WHERE CUSTOMER.C_CODE = WMS_CUSTOMER_SUB.C_CODE', ' AND ( :PARAMETER.USER_NO = 1 OR EXISTS (SELECT 1 FROM S_BRN_USR_PRIV
                                WHERE U_ID = :Parameter.USER_NO                            
 delete from S_LOV_SLCT where lov_nm='WMS_LOV_C_CODE_RQ' And LOV_SPCL_FLG = 0 
Insert into S_LOV_SLCT
   (75, 'WMS_LOV_C_CODE_RQ', 116, 'Select Customer_Rq.C_Code,Decode (:Parameter.Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name)) C_Name
  From Customer_Rq
  WHERE ( USER_WALLET = 1  AND NVL(APPROVED,0)=1  AND (Not Exists (select 1 from customer where C_Code_Ref=customer_rq.C_Code and rownum<=1 )) 
       AND ( :Parameter.User_No = 1 OR EXISTS (SELECT 1 FROM S_BRN_USR_PRIV
                                WHERE U_ID = :Parameter.User_No
 delete from S_LOV_SLCT where lov_nm='WMS_LOV_C_CODE' And LOV_SPCL_FLG = 0 
Insert into S_LOV_SLCT
   (75, 'WMS_LOV_C_CODE', 116, 'Select Customer.C_Code,
  From Customer
  WHERE C_CODE IN (
           SELECT C_CODE FROM CUSTOMER
           SELECT C_CODE FROM WMS_CUSTOMER_SUB 
          ) ', ' AND ( :PARAMETER.USER_NO = 1 OR EXISTS (SELECT 1 FROM S_BRN_USR_PRIV
                                WHERE U_ID = :Parameter.USER_NO                            
 Insert  into S_LST_SLCT
   ('LST_WMS_SERVICES', 'SELECT TO_CHAR(SRV_NO)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(SRV_L_NM,SRV_F_NM),NVL(SRV_F_NM,SRV_L_NM)),TO_CHAR(SRV_NO)  FROM WMS_SRV_MAN WHERE SRV_ST = 1', NULL, 'SRV_NO', NULL) 
 Insert  into S_LST_SLCT
   ('LST_WMS_FEE_MIC', 'SELECT TO_CHAR(FEE_MIC_NO)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(FEE_L_NM,FEE_F_NM),NVL(FEE_L_NM,FEE_F_NM)),TO_CHAR(FEE_MIC_NO)  FROM WMS_FEE_MIC WHERE 1 = 1', NULL, 'FEE_MIC_NO', NULL) 
 Insert  into S_LST_SLCT
   ('LST_WMS_FEES', 'SELECT TO_CHAR(FEE_NO)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(FEE_L_NM,FEE_F_NM),NVL(FEE_L_NM,FEE_F_NM)),TO_CHAR(FEE_NO)  FROM WMS_FEE WHERE 1 = 1', NULL, 'fee_no', 
 Insert  into S_LST_SLCT
   ('LST_WMS_FEE_APP', 'SELECT TO_CHAR(FEE_APP_NO)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(FEE_L_NM,FEE_F_NM),NVL(FEE_L_NM,FEE_F_NM)),TO_CHAR(FEE_APP_NO)  FROM WMS_FEE_APP WHERE 1 = 1', NULL, 'FEE_APP_NO', NULL) 
 Insert  into S_LST_SLCT
   ('LST_WMS_FEE_MEB', 'SELECT TO_CHAR(FEE_MEB_NO)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(FEE_L_NM,FEE_F_NM),NVL(FEE_L_NM,FEE_F_NM)),TO_CHAR(FEE_MEB_NO)  FROM WMS_FEE_MEB WHERE 1 = 1', NULL, 'FEE_MEB_NO', NULL) 
 Insert  into S_LST_SLCT
   ('LST_WMS_FEE_DISC', 'SELECT TO_CHAR(DISC_NO)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(DISC_L_NM,DISC_F_NM),NVL(DISC_L_NM,DISC_F_NM)),TO_CHAR(DISC_NO)  FROM WMS_DISC WHERE 1 = 1', NULL, 'DISC_NO', NULL) 
 Insert  into S_LST_SLCT
   ('LST_WMS_LOC_TYPE', 'SELECT TO_CHAR(LOC_TY_NO)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(LOC_L_NM,LOC_L_NM),NVL(LOC_L_NM,LOC_F_NM)),TO_CHAR(LOC_TY_NO)  FROM WMS_LOC_TY WHERE 1 = 1', NULL, 'LOC_TY_NO', NULL) 
 Insert  into S_LST_SLCT
   ('LST_WMS_CLASS', 'SELECT TO_CHAR(C_CLASS)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(C_CLASS_NAME,C_CLASS_E_NAME),NVL(C_CLASS_NAME,C_CLASS_E_NAME)),TO_CHAR(C_CLASS)  FROM CUSTOMER_CLASS WHERE 1 = 1', NULL, 'C_CLASS', NULL) 
 Insert  into S_LST_SLCT
   ('LST_WMS_SRV', 'SELECT TO_CHAR(SRV_NO)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(SRV_L_NM,SRV_F_NM),NVL(SRV_F_NM,SRV_L_NM)),TO_CHAR(SRV_NO)  FROM WMS_SRV_MAN WHERE SRV_ST = 1', NULL, 'SRV_NO', NULL) 
 Insert  into S_LST_SLCT
   ('LST_WMS_CUST_GROUP', 'SELECT TO_CHAR(C_GROUP_CODE)||''-''|| DECODE(:PARAMETER.LANG_DFLT,1,NVL(C_GROUP_A_NAME,C_GROUP_E_NAME),NVL(C_GROUP_E_NAME,C_GROUP_A_NAME)),TO_CHAR(C_GROUP_CODE)  FROM CUSTOMER_GROUP WHERE 1 = 1', NULL, 'c_group_code', NULL) 
(FROM 
SELECT COUNT(1)   FROM TAB  WHERE TABTYPE = ''TABLE''  AND (TNAME LIKE  ''WMS%'' )"SELECT COUNT(1)   FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST  WHERE DOC_TYPE = 4066"SELECT COUNT(1)   FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS  WHERE DOC_TYPE >= 4000"
CREATE TABLE WMS_CUSTOMER_SUB
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12000,    0, NULL,1,0,250,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12001,12000, NULL,1,0,1,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12002,12000, NULL,1,0,2,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12003,12000, NULL,1,0,3,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12004,12000, NULL,1,0,4,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12005,12000, NULL,1,0,5,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12010,12003,'WMSI001',1,0,1,NULL,NULL,3,4065)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12011,12003,'WMSI002',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12020,12100,'ARSI002',1,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12021,12100,'ARSS004',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12022,12100,'ARSS005',1,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12023,12100,'ARSS019',0,0,4,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12024,12101,'WMSS012',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12025,12101,'WMSS013',1,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12026,12102,'WMSS014',0,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12028,12102,'WMSS016',0,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12029,12001,'WMSSTP09',1,1,8,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12030,12001,'GENS019',0,0,4,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12031,12103,'WMSS030',0,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12032,12103,'WMSS018',0,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12033,12103,'WMSS017',0,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12034,12001,'WMSS029',0,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12035,12108,'WMST001',1,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12036,12104,'WMSS019',0,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12037,12104,'WMSS020',0,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12038,12104,'WMSS021',0,0,4,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12039,12003,'WMSI004',1,0,6,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12040,12004,'WMSBLK021',1,1,6,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12041,12004,'WMST003',1,1,6,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12042,12104,'WMSS022',0,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12043,12107,'WMSS023',0,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12044,12001,'WMSDISC025',0,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_TH
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12046,12001,'WMSDISC025',1,1,5,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12047,12001,'GENS014',0,1,6,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12048,12003,'WMSI003',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12049,12108,'WMST004',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12050,12003,'GENS014',1,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12051,12005,  NULL,1,0,3,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, S
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12053,12052,'ARSR005',1,0,4,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12054,12052,'GLSR012',1,0,1,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12055,12052,'GLSR007',1,0,2,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12056,12052,'GLSR007',1,0,5,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12057,12005,  NULL,1,0,6,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12058,12005,  NULL,1,0,4,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12059,12005, NULL,1,0,1,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12060,12107,'WMSS010',1,0,4,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12061,12107,'WMSS011',1,0,5,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12062,12107,'WMSS024',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,120
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12064,12105,'WMSS026',0,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12065,12108,'WMST002',1,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12066,12105,'WMSS036',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12067,12002,'ARSI005',1,1,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12070,12105,'WMSS035',1,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12071,12106,'WMSS034',1,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12072,12106,'WMSS033',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12073,12002,'WMSS031',1,1,9,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12074,12002,'WMSS032',1,1,10,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12075,12003,'WMSI005',1,0,5,NULL,NULL,2,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12077,12108,'WMST004',1,1,6,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12078,12108,'WMST005',1,0,5,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12079,12108,'WMST009',1,0,4,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12080,12109,'WMST010',1,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12081,12111,'WMST007',1,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12082,12005,'WMSR002',0,0,1,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12083,12110,'WMST013',1,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12084,12111,'WMST014',1,0,10,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12085,12110,'WMST015',1,0,9,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12086,12110,'WMST016',1,0,8,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12087,12052,'WMSR001',1,0,3,NULL,NULL,4,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12088,12101,'WMSS037',1,0,1,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12089,12109,'WMST011',1,0,2,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12090,12003,'MTXBLL002',1,0,6,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12091,12109,'ARST025',1,0,3,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12092,12108,'WMST017',1,0,7,NULL,NULL,1,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12100,12002,NULL,1,0,1,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12101,12002,NULL,1,0,2,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12102,12002,NULL,1,0,3,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12103,12002,NULL,1,0,4,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12104,12002,NULL,1,0,5,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12105,12002,NULL,1,0,6,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12106,12002,NULL,1,0,7,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12107,12002,NULL,1,0,8,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12108,12004,NULL,0,0,1,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12109,12004,NULL,0,0,2,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRI
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12111,12004,NULL,0,0,4,NULL,NULL,0,NULL)
INSERT INTO FORM_DETAIL ( F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP ) VALUES ( 'WMS',72,12116,12111,'WMST018',1,0,1,NULL,NULL,1,4066)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12000,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12001,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12029,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12044,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12034,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12030,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12046,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12063,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12045,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12002,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12020,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12021,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12022,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12023,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12101,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12088,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12024,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12025,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12102,'
INSERT INTO IAS_FORM_NAME( LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12026, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12027,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12103,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12033,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12032,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12031,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12104,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12036,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12037,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12042,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12038,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12105,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12070, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12066,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12064,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12106,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12071,'
INSERT INTO 
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12107,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12028,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12062,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12043,'
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12060, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12061, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12003, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12010, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12048, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12050, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12011, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12075, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12039, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12090, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12004, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12108, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12035, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12049, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12065, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12079, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12078, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12092, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12109, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12080, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12089, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12091, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12110, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12083, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12086, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12085, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12111, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12081, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12082, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12084, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12005, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12052, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12054, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12055, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12087, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12053, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1,12056, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 12116, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 12116, 'Customer Objection')
SELECT FORM_DETAIL.FORM_NO,U_ID,F_ORDER_NO   FROM FORM_DETAIL,USER_R  WHERE F_SYS = ''WMS''  AND (USER_R.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(USER_R.U_ID) = 1 ) AND ( FORM_DETAIL.FORM_NO,U_ID  ) IN (SELECT FORM_NO,USER_R.U_ID   FROM FORM_DETAIL,USER_R  WHERE (USER_R.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(USER_R.U_ID) = 1 ) MINUS SELECT FORM_NO,USER_R.U_ID   FROM PRIVILEGE  WHERE (PRIVILEGE.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(PRIVILEGE.U_ID) = 1 ))"INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,F_ORDER_NO,AD_DATE,AD_U_ID )  VALUES ( :b1,:b2,1,1,1,1,1,1,:b3,IAS_GEN_PKG.GET_CURDATE,1  )"
SELECT COUNT(1)   FROM DBA_TABLESPACES  WHERE TABLESPACE_NAME LIKE  ''WMS%''"
CREATE OR REPLACE PACKAGE WMS_ACC_PKG_NEW AS
    FUNCTION none_trans (
    FUNCTION acc_trans (
    FUNCTION otp_trans (
    FUNCTION post_trans (
    FUNCTION make_fee (
     PROCEDURE make_comm (
CREATE OR REPLACE PACKAGE BODY wms_acc_pkg_new AS
    FUNCTION acc_trans (
    BEGIN
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
       --begin 
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
      BEGIN
         BEGIN
            SELECT 1
              FROM WMS_ONLINE_TRANS
             WHERE TRNS_YR = P_TRNS_YR 
         EXCEPTION
         END;
            BEGIN
               SELECT MAX (NVL (DOC_NO, 0)) + 1
                 FROM WMS_ONLINE_TRANS
                WHERE TRNS_YR = P_TRNS_YR;
            EXCEPTION
            END;
      END;
      Begin
         Select CONN_BRN_NO into v_to_ACC_BRN from customer where c_code =V_to_cust_ser;
      exception when others then
      end;*/
        BEGIN
            INSERT INTO wms_trans_online (
        EXCEPTION
        END;
    FUNCTION rev_acc_trans (
    BEGIN
        BEGIN
                v_str := 'SELECT C_CODE, C_A_NAME FROM customer WHERE INACTIVE = 0 AND BLK_LST = 0 and C_MOBILE = to_char('
                v_str := 'SELECT C_CODE, C_A_NAME FROM customer WHERE INACTIVE = 0 AND BLK_LST = 0 and c_code =' || TO_CHAR(p_to_c_code
        EXCEPTION
        END;
        BEGIN
                v_str := 'SELECT C_CODE, C_A_NAME FROM customer WHERE INACTIVE = 0 AND BLK_LST = 0 and c_code =' || TO_CHAR(p_to_c_code
                v_str := 'SELECT C_CODE, C_A_NAME FROM customer WHERE INACTIVE = 0 AND BLK_LST = 0 and C_MOBILE = to_char('
        EXCEPTION
        END;
       --begin 
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
      BEGIN
         BEGIN
            SELECT 1
              FROM WMS_ONLINE_TRANS
             WHERE TRNS_YR = P_TRNS_YR 
         EXCEPTION
         END;
            BEGIN
               SELECT MAX (NVL (DOC_NO, 0)) + 1
                 FROM WMS_ONLINE_TRANS
                WHERE TRNS_YR = P_TRNS_YR;
            EXCEPTION
            END;
      END;
      Begin
         Select CONN_BRN_NO into v_to_ACC_BRN from customer where c_code =V_to_cust_ser;
      exception when others then
      end;*/
        INSERT INTO wms_trans_online (
   --EXCEPTION WHEN OTHERS THEN
    -- RAISE_APPLICATION_ERROR (-20002,'Error When Insert Into TRNSFR , '||SQLERRM);
    FUNCTION none_trans (
    BEGIN
        BEGIN
        EXCEPTION
        END;
      BEGIN
         SELECT c_code, C_A_NAME
           FROM customer
          WHERE     INACTIVE = 0
      EXCEPTION
      END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
      BEGIN
         BEGIN
            SELECT 1
              FROM WMS_ONLINE_TRANS
             WHERE TRNS_YR = P_TRNS_YR 
         EXCEPTION
         END;
            BEGIN
       SELECT MAX (NVL (DOC_NO, 0)) + 1
                 FROM WMS_ONLINE_TRANS
                WHERE TRNS_YR = P_TRNS_YR;
            EXCEPTION
            END;
      END;
      Begin
         Select CONN_BRN_NO into v_to_ACC_BRN from customer where c_code =V_to_cust_ser;
      exception when others then
      end;*/
        INSERT INTO wms_trans_online (
    EXCEPTION
    FUNCTION otp_trans (
    BEGIN
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
         SELECT c_code, C_A_NAME , C_MOBILE
           FROM customer
          WHERE     INACTIVE = 0
      EXCEPTION
      END;
                BEGIN
                EXCEPTION
                END;
                BEGIN
                EXCEPTION
                END;
        BEGIN
        EXCEPTION
        END;
        UPDATE wms_trans_online
      BEGIN
         BEGIN
            SELECT 1
              FROM WMS_ONLINE_TRANS
             WHERE TRNS_YR = P_TRNS_YR 
         --EXCEPTION
         END;
            BEGIN
               SELECT MAX (NVL (DOC_NO, 0)) + 1
                 FROM WMS_ONLINE_TRANS
                WHERE TRNS_YR = P_TRNS_YR;
            EXCEPTION
            END;
      END;
      Begin
         Select CONN_BRN_NO into v_to_ACC_BRN from customer where c_code =V_to_cust_ser;
      exception when others then
      end;*/
/*    BEGIN
         SELECT CC_CODE, project_no, active_no
           FROM WMS_PRJ
          WHERE ROWNUM <= 1;
      EXCEPTION
      END;*/
        begin
           update wms_trans_online set RESP_NO = 3 where Doc_post <> 0 and FRM_C_CODE =  V_FRM_C_CODE and TRANS_TYPE = 1 and SERVICE_NO = V_SERVICENO;
      Begin
         Select CONN_BRN_NO into v_to_ACC_BRN from customer where c_code =V_to_cust_ser;
      exception when others then
      end;*/
        INSERT INTO wms_trans_online (
        insert into wms_trace values(55,'ret relase' || ret) ; commit;
    EXCEPTION
    FUNCTION post_trans (
    BEGIN
        BEGIN
        EXCEPTION
        END;
            UPDATE wms_trans_online
            UPDATE wms_trans_online
    --    insert into wms_trace values(55,'ret relase' || ret) ; commit;
    EXCEPTION
    END;                                          
        Update wms_trans_online set resp_no = 1 where resp_no = 2 and Doc_Srl = V_Doc_Srl and Doc_post = 1 and SERVICE_NO = P_SERVICENO;
       EXCEPTION WHEN OTHERS THEN
    FUNCTION make_fee (
    BEGIN
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
      BEGIN
         BEGIN
            SELECT 1
              FROM WMS_ONLINE_TRANS
             WHERE TRNS_YR = P_TRNS_YR 
         EXCEPTION
         END;
            BEGIN
               SELECT MAX (NVL (DOC_NO, 0)) + 1
                 FROM WMS_ONLINE_TRANS
                WHERE TRNS_YR = P_TRNS_YR;
            EXCEPTION
            END;
      END;
      Begin
         Select CONN_BRN_NO into v_to_ACC_BRN from customer where c_code =V_to_cust_ser;
      exception when others then
      end;*/
        INSERT INTO wms_trans_online (
   --EXCEPTION WHEN OTHERS THEN
    -- RAISE_APPLICATION_ERROR (-20002,'Error When Insert Into TRNSFR , '||SQLERRM);
    PROCEDURE make_comm (
    BEGIN
      BEGIN
         SELECT C_CODE, C_A_NAME
           FROM customer
          WHERE     INACTIVE = 0
      EXCEPTION
      END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
       /* BEGIN
        EXCEPTION
        END;*/
        BEGIN
            BEGIN
            EXCEPTION
            END;
                BEGIN
                EXCEPTION
                END;
        END;
      Begin
         Select CONN_BRN_NO into v_to_ACC_BRN from customer where c_code =V_to_cust_ser;
      exception when others then
      end;*/
        INSERT INTO wms_trans_online (
   --EXCEPTION WHEN OTHERS THEN
    -- RAISE_APPLICATION_ERROR (-20002,'Error When Insert Into TRNSFR , '||SQLERRM);
CREATE OR REPLACE PACKAGE WMS_AGENT_ONLINE_PKG AS
    PROCEDURE agemt_money_trans_wait (
    PROCEDURE agent_login (
    PROCEDURE agent_accreport (
    PROCEDURE agent_new_cust_reg_req (
    PROCEDURE agent_new_cust_reg_com (
    PROCEDURE agent_commreport (
    PROCEDURE agent_cashin (
    PROCEDURE agent_money_trsfer_cash (
    FUNCTION insert_cust_reg_temp (
    PROCEDURE agent_money_trsfer_query (
    PROCEDURE agent_balance (
    PROCEDURE agent_get_subagent (
    PROCEDURE agent_shortstat (
    PROCEDURE agent_cust_reg_req (
    PROCEDURE agent_cust_reg_com (
    PROCEDURE agent_pass_change (
    PROCEDURE agent_account_lock (
    PROCEDURE agent_account_freez (
    PROCEDURE agent_noitify_lang (
    PROCEDURE agent_auth_type (
    PROCEDURE agent_payment (
    PROCEDURE agent_pin_change_req (
    PROCEDURE agent_purchase (
    PROCEDURE agent_reg_subagent_req (
    PROCEDURE agent_register_com (
    PROCEDURE agent_update_lmit (
    PROCEDURE agent_purchase_cash (
    PROCEDURE agent_purchase_query (
    PROCEDURE agent_cashout_query (
    PROCEDURE agent_cashout_req (
    PROCEDURE agent_cashout (
    PROCEDURE agent_money_trsfer (
    PROCEDURE agent_money_trsfer_update (
    PROCEDURE agent_money_trsfer_delete (
    PROCEDURE agent_pass_reset_req (
    PROCEDURE agent_pass_reset_com (
    PROCEDURE trsfer_t_agent (
    PROCEDURE trsfer_t_subagent (
    PROCEDURE agent_cust_update (
    PROCEDURE agent_custdata_update (
    PROCEDURE query_fees (
    PROCEDURE agent_pin_change_com (
    PROCEDURE notifystat (
    PROCEDURE device_register_req (
    PROCEDURE device_register_com (
CREATE OR REPLACE PACKAGE BODY wms_agent_online_pkg AS
    PROCEDURE agent_login (
    BEGIN
    END;
    PROCEDURE agent_money_trsfer_query (
    BEGIN
    END;
    PROCEDURE agent_money_trsfer_cash (
    BEGIN
    END;
    PROCEDURE agemt_money_trans_wait (
    BEGIN
    END;
    PROCEDURE agent_cashin (
    BEGIN
    END;
    PROCEDURE agent_balance (
    BEGIN
    END;
    PROCEDURE agent_shortstat (
    BEGIN
    END;
    PROCEDURE agent_accreport (
    BEGIN
    END;
    PROCEDURE agent_commreport (
    BEGIN
    END;
    FUNCTION insert_cust_reg_temp (
    BEGIN
        INSERT INTO wms_otp (
    END;
    PROCEDURE agent_cust_reg_req (
    BEGIN
    END;
    PROCEDURE agent_new_cust_reg_req (
    BEGIN
    END;
    PROCEDURE agent_cust_update (
    BEGIN
    END;
    PROCEDURE agent_cust_reg_com (
    BEGIN
    END;
    PROCEDURE device_register_req (
    BEGIN
    END;
    PROCEDURE device_register_com (
    BEGIN
    END;
    PROCEDURE notifystat (
    BEGIN
    END;
    PROCEDURE agent_new_cust_reg_com (
    BEGIN
    END;
    PROCEDURE agent_pin_change_req (
    BEGIN
    END;
    PROCEDURE agent_pin_change_com (
    BEGIN
    END;
    PROCEDURE agent_req_lock_account (
    BEGIN
    END;
    PROCEDURE agent_account_lock (
    BEGIN
    END;
    PROCEDURE agent_noitify_lang (
    BEGIN
    END;
    PROCEDURE agent_auth_type (
    BEGIN
    END;
    PROCEDURE agent_payment (
    BEGIN
    END;
    PROCEDURE agent_purchase (
    BEGIN
    END;
    PROCEDURE agent_reg_subagent_req (
    BEGIN
    END;
    PROCEDURE agent_purchase_cash (
    BEGIN
    END;
    PROCEDURE agent_purchase_query (
    BEGIN
    END;
    PROCEDURE agent_cashout (
    BEGIN
    END;
    PROCEDURE agent_cashout_query (
    BEGIN
    END;
    PROCEDURE agent_money_trsfer (
    BEGIN
    END;
    PROCEDURE agent_money_trsfer_update (
    BEGIN
    END;
    PROCEDURE agent_custdata_update (
    BEGIN
    END;
    PROCEDURE trsfer_t_agent (
    BEGIN
    END;
    PROCEDURE trsfer_t_subagent (
    BEGIN
    END;
    PROCEDURE query_fees (
    BEGIN
    END;
    PROCEDURE agent_money_trsfer_delete (
    BEGIN
    END;
    PROCEDURE agent_cashout_req (
    BEGIN
    END;
    PROCEDURE agent_pass_reset_req (
    BEGIN
    END;
    PROCEDURE agent_pass_reset_com (
    BEGIN
    END;
    PROCEDURE agent_dective (
    BEGIN
    END;
    PROCEDURE agent_register_com (
    BEGIN
    END;
    PROCEDURE agent_update_lmit (
    BEGIN
    END;
    PROCEDURE agent_get_
    BEGIN
    END;
    PROCEDURE agent_pass_change (
    BEGIN
    END;
    PROCEDURE agent_account_freez (
    BEGIN
    END;
CREATE OR REPLACE PACKAGE WMS_AGENT_PKG AS
 FUNCTION update_agent_lmt (
    FUNCTION get_sub_agent_lst (
    FUNCTION chk_agent_parent (
    FUNCTION inst_agent (
    FUNCTION get_agent_parent (
    FUNCTION comm_proces (
    FUNCTION wms_inst_agent (
CREATE OR REPLACE PACKAGE BODY WMS_AGENT_PKG AS
    FUNCTION get_trns_cnt (
    BEGIN
    END;
    FUNCTION get_agent_comm (
    BEGIN
        BEGIN
            insert into wms_trace values (99,'111 p_sou_agent_class' || p_sou_agent_class  || ' p_dist_agent_class' || p_dist_agent_class || 'p_srv_no' ||p_srv_no); commit;
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_sub_agent_lst (
    BEGIN
    END;
    PROCEDURE get_sub_agent_data (
    BEGIN
    END;
    FUNCTION chk_agent_parent (
    BEGIN
    EXCEPTION
    END;
    FUNCTION get_agent_parent (
    BEGIN
    EXCEPTION
    END;
    FUNCTION comm_proces (
    BEGIN
                insert into wms_trace values (99,'v_agent_comm.comm_typ ' || v_agent
    END;
    FUNCTION update_agent_lmt (
    BEGIN
        EXECUTE IMMEDIATE 'update wms_agent_lmt set DALY_LMT='
                          || ' where SUPR_AGENT_C_CODE='
    EXCEPTION
    END;
    FUNCTION inst_agent (
    BEGIN
        BEGIN
        EXCEPTION
        END;
               BEGIN
                     SELECT       
                            WHERE mobile_no  = CMOBILE;
              Exception 
              End;
               BEGIN
                     SELECT       
                            WHERE c_code = CustCode;
              Exception 
              End;
               BEGIN
                     SELECT       
                            WHERE c_code = CustCode;
              Exception 
              End;
              Begin  
                   SELECT        COUNT(C_CODE)
                   FROM          CUSTOMER
                   WHERE INACTIVE = 0 AND bLK_LST = 0 AND  C_MOBILE = BYMOBILE;
              Exception 
               End;
              Begin  
                   SELECT        C_CODE
                   FROM          CUSTOMER
                   WHERE C_MOBILE = BYMOBILE;
              Exception 
               End;
                        SELECT FROM WMS PAR TO GETL ALL DATA 
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
                BEGIN
                EXCEPTION
                END;
                BEGIN
                EXCEPTION
                END;
                BEGIN
                EXCEPTION
                END;
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer_curr (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO wms_customer_sub (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO wms_agent_sub (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO wms_agent_lmt (
        EXCEPTION
        END;
        BEGIN
            UPDATE wms_otp
        EXCEPTION
        END;
                                      BEGIN
                                     insert into WMS_CUST_LMT_DTL
                select  CCODE,
                                from  WMS_LMT_SER
                                where FROM_C_GROUP_CODE = GROUP_CODE ;
                                  Exception When Others Then
    END;
    FUNCTION wms_inst_agent (
    BEGIN
        BEGIN
        EXCEPTION
        END;
               BEGIN
                     SELECT       
                            WHERE mobile_no  = CMOBILE;
              Exception 
              End;
               BEGIN
                     SELECT       
                            WHERE c_code = CustCode;
              Exception 
              End;
               BEGIN
                     SELECT       
                            WHERE c_code = CustCode;
              Exception 
              End;
              Begin  
                   SELECT        COUNT(C_CODE)
                   FROM          CUSTOMER
                   WHERE INACTIVE = 0 AND bLK_LST = 0 AND  C_MOBILE = BYMOBILE;
              Exception 
               End;
              Begin  
                   SELECT        C_CODE
                   FROM          CUSTOMER
                   WHERE C_MOBILE = BYMOBILE;
              Exception 
               End;
                        SELECT FROM WMS PAR TO GETL ALL DATA 
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer_curr (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO wms_customer_sub (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO wms_agent_sub (
        EXCEPTION
        END;
        BEGIN
            UPDATE wms_otp
        EXCEPTION
        END;
                                      BEGIN
                                     insert into WMS_CUST_LMT_DTL
                select  CCODE,
                                from  WMS_LMT_SER
                                where FROM_C_GROUP_CODE = GROUP_CODE ;
                                  Exception When Others Then
    END;
CREATE OR REPLACE PACKAGE WMS_CORE_PKG AS
   MONEY_TRSFER_UPDATE      CONSTANT VARCHAR (5) := 'L803';
   PROCEDURE WMS_NAcc_Process (
   PROCEDURE WMS_Acc_Process (P_ACC_Obj    IN     ACC_OBJ,
      PROCEDURE wms_rep_process (
   PROCEDURE WMS_OTP_PROCESS (P_NACC_Obj   IN     NON_ACC_OBJ,
CREATE OR REPLACE PACKAGE BODY WMS_CORE_PKG AS
       2.0         31072019        Arafat Moh          2. update New Code
       3.0         28082019        Arafat Moh          2. update New Code
       4.0         23092019        Arafat              2 Update OBJ
       6.0        30122019        Arafat              2. Update Oracle Error
    PROCEDURE Send_OTP_SMS (P_Mobile   IN     VARCHAR2,
    BEGIN
       SELECT XMLELEMENT ("Data", XMLFOREST (P_OTP "OTP_Code")) AS ret
         FROM DUAL;
    END;*/
    PROCEDURE send_sms (
    BEGIN
      -- get message struct from databases
    END;
    FUNCTION wms_money_trsfer (
    BEGIN
    EXCEPTION
    END;
    FUNCTION wms_money_trsfer_cash (
    BEGIN
        BEGIN
            UPDATE wms_transfer
        EXCEPTION
        END;
    END;
    FUNCTION wms_money_trsfer_update (
    BEGIN
      -- add hear if update_cnt is update many time , we have to stop is no more update
    END;
    FUNCTION wms_money_trsfer_delete (
    BEGIN
    EXCEPTION
    END;
    FUNCTION wms_otp_proc (
    BEGIN
    END;
    FUNCTION wms_pass_reset (
    BEGIN
    END;
    FUNCTION wms_pass_reset_req (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION wms_device_reg_req (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION wms_device_reg_com (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION wms_own_reg_com (
    BEGIN
    END;
    FUNCTION wms_payment (
    BEGIN
--        insert into wms_trace values (66,'oper_row no' || oper_row.opr_no );
 -- insert into wms_trace values (66,'oper_code' || oper_row.C_CODE );
 -- insert into wms_trace values (66,'p_amt' ||p_amt);
 --   insert into wms_trace values (66,'p_payno' || p_payno );
    END;
    FUNCTION wms_check_dest (
    BEGIN
    END;
    FUNCTION wms_check_agent (
    BEGIN
    END;
    FUNCTION wms_cashout_take (
    BEGIN
    END;
    FUNCTION wms_cashout_query (
    BEGIN
    END;
    FUNCTION wms_money_trsfer_query (
    BEGIN
    END;
    FUNCTION wms_purchase_query (
    BEGIN
    END;
    FUNCTION wms_resend (
    BEGIN
    END;
    FUNCTION wms_purchase_take (
    BEGIN
    END;
    FUNCTION wms_reg_cust_byagent (
    BEGIN
            BEGIN
            EXCEPTION
            END;
    END;
    FUNCTION wms_agent_new_cust_req (
    BEGIN
                BEGIN
                EXCEPTION
                END;
    END;
    FUNCTION wms_update_agent_limit (
    BEGIN
            BEGIN
            EXCEPTION
            END;
    END;
    FUNCTION wms_agent_reg_req (
    BEGIN
                BEGIN
                EXCEPTION
                END;
    END;
    FUNCTION wms_cust_update_req (
    BEGIN
            BEGIN
            EXCEPTION
            END;
          BEGIN
                         WHERE c_code = V_To_Cust_No and rownum = 1 ;
           Exception
           End;
    END;
    FUNCTION wms_agent_cust_reg_com (
    BEGIN
            BEGIN
            EXCEPTION
            END;
            -- make update in Customer table ;
    END;
    FUNCTION wms_agent_reg_com (
    BEGIN
                BEGIN
                EXCEPTION
                END;
    END;
    FUNCTION wms_agent_new_cust_reg_com (
    BEGIN
                BEGIN
                EXCEPTION
                END;
    END;
    FUNCTION wms_cust_update_com (
    begin
    --insert into wms_trace values (47 , 'p_ser_no =' || p_ser_no ) ; commit;
            BEGIN
            EXCEPTION
            END;
                   BEGIN
                                  WHERE c_code = V_To_Cust_No and rownum = 1 ;
                    Exception
                    End;
              --  insert into wms_trace values (47 , 'ret 22 = ' || ret || 'p_t_mobile' || p_t_mobile || 'p_otp' || p_otp || 'p_ser_no' || p_ser_no || 'p_imei' || p_imei ) ; commit;
 insert into wms_trace values (47 , 'ret 444 =' || ret ) ; commit;
    FUNCTION wms_pass_change (
    BEGIN
    END;
    FUNCTION wms_pin_change (
    BEGIN
    END;
    FUNCTION wms_wallet_unlock_com (
    BEGIN
        UPDATE wms_customer_sub
    EXCEPTION
    END;
    FUNCTION wms_device_reg_req (
    BEGIN
        UPDATE wms_customer_sub
    EXCEPTION
    END;
    FUNCTION wms_pin_change_com (
    BEGIN
    END;
    FUNCTION wms_fees_query (
    BEGIN
    --  insert into wms_trace values (88,'service code RET' || RET  || 'P_Ser_Code' || P_Ser_Code) ; commit;
    END;
    FUNCTION wms_pin_change (
    BEGIN
    END;
    FUNCTION wms_nacc_operation (
    BEGIN
        BEGIN
                WHEN money_trsfer_update THEN
        END;
    END;
    PROCEDURE wms_nacc_process (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
      PROCEDURE wms_rep_process (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
    FUNCTION wms_acc_operation (
    BEGIN
        BEGIN
        END;
    END;
    PROCEDURE wms_acc_process (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
    FUNCTION wms_otp_operation (
    BEGIN
        BEGIN
        END;
    END;
    PROCEDURE wms_otp_process (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
CREATE OR REPLACE PACKAGE WMS_DOC_SQ as
 FUNCTION Get_Doc_Typ_Serial (P_DOC_TYP In NUMBER) RETURN NUMBER ;
 FUNCTION Get_Doc_No (   P_Doc_Typ      In Number,
 FUNCTION Get_Doc_Srl (  P_Doc_Typ     In Number,
CREATE OR REPLACE PACKAGE BODY WMS_DOC_SQ as
 FUNCTION Get_Doc_Typ_Serial (P_DOC_TYP In NUMBER) RETURN NUMBER IS
 BEGIN
      EXECUTE IMMEDIATE ('SELECT '||V_FLD_NM||' FROM HRS_PARA ') INTO V_DOC_SERIAL;
      EXECUTE IMMEDIATE ('SELECT '||V_FLD_NM||' FROM HRS_PARA_AFFRS ') INTO V_DOC_SERIAL;
  EXCEPTION WHEN OTHERS THEN
FUNCTION Get_Doc_No (   P_Doc_Typ      In Number,
      Raise_Application_Error (-20001,'Error When Select Serial Typ For Document , '||Sqlerrm); 
      Select nvl(Max(doc_no),0) + 1 Into V_Doc_No From wms_histry
       where Brn_No = P_Brn_No and  doc_ty = P_doc_typ ;
Exception  
FUNCTION Get_Doc_Srl (  P_Doc_Typ      In Number,
      Raise_Application_Error (-20001,'Error When Select Serial Typ For Document , '||Sqlerrm); 
Exception  
   Raise_Application_Error (-20002,'Error When Select Serial Typ For Document , '||Sqlerrm);
CREATE OR REPLACE PACKAGE WMS_ERROR_PKG AS
    FUNCTION GET_ERROR_NA (ERROR_NO IN NUMBER , LANG_NO IN NUMBER  ) RETURN VARCHAR2;
CREATE OR REPLACE PACKAGE BODY WMS_ERROR_PKG AS
    FUNCTION get_error_na (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
CREATE OR REPLACE PACKAGE WMS_GEN_PKG AS
    FUNCTION chk_srv (
    FUNCTION get_otp_exp (
    PROCEDURE otp_timout;
    FUNCTION get_notifystat (
 FUNCTION hold_amt (
  FUNCTION relase_amt (
    FUNCTION get_hold_amt (
    FUNCTION get_class_sms (
    FUNCTION get_sms_msg (
    FUNCTION get_notfy_msg (
    FUNCTION upd_imei (
    FUNCTION chk_cust_otp (
    FUNCTION inqury_money_trsfer_d (
    FUNCTION find_otp_t_mob (
    FUNCTION find_resend (
    FUNCTION insrt_cust_reg (
    FUNCTION chk_cust_otp_reg (
    PROCEDURE w_tr (
    FUNCTION get_par (
    FUNCTION get_class (
   /* FUNCTION load_buffer (
    FUNCTION find_money_trsfer (
    FUNCTION insrt_money_trsfer (
    FUNCTION get_wallet_lock (
    FUNCTION inqury_money_trsfer (
    FUNCTION inqury_money_trsferxml (
    FUNCTION get_inqury_tranid (
    FUNCTION get_shortstat (
    FUNCTION upd_money_trsfer (
    FUNCTION del_money_trsfer (
    FUNCTION find_otp_trns_new (
    FUNCTION get_resp RETURN XMLTYPE;
    FUNCTION insrt_otp (
    FUNCTION chk_otp (
    FUNCTION insrt_evelation (
    FUNCTION chk_data (
--Function Check_Ext_Cust(P_Mobile in number ,P_IMEI in varchar2 default null , P_T_C_Code OUT customer.c_code%TYPE  ) 
    FUNCTION check_cust (
    FUNCTION chk_dest_cust (
    PROCEDURE get_recipient_nm (
    FUNCTION set_pass (
    FUNCTION set_account_lock (
    FUNCTION set_wallet_lock (
    FUNCTION set_wallet_unlock (
    FUNCTION set_notfy (
    FUNCTION get_loc (p_lang in number )  RETURN XMLTYPE;
    FUNCTION set_auth_ty (
    FUNCTION set_pin (
    FUNCTION find_otp_trns (
    FUNCTION find_otp_com (
    FUNCTION find_otp_wait_agent (
 PROCEDURE get_account_nm (
    FUNCTION chk_srv_group (
    FUNCTION upd_class (
    FUNCTION upd_cust_data (
    FUNCTION set_inactive (
    FUNCTION get_balance (
    FUNCTION set_account_freez (
    FUNCTION set_newpass (
    FUNCTION get_cty RETURN XMLTYPE;
    FUNCTION get_prov RETURN XMLTYPE;
    FUNCTION get_srv_nm (
    FUNCTION get_srv_nm_by_no (
    FUNCTION chk_ext_agent (
    FUNCTION cancl_old_otp (
    FUNCTION get_shortstat_date (
    FUNCTION get_code_ty (
    FUNCTION get_cntry (
    FUNCTION get_commstat_date (
    FUNCTION chk_cust_pin (
    FUNCTION inst_cust (
    FUNCTION find_otp_wait (
    FUNCTION inst_new_cust (
     procedure Batch_Proc (
CREATE OR REPLACE PACKAGE BODY WMS_GEN_PKG AS
    PROCEDURE w_tr (
    BEGIN
        INSERT INTO wms_trace VALUES (
    END;
    FUNCTION get_par (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_class (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_class_sms (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_sms_msg (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_notfy_msg (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION chk_acc_blk (
    BEGIN
    END;
    FUNCTION chk_mobile_blk (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_srv_nm_by_no (
    BEGIN
    EXCEPTION
    END;
    FUNCTION get_srv_nm (
    BEGIN
    EXCEPTION
    END;
    FUNCTION chk_srv (
    BEGIN
    EXCEPTION
    END;
    FUNCTION chk_srv_group (
    BEGIN
    EXCEPTION
    END;
    FUNCTION chk_mobile_ver (
    BEGIN
    EXCEPTION
    END;
    FUNCTION chk_ora_auth (
    BEGIN
    EXCEPTION
    END;
    FUNCTION chk_ora_priv (
    BEGIN
    EXCEPTION
    END;
    FUNCTION chk_use_wallet (
    BEGIN
    END;
    FUNCTION chk_pas_try (
    BEGIN
        BEGIN
                UPDATE wms_customer_sub
                UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
 FUNCTION reset_pas_try (
    BEGIN
        BEGIN
                UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION chk_pin_try (
    BEGIN
        BEGIN
                UPDATE wms_customer_sub
                UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION chk_auth (
    BEGIN
    END;
    FUNCTION chk_pin (
    BEGIN
    END;
    FUNCTION chk_new_imei (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION chk_imei (
    BEGIN
    END;
    FUNCTION chk_active (
    BEGIN
    END;
    FUNCTION chk_mobile (
    BEGIN
    END;
    FUNCTION insrt_otp (
    BEGIN
        BEGIN
            UPDATE wms_otp
            INSERT INTO wms_otp (
        EXCEPTION
        END;
    END;
    FUNCTION upd_imei (
    BEGIN
        BEGIN
            UPDATE wms_otp
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION insrt_evelation (
    BEGIN
        BEGIN
      -- select from 
                INSERT INTO wms_evelation (
        EXCEPTION
        END;
    END;
    FUNCTION upd_class (
    BEGIN
        UPDATE customer
        UPDATE wms_customer_sub
    EXCEPTION
    END;
    FUNCTION upd_cust_data (
    BEGIN
            'Update customer set typ_crd ='
         || ''' where C_code ='
        UPDATE customer
        UPDATE wms_customer_sub
    EXCEPTION
    END;
    FUNCTION upd_money_trsfer (
    BEGIN
        UPDATE wms_transfer
            is_update = 1,
    EXCEPTION
    END;
    FUNCTION del_money_trsfer (
    BEGIN
        UPDATE wms_transfer
    EXCEPTION
    END;
    FUNCTION insrt_money_trsfer (
    BEGIN
        BEGIN
            INSERT INTO wms_transfer (
        EXCEPTION
        END;
    END;
    FUNCTION chk_otp (
    BEGIN
        BEGIN
select * from wms_trace where no = 447
 SELECT *           FROM WMS_OTP
          WHERE     mobile_no = 654
--insert into wms_trace values( 447,'P_Mobile=' || P_Mobile || '=P_IMEI=' || P_IMEI || '=P_OTP='|| P_OTP || '=P_Ser_no' || P_Ser_no) ;commit;
        EXCEPTION
        END;
    END;
    FUNCTION cancl_old_otp (
    BEGIN
        UPDATE wms_trans_online
    EXCEPTION
    END;
    FUNCTION set_inactive (
    BEGIN
        BEGIN
            UPDATE customer
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION set_pass (
    BEGIN
        BEGIN
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION set_pin (
    BEGIN
        BEGIN
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION set_account_lock (
    BEGIN
        BEGIN
            UPDATE customer
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION set_account_freez (
    BEGIN
        BEGIN
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION set_newpass (
    BEGIN
        BEGIN
            UPDATE wms_customer_sub
        UPDATE wms_OTP
          WHERE     mobile_no = P_Mobile
        EXCEPTION
        END;
    END;
    FUNCTION set_wallet_lock (
    BEGIN
        BEGIN
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION set_wallet_unlock (
    BEGIN
        BEGIN
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION get_wallet_lock (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION set_notfy (
    BEGIN
        BEGIN
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION set_auth_ty (
    BEGIN
        BEGIN
            UPDATE wms_customer_sub
        EXCEPTION
        END;
    END;
    FUNCTION get_shortstat (
    BEGIN
        BEGIN
                                       ORDER BY
        EXCEPTION
        END;
    END;
    FUNCTION get_notifystat (
    BEGIN
        BEGIN
                               ORDER BY
   UPDATE wms_notfy
        EXCEPTION
        END;
    END;
    FUNCTION get_shortstat_date (
    BEGIN
        BEGIN
         OPEN resultset FOR  select * from (
 SELECT /*+ first_rows(25) */
                                            (order by post_date) rn
                                       ORDER BY
WHERE rn >= p_fr
                                       ORDER BY
        EXCEPTION
        END;
    END;
    FUNCTION get_otp_exp (
    BEGIN
--   SELECT (to_date('10102020 23:59:00' , 'ddmmyyyy HH24:MI:SS')  - to_date('10102010 15:10:00' , 'ddmmyyyy HH24:MI:SS')) * 24 * 60 AS minutesBetween from dual ;
    END;
    PROCEDURE otp_timout IS
    BEGIN
        BEGIN
            UPDATE wms_trans_online
       where    ( ( SYSDATE - date_IN ) * 24 * 60 ) > 5 ;
        EXCEPTION
        END;
    END;
    FUNCTION get_commstat_date (
    BEGIN
       --     insert into wms_trace values (66,'p_c_code' || p_c_code || 'p_fd' || p_fd || 'p_fr' || p_fr || 'p_lr' || p_lr); commit;
        BEGIN
                          select * from (   SELECT
                          row_number() over (order by post_date) rn
                                       WHERE     NVL (Ac_Code_Dtl, 0) = p_c_code     --'120100002'
                                       ORDER BY
                                           WHERE rn >= p_fr
        EXCEPTION
        END;
    END;
    FUNCTION get_code_ty (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_cntry (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION insrt_cust_reg (
    BEGIN
        BEGIN
            UPDATE wms_otp
--select * from customer where C_MOBILE='100' ;
            INSERT INTO wms_otp (
        EXCEPTION
        END;
    END;
 FUNCTION hold_amt (
    BEGIN
       BEGIN
            INSERT INTO wms_hold (
        EXCEPTION
        END;
    END;
 FUNCTION relase_amt (
    BEGIN
       BEGIN
       where   doc_srl  = p_doc_srl  ;
        EXCEPTION
        END;
    END;
     FUNCTION get_hold_amt (
    BEGIN
       BEGIN
       select sum(amt) into v_sumamt from wms_hold 
       where mobile_no = p_mobile_no and c_code = p_c_code ;
        EXCEPTION
        END;
    END;
 FUNCTION chk_cust_otp_reg (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    PROCEDURE get_account_nm (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    PROCEDURE get_recipient_nm (
    BEGIN
         BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION g
    BEGIN
    END;
    FUNCTION find_money_trsfer (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION inqury_money_trsfer (
    BEGIN
        BEGIN
                AND ROWNUM = 1; -- we can add hear if you want to update one time only 
        EXCEPTION
        END;
    END;
    FUNCTION inqury_money_trsfer_d (
    BEGIN
        BEGIN
                AND ROWNUM = 1; -- we can add hear if you want to update one time only 
        EXCEPTION
        END;
    END;
    FUNCTION inqury_money_trsferxml (
    BEGIN
      BEGIN
                    SELECT 1 into code 
        EXCEPTION
        END;
      BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_inqury_tranid (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_loc (p_lang in number )  RETURN XMLTYPE IS
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_resp RETURN XMLTYPE IS
    BEGIN
        BEGIN
                               ORDER BY
        EXCEPTION
        END;
    END;
    FUNCTION get_cty RETURN XMLTYPE IS
    BEGIN
        BEGIN
                               ORDER BY
        EXCEPTION
        END;
    END;
    FUNCTION get_prov RETURN XMLTYPE IS
    BEGIN
        BEGIN
                               ORDER BY
        EXCEPTION
        END;
    END;
    FUNCTION get_location1 (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION load_data_row (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION chk_data (
        excep EXCEPTION;
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION chk_cust_pin (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
   FUNCTION Check_Data_New (F_OnxUser     IN     VARCHAR2,
      EXCEP       EXCEPTION;
   BEGIN
      BEGIN
      EXCEPTION
      END;
   END;
    FUNCTION chk_ext_cust (
    BEGIN
    END;
    FUNCTION chk_ext_agent (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION check_cust (
    BEGIN
    END;
    FUNCTION chk_dest_cust (
    BEGIN
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
    END;
  FUNCTION chk_cust_otp (
    BEGIN
        BEGIN
        EXCEPTION
        END;
            BEGIN
            EXCEPTION
            END;
            BEGIN
            EXCEPTION
            END;
    END;
    FUNCTION chk_dest_reg (
    BEGIN
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION find_otp_trns (
    BEGIN
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION find_otp_trns_new (
    BEGIN
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION find_otp_t_mob (
    BEGIN
        BEGIN
         insert into wms_trace values (47 , 'ret srvno =' || srvno || 'p_c_code' || p_c_code  || 'p_t_mobile' || p_t_mobile || 'p_otp' || p_otp) ; commit;
        EXCEPTION
        END;
    END;
    FUNCTION find_resend (
    BEGIN
    EXCEPTION
    END;
    FUNCTION find_otp_wait (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION find_otp_wait_agent (
    BEGIN
        BEGIN
          insert into wms_trace values (88 ,'p_srv_no= ' || p_srv_no || 'p_t_c_code' || p_t_c_code || ' p_otp'|| p_otp ) ; commit;
        EXCEPTION
        END;
    END;
        function Reset_PINS (
    BEGIN
        BEGIN
       -- insert into wms_trace values(47,'p_frm_no' || p_fld_no ); commit;-- || 'v_pin' || '55'  || 'p_c_code' || p_c_code || 'p_mobile' || p_mobile ); commit;
        update wms_customer_sub set user_pin = v_pin  , pin_chng_date = sysdate
        where c_code = p_c_code and mobile_no = p_mobile and user_wallet = 1 and active = 1  ;
        update WMS_HISTRY set batch_st = 1 , batch_date = sysdate
        where  DOC_N
        --select * from wms_customer_sub ;
        EXCEPTION
        END;
    END;
    procedure Batch_Proc (
        Cursor Cur_histry is select * from WMS_HISTRY where approved = 1 and batch_st =0 ;
    BEGIN
    --select * f
rom WMS_HISTRY where approved = 1 ;
    -- insert into wms_trace values(47,'p_typ_no' || p_typ_no ) ; commit; --|| 'v_pin' || v_pin  || 'p_c_code' || p_c_code || 'p_mobile' || p_mobile ); commit;
       -- BEGIN
       /* EXCEPTION
        END;*/
    END;
    FUNCTION find_otp_com (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION inst_cust (
    BEGIN
        BEGIN
        EXCEPTION
        END;
               BEGIN
                     SELECT       
                            WHERE mobile_no  = CMOBILE;
              Exception 
              End;
               BEGIN
                     SELECT       
                            WHERE c_code = CustCode;
              Exception 
              End;
               BEGIN
                     SELECT       
                            WHERE c_code = CustCode;
              Exception 
              End;
              Begin  
                   SELECT        COUNT(C_CODE)
                   FROM          CUSTOMER
                   WHERE INACTIVE = 0 AND bLK_LST = 0 AND  C_MOBILE = BYMOBILE;
              Exception 
               End;
              Begin  
                   SELECT        C_CODE
                   FROM          CUSTOMER
                   WHERE C_MOBILE = BYMOBILE;
              Exception 
               End;
                        SELECT FROM WMS PAR TO GETL ALL DATA 
        BEGIN
        EXCEPTION
        END;
               BEGIN
                     SELECT       
              Exception 
              End;*/
                          Begin  
                            SELECT        NVL (  MAX (  TO_NUMBER (C_CODE) ), 0) + 1
                            FROM          CUSTOMER;
                          Exception 
                          End;
                          Begin  
                            SELECT        NVL (  MAX (  TO_NUMBER (C_CODE) ), GROUP_CODE|| '00000' ) + 1
                            FROM          CUSTOMER
                            WHERE         CUSTOMER.C_GROUP_CODE = GROUP_CODE;
                          Exception 
                          End;  
        BEGIN
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer_curr (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO wms_customer_sub (
        EXCEPTION
        END;
        UPDATE wms_otp
                                      BEGIN
                                     insert into WMS_CUST_LMT_DTL
                select  CCODE,
                                from  WMS_LMT_SER
                                where FROM_C_GROUP_CODE = GROUP_CODE ;
                                  Exception When Others Then
    END;
    FUNCTION inst_new_cust (
    BEGIN
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer_curr (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO wms_customer_sub (
        EXCEPTION
        END;
        UPDATE wms_otp
    END;
    FUNCTION inst_cust2 (
    BEGIN
        BEGIN
        EXCEPTION
        END;
               BEGIN
                     SELECT       
                            WHERE mobile_no  = CMOBILE;
              Exception 
              End;
               BEGIN
                     SELECT       
                            WHERE c_code = CustCode;
              Exception 
              End;
               BEGIN
                     SELECT       
                            WHERE c_code = CustCode;
              Exception 
              End;
              Begin  
                   SELECT        COUNT(C_CODE)
                   FROM          CUSTOMER
                   WHERE INACTIVE = 0 AND bLK_LST = 0 AND  C_MOBILE = BYMOBILE;
              Exception 
               End;
              Begin  
                   SELECT        C_CODE
                   FROM          CUSTOMER
                   WHERE C_MOBILE = BYMOBILE;
              Exception 
               End;
                        SELECT FROM WMS PAR TO GETL ALL DATA 
        BEGIN
        EXCEPTION
        END;
               BEGIN
                     SELECT       
              Exception 
              End;*/
                          Begin  
                            SELECT        NVL (  MAX (  TO_NUMBER (C_CODE) ), 0) + 1
                            FROM          CUSTOMER;
                          Exception 
                          End;
                          Begin  
                            SELECT        NVL (  MAX (  TO_NUMBER (C_CODE) ), GROUP_CODE|| '00000' ) + 1
                            FROM          CUSTOMER
                            WHERE         CUSTOMER.C_GROUP_CODE = GROUP_CODE;
                          Exception 
                          End;  
        BEGIN
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO customer_curr (
        EXCEPTION
        END;
        BEGIN
            INSERT INTO wms_customer_sub (
        EXCEPTION
        END;
        UPDATE wms_otp
                                      BEGIN
                                     insert into WMS_CUST_LMT_DTL
                select  CCODE,
                                from  WMS_LMT_SER
                                where FROM_C_GROUP_CODE = GROUP_CODE ;
                                  Exception When Others Then
    END;
select * from customer_group
        begin
          select C_A_CODE
            from CUSTOMER_GROUP
            where c_group_code = v_c_group_code;
        exception when others then
        raise_application_error(-20019,'error when get c_a_code from CUSTOMER_GROUP  :  '|| sqlerrm);
        end;
FUNCTION  Get_TAX_ARTCL (  P_TAX_No  IN HRS_TAX_COD_MST.TAX_No%TYPE , P_Emp_No  IN S_EMP.EMP_NO%TYPE DEFAULT NULL)    RETURN VARCHAR2 Is
  SELECT ARTCL_NO
    FROM HRS_TAX_COD_MST
   WHERE TAX_NO = P_TAX_NO
EXCEPTION
CREATE OR REPLACE PACKAGE WMS_LMT_PKG AS
   FUNCTION Check_Main_Service (
         FUNCTION Check_Service_Group (
   FUNCTION Get_Balance (P_C_Code IN customer.c_code%TYPE , P_BalTp in number default 3 )
    FUNCTION chk_lmt (
    FUNCTION chk_fees (
CREATE OR REPLACE PACKAGE BODY WMS_LMT_PKG AS
    FUNCTION chk_srv_man (
    BEGIN
    EXCEPTION
    END;
    FUNCTION chk_srv_group (
    BEGIN
    EXCEPTION
    END;
    FUNCTION get_balance (
    BEGIN
 --select trunc(sysdate, 'YYYY') from dual;
select GET_BL_Ac_Dt_Fnc( P_loc_cur => YS_GEN_PKG.GET_LOCAL_CUR , P_a_code => '120100002' ,  P_acy => Ias_Gen_Pkg.Get_Local_Cur
                    P_Td => to_date('19/08/2019','dd/mm/yyyy')) as m from dual;
select YS_GEN_PKG.GET_LOCAL_CUR from dual;
  */  /*  select Ys_Get_Blnc_Ac_Dtl_Fnc(P_A_CODE => '120100002' , P_DOC_POST => 1 , P_LOC_AMT => 0) from dual;
    END;
    FUNCTION get_srv_cnt (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    EXCEPTION
    END;
    FUNCTION get_srv_balance (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    EXCEPTION
    END;
    FUNCTION chk_group_lmt (
        excep EXCEPTION;
    BEGIN
        BEGIN
        EXCEPTION
        END;
    EXCEPTION
    END;
    FUNCTION chk_srv_lmt (
        excep EXCEPTION;
    BEGIN
        BEGIN
   EXCEPTION
        END;
    EXCEPTION
    END;
    FUNCTION chk_lmt (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
    FUNCTION get_fee_no (
    BEGIN
    EXCEPTION
    END;
    FUNCTION get_fee_dtl (
        excep EXCEPTION;
    BEGIN
        BEGIN
        EXCEPTION
        END;
            BEGIN
            EXCEPTION
            END;
    END;
    FUNCTION chk_fees (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
CREATE OR REPLACE PACKAGE WMS_ONLINE_PKG AS
procedure Branch_Location ( OnxUser in varchar2 , UserCode in varchar2 , MobileVerion in varchar2 , UserIMEI in varchar2 ,
procedure  Get_Resp ( code in varchar2 ,Error_No out Number , Error_Na out varchar2 ) ;
CREATE OR REPLACE PACKAGE BODY WMS_ONLINE_PKG AS
        2.0          05082019        Arafat Moh        1. UPDATE ALL  this package.
    PROCEDURE branch_location (
    BEGIN
    END;
    PROCEDURE get_resp (
    BEGIN
    END;
    PROCEDURE complete_own_register (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
    PROCEDURE cust_reg (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
    PROCEDURE cust_reset_pass (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
CREATE OR REPLACE PACKAGE WMS_ONLINE_PKG_NEW AS
    PROCEDURE login_customer (
    PROCEDURE cust_pass_change (
    PROCEDURE cust_account_lock (
    PROCEDURE cust_wallet_lock (
    PROCEDURE device_register_com (
    PROCEDURE cust_trans (
    PROCEDURE cust_pin_change_req (
    PROCEDURE cust_pin_change_com (
    PROCEDURE cust_money_trsfer_wait (
    PROCEDURE cust_money_trsfer (
    PROCEDURE device_register_req (
    PROCEDURE get_resp (
    PROCEDURE cust_purchase (
    PROCEDURE cust_noitify_lang (
    PROCEDURE branch_location (
    PROCEDURE cust_auth_type (
    PROCEDURE cust_balance (
    PROCEDURE cust_shortstat (
    PROCEDURE cust_notifystat (
    PROCEDURE cust_register_req (
    PROCEDURE cust_register_com (
    PROCEDURE cust_payment (
    PROCEDURE cust_pass_reset_com (
    PROCEDURE cust_pass_reset_req (
    PROCEDURE cust_cashout (
    PROCEDURE cust_money_trsfer_update (
    PROCEDURE cust_resend_otp (
    PROCEDURE cust_money_trsfer_delete (
    PROCEDURE cust_wallet_unlock_req (
    PROCEDURE query_fees (
    PROCEDURE cust_wallet_unlock_com (
    PROCEDURE cust_evelation (
CREATE OR REPLACE PACKAGE BODY WMS_ONLINE_PKG_NEW AS
        2.0          05082019        Arafat Moh        1. UPDATE ALL  this package.
    PROCEDURE login_customer (
    BEGIN
    END;
    PROCEDURE cust_trans (
    BEGIN
    END;
    PROCEDURE cust_money_trsfer (
    BEGIN
    END;
    PROCEDURE cust_money_trsfer_update (
    BEGIN
    END;
    PROCEDURE cust_money_trsfer_delete (
    BEGIN
    END;
    PROCEDURE cust_balance (
    BEGIN
    END;
    PROCEDURE cust_shortstat (
    BEGIN
    END;
    PROCEDURE Cust_NotifyStat (
    BEGIN
    END;
    PROCEDURE cust_pass_change (
    BEGIN
    END;
    PROCEDURE cust_pin_change_req (
    BEGIN
    END;
    PROCEDURE cust_pin_change_com (
    BEGIN
    END;
    PROCEDURE cust_account_lock (
    BEGIN
    END;
    PROCEDURE cust_wallet_lock (
    BEGIN
    END;
    PROCEDURE cust_wallet_unlock_req (
    BEGIN
    END;
    PROCEDURE cust_resend_otp (
    BEGIN
    END;
   PROCEDURE cust_wallet_unlock_com (
    BEGIN
    END;
    PROCEDURE cust_noitify_lang (
    BEGIN
    END;
    PROCEDURE cust_auth_type (
    BEGIN
    END;
    PROCEDURE cust_evelation (
    BEGIN
    END;
    PROCEDURE cust_pass_reset_com (
    BEGIN
    END;
    PROCEDURE cust_payment (
    BEGIN
    END;
    PROCEDURE cust_purchase (
    BEGIN
    END;
    PROCEDURE cust_cashout (
    BEGIN
    END;
    PROCEDURE cust_money_trsfer_wait (
    BEGIN
    END;
    PROCEDURE query_fees (
    BEGIN
    END;
    PROCEDURE device_register_req (
    BEGIN
    END;
    PROCEDURE device_register_com (
    BEGIN
    END;
    PROCEDURE cust_register_req (
        excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
    PROCEDURE cust_register_com (
       excep EXCEPTION;
    BEGIN
    EXCEPTION
    END;
    PROCEDURE cust_pass_reset_req (
    BEGIN
    END;
    PROCEDURE branch_location (
    BEGIN
    END;
    PROCEDURE get_resp (
    BEGIN
    END;
CREATE OR REPLACE PACKAGE WMS_OPER_PKG AS
    FUNCTION chk_oper_len (
    FUNCTION chk_oper_num (
    FUNCTION chk_oper (
    FUNCTION chk_oper_amt_min (
    FUNCTION chk_oper_amt_max (
    FUNCTION get_operator RETURN XMLTYPE;
    FUNCTION get_oper_ccode (
CREATE OR REPLACE PACKAGE BODY WMS_OPER_PKG AS
    FUNCTION chk_oper (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION get_oper_ccode (
    BEGIN
    END;
    FUNCTION chk_oper_num (
    BEGIN
    END;
    FUNCTION chk_oper_len (
    BEGIN
    END;
    FUNCTION chk_oper_amt_max (
    BEGIN
    END;
    FUNCTION chk_oper_amt_min (
    BEGIN
    END;
    PROCEDURE get_operator1 (
    BEGIN
    EXCEPTION
    END;
    FUNCTION get_operator RETURN XMLTYPE IS
    BEGIN
    EXCEPTION
    END;
CREATE OR REPLACE PACKAGE WMS_POSTING_PKG_NEW AS
    PROCEDURE del_doc_prc (
    PROCEDURE insrt_doc_in_pst_prc (
    FUNCTION get_pst_brn_no (
CREATE OR REPLACE PACKAGE BODY WMS_POSTING_PKG_NEW
   PROCEDURE get_prmtr_prc (p_lng_no   IN PLS_INTEGER DEFAULT 1,
   BEGIN
      BEGIN
         SELECT cur_code
           FROM ex_rate
          WHERE l_f = 1;
      EXCEPTION
               'Error When select Local Cur. from Ex_Rate , ' || SQLERRM);
      END;
      BEGIN
         SELECT NVL (use_audit_doc, 0) INTO g_use_audit_doc FROM ias_para_gen;
      EXCEPTION
               'Error When select Parameters from Ias_Para_Gen , ' || SQLERRM);
      END;
   EXCEPTION
            'Error When select Gnr_Prmtr , ' || SQLERRM);
   FUNCTION chk_exist_doc_fnc (p_doc_typ   IN ias_post_mst.doc_type%TYPE,
   BEGIN
      SELECT 1
        FROM ias_post_mst
       WHERE doc_type = p_doc_typ AND doc_ser = p_doc_srl AND ROWNUM <= 1;
   EXCEPTION
            'Error When Select IAS_POST_MST ' || SQLERRM);
   FUNCTION get_pms_vat_accnts (p_brn_no IN s_brn.brn_no%TYPE)
   BEGIN
      SELECT vat_ac
        FROM interface_acc
       WHERE brn_no = p_brn_no;
   EXCEPTION
            'Error When Select GET_PMS_VAT_ACCNTS ' || SQLERRM);
   PROCEDURE del_doc_prc (p_doc_typ   IN ias_post_mst.doc_type%TYPE,
   BEGIN
      DELETE FROM ias_post_dtl
            WHERE doc_type = p_doc_typ AND doc_ser = p_doc_srl;
      DELETE FROM ias_post_mst
            WHERE doc_type = p_doc_typ AND doc_ser = p_doc_srl;
   EXCEPTION
   FUNCTION get_pst_brn_no (p_brn_no IN NUMBER, p_doc_brn_no IN NUMBER)
   BEGIN
   EXCEPTION
   PROCEDURE post_trans_trans (    --P_f_doc_no       In NUMBER   Default Null
   BEGIN
      --select * from WMS_TRANS_ONLINE ;
         IN (    SELECT p_doc_type doc_type,
                           --select * from WMS_TRANS_ONLINE
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                   FROM wms_trans_online mv
                  WHERE     NVL (mv.doc_post, 0) = 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mv.Doc_post,0))
             -- And Exists (Select 1 From S_Brn_Usr_Priv
             --                  Where U_Id = V_User_no
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_dat
         THEN                                          -- (Begin Chk Exist) --
          ( Select Dv.ac_code           a_code
           From IAS_EXCH_CUR_Dtl Dv
          Where  Dv.DOC_SRL=M_cv.doc_ser)
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE post_fee (p_f_doc_date   IN DATE DEFAULT NULL,
   BEGIN
      --select * from WMS_TRANS_ONLINE ;
         IN (    SELECT p_doc_type doc_type,
                        --select * from WMS_TRANS_ONLINE
                        -- ( select srv_l_nm from wms_srv_man where srv_no =  Mv.srv_no)  || ' ??? ' || TO_CUST_NM  doc_desc ,
                        --( select srv_l_nm from wms_srv_man where srv_no =  Mv.srv_no)  || ' ?? ' || CUST_NM  doc_desc1 ,
                   FROM wms_trans_online mv
                  WHERE     NVL (mv.doc_post, 0) = 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mv.Doc_post,0))
             -- And Exists (Select 1 From S_Brn_Usr_Priv
             --                  Where U_Id = V_User_no
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_date)
         THEN                                          -- (Begin Chk Exist) --
          ( Select Dv.ac_code           a_code
           From IAS_EXCH_CUR_Dtl Dv
          Where  Dv.DOC_SRL=M_cv.doc_ser)
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE post_feexs (p_f_doc_date   IN DATE DEFAULT NULL,
   BEGIN
         IN (    SELECT p_doc_type doc_type,
                           --select * from WMS_TRANS_ONLINE
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                   FROM wms_trans_online mv
                  WHERE     NVL (mv.doc_post, 0) = 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mv.Doc_post,0))
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_date)
         THEN                                          -- (Begin Chk Exist) --
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE post_trans_tranfer (  --P_f_doc_no       In NUMBER   Default Null
   BEGIN
      --select * from wms_online_trans ;
         IN (    SELECT 4008 doc_type,
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                   FROM wms_trans_online mv
                  WHERE     NVL (mv.doc_post, 0) = 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mv.Doc_post,0))
             -- And Exists (Select 1 From S_Brn_Usr_Priv
             --                  Where U_Id = V_User_no
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_date)
         --select * from ias_post_dtl  order  by doc_date desc
         THEN                                          -- (Begin Chk Exist) --
          ( Select Dv.ac_code           a_code
           From IAS_EXCH_CUR_Dtl Dv
          Where  Dv.DOC_SRL=M_cv.doc_ser)
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE post_cashout_tranfer ( --P_f_doc_no       In NUMBER   Default Null
   BEGIN
      --select * from wms_online_trans ;
         IN (    SELECT 4009 doc_type,
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                   FROM wms_trans_online mv
                  WHERE     NVL (mv.doc_post, 0) = 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mv.Doc_post,0))
             -- And Exists (Select 1 From S_Brn_Usr_Priv
             --                  Where U_Id = V_User_no
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_date)
         --select * from ias_post_dtl  order  by doc_date desc
         THEN                                          -- (Begin Chk Exist) --
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE post_trans_cashout (  --P_f_doc_no       In NUMBER   Default Null
   BEGIN
      --select * from wms_online_trans ;
         IN (    SELECT 4004 doc_type,
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                   FROM wms_t
                  WHERE     NVL (mv.doc_post, 0) = 0 --Decode(Nvl(P_Post_Type,0),0,0,nvl(Mv.Doc_post,0))
             -- And Exists (Select 1 From S_Brn_Usr_Priv
             --                  Where U_Id = V_User_no
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_date)
         THEN                                          -- (Begin Chk Exist) --
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE post_agent_trans (p_f_doc_date   IN DATE DEFAULT NULL,
   BEGIN
      --select * from WMS_TRANS_ONLINE ;
         IN (    SELECT 4012 doc_type,
                           --select * from WMS_TRANS_ONLINE
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                   FROM wms_trans_online mv
                  WHERE     NVL (mv.doc_post, 0) = 0
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, 
         THEN                                          -- (Begin Chk Exist) --
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE post_sub_agent_trans (p_f_doc_date   IN DATE DEFAULT NULL,
   BEGIN
      --select * from WMS_TRANS_ONLINE ;
         IN (    SELECT 4013 doc_type,
                           --select * from WMS_TRANS_ONLINE
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                   FROM wms_trans_online mv
                  WHERE     NVL (mv.doc_post, 0) = 0
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_date)
         THEN                                          -- (Begin Chk Exist) --
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE post_make_comm (p_f_doc_date   IN DATE DEFAULT NULL,
   BEGIN
      --select * from WMS_TRANS_ONLINE ;
         IN (    SELECT 4011 doc_type,
                           --select * from WMS_TRANS_ONLINE
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
                   FROM wms_trans_online mv
                  WHERE     NVL (mv.doc_post, 0) = 0
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_date)
         THEN                                          -- (Begin Chk Exist) --
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
   PROCEDURE insrt_doc_in_pst_prc (f_doc_date   IN DATE,
   BEGIN
   -- Exception
CREATE OR REPLACE PACKAGE WMS_TOOLS AS
    FUNCTION gen_number RETURN NUMBER;
    FUNCTION gen_uuid RETURN NUMBER;
    FUNCTION gen_pass RETURN VARCHAR2;
    FUNCTION gen_device_token RETURN VARCHAR2;
    FUNCTION insrt_otp (
    FUNCTION chk_otp (
    FUNCTION insrt_otp1 (
    FUNCTION get_rec_no (
    FUNCTION otp_bit (
    FUNCTION sendsms (
    PROCEDURE send_saf_sms (
    FUNCTION des_encrypt (
 PROCEDURE send_saf_sms2 ( p_doc_srl       IN           NUMBER );
CREATE OR REPLACE PACKAGE BODY WMS_TOOLS AS
    FUNCTION gen_number RETURN NUMBER AS
    BEGIN
    END;
    BEGIN
    END;
    FUNCTION gen_pass RETURN VARCHAR2 AS
    BEGIN
    END;
    FUNCTION gen_device_token RETURN VARCHAR2 AS
    BEGIN
        LOOP BEGIN
        EXCEPTION
        END;
    EXCEPTION
    END;
    FUNCTION gen_uuid_fun RETURN VARCHAR2 IS
    BEGIN
    END;
    FUNCTION hash_key (
    BEGIN
    END;
    FUNCTION insrt_otp (
    BEGIN
   --select * from wms_logs
   --delete from wms_logs
       -- EXECUTE IMMEDIATE 'Update WMS_OTP set otp_st = 0 where to_mobile_no =' || tomobileno;
        BEGIN
            UPDATE wms_otp
        EXCEPTION
        END;
        INSERT INTO wms_otp (
    EXCEPTION
    END;
    FUNCTION otp_bit (
    BEGIN
    END;
    FUNCTION des_encrypt (
    BEGIN
   EXCEPTION
    EXCEPTION
    FUNCTION gen_uuid RETURN NUMBER IS
    BEGIN
      -- select substr(to_number(rawtohex(sys_guid()),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') ,2,6)  from dual            
    END;
    FUNCTION chk_otp (
    BEGIN
        BEGIN
        EXCEPTION
        END;
    END;
    FUNCTION insrt_otp1 (
    BEGIN
        UPDATE wms_otp
        INSERT INTO wms_otp (
         EXCEPTION
    END;
    FUNCTION get_rec_no (
    BEGIN
        v_str := 'SELECT NVL (  MAX ( '
                 || '), 0) + 1 from '
    EXCEPTION
    END;
    FUNCTION sendsms (
    BEGIN
        INSERT INTO wms_sms_inbox (
        EXCEPTION
    END;
    PROCEDURE send_saf_sms (
          CURSOR TNofiy (p_srvno number) IS    SELECT msg , LANG_ID
    BEGIN
                        INSERT INTO wms_trace VALUES (
                            INSERT INTO wms_notfy (
    END;
 PROCEDURE send_saf_sms2 (
            msg,resp_ty   FROM   wms_sms_msg
        WHERE  srv_no = i_srv_no AND lang_id = i_
    BEGIN
    begin 
    select * into v_trn_row from wms_trans_online where doc_srl = p_doc_srl and rownum = 1 ;
     EXCEPTION
    end;   
--  select t_mobile  from wms_trans_online ;
                        INSERT INTO wms_trace VALUES (
    END;
  PROCEDURE send_saf_nofy (
          CURSOR TNofiy (p_srvno number) IS    SELECT msg , LANG_ID
    BEGIN
                        INSERT INTO wms_trace VALUES (
                            INSERT INTO wms_notfy (
CREATE OR REPLACE PACKAGE WMS_XML_PKG AS
    FUNCTION create_xml (
    PROCEDURE save_log (
    FUNCTION gen_xml (
    FUNCTION get_news (
    FUNCTION get_company_profile (
    FUNCTION mix_xml (
    PROCEDURE get_srv_lst (
    FUNCTION get_money_trsfer_wait (
    PROCEDURE get_card_type (
CREATE OR REPLACE PACKAGE BODY WMS_XML_PKG AS
    PROCEDURE save_log (
    BEGIN
            BEGIN
            END;
  insert into wms_log_xml (msg) val
  SELECT MAX (NVL (DOC_NO, 0)) + 1
                 FROM WMS_ERROR_TRANS
                WHERE TRNS_YR =  TO_NUMBER (TO_CHAR (SYSDATE, 'yyyy'));
        INSERT INTO wms_trans_error (
  -- insert into wms_trace values(79,str);
      select ExtractValue(column_value,'/TAB/DATE_IN') AS  DATE_IN into ms
      FROM   TABLE(XMLSequence( xmltype(str))) XMLDUMMAY;
      INSERT INTO WMS_LOGS (INACTIVE,c_code,c_a_code,USE_MOBILE_APP,IsAuthCustomer,Check_Data,Balance,MOBILE_VERSION,Mobile_no,
    SELECT 
    FROM   TABLE(XMLSequence( xmltype(str))) XMLDUMMAY;
    EXCEPTION
    END;
    FUNCTION add_log (
    BEGIN
    END;
    FUNCTION create_xml (
    BEGIN
    END;
    FUNCTION gen_xml (
    BEGIN
    EXCEPTION
   select xmlelement("Data",
         as ret into RetResult from dual;
    END;
    FUNCTION mix_xml (
    BEGIN
    EXCEPTION
   select xmlelement("Data",
         as ret into RetResult from dual;
    END;
select * from customer_group
        begin
          select C_A_CODE
            from CUSTOMER_GROUP
            where c_group_code = v_c_group_code;
        exception when others then
        raise_application_error(-20019,'error when get c_a_code from CUSTOMER_GROUP  :  '|| sqlerrm);
        end;
FUNCTION  Get_TAX_ARTCL 
  SELECT ARTCL_NO
    FROM HRS_TAX_COD_MST
   WHERE TAX_NO = P_TAX_NO
EXCEPTION
    PROCEDURE get_srv_lst (
    BEGIN
select service_code "CODE" ,nvl(SERVICE_STATUS,0) "STATUS" from wms_main_ser ma
         EXCEPTION
    END;
    FUNCTION get_money_trsfer_wait (
    BEGIN
                                   ORDER BY
         EXCEPTION
    END;
    FUNCTION get_news (
    BEGIN
        str := 'select count(news_no) FROM wms_news where news_st = 1';
         EXCEPTION
    END;
    FUNCTION get_company_profile (
    BEGIN
    END;
    PROCEDURE get_card_type (
    BEGIN
                           ORDER BY
select service_code "CODE" ,nvl(SERVICE_STATUS,0) "STATUS" from wms_main_ser ma
         EXCEPTION
    END;
CREATE OR REPLACE PACKAGE WMS_INTERFACES AS
FUNCTION Send_SMS(Param1 VARCHAR2, Param2 VARCHAR2, Param3 VARCHAR2) 
    FUNCTION ReadsHttp(Param1 VARCHAR2) 
CREATE OR REPLACE Package WMS_Fetch_Util Is
    PROCEDURE GET_ALL_TRNS (
    End; 
CREATE OR REPLACE PACKAGE BODY WMS_Fetch_Util is
    PROCEDURE GET_ALL_TRNS (
    BEGIN
        BEGIN
            SELECT CUST_D_TYPE, AR_AC_LINK_TYPE INTO V_CUST_D_TYPE, V_AR_AC_LINK_TYPE FROM IAS_PARA_AR;
        EXCEPTION WHEN OTHERS THEN 
        END;
----------------------------------------------------------------------------------- WHERE CLAUSE
                V_Whr :=V_Whr|| '    And Exists (Select 1 From Priv_Acc
                                    Where U_Id =' || V_CURR_USER_NO|| '  
                V_Whr :=V_Whr|| '    And Exists (Select 1 From Ias_Priv_Customer
                                    Where U_Id =' || V_CURR_USER_NO|| '  
            V_Whr :=V_Whr|| '    And Exists (Select 1  From S_Brn_Usr_Priv  
                                Where U_Id =' || V_CURR_USER_NO|| '  
            V_Whr := V_Whr || '  And Exists (Select 1  From WMS_CUSTOMER_SUB  
                                Where nvl(WMS_CUSTOMER_SUB.active,1)='  || V_Act|| '  
            V_Whr :=V_Whr|| '    And Exists (Select 1  From WMS_SRV_MAN  
                                Where WMS_SRV_MAN.SRV_GRP_NO Between ' || V_F_SRV_GRP|| '  and ' || V_T_SRV_GRP ||' 
----------------------------------------------------------------------------------- ORDER BY
        V_ORDRBY                   := '  order by '  || V_ORDRBY || '  '  || NVL ( V_ORDRDIR, ' ' ) || '  ' ;
       -- insert into test(a) values(V_ORDRBY);commit;
            SELECT c_group_code outlst_c_group_code,
            FROM   v_wms_trans_online
            WHERE  1 = 1
    END;
             -- And Exists (Select 1 From S_Brn_Usr_Priv
             --                  Where U_Id = V_User_no
             FOR UPDATE NOWAIT
               ORDER BY mv.doc_no, mv.trns_date)
         --select * from ias_post_dtl  order  by doc_date desc
         THEN                                          -- (Begin Chk Exist) --
WMS_FUNCTION_PKG
/TMP1/WMS_FUNCTION_PKG
"WMS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
CREATE OR REPLACE FUNCTION wms_getbranchfunc (
         (   'SELECT BRN_NO, CMP_NO, CMP_LNAME, CMP_FNAME, BRN_LNAME, BRN_FNAME FROM S_BRN ');
      SELECT COUNT (*)
        FROM TABLE (XMLSEQUENCE (EXTRACT (v_xml_type, '/ROWSET/ROW'))) xmldummay;
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
                           (SELECT srv_l_nm
                              FROM wms_srv_man
                             WHERE srv_no = mv.srv_no)
WMS_PROCEDURE_PKG
/TMP1/WMS_PROCEDURE_PKG
"WMS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
 ALTER TABLE WMS_AGENT_COMM DROP COLUMN AD_UID 
 ALTER TABLE WMS_AGENT_COMM DROP COLUMN UP_UID 
 ALTER TABLE WMS_COMP DROP COLUMN AD_UID 
 ALTER TABLE WMS_COMP DROP COLUMN UP_UID 
 ALTER TABLE WMS_CUSTOMER_SUB  DROP COLUMN UP_DATA_BY 
 ALTER TABLE WMS_CUSTOMER_SUB  DROP COLUMN UP_DATA_DATE 
 ALTER TABLE WMS_TRANSFER  DROP COLUMN UPDATE_CNT 
 ALTER TABLE WMS_TRANSFER  DROP COLUMN UPDATE_DATE 
 ALTER TABLE WMS_AGENT_COMM  DROP COLUMN COMM_C_CODE 
 ALTER TABLE WMS_AGENT_COMM  DROP COLUMN COMM_F_NM 
 ALTER TABLE WMS_AGENT_SUB  ADD(AD_U_ID NUMBER) 
 ALTER TABLE WMS_AGENT_SUB  ADD(UP_U_ID NUMBER) 
 ALTER TABLE WMS_COMP  ADD(AD_U_ID NUMBER) 
 ALTER TABLE WMS_AGENT_LMT  ADD(AD_U_ID NUMBER) 
 ALTER TABLE WMS_AGENT_LMT  ADD(UP_U_ID NUMBER) 
 ALTER TABLE WMS_COMP  ADD(UP_U_ID NUMBER) 
 ALTER TABLE WMS_CUSTOMER_SUB  ADD(UP_U_ID NUMBER) 
 ALTER TABLE WMS_CUSTOMER_SUB  ADD(UP_DATE DATE) 
 ALTER TABLE WMS_TRANSFER  ADD(UP_CNT NUMBER) 
 ALTER TABLE WMS_TRANSFER  ADD(UP_DATE DATE) 
 ALTER TABLE  WMS_AGENT_LMT DROP COLUMN UP_UID 
 ALTER TABLE  WMS_AGENT_LMT DROP COLUMN AD_UID 
 ALTER TABLE WMS_AGENT_SUB DROP COLUMN AD_UID 
 ALTER TABLE WMS_AGENT_SUB DROP COLUMN UP_UID 
CREATE TABLE WMS_COM_LNK
CREATE TABLE WMS_SMS_GATE
CREATE TABLE WMS_OPRTOR_LNK
CREATE TABLE WMS_SMS_LIST
CREATE TABLE wms_cust_objction
ALTER TABLE WMS_TRANS_ONLINE MODIFY(ENTRY_USER VARCHAR2(20))  
 Insert into FORM_DETAIL
 Insert into FORM_DETAIL
 Insert into IAS_FORM_NAME
 Insert into IAS_FORM_NAME
 Insert into IAS_FORM_NAME
 Insert into IAS_FORM_NAME
 Insert into PRIVILEGE
 Insert into PRIVILEGE
 Insert into FORM_DETAIL
 Insert into FORM_DETAIL
 Insert into IAS_FORM_NAME
 Insert into IAS_FORM_NAME
 Insert into IAS_FORM_NAME
 Insert into IAS_FORM_NAME
 Insert into PRIVILEGE
 Insert into PRIVILEGE
Insert into FORM_DETAIL
Insert into IAS_FORM_NAME
Insert into IAS_FORM_NAME
Insert into PRIVILEGE
Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS
Insert into IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS
         --## Update Post flag
         THEN                                           -- From Posting Screen
            BEGIN
               UPDATE wms_trans_online
                WHERE doc_srl = m_cv.doc_ser;
            EXCEPTION
            END;
CREATE TABLE WMS_ADV(
CREATE TABLE WMS_AGENT_COMM
CREATE TABLE WMS_AGENT_LMT
CREATE TABLE WMS_AGENT_SUB
CREATE TABLE WMS_BLK_LST
CREATE TABLE WMS_CODE_MST
CREATE TABLE WMS_CODE_DTL
CREATE TABLE WMS_COMM_LEV
CREATE TABLE WMS_COMM
CREATE TABLE WMS_COMP
CREATE TABLE WMS_CUSTOMER_SUB
CREATE TABLE WMS_CUST_BAL
CREATE TABLE WMS_CUST_GLOBAL
CREATE TABLE WMS_CUST_LMT_MST
CREATE TABLE WMS_CUST_LMT_DTL
CREATE TABLE WMS_CUST_OUT_BNFS
CREATE TABLE WMS_CUST_OUT_BNFS_RQ
CREATE TABLE WMS_DISC
CREATE TABLE WMS_EVELATION
CREATE TABLE WMS_FEE
CREATE TABLE WMS_FEE_APP
CREATE TABLE WMS_FEE_DIST
CREATE TABLE WMS_FEE_DSC
CREATE TABLE WMS_FEE_DTL
CREATE TABLE WMS_FEE_MEB
CREATE TABLE WMS_FEE_MIC
CREATE TABLE WMS_FLAGS
CREATE TABLE WMS_FLD_TYP
CREATE TABLE WMS_GPS_LOC
CREATE TABLE WMS_GROUP_FEES
CREATE TABLE WMS_GROUP_LMT
CREATE TABLE WMS_GROUP_SRV
CREATE TABLE WMS_GROUP_ST
CREATE TABLE WMS_HISTRY
CREATE TABLE WMS_HOLD
CREATE TABLE WMS_LMT_SER1
CREATE TABLE WMS_LOC_TY
CREATE TABLE WMS_LOGS
CREATE TABLE WMS_NEWS
CREATE TABLE WMS_NOTFY
CREATE TABLE WMS_NOTFY_MSG
CREATE TABLE WMS_OPRTOR
CREATE TABLE WMS_OTP
CREATE TABLE WMS_PAR
CREATE TABLE WMS_PRJ
CREATE TABLE WMS_PYMNT_TY
CREATE TABLE WMS_RESP_DATA
CREATE TABLE W
CREATE TABLE WMS_SMS_MSG
CREATE TABLE WMS_SRV_FEE
CREATE TABLE WMS_SRV_FEE_DSC
CREATE TABLE WMS_SRV_GRP
CREATE TABLE WMS_SRV_LMT
CREATE TABLE WMS_SRV_MAN
CREATE TABLE WMS_SRV_MSG
CREATE TABLE WMS_TRACE
CREATE TABLE WMS_TRANS_ERROR
CREATE TABLE WMS_TRANS_ONLINE
CREATE TABLE WMS_TRANSFER
  IS_UPDATE       NUMBER(1)                     DEFAULT 0,
CREATE TABLE WMS_LOG_XML(
CREATE TABLE wms_cust_objction
SELECT COUNT(1)   FROM DBA_TABLESPACES  WHERE TABLESPACE_NAME LIKE  ''WMS%''"
   SELECT wms_trans_online.frm_c_code c_code, c_a_name, c_e_name,
   FROM   wms_trans_online,
   WHERE  wms_trans_online.frm_c_code = wms_customer_sub.c_code
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_PROCEDURE_PKG
"WMS_PROCEDURE_PKG"PROCEDURE_PRC""
PROCEDURE_PRC
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_PROCEDURE_PKG
WMS_PROCEDURE_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
"WMS_FUNCTION_PKG"FUNCTION_PRC""
FUNCTION_PRC
WMS_FUNCTION_PKG
WMS_FUNCTION_PKG
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/yserpdbalib.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
begin sys.DBMS_MONITOR.SESSION_TRACE_DISABLE; end;
Error From EXEC_SQL Package >>
Other Error From EXEC_SQL Package >>
CREATE TABLE IAS_SYS.IAS_OBJ_HND_DVC
begin system.reset_Onyx_pw(
); end;
grant create procedure to 
CREATE OR REPLACE PROCEDURE SYSTEM.reset_Onyx_pw wrapped 
create or replace function 
Password must start From A to Z or a to z ...
Other Error @ call_admin_form Procedure in Lib ...
SELECT USERNAME USR   FROM ALL_USERS  WHERE (USERNAME LIKE  ''IAS%''  OR USERNAME LIKE  ''YSPOS%'' ) AND USERNAME LIKE  :b1"SELECT TO_NUMBER(:b1,''0XXXXXXXXXXX'')   FROM DUAL"SELECT TO_NUMBER(:b1,''0XXXXXXXXXXX'')   FROM DUAL"SELECT TO_CHAR(:b1,''FM0XXXXXXXXXXX'')   FROM DUAL"SELECT CAPTION_DET   FROM IAS_SYS.IAS_LABELS  WHERE LABEL_NO = :b1  AND LANG_NO = :b2  AND ROWNUM <= 1"INSERT INTO IAS_SYS.YS_PARA_COLS VALUES ( :b1,NVL(:b2,''xxxxxxxxx''),:b3,:b4,:b5  )"
Setting init Var Begin for Mac-PCx
FUNCTION
CREATE OR REPLACE FUNCTION SYSTEM.GET_CONTEXT_VAL(p_context varchar2,p_key varchar2 default 'userenv') RETURN varchar2 IS
CREATE TABLE IAS_SYS.IAS_LI
ALTER TABLE IAS_SYS.IAS_LICENSES_DETAILS
CREATE TABLE IAS_SYS.IAS_OBJ_SERVERS
CREATE TABLE IAS_SYS.IAS_OBJ_VIEW_DET
CREATE TABLE IAS_SYS.IAS_OBJ_VIEWS
ALTER TABLE IAS_SYS.IAS_OBJ_VIEWS ADD (
Begining of show_banner 
g_license_exists and will return from setup_when_new_form XXXXXXXXXXXXXXXXXXXXXX
Calling INIT_GLOB_PRIV_VAR from  setup_pre_form 
Calling check_package from  setup_pre_form 
Checking App Version from  setup_pre_form with=
You already Logoed in From This Unit , Year and User ,
SELECT TO_NUMBER(:b1,''FM0XXXXXXXXX'')   FROM DUAL"SELECT TO_CHAR(:b1,''FM0XXXXXXXXX'')   FROM DUAL"SELECT SID,SERIAL#,USERNAME   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND CLIENT_INFO = :b2  AND STATUS != ''KILLED''"SELECT NVL(COUNT(*),0),SUM(LENGTH(TEXT)),SUM(LINE),NVL(COUNT(*) || SUM(LENGTH(TEXT))  || SUM(LINE) ,0)   FROM ALL_SOURCE  WHERE OWNER = ''IAS_SYS''  AND NAME = ''INIT_PKG''"SELECT NVL(COUNT(*),0),SUM(LENGTH(TEXT)),SUM(LINE),NVL(COUNT(*) || SUM(LENGTH(TEXT))  || SUM(LINE) ,0)   FROM ALL_SOURCE  WHERE OWNER = ''IAS_SYS''  AND NAME = ''INIT_PKG''"SELECT TO_CHAR(TO_DATE(:b1,''DDMMRRRR'',''NLS_CALENDAR=Gregorian''),''ddmmrrrr'')   FROM DUAL"SELECT TO_DATE(:b1,''DDMMRRRR'',''NLS_CALENDAR=Gregorian'')   FROM DUAL"SELECT F_SYS   FROM FORM_DETAIL  WHERE FORM_NO = :b1"SELECT STATUS   FROM ALL_OBJECTS  WHERE OWNER = :b1  AND OBJECT_NAME = :b2  AND OBJECT_TYPE = :b3"SELECT NVL(COUNT(*),0),NVL(COUNT(DISTINCT STATUS),0),COUNT(DECODE(OBJECT_TYPE,''TABLE'',1, NULL )) TAB_CNT,COUNT(DECODE(SUBSTR(OBJECT_TYPE,1,7),''PACKAGE'',1, NULL )) PKG_CNT   FROM ALL_OBJECTS  WHERE (OWNER = ''IAS_SYS''  AND OBJECT_NAME IN ( ''IAS_LICENSES_DETAILS'',''IAS_OBJ_SERVERS'',''IAS_OBJ_VIEW_DET'',''IAS_OBJ_VIEWS'',''IAS_OBJ_VIEWS_PK'',''INIT_PKG'',''YS_CONTEXT''  )) OR (OWNER = ''SYS''  AND OBJECT_NAME IN ( ''YS_CONTEXT''  )) OR (OWNER = ''SYSTEM''  AND OBJECT_NAME IN ( ''GET_CONTEXT_VAL''  ))"SELECT MOD_ID   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID != 0  AND NVL(:b1,-1) = 0 ORDER BY TO_NUMBER(MOD_ID)"DELETE FROM IAS_SYS.IAS_OBJ_VIEWS WHERE MOD_ID = NVL(:b1,-2)"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = 0"SELECT COUNT(*)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT CREATED   FROM DBA_USERS  WHERE USERNAME = ''IAS_SYS''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',:b1)"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT PLATFORM_NAME,DBID,DATAGUARD_BROKER,GUARD_STATUS   FROM V$DATABASE"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT COUNT(DISTINCT CLIENT_INFO),COUNT(CLIENT_INFO)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT SUM(CNT),SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIENT_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b3)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b4)   AND STATUS != ''KILLED''  AND UPPER(DECODE(:b1,1,CLIENT_INFO,TERMINAL)) != UPPER(:b6)  GROUP BY DECODE(:b1,1,CLIENT_INFO,TERMINAL) )"SELECT SUM(CNT) - 1 ,SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIENT_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AN
D UPPER(USERNAME) = UPPER(:b3)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b4)   AND STATUS != ''KILLED''  AND UPPER(DECODE(:b1,1,CLIENT_INFO,TERMINAL)) = UPPER(:b6)  GROUP BY DECODE(:b1,1,CLIENT_INFO,TERMINAL) )"SELECT NVL(COUNT(DISTINCT CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT NVL(COUNT(*),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT SID,CLIENT_INFO,SERIAL# SER,STATUS,TERMINAL,MACHINE,USERNAME,MODULE   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND STATUS != ''KILLED''  AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND CLIENT_INFO LIKE  :b2 || ''%''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',:b1)"
SELECT TO_CHAR(DBID + 80027 ,''FM0XXXXXXXXXX''),TO_CHAR(DBID + ACTIVATION#  - 80027 ,''FM0XXXXXXXXXX'')   FROM V$DATABASE"SELECT TO_CHAR(DBID,''FM0XXXXXXXXXX'')   FROM V$DATABASE"SELECT TO_CHAR(DBID,''FM0XXXXXXXXXXX''),TO_CHAR(DBID + ACTIVATION# ,''FM0XXXXXXXXXXX'')   FROM V$DATABASE"
FUNCTION
CREATE OR REPLACE FUNCTION SYSTEM.GET_CONTEXT_VAL(p_context varchar2,p_key varchar2 default 'userenv') RETURN varchar2 IS
CREATE TABLE IAS_SYS.IAS_LI
System was Licensed for version %l% with ability to update to version %x%.
SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = :b2"SELECT STATUS   FROM ALL_OBJECTS  WHERE OWNER = ''IAS_SYS''  AND OBJECT_NAME = ''IAS_MSGS''"INSERT INTO IAS_MSGS ( MSG_NO,LANG_NO,CAPTION_DET )  VALUES ( :b1,:b2,:b3  )"
begin sys.DBMS_MONITOR.SESSION_TRACE_DISABLE; end;
Create Or Replace PROCEDURE System.Prge_Shrd_Pool Authid Current_User IS
  For i In(Select Address,Hash_Value,Command_Type From V$sqlarea Where Parsing_Schema_Name In('SYSTEM','IAS_SYS')) Loop
      Begin
        Exception
        End;
Begin    System.Prge_Shrd_Pool;    End;
DROP PROCEDURE System.PRGE_SHRD_POOL
begin sys.DBMS_MONITOR.SESSION_TRACE_DISABLE; end;
begin sys.DBMS_MONITOR.SESSION_TRACE_DISABLE; end;
IEWS  WHERE MOD_ID != 0  AND NVL(:b1,-1) = 0 ORDER BY TO_NUMBER(MOD_ID)"DELETE FROM IAS_SYS.IAS_OBJ_VIEWS WHERE MOD_ID = NVL(:b1,-2)"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = 0"SELECT COUNT(*)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT CREATED   FROM DBA_USERS  WHERE USERNAME = ''IAS_SYS''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',:b1)"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT PLATFORM_NAME,DBID,DATAGUARD_BROKER,GUARD_STATUS   FROM V$DATABASE"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT COUNT(DISTINCT CLIENT_INFO),COUNT(CLIENT_INFO)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT SUM(CNT),SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIENT_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b3)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b4)   AND STATUS != ''KILLED''  AND UPPER(DECODE(:b1,1,CLIENT_INFO,TERMINAL)) != UPPER(:b6)  GROUP BY DECODE(:b1,1,CLIENT_INFO,TERMINAL) )"SELECT SUM(CNT) - 1 ,SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIENT_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AN
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/ARSLIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
DELETE FROM IAS_REPLICA_TABLE_DTL"DELETE FROM IAS_REPLICA_TABLE_MST"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 1,65,1,''CB'',1  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 2,708,1,''CB'',2  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 3,620,1,''CB'',3  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 4,1048,1,''CB'',4  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 5,621,1,''CB'',5  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 6,128,1,''CB'',6  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 7,583,1,''CB'',7  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 8,71,1,''CB'',8  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 9,73,1,''CB'',9  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 10,79,1,''CB'',10  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 11,85,1,''CB'',11  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 12,78,1,''CB'',12  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 13,1284,1,''CB'',13  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 14,91,1,''CB'',14  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 15,96,1,''CB'',15  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 16,92,1,''CB'',16  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 17,466,1,''CB'',17  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 18,1258,1,''CB'',18  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 19,1422,1,''CB'',19  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 20,589,1,''CB'',20  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 21,119,1,''CB'',21  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 22,1229,1,''CB'',22  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 23,548,1,''CB'',23  )"INSERT 
INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 24,1394,1,''CB'',24  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 25,1966,1,''CB'',25  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 26,1395,1,''CB'',26  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 27,116,1,''CB'',27  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 28,89,1,''CB'',28  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 29,1789,1,''CB'',29  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 30,1489,1,''CB'',30  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 31,409,1,''CB'',31  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 32,1691,1,''CB'',32  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 33,1697,1,''CB'',33  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 34,2301,1,''CB'',34  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 35,95,1,''CB'',17  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 36,2454,1,''CB'',12  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 37,1465,1,''CB'',16  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 38,2070,1,''CB'',15  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 39,2344,1,''CB'',17  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 40,1346,1,''CB'',18  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 41,2190,1,''CB'',19  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 42,586,1,''CB'',40  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 43,1259,1,''CB'',40  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 44,408,1,''CB'',50  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 45,106,1,''CB'',60  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 48,2352,1,''CB'',13  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 49,4036,1,''CB'',41  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 50,1
1882,1,''CB'',42  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 60,12453,1,''CB'',43  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 52,4596,1,''CB'',44  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 53,4291,1,''CB'',43  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 1,118,1,''BC'',1  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 2,121,1,''BC'',2  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 3,1456,1,''BC'',3  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 4,1662,1,''BC'',3  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 6,615,1,''BC'',5  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 7,67
3,1,''BC'',16  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 8,1635,1,''BC'',6  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 9,1440,1,''BC'',11  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 10,95,1,''BC'',9  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 11,2484,1,''BC'',10  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 12,103,1,''BC'',12  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 13,2070,1,''BC'',5  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 14,1346,1,''BC'',4  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 15,94,1,''BC'',7  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 17,93,1,''BC'',13  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 18,120,1,''BC'',14  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 19,117,1,''BC'',15  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 20,100,1,''BC'',8  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 21,80,1,''BC'',5  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 30,11882,1,''BC'',17  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 35,2568,1,''BC'',7  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 40,5525,1,''BC'',40  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 41,2335,1,''BC'',41  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 42,3296,1,''BC'',42  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 43,3283,1,''BC'',43  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 44,3272,1,''BC'',44  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 45,15779,1,''BC'',45  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 46,16169,1,''BC'',46  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 47,16170,1,''BC'',47  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 48,16840,1,''BC'',8  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 10, NULL ,:b1,''IAS_VOUCHR_TYPE'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 20, NULL ,:b1,''JV_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 21, NULL ,:b1,''INCOM_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 22, NULL ,:b1,''OUT_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DA
TE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 23, NULL ,:b1,''IAS_INV_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 30, NULL ,:b1,''JV_TYPES_DETAIL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 40, NULL ,:b1,''ACCOUNT_GROUPING'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 50, NULL ,:b1,''ACCOUNT_REPORT_TYPE'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 60, NULL ,:b1,''ACCOUNT_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 61, NULL ,:b1,''IAS_ACCOUNT_CLASS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 62, NULL ,:b1,''S_BRN_GRPS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 80, NULL ,:b1,''CC_GROUPING'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 90, NULL ,:b1,''COST_CENTER_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 91, NULL ,:b1,''IAS_SALESMAN_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 92, NULL ,:b1,''IAS_SMAN_ITM_ACTVTY'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 100, NULL ,:b1,''IAS_PRICING_LEVELS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 101, NULL ,:b1,''IAS_DFLT_PRICE_LVL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NU
LL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 110, NULL ,:b1,''ITEM_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 111, NULL ,:b1,''IAS_ITEMS_ACTIVITY'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 120, NULL ,:b1,''INTERFACE_ACC'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 130, NULL ,:b1,''MEASUREMENT'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 131, NULL ,:b1,''IAS_CONN_ITM_MSUR_UNT'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 133, NULL ,:b1,''IAS_UNTS_CONV'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 140, NULL ,:b1,''IAS_ALTERNATIVE_GROUP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 150, NULL ,:b1,''IAS_ITEM_LEVELS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 151, NULL ,:b1,''IAS_NOTE_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 160, NULL ,:b1,''REQUEST_TYPES'', NULL , NULL , NULL
 ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 161, NULL ,:b1,''IAS_QUOT_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 162, NULL ,:b1,''IAS_SORDER_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 163, NULL ,:b1,''IAS_SALES_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REP
LICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 164, NULL ,:b1,''S_FLAGS'', NULL , NULL , NULL ,''CB'',''UP_DATE'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 165, NULL ,:b1,''IAS_RT_SALES_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 166, NULL ,:b1,''IAS_LGHT_DOC_BRN'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 169, NULL ,:b1,''S_SCR_RPRT_SMPL'', NULL ,''S_SCR_RPRT_SMPL_PK'',''FORM_NO,SMPL_NO'',''CB'',''UP_DATE'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 170, NULL ,:b1,''IAS_PARA_GEN'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 180, NULL ,:b1,''IAS_PARA_GL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 190, NULL ,:b1,''IAS_PARA_INV'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 200, NULL ,:b1,''IAS_PARA_AP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 210, NULL ,:b1,''IAS_PARA_AR'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 211, NULL ,:b1,''IAS_PARA_POS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 171, NULL ,:b1,''IAS_USER_GROUP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 172, NULL ,:b1,''S_TP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 220,''MV_USER_R'',:b1,''USER_R'',''WHERE CONN_BRN_NO= '',''MV_U_ID_PK'',''U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',3,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,
T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 230,''MV_IAS_USER_HEAD'',:b1,''IAS_USER_HEAD'',''WHERE EXISTS (SELECT 1 FROM USER_R WHERE U_ID=IAS_USER_HEAD.U_ID AND CONN_BRN_NO= AND ROWNUM<=1) '',''MV_UID_HEAD_PK'',''U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',3,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 240, NULL ,:b1,''S_BRN'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',4,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 241, NULL ,:b1,''S_CMPNY'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',4,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 250,''MV_PRIVILEGE'',:b1,''PRIVILEGE'',''WHERE EXISTS (SELECT 1 FROM USER_R WHERE U_ID=PRIVILEGE.U_ID AND CONN_BRN_NO= AND ROWNUM<=1) AND EXISTS (SELECT 1 FROM FORM_DETAIL WHERE F_SYS=''''LGHT'''' AND FORM_NO=PRIVILEGE.FORM_NO AND ROWNUM<=1)'',''MV_PRIV_PK'',''U_ID, FORM_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 260,''MV_PRIVILEGE_FIXED'',:b1,''PRIVILEGE_FIXED'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = PRIVILEGE_FIXED.U_ID AND CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_PRIV_FIXED'',''U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 270,''MV_PRIV_CASH'',:b1,''PRIV_CASH'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = PRIV_CASH.U_ID AND CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_PRIV_CASH'',''U_ID,CASH_NO,A_CY,CASH_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 280,''MV_IAS_PRIV_AR'',:b1,''IAS_PRIV_AR'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = IAS_PRIV_AR.U_ID AND CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_PRIV_AR'',''U_ID,AR_TYPE,S_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 281,''MV_IAS_FRM_FLD_PRIV'',:b1,''IAS_FRM_FLD_PRIV'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = IAS_FRM_FLD_PRIV.U_ID AND CONN_BRN_NO= AND ROWNUM<=1)'', NULL ,''U_ID,FORM_NO,TAB_NAME,FLD_NAME'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 282,''MV_S_FLAGS_PRIV'',:b1,''S_FLAGS_PRIV'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = S_FLAGS_PRIV.U_ID AND CONN_BRN_NO= AND ROWNUM<=1)'',''MV_S_FLGS_PRIV_PK'',''U_ID,FLG_CODE,FLG_VALUE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 283,''MV_PRIV_REQ_TYPE'',:b1,''PRIV_REQ_TYPE'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = PRIV_REQ_TYPE.U_ID AND CONN_BRN_NO= AND ROWNUM<=1)'',''MV_PR
IV_REQ_PK'',''U_ID, REQ_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 284,''MV_PRIV_INCOME_TYPE'',:b1,''PRIV_INCOME_TYPE'', NULL ,''MV_PRIV_INC_PK'',''U_ID, INCOM_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 285,''MV_IAS_ITEMS_ACTIVITY_PRIV'',:b1,''IAS_ITEMS_ACTIVITY_PRIV'', NULL ,''MV_PRIV_ACT_PK'',''U_ID, ACTIVITY_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 286,''MV_IAS_SHW_DOC_PRIV'',:b1,''IAS_SHW_DOC_PRIV'', NULL ,''MV_PRIV_ACT_PK'',''U_ID, T_U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 287,''MV_S_BRN_USR_PRIV'',:b1,''S_BRN_USR_PRIV'', NULL ,''MV_S_BRNUSRPRIV_PK'',''U_ID, BRN_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 288,''MV_IAS_PRIV_INV_TYPE'',:b1,''IAS_PRIV_INV_TYPE'', NULL ,''MV_PRIV_INVTYPE_PK'',''U_ID,INV_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 289,''MV_IAS_REP_SMPLE_USER'',:b1,''IAS_REP_SMPLE_USER'', NULL ,''MV_REP_SMPLR_PK'',''U_ID,FORM_NO,REP_SMPLE_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 290,''MV_IAS_PRIV_COLLECTORS'',:b1,''IAS_PRIV_COLLECTORS'', NULL ,''MV_PRIV_COLL_PK'',''U_ID,COL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 291,''MV_IAS_PRIV_SMAN'',:b1,''IAS_PRIV_SMAN'', NULL ,''MV_PRIV_SMAN_PK'',''U_ID,REPRS_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS
,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 292,''MV_PRIV_OUT_TYPE'',:b1,''PRIV_OUT_TYPE'', NULL ,''MV_PRIV_OUT_PK'',''U_ID, OUT_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 293,''MV_IAS_PRIV_INV_TYPE'',:b1,''IAS_PRIV_INV_TYPE'', NULL ,''MV_PRIV_INV_PK'',''U_ID, INV_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 294,''MV_S_USR_TP_PRV'',:b1,''S_USR_TP_PRV'', NULL ,''MV_S_USR_TP_PRV_PK'',''U_ID,FORM_NO,OBJ_NM,TP_NM'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME
,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 295,''MV_S_APPRVD_USR'',:b1,''S_APPRVD_USR'', NULL ,''MV_S_APPRVD_USR_PK'',''LVL_NO,DOC_TYP,U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 296,''MV_S_APPRVD_LVL'',:b1,''S_APPRVD_LVL'', NULL ,''MV_S_APPRVD_LVL_PK'',''LVL_NO,DOC_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 297,''MV_IAS_CONN_WCODE_BY_ACTIVITY'',:b1,''IAS_CONN_WCODE_BY_ACTIVITY'', NULL ,''MV_CONN_WC_ACTVTY_PK'','''',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 298,''MV_GLS_VCHR_TYP_PRV'',:b1,''GLS_VCHR_TYP_PRV'', NULL ,''MV_GLS_VCHR_TYP_PRV_PK'',''V_TYP,V_TYP_NO,U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 299,''MV_S_APPRVD_USR_DTL'',:b1,''S_APPRVD_USR_DTL'', NULL ,''MV_S_APPRVD_USR_DTL_PK'',''U_ID,LVL_NO,DOC_TYP,TYP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 305,''MV_IAS_GLRQ_TYPES_PRIV'',:b1,''IAS_GLRQ_TYPES_PRIV'', NULL ,''IAS_GLRQ_TYPES_PRIV_PK'',''RQ_DOC_TYPE,RQ_TYPE,U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL , NULL ,0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 306,''MV_IAS_PRIV_NOTE_TYPES'',:b1,''IAS_PRIV_NOTE_TYPES'', NULL ,''IAS_PRIV_NOTE_TYPES_PK'',''U_ID,NOTE_TYPE_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL , NULL ,0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 300, NULL ,:b1,''S_PRD_MST'', NULL , NULL , NULL ,''CB'',''AD_DATE'',6,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 301, NULL ,:b1,''S_PRD_DTL'', NULL , NULL , NULL ,''CB'',''UP_DATE'',6,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 302, NULL ,:b1,''S_PRD_DAY'', NULL , NULL , NULL ,''CB'',''UP_DATE'',6,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 303, NULL ,:b1,''S_PRD_BRN_CLS'', NULL , NULL , NULL ,''CB'',''UP_DATE'',6,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 310, NULL ,''ROWID'',''DATE_LOCK'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',7,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,C
ENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 320, NULL ,:b1,''EX_RATE'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',8,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 321, NULL ,:b1,''GLS_CRNCY_USR_LMT'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',8,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 340,''MV_CASH_IN_HAND'',:b1,''CASH_IN_HAND'',''WHERE EXISTS(SELECT 1 FROM PRIV_CASH,USER_R WHERE PRIV_CASH.U_ID=USER_R.U_ID AND CASH_NO=CASH_IN_HAND.CASH_NO AND CASH_TYPE=1 AND NVL(ADD_FLAG,0)+NVL(VIEW_FLAG,0)>1 AND CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_CASH'',''CASH_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',9,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 350,''MV_IAS_CASH_IN_HAND_DTL'',:b1,''IAS_CASH_IN_HAND_DTL'',''WHERE EXISTS(SELECT 1 FROM PRIV_CASH,USER_R WHERE PRIV_CASH.U_ID=USER_R.U_ID AND CASH_NO=IAS_CASH_IN_HAND_DTL.CASH_NO AND CASH_TYPE=1 AND NVL(ADD_FLAG,0)+NVL(VIEW_FLAG,0)>1 AND CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_CASH_DTL'',''CASH_NO,A_CY'',''CB'',''NVL(UP_DATE,AD_DATE)'',9,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 360,''MV_CASH_AT_BANK'',:b1,''CASH_AT_BANK'',''WHERE EXISTS(SELECT 1 FROM PRIV_CASH,USER_R WHERE PRIV_CASH.U_ID=USER_R.U_ID AND CASH_NO=CASH_AT_BANK.BANK_NO AND CASH_TYPE=2 AND NVL(ADD_FLAG,0)+NVL(VIEW_FLAG,0)>1 AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_BANK'',''BANK_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',10,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 370,''MV_IAS_CASH_AT_BANK_DTL'',:b1,''IAS_CASH_AT_BANK_DTL'',''WHERE EXISTS(SELECT 1 FROM PRIV_CASH,USER_R WHERE PRIV_CASH.U_ID=USER_R.U_ID AND CASH_NO=IAS_CASH_AT_BANK_DTL.BANK_NO AND CASH_TYPE=2 AND NVL(ADD_FLAG,0)+NVL(VIEW_FLAG,0)>1 AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_BANK_DTL'',''BANK_NO,A_CY'',''CB'',''NVL(UP_DATE,AD_DATE)'',10,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 371, NULL ,:b1,''IAS_BANK_GROUP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',10,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 380,''MV_ACCOUNT'',:b1,''ACCOUNT'',''WHERE EXISTS(SELECT 1 FROM PRIV_ACC WHERE PRIV_ACC.A_CODE=ACCOUNT.A_CODE AND ROWNUM<=1)'',''PK_MV_ACC'',''A_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 381,''MV_IAS_ACC_TREE'',:b1,''IAS_ACC_TREE'',''WHERE EXISTS(SELECT 1 FROM PRIV_ACC WHERE PRIV_ACC.A_CODE=IAS_ACC_TREE.AC_TREE AND ROWNUM<=1)'',''PK_MV_ACC_TREE'',''A_CODE, AC_TREE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 382,''MV_GLS_AC_
CODE_DTL_GRPS'',:b1,''GLS_AC_CODE_DTL_GRPS'','''',''PK_MV_GLS_ACCODEDTLGRPS'',''GRP_CODE,AC_DTL_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 390,''MV_ACCOUNT_CURR'',:b1,''ACCOUNT_CURR'',''WHERE EXISTS(SELECT 1 FROM PRIV_ACC WHERE PRIV_ACC.A_CODE=ACCOUNT_CURR.A_CODE AND ROWNUM<=1)'',''PK_MV_ACC_CURR'',''A_CODE,A_CY'',''CB'',''AD_DATE'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 400,''MV_IAS_ACCOUNT_CC'',:b1,''IAS_ACCOUNT_CC'',''WHERE EXISTS(SELECT 1 FROM PRIV_ACC WHERE PRIV_ACC.A_CODE=IAS_ACCOUNT_CC.A_CODE AND ROWNUM<=1)'',''PK_MV_ACC_CC'',''A_CODE,CC_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 410,''MV_PRIV_ACC'',:b1,''PRIV_ACC'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID=PRIV_ACC.U_ID AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_ACC_PRIV'',''U_ID,A_CODE,A_CY'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 411,''MV_IAS_AC_CC_LMT'',:b1,''IAS_AC_CC_LMT'', NULL ,''PK_MV_IAS_AC_CC_LMT'',''A_CODE, AC_CODE_DTL, AC_DTL_TYP, A_CY, CC_CODE,PJ_NO, ACTV_NO, DR_CR'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 413,''MV_GLS_ACCNT_DTL'',:b1,''GLS_ACCNT_DTL'', NULL ,''PK_MV_GLS_ACCNT_DTL'',''AC_CODE_DTL, AC_DTL_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 414,''MV_GLS_ACCNT_DTL_CURR'',:b1,''GLS_ACCNT_DTL_CURR'', NULL ,''PK_MV_GLS_ACCNT_DTL_CURR'',''AC_CODE_DTL, AC_DTL_TYP, CUR_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 415,''MV_GLS_ACCNT_DTL_GRPS'',:b1,''GLS_ACCNT_DTL_GRPS'', NULL ,''PK_MV_GLS_ACCNT_DTL_GRPS'',''GRP_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES (
 416,''MV_GLS_ACCNT_DTL_PRIV'',:b1,''GLS_ACCNT_DTL_PRIV'', NULL ,''PK_MV_GLS_ACCNT_DTL_PRIV'',''U_ID, AC_CODE_DTL,CUR_CODE,AC_DTL_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 417,''MV_GLS_AC_CODE_DTL_GRPS_PRIV'',:b1,''GLS_AC_CODE_DTL_GRPS_PRIV'', NULL ,''PK_GLS_AC_CODEDTLGRPPRV'',''U_ID,GRP_CODE,AC_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 420,''MV_COST_CENTERS'',:b1,''COST_CENTERS'',''WHERE EXISTS (SELECT 1 FROM PRIVILEGE_CC WHERE PRIVILEGE_CC.CC_CODE=COS
T_CENTERS.CC_CODE AND ROWNUM<=1)'',''PK_MV_CCODE'',''CC_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',12,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 430,''MV_PRIVILEGE_CC'',:b1,''PRIVILEGE_CC'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = PRIVILEGE_CC.U_ID AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_PRIV_CC'',''U_ID,CC_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',12,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 440,''MV_GROUP_DETAILS'',:b1,''GROUP_DETAILS'',''WHERE EXISTS(SELECT 1 FROM PRIVILEGE_GC,USER_R WHERE PRIVILEGE_GC.U_ID=USER_R.U_ID AND NVL(ADD_FLAG,0)+NVL(VIEW_FLAG,0)>1 AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_GCODE'',''G_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 441,''MV_IAS_CONN_ACC_INV_BY_GL'',:b1,''IAS_CONN_ACC_INV_BY_GL'', NULL ,''PK_MV_CONN_GCODE'',''POST_TYPE,POST_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 442,''MV_IAS_MAINSUB_GRP_DTL'',:b1,''IAS_MAINSUB_GRP_DTL'', NULL ,''PK_MV_MNGCODE'',''G_CODE,MNG_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 443,''MV_IAS_SUB_GRP_DTL'',:b1,''IAS_SUB_GRP_DTL'', NULL ,''PK_MV_SUBGCODE'',''SUBG_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 444, NULL ,:b1,''IAS_DETAIL_GROUP'', NULL ,''PK_MV_GRP_DTL'',''DETAIL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 445, NULL ,:b1,''IAS_ASSISTANT_GROUP'', NULL ,''PK_MV_ASSTNT_GRP'',''ASSISTANT_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 450,''MV_PRIVILEGE_GC'',:b1,''PRIVILEGE_GC'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = PRIVILEGE_GC.U_ID AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_PRIV_GC'',''U_ID,G_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 460, NULL ,:b1,''WAREHOUSE_GROUP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 470,''MV_WAREHOUSE_DETAILS'',:b1,''WAREHOUSE_DETAILS'',''WHERE CONN_BRN_NO='',''PK_MV_WH_DET'',''W_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',14,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_D
EL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 480,''MV_PRIVILEGE_WH'',:b1,''PRIVILEGE_WH'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = PRIVILEGE_WH.U_ID AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_PRIV_WH'',''U_ID,W_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',14,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 490,''MV_IAS_ITM_MST'',:b1,''IAS_ITM_MST'',''WHERE 1=1'',''PK_MV_ITM_MST'',''I_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 491,''MV_IAS_ITM_DTL'',:b1,''IAS_ITM_DTL'',''WHERE 1=1'',''PK_MV_ITM_DTL'',''I_CODE,ITM_UNT'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 492,''MV_IAS_ITM_QTY_LMT'',:b1,''IAS_ITM_QTY_LMT'',''WHERE 1=1'',''PK_MV_ITM_LMT'',''I_CODE,ITM_UNT'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 493,''MV_IAS_BATCH_NO'',:b1,''IAS_BATCH_NO'', NULL ,''PK_MV_IAS_BATCH_NO'',''BATCH_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 494,''MV_IAS_BATCH_NO_CONTENTS'',:b1,''IAS_BATCH_NO_CONTENTS'', NULL ,''PK_MV_IAS_BTCH_NO_CNTNTS'',''COL_NO,BATCH_DESC_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 495,''MV_IAS_BATCH_NO_CONTENTS_MST'',:b1,''IAS_BATCH_NO_CONTENTS_MST'', NULL ,''PK_MV_BTCH_NO_CONTNT_MST'',''COL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 496,''MV_IAS_ITM_BATCH'',:b1,''IAS_ITM_BATCH'', NULL ,''PK_MV_IAS_ITM_BATCH'',''I_CODE, BATCH_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 500,''MV_IAS_ITM_UNT_BARCODE'',:b1,''IAS_ITM_UNT_BARCODE'',''WHERE 1=1'',''PK_MV_BARCODE'',''BARCODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 501, NULL ,:b1,''IAS_ATTACH_MST'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',38,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 502, NULL ,:b1,''IAS_ATTACH_DTL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',38,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 503, NULL ,:b1,''IAS_ITM_ATTACH'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',38,0, NULL , NULL ,0
,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 510,''MV_IAS_ITEM_PRICE'',:b1,''IAS_ITEM_PRICE'',''WHERE 1=1'',''PK_MV_IAS_ITEM_PRICE'',''LEV_NO,I_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',16,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 520,''MV_IAS_PRIV_PRICE'',:b1,''IAS_PRIV_PRICE'',''WHERE EXISTS(SELECT 1 FROM USER_R WHERE U_ID = IAS_PRIV_PRICE.U_ID AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_PRIV_PRICE'',''U_ID,LEV_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',16,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 530,''MV_ITEM_MOVEMENT'',:b1,''ITEM_MOVEMENT'',''WHERE DOC_TYPE NOT IN (1,3) AND EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=ITEM_MOVEMENT.W_CODE AND CONN_BRN_NO= AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM GR_NOTE_BR WHERE G_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST WHERE NVL(HUNG,0)=1 AND TR_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM GR_NOTE WHERE NVL(HUNG,0)=1 AND G_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM IAS_OUTGOING_MST WHERE NVL(HUNG,0)=1 AND OUT_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)'',''PK_MV_ITEM_MOV'',''SERIAL'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',17,1, NULL ,'' Where (Doc_Type ,Doc_Ser,I_Code, W_Code ,Expire_Date,Batch_No,Rcrd_No) Not In (Select Doc_Type ,Doc_Ser,I_Code, W_Code ,Expire_Date,Batch_No,Rcrd_No from item_movement)'',0,1,'' AND EXISTS ( SELECT 1 FROM MV_ITEM_MOVEMENT WHERE DOC_SER=ITEM_MOVEMENT.DOC_SER AND W_CODE=ITEM_MOVEMENT.W_CODE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 531,''MV_IAS_ITM_WCODE'',:b1,''IAS_ITM_WCODE'',''WHERE 1=1'',''PK_MV_IAS_ITM_WCODE'',''I_CODE,W_CODE'',''CB'',''UP_DATE'',17,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 532,''MV_GR_DETAIL_CNTR'',:b1,''GR_DETAIL'',''WHERE 1=1'',''PK_MV_GR_DETAIL_CNTR'',''REC_NO'',''CB'',''UP_DATE'',17,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,
CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 540, NULL ,:b1,''CUSTOMER_GROUP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',18,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 550, NULL ,:b1,''CUSTOMER_DEGREE'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',20,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 560, NULL ,:b1,''CUSTOMER_CLASS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',19,0, NULL , NULL ,0,0, NULL  
 )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 561, NULL ,:b1,''S_ZONE'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',19,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 562, NULL ,:b1,''CUSTOMER_CLASS_TYP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',19,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 570, NULL ,:b1,''REGIONS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',21,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 580, NULL ,:b1,''COLLERCTOR'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',22,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 590, NULL ,:b1,''SALES_MAN'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',23,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 600, NULL ,:b1,''CNTRY'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',24,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 610, NULL ,:b1,''IAS_PROVINCES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',25,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 620, NULL ,:b1,''CITIES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',26,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 630,''MV_CUSTOMER'',:b1,''CUSTOMER'',''WHERE EXISTS(SELECT 1 FROM PRIV_ACC,USER_R WHERE PRIV_ACC.U_ID=USER_R.U_ID AND PRIV_ACC.A_CODE=CUSTOMER.C_A_CODE AND NVL(ADD_FLAG,0)+NVL(VIEW_FLAG,0)>1 AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_CODE_BR'',''C_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',27,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 640,''MV_CUSTOMER_CURR'',:b1,''CUSTOMER_CURR'',''WHERE 1=1'',''PK_MV_CODE_CURR_BR'',''C_CODE,A_CY'',''CB'',''AD_DATE'',27,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 650,''MV_IAS_CUSTOMER_CC_LMT'',:b1,''IAS_CUSTOMER_CC_LMT'',''WHERE 1=1'',''PK_MV_CCODE_LMT'',''C_CODE,A_CY,CC_CODE'',''CB'',''AD_DATE'',27,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 660,''MV_IAS_PRIV_CUSTOMER'',:b1,''IAS_PRIV_CUSTOMER'',''WHERE EXISTS(SELECT 1 FROM CUSTOMER,PRIV_ACC,USER_R WHERE CUSTOMER.C_A_CODE=PRIV_ACC.A_CODE AND PRIV_ACC.U_ID=USER_R.U_ID AND CUSTOMER.C_CODE=IAS_PRIV_CUSTOMER
.C_CODE AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_CCODE_PRIV'',''U_ID,C_CODE,A_CY'',''CB'',''NVL(UP_DATE,AD_DATE)'',27,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 661, NULL ,:b1,''IAS_CST_SMAN'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',27,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 662, NULL ,:b1,''IAS_CST_COL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',27,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 663, NULL ,:b1,''IAS_CST_LMT_SAL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',27,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 664, NULL ,:b1,''IAS_CST_ITM_LMT_SAL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',27,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 670,''MV_OPEN_BAL'',''ROWID'',''OPEN_BAL'','' WHERE DOC_TYPE=0'', NULL ,''A_CODE,A_CY,NVL(C_CODE,''''0''''),NVL(V_CODE,''''0''''),NVL(LC_NO,''''0''''),NVL(CC_CODE,''''0''''),NVL(PJ_NO,''''0''''),NVL(ACTV_NO,''''0''''),BRN_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',28,1, NULL ,'' WHERE NOT EXISTS(SELECT 1 FROM OPEN_BAL WHERE A_CODE=MV_OPEN_BAL.A_CODE AND A_CY=MV_OPEN_BAL.A_CY AND NVL(CC_CODE,''''0'''')=NVL(MV_OPEN_BAL.CC_CODE,''''0'''') AND NVL(PJ_NO,''''0'''')=NVL(MV_OPEN_BAL.PJ_NO,''''0'''')  AND NVL(ACTV_NO,''''0'''')=NVL(MV_OPEN_BAL.ACTV_NO,''''0'''') AND NVL(C_CODE,''''0'''')=NVL(MV_OPEN_BAL.C_CODE,''''0'''') AND NVL(V_CODE,''''0'''')=NVL(MV_OPEN_BAL.V_CODE,''''0'''') AND NVL(LC_NO,''''0'''')=NVL(MV_OPEN_BAL.LC_NO,''''0'''') AND BRN_NO=MV_OPEN_BAL.BRN_NO AND ROWNUM<=1)'',0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 680,''MV_IAS_POST_MST'',:b1,''IAS_POST_MST'','' WHERE (DOC_TYPE NOT IN (4,5) OR DOC_SER IN 
                                                     (SELECT BILL_SER FROM IAS_BILL_MST WHERE BRN_NO<>
                                                      SELECT RT_BILL_SER FROM IAS_RT_BILL_MST WHERE BRN_NO<>))'',''PK_MV_POS_MST'',''DOC_SER'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',29,1,'' AND DOC_TYPE<>0'','' WHERE DOC_SER NOT IN ( SELECT DOC_SER FROM IAS_POST_MST)'',1,1,'' AND DOC_SER IN ( SELECT DOC_SER FROM MV_IAS_POST_MST)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 681,''MV_IAS_POST_DTL'',''ROWID'',''IAS_POST_DTL'','' WHERE (DOC_TYPE NOT IN (4,5) OR DOC_SER IN 
                                                     (SELECT BILL_SER FROM IAS_BILL_MST WHERE BRN_NO<>
                                                      SELECT RT_BILL_SER FROM IAS_RT_BILL_MST WHERE BRN_NO<>)) AND LC_NO IS NULL '', NULL ,''DOC_SER'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',29,1, NULL , NULL ,1,1,'' AND DOC_SER IN ( SELECT DOC_SER FROM MV_IAS_POST_DTL)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,
USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 690, NULL ,:b1,''CREDIT_CARD_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',30,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 691, NULL ,:b1,''IAS_CR_CARD_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',30,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 692, NULL ,:b1,''IAS_COMM_CR_CARD_BANK'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',30,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 700, NULL ,:b1,''SALES_CHARGES'', NULL ,''SCH_PK'',''SC_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',31,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 710,''MV_SALES_CHARGES_ITEMS'',''ROWID'',''SALES_CHARGES_ITEMS'',''WHERE EXISTS(SELECT 1 FROM IAS_ITM_MST,PRIVILEGE_GC, USER_R WHERE IAS_ITM_MST.G_CODE=PRIVILEGE_GC.G_CODE AND PRIVILEGE_GC.U_ID=USER_R.U_ID AND (IAS_ITM_MST.I_CODE=SALES_CHARGES_ITEMS.I_CODE OR IAS_ITM_MST.G_CODE=SALES_CHARGES_ITEMS.G_CODE) AND NVL(ADD_FLAG,0)+NVL(VIEW_FLAG,0)>1 AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'', NULL ,''SC_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',31,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 720,''MV_SALES_DISC'',:b1,''SALES_DISC'',''WHERE 1=1'',''PK_MV_SALES_DISC'',''C_CODE,I_CODE,F_DATE,T_DATE'',''CB'',''NVL(UP_DATE,AD_DATE)'',32,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 730,''MV_SALES_FREE_QTY'',:b1,''SALES_FREE_QTY'',''WHERE 1=1'',''PK_MV_SALES_FREEQTY'',''I_CODE,F_DATE,T_DATE'',''CB'',''NVL(UP_DATE,AD_DATE)'',33,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 740,''MV_S_EMP'',:b1,''S_EMP'', NULL ,''IASEMPMV_PK'',''EMP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',34,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 741,''MV_S_EMP_PRV'',:b1,''S_EMP_PRV'', NULL ,''IASEMPPRVMV_PK'',''U_ID,EMP_PRV_TYP,EMPNO_HRCHYNO'',''CB'',''NVL(UP_DATE,AD_DATE)'',34,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_
FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 750,''MV_IAS_WHTRNS_MST'',:b1,''IAS_WHTRNS_MST'','' WHERE TR_INOUT_TYPE=1 AND NVL(HUNG,0)=0 AND NVL(PROCESSED,0)=0 AND EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=IAS_WHTRNS_MST.T_W_CODE AND CONN_BRN_NO= AND ROWNUM<=1)'',''MV_WHTRMST_PK'',''TR_SER'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',35,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST WHERE TR_SER=MV_IAS_WHTRNS_MST.TR_SER AND ROWNUM<=1)'',0,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_WHTRNS_MST WHERE TR_SER=IAS_WHTRNS_MST.TR_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR
_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 751,''MV_IAS_WHTRNS_DTL'',''ROWID'',''IAS_WHTRNS_DTL'','' WHERE EXISTS(SELECT 1 FROM MV_IAS_WHTRNS_MST WHERE TR_SER=IAS_WHTRNS_DTL.TR_SER AND ROWNUM<=1)'', NULL ,''TR_SER'',''CB'', NULL ,35,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_DTL WHERE TR_SER=MV_IAS_WHTRNS_DTL.TR_SER AND ROWNUM<=1)'',0,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_WHTRNS_DTL WHERE TR_SER=IAS_WHTRNS_DTL.TR_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 760,''MV_IAS_PROJECTS_GROUP'',:b1,''IAS_PROJECTS_GROUP'', NULL ,''IASPJGRPMV_PK'',''GROUP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',36,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 761,''MV_IAS_PROJECTS'',:b1,''IAS_PROJECTS'', NULL ,''IASPJMV_PK'',''PJ_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',36,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 762,''MV_IAS_PRIV_PROJECTS'',:b1,''IAS_PRIV_PROJECTS'', NULL ,''IASPRVPJMV_PK'',''U_ID,PJ_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',36,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 763, NULL ,:b1,''TRANSFER_TYPES'', NULL , NULL , NULL ,''CB'',''UP_DATE'',37,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 764, NULL ,:b1,''PRIV_TRNSFR_TYPE'', NULL , NULL , NULL ,''CB'',''UP_DATE'',37,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 765,''MV_IAS_PJ_TREE'',:b1,''IAS_PJ_TREE'', NULL ,''IASPJTREEMV_PK'',''PJ_NO, PJ_TREE'',''CB'',''NVL(UP_DATE,AD_DATE)'',36,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 773,''MV_IAS_ITM_ATTACH_MOVEMENT'',''ROWID'',''IAS_ITM_ATTACH_MOVEMENT'',''WHERE DOC_TYPE NOT IN (1,3)'',''UQ_MV_ITM_ATTCH_MOV'',''DOC_SER, FLEX_NO, RCRD_NO, REC_ATTCH'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',39,1, NULL ,'' WHERE (I_CODE,W_CODE,EXPIRE_DATE,BATCH_NO,DOC_SER,FLEX_NO,RCRD_NO,REC_ATTCH,NVL(OUT_GR_SER,0)) NOT IN 
                                                             (SELECT I_CODE,W_CODE,EXPIRE_DATE,BATCH_NO,DOC_SER,FLEX_NO,RCRD_NO,REC_ATTCH,NVL(OUT_GR_SER,0) FROM IAS_ITM_ATTACH_MOVEMENT)'',0,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_ITM_ATTACH_MOVEMENT WHERE DOC_SER=IAS_ITM_ATTACH_MOVEMENT.DOC_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 780,''MV_IAS_ITEM_SERIALNO'',:b1,''IAS_ITEM_SERIALNO'',''WHERE DOC_TYPE NOT IN (1,3) AND (EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=IAS_ITEM_SERIALNO.W_CODE AND CONN_BRN_NO= AND ROWNUM<=1)
                                                                OR EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS,IAS_WHTRNS_MST WHERE WAREHOUSE_DETAILS.W_CODE=IAS_WHTRNS_MST.T_W_CODE AND IAS_WHTRNS_MST.F_W_CODE=IAS_ITEM_SERIALNO.W_CODE AND WAREHOUSE_DETAILS.CONN_BRN_NO= AND ROWNUM<=1))'',''PK_MV_ITEM_SERIAL'',''DOC_SER,I_CODE,SERIALNO'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',40,1, NULL ,'' WHERE NOT
 EXISTS(SELECT 1 FROM IAS_ITEM_SERIALNO WHERE DOC_SER=MV_IAS_ITEM_SERIALNO.DOC_SER AND I_CODE=MV_IAS_ITEM_SERIALNO.I_CODE AND SERIALNO=MV_IAS_ITEM_SERIALNO.SERIALNO AND ROWNUM<=1)'',0,1, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 790, NULL ,:b1,''IAS_DRIVERS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',41,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 800, NULL ,:b1,''VENDOR_CLASS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',42,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 801, NULL ,:b1,''VENDOR_GROUP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',43,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 810, NULL ,:b1,''IAS_VENDOR_DEGREE'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',44,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 820,''MV_V_DETAILS'',:b1,''V_DETAILS'',''WHERE EXISTS(SELECT 1 FROM PRIV_ACC,USER_R WHERE PRIV_ACC.U_ID=USER_R.U_ID AND PRIV_ACC.A_CODE=V_DETAILS.V_A_CODE AND NVL(ADD_FLAG,0)+NVL(VIEW_FLAG,0)>1 AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_VCODE_BR'',''V_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',45,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 821,''MV_VENDOR_CURR'',:b1,''VENDOR_CURR'',''WHERE 1=1'',''PK_MV_VCODE_CURR_BR'',''V_CODE,A_CY'',''CB'',''AD_DATE'',45,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 822,''MV_IAS_PRIV_VENDOR'',:b1,''IAS_PRIV_VENDOR'',''WHERE EXISTS(SELECT 1 FROM V_DETAILS,PRIV_ACC,USER_R WHERE V_DETAILS.V_A_CODE=PRIV_ACC.A_CODE AND PRIV_ACC.U_ID=USER_R.U_ID AND V_DETAILS.V_CODE=IAS_PRIV_VENDOR.V_CODE AND USER_R.CONN_BRN_NO= AND ROWNUM<=1)'',''PK_MV_VCODE_PRIV'',''U_ID,V_CODE,A_CY'',''CB'',''NVL(UP_DATE,AD_DATE)'',45,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 860,''MV_IAS_ACTVTY_GROUP'',:b1,''IAS_ACTVTY_GROUP'', NULL ,''IASACTVGRPMV_PK'',''GROUP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',48,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 861,''MV_IAS_ACTVTY'',:b1,''IAS_ACTVTY'', NULL ,''IASACTVMV_PK'',''ACTV_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',48,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 862,''MV_IAS_PRIV_ACTVTY'',:b1,''IAS_PRIV_ACTVTY'', NULL ,''IASPRVACTVMV_PK'',''U_ID,ACTV_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',48,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES (
 863,''MV_IAS_ACTV_TREE'',:b1,''IAS_ACTV_TREE'', NULL ,''IASACTVTREEMV_PK'',''ACTV_NO, ACTV_TREE'',''CB'',''NVL(UP_DATE,AD_DATE)'',48,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 868, NULL ,:b1,''IAS_QUT_PRM_GRP_MST'', NULL ,''IASQUTPRMGRPMSTMV_PK'',''PRM_GRP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',49,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 869, NULL ,:b1,''IAS_QUT_PRM_GRP_DTL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',49,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 870,''MV_IAS_QUT_PRM_MST'',:b1,''IAS_QUT_PRM_MST'','' WHERE NVL(INACTIVE,0)=0 '',''MV_QUT_PRM_PK'',''QUOT_SER'',''CB'',''NVL(UP_DATE,AD_DATE)'',49,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_QUT_PRM_MST WHERE QUOT_SER=MV_IAS_QUT_PRM_MST.QUOT_SER AND ROWNUM<=1)'',1,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_QUT_PRM_MST WHERE QUOT_SER=IAS_QUT_PRM_MST.QUOT_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 871,''MV_IAS_QUT_PRM_DTL'',''ROWID'',''IAS_QUT_PRM_DTL'','' WHERE EXISTS(SELECT 1 FROM MV_IAS_QUT_PRM_MST WHERE QUOT_SER=IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)'', NULL ,''QUOT_SER'',''CB'', NULL ,49,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_QUT_PRM_DTL WHERE QUOT_SER=MV_IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)'',1,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_QUT_PRM_DTL WHERE QUOT_SER=IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 872,''MV_IAS_QUT_PRM_SUB_DTL'',''ROWID'',''IAS_QUT_PRM_SUB_DTL'','' WHERE EXISTS(SELECT 1 FROM MV_IAS_QUT_PRM_MST WHERE QUOT_SER=IAS_QUT_PRM_SUB_DTL.QUOT_SER AND ROWNUM<=1)'', NULL ,''QUOT_SER'',''CB'', NULL ,49,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_QUT_PRM_SUB_DTL WHERE QUOT_SER=MV_IAS_QUT_PRM_SUB_DTL.QUOT_SER AND ROWNUM<=1)'',1,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_QUT_PRM_SUB_DTL WHERE QUOT_SER=IAS_QUT_PRM_SUB_DTL.QUOT_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 880,''MV_IAS_POINT_TYP_MST'',:b1,''IAS_POINT_TYP_MST'', NULL ,''MV_IAS_POINT_CLCMST_PK'',''POINT_TYP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',50,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 881,''MV_IAS_POINT_TYP_CALC_DTL'',:b1,''IAS_POINT_TYP_CALC_DTL'', NULL ,''MV_IAS_POINT_CLCDTL_PK'',''POINT_TYP_NO,RCRD_NO'',''CB'',''N
VL(UP_DATE,AD_DATE)'',50,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 882,''MV_IAS_POINT_TYP_RPLC_DTL'',:b1,''IAS_POINT_TYP_RPLC_DTL'', NULL ,''MV_IAS_POIN_TYP_RPLC_PK'',''POINT_TYP_NO,RCRD_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',50,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 883,''MV_IAS_CARD_SAL'',:b1,''IAS_CARD_SAL'', NULL ,''MV_IAS_CARD_SAL_PK'',''CRD_NO'',''CB'
',''NVL(UP_DATE,AD_DATE)'',50,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 890,''MV_IAS_CASH_CUSTMR_GRP'',:b1,''IAS_CASH_CUSTMR_GRP'', NULL ,''MV_IAS_CASH_CST_GRP_PK'',''CUST_GRP_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',60,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 891,''MV_IAS_CASH_CUSTMR'',:b1,''IAS_CASH_CUSTMR'', NULL ,''MV_IAS_CASH_CUSTMR_PK'',''CUST_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',60,0, NULL , NULL ,1,1, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 900,''MV_GNR_TAX_CODE_MST'',:b1,''GNR_TAX_CODE_MST'', NULL ,''MV_GNR_TAX_CODE_MST_PK'',''TAX_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 901,''MV_GNR_TAX_CODE_DTL'',:b1,''GNR_TAX_CODE_DTL'', NULL ,''MV_GNR_TAX_CODE_DTL_PK'',''TAX_NO, AGNCY_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 902,''MV_GNR_TAX_SLICE'',:b1,''GNR_TAX_SLICE'', NULL ,''MV_GNR_TAX_SLICE_PK'',''SLICE_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,1,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 903,''MV_GNR_TAX_TYP_CLC_MST'',:b1,''GNR_TAX_TYP_CLC_MST'', NULL ,''MV_GNR_TAX_TYP_CLC_MST_PK'',''CLC_TYP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 904,''MV_GNR_TAX_TYP_CLC_DTL'',:b1,''GNR_TAX_TYP_CLC_DTL'', NULL ,''MV_GNR_TAX_TYP_CLC_DTL_PK'',''CLC_TYP_NO,TAX_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 905,''MV_GNR_TAX_TYP_CLC_BRN'',:b1,''GNR_TAX_TYP_CLC_BRN'', NULL ,''MV_GNR_TAX_TYP_CLC_BRN_PK'',''CLC_TYP_NO,BRN_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 906,''MV_GNR_TAX_ITM'',:b1,''GNR_TAX_ITM'', NULL ,''MV_GNR_TAX_ITM_PK'',''I_CODE,TAX_NO,AGNCY_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 907,''MV_GNR_TAX_INPT'',:b1,''GNR_TAX_INPT'', NULL ,''MV_GNR_TAX_INPT_PK'',''INPT_TYP,INPT_CODE,TAX_NO,AGNCY_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 908,''MV_GLS_TAX_ACC'',:b1,''GLS_TAX_ACC'', NULL ,''MV_GLS_TAX_ACC_PK'',''A_CODE,TAX_NO,AGNCY_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCR
D_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 920,''MV_IAS_INSRNCE_CLSS_MDCL_NET'',:b1,''IAS_INSRNCE_CLSS_MDCL_NET'', NULL ,''MV_IAS_INSRNCE_CLSSMDCLNET_PK'',''INS_CMP_NO,CLSS_NO,MDCL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 921,''MV_IAS_BNFCRS'',:b1,''IAS_BNFCRS'', NULL ,''MV_IAS_BNFCRS_PK'',''BNF_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 922,''MV_IAS_INSRNCE_CMP'',:b1,''IAS_INSRNCE_CMP'', NULL ,''MV_IAS_INSRNCE_CMP_PK'',''INS_CMP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 923,''MV_IAS_INSRNCE_CMP_CLSS'',:b1,''IAS_INSRNCE_CMP_CLSS'', NULL ,''MV_IAS_INSRNCE_CMP_CLSS_PK'',''INS_CMP_NO,CLSS_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 924,''MV_IAS_INSRNCE_CLSS_ITM_TYP'',:b1,''IAS_INSRNCE_CLSS_ITM_TYP'', NULL ,''MV_IAS_INSRNCE_CLSS_ITM_TYP_PK'',''INS_CMP_NO,CLSS_NO,ITEM_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 925,''MV_IAS_INSRNCE_CLSS_LMT_DOC'',:b1,''IAS_INSRNCE_CLSS_LMT_DOC'', NULL ,''MV_IAS_INSRNCE_CLSS_LMT_DOC_PK'',''INS_CMP_NO,CLSS_NO,RLTN_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 926,''MV_IAS_INSRNCE_CLSS_LMT_MNTH'',:b1,''IAS_INSRNCE_CLSS_LMT_MNTH'', NULL ,''MV_IAS_INSRNCE_CLSS_LMT_MNTH_PK'',''INS_CMP_NO,CLSS_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 927,''MV_IAS_MEDICAL_NET'',:b1,''IAS_MEDICAL_NET'', NULL ,''MV_IAS_MEDICAL_NET_PK'',''MDCL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 928,''MV_IAS_INSRNCE_CARD'',:b1,''IAS_INSRNCE_CARD'', NULL ,''MV_IAS_INSRNCE_CARD_PK'',''INS_CMP_NO,BNF_NO,PRSON_CARD_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 929,''MV_IAS_INSRNCE_CARD_CHRONIC'',:b1,''IAS_INSRNCE_CARD_CHRONIC'', NULL ,''MV_IASINSRNCECARDCHRONIC_PK'',''INS_CMP_NO,PRSON_CARD_NO,I_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 930,''MV_IAS_INSRNCE_ITM_GRP_MST'',:b1,''IAS_INSRNCE_ITM_GRP_MST'', NULL ,''MV_IASINSRNCITMGRPMST_PK'',''INS_GRP_NO'',''CB'',''NVL(UP_DAT
E,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 931,''MV_IAS_INSRNCE_ITM_GRP_DTL'',:b1,''IAS_INSRNCE_ITM_GRP_DTL'', NULL , NULL , NULL ,''CB'', NULL ,52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 10, NULL ,:b1,''IAS_BILL_MST'', NULL ,''PK_REP_TMP_BILLS'',''BILL_SER'',''BC'', NULL ,1,0,''AND NVL(BILL_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_BILL_MST_BR WHERE BILL_SER=IAS_BILL_MST_TMP.BILL_SER AND ROWNUM<=1) AND NVL(STAND_BY,0)=0 AND BILL_DATE <= P_DATE'',0,0,'' AND NVL(STAND_BY,0)=0 AND BILL_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 20, NULL ,''ROWID'',''IAS_BILL_DTL'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,1,0,''AND NOT EXISTS (SELECT 1 FROM IAS_BILL_MST_BR WHERE BILL_SER=IAS_BILL_DTL_BR.BILL_SER AND NVL(BILL_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS (SELECT 1 FROM IAS_BILL_DTL_BR WHERE BILL_SER=IAS_BILL_DTL_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_BR WHERE BILL_SER=IAS_BILL_DTL_TMP.BILL_SER AND NVL(STAND_BY,0)=0 AND BILL_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_BILL_MST WHERE BILL_SER=IAS_BILL_DTL.BILL_SER AND NVL(STAND_BY,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND BILL_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 21, NULL ,''ROWID'',''OTHER_CHARGES'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,1,0, NULL ,''WHERE BILL_TYPE=1 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_BR WHERE BILL_SER=OTHER_CHARGES_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND BILL_TYPE=1 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 22, NULL ,''ROWID'',''OTHER_CHARGES_ITEMS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,1,0, NULL ,''WHERE BILL_TYPE=1 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_BR WHERE BILL_SER=OTHER_CHARGES_ITEMS_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND BILL_TYPE=1 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 23, NULL ,''ROWID'',''INSTALLMENT'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYPE=4 AND NOT EXISTS(SELECT 1 FROM INSTALLMENT_BR WHERE BILL_SER=INSTALLMENT_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=4 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD ) 
 VALUES ( 24, NULL ,''ROWID'',''IAS_POINT_CALC_TRNS'', NULL , NULL ,''TRNS_NO'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYP=1 AND NOT EXISTS(SELECT 1 FROM IAS_POINT_CALC_TRNS_BR WHERE DOC_SRL=IAS_POINT_CALC_TRNS_TMP.DOC_SRL AND ROWNUM<=1) AND TRNS_DATE <= P_DATE'',0,0,'' AND DOC_TYP=1 AND TRNS_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 25, NULL ,''ROWID'',''GNR_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYPE=4 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_ITM_M
OVMNT_BR WHERE DOC_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_BR WHERE BILL_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=4 AND EXISTS ( SELECT 1 FROM IAS_BILL_MST WHERE BILL_SER=GNR_TAX_ITM_MOVMNT.DOC_SER AND NVL(STAND_BY,0)=0 AND ROWNUM<=1) AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 26, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYPE=4 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT_BR WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=4 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 30, NULL ,:b1,''IAS_RT_BILL_MST'', NULL ,''PK_REP_TMP_RT_BILLS'',''RT_BILL_SER'',''BC'', NULL ,2,0,''AND NVL(RT_BILL_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RT_BILL_MST_BR WHERE RT_BILL_SER=IAS_RT_BILL_MST_TMP.RT_BILL_SER AND ROWNUM<=1) AND NVL(STAND_BY,0)=0 AND RT_BILL_DATE <= P_DATE'',0,0,'' AND NVL(STAND_BY,0)=0 AND RT_BILL_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 40, NULL ,''ROWID'',''IAS_RT_BILL_DTL'', NULL , NULL ,''RT_BILL_SER'',''BC'', NULL ,2,0,''AND NOT EXISTS(SELECT 1 FROM IAS_RT_BILL_MST_BR WHERE RT_BILL_SER=IAS_RT_BILL_DTL_BR.RT_BILL_SER AND NVL(RT_BILL_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RT_BILL_DTL_BR WHERE RT_BILL_SER=IAS_RT_BILL_DTL_TMP.RT_BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RT_BILL_MST_BR WHERE RT_BILL_SER=IAS_RT_BILL_DTL_TMP.RT_BILL_SER AND NVL(STAND_BY,0)=0 AND RT_BILL_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_RT_BILL_MST WHERE RT_BILL_SER=IAS_RT_BILL_DTL.RT_BILL_SER AND NVL(STAND_BY,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND RT_BILL_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 41, NULL ,''ROWID'',''OTHER_CHARGES'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,2,0, NULL ,''WHERE BILL_TYPE=3 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_BR WHERE BILL_SER=OTHER_CHARGES_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND BILL_TYPE=3 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 42, NULL ,''ROWID'',''OTHER_CHARGES_ITEMS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,2,0, NULL ,''WHERE BILL_TYPE=3 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_BR WHERE BILL_SER=OTHER_CHARGES_ITEMS_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND BILL_TYPE=3 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 43, NULL ,''ROWID'',''INSTALLMENT'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,2,0, NULL ,''WHERE DOC_TYPE=3 AND NOT EXISTS(SELECT 1 FROM INSTALLMENT_BR WHERE BILL_SER=INSTALLMENT_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=3 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 44, NULL ,''ROWID'',''IAS_POINT_CALC_TRNS'', NULL , NULL ,''TRNS_NO'',''BC'', NUL
L ,2,0, NULL ,''WHERE DOC_TYP=1 AND NOT EXISTS(SELECT 1 FROM IAS_POINT_CALC_TRNS_BR WHERE DOC_SRL=IAS_POINT_CALC_TRNS_TMP.DOC_SRL AND ROWNUM<=1) AND TRNS_DATE <= P_DATE'',0,0,'' AND DOC_TYP=1 AND TRNS_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 45, NULL ,''ROWID'',''GNR_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,2,0, NULL ,''WHERE DOC_TYPE=5 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_ITM_MOVMNT_BR WHERE DOC_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RT_BILL_MST_BR WHERE RT_BILL_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=5 AND EXISTS ( SELECT 1 FROM IAS_RT_BILL_MST WHERE RT_BILL_SER=GNR_TAX_ITM_MOVMNT.DOC_SER AND NVL(STAND_BY,0)=0 AND ROWNUM<=1) AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 46, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,2,0, NULL ,''WHERE DOC_TYPE=5 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT_BR WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=5 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 60, NULL ,:b1,''MASTER_OUT_BILLS'', NULL ,''PK_TMP_OUT_BILLS'',''OUT_SER'',''BC'', NULL ,3,0,''AND NVL(OUT_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85'',''WHERE NOT EXISTS(SELECT 1 FROM MASTER_OUT_BILLS_BR WHERE OUT_SER=MASTER_OUT_BILLS_TMP.OUT_SER AND ROWNUM<=1) AND NVL(STAND_BY,0)=0 AND OUT_DATE <= P_DATE'',0,0,'' AND NVL(STAND_BY,0)=0 AND OUT_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 61, NULL ,''ROWID'',''DETAIL_OUT_BILLS'', NULL , NULL ,''OUT_SER'',''BC'', NULL ,3,0,''AND NOT EXISTS (SELECT 1 FROM MASTER_OUT_BILLS_BR WHERE OUT_SER=IAS_BILL_DTL_BR.OUT_SER AND NVL(OUT_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS (SELECT 1 FROM DETAIL_OUT_BILLS_BR WHERE OUT_SER=DETAIL_OUT_BILLS_TMP.OUT_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM MASTER_OUT_BILLS_BR WHERE OUT_SER=DETAIL_OUT_BILLS_TMP.OUT_SER AND NVL(STAND_BY,0)=0 AND OUT_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM MASTER_OUT_BILLS WHERE OUT_SER=DETAIL_OUT_BILLS.OUT_SER AND NVL(STAND_BY,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND OUT_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 70, NULL ,:b1,''IAS_RET_BILL_MST'', NULL ,''PK_RET_BILLS_TMP'',''RET_SER'',''BC'', NULL ,4,0,''AND NVL(RET_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RET_BILL_MST_BR WHERE RET_SER=IAS_RET_BILL_MST_TMP.RET_SER AND ROWNUM<=1) AND NVL(STAND_BY,0)=0 AND RET_DATE <= P_DATE'',0,0,'' AND NVL(STAND_BY,0)=0 AND RET_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 71, NULL ,''ROWID'',''IAS_RET_BILL_DTL'', NULL , NULL ,''RET_SER'',''BC'', NULL ,4,0,''AND NOT EXISTS(SELECT 1 FROM IAS_RET_BILL_MST_BR WHERE RET_SER=IAS_RET_BILL_DTL_BR.RET_SER AND NVL(RET_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RET_BILL_DTL_BR WHERE RET_SER=IAS_RET_BILL_DTL_TMP.RET_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RET_BILL_MST_BR WHERE RET_SER=IAS_RET_BILL_DTL_TMP.RET_SER AND NVL(STAND_BY,0
)=0 AND RET_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_RET_BILL_MST WHERE RET_SER=IAS_RET_BILL_DTL.RET_SER AND NVL(STAND_BY,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND RET_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 90, NULL ,:b1,''VOUCHERS'', NULL , NULL ,''V_SER'',''BC'', NULL ,6,0,''AND NVL(VOUCHER_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85'',''WHERE NVL(STAND_BY,0)=0 AND NOT EXISTS(SELECT 1 FROM VOUCHERS WHERE V_SER=VOUCHERS_TMP.V_SER AND ROWNUM<=1) AND VOUCHER_DATE <= P_DATE'',0,0,'' AND NVL(STAND_BY,0)=0 AND VOUCHER_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 100, NULL ,:b1,''VOUCHER_DETAIL'', NULL ,''VD_TMP_PK'',''V_SER'',''BC'', NULL ,6,0,''AND NVL(EXTERNAL_POST,0)=85 AND NOT EXISTS(SELECT 1 FROM VOUCHERS WHERE V_SER=VOUCHER_DETAIL.V_SER AND NVL(VOUCHER_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM VOUCHER_DETAIL WHERE V_SER=VOUCHER_DETAIL_TMP.V_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM VOUCHERS WHERE V_SER=VOUCHER_DETAIL_TMP.V_SER AND NVL(STAND_BY,0)=0 AND VOUCHER_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM VOUCHERS WHERE V_SER=VOUCHER_DETAIL.V_SER AND NVL(STAND_BY,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND VOUCHER_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 101, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,6,0, NULL ,''WHERE DOC_TYPE IN (2,3) AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE IN (2,3) AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 110, NULL ,''ROWID'',''IAS_CARGO_SERVICES'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,7,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_CARGO_SERVICES_BR WHERE BILL_SER=IAS_CARGO_SERVICES_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_BR WHERE BILL_SER=IAS_CARGO_SERVICES_TMP.BILL_SER AND BILL_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_BILL_MST WHERE BILL_SER=IAS_CARGO_SERVICES.BILL_SER AND BILL_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 120, NULL ,:b1,''IAS_OUT_REQUEST_MST'', NULL , NULL ,''OUT_REQ_SER'',''BC'', NULL ,8,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_OUT_REQUEST_MST WHERE OUT_REQ_SER=IAS_OUT_REQUEST_MST_TMP.OUT_REQ_SER AND ROWNUM<=1) AND OUT_REQ_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0,'' AND OUT_REQ_DATE <= P_DATE AND NVL(APPROVED,0)=1''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_
INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 130, NULL ,''ROWID'',''IAS_OUT_REQUEST_DTL'', NULL , NULL ,''OUT_REQ_SER'',''BC'', NULL ,8,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_OUT_REQUEST_DTL_TMP WHERE OUT_REQ_SER=IAS_OUT_REQUEST_DTL.OUT_REQ_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_OUT_REQUEST_DTL WHERE OUT_REQ_SER=IAS_OUT_REQUEST_DTL_TMP.OUT_REQ_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_OUT_REQUEST_MST WHERE OUT_REQ_SER=IAS_OUT_REQUEST_DTL_TMP.OUT_REQ_SER AND OUT_REQ_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FR
OM IAS_OUT_REQUEST_MST WHERE OUT_REQ_SER=IAS_OUT_REQUEST_DTL.OUT_REQ_SER AND NVL(EXTERNAL_POST,0)=85 AND OUT_REQ_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 131, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,8,0,''AND DOC_TYP=31 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=31 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_OUT_REQUEST_MST WHERE OUT_REQ_SER=S_APPRVD_MOV_TMP.DOC_SER AND OUT_REQ_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=31 AND EXISTS ( SELECT 1 FROM IAS_OUT_REQUEST_MST WHERE OUT_REQ_SER=S_APPRVD_MOV.DOC_SER AND OUT_REQ_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 140, NULL ,:b1,''ITEMS_ORDER'', NULL , NULL ,''I_CODE,BRN_NO'',''BC'', NULL ,9,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM ITEMS_ORDER WHERE I_CODE=ITEMS_ORDER_TMP.I_CODE AND BRN_NO=ITEMS_ORDER_TMP.BRN_NO AND ROWNUM<=1) AND AD_DATE <= P_DATE'',0,0,'' AND AD_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 141, NULL ,:b1,''IAS_WHTRNS_MULTI_MST'', NULL ,''PK_TMP_WHTRNS_MULTI_MST'',''TR_SER'',''BC'', NULL ,48,0,'' AND NVL(EXTERNAL_POST,0)=85 '',''WHERE NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MULTI_MST WHERE TR_SER=IAS_WHTRNS_MULTI_MST_TMP.TR_SER AND ROWNUM<=1) AND TR_DATE <= P_DATE'',0,0,'' AND TR_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 142, NULL ,''ROWID'',''IAS_WHTRNS_MULTI_DTL'', NULL , NULL ,''TR_SER'',''BC'', NULL ,48,0,'' AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_MULTI_MST WHERE TR_SER=IAS_WHTRNS_MULTI_DTL.TR_SER AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_MULTI_DTL WHERE TR_SER=IAS_WHTRNS_MULTI_DTL_TMP.TR_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MULTI_MST WHERE TR_SER=IAS_WHTRNS_MULTI_DTL_TMP.TR_SER AND TR_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MULTI_MST WHERE TR_SER=IAS_WHTRNS_MULTI_DTL.TR_SER AND NVL(EXTERNAL_POST,0)=85 AND TR_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 150, NULL ,:b1,''IAS_WHTRNS_MST'', NULL ,''PK_TMP_WHTRNS_MST'',''TR_SER'',''BC'', NULL ,10,0,''AND TR_INOUT_TYPE=1 AND NVL(TR_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND NVL(PROCESSED,0)=0 '',''WHERE TR_INOUT_TYPE=1 AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=IAS_WHTRNS_MST_TMP.TR_SER AND ROWNUM<=1) AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST WHERE TR_SER=IAS_WHTRNS_MST_TMP.TR_SER AND ROWNUM<=1) AND NVL(HUNG,0)=0 AND TR_DATE <= P_DATE'',0,0,'' AND TR_INOUT_TYPE=1 AND NVL(HUNG,0)=0 AND TR_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 151, NULL ,''ROWID'',''IAS_WHTRNS_DTL'', NULL , NULL ,''TR_SER'',''BC'', NULL ,10,0,''AND TR_INOUT_TYPE=1 AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=IAS_WHTRNS_DTL_BR.TR_SER AND NVL(TR_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE TR_INOUT_TYPE=1 AND NOT EXISTS (SELECT 1 FRO
M IAS_WHTRNS_DTL_BR WHERE TR_SER=IAS_WHTRNS_DTL_TMP.TR_SER AND ROWNUM<=1) AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_DTL WHERE TR_SER=IAS_WHTRNS_DTL_TMP.TR_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=IAS_WHTRNS_DTL_TMP.TR_SER AND NVL(HUNG,0)=0 AND TR_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND TR_INOUT_TYPE=1 AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MST WHERE TR_SER=IAS_WHTRNS_DTL.TR_SER AND NVL(HUNG,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND TR_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 153, NULL ,:b1,''IAS_WHTRNS_MST'', NULL ,''PK_TMP_WHTRNS_MST'',''TR_SER'',''BC'', NULL ,11,0,''AND TR_INOUT_TYPE=2 AND NVL(TR_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND NVL(PROCESSED,0)=0 '',''WHERE TR_INOUT_TYPE=2 AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=IAS_WHTRNS_MST_TMP.TR_SER AND ROWNUM<=1) AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST WHERE TR_SER=IAS_WHTRNS_MST_TMP.TR_SER AND ROWNUM<=1) AND NVL(HUNG,0)=0 AND TR_DATE <= P_DATE'',0,0,'' AND TR_INOUT_TYPE=2 AND NVL(HUNG,0)=0 AND TR_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 154, NULL ,''ROWID'',''IAS_WHTRNS_DTL'', NULL , NULL ,''TR_SER'',''BC'', NULL ,11,0,''AND TR_INOUT_TYPE=2 AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=IAS_WHTRNS_DTL_BR.TR_SER AND NVL(TR_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE TR_INOUT_TYPE=2 AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_DTL_BR WHERE TR_SER=IAS_WHTRNS_DTL_TMP.TR_SER AND ROWNUM<=1) AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_DTL WHERE TR_SER=IAS_WHTRNS_DTL_TMP.TR_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=IAS_WHTRNS_DTL_TMP.TR_SER AND NVL(HUNG,0)=0 AND TR_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND TR_INOUT_TYPE=2 AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MST WHERE TR_SER=IAS_WHTRNS_DTL.TR_SER AND NVL(HUNG,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND TR_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 155, NULL ,''ROWID'',''INV_WRHS_TRNSFR_EXPNS'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,11,0,''AND TR_INOUT_TYPE=2 AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=INV_WRHS_TRNSFR_EXPNS_BR.DOC_SER AND NVL(TR_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE TR_INOUT_TYPE=2 AND NOT EXISTS (SELECT 1 FROM INV_WRHS_TRNSFR_EXPNS_BR WHERE DOC_SER=INV_WRHS_TRNSFR_EXPNS_TMP.DOC_SER AND ROWNUM<=1) AND NOT EXISTS (SELECT 1 FROM INV_WRHS_TRNSFR_EXPNS WHERE DOC_SER=INV_WRHS_TRNSFR_EXPNS_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=INV_WRHS_TRNSFR_EXPNS_TMP.DOC_SER AND NVL(HUNG,0)=0 AND TR_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND TR_INOUT_TYPE=2 AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MST WHERE TR_SER=INV_WRHS_TRNSFR_EXPNS.DOC_SER AND NVL(HUNG,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND TR_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 156, NULL ,:b1,''MASTER_INV'', NULL , NULL ,''INV_SER'',''BC'', NULL ,12,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM MASTER_INV WHERE INV_SER=MASTER_INV_TMP.INV_SER AND ROWNUM<=1) AND INV_DATE <= P_DATE'',0,0,'' AND INV_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 157, NULL ,''ROWID'',''DETAIL_INV'', NULL , NULL ,''INV_SER'',''BC'', NULL ,12,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM DETAIL_INV WHERE INV_SER=DETAIL_INV_T
MP.INV_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM MASTER_INV WHERE INV_SER=DETAIL_INV_TMP.INV_SER AND INV_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM MASTER_INV WHERE INV_SER=DETAIL_INV.INV_SER AND NVL(EXTERNAL_POST,0)=85 AND INV_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 160, NULL ,''ROWID'',''IAS_ITM_ATTACH_MOVEMENT'', NULL ,''UQ_ATTCH_BR'',''DOC_SER'',''BC'',''DOC_DATE'',13,0, NULL ,'' WHERE DOC_TYPE IN (1,3,7,8) AND NOT EXISTS(SELECT 1 FROM IAS_ITM_ATTACH_MOVEMENT_BR WHERE DOC_SER=IAS_ITM_ATTACH_MOVEMENT_TMP.DOC_SER AND ROWNUM<=1) AND NOT EXISTS(SELECT 1 FROM IAS_ITM_ATTACH_MOVEMENT WHERE DOC_SER=IAS_ITM_ATTACH_MOVEMENT_TMP.DOC_SER AND ROWNUM<=1) AND NVL(DOC_DATE,P_DATE) <= P_DATE'',0,0,'' AND DOC_TYPE IN (1,3,7,8) AND NVL(DOC_DATE,P_DATE) <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 167, NULL ,''ROWID'',''IAS_AR_TYPS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL , NULL ,0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 168, NULL ,''ROWID'',''IAS_GLRQ_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL , NULL ,0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 170, NULL ,:b1,''IAS_ITEM_SERIALNO'', NULL ,''PK_TSRIL_BR'',''DOC_SER,I_CODE,SERIALNO'',''BC'',''DOC_DATE'',14,0, NULL ,'' WHERE DOC_TYPE IN (1,3,5,6,7,8) AND NOT EXISTS(SELECT 1 FROM IAS_ITEM_SERIALNO_BR WHERE DOC_SER=IAS_ITEM_SERIALNO_TMP.DOC_SER AND ROWNUM<=1) AND NOT EXISTS(SELECT 1 FROM IAS_ITEM_SERIALNO WHERE DOC_SER=IAS_ITEM_SERIALNO_TMP.DOC_SER AND ROWNUM<=1) AND NVL(DOC_DATE,P_DATE) <= P_DATE'',0,0,'' AND DOC_TYPE IN (1,3,5,6,7,8) AND NVL(DOC_DATE,P_DATE) <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 180, NULL ,:b1,''GR_NOTE'', NULL ,''PK_TMP_GR_NOTE'',''G_SER'',''BC'', NULL ,15,0,''AND PI_TYPE=5 AND NVL(GR_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85 '',''WHERE PI_TYPE=5 AND NOT EXISTS(SELECT 1 FROM GR_NOTE_BR WHERE G_Ser=GR_NOTE_TMP.G_Ser AND ROWNUM<=1) AND NOT EXISTS(SELECT 1 FROM GR_NOTE WHERE G_Ser=GR_NOTE_TMP.G_Ser AND ROWNUM<=1) AND NVL(HUNG,0)=0 AND GR_DATE <= P_DATE'',0,0,'' AND NVL(HUNG,0)=0 AND GR_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 181, NULL ,''ROWID'',''GR_DETAIL'', NULL , NULL ,''G_SER'',''BC'', NULL ,15,0,''AND PI_TYPE=5 AND NOT EXISTS (SELECT 1 FROM GR_NOTE_BR WHERE G_SER=GR_DETAIL_BR.G_SER AND NVL(GR_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE PI_TYPE=5 AND NOT EXISTS (SELECT 1 FROM GR_DETAIL_BR WHERE G_SER=GR_DETAIL_TMP.G_SER AND ROWNUM<=1) AND NOT EXISTS (SELECT 1 FROM GR_DETAIL WHERE G_SER=GR_DETAIL_TMP.G_SER AND ROWNUM<=1) AND EXISTS 
( SELECT 1 FROM GR_NOTE_BR WHERE G_SER=GR_DETAIL_TMP.G_SER AND NVL(HUNG,0)=0 AND GR_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM GR_NOTE WHERE G_SER=GR_DETAIL.G_SER AND NVL(HUNG,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND GR_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 182, NULL ,''ROWID'',''GNR_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''B
C'', NULL ,15,0, NULL ,''WHERE DOC_TYPE=8 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_ITM_MOVMNT_BR WHERE DOC_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=8 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 185, NULL ,:b1,''IAS_OUTGOING_MST'', NULL ,''PK_TMP_IAS_OUTGOING_MST'',''OUT_SER'',''BC'', NULL ,20,0,''AND NVL(OUT_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85 '',''WHERE NOT EXISTS(SELECT 1 FROM IAS_OUTGOING_MST_BR WHERE OUT_SER=IAS_OUTGOING_MST_TMP.OUT_SER AND ROWNUM<=1) AND NOT EXISTS(SELECT 1 FROM IAS_OUTGOING_MST WHERE OUT_SER=IAS_OUTGOING_MST_TMP.OUT_SER AND ROWNUM<=1) AND NVL(HUNG,0)=0 AND OUT_DATE <= P_DATE'',0,0,'' AND NVL(HUNG,0)=0 AND OUT_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 186, NULL ,''ROWID'',''IAS_OUTGOING_DTL'', NULL , NULL ,''OUT_SER'',''BC'', NULL ,20,0,''AND NOT EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_BR WHERE OUT_SER=IAS_OUTGOING_DTL_BR.OUT_SER AND NVL(OUT_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS (SELECT 1 FROM IAS_OUTGOING_DTL_BR WHERE OUT_SER=IAS_OUTGOING_DTL_TMP.OUT_SER AND ROWNUM<=1) AND NOT EXISTS (SELECT 1 FROM IAS_OUTGOING_DTL WHERE OUT_SER=IAS_OUTGOING_DTL_TMP.OUT_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_OUTGOING_MST_BR WHERE OUT_SER=IAS_OUTGOING_DTL_TMP.OUT_SER AND NVL(HUNG,0)=0 AND OUT_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_OUTGOING_MST WHERE OUT_SER=IAS_OUTGOING_DTL.OUT_SER AND NVL(HUNG,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND OUT_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 187, NULL ,''ROWID'',''INSTALLMENT'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,20,0, NULL ,''WHERE DOC_TYPE=9 AND NOT EXISTS(SELECT 1 FROM INSTALLMENT_BR WHERE BILL_SER=INSTALLMENT_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=9 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 200, NULL ,:b1,''BIN_DETAILS'', NULL , NULL ,''W_CODE,B_CODE'',''BC'', NULL ,17,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM BIN_DETAILS WHERE W_CODE=BIN_DETAILS_TMP.W_CODE AND B_CODE=BIN_DETAILS_TMP.B_CODE AND ROWNUM<=1)'',0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 201, NULL ,:b1,''ITEM_BIN'', NULL , NULL ,''I_CODE,W_CODE,B_CODE'',''BC'', NULL ,17,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM ITEM_BIN WHERE I_CODE=ITEM_BIN_TMP.I_CODE AND W_CODE=ITEM_BIN_TMP.W_CODE AND B_CODE=ITEM_BIN_TMP.B_CODE AND ROWNUM<=1)
                                                          AND EXISTS(SELECT 1 FROM IAS_ITM_MST WHERE I_CODE=ITEM_BIN_TMP.I_CODE AND ROWNUM<=1)'',0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 210, NULL ,:b1,''QUOTATION'', NULL , NULL ,''QUOT_SER'',''BC'', NULL ,18,0, NULL ,'' WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM QUOTATION WHERE QUOT_SER=QUOTATION_TMP.QUOT_SER AND ROWNUM<=1) AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0,'' AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 211, NULL ,''ROWID'',''QU
OTATION_DETAIL'', NULL , NULL ,''QUOT_SER'',''BC'', NULL ,18,0,'' AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM QUOTATION_DETAIL_TMP WHERE QUOT_SER=QUOTATION_DETAIL.QUOT_SER AND ROWNUM<=1)'','' WHERE NOT EXISTS(SELECT 1 FROM QUOTATION_DETAIL WHERE QUOT_SER=QUOTATION_DETAIL_TMP.QUOT_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=QUOTATION_DETAIL_TMP.QUOT_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=QUOTATION_DETAIL.QUOT_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 212, NULL ,''ROWID'',''GNR_RQ_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,18,0, NULL ,''WHERE DOC_TYPE=52 AND NOT EXISTS(SELECT 1 FROM GNR_RQ_TAX_ITM_MOVMNT WHERE DOC_SER=GNR_RQ_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=52 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 213, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,18,0, NULL ,''WHERE DOC_TYPE=52 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT_BR WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=52 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 214, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,18,0,''AND DOC_TYP=52 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=52 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=S_APPRVD_MOV_TMP.DOC_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=52 AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=S_APPRVD_MOV.DOC_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 215, NULL ,''ROWID'',''OTHER_CHARGES_OTHRS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,18,0,''AND BILL_TYPE=52 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM OTHER_CHARGES_OTHRS_TMP WHERE BILL_SER=OTHER_CHARGES_OTHRS.BILL_SER AND ROWNUM<=1)'',''WHERE BILL_TYPE=52 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_OTHRS WHERE BILL_SER=OTHER_CHARGES_OTHRS_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=OTHER_CHARGES_OTHRS_TMP.BILL_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND BILL_TYPE=52 AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=OTHER_CHARGES_OTHRS.BILL_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 216, NULL ,''ROWID'',''OTHER_CHARGES_ITEMS_OTHRS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,18,0,''AND BILL_TYPE=52 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_OTHRS_TMP WHERE BILL_SER=OTHER_CHARGES_ITEMS_OTHRS.BILL_SER AND ROWNUM<=1)'',''WHERE BILL_TYPE=52 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_OTHRS WHERE BILL_SER=OTHER_CHARGES_ITEMS_OTHRS_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=OTHER_CHARGES_ITEMS_
OTHRS_TMP.BILL_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND BILL_TYPE=52 AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=OTHER_CHARGES_ITEMS_OTHRS.BILL_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 220, NULL ,:b1,''SALES_ORDER'', NULL , NULL ,''ORDER_SER'',''BC'', NULL ,19,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=SALES_ORDER_TMP.ORDER_SER AND ROWNUM<=1) AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0,'' AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 221, NULL ,''ROWID'',''ORDER_DETAIL'', NULL , NULL ,''ORDER_SER'',''BC'', NULL ,19,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM ORDER_DETAIL_TMP WHERE ORDER_SER=ORDER_DETAIL.ORDER_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM ORDER_DETAIL WHERE ORDER_SER=ORDER_DETAIL_TMP.ORDER_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=ORDER_DETAIL_TMP.ORDER_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=ORDER_DETAIL.ORDER_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 222, NULL ,''ROWID'',''IAS_RESERVE_MST'', NULL , NULL ,''DOC_SER_REF'',''BC'', NULL ,19,0,''AND DOC_TYPE=2 AND EXISTS(SELECT 1 FROM IAS_RESERVE_MST_TMP WHERE DOC_SER_REF=IAS_RESERVE_MST.DOC_SER_REF AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RESERVE_MST WHERE DOC_SER=IAS_RESERVE_MST_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=IAS_RESERVE_MST_TMP.DOC_SER_REF AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=IAS_RESERVE_MST.DOC_SER_REF AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 223, NULL ,''ROWID'',''IAS_RESERVE_DTL'', NULL , NULL ,''DOC_SER_REF'',''BC'', NULL ,19,0,'' AND DOC_TYPE=2 AND EXISTS(SELECT 1 FROM IAS_RESERVE_DTL_TMP WHERE DOC_SER_REF=IAS_RESERVE_DTL.DOC_SER_REF AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RESERVE_DTL WHERE DOC_SER=IAS_RESERVE_DTL_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS(SELECT 1 FROM IAS_RESERVE_MST WHERE DOC_SER=IAS_RESERVE_DTL_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=IAS_RESERVE_DTL_TMP.DOC_SER_REF AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=IAS_RESERVE_DTL.DOC_SER_REF AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 224
, NULL ,''ROWID'',''IAS_ITM_ATTACH_OTHRS'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,19,0,''AND DOC_TYPE=2 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_ITM_ATTACH_OTHRS_TMP WHERE DOC_SER=IAS_ITM_ATTACH_OTHRS.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYPE=2 AND NOT EXISTS(SELECT 1 FROM IAS_ITM_ATTACH_OTHRS WHERE DOC_TYPE=2 AND DOC_SER=IAS_ITM_ATTACH_OTHRS_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=IAS_ITM_ATTACH_OTHRS_TMP.DOC_SER A
ND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0,'' AND DOC_TYPE=2 AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=IAS_ITM_ATTACH_OTHRS.DOC_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 225, NULL ,''ROWID'',''GNR_RQ_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,19,0, NULL ,''WHERE DOC_TYPE=53 AND NOT EXISTS(SELECT 1 FROM GNR_RQ_TAX_ITM_MOVMNT WHERE DOC_SER=GNR_RQ_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=53 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 226, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,19,0, NULL ,''WHERE DOC_TYPE=53 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT_BR WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=53 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 227, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,19,0,'' AND DOC_TYP=53 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=53 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=S_APPRVD_MOV_TMP.DOC_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=53 AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=S_APPRVD_MOV.DOC_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 228, NULL ,''ROWID'',''OTHER_CHARGES_OTHRS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,19,0,'' AND BILL_TYPE=53 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM OTHER_CHARGES_OTHRS_TMP WHERE BILL_SER=OTHER_CHARGES_OTHRS.BILL_SER AND ROWNUM<=1)'',''WHERE BILL_TYPE=53 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_OTHRS WHERE BILL_SER=OTHER_CHARGES_OTHRS_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=OTHER_CHARGES_OTHRS_TMP.BILL_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND BILL_TYPE=53 AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=OTHER_CHARGES_OTHRS.BILL_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 229, NULL ,''ROWID'',''OTHER_CHARGES_ITEMS_OTHRS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,19,0,'' AND BILL_TYPE=53 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_OTHRS_TMP WHERE BILL_SER=OTHER_CHARGES_ITEMS_OTHRS.BILL_SER AND ROWNUM<=1)'',''WHERE BILL_TYPE=53 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_OTHRS WHERE BILL_SER=OTHER_CHARGES_ITEMS_OTHRS_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=OTHER_CHARGES_ITEMS_OTHRS_TMP.BILL_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND BILL_TYPE=53 AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=OTHER_CHARGES_ITEMS_OTHRS.BILL_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME
,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 230, NULL ,:b1,''MASTER_JOURNAL_V'', NULL , NULL ,''J_SER'',''BC'', NULL ,21,0,''AND NVL(J_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85'',''WHERE NVL(STAND_BY,0)=0 AND NOT EXISTS(SELECT 1 FROM MASTER_JOURNAL_V WHERE J_SER=MASTER_JOURNAL_V_TMP.J_SER AND ROWNUM<=1) AND J_DATE <= P_DATE'',0,0,'' AND NVL(STAND_BY,0)=0 AND J_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 231, NULL ,:b1,''DETAIL_JOURNAL_V'', NULL ,''JD_TMP_PK'',''J_SER'',''BC'', NULL ,21,0,''AND NVL(EXTERNAL_POST,0)=85 AND NOT EXISTS(SELECT 1 FROM MASTER_JOURNAL_V WHERE J_SER=DETAIL_JOURNAL_V_TMP.J_SER AND NVL(J_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM DETAIL_JOURNAL_V WHERE J_SER=DETAIL_JOURNAL_V_TMP.J_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM MASTER_JOURNAL_V WHERE J_SER=DETAIL_JOURNAL_V_TMP.J_SER AND NVL(STAND_BY,0)=0 AND J_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM MASTER_JOURNAL_V WHERE J_SER=DETAIL_JOURNAL_V.J_SER AND NVL(STAND_BY,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND J_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 232, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,21,0, NULL ,''WHERE DOC_TYPE=1 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=1 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 240, NULL ,:b1,''IAS_CASH_CUSTMR'', NULL , NULL ,''CUST_CODE'',''BC'', NULL ,30,0,''AND EXISTS(SELECT 1 FROM IAS_CASH_CUSTMR_TMP WHERE CUST_CODE=IAS_CASH_CUSTMR.CUST_CODE AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_CASH_CUSTMR WHERE CUST_CODE=IAS_CASH_CUSTMR_TMP.CUST_CODE AND ROWNUM<=1) '',0,1,''''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 250, NULL ,:b1,''IAS_GR_INCOMING_MST'', NULL , NULL ,''INC_SER'',''BC'', NULL ,35,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=IAS_GR_INCOMING_MST_TMP.INC_SER AND ROWNUM<=1) AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0,'' AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 251, NULL ,''ROWID'',''IAS_GR_INCOMING_DTL'', NULL , NULL ,''INC_SER'',''BC'', NULL ,35,0,'' AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_GR_INCOMING_DTL_TMP WHERE INC_SER=IAS_GR_INCOMING_DTL.INC_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_GR_INCOMING_DTL WHERE INC_SER=IAS_GR_INCOMING_DTL_TMP.INC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=IAS_GR_INCOMING_DTL_TMP.INC_SER AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=IAS_GR_INCOMING_DTL.INC_SER AND NVL(EXTERNAL_POST,0)=85 AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 252, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,35,0,''AND DOC_TYP=32 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP
 WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=32 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=S_APPRVD_MOV_TMP.DOC_SER AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=32 AND EXISTS ( SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=S_APPRVD_MOV.DOC_SER AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 270, NULL ,''ROWID'',''IAS_RQ_JRNL_MST'', NULL , NULL ,''J_SER'',''BC'', NULL ,42,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=IAS_RQ_JRNL_MST_TMP.J_SER AND ROWNUM<=1) AND J_DATE <= P_DATE '','' AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 271, NULL ,''ROWID'',''IAS_RQ_JRNL_DTL'', NULL , NULL ,''J_SER'',''BC'', NULL ,42,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_RQ_JRNL_DTL_TMP WHERE J_SER=IAS_RQ_JRNL_DTL.J_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RQ_JRNL_DTL WHERE J_SER=IAS_RQ_JRNL_DTL_TMP.J_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=IAS_RQ_JRNL_DTL_TMP.J_SER AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=IAS_RQ_JRNL_DTL.J_SER AND NVL(EXTERNAL_POST,0)=85 AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 272, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,42,0,''AND DOC_TYP=85 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=85 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=S_APPRVD_MOV_TMP.DOC_SER AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=85 AND EXISTS ( SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=S_APPRVD_MOV.DOC_SER AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 273, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,42,0, NULL ,''WHERE DOC_TYPE=85 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=85 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 275, NULL ,''ROWID'',''IAS_RQ_VCHR_MST'', NULL , NULL ,''V_SER'',''BC'', NULL ,43,0, NULL ,''WHERE VOUCHER_TYPE=2 AND NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_MST_TMP.V_SER AND ROWNUM<=1) AND VOUCHER_DATE <= P_DATE '','' AND VOUCHER_TYPE=2 AND V
OUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 276, NULL ,''ROWID'',''IAS_RQ_VCHR_DTL'', NULL , NULL ,''V_SER'',''BC'', NULL ,43,0,'' AND VOUCHER_TYPE=2 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_RQ_VCHR_DTL
_TMP WHERE V_SER=IAS_RQ_VCHR_DTL.V_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RQ_VCHR_DTL WHERE V_SER=IAS_RQ_VCHR_DTL_TMP.V_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_DTL_TMP.V_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND VOUCHER_TYPE=2 AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_DTL.V_SER AND NVL(EXTERNAL_POST,0)=85 AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 279, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,43,0,''AND DOC_TYP=93 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=93 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=S_APPRVD_MOV_TMP.DOC_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=93 AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=S_APPRVD_MOV.DOC_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 281, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,43,0, NULL ,''WHERE DOC_TYPE=85 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=85 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 277, NULL ,''ROWID'',''IAS_RQ_VCHR_MST'', NULL , NULL ,''V_SER'',''BC'', NULL ,44,0, NULL ,''WHERE VOUCHER_TYPE=1 AND NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_MST_TMP.V_SER AND ROWNUM<=1) AND VOUCHER_DATE <= P_DATE '','' AND VOUCHER_TYPE=1 AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 278, NULL ,''ROWID'',''IAS_RQ_VCHR_DTL'', NULL , NULL ,''V_SER'',''BC'', NULL ,44,0,'' AND VOUCHER_TYPE=1 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_RQ_VCHR_DTL_TMP WHERE V_SER=IAS_RQ_VCHR_DTL.V_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RQ_VCHR_DTL WHERE V_SER=IAS_RQ_VCHR_DTL_TMP.V_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_DTL_TMP.V_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND VOUCHER_TYPE=1 AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_DTL.V_SER AND NVL(EXTERNAL_POST,0)=85 AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 280, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,44,0,''AND DOC_TYP=92 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=92 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=S_APPRVD_MOV_TMP.DOC_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=92 AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=S_APPRVD_MOV.DOC_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPR
OVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 282, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,44,0, NULL ,''WHERE DOC_TYPE=92 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=92 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 260, NULL ,''ROWID'',''IAS_BILL_MST_ADD_DISC_RQ'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=IAS_BILL_MST_ADD_DISC_RQ_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE '','' AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 261, NULL ,''ROWID'',''IAS_BILL_DTL_ADD_DISC_RQ'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_BILL_DTL_ADD_DISC_RQ_TMP WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_RQ.DOC_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_BILL_DTL_ADD_DISC_RQ WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_RQ_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_RQ_TMP.DOC_SER AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_RQ.DOC_SER AND NVL(EXTERNAL_POST,0)=85 AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 262, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0,''AND DOC_TYP=100 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=100 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=100 AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 263, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0, NULL ,''WHERE DOC_TYPE=93 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=93 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 265, NULL ,''ROWID'',''IAS_BILL_MST_ADD_DISC'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,41,0, NULL ,''WHERE NVL(STAND_BY,0)=0 AND NOT EXISTS(SELECT 1 FROM IAS_BILL_MST_ADD_DISC WHERE DOC_SER=IAS_BILL_MST_ADD_DISC_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'','' AND DOC_DATE <= P_DATE AND NVL(STAND_BY,0)=0'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES
 ( 266, NULL ,''ROWID'',''IAS_BILL_DTL_ADD_DISC'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,41,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_BILL_DTL_ADD_DISC_TMP WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC.DOC_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_BILL_DTL_ADD_DISC WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_TMP.DOC_SER AND DOC_DATE <= P_DATE AND NVL(STAND_BY,0)=0 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC.DOC_SER AND NVL(EXTERNAL_POST,0)=85 AND DOC_DATE <= P_DATE  AND NVL(STAND_BY,0)=0 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 270, NULL ,''ROWID'',''NOTE'', NULL , NULL ,''NOTE_SER'',''BC'', NULL ,45,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM NOTE WHERE NOTE_SER=NOTE_TMP.NOTE_SER AND ROWNUM<=1) AND NOTE_DATE <= P_DATE '','' AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 271, NULL ,''ROWID'',''NOTE_DETAIL'', NULL , NULL ,''NOTE_SER'',''BC'', NULL ,45,0,'' AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM NOTE_DETAIL_TMP WHERE NOTE_SER=NOTE_DETAIL.NOTE_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM NOTE_DETAIL WHERE NOTE_SER=NOTE_DETAIL_TMP.NOTE_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM NOTE WHERE NOTE_SER=NOTE_DETAIL_TMP.NOTE_SER AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM NOTE WHERE NOTE_SER=NOTE_DETAIL.NOTE_SER AND NVL(EXTERNAL_POST,0)=85 AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 272, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,45,0,''AND DOC_TYP IN (21,22) AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP IN (21,22) AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM NOTE WHERE NOTE_SER=S_APPRVD_MOV_TMP.DOC_SER AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP IN (21,22) AND EXISTS ( SELECT 1 FROM NOTE WHERE NOTE_SER=S_APPRVD_MOV.DOC_SER AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 285, NULL ,''ROWID'',''GLS_RQ_EXCH_CUR_MST'', NULL , NULL ,''DOC_SRL'',''BC'', NULL ,46,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM GLS_RQ_EXCH_CUR_MST WHERE DOC_SRL=GLS_RQ_EXCH_CUR_MST_TMP.DOC_SRL AND ROWNUM<=1) AND DOC_DATE <= P_DATE '','' AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 286, NULL ,''ROWID'',''GLS_RQ_EXCH_CUR_DTL'', NULL , NULL ,''DOC_SRL'',''BC'', NULL ,46,0,'' AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM GLS_RQ_EXCH_CUR_D
TL_TMP WHERE DOC_SRL=GLS_RQ_EXCH_CUR_DTL.DOC_SRL AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM GLS_RQ_EXCH_CUR_DTL WHERE DOC_SRL=GLS_RQ_EXCH_CUR_DTL_TMP.DOC_SRL AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM GLS_RQ_EXCH_CUR_MST WHERE DOC_SRL=GLS_RQ_EXCH_CUR_DTL_TMP.DOC_SRL AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 
1 FROM GLS_RQ_EXCH_CUR_MST WHERE DOC_SRL=GLS_RQ_EXCH_CUR_DTL.DOC_SRL AND NVL(EXTERNAL_POST,0)=85 AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 290, NULL ,''ROWID'',''IAS_EXCH_CUR_MST'', NULL , NULL ,''DOC_SRL'',''BC'', NULL ,47,0, NULL ,''WHERE NVL(STAND_BY,0)=0 AND NOT EXISTS(SELECT 1 FROM IAS_EXCH_CUR_MST WHERE DOC_SRL=IAS_EXCH_CUR_MST_TMP.DOC_SRL AND ROWNUM<=1) AND DOC_DATE <= P_DATE'','' AND DOC_DATE <= P_DATE AND NVL(STAND_BY,0)=0'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 291, NULL ,''ROWID'',''IAS_EXCH_CUR_DTL'', NULL , NULL ,''DOC_SRL'',''BC'', NULL ,47,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_EXCH_CUR_DTL_TMP WHERE DOC_SRL=IAS_EXCH_CUR_DTL.DOC_SRL AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_EXCH_CUR_DTL WHERE DOC_SRL=IAS_EXCH_CUR_DTL_TMP.DOC_SRL AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_EXCH_CUR_MST WHERE DOC_SRL=IAS_EXCH_CUR_DTL_TMP.DOC_SRL AND DOC_DATE <= P_DATE AND NVL(STAND_BY,0)=0 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM IAS_EXCH_CUR_MST WHERE DOC_SRL=IAS_EXCH_CUR_DTL.DOC_SRL AND NVL(EXTERNAL_POST,0)=85 AND DOC_DATE<=P_DATE  AND NVL(STAND_BY,0)=0 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 299,''MV_S_APPRVD_USR_DTL'',:b1,''S_APPRVD_USR_DTL'', NULL ,''MV_S_APPRVD_USR_DTL_PK'',''U_ID,LVL_NO,DOC_TYP,TYP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 40,5525,1,''BC'',40  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 41,2335,1,''BC'',41  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 42,3296,1,''BC'',42  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 43,3283,1,''BC'',43  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 44,3272,1,''BC'',44  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 167, NULL ,''ROWID'',''IAS_AR_TYPS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL , NULL ,0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 168, NULL ,''ROWID'',''IAS_GLRQ_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL , NULL ,0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 270, NULL ,''ROWID'',''IAS_RQ_JRNL_MST'', NULL , NULL ,''J_SER'',''BC'', NULL ,42,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=IAS_RQ_JRNL_MST_TMP.J_SER AND ROWNUM<=1) AND J_DATE <= P_DATE '','' AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 271, NULL ,''ROWID'',''IAS_RQ_JRNL_DTL'', NULL , NULL ,''J_SER'',''BC'', NULL ,42,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_RQ_JRNL_DTL_TMP WHERE J_SER=IAS_RQ_JRNL_DTL.J_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RQ_JRNL_DTL WHERE J_SER=IAS_RQ_JRNL_DT
L_TMP.J_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=IAS_RQ_JRNL_DTL_TMP.J_SER AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=IAS_RQ_JRNL_DTL.J_SER AND NVL(EXTERNAL_POST,0)=85 AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 663, NULL ,:b1,''IAS_CST_LMT_SAL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',27,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 664, NULL ,:b1,''IAS_CST_ITM_LMT_SAL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',27,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 532,''MV_GR_DETAIL_CNTR'',:b1,''GR_DETAIL'',''WHERE 1=1'',''PK_MV_GR_DETAIL_CNTR'',''REC_NO'',''CB'',''UP_DATE'',17,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 868, NULL ,:b1,''IAS_QUT_PRM_GRP_MST'', NULL ,''IASQUTPRMGRPMSTMV_PK'',''PRM_GRP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',49,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 869, NULL ,:b1,''IAS_QUT_PRM_GRP_DTL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',49,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 930,''MV_IAS_INSRNCE_ITM_GRP_MST'',:b1,''IAS_INSRNCE_ITM_GRP_MST'', NULL ,''MV_IASINSRNCITMGRPMST_PK'',''INS_GRP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 931,''MV_IAS_INSRNCE_ITM_GRP_DTL'',:b1,''IAS_INSRNCE_ITM_GRP_DTL'', NULL , NULL , NULL ,''CB'', NULL ,52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 298,''MV_GLS_VCHR_TYP_PRV'',:b1,''GLS_VCHR_TYP_PRV'', NULL ,''MV_GLS_VCHR_TYP_PRV_PK'',''V_TYP,V_TYP_NO,U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 182, NULL ,''ROWID'',''GNR_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,15,0, NULL ,''WHERE DOC_TYPE=8 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_ITM_MOVMNT_BR WHERE DOC_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=8 AND DOC_DATE <= P_DATE''  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO = 156  AND T_NAME = ''MASTER_INV''  AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 156, NULL ,:b1,''MASTER_INV'', NULL , NULL ,''INV_SER'',''BC'', NULL ,12,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM MASTER_INV WHERE INV_SER=MASTER_INV_TMP.INV_SER AND ROWNUM<=1) AND INV_DATE <= P_DATE'',0,0,'' AND INV_DATE <= P_DATE''  )"INSERT INTO IAS_
REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 155, NULL ,''ROWID'',''INV_WRHS_TRNSFR_EXPNS'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,11,0,''AND TR_INOUT_TYPE=2 AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=INV_WRHS_TRNSFR_EXPNS_BR.DOC_SER AND NVL(TR_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE TR_INOUT_TYPE=2 AND NOT EXISTS (SELECT 1 FROM INV_WRHS_TRNSFR_EXPNS_BR WHERE DOC_SER=INV_WRHS_TRNSFR_EXPNS_TMP.DOC_SER AND ROWNUM<=1) AND NOT EXISTS (SELECT 1 FROM INV_WRHS_TRNSFR_EXPNS WHERE DOC_SER=INV_WRHS_TRNSFR_EXPNS_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=INV_WRHS_TRNSFR_EXPNS_TMP.DOC_SER AND NVL(HUNG,0)=0 AND TR_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND TR_INOUT_TYPE=2 AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MST WHERE TR_SER=INV_WRHS_TRNSFR_EXPNS.DOC_SER AND NVL(HUNG,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND TR_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 53,4291,1,''CB'',43  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 920,''MV_IAS_INSRNCE_CLSS_MDCL_NET'',:b1,''IAS_INSRNCE_CLSS_MDCL_NET'', NULL ,''MV_IAS_INSRNCE_CLSSMDCLNET_PK'',''INS_CMP_NO,CLSS_NO,MDCL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 921,''MV_IAS_BNFCRS'',:b1,''IAS_BNFCRS'', NULL ,''MV_IAS_BNFCRS_PK'',''BNF_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 922,''MV_IAS_INSRNCE_CMP'',:b1,''IAS_INSRNCE_CMP'', NULL ,''MV_IAS_INSRNCE_CMP_PK'',''INS_CMP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 923,''MV_IAS_INSRNCE_CMP_CLSS'',:b1,''IAS_INSRNCE_CMP_CLSS'', NULL ,''MV_IAS_INSRNCE_CMP_CLSS_PK'',''INS_CMP_NO,CLSS_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 924,''MV_IAS_INSRNCE_CLSS_ITM_TYP'',:b1,''IAS_INSRNCE_CLSS_ITM_TYP'', NULL ,''MV_IAS_INSRNCE_CLSS_ITM_TYP_PK'',''INS_CMP_NO,CLSS_NO,ITEM_TYPE'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 925,''MV_IAS_INSRNCE_CLSS_LMT_DOC'',:b1,''IAS_INSRNCE_CLSS_LMT_DOC'', NULL ,''MV_IAS_INSRNCE_CLSS_LMT_DOC_PK'',''INS_CMP_NO,CLSS_NO,RLTN_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 926,''MV_IAS_INSRNCE_CLSS_LMT_MNTH'',:b1,''IAS_INSRNCE_CLSS_LMT_MNTH'', NULL ,''MV_IAS_INSRNCE_CLSS_LMT_MNTH_PK'',''INS_CMP_NO,CLSS_NO''
,''CB'',''NVL(UP_DATE,AD_DATE)'',53,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 927,''MV_IAS_MEDICAL_NET'',:b1,''IAS_MEDI
CAL_NET'', NULL ,''MV_IAS_MEDICAL_NET_PK'',''MDCL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 928,''MV_IAS_INSRNCE_CARD'',:b1,''IAS_INSRNCE_CARD'', NULL ,''MV_IAS_INSRNCE_CARD_PK'',''INS_CMP_NO,BNF_NO,PRSON_CARD_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 929,''MV_IAS_INSRNCE_CARD_CHRONIC'',:b1,''IAS_INSRNCE_CARD_CHRONIC'', NULL ,''MV_IASINSRNCECARDCHRONIC_PK'',''INS_CMP_NO,PRSON_CARD_NO,I_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 321, NULL ,:b1,''GLS_CRNCY_USR_LMT'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',8,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 907,''MV_GNR_TAX_INPT'',:b1,''GNR_TAX_INPT'', NULL ,''MV_GNR_TAX_INPT_PK'',''INPT_TYP,INPT_CODE,TAX_NO,AGNCY_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 662, NULL ,:b1,''IAS_CST_COL'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',27,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 61, NULL ,:b1,''IAS_ACCOUNT_CLASS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 62, NULL ,:b1,''S_BRN_GRPS'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 382,''MV_GLS_AC_CODE_DTL_GRPS'',:b1,''GLS_AC_CODE_DTL_GRPS'','''',''PK_MV_GLS_ACCODEDTLGRPS'',''GRP_CODE,AC_DTL_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 417,''MV_GLS_AC_CODE_DTL_GRPS_PRIV'',:b1,''GLS_AC_CODE_DTL_GRPS_PRIV'', NULL ,''PK_GLS_AC_CODEDTLGRPPRV'',''U_ID,GRP_CODE,AC_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO IN ( 26,46,213,226  ) AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 26, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYPE=4 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT_BR WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=4 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 46, NULL ,''ROWID'',''GNR_TAX_
INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,2,0, NULL ,''WHERE DOC_TYPE=5 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT_BR WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=5 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 213, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,18,0, NULL ,''WHERE DOC_TYPE=52 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT_BR WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=52 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 226, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,19,0, NULL ,''WHERE DOC_TYPE=53 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT_BR WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=53 AND DOC_DATE <= P_DATE''  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE TRANS_CODE = 17  AND MV_NAME = ''MV_ITEM_MOVEMENT''  AND CENTER_BRANCH = ''CB''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 530,''MV_ITEM_MOVEMENT'',:b1,''ITEM_MOVEMENT'',''WHERE DOC_TYPE NOT IN (1,3) AND EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=ITEM_MOVEMENT.W_CODE AND CONN_BRN_NO= AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM GR_NOTE_BR WHERE G_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST WHERE NVL(HUNG,0)=1 AND TR_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM GR_NOTE WHERE NVL(HUNG,0)=1 AND G_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                            AND NOT EXISTS(SELECT 1 FROM IAS_OUTGOING_MST WHERE NVL(HUNG,0)=1 AND OUT_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)'',''PK_MV_ITEM_MOV'',''SERIAL'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',17,1, NULL ,'' Where (Doc_Type ,Doc_Ser,I_Code, W_Code ,Expire_Date,Batch_No) Not In (Select Doc_Type ,Doc_Ser,I_Code, W_Code ,Expire_Date,Batch_No from item_movement)'',0,1,'' AND EXISTS ( SELECT 1 FROM MV_ITEM_MOVEMENT WHERE DOC_SER=ITEM_MOVEMENT.DOC_SER AND W_CODE=ITEM_MOVEMENT.W_CODE AND ROWNUM<=1)''  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE TRANS_CODE = 1  AND RCRD_NO = 24  AND CENTER_BRANCH = ''BC''"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE TRANS_CODE = 2  AND RCRD_NO = 44  AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 24, NULL ,''ROWID'',''IAS_POINT_CALC_TRNS'', NULL , NULL ,''TRNS_NO'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYP=1 AND NOT EXISTS(SELECT 1 FROM IAS_POINT_CALC_TRNS_BR WHERE DOC_SRL=IAS_POINT_CALC_TRNS_TMP.DOC_SRL AND ROWNUM<=1) AND TRNS_DATE <= P_DATE'',0,0,'' AND DOC_TYP=1 AND TRNS_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 44, NULL ,''ROWID'',''IAS_POINT_CALC_TRNS'', NULL , NULL ,''TRNS_NO'',''BC'', NULL ,2,0, NULL ,''WHERE DOC_TYP=1 AND NOT EXISTS(SELECT 1 FROM IAS_POINT_CALC_TRNS_BR WHERE DOC_SRL=IAS_POIN
T_CALC_TRNS_TMP.DOC_SRL AND ROWNUM<=1) AND TRNS_DATE <= P_DATE'',0,0,'' AND DOC_TYP=1 AND TRNS_DATE <= P_DATE''  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE TRANS_CODE IN ( 28,29  ) AND MV_NAME LIKE  ''MV_IAS_POST_%''  AND RCRD_NO IN ( 671,672,680,681  ) AND CENTER_BRANCH = ''CB''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 680,''MV_IAS_POST_MST'',:b1,''IAS_POST_MST'','' WHERE (DOC_TYPE NOT IN (4,5) OR DOC_SER IN 
                                                     (SELECT BILL_SER FROM IAS_BILL_MST WHERE BRN_NO<>
                                                      SELECT RT_BILL_SER FROM IAS_RT_BILL_MST WHERE BRN_NO<>))'',''PK_MV_POS_MST'',''DOC_SER'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',29,1,'' AND DOC_TYPE<>0'','' WHERE DOC_SER NOT IN ( SELECT DOC_SER FROM IAS_POST_MST)'',1,1,'' AND DOC_SER IN ( SELECT DOC_SER FROM MV_IAS_POST_MST)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 681,''MV_IAS_POST_DTL'',''ROWID'',''IAS_POST_DTL'','' WHERE (DOC_TYPE NOT IN (4,5) OR DOC_SER IN 
                                                     (SELECT BILL_SER FROM IAS_BILL_MST WHERE BRN_NO<>
                                                      SELECT RT_BILL_SER FROM IAS_RT_BILL_MST WHERE BRN_NO<>)) AND LC_NO IS NULL '', NULL ,''DOC_SER'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',29,1, NULL , NULL ,1,1,'' AND DOC_SER IN ( SELECT DOC_SER FROM MV_IAS_POST_DTL)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 413,''MV_GLS_ACCNT_DTL'',:b1,''GLS_ACCNT_DTL'', NULL ,''PK_MV_GLS_ACCNT_DTL'',''AC_CODE_DTL, AC_DTL_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 414,''MV_GLS_ACCNT_DTL_CURR'',:b1,''GLS_ACCNT_DTL_CURR'', NULL ,''PK_MV_GLS_ACCNT_DTL_CURR'',''AC_CODE_DTL, AC_DTL_TYP, CUR_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 415,''MV_GLS_ACCNT_DTL_GRPS'',:b1,''GLS_ACCNT_DTL_GRPS'', NULL ,''PK_MV_GLS_ACCNT_DTL_GRPS'',''GRP_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 416,''MV_GLS_ACCNT_DTL_PRIV'',:b1,''GLS_ACCNT_DTL_PRIV'', NULL ,''PK_MV_GLS_ACCNT_DTL_PRIV'',''U_ID, AC_CODE_DTL,CUR_CODE,AC_DTL_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 297,''MV_IAS_CONN_WCODE_BY_ACTIVITY'',:b1,''IAS_CONN_WCODE_BY_ACTIVITY'', NULL ,''MV_CONN_WC_ACTVTY_PK'','''',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,
P_DATE,AD_DATE)'',11,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 35,2568,1,''BC'',7  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO IN ( 250,251  ) AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 250, NULL ,:b1,''IAS_GR_INCOMING_MST'', NULL , NULL ,''INC_SER'',''BC'', NULL ,35,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=IAS_GR_INCOMING_MST_TMP.INC_SER AND ROWNUM<=1) AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0,'' AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 251, NULL ,''ROWID'',''IAS_GR_INCOMING_DTL'', NULL , NULL ,''INC_SER'',''BC'', NULL ,35,0,'' AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_GR_INCOMING_DTL_TMP WHERE INC_SER=IAS_GR_INCOMING_DTL.INC_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_GR_INCOMING_DTL WHERE INC_SER=IAS_GR_INCOMING_DTL_TMP.INC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=IAS_GR_INCOMING_DTL_TMP.INC_SER AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=IAS_GR_INCOMING_DTL.INC_SER AND NVL(EXTERNAL_POST,0)=85 AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 166, NULL ,:b1,''IAS_LGHT_DOC_BRN'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE TRANS_CODE = 40  AND RCRD_NO = 780"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 780,''MV_IAS_ITEM_SERIALNO'',:b1,''IAS_ITEM_SERIALNO'',''WHERE DOC_TYPE NOT IN (1,3) AND (EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=IAS_ITEM_SERIALNO.W_CODE AND CONN_BRN_NO= AND ROWNUM<=1)
                                                                OR EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS,IAS_WHTRNS_MST WHERE WAREHOUSE_DETAILS.W_CODE=IAS_WHTRNS_MST.T_W_CODE AND IAS_WHTRNS_MST.F_W_CODE=IAS_ITEM_SERIALNO.W_CODE AND WAREHOUSE_DETAILS.CONN_BRN_NO= AND ROWNUM<=1))'',''PK_MV_ITEM_SERIAL'',''DOC_SER,I_CODE,SERIALNO'',''CB'',''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'',40,1, NULL ,'' WHERE NOT EXISTS(SELECT 1 FROM IAS_ITEM_SERIALNO WHERE DOC_SER=MV_IAS_ITEM_SERIALNO.DOC_SER AND I_CODE=MV_IAS_ITEM_SERIALNO.I_CODE AND SERIALNO=MV_IAS_ITEM_SERIALNO.SERIALNO AND ROWNUM<=1)'',0,1, NULL   )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 50,11882,1,''CB'',42  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 880,''MV_IAS_POINT_TYP_MST'',:b1,''IAS_POINT_TYP_MST'', NULL ,''MV_IAS_POINT_CLCMST_PK'',''POINT_TYP_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',50,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 881,''MV_IAS_POINT_TYP_CALC_DTL'',:b1,''IAS_POINT_TYP_CALC_DTL'', NULL ,''MV_IAS_POINT_CLCDTL_PK'',''POINT_TYP_NO,RCRD_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',50,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,
WHR_MOD )  VALUES ( 882,''MV_IAS_POINT_TYP_RPLC_DTL'',:b1,''IAS_POINT_TYP_RPLC_DTL'', NULL ,''MV_IAS_POIN_TYP_RPLC_PK'',''POINT_TYP_NO,RCRD_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',50,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 883,''MV_IAS_CARD_SAL'',:b1,''IAS_CARD_SAL'', NULL ,''MV_IAS_CARD_SAL_PK'',''CRD_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',50,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 60,12453,1,''CB'',43  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 890,''MV_IAS_CASH_CUSTMR_GRP'',:b1,''IAS_CASH_CUSTMR_GRP'', NULL ,''MV_IAS_CASH_CST_GRP_PK'',''CUST_GRP_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',60,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 891,''MV_IAS_CASH_CUSTMR'',:b1,''IAS_CASH_CUSTMR'', NULL ,''MV_IAS_CASH_CUSTMR_PK'',''CUST_CODE'',''CB'',''NVL(UP_DATE,AD_DATE)'',60,0, NULL , NULL ,1,1, NULL   )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 30,11882,1,''BC'',17  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 240, NULL ,:b1,''IAS_CASH_CUSTMR'', NULL , NULL ,''CUST_CODE'',''BC'', NULL ,30,0,''AND EXISTS(SELECT 1 FROM IAS_CASH_CUSTMR_TMP WHERE CUST_CODE=IAS_CASH_CUSTMR.CUST_CODE AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_CASH_CUSTMR WHERE CUST_CODE=IAS_CASH_CUSTMR_TMP.CUST_CODE AND ROWNUM<=1) '',0,1,''''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 295,''MV_S_APPRVD_USR'',:b1,''S_APPRVD_USR'', NULL ,''MV_S_APPRVD_USR_PK'',''LVL_NO,DOC_TYP,U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 296,''MV_S_APPRVD_LVL'',:b1,''S_APPRVD_LVL'', NULL ,''MV_S_APPRVD_LVL_PK'',''LVL_NO,DOC_TYP'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 49,4036,1,''CB'',41  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 870,''MV_IAS_QUT_PRM_MST'',:b1,''IAS_QUT_PRM_MST'','' WHERE NVL(INACTIVE,0)=0 '',''MV_QUT_PRM_PK'',''QUOT_SER'',''CB'',''NVL(UP_DATE,AD_DATE)'',49,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_QUT_PRM_MST WHERE QUOT_SER=MV_IAS_QUT_PRM_MST.QUOT_SER AND ROWNUM<=1)'',1,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_QUT_PRM_MST WHERE QUOT_SER=IAS_QUT_PRM_MST.QUOT_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 871,''MV_IAS_QUT_PRM_DTL'',''ROWID'',''QUOT_SER'','' WHERE EXISTS(SELECT 1 FROM MV_IAS_QUT_PRM_MST WHERE QUOT_SER=IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)'', NULL ,''TR_SER'',''CB'', NULL ,49,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_QUT_PRM_DTL WHERE QUOT_SER=MV_IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)'',1,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_QUT_PRM_DTL WHERE QUOT_SER=IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,R
EFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 872,''MV_IAS_QUT_PRM_SUB_DTL'',''ROWID'',''QUOT_SER'','' WHERE EXISTS(SELECT 1 FROM MV_IAS_QUT_PRM_MST WHERE QUOT_SER=IAS_QUT_PRM_SUB_DTL.QUOT_SER AND ROWNUM<=1)'', NULL ,''TR_SER'',''CB'', NULL ,49,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_QUT_PRM_SUB_DTL WHERE QUOT_SER=MV_IAS_QUT_PRM_SUB_DTL.QUOT_SER AND ROWNUM<=1)'',1,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_QUT_PRM_SUB_DTL WHERE QUOT_SER=IAS_QUT_PRM_SUB_DTL.QUOT_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 294,''MV_S_USR_TP_PRV'',:b1,''S_USR_TP_PRV'', NULL ,''MV_S_USR_TP_PRV_PK'',''U_ID,FORM_NO,OBJ_NM,TP_NM'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 493,''MV_IAS_BATCH_NO'',:b1,''IAS_BATCH_NO'', NULL ,''PK_MV_IAS_BATCH_NO'',''BATCH_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 494,''MV_IAS_BATCH_NO_CONTENTS'',:b1,''IAS_BATCH_NO_CONTENTS'', NULL ,''PK_MV_IAS_BTCH_NO_CNTNTS'',''COL_NO,BATCH_DESC_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 495,''MV_IAS_BATCH_NO_CONTENTS_MST'',:b1,''IAS_BATCH_NO_CONTENTS_MST'', NULL ,''PK_MV_BTCH_NO_CONTNT_MST'',''COL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 496,''MV_IAS_ITM_BATCH'',:b1,''IAS_ITM_BATCH'', NULL ,''PK_MV_IAS_ITM_BATCH'',''I_CODE, BATCH_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',15,1, NULL , NULL ,0,0, NULL   )"UPDATE IAS_REPLICA_TABLE_DTL SET FIELD_DATE=''NVL(LGHT_MOV_DATE,NVL(UP_DATE,AD_DATE))'' WHERE T_NAME IN ( ''ITEM_MOVEMENT'',''IAS_POST_MST'',''IAS_POST_DTL'',''IAS_WHTRNS_MST'',''IAS_ITEM_SERIALNO'',''IAS_ITM_ATTACH_MOVEMENT''  )"UPDATE IAS_REPLICA_TABLE_DTL SET REFRESH_TYPE=:b1 WHERE NVL(REFRESH_TYPE,''0'') != :b1"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO IN ( 25,45,260,261,265,266  ) AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 25, NULL ,''ROWID'',''GNR_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYPE=4 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_ITM_MOVMNT_BR WHERE DOC_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_BR WHERE BILL_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=4 AND EXISTS ( SELECT 1 FROM IAS_BILL_MST WHERE BILL_SER=GNR_TAX_ITM_MOVMNT.DOC_SER AND NVL(STAND_BY,0)=0 AND ROWNUM<=1) AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 45, NULL ,''ROWID'',''GNR_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,2,0, NULL ,''WHERE DOC_TYPE=5 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_ITM_MOVMNT_BR WHE
RE DOC_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RT_BILL_MST_BR WHERE RT_BILL_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DAT
E <= P_DATE'',0,0,'' AND DOC_TYPE=5 AND EXISTS ( SELECT 1 FROM IAS_RT_BILL_MST WHERE RT_BILL_SER=GNR_TAX_ITM_MOVMNT.DOC_SER AND NVL(STAND_BY,0)=0 AND ROWNUM<=1) AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 260, NULL ,''ROWID'',''IAS_BILL_MST_ADD_DISC_RQ'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=IAS_BILL_MST_ADD_DISC_RQ_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE '','' AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 261, NULL ,''ROWID'',''IAS_BILL_DTL_ADD_DISC_RQ'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_BILL_DTL_ADD_DISC_RQ_TMP WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_RQ.DOC_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_BILL_DTL_ADD_DISC_RQ WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_RQ_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_RQ_TMP.DOC_SER AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_RQ.DOC_SER AND NVL(EXTERNAL_POST,0)=85 AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 265, NULL ,''ROWID'',''IAS_BILL_MST_ADD_DISC'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,41,0, NULL ,''WHERE NVL(STAND_BY,0)=0 AND NOT EXISTS(SELECT 1 FROM IAS_BILL_MST_ADD_DISC WHERE DOC_SER=IAS_BILL_MST_ADD_DISC_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'','' AND DOC_DATE <= P_DATE AND NVL(STAND_BY,0)=0'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 266, NULL ,''ROWID'',''IAS_BILL_DTL_ADD_DISC'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,41,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_BILL_DTL_ADD_DISC_TMP WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC.DOC_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_BILL_DTL_ADD_DISC WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC_TMP.DOC_SER AND DOC_DATE <= P_DATE AND NVL(STAND_BY,0)=0 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC WHERE DOC_SER=IAS_BILL_DTL_ADD_DISC.DOC_SER AND NVL(EXTERNAL_POST,0)=85 AND DOC_DATE <= P_DATE  AND NVL(STAND_BY,0)=0 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 305,''MV_IAS_GLRQ_TYPES_PRIV'',''ROWID'',''IAS_GLRQ_TYPES_PRIV'', NULL ,''IAS_GLRQ_TYPES_PRIV_PK'',''RQ_DOC_TYPE,RQ_TYPE,U_ID'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL , NULL ,0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 227, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,19,0,''AND DOC_TYP=53 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=53 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=S_APPRVD_MOV_TMP.DOC_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 A
ND ROWNUM<=1)'','' AND DOC_TYP=53 AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=S_APPRVD_MOV.DOC_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO IN ( 275,276,277,278  ) AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 275, NULL ,''ROWID'',''IAS_RQ_VCHR_MST'', NULL , NULL ,''V_SER'',''BC'', NULL ,43,0, NULL ,''WHERE VOUCHER_TYPE=2 AND NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_MST_TMP.V_SER AND ROWNUM<=1) AND VOUCHER_DATE <= P_DATE '','' AND VOUCHER_TYPE=2 AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 276, NULL ,''ROWID'',''IAS_RQ_VCHR_DTL'', NULL , NULL ,''V_SER'',''BC'', NULL ,43,0,'' AND VOUCHER_TYPE=2 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_RQ_VCHR_DTL_TMP WHERE V_SER=IAS_RQ_VCHR_DTL.V_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RQ_VCHR_DTL WHERE V_SER=IAS_RQ_VCHR_DTL_TMP.V_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_DTL_TMP.V_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND VOUCHER_TYPE=2 AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_DTL.V_SER AND NVL(EXTERNAL_POST,0)=85 AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 277, NULL ,''ROWID'',''IAS_RQ_VCHR_MST'', NULL , NULL ,''V_SER'',''BC'', NULL ,44,0, NULL ,''WHERE VOUCHER_TYPE=1 AND NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_MST_TMP.V_SER AND ROWNUM<=1) AND VOUCHER_DATE <= P_DATE '','' AND VOUCHER_TYPE=1 AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 278, NULL ,''ROWID'',''IAS_RQ_VCHR_DTL'', NULL , NULL ,''V_SER'',''BC'', NULL ,44,0,'' AND VOUCHER_TYPE=1 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_RQ_VCHR_DTL_TMP WHERE V_SER=IAS_RQ_VCHR_DTL.V_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RQ_VCHR_DTL WHERE V_SER=IAS_RQ_VCHR_DTL_TMP.V_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_DTL_TMP.V_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND VOUCHER_TYPE=1 AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=IAS_RQ_VCHR_DTL.V_SER AND NVL(EXTERNAL_POST,0)=85 AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 131, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,8,0,''AND DOC_TYP=31 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=31 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_OUT_REQUEST_MST WHERE OUT_REQ_SER=S_APPRVD_MOV_TMP.DOC_SER AND OUT_REQ_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=31 AND EXISTS ( SELECT 1 FROM IAS_OUT_REQUEST_MST WHERE OUT_REQ_SER=S_APPRVD_MOV.DOC_SER AND OUT_REQ_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WH
R,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 214, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,18,0,''AND DOC_TYP=52 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=52 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=S_APPRVD_MOV_TMP.DOC_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=52 AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=S_APPRVD_MOV.DOC_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 262, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0,''AND DOC_TYP=100 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=100 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=100 AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_ADD_DISC_RQ WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 272, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,42,0,''AND DOC_TYP=85 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=85 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=S_APPRVD_MOV_TMP.DOC_SER AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=85 AND EXISTS ( SELECT 1 FROM IAS_RQ_JRNL_MST WHERE J_SER=S_APPRVD_MOV.DOC_SER AND J_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 279, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,43,0,''AND DOC_TYP=93 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=93 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=S_APPRVD_MOV_TMP.DOC_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=93 AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=S_APPRVD_MOV.DOC_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 280, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,44,0,''AND DOC_TYP=92 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=92 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM 
IAS_RQ_VCHR_MST WHERE V_SER=S_APPRVD_MOV_TMP.DOC_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)''
,'' AND DOC_TYP=92 AND EXISTS ( SELECT 1 FROM IAS_RQ_VCHR_MST WHERE V_SER=S_APPRVD_MOV.DOC_SER AND VOUCHER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO = 252  AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 252, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,35,0,''AND DOC_TYP=32 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP=32 AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=S_APPRVD_MOV_TMP.DOC_SER AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP=32 AND EXISTS ( SELECT 1 FROM IAS_GR_INCOMING_MST WHERE INC_SER=S_APPRVD_MOV.DOC_SER AND INC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 169, NULL ,:b1,''S_SCR_RPRT_SMPL'', NULL ,''S_SCR_RPRT_SMPL_PK'',''FORM_NO,SMPL_NO'',''CB'',''UP_DATE'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 45,15779,1,''BC'',45  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 270, NULL ,''ROWID'',''NOTE'', NULL , NULL ,''NOTE_SER'',''BC'', NULL ,45,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM NOTE WHERE NOTE_SER=NOTE_TMP.NOTE_SER AND ROWNUM<=1) AND NOTE_DATE <= P_DATE '','' AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 271, NULL ,''ROWID'',''NOTE_DETAIL'', NULL , NULL ,''NOTE_SER'',''BC'', NULL ,45,0,'' AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM NOTE_DETAIL_TMP WHERE NOTE_SER=NOTE_DETAIL.NOTE_SER AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM NOTE_DETAIL WHERE NOTE_SER=NOTE_DETAIL_TMP.NOTE_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM NOTE WHERE NOTE_SER=NOTE_DETAIL_TMP.NOTE_SER AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM NOTE WHERE NOTE_SER=NOTE_DETAIL.NOTE_SER AND NVL(EXTERNAL_POST,0)=85 AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 272, NULL ,''ROWID'',''S_APPRVD_MOV'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,45,0,''AND DOC_TYP IN (21,22) AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM S_APPRVD_MOV_TMP WHERE DOC_SER=S_APPRVD_MOV.DOC_SER AND ROWNUM<=1)'',''WHERE DOC_TYP IN (21,22) AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=S_APPRVD_MOV_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM NOTE WHERE NOTE_SER=S_APPRVD_MOV_TMP.DOC_SER AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND DOC_TYP IN (21,22) AND EXISTS ( SELECT 1 FROM NOTE WHERE NOTE_SER=S_APPRVD_MOV.DOC_SER AND NOTE_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 151, NULL ,:b1,''IAS_NOTE_TYPES'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',1,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE
_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 306,''MV_IAS_PRIV_NOTE_TYPES'',:b1,''IAS_PRIV_NOTE_TYPES'', NULL ,''IAS_PRIV_NOTE_TYPES_PK'',''U_ID,NOTE_TYPE_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',5,0, NULL , NULL , NULL ,0,0  )"UPDATE IAS_REPLICA_TABLE_DTL SET TRANS_CODE=53 WHERE RCRD_NO BETWEEN 920 AND 926  AND CENTER_BRANCH = ''CB''"UPDATE IAS_REPLICA_TABLE_DTL SET TRANS_CODE=2 WHERE RCRD_NO IN ( 45,46  ) AND CENTER_BRANCH = ''BC''"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO = 170  AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 170, NULL ,:b1,''IAS_ITEM_SERIALNO'', NULL ,''PK_TSRIL_BR'',''DOC_SER,I_CODE,SERIALNO'',''BC'',''DOC_DATE'',14,0, NULL ,'' WHERE DOC_TYPE IN (1,3,5,6,7,8) AND NOT EXISTS(SELECT 1 FROM IAS_ITEM_SERIALNO_BR WHERE DOC_SER=IAS_ITEM_SERIALNO_TMP.DOC_SER AND ROWNUM<=1) AND NOT EXISTS(SELECT 1 FROM IAS_ITEM_SERIALNO WHERE DOC_SER=IAS_ITEM_SERIALNO_TMP.DOC_SER AND ROWNUM<=1) AND NVL(DOC_DATE,P_DATE) <= P_DATE'',0,0,'' AND DOC_TYPE IN (1,3,5,6,7,8) AND NVL(DOC_DATE,P_DATE) <= P_DATE''  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO = 412  AND CENTER_BRANCH = ''CB''"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 46,16169,1,''BC'',46  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 285, NULL ,''ROWID'',''GLS_RQ_EXCH_CUR_MST'', NULL , NULL ,''DOC_SRL'',''BC'', NULL ,46,0, NULL ,''WHERE NVL(APPROVED,0)=1 AND NOT EXISTS(SELECT 1 FROM GLS_RQ_EXCH_CUR_MST WHERE DOC_SRL=GLS_RQ_EXCH_CUR_MST_TMP.DOC_SRL AND ROWNUM<=1) AND DOC_DATE <= P_DATE '','' AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 286, NULL ,''ROWID'',''GLS_RQ_EXCH_CUR_DTL'', NULL , NULL ,''DOC_SRL'',''BC'', NULL ,46,0,'' AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM GLS_RQ_EXCH_CUR_DTL_TMP WHERE DOC_SRL=GLS_RQ_EXCH_CUR_DTL.DOC_SRL AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM GLS_RQ_EXCH_CUR_DTL WHERE DOC_SRL=GLS_RQ_EXCH_CUR_DTL_TMP.DOC_SRL AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM GLS_RQ_EXCH_CUR_MST WHERE DOC_SRL=GLS_RQ_EXCH_CUR_DTL_TMP.DOC_SRL AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM GLS_RQ_EXCH_CUR_MST WHERE DOC_SRL=GLS_RQ_EXCH_CUR_DTL.DOC_SRL AND NVL(EXTERNAL_POST,0)=85 AND DOC_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 47,16170,1,''BC'',47  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 290, NULL ,''ROWID'',''IAS_EXCH_CUR_MST'', NULL , NULL ,''DOC_SRL'',''BC'', NULL ,47,0, NULL ,''WHERE NVL(STAND_BY,0)=0 AND NOT EXISTS(SELECT 1 FROM IAS_EXCH_CUR_MST WHERE DOC_SRL=IAS_EXCH_CUR_MST_TMP.DOC_SRL AND ROWNUM<=1) AND DOC_DATE <= P_DATE'','' AND DOC_DATE <= P_DATE AND NVL(STAND_BY,0)=0'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 291, NULL ,''ROWID'',''IAS_EXCH_CUR_DTL'', NULL , NULL ,''DOC_SRL'',''BC'', NULL ,47,0,''AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM IAS_EXCH_CUR_DTL_TMP WHERE DOC_SRL=IAS_EXCH_CUR_DTL.DOC_SRL AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_EXCH_CUR_DTL WHERE DOC_SRL=IAS_EXCH_CUR_DTL_TMP.DOC_SRL AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_EXCH_CUR_MST WH
ERE DOC_SRL=IAS_EXCH_CUR_DTL_TMP.DOC_SRL AND DOC_DATE <= P_DATE AND NVL(STAND_BY,0)=0 AND ROWNUM<=1)'','' AND EXISTS ( SELECT 1 FROM IAS_EXCH_CUR_MST WHERE DOC_SRL=IAS_EXCH_CUR_DTL.DOC_SRL AND NVL(EXTERNAL_POST,0)=85 AND DOC_DATE<=P_DATE  AND NVL(STAND_BY,0)=0 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 171, NULL ,:b1,''IAS_USER_GROUP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 561, NULL ,:b1,''S_ZONE'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',19,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 562, NULL ,:b1,''CUSTOMER_CLASS_TYP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',19,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 444, NULL ,:b1,''IAS_DETAIL_GROUP'', NULL ,''PK_MV_GRP_DTL'',''DETAIL_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 445, NULL ,:b1,''IAS_ASSISTANT_GROUP'', NULL ,''PK_MV_ASSTNT_GRP'',''ASSISTANT_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',13,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 371, NULL ,:b1,''IAS_BANK_GROUP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',10,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 172, NULL ,:b1,''S_TP'', NULL , NULL , NULL ,''CB'',''NVL(UP_DATE,AD_DATE)'',2,0, NULL , NULL ,0,0, NULL   )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO = 43  AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 23, NULL ,''ROWID'',''INSTALLMENT'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYPE=4 AND NOT EXISTS(SELECT 1 FROM INSTALLMENT_BR WHERE BILL_SER=INSTALLMENT_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=4 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 187, NULL ,''ROWID'',''INSTALLMENT'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,20,0, NULL ,''WHERE DOC_TYPE=9 AND NOT EXISTS(SELECT 1 FROM INSTALLMENT_BR WHERE BILL_SER=INSTALLMENT_TMP.BILL_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=9 AND DOC_DATE <= P_DATE''  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO IN ( 200,201  ) AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 200, NULL ,:b1,''BIN_DETAILS'', NULL , NULL ,''W_CODE,B_CODE'',''BC'', NULL ,17,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM BIN_DETAILS WHERE W_CODE=BIN_DETAILS_TMP.W_CODE AND B_CODE=BIN_DETAILS_TMP.B_CODE AN
D ROWNUM<=1)'',0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE
_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 201, NULL ,:b1,''ITEM_BIN'', NULL , NULL ,''I_CODE,W_CODE,B_CODE'',''BC'', NULL ,17,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM ITEM_BIN WHERE I_CODE=ITEM_BIN_TMP.I_CODE AND W_CODE=ITEM_BIN_TMP.W_CODE AND B_CODE=ITEM_BIN_TMP.B_CODE AND ROWNUM<=1)
                                                        AND EXISTS(SELECT 1 FROM IAS_ITM_MST WHERE I_CODE=ITEM_BIN_TMP.I_CODE AND ROWNUM<=1)'',0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 3,1456,0,''BC'',3  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 4,1662,0,''BC'',3  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 60, NULL ,:b1,''MASTER_OUT_BILLS'', NULL ,''PK_TMP_OUT_BILLS'',''OUT_SER'',''BC'', NULL ,3,0,''AND NVL(OUT_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85'',''WHERE NOT EXISTS(SELECT 1 FROM MASTER_OUT_BILLS_BR WHERE OUT_SER=MASTER_OUT_BILLS_TMP.OUT_SER AND ROWNUM<=1) AND NVL(STAND_BY,0)=0 AND OUT_DATE <= P_DATE'',0,0,'' AND NVL(STAND_BY,0)=0 AND OUT_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 61, NULL ,''ROWID'',''DETAIL_OUT_BILLS'', NULL , NULL ,''OUT_SER'',''BC'', NULL ,3,0,''AND NOT EXISTS (SELECT 1 FROM MASTER_OUT_BILLS_BR WHERE OUT_SER=IAS_BILL_DTL_BR.OUT_SER AND NVL(OUT_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS (SELECT 1 FROM DETAIL_OUT_BILLS_BR WHERE OUT_SER=DETAIL_OUT_BILLS_TMP.OUT_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM MASTER_OUT_BILLS_BR WHERE OUT_SER=DETAIL_OUT_BILLS_TMP.OUT_SER AND NVL(STAND_BY,0)=0 AND OUT_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM MASTER_OUT_BILLS WHERE OUT_SER=DETAIL_OUT_BILLS.OUT_SER AND NVL(STAND_BY,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND OUT_DATE <= P_DATE AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 70, NULL ,:b1,''IAS_RET_BILL_MST'', NULL ,''PK_RET_BILLS_TMP'',''RET_SER'',''BC'', NULL ,4,0,''AND NVL(RET_POST,0)=0 AND NVL(EXTERNAL_POST,0)=85'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RET_BILL_MST_BR WHERE RET_SER=IAS_RET_BILL_MST_TMP.RET_SER AND ROWNUM<=1) AND NVL(STAND_BY,0)=0 AND RET_DATE <= P_DATE'',0,0,'' AND NVL(STAND_BY,0)=0 AND RET_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 71, NULL ,''ROWID'',''IAS_RET_BILL_DTL'', NULL , NULL ,''RET_SER'',''BC'', NULL ,4,0,''AND NOT EXISTS(SELECT 1 FROM IAS_RET_BILL_MST_BR WHERE RET_SER=IAS_RET_BILL_DTL_BR.RET_SER AND NVL(RET_POST,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS(SELECT 1 FROM IAS_RET_BILL_DTL_BR WHERE RET_SER=IAS_RET_BILL_DTL_TMP.RET_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RET_BILL_MST_BR WHERE RET_SER=IAS_RET_BILL_DTL_TMP.RET_SER AND NVL(STAND_BY,0)=0 AND RET_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_RET_BILL_MST WHERE RET_SER=IAS_RET_BILL_DTL.RET_SER AND NVL(STAND_BY,0)=0 AND NVL(EXTERNAL_POST,0)=85 AND RET_DATE <= P_DATE AND ROWNUM<=1)''  )"SELECT NVL(ALLW_ENTR_CSTMR_IN_LGHT,0)   FROM IAS_PARA_AR"UPDATE IAS_REPLICA_TABLE_DTL SET USE_MV=1,USE_DEL=1 WHERE RCRD_NO IN ( 630,640,650  ) AND T_NAME IN ( ''CUSTOMER'',''CUSTOMER_CURR'',''IAS_CUSTOMER_CC_LMT''  ) AND CENTER_BRANCH = ''CB''"UPDATE IAS_REPLICA_TABLE_DTL SET USE_MV=0,USE_DEL=0 WHERE RCRD_NO IN ( 630,640,650  ) AND T_NAME IN ( ''CUSTOMER'',''CUSTOMER_CURR'',''IAS_CUSTOMER_CC_LMT''  ) AND C
ENTER_BRANCH = ''CB''"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO = 232  AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 232, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,21,0, NULL ,''WHERE DOC_TYPE=1 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=1 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 908,''MV_GLS_TAX_ACC'',:b1,''GLS_TAX_ACC'', NULL ,''MV_GLS_TAX_ACC_PK'',''A_CODE,TAX_NO,AGNCY_NO'',''CB'',''NVL(UP_DATE,AD_DATE)'',52,0, NULL , NULL ,0,0, NULL   )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 101, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,6,0, NULL ,''WHERE DOC_TYPE IN (2,3) AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE IN (2,3) AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 273, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,42,0, NULL ,''WHERE DOC_TYPE=85 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=85 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 282, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,44,0, NULL ,''WHERE DOC_TYPE=92 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=92 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 263, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0, NULL ,''WHERE DOC_TYPE=93 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=93 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 101, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,6,0, NULL ,''WHERE DOC_TYPE IN (2,3) AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE IN (2,3) AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 273, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,42,0, NULL ,''WHERE DOC_TYPE=85 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=85 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR
_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 282, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,44,0, NULL ,''WHERE DOC_TYPE=92 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=92 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 263, NULL ,''ROWID'',''GNR_TAX_INPT_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,40,0, NULL ,''WHERE DOC_TYPE=93 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_INPT_MOVMNT WHERE DOC_SER=GNR_TAX_INPT_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=93 AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 228, NULL ,''ROWID'',''OTHER_CHARGES_OTHRS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,19,0,''AND BILL_TYPE=53 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM OTHER_CHARGES_OTHRS_TMP WHERE BILL_SER=OTHER_CHARGES_OTHRS.BILL_SER AND ROWNUM<=1)'',''WHERE BILL_TYPE=53 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_OTHRS WHERE BILL_SER=OTHER_CHARGES_OTHRS_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=OTHER_CHARGES_OTHRS_TMP.BILL_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND BILL_TYPE=53 AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=OTHER_CHARGES_OTHRS.BILL_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 229, NULL ,''ROWID'',''OTHER_CHARGES_ITEMS_OTHRS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,19,0,''AND BILL_TYPE=53 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_OTHRS_TMP WHERE BILL_SER=OTHER_CHARGES_ITEMS_OTHRS.BILL_SER AND ROWNUM<=1)'',''WHERE BILL_TYPE=53 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_OTHRS WHERE BILL_SER=OTHER_CHARGES_ITEMS_OTHRS_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=OTHER_CHARGES_ITEMS_OTHRS_TMP.BILL_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND BILL_TYPE=53 AND EXISTS ( SELECT 1 FROM SALES_ORDER WHERE ORDER_SER=OTHER_CHARGES_ITEMS_OTHRS.BILL_SER AND ORDER_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"DELETE FROM IAS_REPLICA_TABLE_DTL WHERE RCRD_NO IN ( 215,216  ) AND CENTER_BRANCH = ''BC''"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 215, NULL ,''ROWID'',''OTHER_CHARGES_OTHRS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,18,0,''AND BILL_TYPE=52 AND NVL(EXTERNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM OTHER_CHARGES_OTHRS_TMP WHERE BILL_SER=OTHER_CHARGES_OTHRS.BILL_SER AND ROWNUM<=1)'',''WHERE BILL_TYPE=52 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_OTHRS WHERE BILL_SER=OTHER_CHARGES_OTHRS_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=OTHER_CHARGES_OTHRS_TMP.BILL_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND BILL_TYPE=52 AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=OTHER_CHARGES_OTHRS.BILL_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,WHR_MOD,USE_DEL,USE_MV )  VALUES ( 216, NULL ,''ROWID'',''OTHER_CHARGES_ITEMS_OTHRS'', NULL , NULL ,''BILL_SER'',''BC'', NULL ,18,0,''AND BILL_TYPE=52 AND NVL(EXTE
RNAL_POST,0)=85 AND EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_OTHRS_TMP WHERE BILL_SER=OTHER_CHARGES_ITEMS_OTHRS.BILL_SER AND ROWNUM<=1)'',''WHERE BILL_TYPE=52 AND NOT EXISTS(SELECT 1 FROM OTHER_CHARGES_ITEMS_OTHRS WHERE BILL_SER=OTHER_CHARGES_ITEMS_OTHRS_TMP.BILL_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=OTHER_CHARGES_ITEMS_OTHRS_TMP.BILL_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND ROWNUM<=1)'','' AND BILL_TYPE=52 AND EXISTS ( SELECT 1 FROM QUOTATION WHERE QUOT_SER=OTHER_CHARGES_ITEMS_OTHRS.BILL_SER AND QUOT_DATE <= P_DATE AND NVL(APPROVED,0)=1 AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',0,0  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 141, NULL ,:b1,''IAS_WHTRNS_MULTI_MST'', NULL ,''PK_TMP_WHTRNS_MULTI_MST'',''TR_SER'',''BC'', NULL ,48,0,'' AND NVL(EXTERNAL_POST,0)=85 '',''WHERE NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MULTI_MST WHERE TR_SER=IAS_WHTRNS_MULTI_MST_TMP.TR_SER AND ROWNUM<=1) AND TR_DATE <= P_DATE'',0,0,'' AND TR_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 142, NULL ,''ROWID'',''IAS_WHTRNS_MULTI_DTL'', NULL , NULL ,''TR_SER'',''BC'', NULL ,48,0,'' AND NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_MULTI_MST WHERE TR_SER=IAS_WHTRNS_MULTI_DTL.TR_SER AND NVL(EXTERNAL_POST,0)=85 AND ROWNUM<=1)'',''WHERE NOT EXISTS (SELECT 1 FROM IAS_WHTRNS_MULTI_DTL WHERE TR_SER=IAS_WHTRNS_MULTI_DTL_TMP.TR_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MULTI_MST WHERE TR_SER=IAS_WHTRNS_MULTI_DTL_TMP.TR_SER AND TR_DATE <= P_DATE AND ROWNUM<=1)'',0,0,'' AND EXISTS ( SELECT 1 FROM IAS_WHTRNS_MULTI_MST WHERE TR_SER=IAS_WHTRNS_MULTI_DTL.TR_SER AND NVL(EXTERNAL_POST,0)=85 AND TR_DATE <= P_DATE AND ROWNUM<=1)''  )"SELECT NVL(USE_OUT_BILLS,0),NVL(LGHT_OUT_BILL_TYP,1)   FROM IAS_PARA_AR"UPDATE FORM_DETAIL SET F_INACTIVE=DECODE(:b1,3,0,1) WHERE FORM_NO IN ( 1128,1129,1178,1179  )"
P_ORDER )  VALUES ( 8,71,1,''CB'',8  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 9,73,1,''CB'',9  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 10,79,1,''CB'',10  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 11,85,1,''CB'',11  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 12,78,1,''CB'',12  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 13,1284,1,''CB'',13  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 14,91,1,''CB'',14  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 15,96,1,''CB'',15  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 16,92,1,''CB'',16  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 17,466,1,''CB'',17  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 18,1258,1,''CB'',18  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 19,1422,1,''CB'',19  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 20,589,1,''CB'',20  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 21,119,1,''CB'',21  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 22,1229,1,''CB'',22  )"INSERT INTO IAS_REPLICA_TABLE_MST ( TRANS_CODE,OPTION_CODE,FLAG,CENTER_BRANCH,P_ORDER )  VALUES ( 23,548,1,''CB'',23  )"INSERT 
INSERT INTO IAS_GNR_CODE_MST(MAIN_CODE, MAIN_L_NAME, MAIN_F_NAME, INACTV) VALUES (10, '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT,AD_TRMNL_NM, UP_TRMNL_NM) VALUES (1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL1', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT,AD_TRMNL_NM, UP_TRMNL_NM) VALUES (1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL2', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM) VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL3', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL4', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL5', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL6', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL7', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL8', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL9', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL10', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL1', 'Add Field 1', 1, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL2', 'Add Field 2', 2, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL3', 'Add Field 3', 3, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL4', 'Add Field 4', 4, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL6', 'Add Field 6', 6, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL7', 'Add Field 7', 7, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL8', 'Add Field 8', 8, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL9', 'Add Field 9', 9, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL10', 'Add Field 10', 10, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO ARS_CODE_MST(CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO, AD_TRMNL_NM, UP_TRMNL_NM, INACTIVE) VALUES (23, '
INSERT INTO IAS_CR_CARD_GROUP (GROUP_NO,GROUP_L_NAME,GROUP_F_NAME ) VALUES (1, '
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, DOC_PST, FLG_ST, RPRT_NM, AD_TRMNL_NM, UP_TRMNL_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)VALUES (1, 161, '
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, DOC_PST, FLG_ST, RPRT_NM, AD_TRMNL_NM, UP_TRMNL_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)VALUES (1, 160, '
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, DOC_PST, FLG_ST, RPRT_NM, AD_TRMNL_NM, UP_TRMNL_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)VALUES (2, 160, 'Request A Compensatory Quantity ', NULL, NULL, NULL, NULL, NULL, 0, 1, NULL, NULL, NULL, 1, 'SAL', 61, 0)
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, DOC_PST, FLG_ST, RPRT_NM, AD_TRMNL_NM, UP_TRMNL_NM, DOC_APPRVD_FLG, F_SYS, SYS_NO, ARCHV_FLG)VALUES (2, 161, 'Granting Compensatory Quantity ', NULL, NULL, NULL, NULL, NULL, 1, 1, NULL, NULL, NULL, 0, NULL, NULL, 0)
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME, AD_DATE, UP_DATE, FLG_ST, DOC_PST, UP_CNT, PR_REP, AD_TRMNL_NM, UP_TRMNL_NM, ARCHV_FLG)VALUES (1, 160, 1, '
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME, AD_DATE, UP_DATE, FLG_ST, DOC_PST, UP_CNT, PR_REP, AD_TRMNL_NM, UP_TRMNL_NM, ARCHV_FLG)VALUES (2, 160, 1, 'Request A Compensatory Quantity ', NULL, NULL, NULL, 1, 0, NULL, NULL, NULL, NULL, 0)
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME, AD_DATE, UP_DATE, FLG_ST, DOC_PST, UP_CNT, PR_REP, AD_TRMNL_NM, UP_TRMNL_NM, ARCHV_FLG)VALUES (1, 161, 1, '
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME, AD_DATE, UP_DATE, FLG_ST, DOC_PST, UP_CNT, PR_REP, AD_TRMNL_NM, UP_TRMNL_NM, ARCHV_FLG)VALUES (2, 161, 1, 'Granting 
INSERT INTO IAS_AR_TYPS (AR_TYPE_NO, TYP_NO, TYP_L_NM, TYP_F_NM, AD_U_ID, AD_DATE, AR_TYP_SER) VALUES (10, 1, '
INSERT INTO IAS_PRIV_AR (U_ID, AR_TYPE, S_TYPE, ADD_FLAG, VIEW_FLAG, FILL_FLAG, AD_DATE, AD_U_ID, UP_DATE, UP_U_ID) VALUES (1, 10, 1, 1, 1, 0,SYSDATE, 1, NULL, NULL)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('ARS', 44, 890, 44, NULL, 0, 0, 890, NULL, NULL, 0, NULL)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('ARS', 44, 891, 890, 'GENS014', 1, 0, 891, 404, NULL, 1, NULL)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('ARS', 44, 892, 890, 'ARSS036', 1, 0, 893, NULL, NULL, 1, NULL)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('ARS', 44, 893, 890, 'ARST041', 1, 0, 894, NULL, NULL, 3, NULL)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('ARS', 44, 894, 890, 'ARSR056', 1, 0, 895, NULL, NULL, 4, NULL)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('ARS', 44, 895, 890, 'ARSS038', 1, 0, 892, NULL, NULL, 1, NULL)
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 895, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 895, 'Coding Questionnaire Answers')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 890, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 890, 'Questionnaire System')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 891, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 891, 'General Setting')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 892, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 892, 'Questionnaire models detail')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 893, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 893, 'Items Questionnaire')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 894, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 894, 'Reports- Items Questionnaire')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1119, 1004, 'ARST020', 1, 0, 18, 700, NULL, 3, 100)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1120, 1004, 'ARST016', 1, 0, 18, 710, NULL, 3, 15)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1121, 1004, 'GLST017', 1, 0, 18, 298, NULL, 3, 85)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL,
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1123, 1004, 'GLST018', 1, 0, 18, 300, NULL, 3, 92)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1119, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1120, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1121, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1122, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1123, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1119, 'Add Discount Request Sales Invoices')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1120, 'Add Discount For Sales Invoices')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1121, 'Journals Requests')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1122, 'Payment Vouchers Requests')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1123, 'Receipt Vouchers Requests')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('ARS', 60, 864, 140, 'ARSR055', 0, 0, 301, NULL, NULL,4, NULL)
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 864, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 864, 'Cash Customer Report')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1124, 1004, 'GLST005', 1, 0, 21, 24, NULL, 3, 21)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1125, 1004, 'GLST006', 1, 0, 21, 25, NULL, 3, 22)
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1124, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1125, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1124, 'Debit Note')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1125, 'Credit Note')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)VALUES('SAL', 61, 852, 345, 'ARST040', 1, 1, 101, NULL, NULL, 3, 159)
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 852, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 852, 'Truck Out Entry Movmemnt')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)VALUES('SAL', 61, 896, 346, 'ARSR057', 0, 1, 302, NULL, NULL, NULL, NULL)
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 896, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 896, 'Truck Out Entry Movmemnt Report')
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1054, 1003, 'ARSI031',1, 0, 17, 862, NULL,2, NULL)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1054, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1054, 'Cash Customer Details')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1177, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1177, 'Cash Customer Report')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1126, 1004, 'GLST011', 1, 0, 22, 499, NULL, 3, 102)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1127, 1004, 'GLST010', 1, 0, 22, 458, NULL, 3, 98)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1126, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1127, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1126, 'Exchange Currency Request')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1127, 'Exchange Currency')
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1128, 1004, 'ARST005',1, 1, 50, 159, NULL,3, 13)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1129, 1004, 'ARST007',1, 1, 60, 161, NULL,3, 14)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1128, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1128, 'Bills Outgoing')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1129, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1129, 'Income Sales Return')
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1178, 1005, 'ARSR025',0, 1, 46, 679, NULL,4, NULL)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1179, 1005, 'ARSR026',0, 1, 46, 680, NULL,4, NULL)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1178, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1178, 'Bills Outgoing Reports')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1179, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1179, 'Income Sa
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)VALUES (1, 869, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)VALUES (2, 869, 'Group Of Cerdit Cards')
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)VALUES ('ARS', 60, 869, 64, 'ARSS039', 1, 0, 39, NULL, NULL, 2, NULL)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)VALUES('ARS', 60, 867, 64, 'ARSS040', 1, 1, 185, NULL, NULL, 1, NULL)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)VALUES('ARS', 60, 868, 139, 'ARST042', 1, 1, 126, NULL, NULL, 3, 160)
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP)VALUES('ARS', 60, 870, 139, 'ARST043', 1, 1, 127, NULL, NULL, 3, 161)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)VALUES (1, 867, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)VALUES (2, 867, 'Compensation Quantity Setup')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)VALUES (1, 868, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)VALUES (2, 868, 'Request For A Compensatory Quantity')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)VALUES (1, 870, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME)VALUES (2, 870, 'Compensatory Quantity')
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('SAL', 61, 871, 140, 'ARSR058', 0, 0, 301, NULL, NULL, 4, NULL)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 871, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 871, 'REPORT POINTS DATA')
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1055, 1003, 'ARSI005', 1, 1, 18, 143, NULL, 2, 143)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1055, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1055, 'Customer details')
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('SAL', 61, 872, 64, 'ARSS011', 0, 0, 185, NULL, NULL, 1, NULL)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 872, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 872, 'SALES CONTRACT TYPE')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1130, 1004, 'INVT017', 1, 0, 154, 638, NULL, 3, NULL)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 1130, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1130, 'Warehouse Transfer Multi')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) VALUES ('LGHT', 85, 1055, 1003, 'ARSI005',1, 1, 18, 143, NULL, 2, NULL)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 1055, 'Customer Details')
INSERT INTO IAS_FRM_FLD ( FORM_NO, TAB_NAME, FL
INSERT INTO IAS_FRM_FLD ( FORM_NO, TAB_NAME, FLD_NAME) VALUES (158, 'IAS_BILL_MST', 'DRIVER_NO')
INSERT INTO IAS_FRM_FLD(FORM_NO, TAB_NAME, FLD_NAME) VALUES (158, 'IAS_BILL_MST', 'INSRNCE_LOAD_PER')
INSERT INTO IAS_FRM_FLD (FORM_NO, TAB_NAME, FLD_NAME) VALUES (156, 'SALES_ORDER', 'INSRNCE_LOAD_PER')
INSERT INTO IAS_FRM_FLD_PRIV (U_ID, FORM_NO, TAB_NAME,FLD_NAME, PRIV_FLAG ,F_ORDER_NO,AD_U_ID,AD_DATE) 
                    FROM USER_R R,IAS_FRM_FLD F
                   WHERE F.FORM_NO IS NOT NULL
                     AND NOT EXISTS ( SELECT 1 FROM IAS_FRM_FLD_PRIV 
                                       WHERE U_ID     = R.U_ID 
                      AND EXISTS ( SELECT 1 FROM FORM_DETAIL 
                                       WHERE FORM_NO  = F.FORM_NO
INSERT INTO IAS_FRM_FLD(FORM_NO, TAB_NAME, FLD_NAME) VALUES (158, 'IAS_BILL_MST', 'NOT_USE_QUT_PRM')
INSERT INTO IAS_FRM_FLD (FORM_NO, TAB_NAME, FLD_NAME) VALUES (156, 'SALES_ORDER', 'NOT_USE_QUT_PRM')
INSERT INTO IAS_FRM_FLD_PRIV (U_ID, FORM_NO, TAB_NAME,FLD_NAME, PRIV_FLAG ,F_ORDER_NO,AD_U_ID,AD_DATE) 
                  SELECT R.U_ID,F.FORM_NO,F.TAB_NAME,F.FLD_NAME,1,1,R.AD_U_ID,R.AD_DATE
                    FROM USER_R R,IAS_FRM_FLD F
                   WHERE F.FORM_NO IS NOT NULL
                     AND NOT EXISTS ( SELECT 1 FROM IAS_FRM_FLD_PRIV 
                                       WHERE U_ID     = R.U_ID 
                      AND EXISTS ( SELECT 1 FROM FORM_DETAIL 
                                       WHERE FORM_NO  = F.FORM_NO
INSERT INTO IAS_FRM_FLD (FORM_NO, TAB_NAME, FLD_NAME) VALUES (156, 'SALES_ORDER', 'CST_ACCPT_TYP')
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES(1, 1, 2, 'INSRNCE_MDCN_CHRONIC_FLG', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES(2, 1, 2, 'INSRNCE_MDCN_CHRONIC_FLG', 'All', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES(1, 2, 1, 'INSRNCE_MDCN_CHRONIC_FLG', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES(2, 2, 1, 'INSRNCE_MDCN_CHRONIC_FLG', 'Chronic',1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES(1, 3, 0, 'INSRNCE_MDCN_CHRONIC_FLG', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES(2, 3, 0, 'INSRNCE_MDCN_CHRONIC_FLG', 'Not Chronic', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 5, 5, 'ARS_COPY_INSRNCE_DATA_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2, 5, 5, 'ARS_COPY_INSRNCE_DATA_TYP', 'Outgoing method', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1, 1,
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES (2, 1, 1, 'CST_ITM_LMT_PRD', 'Day', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 2, 2, 'CST_ITM_LMT_PRD', 'Week', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 2, 2, 'CST_ITM_LMT_PRD', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 3, 3, 'CST_ITM_LMT_PRD', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 3, 3, 'CST_ITM_LMT_PRD', 'Month', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES (1, 1, 1, 'CST_ACCNT_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'CST_ACCNT_TYP', 'General', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'CST_ACCNT_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES (2, 2, 2, 'CST_ACCNT_TYP', 'Sales Receipt Broker', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'CST_ACCNT_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'CST_ACCNT_TYP', 'Down Payment', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES (1, 4, 4, 'CST_ACCNT_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'CST_ACCNT_TYP', 'Real Estates Insurance', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 1, 0, 'ARS_COPY_INSRNCE_DATA_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 1, 1, 'ARS_COPY_INSRNCE_DATA_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 2, 2, 'ARS_COPY_INSRNCE_DATA_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 3, 3, 'ARS_COPY_INSRNCE_DATA_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 4, 4, 'ARS_COPY_INSRNCE_DATA_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 1, 0, 'ARS_COPY_INSRNCE_DATA_TYP', 'All', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 1, 1, 'ARS_COPY_INSRNCE_DATA_TYP', 'Medical Networks', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 2, 2, 'ARS_COPY_INSRNCE_DATA_TYP', 'Insurance Items Group', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 3, 3, 'ARS_COPY_INSRNCE_DATA_TYP', 'Contribution %', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 4, 4, 'ARS_COPY_INSRNCE_DATA_TYP', 'Grant Ceiling', 1, 0)
DELETE S_FLAGS WHERE FLG_CODE='CST_SCTR_TYP'
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 1, 1, 'CST_SCTR_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 1, 1, 'CST_SCTR_TYP', 'Governmental', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 2, 2, 'CST_SCTR_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 2, 2, 'CST_SCTR_TYP', 'Private', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1, 1, 0, 'CST_LMT_ITM_QTY_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2, 1, 0, 'CST_LMT_ITM_QTY_TYP', 'Not Use', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1, 2, 1, 'CST_LMT_ITM_QTY_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2, 2, 1, 'CST_LMT_ITM_QTY_TYP', 'By Customer Level', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1, 3, 2, 'CST_LMT_ITM_QTY_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2, 3, 2, 'CST_LMT_ITM_QTY_TYP', 'By Items Level', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES(1, 16, 147, 'SI_DOC_TYPE_REF', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES(2, 16, 147, 'SI_DOC_TYPE_REF', 'Calculation Customer Commissions', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (1, 1, 1, 'ARS_SHW_CNFRM_DOC', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (2, 1, 1, 'ARS_SHW_CNFRM_DOC', 'Display Only Non-Conforming Documents  ', 1)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (1, 2, 2, 'ARS_SHW_CNFRM_DOC', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (2, 2, 2, 'ARS_SHW_CNFRM_DOC', 'Display Conforming Documents', 1)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 2, 'INSRNCE_MDCN_CHRONIC_FLG', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 2, 'INSRNCE_MDCN_CHRONIC_FLG', 'All', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'INSRNCE_MDCN_CHRONIC_FLG', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'INSRNCE_MDCN_CHRONIC_FLG', 'Chronic',1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 0, 'INSRNCE_MDCN_CHRONIC_FLG', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 0, 'INSRNCE_MDCN_CHRONIC_FLG', 'Not Chronic', 1, 0)
DELETE S_FLAGS WHERE FLG_CODE='SCAL_DOC_TYP'
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES(1, 1, 1, 'SCAL_DOC_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES(2, 1, 1, 'SCAL_DOC_TYP', 'Recieve', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES(1, 2, 2, 'SCAL_DOC_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES(2, 2, 2, 'SCAL_DOC_TYP', 'Outgoing', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES(1, 1, 1, 'SCAL_TRNS_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES(2, 1, 1, 'SCAL_TRNS_TYP', 'Enter', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES(1, 2, 2, 'SCAL_TRNS_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRI
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'SCAL_R_GRP', 'Items', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FL
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'SCAL_R_GRP', 'Warehouses', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'SCAL_R_GRP', 'Out Date', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 5, 5, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 5, 5, 'SCAL_R_GRP', 'Driver No', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 6, 6, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 6, 6, 'SCAL_R_GRP', 'Driver_Name', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 7, 7, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 7, 7, 'SCAL_R_GRP', 'Car No', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 8, 8, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 8, 8, 'SCAL_R_GRP', 'Doc Type Ref', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 9, 9, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 9, 9, 'SCAL_R_GRP', 'Doc Type', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 10, 10, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 10, 10, 'SCAL_R_GRP', 'User', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 11, 11, 'SCAL_R_GRP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 11, 11, 'SCAL_R_GRP', 'Entry Date', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'SHO_SYS_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'SHO_SYS_TYP', 'Online Shopping', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'SHO_SYS_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'SHO_SYS_TYP', 'Channels', 1, 0)
DELETE S_FLAGS WHERE FLG_CODE='SHO_CONN_WC_MTHD'
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (1, 1, 1, 'SHO_CONN_WC_MTHD', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, F
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (1, 2, 2, 'SHO_CONN_WC_MTHD', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (2, 2, 2, 'SHO_CONN_WC_MTHD', 'By Province', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (1, 3, 3, 'SHO_CONN_WC_MTHD', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (2, 3, 3, 'SHO_CONN_WC_MTHD', 'By City', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (1, 4, 4, 'SHO_CONN_WC_MTHD', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (2, 4, 4, 'SHO_CONN_WC_MTHD', 'By Region',1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (1, 15, 15, 'PROFT_REP_TYPE', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (2, 15, 15, 'PROFT_REP_TYPE', 'Warehouse Group', 1)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (1, 16, 16, 'PROFT_REP_TYPE', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (2, 16, 16, 'PROFT_REP_TYPE', 'Branches Groups', 1)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'ARS_BILL_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'ARS_BILL_STATUS', 'New', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'ARS_BILL_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'ARS_BILL_STATUS', 'Payment ', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'ARS_BILL_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'ARS_BILL_STATUS', 'Fllow Up', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'ARS_BILL_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'ARS_BILL_STATUS', 'Preparation', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 5, 5, 'ARS_BILL_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 5, 5, 'ARS_BILL_STATUS', 'Outgoing', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 6, 6, 'ARS_BILL_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 6, 6, 'ARS_BILL_STATUS', 'Delivery', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'ARS_ORDR_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'ARS_ORDR_STATUS', 'New', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'ARS_ORDR_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'ARS_ORDR_STATUS', 'Approved', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'ARS_ORDR_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'ARS_ORDR_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'ARS_ORDR_STATUS', 'Outgoing', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 5, 5, 'ARS_ORDR_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 5, 5, 'ARS_ORDR_STATUS', 'Invoices', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 6, 6, 'ARS_ORDR_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 6, 6, 'ARS_ORDR_STATUS', 'Payment ', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 7, 7, 'ARS_ORDR_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 7, 7, 'ARS_ORDR_STATUS', 'Fllow Up', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 8, 8, 'ARS_ORDR_STATUS', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 8, 8, 'ARS_ORDR_STATUS', 'Delivery', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 44, 44, 'SI_REP_GRP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 44, 44, 'SI_REP_GRP', 'Warehouse Group /Items', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'LGHT_OUT_BILL_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'LGHT_OUT_BILL_TYP', 'Automatic Outgoing On Center', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'LGHT_OUT_BILL_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'LGHT_OUT_BILL_TYP', 'Use Outgoing In Center', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'LGHT_OUT_BILL_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'LGHT_OUT_BILL_TYP', 'Use Outgoing In Branch', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 1, 1, 'CST_DVC_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 1, 1, 'CST_DVC_TYP', 'Android',1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 2, 2, 'CST_DVC_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 2, 2, 'CST_DVC_TYP', 'Iphone', 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 1, 1, 'SO_QTY_STORE_MTHD', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 1, 1, 'SO_QTY_STORE_MTHD', 'Save The Avilable Quatity Only', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 2, 2, 'SO_QTY_STORE_MTHD', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 2, 2, 'SO_QTY_STORE_MTHD', 'Save The Avilable Quatity And Add Not Available Quatity To Items Orders', 1, 0)
Insert into S_F
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 3, 3, 'SO_QTY_STORE_MTHD', 'Save All Quantity', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES (1, 2, 2, 'CR_CARD_GROUP_TYP', ' 
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES (2, 2, 2, 'CR_CARD_GROUP_TYP', 'Wallet Card', 1, 0)
INSERT INTO
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)VALUES (2, 1, 1, 'CR_CARD_GROUP_TYP', 'Banking Card', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO)VALUES(1, 5, 5, 'TYPE_NAME', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO)VALUES(2, 5, 5, 'TYPE_NAME', 'ATM', 1, 1, 13065)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'CMPNS_ITM_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'CMPNS_ITM_TYP', 'By Item', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'CMPNS_ITM_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'CMPNS_ITM_TYP', 'By Item Group', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'CMPNS_ITM_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'CMPNS_ITM_TYP', 'By Item Type', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'CMPNS_ITM_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'CMPNS_ITM_TYP', 'By Item Activity', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'CMPNS_SAL_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'CMPNS_SAL_TYP', 'By Document', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'CMPNS_SAL_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'CMPNS_SAL_TYP', 'From Amount of Net Sales ', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'CMPNS_SAL_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'CMPNS_SAL_TYP', 'From Quantity Of Net Sales', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'CMPNS_SAL_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'CMPNS_SAL_TYP', 'From Amount Of Net Sales And Collection Percentage', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 0, 0, 'CMPNS_FNC_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 0, 0, 'CMPNS_FNC_TYP', 'Not Used', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALU
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'CMPNS_FNC_TYP', 'By Cost Center', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'CMPNS_FNC_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'CMPNS_FNC_TYP', 'By Activity', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'CMPNS_FNC_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'CMPNS_FNC_TYP', 'By Project', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'CMPNS_FNC_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'CMPNS_FNC_TYP', 'By Store', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 5, 5, 'CMPNS_FNC_TYP', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 5, 5, 'CMPNS_FNC_TYP', 'By Branch', 1, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) VALUES (1, 3, 8, 'LGHT_POST', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) VALUES (2, 3, 8, 'LGHT_POST', 'Income Sales Return',0, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) VALUES (1, 8, 9, 'LGHT_POST', '
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) VALUES (2, 8, 9, 'LGHT_POST', 'Bills Outgoing',0, 0)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST) VALUES (1, 17, 3701, 'SI_DOC_TYPE_REF', '
Insert Into S_Flags (Lang_No, Flg_Sr, Flg_Value, Flg_Code, Flg_Desc, Flg_St) Values (2, 17, 3701, 'SI_DOC_TYPE_REF', 'Maintenance Workshops', 1)
INSERT INTO S_LOV_SLCT
   (999, 'LOV_ARS_CNTRCT', 3635, 'SELECT        DOC_NO,
   FROM IAS_AR_CNTRCT_MST M
  WHERE NVL (CNTRCT_NO_RENEW, CNTRCT_NO) = CNTRCT_NO', 9, '292,3424,141,145,8,390,146,1,1377,', '50,50,60,55,30,120,150,0,60', NULL, '2,3 DESC', NULL, ',6,7,9,', NULL, NULL, NULL, NULL, 0)
INSERT INTO S_LOV_SLCT ( LOV_NO, LOV_NM, LOV_LBL_NO, LOV_SQL, LOV_COL_CNT, LOV_COL_LBL, LOV_COL_WDTH, LOV_COL_HID, DFLT_ORDR, LOV_COL_LTR, 
                VALUES (1000, 'LOV_GRP_BRN', 8426, 'SELECT GRP_NO,DECODE (:PARAMETER.LANG_NO, 1, NVL (GRP_L_NM, GRP_F_NM), NVL (GRP_F_NM, GRP_F_NM)) GROUP_NAME
FROM S_BRN_GRPS', 2, '169,558', '100,100,', NULL, '1', ',1,', ',2,', NULL, NULL, NULL, NULL, 0)
INSERT INTO S_LOV_SLCT ( LOV_NO, LOV_NM, LOV_LBL_NO, LOV_SQL, LOV_COL_CNT, LOV_COL_LBL, LOV_COL_WDTH, LOV_COL_HID, DFLT_ORDR, LOV_COL_LTR, 
                VALUES (1001, 'LOV_AR_WHG_CODE', 1460, 'SELECT WHG_CODE,DECODE(:PARAMETER.LANG_NO,1,NVL(WHG_A_NAME,WHG_E_NAME), NVL(WHG_E_NAME,WHG_A_NAME)) WHG_NAME 
 FROM WAREHOUSE_GROUP', 2, '169,558', '100,100,', NULL, '1', ',1,', ',2,', NULL, NULL, NULL, NULL, 0)
INSERT INTO S_LOV_SLCT ( LOV_NO, LOV_NM, LOV_LBL_NO, LOV_SQL, LOV_COL_CNT, LOV_COL_LBL, LOV_COL_WDTH, LOV_COL_HID, DFLT_ORDR, LOV_COL_LTR, 
                VALUES ( 628, 'LOV_SCAL', 15105, 'SELECT 
FROM IAS_SCAL_MOVMNT,IAS_DRIVERS,S_FLAGS
 WHERE IAS_SCAL_MOVMNT.DRIVER_NO=IAS_DRIVERS.DRIVER_NO(+)
DELETE S_LOV_SLCT WHERE LOV_NM='LOV_SO_SI' AND NVL(LOV_SPCL_FLG,0)=0
INSERT INTO S_LOV_SLCT ( LOV_NO, LOV_NM, LOV_LBL_NO, LOV_SQL, LOV_COL_CNT, 
                     VALUES (185, 'LOV_SO_SI', 117, 'SELECT   SALES_ORDER.ORDER_SER,  
                        FROM SALES_ORDER, IAS_DRIVERS,IAS_AR_CNCRT_DTL
                        WHERE SALES_ORDER.DRIVER_NO = IAS_DRIVERS.DRIVER_NO(+)
INSERT INTO S_LOV_SLCT
   (1000, 'LOV_RQ_CMPNS_QTY', 16386, 'SELECT A.DOC_SRL,
  FROM IAS_RQ_CMPNS_QTY_CLC_MST A, IAS_CMPNS_QTY_STP_MST B, CUSTOMER C
   WHERE A.CMPNS_TYP = B.CMPNS_TYP 
INSERT INTO S_LOV_SLCT
   (1001, 'LOV_CMPNS_QTY', 16168, 'SELECT A.DOC_SRL,
  FROM IAS_CMPNS_QTY_CLC_MST A, IAS_CMPNS_QTY_STP_MST B, CUSTOMER C
   WHERE A.CMPNS_TYP = B.CMPNS_TYP 
INSERT INTO S_LOV_SLCT
   (190, 'LOV_CMPNS_QTY_STP', 16168, 'SELECT CMPNS_TYP,DECODE(:PARAMETER.LANG_DFLT,1,NVL (COMM_TYP_L_NM, COMM_TYP_F_NM),
                     FROM IAS_CMPNS_QTY_STP_MST
DELETE S_LOV_SLCT WHERE LOV_NM='LOV_BILL_BKTMP' AND NVL(LOV_SPCL_FLG,0)=0
INSERT INTO S_LOV_SLCT
   (999, 'LOV_BILL_BKTMP', 16590, 'SELECT DISTINCT DOC_M_SQ,
                     FROM IAS_BILL_DTL_BKTMP
                WHERE 1=1', 7, 
INSERT INTO S_LOV_SLCT
   (999, 'LOV_CSH_CST', 15558, 'SELECT IAS_CASH_CUSTMR.CUST_CODE,
FROM IAS_CASH_CUSTMR,IAS_CASH_CUSTMR_GRP
WHERE IAS_CASH_CUSTMR.CUST_GRP_CODE=IAS_CASH_CUSTMR_GRP.CUST_GRP_CODE', 6, 
SELECT COUNT(1)   FROM IAS_REPLICA_TABLE_MST  WHERE REPLICA_AUTO_TYP IS NOT NULL"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 184,''LOV_CNTRCT_SO'',5268,''SELECT 
SELECT        IAS_AR_CNTRCT_MST.DOC_NO,
FROM          IAS_AR_CNTRCT_MST,ORDER_DETAIL,IAS_AR_CNTRCT_DTL
WHERE         NVL (APPROVED,0) = 1
GROUP BY 
0,40,150,200,90'', NULL ,''3,4 DESC'','',1,2,3,4,'','',7,8,9,'', NULL , NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 134,''LOV_SI_OUT_REQ'',1635,''SELECT     OUT_REQ_SER,
           (SELECT DOC_NO_REF FROM IAS_OUT_REQUEST_DTL WHERE OUT_REQ_SER=M.OUT_REQ_SER AND NVL(DOC_TYPE_REF,0)=53 AND ROWNUM<=1) DOC_NO_REF,
FROM IAS_OUT_REQUEST_MST M , REQUEST_TYPES R
  WHERE M.OUT_REQ_TYPE = R.REQ_TYPE
    AND R.OUT_TRNSFR IN (2,3)'',12,''1,1634,1634,343,774,388,390,1326,146,1,8951,50'',''0,0,50,50,60,60,100,50,120,0,60,60'', NULL ,''2,3'','',2,3,5,8,9,'', NULL ,''AND EXISTS (SELECT 1 FROM PRIV_REQ_TYPE
             WHERE PRIV_REQ_TYPE.REQ_TYPE = M.OUT_REQ_TYPE
             AND ROWNUM <=1    )'', NULL , NULL , NULL ,0  )"SELECT 1   FROM IAS_CST_ACCNT  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_CST_LMT_SAL  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_CST_ITM_LMT_SAL  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_INSRNCE_CLSS_ITM_TYP  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_INSRNCE_CLSS_GRP_ITM_OUT  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_INSRNCE_CLSS_LMT_MNTH  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_INSRNCE_CNTRCT_CNDTN  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_INSRNCE_ITM_GRP_MST  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_LGHT_DOC_BRN  WHERE ROWNUM <= 1"SELECT 1   FROM ARS_QUESTN_QUESTNNR  WHERE ROWNUM <= 1"SELECT 1   FROM ARS_ANSWR_QUESTNNR_MST  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_RGN_SMAN  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_CST_FINES  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_CST_LOCTN  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_ITM_SMAN  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_DRIVERS_ID  WHERE ROWNUM <= 1"SELECT 1   FROM IAS_PRM_RGN  WHERE ROWNUM <= 1"
UOT_SER'','' WHERE EXISTS(SELECT 1 FROM MV_IAS_QUT_PRM_MST WHERE QUOT_SER=IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)'', NULL ,''TR_SER'',''CB'', NULL ,49,0, NULL ,''WHERE NOT EXISTS(SELECT 1 FROM IAS_QUT_PRM_DTL WHERE QUOT_SER=MV_IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)'',1,1,'' AND EXISTS ( SELECT 1 FROM MV_IAS_QUT_PRM_DTL WHERE QUOT_SER=IAS_QUT_PRM_DTL.QUOT_SER AND ROWNUM<=1)''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,R
DROP TABLE IAS_POS_MINUS_QTY_TMP
AME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 25, NULL ,''ROWID'',''GNR_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,1,0, NULL ,''WHERE DOC_TYPE=4 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_ITM_MOVMNT_BR WHERE DOC_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_BILL_MST_BR WHERE BILL_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DATE <= P_DATE'',0,0,'' AND DOC_TYPE=4 AND EXISTS ( SELECT 1 FROM IAS_BILL_MST WHERE BILL_SER=GNR_TAX_ITM_MOVMNT.DOC_SER AND NVL(STAND_BY,0)=0 AND ROWNUM<=1) AND DOC_DATE <= P_DATE''  )"INSERT INTO IAS_REPLICA_TABLE_DTL ( RCRD_NO,MV_NAME,REFRESH_TYPE,T_NAME,WHR,PK_NAME,PK_FIELD,CENTER_BRANCH,FIELD_DATE,TRANS_CODE,USE_PERIOD,WHR_DEL,WHR_INS,USE_DEL,USE_MV,WHR_MOD )  VALUES ( 45, NULL ,''ROWID'',''GNR_TAX_ITM_MOVMNT'', NULL , NULL ,''DOC_SER'',''BC'', NULL ,2,0, NULL ,''WHERE DOC_TYPE=5 AND NOT EXISTS(SELECT 1 FROM GNR_TAX_ITM_MOVMNT_BR WHE
RE DOC_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND EXISTS ( SELECT 1 FROM IAS_RT_BILL_MST_BR WHERE RT_BILL_SER=GNR_TAX_ITM_MOVMNT_TMP.DOC_SER AND ROWNUM<=1) AND DOC_DAT
   Select M.I_Code, 
          (Select Nvl (Sum (Nvl (Cp_Qty, 0)), 0) / Nvl (D.P_Size, 1)
             From Ias_Reserve_Dtl
            Where I_Code = M.I_Code
     From Ias_Itm_Mst M,
    Where M.I_Code = D.I_Code
                Select 1
                  From Ias_Pricing_Levels
                 Where Nvl (Lev_Deflt, 0) = 1 And Lev_No(+) = I.Lev_No
Select M.Quot_No,
       Nvl((SELECT SUM (NVL (b.i_qty, 0)+nvl(FREE_QTY,0))
                           FROM   ias_bill_dtl b
                           WHERE  m.quot_ser = b.qt_prm_ser AND m.rcrd_no = b.qt_prm_rcrd_no),0) bill_qty
From   Ias_Qut_Prm_Dtl M
Where 1 = (Case
                Then (Select 1
                      From   IAS_ITM_ONLINE
                      Where  I_Code = M.I_Code
SELECT M.RCRD_NO, M.QUOT_NO, M.QUOT_SER, 
FROM IAS_QUT_PRM_SUB_DTL M ,IAS_ITM_ONLINE I
Where I.I_Code = M.I_Code
SELECT AR_TYPE ,  TYPE_NO , TYPE_L_NM ,  TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID
SELECT  1 AR_TYPE , QT_TYPE TYPE_NO ,QT_A_NAME TYPE_L_NM , QT_E_NAME TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_QUOT_TYPES
SELECT  2 AR_TYPE , SO_TYPE TYPE_NO ,SO_A_NAME TYPE_L_NM , SO_E_NAME TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_SORDER_TYPES
SELECT 3 AR_TYPE , SI_TYPE TYPE_NO ,SI_A_NAME TYPE_L_NM , SI_E_NAME TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_SALES_TYPES
SELECT  4 AR_TYPE , SR_TYPE TYPE_NO ,SR_A_NAME TYPEL_NM , SR_E_NAME TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_RT_SALES_TYPES
SELECT  5 AR_TYPE , RCPT_TYPE_NO TYPE_NO ,RCPT_A_NAME TYPE_L_NM , RCPT_E_NAME TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_RCPT_DOC_TYPES
SELECT  6 AR_TYPE , WO_TYPE_NO TYPE_NO ,WO_A_NAME TYPE_L_NM , WO_E_NAME TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_WORK_ORDER_TYPES
SELECT  7 AR_TYPE , TYP_NO TYPE_NO ,TYP_L_NM TYPE_L_NM , TYP_F_NM TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_AR_TYPS WHERE AR_TYPE_NO = 7
SELECT  8 AR_TYPE , TYP_NO TYPE_NO ,TYP_L_NM TYPE_L_NM , TYP_F_NM TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_AR_TYPS WHERE AR_TYPE_NO = 8
SELECT  9 AR_TYPE , TYP_NO TYPE_NO ,TYP_L_NM TYPE_L_NM , TYP_F_NM TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_AR_TYPS WHERE AR_TYPE_NO = 9
SELECT  10 AR_TYPE , TYP_NO TYPE_NO ,TYP_L_NM TYPE_L_NM , TYP_F_NM TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  IAS_AR_TYPS WHERE AR_TYPE_NO = 10
SELECT  21 AR_TYPE , CODE_NO TYPE_NO ,CODE_L_NM TYPE_L_NM , CODE_F_NM TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  ARS_CODE_DTL WHERE CODE_TYP=21
SELECT  22 AR_TYPE , CODE_NO TYPE_NO ,CODE_L_NM TYPE_L_NM , CODE_F_NM TYPE_F_NM ,AD_DATE, AD_U_ID, UP_DATE, UP_U_ID FROM  ARS_CODE_DTL WHERE CODE_TYP=22
SELECT I_CODE,MAX(MAX_UPDATE) LAST_UPDATE FROM 
( SELECT I_CODE,MAX(NVL(UP_DATE,AD_DATE)) MAX_UPDATE FROM IAS_ITM_ONLINE GROUP BY I_CODE
  SELECT I_CODE,MAX(NVL(UP_DATE,AD_DATE)) MAX_UPDATE FROM IAS_ITEM_PRICE GROUP BY I_CODE
  SELECT I_CODE,MAX(NVL(UP_DATE,AD_DATE)) MAX_UPDATE FROM IAS_RESERVE_DTL GROUP BY I_CODE
  SELECT I_CODE,MAX(UP_DATE) MAX_UPDATE FROM IAS_ITM_WCODE GROUP BY I_CODE)
GROUP BY I_CODE
 SELECT DISTINCT M.I_CODE,
          (SELECT NVL (SUM (NVL (CP_QTY, 0)), 0) / NVL (D.P_SIZE, 1)
             FROM IAS_RESERVE_DTL
            WHERE     I_CODE = M.I_CODE
          (SELECT SUM (((NVL (DB.I_Qty, 0) - NVL (DB.Out_Qty, 0))
             FROM Ias_Bill_Mst MB, Ias_Bill_Dtl DB
            WHERE     MB.Bill_Ser = DB.Bill_Ser
          (SELECT SUM (((NVL (DB.I_Qty, 0) - NVL (DB.Ret_Qty, 0))
             FROM Ias_Rt_Bill_Mst MB, Ias_Rt_Bill_Dtl DB
            WHERE     MB.Rt_Bill_Ser = DB.Rt_Bill_Ser
     FROM IAS_ITM_MST M,
    WHERE     M.I_CODE = D.I_CODE
                 (SELECT 1
                    FROM IAS_PRICING_LEVELS
                   WHERE     NVL (LEV_DEFLT, 0) = 1
 SELECT     M.YR_NO,
            ( SELECT  DECODE (NVL(IAS_PRMTR_PKG.GETPVA
L (P_PRMTR => 'LANG_DFLT'),1),1,NVL(BRN_LNAME,BRN_FNAME),NVL(BRN_FNAME,BRN_LNAME))FROM S_BRN WHERE BRN_NO = M.BRN_NO  ) BRN_NM,
            ( SELECT  DECODE (NVL(IAS_PRMTR_PKG.GETPVAL (P_PRMTR => 'LANG_DFLT'),1),1,NVL(REPRS_A_NAME,REPRS_E_NAME),NVL(REPRS_E_NAME,REPRS_A_NAME))FROM SALES_MAN WHERE REPRS_CODE = M.SMAN_CODE  ) SMAN_NM,
            ( SELECT  DECODE (NVL(IAS_PRMTR_PKG.GETPVAL (P_PRMTR => 'LANG_DFLT'),1),1,NVL(W_NAME,W_E_NAME),NVL(W_E_NAME,W_NAME))FROM WAREHOUSE_DETAILS WHERE W_CODE = M.W_CODE  ) W_NM,
            ( SELECT  DECODE (NVL(IAS_PRMTR_PKG.GETPVAL (P_PRMTR => 'LANG_DFLT'),1),1,NVL(CC_A_NAME,CC_E_NAME),NVL(CC_E_NAME,CC_A_NAME))FROM COST_CENTERS WHERE CC_CODE = M.CC_CODE  ) CC_NM,
            ( SELECT  DECODE (NVL(IAS_PRMTR_PKG.GETPVAL (P_PRMTR => 'LANG_DFLT'),1),1,NVL(PJ_A_NAME,PJ_E_NAME),NVL(PJ_A_NAME,PJ_E_NAME))FROM IAS_PROJECTS WHERE PJ_NO = M.PJ_NO  ) PJ_NM,
            ( SELECT  DECODE (NVL(IAS_PRMTR_PKG.GETPVAL (P_PRMTR => 'LANG_DFLT'),1),1,NVL(ACTV_A_NAME,ACTV_E_NAME),NVL(ACTV_E_NAME,ACTV_A_NAME))FROM IAS_ACTVTY WHERE ACTV_NO = M.ACTV_NO  ) ACTV_NM,
       FROM ( 
             SELECT   M.BRN_YEAR YR_NO,
                 FROM IAS_BILL_MST M, IAS_BILL_DTL D,IAS_ITM_MST I, S_PRD_DTL P
                WHERE M.BILL_SER                  = D.BILL_SER
             GROUP BY M.BRN_YEAR,
               SELECT M.BRN_YEAR YR_NO,
                 FROM IAS_RT_BILL_MST M, IAS_RT_BILL_DTL D, IAS_ITM_MST I , S_PRD_DTL P
                WHERE M.RT_BILL_SER                  = D.RT_BILL_SER
             GROUP BY M.BRN_YEAR,
      WHERE 1 = 1
   GROUP BY M.YR_NO,
     SELECT M.YR_NO,
            ( SELECT  DECODE (NVL(IAS_PRMTR_PKG.GETPVAL (P_PRMTR => 'LANG_DFLT'),1),1,NVL(BRN_LNAME,BRN_FNAME),NVL(BRN_FNAME,BRN_LNAME))FROM S_BRN WHERE BRN_NO = M.BRN_NO  ) BRN_NM,
       FROM (  SELECT M.BRN_YEAR YR_NO,
                 FROM IAS_BILL_MST M, S_PRD_DTL P
                WHERE     M.BRN_YEAR = P.YR_NO
             GROUP BY M.BRN_YEAR,
               SELECT M.BRN_YEAR YR_NO,
                 FROM IAS_RT_BILL_MST M, S_PRD_DTL P
                WHERE     M.BRN_YEAR = P.YR_NO
             GROUP BY M.BRN_YEAR,
      WHERE 1 = 1 --AND M.PYMNT_TYP_NM IS NOT NULL
   GROUP BY M.YR_NO,
              Select D.I_code,D.Itm_Unt,D.P_Size,D.W_Code,D.Expire_Date,D.Batch_No,D.I_Qty,D.Free_Qty,D.Out_Qty,D.Out_Free_Qty ,M.Bill_Date 
                From Ias_Bill_Mst M,Ias_Bill_Dtl D
               Where M.Bill_Ser = D.Bill_Ser
              Select D.I_code,D.Itm_Unt,D.P_Size,D.W_Code,D.Expire_Date,D.Batch_No,D.I_Qty,D.Free_Qty,D.Ret_Qty,D.Ret_Free_Qty ,M.Rt_Bill_Date 
                From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Dtl D
               Where M.Rt_Bill_Ser = D.Rt_Bill_Ser
Select 1 From All_Users Where UserName='
Select Use_Out_Bills From 
.Ias_Para_Ar Where RowNum<=1
Select Use_intrfc_sal_rvnu From 
                      Select D.I_code,D.Itm_Unt,D.P_Size,D.W_Code,D.Expire_Date,D.Batch_No,D.I_Qty,D.Free_Qty,D.Out_Qty,D.Out_Free_Qty ,M.Bill_Date 
                       From Ias_Bill_Mst M,Ias_Bill_Dtl D
                       Where M.Bill_Ser = D.Bill_Ser
                      Select D.I_code,D.Itm_Unt,D.P_Size,D.W_Code,D.Expire_Date,D.Batch_No,D.I_Qty,D.Free_Qty,(Nvl(D.Out_Qty,0)+Nvl(D.Out_Qty_Yr,0)) Out_Qty,(Nvl(D.Out_Free_Qty,0)+Nvl(D.Out_Free_Qty_Yr,0)) Out_Free_Qty ,M.Bill_Date 
                        From 
                       Where M.Bill_Ser = D.Bill_Ser
                      Select D.I_code,D.Itm_Unt,D.P_Size,D.W_Code,D.Expire_Date,D.Batch_No,D.I_Qty,D.Free_Qty,D.Ret_Qty,D.Ret_Free_Qty ,M.Rt_Bill_Date  
                        From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Dtl D
                       Where M.Rt_Bill_Ser = D.Rt_Bill_Ser
                      Select D.I_code,D.Itm_Unt,D.P_Size,D.W_Code,D.Expire_Date,D.Batch_No,D.I_Qty,D.Free_Qty,(Nvl(D.Ret_Qty,0)+Nvl(D.Ret_Qty_Yr,0)) Out_Qty,(Nvl(D.Ret_Free_Qty,0)+Nvl(D.Ret_Free_Qty_Yr,0)) Out_Free_Qty ,M.Rt_Bill_Date 
                        From 
                       Where M.Rt_Bill_Ser = D.Rt_Bill_Ser
SELECT REPLACE(USER,SUBSTR(USER,4,4),SUBSTR(USER,4,4) - 1 )   FROM DUAL"SELECT 1   FROM USER_OBJECTS  WHERE OBJECT_NAME = ''IAS_GEN_PKG''  AND OBJECT_TYPE = ''PACKAGE''  AND ROWNUM <= 1"
     BEGIN
       SELECT RPAD(:NEW.BRN_NO,6,0)||IAS_AR_POINT_SEQ.NEXTVAL INTO :NEW.TRNS_NO FROM DUAL;
     EXCEPTION WHEN OTHERS THEN
     END;      
    End;
CREATE OR REPLACE TRIGGER IAS_SORDR_UPDT_ITM_RSVD AFTER UPDATE 
      BEGIN 
         UPDATE IAS_RESERVE_DTL SET RESERVED=0 WHERE DOC_TYPE_REF=53 AND DOC_SER_REF=NVL(:OLD.ORDER_SER,:NEW.ORDER_SER);
      EXCEPTION WHEN OTHERS THEN 
      END;
      BEGIN  
         UPDATE IAS_RESERVE_DTL D SET RESERVED=(SELECT RESERVED FROM ORDER_DETAIL WHERE ORDER_SER=D.DOC_SER_REF AND I_CODE=D.I_CODE AND ITM_UNT=D.ITM_UNT AND RCRD_NO=D.RCRD_NO) WHERE DOC_TYPE_REF=53 AND DOC_SER_REF=NVL(:OLD.ORDER_SER,:NEW.ORDER_SER);
      EXCEPTION WHEN OTHERS THEN 
      END;   
   SELECT SYSDATE INTO :NEW.UP_DATE FROM DUAL;
 EXCEPTION WHEN OTHERS THEN
      BEGIN
        SELECT NVL(MAX(MSG_NO),0)+1 
          FROM AR_MSG_CSS;
      EXCEPTION WHEN OTHERS THEN
      END;
          END;
                  RAISE_APPLICATION_ERROR(-20091,'Error .. Can Not Update Bill No') ;                    
                  RAISE_APPLICATION_ERROR(-20092,'Error .. Can Not Update Bill Serial') ;                  
                  RAISE_APPLICATION_ERROR(-20091,'Error .. Can Not Update Return No') ;                    
                  RAISE_APPLICATION_ERROR(-20092,'Error .. Can Not Update Return Serial') ;
                  RAISE_APPLICATION_ERROR(-20091,'Error .. Can Not Update Out No') ;                    
                  RAISE_APPLICATION_ERROR(-20092,'Error .. Can Not Update Out Serial') ;
                  RAISE_APPLICATION_ERROR(-20091,'Error .. Can Not Update Return No') ;                    
                  RAISE_APPLICATION_ERROR(-20092,'Error .. Can Not Update Return Serial') ;
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL8', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL9', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(1, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL10', '
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL1', 'Add Field 1', 1, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL2', 'Add Field 2', 2, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL3', 'Add Field 3', 3, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_ID, UP_DATE, UP_CNT, AD_TRMNL_NM, UP_TRMNL_NM)VALUES(2, 845, 'IAS_AR_CNTRCT_DTL', 'FIELD_DTL4', 'Add Field 4', 4, NULL, NULL, NULL, NULL, NULL, NULL)
INSERT INTO S_SCR_LBL(LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT, FLD_NO, AD_DATE, UP_U_
CREATE TABLE IAS_PARA_AR (
CREATE TABLE CUSTOMER_CLASS ( 
CREATE TABLE CUSTOMER_DEGREE(
CREATE TABLE CREDIT_CARD_TYPES(
CREATE TABLE IAS_CR_CARD_TYPES (  
CREATE TABLE IAS_SALESMAN_TYPES(
CREATE TABLE IAS_SMAN_COMM_TYPE_MST (
CREATE TABLE IAS_SMAN_COMM_TYPE_DTL (
CREATE TABLE IAS_QUOT_TYPES(
CREATE TABLE IAS_SORDER_TYPES(
CREATE TABLE IAS_SALES_TYPES(
CREATE TABLE IAS_RT_SALES_TYPES(
CREATE TABLE IAS_WORK_ORDER_TYPES (
CREATE TABLE IAS_DEVICE_TYPES (
CREATE TABLE SALES_CHARGES ( 
CREATE TABLE SALES_CHARGES_ITEMS ( 
CREATE TABLE SALES_DISC (
CREATE TABLE IAS_SALES_DISC_HISTORY (
CREATE TABLE SALES_FREE_QTY (
CREATE TABLE IAS_SALES_COMMISSION(
CREATE TABLE IAS_SMAN_SALES_COMM(
CREATE TABLE  IAS_CUSTOMER_MEASURE(
CREATE TABLE IAS_MACHINES(
CREATE TABLE IAS_SMAN_COL_CNDTN_MST
ALTER TABLE IAS_SMAN_COL_CNDTN_MST ADD (
CREATE TABLE IAS_SMAN_COL_CNDTN_DTL
CREATE TABLE IAS_AR_TYPS
CREATE TABLE IAS_PRIV_AR(
CREATE TABLE CUSTOMER_GROUP(
CREATE TABLE IAS_SMAN_COMM_DTL (
CREATE TABLE SALES_MAN ( 
CREATE TABLE IAS_PRIV_SMAN(
CREATE TABLE COLLERCTOR (
CREATE TABLE IAS_PRIV_COLLECTORS(
CREATE TABLE IAS_DRIVERS(
CREATE TABLE IAS_COLLECTION_PLAN(
CREATE TABLE CUSTOMER ( 
CREATE TABLE IAS_PRIV_CUSTOMER ( 
CREATE TABLE CUSTOMER_CURR ( 
CREATE TABLE IAS_CUSTOMER_CC_LMT ( 
CREATE TABLE IAS_CUSTOMER_SIGNS
CREATE TABLE CUSTOMER_BNK_ACCNT (
CREATE TABLE S_SCR_CSS
CREATE TABLE S_SCR_CSS_PRV
CREATE TABLE IAS_SALES_PLAN_MST(
CREATE TABLE IAS_SALES_PLAN_DTL(
CREATE TABLE ITEMS_ORDER(
CREATE TABLE ITEMS_ORDER_IMG ( I_CODE         VARCHAR2(30 ),
CREATE TABLE ARS_PARA_CSS (  PARA_NO                  NUMBER(1),
CREATE TABLE ARS_CST_TRNS_GPS (
CREATE TABLE  IAS_CST_MEASUR_MST(
CREATE TABLE  IAS_CST_MEASUR_DTL(
CREATE TABLE  IAS_CSTMEASUR(
CREATE TABLE IAS_ROUTE_MST(
CREATE TABLE IAS_ROUTE_DTL(
CREATE TABLE IAS_COLLECTION_PLAN_MST (
CREATE TABLE REGIONS ( 
CREATE TABLE IAS_SMAN_COMM_SLICES(
CREATE TABLE IAS_SMAN_ITM_ACTVTY( 
CREATE TABLE IAS_CST_SMAN( 
CREATE TABLE IAS_PROMOTERS (
CREATE TABLE TELECOM_STP (
CREATE TABLE IAS_PRM_CST (
CREATE TABLE IAS_PRM_ITM (
CREATE TABLE IAS_CST_COL ( 
CREATE TABLE IAS_CASH_CUSTMR_GRP ( Cust_GRP_CODE    NUMBER(5),
CREATE TABLE IAS_CASH_CUSTMR ( CUST_CODE         VARCHAR2(15) NOT NULL,
CREATE TABLE IAS_CSH_CSTMR_LCTN (  CSTMR_CODE        VARCHAR2(15),
CREATE TABLE IAS_CASH_CUSTMR_POINT_TRACE 
CREATE TABLE IAS_POINT_TYP_MST
CREATE TABLE IAS_POINT_TYP_CALC_DTL
CREATE TABLE IAS_POINT_TYP_RPLC_DTL
CREATE TABLE SUB_CUSTOMER
ALTER TABLE SUB_CUSTOMER ADD CONSTRAINT SUBCUSTOMER_PK PRIMARY KEY (C_CODE, SUB_C_CODE)
CREATE TABLE IAS_MEASUR_DSC_ITM_MST
ALTER TABLE IAS_MEASUR_DSC_ITM_MST ADD CONSTRAINT IASMEASURITMMST_PK PRIMARY KEY (I_CODE, DOC_SEQ)
CREATE TABLE IAS_MEASUR_DSC_ITM_DTL
CREATE TABLE IAS_SUB_CST_MEASUR_MST
ALTER TABLE IAS_SUB_CST_MEASUR_MST ADD CONSTRAINT IASSUBCSTMSURMST_PK
CREATE TABLE IAS_SUB_CST_MEASUR_DTL
CREATE TABLE IAS_SMAN_COM_STP_MST
ALTER TABLE IAS_SMAN_COM_STP_MST ADD (
CREATE TABLE IAS_SMAN_COM_STP_DTL
ALTER TABLE IAS_SMAN_COM_STP_DTL ADD (
CREATE TABLE IAS_COL_COM_STP_MST
ALTER TABLE IAS_COL_COM_STP_MST ADD (
CREATE TABLE IAS_COL_COM_STP_DTL
ALTER TABLE IAS_COL_COM_STP_DTL ADD (
CREATE TABLE IAS_EMP_COM_STP_MST
CREATE TABLE IAS_EMP_COM_STP_DTL
ALTER TABLE IAS_EMP_COM_STP_DTL ADD (
CREATE TABLE CUSTOMER_RQ
CREATE TABLE CUSTOMER_CURR_RQ
CREATE TABLE IAS_CUSTOMER_CC_LMT_RQ
ALTER TABLE CUSTOMER_CURR_RQ ADD (
ALTER TABLE IAS_CUSTOMER_CC_LMT_RQ ADD (
ALTER TABLE IAS_CUSTOMER_CC_LMT_RQ ADD (
CREATE TABLE IAS_COL_COM_CALC_SUB_DTL
CREATE TABLE IAS_CPN_TYP_MST ( CPN_TYP_NO              NUMBER(10)            NOT NULL,
CREATE TABLE IAS_CPN_TYP_DTL
CREATE TABLE IAS_CPN_MST(
CREATE TABLE IAS_CPN_DTL
CREATE TABLE IAS_DSTR_CPN_MST
CREATE TABLE IAS_DSTR_CPN_DTL
CREATE TABLE IAS_CARD_SAL (  CRD_NO           VARCHAR2(60),
CREATE TABLE IAS_CST_COM_STP_MST  (
CREATE TABLE IAS_CST_COM_STP_DTL ( COMM_TYP       NUMBER(5),
ALTER TABLE IAS_CST_COM_STP_DTL ADD (
CREATE TABLE IAS_PRM_COM_STP_MST
CREATE TABLE IAS_PRM_COM_STP_DTL
CREATE TABLE IAS_ASSCTN_ACCNT
CREATE TABLE QUOTATION ( 
CREATE TABLE QUOTATION_DETAIL ( 
CREATE TABLE IAS_QUT_PRM_MST(
CREATE TABLE IAS_QUT_PRM_DTL(
CREATE TABLE IAS_QUT_PRM_SUB_DTL ( 
CREATE TABLE IAS_QUT_PRM_GRP_MST ( PRM_GRP_NO        NUMBER(5),
ALTER TABLE IAS_QUT_PRM_GRP_MST ADD ( CONSTRAINT IASQUTPRMGRPMST_PK PRIMARY KEY (PRM_GRP_NO))
CREATE TABLE IAS_QUT_PRM_GRP_DTL
ALTER TABLE IAS_QUT_PRM_GRP_DTL ADD ( CONSTRAINT IASQUTPRMGRPDTL_FK FOREIGN KEY (PRM_GRP_NO) REFERENCES IAS_QUT_PRM_GRP_MST (PRM_GRP_NO) ON DELETE CASCADE)
CREATE TABLE SALES_ORDER ( 
CREATE TABLE ORDER_DETAIL ( 
CREATE TABLE IAS_RECEIPT_DOC(
CREATE TABLE IAS_REQUEST_MATERIALS(  DOC_NO      NUMBER(15),
CREATE TABLE IAS_WORK_ORDER_MST (
CREATE TABLE IAS_WORK_ORDER_DTL (
CREATE TABLE IAS_BILL_MST (  BILL_DOC_TYPE    NUMBER(2)     NOT NULL, 
CREATE TABLE IAS_BILL_DTL (  BILL_DOC_TYPE       NUMBER (2)     NOT NULL, 
CREATE TABLE INSTALLMENT ( 
CREATE TABLE OTHER_CHARGES ( 
CREATE TABLE OTHER_CHARGES_ITEMS(
CREATE TABLE IAS_CARGO_SERVICES(
CREATE TABLE IAS_BILL_MST_ADD_DISC(
CREATE TABLE IAS_BILL_DTL_ADD_DISC(
CREATE TABLE MASTER_OUT_BILLS(
CREATE TABLE DETAIL_OUT_BILLS(
CREATE TABLE IAS_RT_BILL_MST (  RT_BILL_DOC_TYPE      NUMBER(2)               NOT NULL,
CREATE TABLE IAS_RT_BILL_DTL ( RT_BILL_DOC_TYPE  NUMBER (2)       NOT NULL,  
CREATE TABLE IAS_RET_BILL_MST(
CREATE TABLE IAS_RET_BILL_DTL(
CREATE TABLE K_DETAIL(
CREATE TABLE IAS_KIMB_ADJUSTMENT(
CREATE TABLE IAS_CALC_COMM_MST(
CREATE TABLE IAS_CALC_COMM_DTL(
CREATE TABLE IAS_SMAN_CALC_COMM_MST(
CREATE TABLE IAS_SMAN_CALC_COMM_DTL(
CREATE TABLE IAS_DR_CST_MST (
CREATE TABLE IAS_DR_CST_DTL ( 
CREATE TABLE IAS_DUE_CREDIT_CARD ( 
CREATE TABLE IAS_SMAN_EMP_CALC_COMM ( 
CREATE TABLE IAS_ITM_GRANT_CARD(
CREATE TABLE IAS_CST_COM_CALC_MST
CREATE TABLE IAS_CST_COM_CALC_DTL (  DOC_SRL        NUMBER(38),
CREATE TABLE IAS_BILL_MST_ADD_DISC_RQ(
CREATE TABLE IAS_BILL_DTL_ADD_DISC_RQ
CREATE TABLE IAS_INSRNCE_CMP
CREATE TABLE IAS_INSRNCE_CMP_CLSS
CREATE TABLE IAS_INSRNCE_CLSS_MDCL_NET
CREATE TABLE IAS_INSRNCE_CLSS_ITM_TYP
ALTER TABLE IAS_INSRNCE_CLSS_ITM_TYP ADD (
CREATE TABLE IAS_INSRNCE_CLSS_LMT_DOC
CREATE TABLE IAS_INSRNCE_CLSS_LMT_MNTH
CREATE TABLE IAS_INSRNCE_CARD
CREATE TABLE IAS_INSRNCE_CARD_CHRONIC
CREATE TABLE IAS_CST_CLAIM_MST
CREATE TABLE IAS_CST_CLAIM_DTL
CREATE TABLE IAS_CST_CLAIM_VST
CREATE TABLE IAS_SMAN_COM_CALC_MST
ALTER TABLE IAS_SMAN_COM_CALC_MST ADD ( 
CREATE TABLE IAS_SMAN_COM_CALC_DTL (
ALTER TABLE IAS_SMAN_COM_CALC_DTL ADD ( CONSTRAINT IASSMANCOMCALCDTL_FK  FOREIGN KEY (DOC_SRL)  REFERENCES IAS_SMAN_COM_CALC_MST (DOC_SRL))
CREATE TABLE IAS_SMAN_COM_CALC_SUB_DTL ( DOC_NO           NUMBER(15),
ALTER TABLE IAS_SMAN_COM_CALC_SUB_DTL ADD (  CONSTRAINT IASSMANCOMCALCSUBDTL_FK FOREIGN KEY (DOC_SRL) REFERENCES IAS_SMAN_COM_CALC_MST (DOC_SRL))
CREATE TABLE IAS_COL_COM_CALC_MST
ALTER TABLE IAS_COL_COM_CALC_MST ADD (
ALTER TABLE IAS_COL_COM_CALC_DTL ADD (
CREATE TABLE IAS_EMP_COM_CALC_MST
CREATE TABLE IAS_EMP_COM_CALC_DTL
ALTER TABLE IAS_EMP_COM_CALC_DTL ADD ( CONSTRAINT IASEMPCOMCALCDTL_FK  FOREIGN KEY (DOC_SRL)  REFERENCES IAS_EMP_COM_CALC_MST (DOC_SRL) )
CREATE TABLE IAS_SAL_CPN_MST ( DOC_NO           NUMBER(15)                   NOT NULL,
CREATE TABLE IAS_SAL_CPN_DTL
CREATE TABLE IAS_BILL_CPN
CREATE TABLE IAS_PRM_COM_CALC_MST
CREATE TABLE IAS_PRM_COM_CALC_DTL
CREATE TABLE IAS_POINT_CALC_TRNS ( TRNS_NO       NUMBER,
CREATE TABLE IAS_POINT_CALC_TRNS_BR (  TRNS_NO       NUMBER,
CREATE TABLE IAS_ADJST_INSTALLMENT_MST(
CREATE TABLE IAS_ADJST_INSTALLMENT_DTL(
CREATE TABLE IAS_RT_BILL_MST_RQ
CREATE TABLE IAS_RT_BILL_DTL_RQ
CREATE TABLE OTHER_CHARGES_OTHRS
CREATE TABLE OTHER_CHARGES_ITEMS_OTHRS
CREATE TABLE IAS_ASSCTN_TRNS
CREATE TABLE IAS_AR_CNTRCT_MST
CREATE TABLE IAS_AR_CNTRCT_DTL
CREATE TABLE IAS_AR_CNTRCT_RENEW
CREATE TABLE IAS_AR_CNTRCT_BTCH
CREATE TABLE IAS_CRLIMIT_TMP(
CREATE TABLE IAS_CST_VND_TMP ( 
CREATE TABLE IAS_COMP_TMP ( 
CREATE TABLE IAS_COMP_VERT_TMP(
CREATE TABLE IAS_DR_DET_TMP (
CREATE TABLE IAS_AR_ITM_DISC_AGE_TMP (   
CREATE TABLE IAS_AR_ITM_DISC_TMP ( 
CREATE TABLE IAS_AR_ITM_DISC_TMP_NW ( 
CREATE TABLE IAS_AR_ITM_SALES_EXP_TMP ( 
CREATE TABLE IAS_AR_WH_TMP (  
CREATE TABLE IAS_AR_GET_DISC_TMP ( 
CREATE TABLE IAS_AR_I
CREATE TABLE IAS_PARA_ONLINE (
CREATE TABLE IAS_DFLT_DATA_ONLINE
CREATE TABLE IAS_ITM_ONLINE
CREATE TABLE IAS_
CREATE TABLE IAS_ONLINE_CONN_WC
ALTER TABLE IAS_ONLINE_CONN_WC ADD (
ALTER TABLE IAS_ONLINE_CONN_WC ADD (
ALTER TABLE IAS_ONLINE_CONN_WC ADD (
CREATE TABLE IAS_CSTMR_CNTCT_US
CREATE TABLE ARS_NEWS_CSS
CREATE TABLE AR_MSG_CSS
CREATE TABLE CUSTOMER_CLASS_TYP
CREATE TABLE IAS_CARD_SAL_DISC_TYP ( CRD_TYP_DISC   NUMBER(5),
CREATE TABLE IAS_CST_LOCTN
ALTER TABLE IAS_CST_LOCTN ADD (
ALTER TABLE IAS_CST_LOCTN ADD (
CREATE TABLE ARS_CODE_MST
ALTER TABLE ARS_CODE_MST ADD (CONSTRAINT PK_ARS_CODE_MST PRIMARY KEY (CODE_TYP)
CREATE TABLE ARS_CODE_DTL
CREATE INDEX FK_ARS_CODE_DTL ON ARS_CODE_DTL
ALTER TABLE ARS_CODE_DTL ADD (
ALTER TABLE ARS_CODE_DTL ADD (
CREATE TABLE IAS_LGHT_DOC_BRN
ALTER TABLE IAS_LGHT_DOC_BRN ADD 
CREATE TABLE IAS_AR_CNCRT_DTL
ALTER TABLE IAS_AR_CNCRT_DTL ADD (
CREATE TABLE IAS_INSRNCE_CNTRCT_CNDTN
ALTER TABLE IAS_INSRNCE_CNTRCT_CNDTN ADD (
CREATE TABLE IAS_INSRNCE_CNTRCT_CNDTN_BILL
ALTER TABLE IAS_INSRNCE_CNTRCT_CNDTN_BILL ADD (
CREATE TABLE ARS_BILL_FLLWUP_MOVMNT
ALTER TABLE ARS_BILL_FLLWUP_MOVMNT ADD (
CREATE TABLE ARS_AUTO_SLS_ORDR_MST (
ALTER TABLE ARS_AUTO_SLS_ORDR_MST ADD (
CREATE TABLE ARS_AUTO_SLS_ORDR_DTL (
ALTER TABLE ARS_AUTO_SLS_ORDR_DTL ADD (
ALTER TABLE ARS_AUTO_SLS_ORDR_DTL ADD (
CREATE TABLE IAS_CST_LMT_SAL(
CREATE TABLE IAS_INSRNCE_ITM_GRP_MST
CREATE TABLE IAS_INSRNCE_ITM_GRP_DTL(
ALTER TABLE IAS
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_CLSS_ITM_TYP ADD (
ALTER TABLE IAS_INSRNCE_CLSS_LMT_MNTH ADD (
CREATE TABLE IAS_CST_ITM_LMT_SAL
ALTER TABLE IAS_CST_ITM_LMT_SAL ADD (
ALTER TABLE IAS_CST_ITM_LMT_SAL ADD (
CREATE TABLE IAS_CST_FINES
ALTER TABLE IAS_CST_FINES ADD (
CREATE TABLE IAS_BILL_DTL_BKTMP( DOC_TYPE          NUMBER(5),
CREATE TABLE ARS_ANSWR_QUESTNNR_MST
CREATE TABLE ARS_ANSWR_QUESTNNR_DTL
ALTER TABLE ARS_ANSWR_QUESTNNR_DTL ADD (
CREATE TABLE ARS_QUESTN_QUESTNNR
CREATE TABLE ARS_QUESTNNR_MST
ALTER TABLE ARS_QUESTNNR_MST ADD (
CREATE TABLE ARS_QUESTNNR_DTL
ALTER TABLE ARS_QUESTNNR_DTL AD
CREATE TABLE ARS_QUESTNNR_SUB_DTL
ALTER TABLE ARS_QUESTNNR_SUB_DTL ADD (
CREATE TABLE IAS_RQ_ITM_CSTMR(
CREATE TABLE IAS_CST_ACCNT
ALTER TABLE IAS_CST_ACCNT ADD (
ALTER TABLE IAS_CST_ACCNT ADD (
ALTER TABLE IAS_CST_ACCNT ADD (
CREATE TABLE IAS_INSRNCE_CLSS_GRP_ITM_OUT
ALTER TABLE IAS_INSRNCE_CLSS_GRP_ITM_OUT ADD (
ALTER TABLE IAS_INSRNCE_CLSS_GRP_ITM_OUT ADD (
CREATE TABLE IAS_DRIVERS_ID(
ALTER TABLE I
ALTER TABLE IAS_DRIVERS_ID ADD (
CREATE TABLE IAS_PRM_RGN(
ALTER TABLE IAS_PRM_RGN ADD (
CREATE TABLE IAS_RGN_SMAN(
ALTER TABLE IAS_RGN_SMAN ADD (
ALTER TABLE IAS_RGN_SMAN ADD (
CREATE TABLE IAS_ITM_SMAN(
ALTER TABLE IAS_ITM_SMAN ADD (
CREATE TABLE IAS_SCAL_MOVMNT
ALTER TABLE IAS_SCAL_MOVMNT ADD (
CREATE TABLE IAS_SMAN_DOC_SYNC_DTS(
ALTER TABLE IAS_SMAN_DOC_SYNC_DTS ADD (
ALTER TABLE SALES_ORDER ADD (  CONSTRAINT SALES_ORDER_SMAN_FK FOREIGN KEY (REP_CODE) REFERENCES SALES_MAN (REPRS_CODE) ENABLE NOVALIDATE)
ALTER TABLE QUOTATION ADD (  CONSTRAINT QUOTATION_SMAN_FK FOREIGN KEY (REP_CODE) REFERENCES SALES_MAN (REPRS_CODE) ENABLE NOVALIDATE)
ALTER TABLE CUSTOMER ADD (  CONSTRAINT CUSTOMER_SMAN_FK FOREIGN KEY (REP_CODE) REFERENCES SALES_MAN (REPRS_CODE) ENABLE NOVALIDATE)
ALTER TABLE SALES_ORDER ADD (  CONSTRAINT SALES_ORDER_COLLCTR_FK FOREIGN KEY (COL_NO) REFERENCES COLLERCTOR (COL_NO) ENABLE NOV
CREATE TABLE IAS_CST_ITM_ACTVTY
ALTER TABLE IAS_CST_ITM_ACTVTY ADD (
CREATE TABLE IAS_CST_DVCS
ALTER TABLE IAS_CST_DVCS ADD (
ALTER TABLE IAS_CST_DVCS ADD (
CREATE TABLE   IAS_CR_CARD_GROUP
ALTER TABLE IAS_CR_CARD_TYPES ADD (
CREATE TABLE IAS_CMPNS_QTY_STP_MST
CREATE TABLE IAS_CMPNS_QTY_STP_DTL
ALTER TABLE IAS_CMPNS_QTY_STP_DTL ADD CONSTRAINT IAS_CMPNS_QTY_STP_DTL_FK  FOREIGN KEY (CMPNS_TYP) REFERENCES IAS_CMPNS_QTY_STP_MST (CMPNS_TYP)
CREATE TABLE IAS_RQ_CMPNS_QTY_CLC_MST
CREATE TABLE IAS_RQ_CMPNS_QTY_CLC_DTL
ALTER TABLE IAS_RQ_CMPNS_QTY_CLC_DTL ADD (
CREATE TABLE IAS_CMPNS_QTY_CLC_MST
CREATE TABLE IAS_CMPNS_QTY_CLC_DTL
ALTER TABLE IAS_CMPNS_QTY_CLC_DTL ADD (
CREATE TABLE IAS_MEASUR_DSC_ITM_TRNS
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (1, 1, 1, 'QT_PRM_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (1, 2, 2, 'QT_PRM_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (1, 3, 3, 'QT_PRM_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (2, 1, 1, 'QT_PRM_GRP_TYP', 'Special Price', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (2, 2, 2, 'QT_PRM_GRP_TYP', 'Discount Grant', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES (2, 3, 3, 'QT_PRM_GRP_TYP', 'Free Qty. Grant', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1, 8, 8, 'QT_PRM_METHOD', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 8, 8, 'QT_PRM_METHOD', 'Special Price On Promotion Quotation Group', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 3, 53, 'SO_DOC_TYPE_REF', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 3, 53, 'SO_DOC_TYPE_REF', 'Automated Customer Order', 1, 0)
ALTER TABLE IAS_INSRNCE_CLSS_ITM_TYP DROP CONSTRAINT IASINSRNCECLSSITMTYP_UQ
ALTER TABLE IAS_INSRNCE_CLSS_ITM_TYP ADD (
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 1, 1, 'BILL_FLLWUP_MOVMNT', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 1, 1, 'BILL_FLLWUP_MOVMNT', 'Audit', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 2, 2, 'BILL_FLLWUP_MOVMNT', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 2, 2, 'BILL_FLLWUP_MOVMNT', 'Not Audit', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 3, 3, 'BILL_FLLWUP_MOVMNT', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 3, 3, 'BILL_FLLWUP_MOVMNT', 'Returned', 1, 0)
Select 1 From Sales_Charges Where Nvl(Inv_Item,0)=1 And RowNum<=1
CREATE TABLE IAS_ONLINE_CONN_WC
ALTER TABLE IAS_ONLINE_CONN_WC ADD (
ALTER TABLE IAS_ONLINE_CONN_WC ADD (
ALTER TABLE IAS_ONLINE_CONN_WC ADD (
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) VALUES(1, 40, 40, 'SALES_PLAN_TYPE', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) VALUES(2, 40, 40, 'SALES_PLAN_TYPE', 'BY SALESMAN AND MAIN GROUP', 1, 0, NULL)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) VALUES(1, 41, 41, 'SALES_PLAN_TYPE', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV, LBL_NO) VALUES(2, 41, 41, 'SALES_PLAN_TYPE', 'BY SALESMAN AND  SUB GROUP', 1, 0, NULL)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) VALUES(1, 42, 42, 'SALES_PLAN_TYPE', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, 
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) VALUES (1, 43, 43, 'SALES_PLAN_TYPE', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) ALUES(2, 43, 43, 'SALES_PLAN_TYPE', 'BY SALESMAN AND DETAIL GROUP', 1, 0, NULL)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) VALUES(1, 44, 44, 'SALES_PLAN_TYPE', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO) VALUES(2, 44, 44, 'SALES_PLAN_TYPE', 'BY SALESMAN AND  PROMOTER', 1, 0, NULL)
CREATE TABLE IAS_CSTMR_CNTCT_US
ALTER TABLE IAS_INSRNCE_CLAIM_MST RENAME TO IAS_CST_CLAIM_MST
ALTER TABLE IAS_INSRNCE_CLAIM_DTL RENAME TO IAS_CST_CLAIM_DTL
ALTER TABLE IAS_INSRNCE_CLAIM_VST RENAME TO IAS_CST_CLAIM_VST
Update Ias_Form_Name Set Form_Name ='
' Where Form_No=817 And Lang_No=1
Update Ias_Form_Name Set Form_Name ='Customer Claims' Where Form_No=817 And Lang_No=2
ALTER TABLE IAS_CST_CLAIM_MST RENAME CONSTRAINT IASINSRNCECLAIMMST_PK TO IASCSTCLAIMMST_PK
ALTER TABLE IAS_CST_CLAIM_DTL RENAME CONSTRAINT IASINSRNCECLAIMDTL_FK TO IASCSTCLAIMDTL_FK
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 18, 18, 'DISC_TYPE', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 18, 18, 'DISC_TYPE', 'Customer Group and Items And Pricing Level', 1, 0)
CREATE TABLE IAS_CST_ITM_LMT_SAL
ALTER TABLE IAS_CST_ITM_LMT_SAL ADD (
ALTER TABLE IAS_CST_ITM_LMT_SAL ADD (
CREATE TABLE IAS_CST_FINES
ALTER TABLE IAS_CST_FINES ADD (
CREATE TABLE IAS_BILL_DTL_BKTMP(  BILL_NO           NUMBER(15),
CREATE TABLE ARS_ANSWR_QUESTNNR_MST
CREATE TABLE ARS_ANSWR_QUESTNNR_DTL
ALTER TABLE ARS_ANSWR_QUESTNNR_DTL ADD (
CREATE TABLE ARS_QUESTN_QUESTNNR
CREATE TABLE ARS_QUESTNNR_MST
ALTER TABLE ARS_QUESTNNR_MST ADD (
CREATE TABLE ARS_QUESTNNR_DTL
ALTER TABLE ARS_QUESTNNR_DTL ADD (
CREATE TABLE ARS_QUESTNNR_SUB_DTL
ALTER TABLE ARS_QUESTNNR_SUB_DTL ADD (
CREATE TABLE IAS_RQ_ITM_CSTMR(
CREATE TABLE IAS_CST_ACCNT
ALTER TABLE IAS_CST_ACCNT ADD (
ALTER TABLE IAS_CST_ACCNT ADD (
ALTER TABLE IAS_CST_ACCNT ADD (
CREATE TABLE IAS_INSRNCE_CLSS_GRP_ITM_OUT
ALTER TABLE IAS_INSRNCE_CLSS_GRP_ITM_OUT ADD (
ALTER TABLE IAS_INSRNCE_CLSS_GRP_ITM_OUT ADD (
UPDATE IAS_DOCJV_TYPE_SYSTEMS SET JV_NAME='
' WHERE LANG_NO=1 AND DOC_TYPE=103
UPDATE IAS_DOCJV_TYPE_SYSTEMS SET JV_NAME='Customer Claims' WHERE LANG_NO=2 AND DOC_TYPE=103
UPDATE IAS_DOCJV_TYPE_SYSTEMS_MST SET DOC_TYPE_NAME='
' WHERE LANG_NO=1 AND DOC_TYPE=103
UPDATE IAS_DOCJV_TYPE_SYSTEMS_MST SET DOC_TYPE_NAME='Customer Claims' WHERE LANG_NO=2 AND DOC_TYPE=103
ALTER TABLE IAS_BILL_DTL_BKTMP DROP CONSTRAINT IAS_BILL_DTL_BKTMP_PK
CREATE TABLE IAS_DRIVERS_ID(
ALTER TABLE IAS_DRIVERS_ID ADD (
ALTER TABLE IAS_DRIVERS_ID ADD (
CREATE TABLE IAS_PRM_RGN(
ALTER TABLE IAS_PRM_RGN ADD (
CREATE TABLE IAS_RGN_SMAN(
ALTER TABLE IAS_RGN_SMAN ADD (
ALTER TABLE IAS_RGN_SMAN ADD (
CREATE TABLE IAS_ITM_SMAN(
ALTER TABLE IAS_ITM_SMAN ADD (
CREATE TABLE IAS_SCAL_MOVMNT
ALTER TABLE IAS_SCAL_MOVMNT ADD (
ALTER TABLE IAS_PARA_ONLINE  DROP CONSTRAINT IAS_PARA_ONLINE_PK
ALTER TABLE IAS_DFLT_DATA_ONLINE  DROP CONSTRAINT IAS_DFLT_DATA_ONLINE_PK
CREATE INDEX IAS_ITM_ONLINE_UQ ON IAS_ITM_ONLINE (I_CODE, ITM_UNT, BATCH_NO, EXPIRE_DATE,SHO_SYS_TYP)
ALTER TABLE IAS_PARA_ONLINE ADD CONSTRAINT IAS_PARA_ONLINE_PK PRIMARY KEY (PARA_NO,SHO_SYS_TYP)
ALTER TABLE IAS_DFLT_DATA_ONLINE ADD CONSTRAINT IAS_DFLT_DATA_ONLINE_PK PRIMARY KEY (DFLT_NO,SHO_SYS_TYP)
UPDATE IAS_FORM_NAME SET FORM_NAME='
' WHERE FORM_NO=2300 AND LANG_NO=1
UPDATE IAS_FORM_NAME SET FORM_NAME='E-Commerce' WHERE FORM_NO=2300 AND LANG_NO=2
ALTER TABLE IAS_AR_CNCRT_DTL DROP CONSTRAINT IAS_AR_CNCRT_DTL_FK
CREATE TABLE IAS_SMAN_DOC_SYNC_DTS(
ALTER TABLE IAS_SMAN_DOC_SYNC_DTS
ALTER TABLE SALES_ORDER ADD (  CONSTRAINT SALES_ORDER_SMAN_FK FOREIGN KEY (REP_CODE) REFERENCES SALES_MAN (REPRS_CODE) ENABLE NOVALIDATE)
ALTER TABLE QUOTATION ADD (  CONSTRAINT QUOTATION_SMAN_FK FOREIGN KEY (REP_CODE) REFERENCES SALES_MAN (REPRS_CODE) ENABLE NOVALIDATE)
ALTER TABLE CUSTOMER ADD (  CONSTRAINT CUSTOMER_SMAN_FK FOREIGN KEY (REP_CODE) REFERENCES SALES_MAN (REPRS_CODE) ENABLE NOVALIDATE)
ALTER TABLE SALES_ORDER ADD (  CONSTRAINT SALES_ORDER_COLLCTR_FK FOREIGN KEY (COL_NO) REFERENCES COLLERCTOR (COL_NO) ENABLE NOVALIDATE)
CREATE TABLE IAS_CST_ITM_ACTVTY
ALTER TABLE IAS_CST_ITM_ACTVTY ADD (
CREATE TABLE IAS_CST_DVCS
ALTER TABLE IAS_CST_DVCS ADD (
ALTER TABLE IAS_CST_DVCS ADD (
CREATE TABLE   IAS_CR_CARD_GROUP
ALTER TABLE IAS_CR_CARD_TYPES ADD (
Insert Into Ias_cr_card_group (Group_no,Group_l_name,Group_f_name ) Values (1, '
UPDATE S_FLAGS SET FLG_SR=6 WHERE FLG_CODE='TYPE_NAME' AND FLG_VALUE=6
CREATE TABLE IAS_CMPNS_QTY_STP_MST
CREATE TABLE IAS_CMPNS_QTY_STP_DTL
ALTER TABLE IAS_CMPNS_QTY_STP_DTL ADD CONSTRAINT IAS_CMPNS_QTY_STP_DTL_FK  FOREIGN KEY (CMPNS_TYP) REFERENCES IAS_CMPNS_QTY_STP_MST (CMPNS_TYP)
CREATE TABLE IAS_RQ_CMPNS_QTY_CLC_MST
CREATE TABLE IAS_RQ_CMPNS_QTY_CLC_DTL
ALTER TABLE IAS_RQ_CMPNS_QTY_CLC_DTL ADD (
CREATE TABLE IAS_CMPNS_QTY_CLC_MST
CREATE TABLE IAS_CMPNS_QTY_CLC_DTL
ALTER TABLE IAS_CMPNS_QTY_CLC_DTL ADD (
UPDATE  IAS_AR_CNTRCT_MST SET CNTRCT_TYP=1 WHERE CNTRCT_TYP IS NULL
INSERT INTO IAS_AR_TYPS (AR_TYPE_NO, TYP_NO, TYP_L_NM, TYP_F_NM, AD_U_ID, AD_DATE, AR_TYP_SER) VALUES (10, 1, '
INSERT INTO IAS_PRIV_AR (U_ID, AR_TYPE, S_TYPE, ADD_FLAG, VIEW_FLAG, FILL_FLAG, AD_DATE, AD_U_ID, UP_DATE, UP_U_ID) VALUES (1, 10, 1, 1, 1, 0,SYSDATE, 1, NULL, NULL)
ALTER TABLE IAS_BILL_DTL_BKTMP  DROP CONSTRAINT IAS_BILL_DTL_BKTMP_PK
CREATE TABLE MASTER_OUT_BILLS_BR(
CREATE TABLE DETAIL_OUT_BILLS_BR(
CREATE TABLE IAS_RET_BILL_MST_BR(
CREATE TABLE IAS_RET_BILL_DTL_BR(
CREATE TABLE AR_MSG_CSS
UPDATE S_FLAGS SET FLG_SR=4 WHERE FLG_CODE='LGHT_POST' AND FLG_VALUE=3
UPDATE S_FLAGS SET FLG_SR=5 WHERE FLG_CODE='LGHT_POST' AND FLG_VALUE=4
UPDATE S_FLAGS SET FLG_SR=7 WHERE FLG_CODE='LGHT_POST' AND FLG_VALUE=1
UPDATE S_FLAGS SET FLG_SR=9 WHERE FLG_CODE='LGHT_POST' AND FLG_VALUE=7
CREATE TABLE IAS_MEASUR_DSC_ITM_TRNS
ALTER TABLE IAS_MEASUR_DSC_ITM_TRNS ADD (
UPDATE ORDER_DETAIL M SET BILL_DOC_TYPE=(SELECT BILL_DOC_TYPE   FROM SALES_ORDER  WHERE ORDER_SER = M.ORDER_SER )"UPDATE QUOTATION_DETAIL SET DOC_SEQUENCE=IAS_DOC_SEQ_OTHR.NEXTVAL WHERE DOC_SEQUENCE IS NULL"UPDATE S_FLAGS SET FLG_ST=0 WHERE FLG_CODE = ''SMAN_CNDTN_COMM_MTHD_GRNT''  AND FLG_VALUE = 3"SELECT HEAD_OFFICE   FROM IAS_PARA_LGHT"UPDATE FORM_DETAIL SET F_INACTIVE=1 WHERE FORM_NO = 1036  AND F_INACTIVE = 0"UPDATE FORM_DETAIL SET F_INACTIVE=0 WHERE FORM_NO = 1036  AND F_INACTIVE = 1"DELETE FROM IAS_INSRNCE_ITM_GRP_MST WHERE INS_GRP_NO IN (SELECT INS_GRP_NO   FROM IAS_INSRNCE_ITM_GRP_MST  MINUS SELECT INS_GRP_NO   FROM IAS_INSRNCE_ITM_GRP_DTL )"SELECT COUNT(1)   FROM IAS_INSRNCE_ITM_GRP_MST"INSERT INTO IAS_INSRNCE_ITM_GRP_MST ( INS_GRP_NO,INS_GRP_L_NM,INS_GRP_F_NM,AD_U_ID,AD_DATE )  SELECT TYPE_OF_ITEM,IT_A_NAME,IT_E_NAME,1,SYSDATE   FROM ITEM_TYPES A  WHERE EXISTS  (SELECT 1   FROM IAS_INSRNCE_CLSS_ITM_TYP  WHERE ITEM_TYPE = A.TYPE_OF_ITEM  AND ROWNUM <= 1 )"INSERT INTO IAS_INSRNCE_ITM_GRP_DTL ( RCRD_NO,INS_GRP_NO,INS_GRP_TYP,INS_GRP_VAL )  SELECT 1,INS_GRP_NO,7,INS_GRP_NO   FROM IAS_INSRNCE_ITM_GRP_MST"UPDATE IAS_INSRNCE_CLSS_ITM_TYP SET INS_GRP_NO=ITEM_TYPE"UPDATE IAS_INSRNCE_CLSS_LMT_MNTH SET INS_GRP_NO=ITEM_TYPE"UPDATE ARS_CODE_MST SET INACTIVE=1 WHERE CODE_TYP IN ( 21,22  )"UPDATE QUOTATION_DETAIL D SET OTHR_AMT_ITM=(SELECT SUM(DECODE(NVL(UNIT_AMT,0),0,(NVL(OTHER_CHARGES_ITEMS_OTHRS.AMT,0) / DECODE(NVL(D.I_QTY,0),0,DECODE(NVL(D.FREE_QTY,0),0,1,D.FREE_QTY),D.I_QTY) ),UNIT_AMT))   FROM OTHER_CHARGES_ITEMS_OTHRS  WHERE OTHER_CHARGES_ITEMS_OTHRS.BILL_SER = D.QUOT_SER  AND OTHER_CHARGES_ITEMS_OTHRS.I_CODE = D.I_CODE  AND OTHER_CHARGES_ITEMS_OTHRS.RCRD_NO = D.RCRD_NO ) WHERE NVL(OTHR_AMT,0) > 0  AND NVL(OTHR_AMT_ITM,0) = 0"UPDATE ORDER_DETAIL D SET OTHR_AMT_ITM=(SELECT SUM(DECODE(NVL(UNIT_AMT,0),0,(NVL(OTHER_CHARGES_ITEMS_OTHRS.AMT,0) / DECODE(NVL(D.I_QTY,0),0,DECODE(NVL(D.FREE_QTY,0),0,1,D.FREE_QTY),D.I_QTY) ),UNIT_AMT))   FROM OTHER_CHARGES_ITEMS_OTHRS  WHERE OTHER_CHARGES_ITEMS_OTHRS.BILL_SER = D.ORDER_SER  AND OTHER_CHARGES_ITEMS_OTHRS.I_CODE = D.I_CODE  AND OTHER_CHARGES_ITEMS_OTHRS.RCRD_NO = D.RCRD_NO ) WHERE NVL(OTHR_AMT,0) > 0  AND NVL(OTHR_AMT_ITM,0) = 0"UPDATE IAS_BILL_DTL D SET OTHR_AMT_ITM=(SELECT SUM(DECODE(NVL(UNIT_AMT,0),0,(NVL(OTHER_CHARGES_ITEMS.AMT,0) / DECODE(NVL(D.I_QTY,0),0,DECODE(NVL(D.FREE_QTY,0),0,1,D.FREE_QTY),D.I_QTY) ),UNIT_AMT))   FROM OTHER_CHARGES_ITEMS  WHERE OTHER_CHARGES_ITEMS.BILL_SER = D.BILL_SER  AND OTHER_CHARGES_ITEMS.I_CODE = D.I_CODE  AND OTHER_CHARGES_ITEMS.RCRD_NO = D.RCRD_NO ) WHERE NVL(OTHR_AMT,0) > 0  AND NVL(OTHR_AMT_ITM,0) = 0"UPDATE S_LOV_SLCT SET LOV_COL_WDTH=''0,80,60,70,220,60,60'' WHERE LOV_NM = ''LOV_QT''"UPDATE FORM_DETAIL SET F_BT_PRIV=1 WHERE FORM_NO = 851"UPDATE IAS_CST_CLAIM_MST M SET C_CODE=(SELECT C_CODE   FROM CUSTOMER  WHERE NVL(INSRNCE_CMP_NO,0) = M.INSRNCE_CMP_NO  AND ROWNUM <= 1 ) WHERE C_CODE IS NULL"UPDATE IAS_MSGS SET CAPTION_DET=''Enter The Amount Of The Credit Cards'' WHERE LANG_NO = 2  AND MSG_NO = 4708"UPDATE S_LOV_SLCT SET LOV_COL_LTR='',1,2,4,5,7,8,9,10,'' WHERE LOV_NM = ''LOV_SI''"UPDATE S_FLAGS SET FLG_ST=0 WHERE FLG_CODE = ''QT_PRM_METHOD''  AND FLG_
VALUE = 8"DELETE FROM S_FLAGS WHERE FLG_CODE = ''ARS_COPY_INSRNCE_DATA_TYP''  AND FLG_VALUE = 5"UPDATE S_LOV_SLCT SET LOV_SQL=''SELECT BILL_SER,
  FROM IAS_BILL_MST, S_FLAGS, IAS_SALES_TYPES
 WHERE IAS_BILL_MST.BILL_DOC_TYPE = S_FLAGS.FLG_VALUE
   AND IAS_BILL_MST.SI_TYPE = IAS_SALES_TYPES.SI_TYPE'' WHERE LOV_NM = ''LOV_SI''  AND NVL(LOV_SPCL_FLG,0) = 0"UPDATE SALES_MAN SET REP_SER=ROWNUM WHERE REP_SER IS NULL"INSERT INTO IAS_INSRNCE_CLSS_GRP_ITM_OUT ( INS_CMP_NO,CLSS_NO,INS_GRP_NO,OUT_TYP,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT )  SELECT INS_CMP_NO,CLSS_NO,INS_GRP_NO,OUT_TYP,AD_U_ID,AD_DATE,UP_U_ID,UP_DATE,UP_CNT   FROM IAS_INSRNCE_CLSS_ITM_TYP  WHERE NVL(OUT_TYP,0) IN ( 2,3  )"UPDATE S_LOV_SLCT SET LOV_SQL=''SELECT PLAN_NO,
               (SELECT FLG_DESC
                  FROM S_FLAGS
                 WHERE FLG_VALUE = PLAN_TYPE
               (SELECT FLG_DESC
                  FROM S_FLAGS
                 WHERE FLG_VALUE = PLAN_DSTR_TYPE
               (SELECT FLG_DESC
                  FROM S_FLAGS
                 WHERE FLG_VALUE = PLAN_PRD_TYPE
          FROM IAS_SALES_PLAN_MST
          WHERE PLAN_TYPE IN (2,13,15,28)'' WHERE LOV_NM = ''LOV_COMM_CST_PLAN''"UPDATE FORM_DETAIL SET F_ORDER_NO=19 WHERE FORM_NO = 1117"UPDATE FORM_DETAIL SET DOC_TYP=100 WHERE FORM_NO = 1119"UPDATE FORM_DETAIL SET DOC_TYP=15 WHERE FORM_NO = 1120"UPDATE SALES_ORDER SET SHO_SYS_TYP=1 WHERE EXTERNAL_POST = 67"UPDATE IAS_PARA_ONLINE SET SHO_SYS_TYP=1"UPDATE IAS_DFLT_DATA_ONLINE SET SHO_SYS_TYP=1"UPDATE IAS_ITM_ONLINE SET SHO_SYS_TYP=1"INSERT INTO IAS_PARA_ONLINE ( PARA_NO,SHO_SYS_TYP,AD_U_ID,AD_DATE )  VALUES ( 1,1,1,SYSDATE  )"INSERT INTO IAS_PARA_ONLINE ( PARA_NO,SHO_SYS_TYP,AD_U_ID,AD_DATE )  VALUES ( 2,2,1,SYSDATE  )"UPDATE IAS_AR_CNCRT_DTL SET DOC_TYPE=53 WHERE DOC_TYPE IS NULL"UPDATE S_APPRVD_LVL SET FORM_NO=828 WHERE DOC_TYP = 57"UPDATE S_APPRVD_LVL SET FORM_NO=829 WHERE DOC_TYP = 58"UPDATE FORM_DETAIL SET F_ORDER_NO=30 WHERE FORM_NO = 1101"UPDATE FORM_DETAIL SET F_ORDER_NO=35 WHERE FORM_NO = 1102"UPDATE FORM_DETAIL SET F_ORDER_NO=40 WHERE FORM_NO = 1103"UPDATE FORM_DETAIL SET F_ORDER_NO=45 WHERE FORM_NO = 1104"UPDATE FORM_DETAIL SET F_ORDER_NO=55 WHERE FORM_NO = 1105"UPDATE FORM_DETAIL SET F_ORDER_NO=65 WHERE FORM_NO = 1110"UPDATE FORM_DETAIL SET F_ORDER_NO=70 WHERE FORM_NO = 1111"UPDATE FORM_DETAIL SET F_ORDER_NO=75 WHERE FORM_NO = 1119"UPDATE FORM_DETAIL SET F_ORDER_NO=80 WHERE FORM_NO = 1120"UPDATE FORM_DETAIL SET F_ORDER_NO=85 WHERE FORM_NO = 1124"UPDATE FORM_DETAIL SET F_ORDER_NO=90 WHERE FORM_NO = 1125"UPDATE FORM_DETAIL SET F_ORDER_NO=95 WHERE FORM_NO = 1121"UPDATE FORM_DETAIL SET F_ORDER_NO=100 WHERE FORM_NO = 1123"UPDATE FORM_DETAIL SET F_ORDER_NO=105 WHERE FORM_NO = 1122"UPDATE FORM_DETAIL SET F_ORDER_NO=110 WHERE FORM_NO = 1117"UPDATE FORM_DETAIL SET F_ORDER_NO=115 WHERE FORM_NO = 1106"UPDATE FORM_DETAIL SET F_ORDER_NO=120 WHERE FORM_NO = 1107"UPDATE FORM_DETAIL SET F_ORDER_NO=125 WHERE FORM_NO = 1126"UPDATE FORM_DETAIL SET F_ORDER_NO=130 WHERE FORM_NO = 1127"UPDATE FORM_DETAIL SET F_ORDER_NO=135 WHERE FORM_NO = 1118"UPDATE FORM_DETAIL SET F_ORDER_NO=140 WHERE FORM_NO = 1108"UPDATE FORM_DETAIL SET F_ORDER_NO=145 WHERE FORM_NO = 1115"UPDATE FORM_DETAIL SET F_ORDER_NO=150 WHERE FORM_NO = 1116"UPDATE FORM_DETAIL SET F_ORDER_NO=155 WHERE FORM_NO = 1112"UPDATE FORM_DETAIL SET F_ORDER_NO=160 WHERE FORM_NO = 1113"UPDATE FORM_DETAIL SET F_ORDER_NO=165 WHERE
 FORM_NO = 1114"UPDATE FORM_DETAIL SET F_ORDER_NO=200 WHERE FORM_NO = 1109"UPDATE S_FLAGS SET FLG_ST=1 WHERE FLG_CODE = ''DISC_TYPE''  AND FLG_VALUE = 11"UPDATE IAS_CR_CARD_TYPES SET GROUP_NO=1 WHERE GROUP_NO IS NULL"UPDATE FORM_DETAIL SET F_INACTIVE=1 WHERE FORM_NO IN ( 867,868,870  ) AND F_INACTIVE = 0"UPDATE IAS_FORM_NAME SET FORM_NAME=''
'' WHERE FORM_NO = 684  AND LANG_NO = 1"UPDATE IAS_FORM_NAME SET FORM_NAME=''Customer Claim Reports'' WHERE FORM_NO = 684  AND LANG_NO = 2"UPDATE IAS_SYS.IAS_LABELS SET CAPTION_DET=''
'' WHERE LABEL_NO = 13820  AND LANG_NO = 1"UPDATE IAS_SYS.IAS_LABELS SET CAPTION_DET=''Stages of Following up Customers Claims
'' WHERE LABEL_NO = 13820  AND LANG_NO = 2"
CREATE TABLE IAS_CSTMR_CNTCT_US
CREATE TABLE IAS_INSRNCE_CNTRCT_CNDTN
ALTER TABLE IAS_INSRNCE_CNTRCT_CNDTN ADD (
CREATE TABLE IAS_INSRNCE_CNTRCT_CNDTN_BILL
ALTER TABLE IAS_INSRNCE_CNTRCT_CNDTN_BILL ADD (
DROP TABLE IAS_CST_CNTRCT_CNDTN
DROP TABLE IAS_CST_CNTRCT_CNDTN_BILL
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 1, 1, 'VST_OPN_TYP_CST', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 2, 2, 'VST_OPN_TYP_CST', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 3, 3, 'VST_OPN_TYP_CST', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 1, 1, 'VST_OPN_TYP_CST', 'Manual', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 2, 2, 'VST_OPN_TYP_CST', 'Customer Barcode', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 3, 3, 'VST_OPN_TYP_CST', 'Manual And Customer Barcode', 1, 0)
INSERT INTO ARS_CODE_MST ( CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO, INACTIVE,AD_TRMNL_NM,UP_TRMNL_NM ) VALUES ( 21, '
INSERT INTO ARS_CODE_MST ( CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO, INACTIVE,AD_TRMNL_NM,UP_TRMNL_NM ) VALUES ( 22, '
CREATE TABLE ARS_BILL_FLLWUP_MOVMNT
ALTER TABLE ARS_BILL_FLLWUP_MOVMNT ADD (
UPDATE IAS_INSRNCE_CLAIM_MST M SET DOC_AMT = (SELECT SUM(NET_AMT) FROM IAS_INSRNCE_CLAIM_DTL WHERE DOC_SER=M.DOC_SER)
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, AD_DATE,DOC
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS_MST (LANG_NO, DOC_TYPE, DOC_TYPE_NAME, AD_U_ID, AD_DATE,DOC_PST, FLG_ST, RPRT_NM,  DOC_APPRVD_FLG,F_SYS, SYS_NO, ARCHV_FLG) VALUES (2, 103, 'Customer Claims', 1, SYSDATE, 0, 1, NULL, 1,'ARS', 60, 0)
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME, AD_DATE, FLG_ST, DOC_PST, ARCHV_FLG) VALUES (1, 103, 1, '
INSERT INTO IAS_DOCJV_TYPE_SYSTEMS (LANG_NO, DOC_TYPE, JV_TYPE, JV_NAME, REP_NAME, AD_DATE, FLG_ST, DOC_PST, ARCHV_FLG) VALUES (2, 103, 1, 'Customer Claims', NULL,SYSDATE, 0, 0, 0)
INSERT INTO S_APPRVD_MOV (LVL_NO, DOC_TYP, DOC_SER, DOC_NO, DOC_JV_TYP, DOC_DATE,APPRVD, ORDR_NO, CMP_NO, BRN_NO,BRN_YEAR, BRN_USR)
                         SELECT S.LVL_NO, S.DOC_TYP, M.DOC_SER ,M.DOC_NO,4,M.DOC_DATE,0, S.ORDR_NO,M.CMP_NO,M.BRN_NO,M.BRN_YEAR,M.BRN_USR
                           FROM S_APPRVD_LVL S,IAS_INSRNCE_CLAIM_MST M
                          WHERE S.DOC_TYP = 103
                           AND NOT EXISTS(SELECT 1 FROM S_APPRVD_MOV WHERE DOC_SER=M.DOC_SER AND ROWNUM<=1)
CREATE TABLE INV_WRHS_TRNSFR_EXPNS_BR(
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 4, 4, 'ADD_FLD_IN_DTL_FLG', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'ADD_FLD_IN_DTL_FLG', 'Four Field', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 5, 5, 'ADD_FLD_IN_DTL_FLG', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 5, 5, 'ADD_FLD_IN_DTL_FLG', 'Five Fields', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 6, 6, 'ADD_FLD_IN_DTL_FLG', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 6, 6, 'ADD_FLD_IN_DTL_FLG', 'Six Fields', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 7, 7, 'ADD_FLD_IN_DTL_FLG', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 7, 7, 'ADD_FLD_IN_DTL_FLG', 'Seven Fields', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 8, 8, 'ADD_FLD_IN_DTL_FLG', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 8, 8, 'ADD_FLD_IN_DTL_FLG', 'Eight Fields', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 9, 9, 'ADD_FLD_IN_DTL_FLG', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 9, 9, 'ADD_FLD_IN_DTL_FLG', 'Nine Fields', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 10, 10, 'ADD_FLD_IN_DTL_FLG', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 10, 10, 'ADD_FLD_IN_DTL_FLG', 'Ten', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1, 1, 52, 'SO_DOC_TYPE_REF', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 1, 52, 'SO_DOC_TYPE_REF', 'Quotation', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 2, 143, 'SO_DOC_TYPE_REF', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES (2, 2, 143, 'SO_DOC_TYPE_REF', 'Sales Contract', 1, 0)
UPDATE IAS_FORM_NAME SET FORM_NAME='
' WHERE FORM_NO=2300 AND LANG_NO=1
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1, 42, 42, 'SI_REP_GRP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 42, 42, 'SI_REP_GRP', 'Customer Group', 1, 0)
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES ( 1, 847, '
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES ( 2, 847, 'Track Sales Invoices')
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES ( 1, 848, '
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES ( 2, 848, 'Follow-up Claims OF Insurance Companies')
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 1, 0, 'ADD_FRC_SI_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 1, 0, 'ADD_FRC_SI_TYP', 'Not Used ', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 2, 1, 'ADD_FRC_SI_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 2, 2, 1, 'ADD_FRC_SI_TYP', 'Auto Add Fraction Into Discount ', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 3, 2, 'ADD_FRC_SI_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2, 3, 2, 'ADD_FRC_SI_TYP', 'Add a fraction less than 0.5 as adeduction and a higher other charge', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 1, 1, 'ARS_OUT_BILL_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 1, 1, 'ARS_OUT_BILL_TYP', 'From Current Year', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 2, 2, 'ARS_OUT_BILL_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2
, 2, 2, 'ARS_OUT_BILL_TYP', 'From Previous Year', 1, 0)
ALTER TABLE IAS_ITM_ONLINE  DROP Constraint PK_IAS_ITM_ONLINE
CREATE INDEX IAS_ITM_ONLINE_UQ ON IAS_ITM_ONLINE
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 6, 5, 'CST_COMM_SLICES_TYP', ' 
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES (2, 6, 5, 'CST_COMM_SLICES_TYP', 'Profit Margin Amount', 1, 1)
CREATE TABLE ARS_AUTO_SLS_ORDR_MST (
ALTER TABLE ARS_AUTO_SLS_ORDR_MST ADD (
CREATE TABLE ARS_AUTO_SLS_ORDR_DTL (
ALTER TABLE ARS_AUTO_SLS_ORDR_DTL ADD (
ALTER TABLE ARS_AUTO_SLS_ORDR_DTL ADD (
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES ( 1, 17, 17, 'DISC_TYPE', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2, 17, 17, 'DISC_TYPE', 'Customer Calss. And Pay Type', 1, 0)
CREATE TABLE IAS_INSRNCE_ITM_GRP_MST
CREATE TABLE IAS_INSRNCE_ITM_GRP_DTL(
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_ITM_GRP_DTL ADD (
ALTER TABLE IAS_INSRNCE_CLSS_ITM_TYP ADD (
ALTER TABLE IAS_INSRNCE_CLSS_LMT_MNTH ADD (
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES ( 1, 866, '
INSERT INTO IAS_FORM_NAME ( LANG_NO, FORM_NO, FORM_NAME ) VALUES ( 2, 866, 'Insurance Items Group')
CREATE TABLE IAS_CST_LMT_SAL(
ALTER TABLE IAS_CST_LMT_SAL ADD (
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1, 3, 53, 'SO_DOC_TYPE_REF', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2, 3, 53, 'SO_DOC_TYPE_REF', 'Automated Customer Order', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 1, 1, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 2, 2, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 3, 3, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 4, 4, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 5, 5, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 6, 6, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 7, 7, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 8, 8, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 9, 9, 'INS_GRP_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 1, 1, 'INS_GRP_TYP', 'By Group Code', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 2, 2, 'INS_GRP_TYP', 'By Main Group', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 3, 3, 'INS_GRP_TYP', 'By Sub Group', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 4, 4, 'INS_GRP_TYP', 'By Assistant Group', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 5, 5, 'INS_GRP_TYP', 'By Detail Group', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 6, 6, 'INS_GRP_TYP', 'By Alternative Group', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 7, 7, 'INS_GRP_TYP', 'By Item Type', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 8, 8, 'INS_GRP_TYP', 'By Classification', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 9, 9, 'INS_GRP_TYP', 'By Item', 1, 0)
INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 164,''LOV_SI_TR_IN'',2484,''SELECT   M.TR_NO,M.TR_TYPE,  M.TR_DATE,
    FROM IAS_WHTRNS_MST M, CUSTOMER C
   WHERE M.TR_INOUT_TYPE = 2
     AND M.C_CODE = C.C_CODE(+)'',8,''2084,151,141,390,146,143,50,0'',''60,60,60,150,150,50,50,0'', NULL ,''3,1'','',2,3,6,7,'', NULL ,'' AND EXISTS ( SELECT 1
                FROM S_BRN_USR_PRIV
               WHERE U_ID = :PARAMETER.USER_NO
                 AND ROWNUM <= 1)'', NULL , NULL , NULL ,0  )"SELECT NVL(USE_CNCRT_SYS,0)   FROM IAS_PARA_AR"UPDATE ARS_CODE_MST SET INACTIVE=1 WHERE CODE_TYP BETWEEN 1 AND 9"SELECT QUOT_SER   FROM QUOTATION  WHERE NVL(CLC_
VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND (NVL(DISC_AMT_MST_VAT,0) = 0  OR NVL(DISC_AMT_MST_VAT,0) = NVL(DISC_AMT_MST,0) )"UPDATE QUOTATION_DETAIL SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE QUOT_SER = :b1"UPDATE QUOTATION M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM QUOTATION_DETAIL  WHERE QUOT_SER = M.QUOT_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM QUOTATION_DETAIL  WHERE QUOT_SER = M.QUOT_SER ) WHERE QUOT_SER = :b1"SELECT DISTINCT M.QUOT_SER   FROM QUOTATION M,QUOTATION_DETAIL D  WHERE M.QUOT_SER = D.QUOT_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE QUOTATION_DETAIL SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE QUOT_SER = :b1"SELECT ORDER_SER   FROM SALES_ORDER  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND (NVL(DISC_AMT_MST_VAT,0) = 0  OR NVL(DISC_AMT_MST_VAT,0) = NVL(DISC_AMT_MST,0) )"UPDATE ORDER_DETAIL SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE ORDER_SER = :b1"UPDATE SALES_ORDER M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM ORDER_DETAIL  WHERE ORDER_SER = M.ORDER_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM ORDER_DETAIL  WHERE ORDER_SER = M.ORDER_SER ) WHERE ORDER_SER = :b1"SELECT DISTINCT M.ORDER_SER   FROM SALES_ORDER M,ORDER_DETAIL D  WHERE M.ORDER_SER = D.ORDER_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE ORDER_DETAIL SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE ORDER_SER = :b1"SELECT BILL_SER   FROM IAS_BILL_MST  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND (NVL(DISC_AMT_MST_VAT,0) = 0  OR NVL(DISC_AMT_MST_VAT,0) = NVL(DISC_AMT_MST,0) )"UPDATE IAS_BILL_DTL SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE BILL_SER = :b1"UPDATE IAS_BILL_MST M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_BILL_DTL  WHERE BILL_SER = M.BILL_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_BILL_DTL  WHERE BILL_SER = M.BILL_SER ) WHERE BILL_SER = :b1"SELECT DISTINCT M.BILL_SER   FROM IAS_BILL_MST M,IAS_BILL_DTL D  WHERE M.BILL_SER = D.BILL_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) >
 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE IAS_BILL_DTL SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DI
S_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE BILL_SER = :b1"SELECT RT_BILL_SER   FROM IAS_RT_BILL_MST  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND NVL(DISC_AMT_MST_VAT,0) = 0"UPDATE IAS_RT_BILL_DTL SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE RT_BILL_SER = :b1"UPDATE IAS_RT_BILL_MST M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_RT_BILL_DTL  WHERE RT_BILL_SER = M.RT_BILL_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_RT_BILL_DTL  WHERE RT_BILL_SER = M.RT_BILL_SER ) WHERE RT_BILL_SER = :b1"SELECT DISTINCT M.RT_BILL_SER   FROM IAS_RT_BILL_MST M,IAS_RT_BILL_DTL D  WHERE M.RT_BILL_SER = D.RT_BILL_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE IAS_RT_BILL_DTL SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE RT_BILL_SER = :b1"SELECT RT_BILL_SER   FROM IAS_RT_BILL_MST_RQ  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND NVL(DISC_AMT_MST_VAT,0) = 0"UPDATE IAS_RT_BILL_DTL_RQ SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE RT_BILL_SER = :b1"UPDATE IAS_RT_BILL_MST_RQ M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_RT_BILL_DTL_RQ  WHERE RT_BILL_SER = M.RT_BILL_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_RT_BILL_DTL_RQ  WHERE RT_BILL_SER = M.RT_BILL_SER ) WHERE RT_BILL_SER = :b1"SELECT DISTINCT M.RT_BILL_SER   FROM IAS_RT_BILL_MST_RQ M,IAS_RT_BILL_DTL_RQ D  WHERE M.RT_BILL_SER = D.RT_BILL_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE IAS_RT_BILL_DTL_RQ SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE RT_BILL_SER = :b1"SELECT NVL(USE_PRICE_INCLUDE_VAT,0)   FROM IAS_PARA_GEN"UPDATE CUSTOMER SET CLC_VAT_PRICE_TYP=:b1 WHERE CLC_VAT_PRICE_TYP IS NULL"UPDATE QUOTATION SET CLC_VAT_PRICE_
TYP=:b1 WHERE CLC_VAT_PRICE_TYP IS NULL"UPDATE SALES_ORDER SET CLC_VAT_PRICE_TYP=:b1 WHERE CLC_VAT_PRICE_TYP IS NULL"UPDATE IAS_BILL_MST SET CLC_VAT_PRICE_TYP=:b1 WHERE CLC_VAT_PRICE_TYP IS NULL"UPDATE IAS_RT_BILL_MST_RQ SET CLC_VAT_PRICE_TYP=:b1 WHERE CLC_VAT_PRICE_TYP IS NULL"UPDATE IAS_RT_BILL_MST SET CLC_VAT_PRICE_TYP=:b1 WHERE CLC_VAT_PRICE_TYP IS NULL"UPDATE IAS_BILL_MST_ADD_DISC_RQ SET CLC_VAT_PRICE_TYP=:b1 WHERE CLC_VAT_PRICE_TYP IS NULL"UPDATE IAS_BILL_MST_ADD_DISC SET CLC_VAT_PRICE_TYP=:b1 WHERE CLC_VAT_PRICE_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=103,SCR_TYP=3 WHERE FORM_NO = 817"INSERT INTO S_APPRVD_LVL ( LVL_NO,LVL_NM,DOC_TYP,ORDR_NO,FORM_NO,AD_U_ID,AD_DATE )  VALUES ( 1, NULL ,103,1,817,1,SYSDATE  )"SELECT NVL(USE_INSRNCE_SYS,0)   FROM IAS_PARA_AR"UPDATE FORM_DETAIL SET F_INACTIVE=0 WHERE FORM_NO IN ( 847,847  )"UPDATE FORM_DETAIL SET F_INACTIVE=1 WHERE FORM_NO IN ( 847,847  )"DELETE FROM S_LOV_SLCT WHERE LOV_NM IN ( ''LOV_SI_C_CODE'',''LOV_SI_C_CODE_SMAN''  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 631,''LOV_C_CODE_SI'',116,''SELECT CUSTOMER.C_CODE,
                                                        FROM CUSTOMER,
                                                       WHERE CUSTOMER.C_GROUP_CODE = CUSTOMER_GROUP.C_GROUP_CODE(+)
                           AND EXISTS(SELECT 1
                                     FROM PRIV_ACC
                                    WHERE U_ID = :PARAMETER.USER_NO
                                   SELECT 1
                                     FROM IAS_PR
                                    WHERE U_ID = :PARAMETER.USER_NO
                                      AND ROWNUM <= 1)))'', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 632,''LOV_C_CODE_SI_SMAN'',116,''SELECT CUSTOMER.C_CODE,
                              FROM CUSTOMER,CUSTOMER_CLASS,CUSTOMER_GROUP
                             WHERE CUSTOMER.C_GROUP_CODE = CUSTOMER_GROUP.C_GROUP_CODE(+) 
                           AND EXISTS(SELECT 1
                                     FROM PRIV_ACC
                                    WHERE U_ID = :PARAMETER.USER_NO
                                   SELECT 1
                                     FROM IAS_PRIV_CUSTOMER
                                    WHERE U_ID = :PARAMETER.USER_NO
                                      AND ROWNUM <= 1)))'', NULL , NULL , NULL ,0  )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,155,''QUOTATION_DETAIL'',''FIELD_DTL4'',''??? ????? 4-??????'',4, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,155,''QUOTATION_DETAIL'',''FIELD_DTL5'',''??? ?????5-??????'',5, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,155,''QUOTATION_DETAIL'',''FIELD_DTL6'',''??? ?????6-??????'',6, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,155,''QUOTATION_DETAIL'',''FIELD_DTL7'',''??? ?????7-??????'',7, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,F
LD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,155,''QUOTATION_DETAIL'',''FIELD_DTL8'',''??? ?????8-??????'',8, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,155
,''QUOTATION_DETAIL'',''FIELD_DTL9'',''??? ?????9-??????'',9, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,155,''QUOTATION_DETAIL'',''FIELD_DTL10'',''??? ?????10-??????'',10, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,155,''QUOTATION_DETAIL'',''FIELD_DTL4'',''Add Field 4-Detail'',4, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,155,''QUOTATION_DETAIL'',''FIELD_DTL5'',''Add Field 5-Detail'',5, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,155,''QUOTATION_DETAIL'',''FIELD_DTL6'',''Add Field 6-Detail'',6, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,155,''QUOTATION_DETAIL'',''FIELD_DTL7'',''Add Field 7-Detail'',7, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,155,''QUOTATION_DETAIL'',''FIELD_DTL8'',''Add Field 8-Detail'',8, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,155,''QUOTATION_DETAIL'',''FIELD_DTL9'',''Add Field 9-Detail'',9, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,155,''QUOTATION_DETAIL'',''FIELD_DTL10'',''Add Field 10-Detail'',10, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,156,''ORDER_DETAIL'',''FIELD_DTL4'',''??? ????? 4-??????'',4, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,156,''ORDER_DETAIL'',''FIELD_DTL5'',''??? ?????5-??????'',5, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,156,''ORDER_DETAIL'',''FIELD_DTL6'',''??? ????? 6-??????'',6, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,156,''ORDER_DETAIL'',''FIELD_DTL7'',''??? ?????7-??????'',7, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,156,''ORDER_DETAIL'',''FIELD_DTL8'',''??? ?????8-??????'',8, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,156,''ORDER_DETAIL'',''FIELD_DTL9'',''??? ?????9-??????'',9, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,156,''ORDER_DETAIL'',''FIELD_DTL10'
',''??? ?????10-??????'',10, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,156,''ORDER_DETAIL'',''FIELD_DTL4'',''Add Field 4-Detail'',4, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,156,''ORDER_DETAIL'',''FIELD_DTL5'',''Add Field 5-Detail'',5, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,156,''ORDER_DETAIL'',''FIELD_DTL6'',''Add Field 6-Detail'',6, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,156,''ORDER_DETAIL'',''FIELD_DTL7'',''Add Field 7-Detail'',7, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,156,''ORDER_DETAIL'',''FIELD_DTL8'',''Add Field 8-Detail'',8, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,156,''ORDER_DETAIL'',''FIELD_DTL9'',''Add Field 9-Detail'',9, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,156,''ORDER_DETAIL'',''FIELD_DTL10'',''Add Field 10-Detail'',10, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,158,''IAS_BILL_DTL'',''FIELD_DTL4'',''??? ????? 4-??????'',4, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,158,''IAS_BILL_DTL'',''FIELD_DTL5'',''??? ?????5-??????'',5, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,158,''IAS_BILL_DTL'',''FIELD_DTL6'',''??? ?????6-??????'',6, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,158,''IAS_BILL_DTL'',''FIELD_DTL7'',''??? ?????7-??????'',7, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,158,''IAS_BILL_DTL'',''FIELD_DTL8'',''??? ?????8-??????'',8, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,158,''IAS_BILL_DTL'',''FIELD_DTL9'',''??? ?????9-??????'',9, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 1,158,''IAS_BILL_DTL'',''FIELD_DTL10'',''??? ?????10-??????'',10, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,158,''IAS_BILL_DTL'',''FIELD_DTL5'',''Add Field 5-Detail'',5, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,158,''IAS_BILL_DTL'',''FIELD_DTL6'',''Add Field 6-Detail'',6, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_
TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,158,''IAS_BILL_DTL'',''FIELD_DTL7'',''Add Field 7-Detail'',7, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,158,''IAS_BILL_DTL'',''FIELD_DTL8'',''Add Field 8-Detail'',8, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,158,''IAS_BILL_DTL'',''FIELD_DTL9'',''Add Field 9-Detail'',9, NULL , NULL , NULL , NULL , NULL , NULL   )"INSERT INTO S_SCR_LBL ( LANG_NO,FORM_NO,OBJ_NM,FLD_NM,LBL_TXT,FLD_NO,AD_DATE,UP_U_ID,UP_DATE,UP_CNT,AD_TRMNL_NM,UP_TRMNL_NM )  VALUES ( 2,158,''IAS_BILL_DTL'',''FIELD_DTL10'',''Add Field 10-Detail'',10, NULL , NULL , NULL , NULL , NULL , NULL   )"UPDATE FORM_DETAIL SET F_INACTIVE=0 WHERE FORM_NO IN ( 847,848  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 339,''LOV_SO'',9528,''SELECT   ORDER_SER,
         DECODE (NVL ((SELECT 1
                         FROM ORDER_DETAIL
                        WHERE ORDER_SER = SALES_ORDER.ORDER_SER
    FROM SALES_ORDER,S_FLAGS
   WHERE S_FLAGS.FLG_CODE=''''APPROVED''''
          OR EXISTS (SELECT S_TYPE
                       FROM IAS_PRIV_AR
                      WHERE U_ID = :PARAMETER.USER_NO
                 ELSE (SELECT 1
                         FROM IAS_SHW_DOC_PRIV
                        WHERE U_ID = :PARAMETER.USER_NO
          OR EXISTS (SELECT 1
                       FROM S_BRN_USR_PRIV
                      WHERE U_ID = :PARAMETER.USER_NO
         )'', NULL , NULL , NULL ,0  )"SELECT QUOT_SER   FROM QUOTATION  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND (NVL(DISC_AMT_MST_VAT,0) = 0  OR NVL(DISC_AMT_MST_VAT,0) = NVL(DISC_AMT_MST,0) )"UPDAT
E QUOTATION_DETAIL SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE QUOT_SER = :b1"UPDATE QUOTATION M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM QUOTATION_DETAIL  WHERE QUOT_SER = M.QUOT_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM QUOTATION_DETAIL  WHERE QUOT_SER = M.QUOT_SER ) WHERE QUOT_SER = :b1"SELECT DISTINCT M.QUOT_SER   FROM QUOTATION M,QUOTATION_DETAIL D  WHERE M.QUOT_SER = D.QUOT_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE QUOTATION_DETAIL SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE QUOT_SER = :b1"SELECT ORDER_SER   FROM SALES_ORDER  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND (NVL(DISC_AMT_MST_VAT,0) = 0  OR NVL(DISC_AMT_MST_VAT,0) = NVL(DISC_AMT_MST,0) )"UPDATE ORDER_DETAIL SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE ORDER_SER = :b1"UPDATE SALES_ORDER M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM ORDER_DETAIL  WHERE ORDER_SER = M.ORDER_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM ORDER_DETAIL  WHERE ORDER_SER = M.ORDER_SER ) WHERE ORDER_SER = :b1"SELECT DISTINCT M.ORDER_SER   FROM SALES_ORDER M,ORDER_DETAIL D  WHERE M.ORDER_SER = D.ORDER_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE ORDER_DETAIL SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE ORDER_SER = :b1"SELECT BILL_SER   FROM IAS_BILL_MST  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND (NVL(DISC_AMT_MST_VAT,0) = 0  OR NVL(DISC_AMT_MST_VAT,0) = NVL(DISC_AMT_MST,0) )"UPDATE IAS_BILL_DTL SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE BILL_SER = :b1"UPDATE IAS_BILL_MST M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_BILL_DTL  WHERE BILL_SER = M.BILL_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_BILL_DTL  WHERE BILL_SER = M.BIL
L_SER ) WHERE BILL_SER = :b1"SELECT DISTINCT M.BILL_SER   FROM IAS_BILL_MST M,IAS_BILL_DTL D  WHERE M.BILL_SER = D.BILL_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE IAS_BILL_DTL SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE BILL_SER = :b1"SELECT RT_BILL_SER   FROM IAS_RT_BILL_MST  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND NVL(DISC_AMT_MST_VAT,0) = 0"UPDATE IAS_RT_BILL_DTL SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE RT_BILL_SER = :b1"UPDATE IAS_RT_BILL_MST M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_RT_BILL_DTL  WHERE RT_BILL_SER = M.RT_BILL_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_RT_BILL_DTL  WHERE RT_BILL_SER = M.RT_BILL_SER ) WHERE RT_BILL_SER = :b1"SELECT DISTINCT M.RT_BILL_SER   FROM IAS_RT_BILL_MST M,IAS_RT_BILL_DTL D  WHERE M.RT_BILL_SER = D.RT_BILL_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE IAS_RT_BILL_DTL SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE RT_BILL_SER = :b1"SELECT RT_BILL_SER   FROM IAS_RT_BILL_MST_RQ  WHERE NVL(CLC_VAT_PRICE_TYP,1) = 2  AND NVL(DISC_AMT_MST,0) > 0  AND NVL(DISC_AMT_MST_VAT,0) = 0"UPDATE IAS_RT_BILL_DTL_RQ SET DIS_AMT_MST_VAT=NVL(DIS_AMT_MST,0) + ((NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_MST_VAT=(NVL(DIS_AMT_MST,0) * NVL(VAT_PER,0) ) / 100  WHERE RT_BILL_SER = :b1"UPDATE IAS_RT_BILL_MST_RQ M SET DISC_AMT_MST_VAT=(SELECT SUM(NVL(DIS_AMT_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_RT_BILL_DTL_RQ  WHERE RT_BILL_SER = M.RT_BILL_SER ),VAT_AMT_DISC_MST=(SELECT SUM(NVL(VAT_AMT_DIS_MST_VAT,0) * NVL(I_QTY,0) )   FROM IAS_RT_BILL_DTL_RQ  WHERE RT_BILL_SER = M.RT_BILL_SER ) WHERE RT_BILL_SER = :b1"SELECT DISTINCT M.RT_BILL_SER   FROM IAS_RT_BILL_MST_RQ M,IAS_RT_BILL_DTL_RQ D  WHERE M.RT_BILL_SER = D.RT_BILL_SER  AND NVL(M.CLC_VAT_PRICE_TYP,1) = 2  AND ((NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = NVL(D.DIS_AMT_DTL,0) ) OR (NVL(D.DIS_AMT_DTL,0) > 0  AND NVL(DIS_AMT_DTL_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL2,0) > 0  AND NVL(DIS_AMT_DTL2_VAT,0) = 0 ) OR (NVL(D.DIS_AMT_DTL3,0) > 0  AND NVL(DIS_AMT_DTL3_VAT,0) = 0 ))"UPDATE IAS_RT_BILL_DTL_RQ SET DIS_AMT_DTL_VAT=NVL(DIS_AMT_DTL,0) + ((NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL2_VAT=NVL(DIS_AMT_DTL2,0) + ((NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100 ) ,DIS_AMT_DTL3_VAT=NVL(DIS_AMT_DTL3,0) + ((NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100 ) ,VAT_AMT_DIS_DTL_VAT=(NVL(DIS_AMT_DTL,0) * NVL(VAT_PER,0) ) / 100 ,VAT_AMT_DIS_DTL2_VAT=(NVL(DIS_AMT_DTL2,0) * NVL(VAT_PER,0) ) / 100
 ,VAT_AMT_DIS_DTL3_VAT=(NVL(DIS_AMT_DTL3,0) * NVL(VAT_PER,0) ) / 100  WHERE RT_BILL_SER = :b1"DELETE FROM S_LOV_SLCT WHERE LOV_NM = ''LOV_QT''"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 339,''LOV_QT'',120,''SELECT QUOT_SER,QUOT_NO,QT_TYPE,QUOT_DATE,C_NAME,
FROM QUOTATION 
WHERE 1=1 '',7,''757,397,151,141,390,897,50'',''0,100,60,100,150,80,60'', NULL ,''4 DESC,3,2 DESC,7'','',1,2,3,4,'','',5,6,'',''AND ((:PARAMETER.USER_NO=1) OR EXISTS(SELECT S_TYPE FROM IAS_PRIV_AR
                            WHERE U_ID=:PARAMETER.USER_NO AND NVL(VIEW_FLAG,0)=1 
           (SELECT 1 
              FROM IAS_SHW_DOC_PRIV 
             WHERE U_ID =:PARAMETER.USER_NO
        OR EXISTS (SELECT 1 FROM S_BRN_USR_PRIV
                    WHERE U_ID = :PARAMETER.USER_NO                            
                 AND ROWNUM <=1 ))'', NULL , NULL , NULL ,0  )"DELETE FROM S_LOV_SLCT WHERE LOV_NM = ''LOV_SI''  AND LOV_SPCL_FLG != 1"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 339,''LOV_SI'',118,''SELECT BILL_SER,
  FROM IAS_BILL_MST, S_FLAGS, IAS_SALES_TYPES
 WHERE IAS_BILL_MST.BILL_DOC_TYPE = S_FLAGS.FLG_VALUE
               ELSE (SELECT 1
                       FROM IAS_SHW_DOC_PRIV
                      WHERE U_ID = :PARAMETER.USER_NO
        OR EXISTS (SELECT S_TYPE
                     FROM IAS_PRIV_AR
                    WHERE U_ID = :PARAMETER.USER_NO
        OR EXISTS (SELECT 1
                     FROM S_BRN_USR_PRIV
                    WHERE U_ID = :PARAMETER.USER_NO
                      AND ROWNUM <= 1))'', NULL , NULL , NULL ,0  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,F_ORDER_NO,SCR_OR
GNL,SCR_THEME_NO,SCR_TYP,DOC_TYP )  VALUES ( ''SAL'',61,847,139,''ARST039'',1,1,158, NULL , NULL , NULL , NULL   )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,F_ORDER_NO,SCR_ORGNL,SCR_THEME_NO,SCR_TYP,DOC_TYP )  VALUES ( ''SAL'',61,848,139,''ARST039'',1,1,160, NULL , NULL , NULL , NULL   )"UPDATE FORM_DETAIL SET F_INACTIVE=1 WHERE FORM_NO = 818"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 11,''LOV_SI_OUTGNG_PY'',100,''SELECT   M.OUT_SER,
                         (SELECT DOC_NO_REF FROM IAS_OUTGOING_DTL WHERE OUT_SER=M.OUT_SER AND NVL(DOC_TYPE_REF,0)=53 AND ROWNUM<=1) DOC_NO_REF,
    FROM IAS_V_NY_OUTGOING_MST M, OUT_TYPES O
   WHERE M.OUT_TYPE = O.OUT_TYPE
     AND NVL(O.CONN_WITH_SI,0)=1'',11,''1,319,1581,1097,141,388,390,146,193,343,50'',''0,50,100,50,50,50,120,120,50,50,50'', NULL ,''2,4,5'','',2,4,5,6,9,10,'', NULL ,'' AND EXISTS ( SELECT 1
                FROM S_BRN_USR_PRIV
               WHERE U_ID = :PARAMETER.USER_NO
                 AND ROWNUM <= 1)'', NULL , NULL , NULL ,0  )"UPDATE S_FLAGS SET FLG_ST=1 WHERE FLG_CODE = ''TYPE_NAME_SI''  AND FLG_VALUE = 8"UPDATE IAS_PARA_AR SET AR_QT_WC_TYP=AR_WC_TYPE"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,F_ORDER_NO,SCR_TYP )  VALUES ( ''ARS'',60,866,138,''ARSI033'',1,1,97,2  )"UPDATE FORM_DETAIL SET F_INACTIVE=(SELECT F_INACTIVE   FROM FORM_DETAIL  WHERE FORM_NO = 815 ) WHERE FORM_NO = 866"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 105,''LOV_ITM_CLASS'',9371,''SELECT GRP_CODE, DECODE(:PARAMETER.LANG_DFLT,1,NVL(GRP_L_NAME,GRP_F_NAME) ,NVL(GRP_F_NAME,GRP_L_NAME)) G_NAME FROM IAS_GRP_ITM_LVL'',2,''3788,3789'',''80,250'', NULL ,''1'','',1,'', NULL , NULL , NULL , NULL , NULL ,0  )"UPDATE IAS_LABELS SET CAPTION_DET=''
'' WHERE LABEL_NO = 4013  AND LANG_NO = 1"UPDATE IAS_LABELS SET CAPTION_DET=''Fill Cost Into Price In Sales'' WHERE LABEL_NO = 4013  AND LANG_NO = 2"UPDATE FORM_DETAIL SET F_FILE_NAME=''ARSI033'' WHERE FORM_NO = 866"
CREATE TABLE IAS_ASSCTN_ACCNT (
CREATE TABLE IAS_ASSCTN_TRNS
CREATE TABLE IAS_AR_CNTRCT_MST
CREATE TABLE IAS_AR_CNTRCT_DTL
CREATE TABLE IAS_AR_CNTRCT_RENEW
CREATE TABLE IAS_AR_CNTRCT_BTCH
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) Values ('ARS', 60, 860, 138, 'ARSI029',1, 1, 858, NULL, NULL,2, NULL)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) VALUES ('ARS', 60, 861, 138, 'ARSI030',1, 0, 861, NULL, NULL,2, NULL)
Insert into FORM_DETAIL (F_SYS, SYS_N
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 860, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (2, 860, 'POINT PROGRAM DEFINITION')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 861, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (2, 861, 'CASH CUSTOMER GROUPS')
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 862, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (2, 862, 'CASH CUSTOMER DETAILS')
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 1, 1, 'ARS_OUT_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 1, 1, 'ARS_OUT_TYP', 'Today Date',1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 2, 2, 'ARS_OUT_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 2, 2, 'ARS_OUT_TYP', 'The Invoice Date',1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 3, 3, 'ARS_OUT_TYP', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 3, 3, 'ARS_OUT_TYP', 'On a Specific Date',1, 0)
     BEGIN
       SELECT RPAD(:NEW.BRN_NO,6,0)||IAS_AR_POINT_SEQ.NEXTVAL INTO :NEW.TRNS_NO FROM DUAL;
     EXCEPTION WHEN OTHERS THEN
     END;      
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 1, 1, 'AMT_TYP_VAL'
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2, 1, 1, 'AMT_TYP_VAL', 'Once Value', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 2, 2, 'AMT_TYP_VAL', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2, 2, 2, 'AMT_TYP_VAL', 'Variable Value', 1, 0)
ALTER TABLE IAS_ITM_ONLINE ADD (CONSTRAINT PK_IAS_ITM_ONLINE PRIMARY KEY (I_CODE,ITM_UNT))
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) Values ('LGHT', 85, 1176, 1005, 'INVR006',0, 0, 65, 249, NULL,4, NULL)
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (1, 1176, '
INSERT INTO IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (2, 1176, 'Reports- Request Out/Transfer')
     BEGIN
       SELECT RPAD(:NEW.BRN_NO,6,0)||IAS_AR_POINT_SEQ.NEXTVAL INTO :NEW.TRNS_NO FROM DUAL;
     EXCEPTION WHEN OTHERS THEN
     END;      
CREATE TABLE IAS_RT_BILL_MST_RQ_BR (   RT_BILL_DOC_TYPE      NUMBER(2)               NOT NULL,
CREATE TABLE IAS_RT_BILL_DTL_RQ_BR ( RT_BILL_DOC_TYPE  NUMBER(2)                   NOT NULL,
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,1,1,'CST_RGSTR_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,1,1,'CST_RGSTR_TYP','Regular',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,2,2,'CST_RGSTR_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,2,2,'CST_RGSTR_TYP','Consumer',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,3,3,'CST_RGSTR_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,3,3,'CST_RGSTR_TYP','Unreistered',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,4,4,'CST_RGSTR_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,4,4,'CST_RGSTR_TYP','Unknown',1,0)
CREATE TABLE IAS_CARD_SAL_DISC_TYP ( CRD_TYP_DISC   NUMBER(5),
ALTER TABLE IAS_CARD_SAL_DISC_TYP ADD ( CONSTRAINT IAS_CARD_SAL_DISC_TYP_PK PRIMARY KEY (CRD_TYP_DISC))
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) VALUES ('ARS', 60, 712, 140, 'ARSR054',0, 0, 264, NULL, NULL,4, NULL)
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 712, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (2, 712, 'Sales Contract Report')
INSERT INTO FORM_DETAIL(F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP) VALUES ('ARS', 60, 853, 64, 'ARSS035',0, 0, 121, NULL, NULL,1, NULL)
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME) VALUES (1, 853, '
Insert Into Ias_Card_Sal_Disc_Typ (Crd_Typ_Disc, Crd_Typ_L_Nm, Crd_Typ_F_Nm, Min_Sal_Amt, Disc_Per, Inactive) Values 
CREATE TABLE CUSTOMER_CLASS_TYP
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,1,1,'QT_PRM_CST_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,1,1,'QT_PRM_CST_TYP','By Customer',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,2,2,'QT_PRM_CST_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,2,2,'QT_PRM_CST_TYP','By Customer Group',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,3,3,'QT_PRM_CST_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,3,3,'QT_PRM_CST_TYP','By Customer Class',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,4,4,'QT_PRM_CST_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,4,4,'QT_PRM_CST_TYP','By Customer Degree',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,5,5,'QT_PRM_CST_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,5,5,'QT_PRM_CST_TYP','Points Customers',1,0)
DROP TABLE IAS_CNCRT_DTL
CREATE TABLE IAS_AR_CNCRT_DTL
ALTER TABLE IAS_AR_CNCRT_DTL ADD (
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 1, 158, 'IAS_BILL_MST', 'FIELD11', '
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 2, 158, 'IAS_BILL_MST', 'FIELD11', 'ADD FIELD11', 1)
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 1, 158, 'IAS_BILL_MST', 'FIELD12', '
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 2, 158, 'IAS_BILL_MST', 'FIELD12', 'ADD FIELD12', 1)
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 1, 158, 'IAS_BILL_MST', 'FIELD13', '
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 2, 158, 'IAS_BILL_MST', 'FIELD13', 'ADD FIELD13', 1)
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 1, 158, 'IAS_BILL_MST', 'FIELD14', '
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 2, 158, 'IAS_BILL_MST', 'FIELD14', 'ADD FIELD14', 1)
CREATE TABLE IAS_LGHT_DOC_BRN
ALTER TABLE IAS_LGHT_DOC_BRN ADD 
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 1, 156, 'SALES_ORDER', 'FIELD11', '
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 2, 156, 'SALES_ORDER', 'FIELD11', 'ADD FIELD11', 1)
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO,
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 2, 156, 'SALES_ORDER', 'FIELD12', 'ADD FIELD12', 1)
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 1, 156, 'SALES_ORDER', 'FIELD13', '
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 2, 156, 'SALES_ORDER', 'FIELD13', 'ADD FIELD13', 1)
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 1, 156, 'SALES_ORDER', 'FIELD14', '
INSERT INTO S_SCR_LBL ( LANG_NO, FORM_NO, OBJ_NM, FLD_NM, LBL_TXT,FLD_NO ) VALUES ( 2, 156, 'SALES_ORDER', 'FIELD14', 'ADD FIELD14', 1)
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) Values ('ARS', 61, 849, 64, 'ARSS002', 1, 1, 122, NULL, NULL, 3, NULL)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (1, 849, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (2, 849, 'General Codes For Customer System')
CREATE TABLE IAS_CST_LOCTN
ALTER TABLE IAS_CST_LOCTN ADD (
ALTER TABLE IAS_CST_LOCTN ADD (
Insert into FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO, SCR_TYP, DOC_TYP) Values ('LGHT', 85, 1118, 1004, 'INVT002', 1, 23, 224, NULL, NULL, 3, NULL)
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (1, 1118, '
Insert into IAS_FORM_NAME (LANG_NO, FORM_NO, FORM_NAME) Values (2, 1118, 'Good Received')
CREATE TABLE ARS_CODE_MST
ALTER TABLE ARS_CODE_MST ADD (CONSTRAINT PK_ARS_CODE_MST PRIMARY KEY (CODE_TYP)
CREATE TABLE ARS_CODE_DTL
CREATE INDEX FK_ARS_CODE_DTL ON ARS_CODE_DTL
ALTER TABLE ARS_CODE_DTL ADD (
ALTER TABLE ARS_CODE_DTL ADD (
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (1, '
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (2, '
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (3, '
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (4, '
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (6, ' 
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (5, '
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (9, '
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (10, '
Insert into ARS_CODE_MST (CODE_TYP, TYP_L_NM, TYP_F_NM, ORDR_NO) Values (11, '
CREATE TABLE IAS_CSH_CSTMR_LCTN (  CSTMR_CODE        VARCHAR2(15),
CREATE TABLE IAS_POINT_CALC_TRNS_BR (  TRNS_NO       NUMBER,
ALTER TABLE IAS_AR_CNCRT_DTL DROP CONSTRAINT IAS_AR_CNCRT_DTL_FK
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,6,6,'QT_PRM_CST_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,6,6,'QT_PRM_CST_TYP','Credit Card Bank',1,0)
CREATE TABLE IAS_POINT_CALC_TRNS (  TRNS_NO       NUMBER,
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES (1, 22, 22, 'SI_REP_GRP_CLMN', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 22, 22, 'SI_REP_GRP_CLMN', 'Alternative Group', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES (1, 14, 14, 'PROFT_REP_TYPE', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 14, 14, 'PROFT_REP_TYPE', 'Alternative Group', 1, 0)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 8, 8, 'TYPE_NAME', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 8, 8, 'TYPE_NAME', 'To Account',1, 1)
CREATE TABLE GNR_TAX_INPT_MOVMNT_BR ( DOC_TYPE       NUMBER(5)                      NOT NULL,
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV,LBL_NO ) VALUES ( 1, 8, 8, 'TYPE_NAME_SI', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FL
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (1, 16, 16, 'DISC_TYPE', '
Insert into S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) Values (2, 16, 16, 'DISC_TYPE', 'Items And Customer And Price Level', 1, 0)
ALTER TABLE IAS_CARGO_SERVICES  DROP CONSTRAINT IASCRGOSRVCS_FK
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 1, 1, 'OUT_BILL_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 1, 2, 2, 'OUT_BILL_TYP', '
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 1, 1, 'OUT_BILL_TYP', 'Direct Outgoing ', 1, 0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV ) VALUES ( 2, 2, 2, 'OUT_BILL_TYP', 'Delayed Outgoing', 1, 0)
UPDATE OTHER_CHARGES A SET ( SC_A_CY,SC_AC_RATE  )=(SELECT A_CY,SC_AC_RATE   FROM SALES_CHARGES  WHERE SC_NO = A.SC_NO )
 WHERE SC_NO IN (SELECT SC_NO   FROM SALES_CHARGES  WHERE AMT_TYPE = 1 )"UPDATE OTHER_CHARGES A SET SC_A_CY=A_CY,SC_AC_RATE=AC_RATE WHERE SC_A_CY IS NULL"UPDATE OTHER_CHARGES A SET SC_AMT=(NVL(AMT,0) / NVL(SC_AC_RATE,1) ) * NVL(AC_RATE,1)"UPDATE FORM_DETAIL SET SCR_TYP=4 WHERE FORM_NO IN ( 832,833,834,835,850  )"UPDATE FORM_DETAIL SET F_INACTIVE=1 WHERE FORM_NO = 853"UPDATE IAS_CARD_SAL SET CRD_TYP_DISC=1 WHERE CRD_TYP_DISC IS NULL"INSERT INTO IAS_FRM_FLD ( FORM_NO,TAB_NAME,FLD_NAME )  VALUES ( 158,''IAS_BILL_MST'',''CLC_TYP_NO_TAX''  )"UPDATE IAS_FRM_FLD_PRIV SET FLD_NAME=''CLC_TYP_NO_TAX'' WHERE FORM_NO = 158  AND FLD_NAME = ''EXPORT''"DELETE FROM IAS_FRM_FLD WHERE FLD_NAME = ''EXPORT''"UPDATE IAS_BILL_MST SET AC_CODE=CASH_AC_FCC,AC_DTL_TYP=1,AC_CODE_DTL=CASH_NO_FCC,PYMNT_AC=1 WHERE NVL(INSRNCE_CSH_AMT,0) > 0  AND BILL_DOC_TYPE = 4  AND CASH_NO_FCC IS NOT NULL"UPDATE IAS_BILL_MST SET CASH_AC_FCC= NULL ,CASH_NO_FCC= NULL  WHERE NVL(INSRNCE_CSH_AMT,0) > 0  AND BILL_DOC_TYPE = 4  AND CASH_NO_FCC IS NOT NULL"UPDATE IAS_PARA_AR SET PAID_SCR_TYP=DECODE(NVL(USE_OUT_BILLS,0),1,2,1) WHERE PAID_SCR_TYP IS NULL"UPDATE S_LOV_SLCT SET LOV_SQL=''SELECT PLAN_NO,
       (SELECT FLG_DESC
          FROM S_FLAGS
         WHERE FLG_VALUE = PLAN_TYPE
       (SELECT FLG_DESC
          FROM S_FLAGS
         WHERE FLG_VALUE = PLAN_DSTR_TYPE
       (SELECT FLG_DESC
          FROM S_FLAGS
         WHERE FLG_VALUE = PLAN_PRD_TYPE
  FROM IAS_SALES_PLAN_MST
  WHERE PLAN_TYPE=30'' WHERE LOV_NM = ''LOV_COMM_COL_PLAN''"UPDATE IAS_ITM_MST A SET ALLOW_DISC=1 WHERE EXISTS  (SELECT G_CODE   FROM SALES_DISC  WHERE G_CODE = A.G_CODE )"INSERT INTO IAS_LGHT_DOC_BRN ( BRN_NO,POST_DOC_TYPE,INPT_CNTR_BR
_TYP )  SELECT BRN_NO,8,2   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"INSERT INTO IAS_LGHT_DOC_BRN ( BRN_NO,POST_DOC_TYPE,INPT_CNTR_BR_TYP )  SELECT BRN_NO,9,2   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"INSERT INTO IAS_LGHT_DOC_BRN ( BRN_NO,POST_DOC_TYPE,INPT_CNTR_BR_TYP )  SELECT BRN_NO,11,2   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"INSERT INTO IAS_LGHT_DOC_BRN ( BRN_NO,POST_DOC_TYPE,INPT_CNTR_BR_TYP )  SELECT BRN_NO,12,2   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"INSERT INTO IAS_LGHT_DOC_BRN ( BRN_NO,POST_DOC_TYPE,INPT_CNTR_BR_TYP )  SELECT BRN_NO,1,2   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"INSERT INTO IAS_LGHT_DOC_BRN ( BRN_NO,POST_DOC_TYPE,INPT_CNTR_BR_TYP )  SELECT BRN_NO,2,2   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"INSERT INTO IAS_LGHT_DOC_BRN ( BRN_NO,POST_DOC_TYPE,INPT_CNTR_BR_TYP )  SELECT BRN_NO,3,2   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"UPDATE IAS_AR_CNCRT_DTL SET DOC_TYPE=53 WHERE DOC_TYPE IS NULL"UPDATE S_FLAGS SET LBL_NO=13065 WHERE FLG_CODE = ''TYPE_NAME_SI''"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY )  VALUES ( 499,''LOV_TYPE_NAME_SI'',535,''Select Flg_Value ,Flg_Desc  From S_Flags Where Upper(Flg_Code)  =Upper(''''Type_Name_Si'''') 
                          Order By Flg_Sr'',2,''351,535'',''50,150'', NULL ,''1'','',1,'','',2,'', NULL , NULL , NULL , NULL   )"UPDATE S_FLAGS SET FLG_VALUE=146 WHERE FLG_CODE = ''SI_DOC_TYPE_REF''  AND FLG_VALUE = 142"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY )  VALUES ( 499,''LOV_TYPE_NAME_SI'',535,''SELECT FLG_VALUE ,FLG_DESC  FROM S_FLAGS WHERE UPPER(FLG_CODE)  =UPPER(''''TYPE_NAME_SI'''') 
                                                                                                  ORDER BY FLG_SR'',2,''351,535'',''50,150'', NULL ,''1'','',1,'','',2,'', NULL , NULL , NULL , NULL   )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 182,''LOV_SI_SO'',117,''SELECT RCRD_NO,
                                    ORDER_NO,ORDER_SER,EXEC_QTY,REMIN_QTY FROM(SELECT  ORDER_DETAIL.RCRD_NO,
                              FROM ORDER_DETAIL,IAS_ITM_MST,IAS_BILL_DTL
                             WHERE ORDER_DETAIL.I_CODE = IAS_ITM_MST.I_CODE 
                             GROUP BY ORDER_DETAIL.RCRD_NO,
                                WHERE 1=1'',12,''1371,176,177,180,222,405,230,231,1,1,13137,2579'',''30,80,150,40,50,40,70,80,0,0,50,50'', NULL ,''1'','',1,2,5,6,7,8,10,12,13,'', NULL , NULL , NULL , NULL , NULL ,0  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 143,''MAIN1'',''CUSTOMER_LIMIT'',526  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 143,''MAIN1'',''STATISTICS'',604  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 143,''MAIN1'',''CUSTOMER_PRIV'',59  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 143,''MAIN1'',''CONN_CST_COL'',5219  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 143,''MAIN1'',''CONN_CST_SMAN'',4111  )"DELETE FROM S_LOV_SLCT WHERE LOV_NM = ''LOV_SI_OUTGNG''"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 133,''LOV_SI_OUTGNG'',100,''SELECT   M.OUT_SER,
                (SELECT DOC_NO_REF FROM IAS_OUTGOING_DTL WHERE OUT_SER=M.OUT_SER AND NVL(DOC_TYPE_REF,0)=53 AND ROWNUM<=1) DOC_NO_REF,
    FROM IAS_OUTGOING_MST M, OUT_TYPES O
   WHERE M.OUT_TYPE = O.OUT_TYPE
    '',11,''1,319,1581,1097,141,388,390,146,193,343,50'',''0,50,100,50,50,50,120,120,50,50,50'', NULL ,''2,4,5'','',2,4,5,6,9,10,'', NULL ,'' AND EXISTS ( SELECT 1
                FROM S_BRN_USR_PRIV
               WHERE U_ID = :PARAMETER.USER_NO
                 AND ROWNUM <= 1)'', NULL , NULL , NULL ,0  )"DELETE FROM S_LOV_SLCT WHERE LOV_NM = ''LOV_COMM_SMAN_PLAN''"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_
BY,LOV_SPCL_FLG )  VALUES ( 130,''LOV_COMM_SMAN_PLAN'',2686,''SELECT PLAN_NO,
       (SELECT FLG_DESC
          FROM S_FLAGS
         WHERE FLG_VALUE = PLAN_TYPE
       (SELECT FLG_DESC
          FROM S_FLAGS
         WHERE FLG_VALUE = PLAN_DSTR_TYPE
       (SELECT FLG_DESC
          FROM S_FLAGS
         WHERE FLG_VALUE = PLAN_PRD_TYPE
  FROM IAS_SALES_PLAN_MST
  WHERE PLAN_TYPE IN (1,14,27,39)'',6,''2130,2129,151,490,146'',''60,90,90,90,200,0'', NULL ,''1'','',1,'', NULL , NULL , NULL , NULL , NULL ,0  )"UPDATE FORM_DETAIL SET F_BT_PRIV=1 WHERE FORM_NO = 858"UPDATE IAS_RT_BILL_MST SET AC_CODE=CASH_AC_FCC,AC_DTL_TYP=1,AC_CODE_DTL=CASH_NO_FCC,PYMNT_AC=1 WHERE NVL(INSRNCE_CSH_AMT,0) > 0  AND RT_BILL_DOC_TYPE = 4  AND CASH_NO_FCC IS NOT NULL"UPDATE IAS_RT_BILL_MST SET CASH_AC_FCC= NULL ,CASH_NO_FCC= NULL  WHERE NVL(INSRNCE_CSH_AMT,0) > 0  AND RT_BILL_DOC_TYPE = 4  AND CASH_NO_FCC IS NOT NULL"UPDATE S_FLAGS SET FLG_DESC=''
'' WHERE FLG_CODE = ''QT_PRM_METHOD_TOT_BILL''  AND LANG_NO = 1  AND FLG_VALUE = 4"UPDATE S_FLAGS SET FLG_DESC=''Grant Coupons'' WHERE FLG_CODE = ''QT_PRM_METHOD_TOT_BILL''  AND LANG_NO = 2  AND FLG_VALUE = 4"UPDATE FORM_DETAIL SET F_INACTIVE=1 WHERE FORM_NO IN ( 2303,2304,2305  )"INSERT INTO IAS_FRM_FLD ( FORM_NO,TAB_NAME,FLD_NAME )  VALUES ( 158,''IAS_BILL_MST'',''STAND_BY''  )"INSERT INTO IAS_FRM_FLD ( FORM_NO,TAB_NAME,FLD_NAME )  VALUES ( 160,''IAS_RT_BILL_MST'',''
STAND_BY''  )"INSERT INTO IAS_FRM_FLD ( FORM_NO,TAB_NAME,FLD_NAME )  VALUES ( 159,''MASTER_OUT_BILLS'',''STAND_BY''  )"INSERT INTO IAS_FRM_FLD ( FORM_NO,TAB_NAME,FLD_NAME )  VALUES ( 161,''IAS_RET_BILL_MST'',''STAND_BY''  )"SELECT NVL(USE_OUT_BILLS,0)   FROM IAS_PARA_AR"UPDATE IAS_BILL_MST SET OUT_BILL_TYP=1 WHERE OUT_BILL_TYP IS NULL"UPDATE IAS_BILL_MST SET OUT_BILL_TYP=2 WHERE OUT_BILL_TYP IS NULL"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 158,''MAIN6'',''ADD_FIELDS'',3433  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 158,''MAIN6'',''CARGO_DTL'',673  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 158,''MAIN6'',''INSTLLMNT_DTL'',1049  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 158,''MAIN6'',''OTHR_CHARGES_DTL'',409  )"INSERT INTO S_TP ( FORM_NO,OBJ_NM,TP_NM,LBL_NO )  VALUES ( 158,''MAIN6'',''IMP_F_EXCEL'',1305  )"INSERT INTO S_USR_TP_PRV ( U_ID,FORM_NO,OBJ_NM,TP_NM,PRV_FLG,AD_U_ID,AD_DATE )  SELECT U.U_ID,T.FORM_NO,T.OBJ_NM,T.TP_NM,1,1,SYSDATE   FROM USER_R U,S_TP T  WHERE T.FORM_NO = 158  AND T.OBJ_NM = ''MAIN6''  AND T.TP_NM IN ( ''ADD_FIELDS'',''CARGO_DTL'',''INSTLLMNT_DTL'',''OTHR_CHARGES_DTL'',''IMP_F_EXCEL''  )"INSERT INTO IAS_FRM_FLD ( FORM_NO,TAB_NAME,FLD_NAME )  VALUES ( 143,''CUSTOMER'',''C_CLASS''  )"
ALTER TABLE IAS_ASSCTN_ACCNT ADD ( CONSTRAINT IAS_ASSCTN_ACCNT_ACODE_FK  FOREIGN KEY (A_CODE)  REFERENCES ACCOUNT (A_CODE))
ARS_DBA_PROCEDURE_SCRIPT
"PKG INIT"ARS_DBA_PROCEDURE_SCRIPT""
ARS_DBA_PROCEDURE_SCRIPT
CREATE OR REPLACE PROCEDURE IAS_Get_SalesDisc_Prc (P_DiscType         In  NUMBER,
Select Decode(amt_type,0,amt),
   From Sales_Disc
  Where Nvl(G_Code,'0')=Decode(Nvl(G_Code,'0'),'0','0',P_Gcode)
Select Decode(amt_type,0,amt),
   From Sales_Disc
  Where I_Code = P_Icode
Select Decode(amt_type,0,amt),
   From Sales_Disc
  Where I_Code = P_Icode
Select Decode(amt_type,0,amt),
   From Sales_Disc
  Where Nvl(C_Code,'0')=Decode(Nvl(C_Code,'0'),'0','0',P_C_Code)
Select Decode(amt_type,0,amt),
   From Sales_Disc
  Where I_Code = P_Icode
 Exception when others then
CREATE OR REPLACE Procedure Ias_Last_Income_Price_Prc (P_Icode                 In  Ias_Itm_Mst.I_Code%Type ,
     Begin
        Select Max(Gr_Date) 
          From Ias_V_Gr_Detail_Yr
         Where A_Cy=P_Acy
         Select Max(Doc_Sequence) 
          From Ias_V_Gr_Detail_Yr
         Where A_Cy=P_Acy
      Exception
              Begin
                Select Max(Gr_Date) 
                  From Gr_Detail
                 Where A_Cy=P_Acy
                 Select Max(Doc_Sequence) 
                  From Gr_Detail
                 Where A_Cy=P_Acy
              Exception
             End;
       End;                     
     Begin
        Select Max (Round ((Nvl (C_Price,0) - Nvl (Dis_Amt, 0)), 2))
          From Ias_V_Gr_Detail_Yr
         Where I_Code=P_Icode
        Exception
            Begin           
               Select Max (Round ((Nvl (C_Price,0) - Nvl (Dis_Amt, 0)), 2))
       From Gr_Detail
                 Where I_Code=P_Icode
            Exception
            End;
        End;
CREATE OR REPLACE PACKAGE Ias_Ar_Get_Data_Rep_Pkg AS
PROCEDURE Ias_Ar_Get_Inc_Data ( P_SqlStr       In     Varchar2,
  PROCEDURE Ias_Ar_Get_Sales_Data ( P_SqlStr        In     Varchar2,                                                
    FUNCTION Get_Disc_Age ( P_Grp_Type Varchar2,
    Function Get_Wc_Wtavg_Main( P_Wtavg_Type In Number,                            
FUNCTION Get_Sman_Comm_Per( P_Machine_No In Number ) Return Number ;
PROCEDURE Ias_Ar_Get_AvlQty_Data ( P_SqlStr        In     Varchar2,                                                
PROCEDURE Ias_Ar_Get_Tr_Data ( P_SqlStr    In     Varchar2,                                                
CREATE OR REPLACE PACKAGE BODY Ias_Ar_Get_Data_Rep_Pkg AS
PROCEDURE Ias_Ar_Get_Inc_Data ( P_SqlStr       In     Varchar2,
   BEGIN
 PROCEDURE Ias_Ar_Get_Sales_Data ( P_SqlStr        In     Varchar2,                                                
   BEGIN
Exception 
FUNCTION Get_Disc_Age (P_Grp_Type Varchar2,P_Round_Slice_Disc number,P_Icode Varchar2,P_Wcode Number,F_Dis_Per Number,T_Dis_Per Number,P_FDate Date,P_TDate Date) RETURN Number IS  
BEGIN        
                  Cursor C_age Is Select Distinct Bill_Date,Round(Nvl(Ias_Bill_Dtl.Dis_Per,0),Nvl(P_Round_Slice_Disc,20)) Dis_Per
                                         From Ias_Bill_Mst,Ias_Bill_Dtl
                                          Where Ias_Bill_Mst.Bill_Ser=Ias_Bill_Dtl.Bill_Ser
                                      Order By  Bill_Date;             
           Begin                                     
           End; 
              Cursor C_age Is Select Distinct Bill_Date,Dis_Per
                                                  From Ias_Bill_Mst,Ias_Bill_Dtl
                                                  Where Ias_Bill_Mst.Bill_Ser = Ias_Bill_Dtl.Bill_Ser
                                                    And Exists (Select 1 From Ias_Ar_Itm_Disc_Tmp_Nw Where I_Code=Ias_Bill_Dtl.I_Code And RownUM<=1)                                                    
           Begin                                     
            Begin
              Select Round(V_Age/Count(1),2) InTo V_Age From Ias_Ar_Itm_Disc_Tmp_Nw;
            Exception
        End;  
    End;   
 Exception
Function Get_Wc_Wtavg_Main( P_Wtavg_Type In Number,                            
 Begin
            Select Nvl(I_Cwtavg,0) 
              From Ias_Itm_Wcode,Warehouse_Details
             Where Ias_Itm_Wcode.W_Code=Warehouse_Details.W_Code
    Exception When Others Then
 FUNCTION Get_Sman_Comm_Per( P_Machine_No In Number ) Return Number Is 
 Begin
    V_Comm_Per := Ias_Gen_Pkg.Get_Cnt('Select b.Comm_Per 
                                      From Ias_Pos_Machine a,Sales_Man b
                                     Where a.Rep_Code   = b.Reprs_Code
 Exception When Others Then
 PROCEDURE Ias_Ar_Get_AvlQty_Data ( P_SqlStr        In     Varchar2,                                                
PROCEDURE Ias_Ar_Get_Tr_Data ( P_SqlStr    In     Varchar2,                                                
CREATE OR REPLACE Package Ias_Ar_Point_Pkg As
 Function Get_Cust_Nm( P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type,P_Lng_No In Number) Return Varchar2;
 Function Check_Cust_Inactv(P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type) Return Number ; 
 Function Get_Cust_Point_typ(P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type) Return Number ;
 Function Get_Point_Type_Nm(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Lng_No In Number) Return Varchar2;
 Function Check_Point_Type_State(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type) Return Number ;
 Procedure Get_Point_Typ_Min_Lmt(P_Point_Typ_No  In Ias_Point_Typ_Mst.Point_Typ_No%Type,                                                                          
 Function Get_Point_Calc_Typ(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type) Return Number ;
 Function Get_Point_Cnt ( P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Bill_Amt Number, P_Point_Calc_Typ In Number) Return Number;
 Function Get_Point_Rplc_Cnt(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_T
 Function Get_Point_Amt     (P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Point_cnt Number) Return Number;
 Function Get_Point_Rplc_Amt(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Point_cnt Number) Return Number;
 Function Get_Cust_Point_Bal(P_Bill_Date          In Ias_Bill_Mst.Bill_Date%Type,
 Procedure Insrt_Point_Trns(   P_Trns_No               In Number,
  PROCEDURE Del_Point_Trns( P_Doc_Typ            In NUMBER,
  FUNCTION Chk_Point_Trns(  P_Bill_Date          In Ias_Bill_Mst.Bill_Date%Type,
  Function Check_Conn_Cntr ( P_DB_Link In Varchar2) Return Number ;
  Function Get_Expire_Date ( P_C_Code_Csh            In Ias_Cash_Custmr.Cust_Code%Type        ,
CREATE OR REPLACE PACKAGE BODY Ias_Ar_Point_Pkg AS
Function Get_Cust_Nm( P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type,P_Lng_No In Number) Return Varchar2 Is
     Select Decode(P_Lng_No,1,Cust_L_Nm,Nvl(Cust_F_Nm,Cust_L_Nm)) 
   From Ias_Cash_Custmr
    Where Cust_Code=P_Cust_Code 
Exception When Others Then
Function Check_Cust_Inactv (P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type) Return Number Is
  Select Nvl(Inactive,0)
    From Ias_Cash_Custmr
     Where Cust_Code=P_Cust_Code     
 Exception When Others Then
Function Get_Cust_Point_Typ( P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type) Return Number Is
     Select Point_Typ_No 
   From Ias_Cash_Custmr
    Where Cust_Code=P_Cust_Code 
Exception When Others Then
Function  Get_Point_Type_Nm(P_Point_Typ_No In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Lng_No In Number) Return Varchar2 Is
     Select Decode(P_Lng_No,1,Typ_L_Nm,Nvl(Typ_F_Nm,Typ_L_Nm)) 
   From  Ias_Point_Typ_Mst
         Where Point_Typ_No=P_Point_Typ_No
Exception When Others Then
Function Check_Point_Type_State (P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type)  Return Number Is
 Begin
  Select Nvl(Inactive,0)
    From  Ias_Point_Typ_Mst
     Where Point_Typ_No=P_Point_Typ_No     
 Exception When Others Then
 End; 
  Begin
   Select 1
     From Ias_Point_Typ_Mst
      Where Point_Typ_No=P_Point_Typ_No 
  Exception When Others Then
  End;  
Procedure Get_Point_Typ_Min_Lmt(P_Point_Typ_No In Ias_Point_Typ_Mst.Point_Typ_No%Type,                                                                          
  Begin
   Select Min_Lm
     From Ias_Point_Typ_Mst
    Where Point_Typ_No=P_Point_Typ_No;
  Exception When Others Then
  End;       
Function Get_Point_Calc_Typ(P_Point_Typ_No In Ias_Point_Typ_Mst.Point_Typ_No%Type)  Return Number Is
  Select Point_Calc_Typ
    From Ias_Point_Typ_Mst
     Where Point_Typ_No=P_Point_Typ_No     
 Exception When Others Then
Function Get_Point_Cnt(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Bill_Amt In Number, P_Point_Calc_Typ In Number) Return Number Is
        Begin
         Select  Amt_4Point Into V_Amt_4Point
          From Ias_Point_Typ_Mst
          Where Point_Typ_No=
        Exception When Others Then
        End;              
        Begin
         Select  Amt_4Point,Point_Cnt Into V_Amt_4Point,V_Point_Cnt
          From Ias_Point_Typ_Mst
          Where Point_Typ_No= P_Point_Typ_No;
        Exception When Others Then
        End;   
      Begin
         Select Point_Cnt Into V_Point_Cnt
          From Ias_Point_Typ_Calc_Dtl
          Where Point_Typ_No= P_Point_Typ_No
        Exception When Others Then
        End;                 
 Exception When Others Then
Function Get_Point_Rplc_Cnt(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Amt_Rplc Number) Return Number Is
        Begin
         Select  AMT_4POINT_RPLC Into V_AMT_4POINT_RPLC
          From Ias_Point_Typ_Mst
          Where Point_Typ_No=P_Point_Typ_No;
        Exception When Others Then
        End;            
        Begin
         Select  AMT_4POINT_RPLC,POINT_CNT_RPLC Into V_AMT_4POINT_RPLC,V_Point_Rplc_Cnt
          From Ias_Point_Typ_Mst
          Where Point_Typ_No= P_Point_Typ_No;
        Exception When Others Then
        End;   
      Begin
      SELECT TO_POINT INTO V_Point_Rplc_Cnt 
        FROM 
            Select TO_POINT
                      From IAS_POINT_TYP_RPLC_DTL
                      Where Point_Typ_No=P_Point_Typ_No
                      ORDER BY TO_POINT DESC
             WHERE  ROWNUM<=1 ;            
        Exception When Others Then
        End;                 
 Exception When Others Then
Function Get_Point_Amt(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Point_cnt Number) Return Number Is 
        Begin
     Select  Amt_4Point Into V_Amt_4Point
          From Ias_Point_Typ_Mst
          Where Point_Typ_No= P_Point_Typ_No;
        Exception When Others Then
        End; 
        Begin
         Select  Amt_4Point,Point_Cnt Into V_Amt_4Point,V_Point_Cnt
          From Ias_Point_Typ_Mst
          Where Point_Typ_No= P_Point_Typ_No;
        Exception When Others Then
        End;   
        Begin
         Select Amt Into V_Amt
          From IAS_POINT_TYP_RPLC_DTL
          Where Point_Typ_No= P_Point_Typ_No
        Exception When Others Then
        End;                 
 Exception When Others Then
Function Get_Point_Rplc_Amt(P_Point_Typ_No   In Ias_Point_Typ_Mst.Point_Typ_No%Type,P_Point_cnt Number) Return Number Is 
        Begin
         Select  Amt_4Point_rplc Into V_Amt_4Point_rplc
          From Ias_Point_Typ_Mst
          Where Point_Typ_No= P_Point_Typ_No;
        Exception When Others Then
        End; 
        Begin
         Select  Amt_4Point_rplc,Point_Cnt_rplc Into V_Amt_4Point_rplc,V_Point_Cnt_rplc
          From Ias_Point_Typ_Mst
          Where Point_Typ_No= P_Point_Typ_No;
        Exception When Others Then
        End;   
        Begin
         Select Amt Into V_Amt_Rplc
          From IAS_POINT_TYP_RPLC_DTL
          Where Point_Typ_No= P_Point_Typ_No
        Exception When Others Then
        End;                 
 Exception When Others Then
Function Get_Cust_Point_Bal (P_Bill_Date          In Ias_Bill_Mst.Bill_Date%Type,
    Begin
     Execute Immediate ' Select Sum(Nvl(Point_Cnt,0)),Sum(Nvl(Doc_Amt,0)) From '||V_Yr_Br_Usr||'Ias_Point_Calc_trns'||V_Db_Link||' 
                          Where Point_Typ_No ='|| P_Point_Typ_No||'
    Exception
Procedure Insrt_Point_Trns(   P_Trns_No               In Number,
  Begin 
         Execute Immediate  'Insert Into '||V_Yr_Br_Usr||'Ias_Point_Calc_trns'||V_Db_Link||'(
  Exception When Others Then 
  PROCEDURE Del_Point_Trns( P_Doc_Typ            In NUMBER,
  Begin 
         Begin
           V_Point_Cnt := Ys_Gen_Pkg.Get_Cnt('Select Sum(Nvl(Point_Cnt,0))  
                                                From '||V_Yr_Br_Usr||'Ias_Point_Calc_trns'||V_Db_Link||'
                                               Where Cust_Code='''||P_Cust_Code||''' 
         Exception When Others Then Null;
         End;
        Delete Ias_Point_Calc_trns Where Doc_Typ=P_Doc_Typ And Doc_Srl=P_Doc_Srl ;
  Exception When Others Then 
  FUNCTION Chk_Point_Trns(  P_Bill_Date          In Ias_Bill_Mst.Bill_Date%Type,
  Begin 
         Begin
           V_Point_Cnt := Ys_Gen_Pkg.Get_Cnt('Select Sum(Nvl(Point_Cnt,0))  
                                                From '||V_Yr_Br_Usr||'Ias_Point_Calc_trns'||V_Db_Link||'
                                               Where Point_Typ_No='||P_Point_Typ_No||' 
         Exception When Others Then Null;
         End;         
  Exception When Others Then 
Function Check_Conn_Cntr ( P_DB_Link In Varchar2) Return Number Is
 Begin
      V_Cnt := Ys_Gen_Pkg.Get_Cnt('Select 1  
                                     From '||V_Yr_Br_Usr||'Ias_Para_Gen'||V_Db_Link||'
                                    Where RowNum<=1');
  Exception When Others Then 
 Function Get_Expire_Date (  P_C_Code_Csh            In Ias_Cash_Custmr.Cust_Code%Type        ,
 Begin
      Begin
        Select ADD_MONTHS(To_date(Point_Typ_Actv_Date,'DD/MM/YYYY'),P_Point_Age_Expired_Prd) into V_Expire_Date
         From Ias_Cash_Custmr
        Where Point_Typ_No =P_Point_Typ_No
      Exception When Others Then 
      End;    
      Begin
        Select ADD_MONTHS(To_date(Start_Date,'DD/MM/YYYY'),P_Point_Age_Expired_Prd) into V_Expire_Date
         From Ias_Point_Typ_Mst
        Where Point_Typ_No =P_Point_Typ_No
      Exception When Others Then 
      End;
  Exception When Others Then 
CREATE OR REPLACE PACKAGE IAS_Cst_Pkg as
 PROCEDURE Get_Para (P_Lang_no In Pls_Integer Default 1,P_
 FUNCTION Get_One_CC_Cst(P_c_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) return VARCHAR2;
 FUNCTION Get_Cnt_Acy (P_c_code In CUSTOMER.C_CODE%TYPE,P_Usr_No   In Number) return Number;
 FUNCTION Get_One_Acy_Cst (P_c_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) Return VARCHAR2;
 FUNCTION Get_Acode  (P_c_code In CUSTOMER.C_CODE%TYPE) Return VARCHAR2;
 Function Get_C_Vndr (P_C_Code In Customer.C_Code%Type) Return Varchar2 ;
 FUNCTION Get_c_code (P_a_code In ACCOUNT.A_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_C_Name(P_c_code In CUSTOMER.C_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2;
 FUNCTION Get_c_code_By_Nm (P_c_nm In CUSTOMER.C_A_NAME%TYPE) RETURN VARCHAR2;
 FUNCTION Check_Acy (P_c_code In CUSTOMER.C_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number;
 FUNCTION Check_Acy_Inctv (P_c_code In CUSTOMER.C_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number ;
PROCEDURE get_credit_lmt ( P_Cr_Lmt_Typ in Number Default 1,
PROCEDURE Chk_C_code ( P_C_Code     IN CUSTOMER.C_CODE%TYPE,
Function Get_Intrfc_Accnt (P_C_Code In Customer.C_Code%Type , P_Ac_Typ In Ias_Cst_Accnt.Ac_Typ%Type ) Return Varchar2;
CREATE OR REPLACE PACKAGE Body IAS_Cst_Pkg as
Procedure Get_Para (P_Lang_no In pls_integer Default 1,P_User_No In pls_integer) Is
FUNCTION Get_One_CC_Cst (P_C_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) Return VARCHAR2 Is
    Begin
  Select Privilege_Cc.CC_Code 
    From Customer,Privilege_Cc
   Where C_Code=P_C_Code
    Exception When Others Then
    End;
 Exception 
FUNCTION Get_Cnt_Acy (P_C_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) Return Number Is
    Begin
        Select count(*) 
            From Customer_Curr 
            Where C_code =P_C_Code 
            And   A_Cy   In (Select A_Cy 
                              From   IAS_PRIV_CUSTOMER 
                              Where  U_Id  = P_Usr_No 
    Exception When Others Then
    End;           
 Exception 
FUNCTION Get_One_Acy_Cst (P_C_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Nu
    Begin
           Select A_Cy 
  From Ias_Priv_Customer 
 where U_Id  = P_Usr_No
    Exception When Others Then
    End;
 Exception 
FUNCTION Get_Acode (P_c_code In CUSTOMER.C_CODE%TYPE) Return VARCHAR2 Is
 select c_a_code 
   From customer
  where c_code=P_c_code ;
Exception 
Function Get_C_Vndr (P_C_Code In Customer.C_Code%Type) Return Varchar2 Is
     Select C_Vendor
       From Customer
      Where C_Code=P_C_Code
Exception 
FUNCTION Get_c_code (P_a_code In ACCOUNT.A_CODE%TYPE) Return VARCHAR2 Is
 Begin
 Select c_code 
   From customer
  where c_a_code=P_a_code ;
 Exception 
FUNCTION Get_C_Name (P_c_code In CUSTOMER.C_CODE%TYPE,P_Lng_no In Number) 
 Begin
 select Decode(P_Lng_no,1,c_a_name,nvl(c_e_name,c_a_name)) 
   From customer
  where c_code=P_c_code ;
Exception when others then
FUNCTION Get_c_code_By_Nm (P_c_nm In CUSTOMER.C_A_NAME%TYPE) RETURN VARCHAR2 Is
 Begin
 select c_code 
   From customer
  where (c_a_name = P_c_nm or c_e_name =P_c_nm )
 Exception 
FUNCTION Check_Acy (P_c_code In CUSTOMER.C_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number Is
 Begin
 Select 1 
   From customer_curr
  where c_code=P_c_code
 Exception 
FUNCTION Check_Acy_Inctv (P_c_code In CUSTOMER.C_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number Is
     Select Nvl (Inactive_Sales, 0)
       From Customer_Curr
      Where C_Code = P_c_code 
Exception 
  PROCEDURE get_credit_lmt (
   BEGIN
            SELECT ROUND (NVL (CR_LIMIT, 0), P_FRC_NO), NVL (INV_LIMIT, 0),
              FROM IAS_CUSTOMER_CC_LMT
             WHERE C_CODE = P_C_CODE AND A_CY = P_ACY AND CC_CODE = P_CC_CODE;
                SELECT ROUND (NVL (CST_CR_LMT_LOCAL, 0), P_FRC_NO), NVL (CST_INV_LMT_LOCAL, 0),
                  FROM CUSTOMER
                 WHERE C_CODE = P_C_CODE AND ROWNUM<=1;
                SELECT ROUND (NVL (CR_LIMIT, 0), P_FRC_NO), NVL (INV_LIMIT, 0),
                  FROM CUSTOMER_CURR
                 WHERE C_CODE = P_C_CODE AND A_CY = P_ACY AND ROWNUM<=1;
   EXCEPTION WHEN OTHERS THEN
PROCEDURE Chk_C_code ( P_C_Code     IN CUSTOMER.C_CODE%TYPE,
          Select Decode(P_Lng_No,1,M.C_A_NAME,nvl(M.C_E_NAME,M.C_A_NAME)), nvl(M.INACTIVE,0),NVL(INACTIVE_SALES,0),NVL(BLK_LST,0),1 ADD_FLAG,1 VIEW_FLAG
            From CUSTOMER M
           Where M.C_CODE     = P_C_Code
                OR M.C_CODE in (select C_CODE 
                                 from IAS_CST_ACCNT D
                                where  C_CODE = M.C_CODE
              Select Decode(P_Lng_No,1,M.C_A_NAME,nvl(M.C_E_NAME,M.C_A_NAME)), nvl(M.INACTIVE,0),NVL(INACTIVE_SALES,0),NVL(BLK_LST,0), Nvl(D.ADD_FLAG,0),Nvl(D.VIEW_FLAG,0)
                From CUSTOMER M,IAS_PRIV_CUSTOMER D
               Where M.C_code    = D.C_Code
                       OR M.C_CODE in (select D.C_CODE 
                                     from IAS_CST_ACCNT D
                                    where  D.C_CODE = M.C_CODE
             Select Decode(P_Lng_No,1,M.C_A_NAME,nvl(M.C_E_NAME,M.C_A_NAME)), nvl(M.INACTIVE,0),NVL(INACTIVE_SALES,0),NVL(BLK_LST,0), Nvl(D.ADD_FLAG,0),Nvl(D.VIEW_FLAG,0)
                    From CUSTOMER M,PRIV_ACC D
                   Where M.C_A_Code  = D.A_Code
                       OR M.C_CODE in (select D.C_CODE 
                                     from IAS_CST_ACCNT D
                                    where  D.C_CODE = M.C_CODE
 Exception 
Function Get_Intrfc_Accnt (P_C_Code In Customer.C_Code%Type , P_Ac_Typ In Ias_Cst_Accnt.Ac_Typ%Type ) Return Varchar2 Is
  Select A_Code 
    From Ias_Cst_Accnt 
   Where C_Code=P_C_Code
Exception When Others Then
CREATE OR REPLACE PACKAGE Ias_Dstr_Cst_Dr_Pkg as
                      PROCEDURE Ias_Dstr_Cst_Dr_Amt_Prc ( P_c_code        In Customer.C_Code%TYPE,
                     PROCEDURE Ias_Dstr_Cst_Dr_Amt_Acy_Prc ( P_c_code        In Customer.C_Code%TYPE,
            PROCEDURE  CST_AGING_PRC(    P_Local_Cur           In Varchar2,
            FUNCTION  Get_Bl_Cst_Fnc( P_loc_cur    In VARCHAR2,
            FUNCTION Chk_Prd_No (P_Prd_No In Number Default NULL,
                Function  Get_Rt_Amt_Fnc  ( P_Doc_Type      IN NUMBER,
CREATE OR REPLACE PACKAGE BODY Ias_Dstr_Cst_Dr_Pkg as
 PROCEDURE Ias_Dstr_Cst_Dr_Amt_Prc ( P_c_code        In Customer.C_Code%TYPE,
               Select C_Code,
                      nvl(I_Amt,0)-nvl(lag(nvl(I_Amt,0))over (Partition By C_Code,A_Cy,Bill_Ser order by  C_Code,A_Cy,I_Date,I_No   ),0) I_Amt,         
                     (nvl(I_Amt,0)-nvl(lag(nvl(I_Amt,0))over (Partition By C_Code,A_Cy,Bill_Ser order by  C_Code,A_Cy,I_Date,I_No   ),0)* Nvl(Ac_Rate, 1)) I_Amt_Loc,
                 From (  Select B.C_Code,
                                 ( SUM(Nvl(B.I_Amt, 0))Over(Partition By b.C_Code,B.A_Cy,B.Bill_Ser order by b.C_Code,B.A_Cy,b.I_Date,B.I_No   Rows Unbounded Preceding ) 
                           From Customer A, Installment B
                          Where A.C_Code = B.C_Code
                                                 (Select 1
                                                    From Priv_Acc
                                                   Where U_Id = P_User_No
                                                    (Select 1
                                                       From Ias_Priv_Customer
                                                      Where U_Id = P_User_No
                       Order By I_Date, Doc_Type, Bill_No,I_No)           
                 where nvl(I_Amt,0)>0
                Order By I_Date , Doc_Type, Bill_No,I_No;  
     Cursor Cst_Cr Is Select b.C_Code,b.Doc_Date,b.Cr_Amt Cr_Amt,Decode(nvl(b.Cr_Amt_F,0),0,1,(nvl(b.Cr_Amt,0)/nvl(b.Cr_Amt_F,0))) Ac_Rate   
                                            From customer a,Ias_Post_Dtl b
                                            where a.c_code=b.c_code                                          
                                              and (doc_type<>0 or Not Exists ( Select 1
                                                                                From Installment
                                                                                            Where c_code   = b.ac_code_dtl
                                                                   Select 1
                                                                     From Priv_Acc
                                                                    Where U_Id = P_User_No
                                                                   Select 1
                                                                     From Ias_Priv_customer
                                                                    Where U_Id = P_User_No
                                            and not exists (Select 1
                                                              From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Dtl D  
                                                             Where M.Rt_Bill_Ser = D.Rt_Bill_Ser
                                      Order By b.C_Code,b.Doc_Date;        
    BEGIN
        Begin
                    Insert Into Ias_si_dr_dtl_tmp ( C_code,A_cy,Doc_no,Doc_type,Doc_jv_type,Doc_ser,I_no,Doc_date,Bill_date,
                    Exception
                          Raise_application_error(-20400,' Error When Insert InTo Ias_Si_Dr_Dtl_Tmp. '|| chr(13) || SqlErrm);
                  Cursor C_Paid Is Select Doc_Ser,DOC_NO,i_no,Doc_Date,I_amt_loc,Paid_Amt_Loc,Paid_Date,Paid,c_code
                                   From Ias_Si_Dr_Dtl_Tmp
                                   Where nvl(paid,0)=0
                                   Order By c_code,Doc_Date,Doc_Ser;
              Begin
                      Begin
                       Update Ias_Si_Dr
                        Where Doc_Ser = Cp.Doc_Ser
                      End;     
                                Begin
                          Update Ias_Si_Dr_Dtl_Tmp Set Paid_Amt_Loc = I_amt_loc,
                           Where Doc_Ser = Cp.Doc_Ser
                                End;          
                          Begin
                  Update Ias_Si_Dr_Dtl_Tmp Set Paid_Amt_Loc = CrRem,
                   Where Doc_Ser = Cp.Doc_Ser
                        End;                          
              End;
    END;
    PROCEDURE Ias_Dstr_Cst_Dr_Amt_Acy_Prc ( P_c_code        In Customer.C_Code%TYPE,                                                      
               Select C_Code,
                      nvl(I_Amt,0)-nvl(lag(nvl(I_Amt,0))over (Partition By C_Code,A_Cy,Bill_Ser order by  C_Code,A_Cy,I_Date,I_No   ),0) I_Amt,         
                     (nvl(I_Amt,0)-nvl(lag(nvl(I_Amt,0))over (Partition By C_Code,A_Cy,Bill_Ser order by  C_Code,A_Cy,I_Date,I_No   ),0)* Nvl(Ac_Rate, 1)) I_Amt_Loc,
                 From (  Select B.C_Code,
                                 ( SUM(Nvl(B.I_Amt, 0))Over(Partition By b.C_Code,B.A_Cy,B.Bill_Ser order by b.C_Code,B.A_Cy,b.I_Date,B.I_No   Rows Unbounded Preceding ) 
                           From Customer A, Installment B
                          Where A.C_Code = B.C_Code
                                                 (Select 1
                                                    From Priv_Acc
                                                   Where U_Id = P_User_No
                                                    (Select 1
                                                       From Ias_Priv_Customer
                                                      Where U_Id = P_User_No
                       Order By I_Date, Doc_Type, Bill_No,I_No)           
                 where nvl(I_Amt,0)>0
                Order By I_Date , Doc_Type, Bill_No,I_No; 
     Cursor Cst_Cr Is Select b.C_Code,b.Doc_Date,b.DOC_SER,b.DOC_type,b.DOC_no,Decode(b.A_cy,P_Local_Cur,b.Cr_Amt,b.Cr_Amt_f) Cr_Amt,Decode(nvl(b.Cr_Amt_F,0),0,1,(nvl(b.Cr_Amt,0)/nvl(b.Cr_Amt_F,0))) Ac_Rate 
                                            From customer a,Ias_Post_Dtl b
                                            where a.c_code=b.c_code                                          
                                              and (doc_type<>0 or Not Exists (Select 1
                                                                                         From Installment
                                                                                        Where c_code   = b.ac_code_dtl
                                                                   Select 1
                                                                     From Priv_Acc
                                                                    Where U_Id = P_User_No
                                                                   Select 1
                                                                     From Ias_Priv_customer
                                                                    Where U_Id = P_User_No
                                            and not exists (Select 1
                                                              From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Dtl D  
                                                             Where M.Rt_Bill_Ser = D.Rt_Bill_Ser
                                      Order By b.C_Code,b.Doc_Date;                              
    BEGIN
        Begin
                    Insert Into Ias_Si_Dr_Dtl_Tmp ( C_Code,A_Cy,Doc_No,Doc_Type,Doc_Jv_Type,Doc_Ser,i_no,Doc_Date,bill_date,
                    Exception
                          Raise_application_error(-20401,' Error When Insert InTo Ias_Si_Dr_Dtl_Tmp. '|| chr(13) || SqlErrm);
                  Cursor C_Paid Is Select Doc_Ser,DOC_NO,i_no,Doc_Date,I_Amt,I_amt_loc,Paid_Amt,Paid_Amt_Loc,Paid_Date,Paid,c_code
                                   From Ias_Si_Dr_Dtl_Tmp
                                   Where nvl(paid,0)=0
                                   Order By c_code,Doc_Date,Doc_Ser;
              Begin
                      Begin
                       Update Ias_Si_Dr_Dtl_Tmp Set Paid_Amt_Loc = Round((I_Amt*cr.ac_rate),P_No_Of_Decimal),
                        Where Doc_Ser = Cp.Doc_Ser
                      End;     
                                Begin
                          Update Ias_Si_Dr_Dtl_Tmp Set Paid_Amt_Loc = Round((I_Amt*cr.ac_rate),P_No_Of_Decimal),
                           Where Doc_Ser = Cp.Doc_Ser
                                End;          
                          Begin
                  Update Ias_Si_Dr_Dtl_Tmp Set Paid_Amt_Loc = Round((CrRem*cr.ac_rate),P_No_Of_Decimal),
                   Where Doc_Ser = Cp.Doc_Ser
                        End;                          
              End;
    END;
PROCEDURE  CST_AGING_PRC(    P_Local_Cur           In Varchar2,
 BEGIN 
           Begin
              V_SQL:='Select   A.C_Code C_CODE,
                                              From Customer A,
                                                   '||V_TB_NM||'  B  WHERE 1=1  '||P_Whr||'
                                              Group By A.C_Code,
            EXCEPTION WHEN NO_DATA_FOUND THEN
           END;                                                                  
               V_SQL2:='Select   A.C_Code,
                                        From Customer A,
                                       Where   1=1 '||P_WHR||'                                                                                 
                                            Order By A.C_Code,
             Begin
             EXCEPTION WHEN NO_DATA_FOUND THEN
             END;                                     
                              Begin
                                          Insert Into IAS_CST_CR_TMP
                                          Insert Into IAS_CST_CR_TMP
                                          Insert Into IAS_CST_CR_TMP
                                          Insert Into IAS_CST_CR_TMP
                              End;
       --  END;
  V_SQL:='Insert Into IAS_CST_CR_TMP( C_CODE, A_CY, DOC_NO, DOC_TYPE, DOC_JV_TYPE, DOC_SER, DOC_DATE,DOC_DUE_DATE, DR_AMT, DR_AMTF, DOC_DESC,
        SELECT  B.C_CODE,B.A_CY,B.BILL_NO DOC_NO,B.DOC_TYPE,B.BILL_DOC_TYPE DOC_JV_TYPE,B.BILL_SER DOC_SER,
                                        FROM CUSTOMER A,INSTALLMENT B
                                        WHERE A.C_CODE=B.C_CODE
FUNCTION Get_Bl_Cst_Fnc( P_loc_cur    In VARCHAR2,
       Select Decode(P_acy,P_loc_cur,nvl(sum(D.dr_amt),0)-nvl(sum(D.cr_amt),0),nvl(sum(D.dr_amt_f),0)-nvl(sum(D.cr_amt_f),0)) 
        FROM   ias_post_dtl d,
      WHERE  d.a_code = c.c_a_code AND d.ac_code_dtl = c.c_code
           Select Decode(P_acy,P_loc_cur,nvl(sum(D.dr_amt),0)-nvl(sum(D.cr_amt),0),nvl(sum(D.dr_amt_f),0)-nvl(sum(D.cr_amt_f),0)) 
            FROM   ias_post_dtl d,
      WHERE  d.a_code = c.c_a_code AND d.ac_code_dtl = c.c_code
           Select Decode(P_acy,P_loc_cur,nvl(sum(D.dr_amt),0)-nvl(sum(D.cr_amt),0),nvl(sum(D.dr_amt_f),0)-nvl(sum(D.cr_amt_f),0))
              FROM   ias_post_dtl d,
      WHERE  d.a_code = c.c_a_code AND d.ac_code_dtl = c.c_code
           Select Decode(P_acy,P_loc_cur,nvl(sum(D.dr_amt),0)-nvl(sum(D.cr_amt),0),nvl(sum(D.dr_amt_f),0)-nvl(sum(D.cr_amt_f),0)) 
             FROM   ias_post_dtl d,
      WHERE  d.a_code = c.c_a_code AND d.ac_code_dtl = c.c_code
Exception When others then
Function Get_Rt_Amt_Fnc  (  P_Doc_Type      IN NUMBER,
        BEGIN
           V_Rt_Bill_Amt := Ias_Gen_Pkg.Get_Cnt('  Select nvl(Sum(Dtl_Amt * Per_Amt),0)
                                                      From (        
                                                      Select       rt_Bill_no,
                                                              From (Select m.rt_Bill_no,
                                                                      From Ias_Rt_Bill_Mst M, Ias_Rt_Bill_Dtl D
                                                                     Where M.Rt_Bill_Ser = D.Rt_Bill_Ser
                                                                           And m.rt_Bill_Ser in(select rt_bill_ser from Ias_Rt_Bill_Dtl
                                                                                                      where Bill_Ser = '||P_Doc_Ser||'  ))                                                                                                                                                                                                                                                          
                                                                           where Bill_Ser = '||P_Doc_Ser||V_Whr||' ');                                                     
        Exception When Others Then
CREATE OR REPLACE PACKAGE Ias_Insrt_Out_Bills_Pkg AS
  FUNCTION  Get_Out_No      ( P_Invs    In Number, P_Si_Type  In Number, P_Cc_Code In Varchar2,P_w_code  In Number,  P_bill_doc_type In Number,P_Brn_No In Number) Return Number;    
  FUNCTION  Get_Out_Ser     ( P_Out_No  In Number, P_Si_Type  In Number, P_Invs    In Number,  P_Cc_Code In Varchar2,P_w_code        In Number,P_bill_doc_type In Number,P_Brn_No In Number,P_Brn_Year In Number) Return Number;
  PROCEDURE Insrt_Out_Bills ( P_Invs    In Number, P_Out_Avlqty In Number Default 0 , P_Doc_Ser  In Number, P_Out_No  In Number,  P_Out_Ser In Number,P_Extrnl_Post Number,P_Lang_No Number,P_Brn_No In Number);
  FUNCTION  Get_Ret_No      ( P_Invs_Sr In Number, P_Sr_Type  In Number, P_Cc_Code In Varchar2,P_w_code  In Number,  P_bill_doc_type In Number,P_Brn_No In Number) Return Number;    
  FUNCTION  Get_Ret_Ser     ( P_Ret_No  In Number, P_Sr_Type  In Number, P_Invs_Sr In Number,  P_Cc_Code In Varchar2,P_w_code        In Number,P_bill_doc_type In Number,P_Brn_No In Number,P_Brn_Year In Number) Return Number;
  PROCEDURE Insrt_Ret_Bills ( P_Invs_Sr In Number, P_Pyear    In Number, P_Doc_Ser In Number,  P_Ret_No  In Number,  P_Ret_Ser In Number, P_Out_No  In Number, P_Out_Ser In Number, P_Extrnl_Post Number, P_Lang_No Number,P_Brn_No In Number);  
CREATE OR REPLACE PACKAGE BODY Ias_Insrt_Out_Bills_Pkg AS
FUNCTION Get_Out_No (P_Invs In Number,P_Si_Type  In Number,P_Cc_Code In Varchar2,P_w_code In Number,P_bill_doc_type In Number,P_Brn_No In Number) Return Number Is 
BEGIN 
      Begin
         Select Max(Yr_No)
           From S_Prd_Dtl
          Where To_Date(SYSDATE, 'DD/MM/RRRR') Between F_Date And T_Date;
      Exception
      End;
   Exception when others Then
 FUNCTION Get_Out_Ser (P_Out_No In Number, P_Si_Type  In Number,P_Invs In Number, P_Cc_Code In Varchar2,P_w_code In Number,P_bill_doc_type In Number,P_Brn_No In Number,P_Brn_Year In Number) Return Number Is 
BEGIN   
   Exception when others Then
 PROCEDURE Insrt_Out_Bills (P_Invs In Number , P_Out_Avlqty In Number Default 0 , P_Doc_Ser In Number, P_Out_No  In Number,  P_Out_Ser In Number, P_Extrnl_Post Number,P_Lang_No Number,P_Brn_No In Number) Is
 BEGIN
        Begin
          Select  Nvl(Use_Audit_Doc,0)
          From Ias_Para_Gen  ;
        Exception
        Begin
          Select  costing_type,
          From Ias_Para_Inv  ;
        Exception
   Begin
     Select 1 InTo V_Cnt From Master_Out_Bills 
      Where Bill_Ser=P_Doc_Ser         
   Exception when others Then
   END;
   Begin
     Select 1 InTo V_Cnt From Master_Out_Bills 
      Where Out_Ser=P_Out_Ser    
   Exception when others Then
   END;
   Begin
        Select 1 InTo V_Cnt From Ias_Bill_Dtl D,Ias_Itm_Mst I
         Where D.Bill_Ser = P_Doc_Ser
         Select 1 InTo V_Cnt From Ias_Bill_Dtl 
         Where Bill_Ser=P_Doc_Ser
   Exception when others Then
   END; 
       INSERT INTO master_out_bills ( out_no, 
                              SELECT  P_Out_No,
                                From  Ias_bill_Mst
                               WHERE  Bill_Ser=P_Doc_Ser;
        For J In ( SELECT  d.bill_no, 
                      From Ias_bill_mst m,Ias_bill_dtl d,Ias_Itm_Mst I
                    WHERE  m.bill_ser=d.bill_ser 
                Begin
                     Select Sum(Nvl(D.P_Qty,0)+(Nvl(D.Free_Qty,0)*Nvl(D.P_Size,0))) 
                       From Detail_Out_Bill
                      Where Bill_Ser=P_Doc_Ser
                Exception When Others Then
                End;
                Insert Into Detail_out_bills ( Out_no, 
                  Begin 
                  Exception When Others Then                            
                  End;    
                       Begin                
                        Select 1 Into V_Use_Attch From Ias_Itm_Mst 
                                           Where I_Code =j.i_Code
                       Exception
                          Begin
                              Select Flex_No
                                From Ias_Itm_Unt_Barcode 
                                 Where Barcode = J.Barcode ;
                          Exception
                             Begin
                               Select Attch_No1, Attch_Desc_No1, 
                                   From Ias_Itm_Attach
                                    Where Flex_No = V_Attch.Flex_No;
                             Exception
                             Begin
                                Select Nvl(Max(Rec_Attch),0)+1
                                  From Ias_Itm_Attach_Movement;
                             Exception
                          Begin
                          Insert Into Ias_Itm_Attach_Movement(I_Code, 
                              Exception  When Others Then                                 
                              End;
 Exception when others Then
FUNCTION Get_Ret_No (P_Invs_Sr In Number,P_Sr_Type  In Number,P_Cc_Code In Varchar2,P_w_code In Number,P_bill_doc_type In Number,P_Brn_No In Number) Return Number Is 
BEGIN   
      Begin
         Select Max(Yr_No)
           From S_Prd_Dtl
          Where To_Date(SYSDATE, 'DD/MM/RRRR') Between F_Date And T_Date;
      Exception
      End;
   Exception when others Then
 FUNCTION Get_Ret_Ser (P_Ret_No In Number,P_Sr_Type  In Number,P_Invs_Sr In Number,P_Cc_Code In Varchar2,P_w_code In Nu
BEGIN   
   Exception when others Then
 PROCEDURE Insrt_Ret_Bills ( P_Invs_Sr In Number, P_Pyear   In Number, P_Doc_Ser In Number,  P_Ret_No  In Number,  P_Ret_Ser In Number, P_Out_No  In Number,  P_Out_Ser In Number, P_Extrnl_Post Number, P_Lang_No Number,P_Brn_No In Number) Is
 BEGIN
        Begin
          Select  Nvl(Use_Audit_Doc,0)
          From Ias_Para_Gen  ;
        Exception
   Begin
     Select 1 InTo V_Cnt From Ias_Ret_Bill_Mst 
      Where Rt_Bill_Ser=P_Doc_Ser         
   Exception when others Then
   END;
   Begin
     Select 1 InTo V_Cnt From Ias_Ret_Bill_Mst 
      Where Ret_Ser=P_Ret_Ser         
   Exception when others Then
   END;
   Begin
     Select 1 
     From Ias_Rt_Bill_Dtl
     Where Rt_Bill_Ser=P_Doc_Ser
   Exception when others Then
   END; 
       Begin
         Select Cc_Code,w_code,rt_bill_doc_type 
         From Ias_Rt_Bill_Mst
         Where Rt_Bill_Ser=P_Doc_Ser
       Exception when others Then
       END;                       
          Begin
              SELECT 1 InTo V_Cnt
                From  ias_rt_bill_dtl a,detail_out_bills b           
               Where a.bill_Ser=b.bill_Ser(+)
                Group By  a.bill_Ser,a.I_code,a.w_code,a.si_rcrd_no
          Exception when others Then
          END;        
       INSERT INTO  ias_ret_bill_mst ( ret_no, 
                               SELECT  P_ret_no, 
                                 From  ias_rt_bill_mst
                                WHERE  Rt_Bill_Ser=P_Doc_Ser;                         
            INSERT INTO ias_ret_bill_dtl ( ret_no, 
                                   SELECT  P_ret_no, 
                                     From  ias_rt_bill_dtl a,Detail_Out_Bills b                             
                                    WHERE  a.rt_bill_ser         = P_Doc_Ser
             INSERT INTO ias_ret_bill_dtl ( ret_no, 
                                   SELECT  P_ret_no, 
                                     From  ias_rt_bill_dtl                             
                                    WHERE  rt_bill_ser         = P_Doc_Ser                                  
 Exception when others Then
CREATE OR REPLACE PACKAGE Ias_Installment_Ar_Pkg AS
  FUNCTION Check_Installment_Trans ( P_Doc_Type      In NUMBER,
  PROCEDURE Insrt_Installment ( P_I_No         In NUMBER,
 FUNCTION Check_Dr_Trans ( P_Doc_Type      In NUMBER,
           PROCEDURE Chk_Installmnet_Prc (P_DocType In NUMBER Default Null);
           PROCEDURE Rebuild_Installmnet (P_Doc_Type In NUMBER Default Null,p_stp In NUMBER Default 0);
         FUNCTION Chk_Adj_Installmnet_Trans ( P_Doc_Type      In NUMBER,
           PROCEDURE Update_Adj_Installmnet ( P_Up_All In Number Default 0);
CREATE OR REPLACE PACKAGE BODY Ias_Installment_Ar_Pkg AS
  FUNCTION Check_Installment_Trans ( P_Doc_Type      In NUMBER,
  Begin                                  
         Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Installment 
                                      Where Doc_Type = '||P_Doc_Type||'
        Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Installment 
                                      Where Doc_Type = '||P_Doc_Type||'
     Exception 
           Raise_application_error(-20560,'Error When Select Statement From Installment '||SqlErrm) ;                                        
  PROCEDURE Insrt_Installment ( P_I_No         In 
    Begin
         Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Installment 
                                       Where nvl(i_py,0) = 0
             Begin    
               Execute Immediate' Delete From Installment 
                                    Where nvl(i_py,''0'') = 0
             Exception When others then
              Raise_application_error(-20561,'Error When Delete Document From Installment '||SqlErrm) ;
             End;     
          Execute Immediate 'Insert Into Installment ( Doc_Type,
     Exception When others then
    FUNCTION Check_Dr_Trans ( P_Doc_Type      In NUMBER,
    Begin                                  
          Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Installment 
                                        Where Doc_Type = '||P_Doc_Type||'
        Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Installment 
                                      Where Doc_Type = '||P_Doc_Type||'
     Exception 
           Raise_application_error(-20563,'Error When Select Statement From Installment '||SqlErrm) ;                                        
PROCEDURE Chk_Installmnet_Prc (P_DocType In NUMBER Default Null) Is
   Select Count(1) Into Cnt  From open_bal
    Where nvl(j_amt,0) > 0
   Select Count(1) Into Cnt1 From Installment 
    Where doc_type=0;
   Begin
Select 1 Into Cnt From 
   Select 1 doc_type,j_ser,j_doc_no,rcrd_no,Ac_code_DTL C_CODE,Decode(nvl(j_amt_f,0),0,nvl(j_amt,0),nvl(j_amt_f,0))
  From Detail_journal_v
 where Ac_code_DTL Is Not Null 
   Select doc_type,bill_ser,bill_no,rcrd_no,c_code,nvl(i_amt,0) 
  From Installment 
 where doc_type = 1
   Where Rownum<=1;
Exception 
   Begin
Select 1 Into Cnt From 
   Select 3 doc_type,v_ser,voucher_no,rcrd_no,AC_CODE_DTL c_code,Decode(nvl(ac_amtf,0),0,nvl(ac_amt,0),nvl(ac_amtf,0))
  From voucher_detail
 where voucher_type = 2 
    Select doc_type,bill_ser,bill_no,rcrd_no,c_code,nvl(i_
  From Installment 
 where doc_type = 3
   Where Rownum<=1;
Exception 
   Begin
Select 1 Into Cnt From 
   Select 9 doc_type,out_ser,out_no,c_code,Decode(Pur_Type,1,(Nvl(Out_Amt,0)+Nvl(Exp_Amt,0)),Nvl(Out_Amt,0))
  From Ias_Outgoing_Mst
 where c_code Is Not Null
    Select doc_type,bill_ser,bill_no,c_code,nvl(i_amt,0) 
  From Installment 
 where doc_type = 9
   Where Rownum<=1;
Exception 
   Begin
Select 1 Into Cnt From 
    Select 4 doc_type,bill_ser,bill_no,c_code,Round(nvl(sum(nvl(bill_amt,0)-nvl(disc_amt_mst,0)-nvl(disc_amt_dtl,0)+nvl(othr_amt,0)+nvl(vat_amt,0)),0),3)
  From ias_bill_mst
 where bill_doc_type= 4 
   group by bill_ser,bill_no,c_code
    Select doc_type,bill_ser,bill_no,c_code,Round(nvl(sum(i_amt),0),3)
  From Installment 
 where doc_type = 4
 group by doc_type,bill_ser,bill_no,c_code
   Where Rownum<=1;
Exception 
Select Count(1) 
  From Installment
 where Doc_Type = 0 
  Begin
   Select nvl(AR_AC_LINK_TYPE,1) Into V_ARALT From Ias_Para_Ar;
  Exception when others then
  End;
   Delete From Installment Where doc_type=0;
     Cursor op_cv Is Select M.C_Code,Decode(Nvl(M.J_Amt_F,0),0,Nvl(M.J_Amt,0),Nvl(M.J_Amt_F,0)) J_Amt ,M.Cc_Code,M.Pj_No,M.Actv_No,
                       From Open_Bal M 
                      Where M.C_Code Is Not Null
                        Order By M.C_Code,M.A_Cy,M.Cc_Code ;
    Begin
          Begin
            select 1 
              From installment
             where doc_type=0 
            Exception 
           End;
          Insert Into Installment( DOC_TYPE,
     Exception 
             Raise_application_error(-20566,'Error Insert Installment From open_bal, '||SqlErrm) ;         
   End;
Select Count(1) 
  From Installment
 where Doc_Type = 1
  Delete From Installment
   where Doc_Type = 1 
INSERT INTO INSTALLMENT ( DOC_TYPE,BILL_DOC_TYPE, BILL_NO, BILL_SER, I_NO, DOC_DATE,I_DATE, I_AMT, 
                   Select 1,M.JV_TYPE, M.J_DOC_NO, M.J_SER, 1, M.J_DATE,D.DOC_DUE_DATE, DECODE(Nvl(J_AMT_F,0),0,NVL(D.J_AMT,0),Nvl(J_AMT_F,0)), 
                     From Master_Journal_V M, Detail_Journal_V D 
                    Where M.J_SER = D.J_SER 
EXCEPTION 
         Raise_application_error(-20568,'Error Insert Installment From Journal, '||SqlErrm) ;         
Select Count(1) 
  From Installment
 where Doc_Type = 3 
Delete From Installment
   where Doc_Type = 3 
INSERT INTO INSTALLMENT ( DOC_TYPE,BILL_DOC_TYPE, BILL_NO, BILL_SER, I_NO, DOC_DATE,I_DATE, I_AMT, 
                   Select 3,M.Voucher_Pay_Type, M.voucher_NO, M.v_SER, 1, M.voucher_Date, M.voucher_Date,
                     From Vouchers M, Voucher_Detail D 
                    Where M.V_SER = D.V_SER 
EXCEPTION 
             Raise_application_error(-20569,'Error Insert Installment From payment voucher, '||SqlErrm) ;         
Select Count(1) 
  From Installment
 where Doc_Type = 9
Delete From Installment
   where Doc_Type = 9 
INSERT INTO INSTALLMENT ( DOC_TYPE,BILL_DOC_TYPE, BILL_NO, BILL_SER, I_NO, DOC_DATE,I_DATE, 
                   Select 9,M.OUT_TYPE, M.OUT_NO, M.OUT_SER, 1, M.OUT_DATE, NVL(M.OUT_DUE_DATE,M.OUT_DATE), 
                     From Ias_outgoing_mst M 
                    Where M.c_code Is Not Null;
EXCEPTION 
         Raise_application_error(-20570,'Error Insert Installment From Outgoing, '||SqlErrm) ;         
Select Count(1) 
  From Installment
 where Doc_Type = 4
   Delete From Installment
    where Doc_Type = 4
INSERT INTO INSTALLMENT ( DOC_TYPE,BILL_DOC_TYPE, BILL_NO, BILL_SER, I_NO,DOC_DATE, I_DATE, I_AMT, 
                   Select 4,M.BILL_DOC_TYPE, M.BILL_NO, M.BILL_SER, 1, M.BILL_DATE, NVL(M.BILL_DUE_DATE,M.BILL_DATE),
                     From Ias_Bill_Mst M 
        Where Bill_Doc_type = 4
                      and bill_ser In ( Select bill_ser From ias_bill_mst where bill_doc_type = 4
                                        Select bill_ser From Installment  where doc_type = 4); 
EXCEPTION 
         Raise_application_error(-20571,'Error Insert Installment From Sales, '||SqlErrm) ;         
FUNCTION Chk_Adj_Installmnet_Trans ( P_Doc_Type      In NUMBER,
Begin                                  
       Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Ias_Adjst_Installment_Mst 
                                    Where Doc_Type_Ref = '||P_Doc_Type||'
      Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Ias_Adjst_Installment_Dtl 
                                    Where Doc_Type_Ref = '||P_Doc_Type||'
   Exception 
         Raise_application_error(-20572,'Error When Select Statement From Ias_Adjst_Installment '||SqlErrm) ;                                        
PROCEDURE Update_Adj_Installmnet (P_Up_All In Number Default 0) Is
Select nvl(Sum(nvl(PAID_AMT_DOC,0)),0) Adj_amt,doc_ser_ref doc_ser,i_no,c_code,nvl(rcrd_no,0) Rcrd_no,nvl(i_py,0) i_py 
 From  IAS_ADJST_INSTALLMENT_DTL
 Group by doc_ser_ref,i_no,c_code,nvl(rcrd_no,0),nvl(i_py,0)
Select nvl(adj_amt,0),bill_ser,i_no,c_code,nvl(rcrd_no,0),nvl(i_py,0)  
  From Installment';
   Cursor adj_cv Is Select Doc_No,Doc_Type_Ref,Doc_No_Ref ,Doc_Ser_Ref ,C_Code,Cc_Code, A_Cy, I_No, nvl(Paid_Amt_Doc,0) Paid_Amt_Doc, 
                      From IAS_ADJST_INSTALLMENT_DTL 
                     Where DOC_SER_ref Is Not Null
                       and doc_ser_ref||i_no||c_code In (Select doc_ser||i_no||c_code From Ias_V_Chk_Adj_Instll_AR)                       
                     Order by Doc_no;
  Begin
    Update Installment Set Adj_amt = 0
     Where bill_ser||i_no||c_code In (Select doc_ser||i_no||c_code From Ias_V_Chk_Adj_Instll_AR)
        Update Installment Set Adj_amt = nvl(Adj_amt,0) + i.Paid_Amt_Doc
         Where c_code= i.c_code
  Exception 
  End;
-- Update All Adj_Data
   Cursor adj_cv Is Select Doc_No,Doc_Type_Ref,Doc_No_Ref ,Doc_Ser_Ref ,C_Code,Cc_Code, A_Cy, I_No, nvl(Paid_Amt_Doc,0) Paid_Amt_Doc, 
                      From IAS_ADJST_INSTALLMENT_DTL 
                     Where DOC_SER_ref Is Not Null
                     Order by Doc_no;
  Begin
     Update Installment Set Adj_amt = 0
      Where nvl(Adj_amt,0) <> 0;                     
        Update Installment Set Adj_amt = nvl(Adj_amt,0) + i.Paid_Amt_Doc
         Where c_code= i.c_code
  Exception 
  End;
CREATE OR REPLACE PACKAGE IAS_MEASURMENTS_PKG AS
FUNCTION Calc_Sales_Cst_Amt(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
FUNCTION Calc_Sales_Cst_Qty(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
FUNCTION Calc_Net_Sales_Cst_Amt(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
FUNCTION Calc_Net_Sales_Cst_Qty(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
FUNCTION Calc_Net_Sales_Cst_Mnth(CCode Varchar2,FDate Date,TDate Date) RETURN Number;
FUNCTION Calc_Rec_Cst (CCode Varchar2 , FDate Date , TDate Date) RETURN Number;
FUNCTION Calc_Stk_Cost  (CCode Varchar2,FDate Date,TDate Date) RETURN Number;
Function Dr_Rate(Local_Cur Varchar2,Cc_Code Varchar2,C_Code Varchar2,A_Cy Varchar2,Fdate Date,Tdate Date) Return Number ;
FUNCTION Get_Sale_Day_Avg (CCode Varchar2 , FDate Date , TDate Date) RETURN Number;
FUNCTION Calc_Rt_Sales_Cst_Percentage(CCode Varchar2,FDate Date,TDate Date) RETURN Number; 
CREATE OR REPLACE PACKAGE BODY IAS_MEASURMENTS_PKG AS
FUNCTION Calc_Sales_Cst_Amt(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  --- SALES _amt(1)
BEGIN 
  Select  Nvl(Sum(((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0))) * nvl(Bill_Rate,1)),0)
    From Ias_Bill_Mst 
   Where Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
 Exception
FUNCTION Calc_Sales_Cst_Qty(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  --- SALES _qty (2)
BEGIN 
  Select nvl(Sum(Nvl(i_Qty,0))+ Sum(Nvl(Free_Qty,0)),0)
    From Ias_Bill_Mst,Ias_Bill_dtl
   Where Ias_Bill_Mst.bill_ser =Ias_Bill_dtl.bill_ser 
 Exception
FUNCTION Calc_Net_Sales_Cst_Amt(CCode Varchar2,FDate Date,TDat
BEGIN 
  Select  Nvl(Sum(((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0))) * nvl(Bill_Rate,1)),0)
    From Ias_Bill_Mst 
   Where Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
   Select Nvl(Sum((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0)) * nvl(Rt_Bill_Rate,1) ),0)
     From Ias_Rt_Bill_Mst 
    Where Ias_Rt_Bill_Mst.C_Code = Nvl(CCode , Ias_Rt_Bill_Mst.C_Code)
 Exception
FUNCTION Calc_Net_Sales_Cst_Qty(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  ---NET SALES  (4)
BEGIN 
  Select  nvl(Sum(Nvl(i_Qty,0))+ Sum(Nvl(Free_Qty,0)),0)
    From Ias_Bill_Mst,Ias_Bill_dtl
   Where Ias_Bill_Mst.bill_ser =Ias_Bill_dtl.bill_ser 
   Select nvl(Sum(Nvl(i_Qty,0))+ Sum(Nvl(Free_Qty,0)),0)
     From Ias_Rt_Bill_Mst,Ias_Rt_Bill_Dtl 
    Where Ias_Rt_Bill_Mst.Rt_Bill_Ser=Ias_Rt_Bill_Dtl.Rt_Bill_Ser 
 Exception
FUNCTION Calc_Net_Sales_Cst_Mnth(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS   --Manthly(7)
BEGIN 
  Select  Nvl(Sum(((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0))) * nvl(Bill_Rate,1)),0)
      From Ias_Bill_Mst 
      Where Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
       Select  Nvl(Sum((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0)) * nvl(Rt_Bill_Rate,1) ),0)
       From Ias_Rt_Bill_Mst 
      Where Ias_Rt_Bill_Mst.C_Code = Nvl(CCode , Ias_Rt_Bill_Mst.C_Code)
 Exception
FUNCTION Calc_Rec_Cst (CCode Varchar2 , FDate Date , TDate Date) RETURN Number IS --
  Select Nvl(Sum(Nvl(Cr_Amt,0)),0) InTo Sum_Rec 
    From ias_post_dtl 
   Where Doc_Type In (1,2)
 Exception
FUNCTION Calc_Stk_Cost  (CCode Varchar2,FDate Date,TDate Date) RETURN Number IS  ---
BEGIN 
  Select  Sum(Nvl(Ias_Bill_Dtl.Stk_Cost,0)*Nvl(Ias_Bill_Mst.Stock_Rate,1)*(Nvl(Ias_Bill_Dtl.I_Qty,0)+Nvl(Ias_Bill_Dtl.Free_Qty,0)))
      From Ias_Bill_Mst,Ias_Bill_Dtl  
      Where Ias_Bill_Mst.Bill_Ser=Ias_Bill_Dtl.Bill_Ser
       Select  Sum(Nvl(Ias_Rt_Bill_Dtl.Stk_Cost,0)*Nvl(Ias_Rt_Bill_Mst.Stock_R
     From Ias_Rt_Bill_Mst,Ias_Rt_Bill_Dtl  
       Where Ias_Rt_Bill_Mst.Rt_Bill_Ser=Ias_Rt_Bill_Dtl.Rt_Bill_Ser
 Exception
Function Dr_Rate(Local_Cur Varchar2,     -- --
FUNCTION Calc_Rt_Sales_Cst_Percentage(CCode Varchar2,FDate Date,TDate Date) RETURN Number IS
BEGIN 
  Select  Nvl(Sum(((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0))) * nvl(Bill_Rate,1)),0)
    From Ias_Bill_Mst 
   Where Ias_Bill_Mst.C_Code = Nvl(CCode , Ias_Bill_Mst.C_Code)              
   Select Nvl(Sum((Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0)) * nvl(Rt_Bill_Rate,1) ),0)
     From Ias_Rt_Bill_Mst 
    Where Ias_Rt_Bill_Mst.C_Code = Nvl(CCode , Ias_Rt_Bill_Mst.C_Code)
 Exception
FUNCTION Get_Sale_Day_Avg (CCode Varchar2 , FDate Date , TDate Date) RETURN Number IS   --
  Begin
  Select Round(Sum(Nvl(Get_Itm_Sales_Age (2,1,Ias_Bill_Dtl.I_Code,Ias_Bill_Dtl.Itm_Unt,FDate,TDate,Ias_Bill_Dtl.W_Code),0))/Count(1),2)
   From Ias_Bill_Mst,Ias_Bill_Dtl
   Where Ias_Bill_Mst.Bill_Ser = Ias_Bill_Dtl.Bill_Ser
  Exception When Others Then
CREATE OR REPLACE PACKAGE Ias_Mnd_CstTrns_Pkg IS
PROCEDURE Chk_CstTrns_Prc (P_DocType In NUMBER Default Null);
PROCEDURE Get_Para(P_lang_no In NUMBER);
PROCEDURE Chk_C_code_Null ( P_lang_no  In NUMBER Default 1,
PROCEDURE Chk_CstCode_Prc ( P_Doc_Type  In NUMBER Default Null,
CREATE OR REPLACE Package BODY Ias_Mnd_CstTrns_Pkg IS
PROCEDURE Chk_CstTrns_Prc (P_DocType In NUMBER Default Null) Is
  Select nvl(post_cheque_type,0)
    From Ias_Para_GL,Ias_Para_AR;
 Exception 
   Select Count(1) Into Cnt  From open_bal
    where open_bal.ac_dtl_typ=3;
   Select Count(1) Into Cnt1 From Ias_Post_dtl 
    Where doc_type=0
 Select 1 doc_type,D.ac_code_dtl c_code,a_cy a_cy,D.j_doc_no doc_no,D.jv_type jv_type ,
   From master_journal_v M,detail_journal_v D ,Customer C
  where M.j_ser  = D.j_ser
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no doc_no,jv_type jv_type, 
   From Ias_Post_dtl
  where doc_type=1
Begin 
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=1 
 Exception
    Raise_application_error(-20561,' Error In Inserting Cst. Trans From Detail_Journal_v = '||chr(13)||SqlErrm) ;
 Select 2 doc_type,D.ac_code_dtl c_code,D.a_cy,D.voucher_no doc_no,
   From vouchers M,voucher_detail D,Customer C
  where D.voucher_type=1
    group by 2 ,D.ac_code_dtl,D.a_cy,D.voucher_no,D.voucher_pay_type,M.v_ser,D.cc_code,D.rcrd_no
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,doc_ser ,nvl(sum(cr_amt),0),cc_code,rcrd_no
   From Ias_Post_dtl
  where doc_type=2 
  group by doc_type,ac_code_dtl,a_cy,doc_no,jv_type,doc_ser,cc_code,rcrd_no';
  Begin 
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=2 
 Exception
    Raise_application_error(-20562,' Error In Inserting Cst. Trans From Rec. Vouchers = '||chr(13)||SqlErrm) ;
 Select 2 doc_type,D.AC_CODE_DTL_END c_code,D.a_cy,D.voucher_no doc_no,
   From vouchers M,voucher_detail D,Customer C
  where D.voucher_type=1
    group by 2 ,D.AC_CODE_DTL_END,D.a_cy,D.voucher_no,D.voucher_pay_type,M.v_ser,D.cc_code, D.rcrd_no
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,doc_ser ,nvl(sum(dr_amt),0),cc_code,rcrd_no
   From Ias_Post_dtl
  where doc_type=2 
  group by doc_type,ac_code_dtl,a_cy,doc_no,jv_type,doc_ser,cc_code,rcrd_no';
  Begin 
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=2 
 Exception
pplication_error(-20562,' Error In Inserting Cst. Trans From Rec. Vouchers (Endrsmnt) = '||chr(13)||SqlErrm) ;
 Select 3 doc_type,D.ac_code_dtl c_code,D.a_cy, D.voucher_no doc_no,
   From vouchers M,voucher_detail D,Customer C
  where D.voucher_type=2
   group by 3 ,D.ac_code_dtl,D.a_cy,D.voucher_no,D.voucher_pay_type ,M.v_ser,D.cc_code,D.rcrd_no
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type ,doc_ser,nvl(sum(dr_amt),0),cc_code,rcrd_no
   From Ias_Post_dtl
  where doc_type=3
  group by doc_type,ac_code_dtl,a_cy,doc_no,jv_type,doc_ser,cc_code,rcrd_no';
 Begin
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=3 
 Exception
    Raise_application_error(-20563,' Error In Inserting Cst. Trans From Pay. Vouchers = '||chr(13)||SqlErrm) ;
 Select 4 doc_type,c_code c_code,bill_currency a_cy,bill_no doc_no,bill_doc_type jv_type ,
   From Ias_Bill_Mst
  where nvl(Stand_by,0)= 0
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,
   From Ias_Post_Dtl
  where doc_type=4
  Begin
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=4 
 Exception
    Raise_application_error(-20564,' Error In Inserting Cst. Trans From bills = '||chr(13)||SqlErrm) ;
 Select 15 doc_type,c_code c_code,A_cy a_cy,doc_no doc_no,4  jv_type ,
   From IAS_BILL_MST_ADD_DISC
  where c_code Is not Null 
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,
   From Ias_Post_Dtl
  where doc_type=15
  Begin
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=15 
 Exception
    Raise_application_error(-20564,' Error In Inserting Cst. Trans From Add_Disc_Bills = '||chr(13)||SqlErrm) ;
 Select 5 doc_type,c_code c_code,rt_bill_currency a_cy,rt_bill_no doc_no,
   From Ias_Rt_Bill_Mst
  where rt_bill_doc_type=4
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,1 rcrd_no,Round(nvl(cr_amt,0),2)
   From Ias_Post_Dtl
  where doc_type=5
 Begin  
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=5 
  Exception
    Raise_application_error(-20565,' Error In Inserting Cst. Trans From return bills = '||chr(13)||SqlErrm) ;
 Select 7 doc_type,M.c_code,M.rt_bill_currency a_cy,M.rt_bill_no doc_no,
   From Ias_Pr_Bill_Mst M, Customer C
  where rt_bill_doc_type=4
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,1 rcrd_no
   From Ias_Post_Dtl
  where doc_type=7
  Begin
Select 1 
  From Ias_V_Chk_CstTrns
 where doc_type=7 
 Exception
 Select 8 doc_type,M.ac_code_dtl c_code,M.a_cy,M.gr_no doc_no,M.Incom_Type jv_type ,
   From gr_note M,gr_detail D, Customer C
  where M.pi_type=5
    group by M.ac_code_dtl,M.a_cy,M.gr_no,M.Incom_Type,M.g_ser,M.cc_code,M.rt_out
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,1 rcrd_no,nvl(cr_amt,0)
   From Ias_Post_Dtl 
  where doc_type=8
Begin   
Select 1 
  From Ias_V_Chk_CstTrns
 where doc_type=8 
 Exception
 Select 9 doc_type,M.ac_code_dtl c_code,M.a_cy,M.Out_no doc_no,
   From Ias_Outgoing_Mst M,Customer C
  where M.a_code=C.c_a_code
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,cc_code,1 rcrd_no,nvl(dr_amt,0) 
   From Ias_Post_Dtl
  Where doc_type=9
  Begin
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=9 
 Exception
 Select 95 doc_type,c_code c_code,a_cy a_cy,doc_no doc_no,bill_doc_type jv_type ,
   From SHP_PREPAID_SLS_MST
  where nvl(Stand_by,0)= 0
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,
   From Ias_Post_Dtl
  where doc_type=95
  Begin
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=95 
 Exception
    Raise_application_error(-20564,' Error In Inserting Cst. Trans From bills = '||chr(13)||SqlErrm) ;
 Select 96 doc_type,c_code c_code,a_cy a_cy,doc_no doc_no,bill_doc_type jv_type ,
   From SHP_BILLING
  where nvl(Stand_by,0)= 0
 Select doc_type,ac_code_dtl c_code,a_cy,doc_no,jv_type,Doc_Ser,
   From Ias_Post_Dtl
  where doc_type=96
  Begin
 Select 1 
   From Ias_V_Chk_CstTrns
  where doc_type=96 
 Exception
    Raise_application_error(-20564,' Error In Inserting Cst. Trans From bills = '||chr(13)||SqlErrm) ;
PROCEDURE Get_Para (P_Lang_No In NUMBER) Is
 Select Post_Cheque_Type
   From Ias_Para_GL;
Exception 
PROCEDURE Chk_C_code_Null ( P_lang_no  In NUMBER Default 1,
  Select nvl(AR_AC_LINK_TYPE,1) 
    From ias_para_ar;
 Exception when others then
Select 1 Into cnt 
From Master_journal_v M,Detail_journal_v D 
Where M.J_ser = D.J_ser
  And Exists ( Select 1 From Customer where c_a_code=D.a_code and RowNum<=1)
Exception when others then
Update Detail_journal_v dj Set ac_code_dtl = (Select c_code From customer where c_a_code=dj.a_code),ac_dtl_typ=3
Where Exists ( Select 1 From Customer where c_a_code=dj.a_code and RowNum<=1);
Exception when others then
     Begin
         Select 1 
           From Vouchers M,Voucher_Detail D 
          Where M.V_ser = D.V_ser
            and Exists ( Select 1 From Customer where c_a_code=D.a_code and RowNum<=1)
               Begin
                 Update Voucher_Detail vd Set ac_code_dtl = (Select c_code From customer where c_a_code=vd.a_code),ac_dtl_typ=3
                  where Exists ( Select 1 From Customer where c_a_code=vd.a_code and RowNum<=1);
               Exception 
               End;
     Exception 
     End;
     Begin
         Select 1 
           From Gr_Note M 
          Where M.pi_type=5 
        and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
               Begin
                 Update Gr_Note gn Set ac_code_dtl = (Select c_code From customer where c_a_code=gn.a_code)
                  where Exists ( Select 1 From Customer where c_a_code=gn.a_code and RowNum<=1)
               Exception 
               End;
     Exception 
     End;
      Begin
         Select 1 
           From Gr_Note M 
          Where M.pi_type=5 
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
               Begin
                 Update Gr_Note gn Set ac_code_dtl = (Select c_code From customer where c_a_code=gn.a_code) , ac_dtl_typ = 3
                  where Exists ( Select 1 From Customer where c_a_code=gn.a_code and RowNum<=1)
               Exception 
               End;
     Exception 
     End;
     Begin
         Select 1 
           From Ias_Outgoing_Mst M 
          Where M.c_code Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
               Begin
                 Update Ias_Outgoing_Mst Outg Set c_code = (Select c_code From customer where c_a_code=Outg.a_code)
                  where Exists ( Select 1 From Customer where c_a_code=Outg.a_code and RowNum<=1)
               Exception 
               End;
     Exception 
     End;
     Begin
         Select 1 
           From Ias_Outgoing_Mst M 
          Where M.ac_code_dtl Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
               Begin
                 Update Ias_Outgoing_Mst Outg Set ac_code_dtl = (Select c_code From customer where c_a_code=Outg.a_code) ,ac_dtl_typ=3
                  where Exists ( Select 1 From Customer where c_a_code=Outg.a_code and RowNum<=1)
               Exception 
               End;
     Exception 
     End;
     Begin
         Select 1 
           From IAS_GRNT_DTL M 
          Where M.ac_code_dtl Is Null
            and Exists ( Select 1 From Customer where c_a_code=M.ac_code and RowNum<=1)
               Begin
                 Update IAS_GRNT_DTL m Set ac_code_dtl = (Select c_code From customer where c_a_code=m.ac_code) , ac_dtl_typ =3 
                  where Exists ( Select 1 From Customer where c_a_code=m.ac_code and RowNum<=1)
               Exception 
               End;
     Exception 
     End;
     Begin
         Select 1 
           From Ias_Post_Dtl M 
          Where doc_type <> 0 
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
               Begin
                 Update Ias_Post_Dtl Pd Set c_code = (Select c_code From customer where c_a_code=Pd.a_code)
                  where Exists ( Select 1 From Customer where c_a_code=Pd.a_code and RowNum<=1)
               Exception 
               End;
     Exception 
     End;
         Select 1 
           From Ias_Post_Dtl M 
          Where doc_type <> 0 
            and Exists ( Select 1 From Customer where c_a_code=M.a_code and RowNum<=1)
               Begin
                 Update Ias_Post_Dtl Pd Set ac_code_dtl = (Select c_code From customer where c_a_code=Pd.a_code) , ac_dtl_typ =3 
                  where Exists ( Select 1 From Customer where c_a_code=Pd.a_code and RowNum<=1)
               Exception 
               End;
     Exception 
     End;
PROCEDURE Chk_CstCode_Prc ( P_Doc_Type In NUMBER Default Null,
  Select nvl(AR_AC_LINK_TYPE,1) 
    From ias_para_ar;
 Exception when others then
         Begin
             Select 1 Into cnt From (                           
              Select D.a_code,D.ac_code_dtl c_code,D.a_cy From Master_Journal_v M,Detail_Journal_v D  
               where M.J_ser = D.J_ser 
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;
         Exception 
         End;
         Begin
             Select 1 Into cnt From (                           
              Select D.a_code,D.ac_code_dtl c_code,D.a_cy From Master_Journal_v M,Detail_Journal_v D  
               where M.J_ser = D.J_ser 
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;
                 Begin
                     Update Detail_journal_v dj Set ac_code_dtl = (Select c_code From customer where c_a_code=dj.a_code)
                      Where a_code||ac_code_dtl||a_cy In
                                     (Select D.a_code||D.ac_code_dtl||D.a_cy From Master_Journal_v M,Detail_Journal_v D  
                                       where M.J_ser = D.J_ser 
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                 Exception 
                 End;
         Exception 
         End;
         Begin
             Select 1 Into cnt From (                           
              Select D.a_code,D.ac_code_dtl,D.a_cy From Vouchers M,Voucher_Detail D  
               where M.V_ser = D.V_ser 
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;
         Exception 
         End;
         Begin
             Select 1 Into cnt From (                           
              Select D.a_code,D.ac_code_dtl,D.a_cy From Vouchers M,Voucher_Detail D   
               where M.V_ser = D.V_ser 
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;
                 Begin
                     Update Voucher_Detail dj Set ac_code_dtl = (Select c_code From customer where c_a_code=dj.a_code)
                      Where a_code||ac_code_dtl||a_cy In
                   (Select D.a_code||D.ac_code_dtl||D.a_cy From Vouchers M,Voucher_Detail D  
                                       where M.V_ser = D.V_ser 
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                 Exception 
                 End;
         Exception 
         End;
      Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.cash_no From Ias_Bill_Mst M,Ias_Bill_Mst D 
               where M.bill_doc_type = 1 
              Select a_code,cash_no From Cash_In_Hand )
              Where RowNum <=1;
                 Begin
                     Update Ias_Bill_Mst bm Set a_code = (Select a_code From Cash_In_Hand where cash_no=bm.cash_no)
                      Where bill_doc_type = 1
                        and Not Exists (Select 1 From Cash_In_Hand where a_code = bm.a_code and rownum<=1);
                 Exception 
                 End;
      Exception 
      End;
      Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.cash_no From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Mst D 
               where M.rt_bill_doc_type=1 
              Select a_code,cash_no From Cash_In_Hand )
              Where RowNum <=1;
                 Begin
                     Update Ias_Rt_Bill_Mst rtbm Set a_code = (Select a_code From Cash_In_Hand where cash_no=rtbm.cash_no)
                      Where rt_bill_doc_type = 1
                        and Not Exists (Select 1 From cash_in_hand where a_code = rtbm.a_code and rownum<=1);
                 Exception 
                 End;
      Exception 
      End;
         Begin
elect 1 Into cnt From (                           
              Select M.a_code,M.c_code,M.rt_bill_currency From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Mst D  
               where M.rt_bill_doc_type=4 
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;
         Exception 
         End;
         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.c_code,M.rt_bill_currency From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Mst D 
               where M.rt_bill_doc_type=4 
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;
                 Begin
                     Update Ias_Rt_Bill_Mst rtbm Set c_code = (Select c_code From customer where c_a_code=rtbm.a_code)
                      Where rt_bill_doc_type=4  
                                     (Select M.a_code||M.c_code||M.rt_bill_currency From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Mst D 
                                       where M.rt_bill_doc_type=4 
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                 Exception 
                 End;
         Exception 
         End;
         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.ac_code_dtl,M.a_cy From Gr_Note M,Gr_Detail D  
               where M.pi_type=5 
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;
         Exception 
         End;
         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.ac_code_dtl,M.a_cy From Gr_Note M,Gr_Detail D  
               where M.pi_type=5 
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;
                 Begin
                     Update Gr_Note gn Set ac_code_dtl = (Select c_code From customer where c_a_code=gn.a_code)
                      Where pi_type=5 
                                     (Select M.a_code||M.c_code||M.a_cy From Gr_Note M,Gr_Detail D 
                                       where M.pi_type=5 
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_code = Account_curr.a_code );
                 Exception 
                 End;
         Exception 
         End;
         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.ac_code_dtl,M.a_cy From Ias_Outgoing_Mst M,Ias_Outgoing_Dtl D  
               where M.out_ser = D.out_ser 
              Select customer.c_a_code,customer.c_code,customer_curr.a_cy From customer,customer_curr
               where customer.c_code = customer_curr.c_code )
              Where RowNum <=1;
         Exception 
         End;
         Begin
             Select 1 Into cnt From (                           
              Select M.a_code,M.ac_code_dtl,M.a_cy From Ias_Outgoing_Mst M,Ias_Outgoing_Dtl D  
               where M.out_ser = D.out_ser 
              Select customer.c_a_code,customer.c_code,Account_curr.a_cy From customer,Account_curr
               where customer.c_a_code = Account_curr.a_code )
              Where RowNum <=1;
                 Begin
                     Update Gr_Note gn Set ac_code_dtl = (Select c_code From customer where c_a_code=gn.a_code)
                      Where a_code||ac_code_dtl||a_cy In
                                     (Select M.a_code||M.c_code||M.a_cy From Ias_Outgoing_Mst M,Ias_Outgoing_Dtl D  
                                       where M.out_ser = D.out_ser  
                                      Select customer.c_a_code||customer.c_code||Account_curr.a_cy From customer,Account_curr
                                       where customer.c_a_
                 Exception 
                 End;
         Exception 
         End;
CREATE OR REPLACE PACKAGE IAS_ONLINE_PKG AS
 PROCEDURE GET_PARA  ( P_BRN_NO       IN SALES_ORDER.BRN_NO%TYPE      DEFAULT NULL,
 FUNCTION GET_DOC_TYP_SERIAL (P_DOC_TYP In NUMBER) RETURN NUMBER ;
 FUNCTION GET_DOC_NO  (  P_DOC_TYP      IN NUMBER,
 FUNCTION GET_DOC_SER (  P_DOC_TYP      IN NUMBER,
 PROCEDURE INSRT_SAL_ORDR_MST ( P_ORDER_NO        IN OUT SALES_ORDER.ORDER_NO%TYPE,
 PROCEDURE INSRT_SAL_ORDR_DTL ( P_I_CODE        IN IAS_ITM_MST.I_CODE%TYPE,
 PROCEDURE INSRT_OTHR_CHRGS_SAL_ORDR ( P_BILL_DOC_TYPE   IN SALES_ORDER.BILL_DOC_TYPE%TYPE,
 PROCEDURE INSRT_TAX_MOVMNT;
 PROCEDURE INSRT_RSRVD_TBL ;
 PROCEDURE INSRT_ARCHV_TBL ( P_FILE_DESC IN IAS_ARCHIVES_MST.FILE_DESC%TYPE , P_FILE_NM1 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE ,P_FILE_NM2 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE DEFAULT NULL,P_FILE_NM3 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE DEFAULT NULL);
 PROCEDURE INSRT_PRPRTN_SAL_ORDR_MST (  P_DOC_NO_REF      IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_NO_REF%TYPE,
 PROCEDURE INSRT_PRPRTN_SAL_ORDR_DTL (  P_DOC_NO_REF    IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_NO_REF%TYPE,
 FUNCTION GET_SAL_ORDR_STAT ( P_ORDER_NO   IN SALES_ORDER.ORDER_NO%TYPE,
  FUNCTION GET_ICODE_AVLQTY ( P_ICODE   IN   IAS_ITM_MST.I_CODE%TYPE,
  FUNCTION GET_SYS_GUID RETURN VARCHAR2;
  FUNCTION CHK_UPD_ITM ( P_I_CODE      IN IAS_ITM_MST.I_CODE%TYPE ,
  FUNCTION CALL_API_UPD ( P_I_CODE    IN  IAS_ITM_MST.I_CODE%TYPE ,
CREATE OR REPLACE PACKAGE BODY IAS_ONLINE_PKG AS
PROCEDURE GET_PARA
  SELECT CALC_VAT_AMT_TYPE ,NO_OF_DECIMAL_AR ,CLC_TAX_DSCNT2,CLC_TAX_DSCNT3
    FROM IAS_PARA_AR 
   WHERE ROWNUM<=1;
   SELECT R.USE_PRICE_INCLUDE_VAT 
    FROM IAS_PARA_GEN R 
   WHERE ROWNUM<=1;
   SELECT CUR_CODE ,SO_EXPIRE_AFTR_DAY ,AUTO_APPROVD, RSRVD_PRD_DAY,CONN_WC_MTHD
    FROM IAS_PARA_ONLINE 
   WHERE SHO_SYS_TYP = P_SHO_SYS_TYP
   BEGIN
        SELECT W.CONN_BRN_NO,W.W_CODE,NVL(W.CC_CODE,D.CC_CODE),NVL(W.PJ_NO,D.PJ_NO),NVL(W.ACTV_NO,D.ACTV_NO),NVL(W.SO_TYPE,D.SO_TYPE), NVL(W.SO_DSC,D.SO_DSC),NVL(W.SC_NO,D.SC_NO),
          FROM IAS_DFLT_DATA_ONLINE D , WAREHOUSE_DETAILS W
         WHERE W.W_CODE=P_W_CODE
    EXCEPTION WHEN OTHERS THEN
        Raise_Application_Error (-20003,'Error When Select Default Data Online , '||Sqlerrm);
    BEGIN
      SELECT U_ID 
        FROM USER_R 
       WHERE NVL(USER_ONLINE,0)= 1 
    EXCEPTION WHEN OTHERS THEN
        Raise_Application_Error (-20003,'Error When Select Default User Online , '||Sqlerrm);
  EXCEPTION WHEN OTHERS THEN
    Raise_Application_Error (-20003,'Error When Select Parameter Of System , '||Sqlerrm);
FUNCTION Get_Doc_Typ_Serial (P_DOC_TYP In NUMBER) RETURN NUMBER IS
 BEGIN
      EXECUTE IMMEDIATE ('SELECT '||V_FLD_NM||' FROM IAS_PARA_AR ') INTO V_DOC_SERIAL;
  EXCEPTION WHEN OTHERS THEN
 FUNCTION GET_DOC_NO  (  P_DOC_TYP      IN NUMBER,
          Raise_Application_Error (-20001,'Error When Select Serial Typ For Document , '||Sqlerrm); 
          Select nvl(Max(QUOT_NO),0) + 1 Into V_Doc_No 
            From QUOTATION
           where Brn_No  = P_Brn_No;
          Select nvl(Max(QUOT_NO),0) + 1 Into V_Doc_
No From QUOTATION
           where Brn_No  = P_Brn_No
          Select nvl(Max(order_no),0) + 1 Into V_Doc_No 
            From Sales_Order
           where Brn_No  = P_Brn_No;
          Select nvl(Max(order_no),0) + 1 Into V_Doc_No From Sales_Order
           where Brn_No = P_Brn_No
          Select nvl(Max(Doc_No),0) + 1 Into V_Doc_No 
            From Ias_Chk_Doc_Inout_Qty_Mst
           where Brn_No  = P_Brn_No;    
 FUNCTION GET_DOC_SER(   P_DOC_TYP     IN NUMBER,
 BEGIN
  PROCEDURE INSRT_SAL_ORDR_MST ( P_ORDER_NO       IN OUT SALES_ORDER.ORDER_NO%TYPE,
 BEGIN
    BEGIN
              SELECT R_CODE INTO V_R_CODE FROM CUSTOMER WHERE C_CODE = P_C_CODE AND ROWNUM<=1;
              SELECT R_CODE INTO V_R_CODE FROM IAS_CASH_CUSTMR  WHERE CUST_CODE = P_C_CODE AND ROWNUM<=1;
    EXCEPTION WHEN OTHERS THEN
    END;  
    BEGIN
    SELECT NVL(P_ORDER_DATE,YS_GEN_PKG.GET_SYSDATE) + NVL(G_SO_EXPIRE_AFTR_DAY,1) INTO  V_ORDER_EXPIRE_DATE FROM DUAL;
      EXCEPTION WHEN OTHERS THEN
    END;
         BEGIN
            DELETE SALES_ORDER WHERE ORDER_NO=P_ORDER_NO AND ORDER_SER=P_ORDER_SER;
         EXCEPTION WHEN OTHERS THEN
         END;
         BEGIN
            DELETE IAS_RESERVE_MST WHERE DOC_TYPE_REF=53 AND DOC_NO_REF=P_ORDER_NO AND DOC_SER_REF=P_ORDER_SER ;
         EXCEPTION WHEN OTHERS THEN
         END;
         BEGIN
            DELETE OTHER_CHARGES_OTHRS WHERE BILL_NO=P_ORDER_NO AND BILL_SER=P_ORDER_SER ;
         EXCEPTION WHEN OTHERS THEN
         END;
         BEGIN
            DELETE IAS_ARCHIVES_MST WHERE DOC_NO=P_ORDER_NO AND DOC_SER=P_ORDER_SER;
         EXCEPTION WHEN OTHERS THEN
         END;                        
         BEGIN
            DELETE IAS_CHK_DOC_INOUT_QTY_MST WHERE DOC_TYPE_REF=53 AND DOC_NO_REF=P_ORDER_NO AND DOC_SER_REF=P_ORDER_SE
         EXCEPTION WHEN OTHERS THEN
         END;
    INSERT INTO SALES_ORDER (
               --## Insert Into S_Apprvd_Mov
               Begin
               Exception
               End;           
               Begin
                  INSERT INTO S_APPRVD_MOV (LVL_NO, DOC_TYP, DOC_SER, DOC_NO, DOC_JV_TYP, DOC_DATE,APPRVD, ORDR_NO, CMP_NO, BRN_NO,BRN_YEAR, BRN_USR)
                                     SELECT LVL_NO, DOC_TYP, G_DOC_SER ,G_DOC_NO,P_BILL_DOC_TYPE,NVL(P_ORDER_DATE,YS_GEN_PKG.GET_SYSDATE),NVL(G_AUTO_APPROVD,0), ORDR_NO,
                                       FROM S_APPRVD_LVL 
                                      WHERE DOC_TYP = 53;
               Exception
                     Raise_Application_Error(-20003,'Err When Insert Into S_Apprvd_Mov = '||Sqlerrm);
               End;                
    EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20002,'Error When Insert Into Sales Order Master , '||SQLERRM);
 PROCEDURE INSRT_SAL_ORDR_DTL ( P_I_CODE        IN IAS_ITM_MST.I_CODE%TYPE,
 BEGIN
   BEGIN
     SELECT NVL(P_SIZE,1) INTO V_P_SIZE FROM IAS_ITM_DTL WHERE I_CODE = P_I_CODE AND ITM_UNT = P_ITM_UNT AND ROWNUM<=1;
     EXCEPTION WHEN OTHERS THEN
   END;    
    INSERT INTO ORDER_DETAIL ( SO_TYPE,
   EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20003,'Error When Insert Into Sales Order Detail , '||SQLERRM);   
PROCEDURE INSRT_OTHR_CHRGS_SAL_ORDR ( P_BILL_DOC_TYPE   IN SALES_ORDER.BILL_DOC_TYPE%TYPE,
        BEGIN 
          SELECT A_CODE INTO V_A_CODE
            FROM SALES_CHARGES WHERE SC_NO=G_SC_NO
        EXCEPTION
        END;
        BEGIN     
            INSERT INTO O
        EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20014,'Error When Insert Into Other Charges , '||SQLERRM);
        BEGIN
           UPDATE SALES_ORDER A SET OTHR_AMT=V_OTHR_AMT,VAT_AMT_OTHR=V_VAT_AMT WHERE ORDER_SER=G_DOC_SER;
           UPDATE ORDER_DETAIL A SET OTHR_AMT=(SELECT (SUM(NVL(OTHER_CHARGES_OTHRS.AMT,0))/NVL(P_DOC_AMT,0))* NVL(A.I_PRICE,0) 
                                                 FROM OTHER_CHARGES_OTHRS
                                                WHERE OTHER_CHARGES_OTHRS.BILL_SER=A.ORDER_SER
                                   OTHR_AMT_DISC=(SELECT NVL(A.OTHR_AMT_DISC,0)+(SUM(NVL(OTHER_CHARGES_OTHRS.AMT,0))/NVL(P_DOC_AMT,0))* NVL(A.I_PRICE,0)*-1 FROM OTHER_CHARGES_OTHRS
                                                     WHERE OTHER_CHARGES_OTHRS.BILL_SER=A.ORDER_SER
                                                       AND EXISTS(SELECT 1 FROM SALES_CHARGES
                                                              WHERE SC_NO = OTHER_CHARGES_OTHRS.SC_NO
                                   VAT_AMT_OTHR=(SELECT (SUM(NVL(OTHER_CHARGES_OTHRS.VAT_AMT,0))/NVL(P_DOC_AMT,0))* NVL(A.I_PRICE,0) 
                                                   FROM OTHER_CHARGES_OTHRS
                                                  WHERE OTHER_CHARGES_OTHRS.BILL_SER=A.ORDER_SER
             WHERE ORDER_SER=G_DOC_SER
        EXCEPTION WHEN OTHERS THEN
 EXCEPTION WHEN OTHERS THEN
   RAISE_APPLICATION_ERROR (-20015,'Error When Insert Into Other Charges , '||SQLERRM);   
 PROCEDURE INSRT_TAX_MOVMNT IS 
 BEGIN
     BEGIN
       EXCEPTION WHEN OTHERS THEN
       END;  
 PROCEDURE INSRT_RSRVD_TBL IS
 BEGIN
           BEGIN    
             SELECT NVL(MAX(DOC_NO),0)+1 INTO V_RSRV_NO FROM IAS_RESERVE_MST WHERE DOC_TYPE_REF = 53 ;
            EXCEPTION WHEN OTHERS THEN
            END;    
            BEGIN
               INSERT INTO IAS_RESERVE_MST ( DOC_TYPE, 
                                      SELECT 2, 
              FROM SALES_ORDER
                                       WHERE ORDER_NO  = G_DOC_NO
             EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20004,'Error When Insert Into Ias_Reserve_Mst , '||SQLERRM);
             END;
            BEGIN
               INSERT INTO IAS_RESERVE_DTL( DOC_TYPE     ,
                                     SELECT 2                            , 
                                       FROM SALES_ORDER M,ORDER_DETAIL D
                        WHERE M.ORDER_SER=D.ORDER_SER
             EXCEPTION WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR (-20005,'Error When Insert Into Ias_Reserve_Dtl , '||SQLERRM);
             END;   
PROCEDURE INSRT_ARCHV_TBL ( P_FILE_DESC IN IAS_ARCHIVES_MST.FILE_DESC%TYPE , P_FILE_NM1 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE ,P_FILE_NM2 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE DEFAULT NULL,P_FILE_NM3 IN IAS_ARCHIVES_DTL.FILE_PATH%TYPE DEFAULT NULL) IS
 BEGIN
           BEGIN    
             SELECT NVL(MAX(FILE_NO),0)+1 INTO V_FILE_NO FROM IAS_ARCHIVES_MST;
            EXCEPTION WHEN OTHERS THEN
            END;
            BEGIN
               INSERT INTO IAS_ARCHIVES_MST ( FILE_NO,
                                       SELECT V_FILE_NO,
                                         FROM SALES_ORDER
                                        WHERE ORDER_NO  = G_DOC_NO
             EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20006,'Error When Insert Into Ias_Archives_Mst , '||SQLERRM);
             END;
            BEGIN
               INSERT INTO IAS_ARCHIVES_DTL( FILE_NO, 
                                      SELECT V_FILE_NO, 
                                        FROM SALES_ORDER
                                       WHERE ORDER_NO  = G_DOC_NO
             EXCEPTION WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR (-20007,'Error When Insert Into Ias_Archives_Dtl , '||SQLERRM);
             END;   
               BEGIN
                   INSERT INTO IAS_ARCHIVES_DTL( FILE_NO, 
                                          SELECT V_FILE_NO, 
                                            FROM SALES_ORDER
                                           WHERE ORDER_NO  = G_DOC_NO
                 EXCEPTION WHEN OTHERS THEN
                    RAISE_APPLICATION_ERROR (-20008,'Error When Insert Into Ias_Archives_Dtl , '||SQLERRM);
                 END;
               BEGIN
                   INSERT INTO IAS_ARCHIVES_DTL( FILE_NO, 
                                          SELECT V_FILE_NO, 
                                            FROM SALES_ORDER
                                           WHERE ORDER_NO  = G_DOC_NO
                 EXCEPTION WHEN OTHERS THEN
                    RAISE_APPLICATION_ERROR (-20009,'Error When Insert Into Ias_Archives_Dtl , '||SQLERRM);
                 END;
 END; 
PROCEDURE INSRT_PRPRTN_SAL_ORDR_MST ( P_DOC_NO_REF      IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_NO_REF%TYPE,
 BEGIN
   INSERT INTO IAS_CHK_DOC_INOUT_QTY_MST ( DOC_NO,
                                    SELECT G_DOC_NO,
                                      FROM SALES_ORDER
                                     WHERE ORDER_NO  = P_DOC_NO_REF
    EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20010,'Error When Insert Into Ias_Chk_Doc_Inout_Qty_Mst , '||SQLERRM);
 PROCEDURE INSRT_PRPRTN_SAL_ORDR_DTL (  P_DOC_NO_REF    IN IAS_CHK_DOC_INOUT_QTY_MST.DOC_NO_REF%TYPE,
 BEGIN
   BEGIN
     SELECT NVL(P_SIZE,1) INTO V_P_SIZE FROM IAS_ITM_DTL WHERE I_CODE = P_I_CODE AND ITM_UNT = P_ITM_UNT AND ROWNUM<=1;
     EXCEPTION WHEN OTHERS THEN
   END;
     INSERT INTO IAS_CHK_DOC_INOUT_QTY_DTL ( DOC_NO,
   EXCEPTION WHEN OTHERS THEN
              RAISE_APPLICATION_ERROR (-20012,'Error When Insert Into Ias_Chk_Doc_Inout_Qty_Dtl , '||SQLERRM);   
 FUNCTION GET_SAL_ORDR_STAT ( P_ORDER_NO   IN SALES_ORDER.ORDER_NO%TYPE,
 BEGIN
          BEGIN
            SELECT DECODE(NVL(PROCESED,0),1,4,NVL(APPROVED,0)) INTO V_STAT FROM SALES_ORDER WHERE ORDER_NO=P_ORDER_NO AND ORDER_SER=P_ORDER_SER AND EXTERNAL_POST=67;
          EXCEPTION WHEN OTHERS THEN
          END;
  EXCEPTION WHEN OTHERS THEN
FUNCTION GET_ICODE_AVLQTY ( P_ICODE   IN   IAS_ITM_MST.I_CODE%TYPE,
       BEGIN          
              SELECT SUM(NVL(I.AVL_QTY,0))/P_PSIZE
                 FROM IAS_ITM_WCODE I,WAREHOUSE_DETAILS W
                WHERE I.I_CODE  = P_ICODE
              SELECT SUM(NVL(I.AVL_QTY,0))/P_PSIZE
                 FROM IAS_ITM_WCODE I,WAREHOUSE_DETAILS W
                WHERE I.I_CODE  = P_ICODE
             SELECT SUM(NVL(I.AVL_QTY,0))/P_PSIZE
                 FROM IAS_ITM_WCODE I,WAREHOUSE_DETAILS W
                WHERE I.I_CODE  = P_ICODE
       EXCEPTION WHEN OTHERS THEN
       END;
       BEGIN
              SELECT NVL(SUM(NVL(R.CP_QTY,0)),0) /NVL( P_PSIZE,1)
                    FROM IAS_RESERVE_DTL R,WAREHOUSE_DETAILS W
                   WHERE R.W_CODE             = W.W_CODE
              SELECT NVL(SUM(NVL(R.CP_QTY,0)),0) /NVL( P_PSIZE,1)
                FROM IAS_RESERVE_DTL R,WAREHOUSE_DETAILS W
               WHERE R.W_CODE             = W.W_CODE
              SELECT NVL(SUM(NVL(R.CP_QTY,0)),0) /NVL( P_PSIZE,1)
                FROM IAS_RESERVE_DTL R,WAREHOUSE_DETAILS W
               WHERE R.W_CODE             = W.W_CODE
       EXCEPTION WHEN OTHERS THEN
       END;   
EXCEPTION WHEN OTHERS THEN
FUNCTION GET_SYS_GUID RETURN VARCHAR2 IS
  SELECT SYS_GUID() INTO V_SYS_GUID FROM DUAL;          
EXCEPTION WHEN OTHERS THEN
FUNCTION CHK_UPD_ITM ( P_I_CODE      IN IAS_ITM_MST.I_CODE%TYPE ,
    BEGIN
      SELECT 1 INTO V_CNT FROM IAS_PARA_ONLINE WHERE SHO_SYS_TYP=1 AND NVL(USE_AUTO_UPD,0)=1 AND ROWNUM<=1;
    EXCEPTION WHEN OTHERS THEN
    END;
      BEGIN
        SELECT 1 INTO V_CNT FROM IAS_ITM_ONLINE WHERE I_CODE=P_I_CODE AND ROWNUM<=1;
      EXCEPTION WHEN OTHERS THEN
      END;
          BEGIN
            SELECT 1 INTO V_CNT FROM IAS_V_ITM_WCODE_ONLINE WHERE I_CODE=P_I_CODE AND W_CODE=P_W_CODE AND ROWNUM<=1;
          EXCEPTION WHEN OTHERS THEN
          END;
EXCEPTION WHEN OTHERS THEN
FUNCTION CALL_API_UPD ( P_I_CODE    IN  IAS_ITM_MST.I_CODE%TYPE ,
       BEGIN
           BEGIN
             SELECT UPD_API_URL INTO V_URL FROM IAS_PARA_ONLINE WHERE SHO_SYS_TYP=1 AND ROWNUM<=1;
           EXCEPTION WHEN OTHERS THEN 
           END;                          
           V_RQST := UTL_HTTP.BEGIN_REQUEST (V_URL, 'POST',UTL_HTTP.HTTP_VERSION_1_1);--, 'HTTP/1.1');
           BEGIN
           EXCEPTION WHEN UTL_HTTP.END_OF_BODY THEN
           END;
  EXCEPTION WHEN OTHERS THEN
  END;   
CREATE OR REPLACE Package IAS_POSTING_AR_PKG Is
Procedure Get_Para ( P_Lang_no 
Procedure Get_Interface_Ac(P_Brn_no     
Procedure Post_Sales (  P_f_doc_no     In NUMBER   Default Null
Procedure Post_Sales_Add_Disc  ( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Rt_Sales( P_f_doc_no      In NUMBER   Default Null
Procedure Post_out_bills(  P_f_doc_no      In NUMBER   Default Null
Procedure Post_Ret_Rt_Bills( P_f_doc_no      In NUMBER   Default Null
Procedure Post_Sales_Due_Cr_Card   (  P_f_doc_no      In NUMBER   Default Null
PROCEDURE Post_Sales_Cpn ( P_Post_Type      In NUMBER   Default 0
Procedure Post_Sales_Cmpns_Qty   (  P_f_doc_no       In NUMBER   Default Null
CREATE OR REPLACE Package Body IAS_POSTING_AR_PKG Is
Procedure Get_Para ( P_Lang_no 
 Begin
  Select Cur_code 
    From Ex_Rate 
   Where L_f=1;
  Exception When Others Then
 Begin
  Select Cur_code ,Cur_rate 
    From Ex_Rate 
   Where Stock_Cur=1;
 Exception
   Begin
   Select Nvl(Ias_Para_Gen.Cc_Avail,1),Nvl(Ias_Para_Gen.Cc_Post,0),Nvl(Ias_Para_Gen.Pj_Post,0),Nvl(Ias_Para_Gen.Actv_Post,0),Nvl(Ias_Para_Gen.Use_Vat,0),Nvl(Use_Costing,0),Nvl(Use_Out_Bills,0),
   From Ias_Para_Gen,Ias_Para_Ar,Ias_Para_Inv;
   Exception 
  End;
Procedure Get_Interface_Ac(P_Brn_no     
 Select Vat_Ac,Vat_Pur_A_Code,Comm_A_Code,Vat_Profit_Debt,Vat_Profit_Crdt,DLY_SALES_AC,Point_Rplc_A_Code,Frc_Diff_Disc_Aftr_Vat_Ac,
   From Interface_Acc 
  Where Brn_No=P_Brn_No 
  Exception 
Procedure Post_Sales (  P_f_doc_no     In NUMBER   Default Null
 ( Select 
      From Ias_Bill_Mst Mb
     Where nvl(Mb.bill_post,0)=0
             And Exists (Select 1 From S_Brn_Usr_Priv
                          Where U_Id = V_User_no                            
       For Update NoWait)
      Begin
          Delete From Ias_Post_Mst Where Doc_Ser=M_cv.doc_ser;
      Exception When Others Then
      End;
    If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_type,M_cv.doc_ser    )    ,0)  = 0 Then -- (Begin Chk Exist) --
       Begin
         Select R_a_code ,Ac_Dtl_Typ,Ac_Code_Dtl 
           From Sales_Man 
          Where Reprs_Code=M_cv.rep_code;
         Exception 
       End;
  Begin
      Select 1
        From other_charges
       Where bill_type=M_cv.bill_type
         and sc_no In (Select sc_no From Sales_Charges Where nvl(posted_to_sales,0)=1 )  
   Exception 
     (Select Round(Sum(nvl(i_qty,0) * nvl(i_price,0)),V_No_Of_Dcml_Ar)                                           bamt,
            From Ias_Bill_Dtl
           Where Ias_Bill_Dtl.bill_ser=M_cv.doc_ser
            Group  By (Case When V_Cc_Avail=3 Or V_Cc_Post=1 Then Decode(V_Ar_Cs_Type,2,Ias_Bill_Dtl.Cc_Code,Null) End),
             Order By (Case When V_Cc_Avail=3 Or V_Cc_Post=1 Then Decode(V_Ar_Cs_Type,2,Ias_Bill_Dtl.Cc_Code,Null) End))
                    Begin
                        Select Decode(nvl(D.due_period,0),0,D.bank_ac,D.acode_rec_letter),D.comm_per,comm_ac,D.comm_calc_type,Decode(nvl(D.due_period,0),0,D.bank_no,null),D.cr_card_type,M.Vat_Per,D.A_Cy_Max_Comm
                          From Credit_card_types D,Ias_Cr_Card_Types M 
                         Where M.Cr_Card_Type=D.Cr_Card_Type
                      Exception 
                          Raise_application_error(-20656,'Error When Select Credit_card_types  = '||SqlErrm) ;
                    End;
                         Begin
                            Select Decode(nvl(D.due_period,0),0,D.bank_ac,D.acode_rec_letter),D.comm_per,comm_ac,D.comm_calc_type,Decode(nvl(D.due_period,0),0,D.bank_no,null),D.cr_card_type,M.Vat_Per
                              From Credit_card_types D,Ias_Cr_Card_Types M 
                             Where M.Cr_Card_Type=D.Cr_Card_Type
                         Exception 
                             Raise_application_error(-20656,'Error When Select Credit_card_types (scnd) = '||SqlErrm) ;
                         End;
                         Begin
                             Select Decode(nvl(D.due_period,0),0,D.bank_ac,D.acode_rec_letter),D.comm_per,comm_ac,D.comm_calc_type,Decode(nvl(D.due_period,0),0,D.bank_no,null),D.cr_card_type,M.Vat_Per
                              From Credit_card_types D,Ias_Cr_Card_Types M 
                             Where M.Cr_Card_Type=D.Cr_Card_Type
                            Exception 
                            Raise_application_error(-20656,'Error When Select Credit_card_types (thrd)  = '||SqlErrm) ;
                         End;
          For Cpn_Cv In ( Select Mc.A_Code_Intrfc,Mc.Cpn_Dsc,
               From Ias_Cpn_Typ_Mst Mc ,Ias_Bill_Cpn Dc
                           Where Mc.Cpn_Typ_No=Dc.Cpn_Typ_No
                           Group By Mc.A_Code_Intrfc,Mc.Cpn_Dsc,Dc.CC_CODE,Dc.PJ_NO,Dc.ACTV_NO
                           Order By Mc.A_Code_Intrfc) Loop
         For Ass_Cv In ( Select Mc.Ass_No,
                           From Ias_Assctn_Accnt Mc ,Ias_Assctn_Trns Dc
                          Where Mc.Ass_No    = Dc.Ass_No
                          Group By Mc.Ass_No,
                          Order By Mc.Ass_No) Loop
      (Select Round(Sum(nvl(i_qty,0) * nvl(i_price,0)),V_No_Of_Dcml_Ar)     bamt,
    From Ias_bill_Dtl,Ias_Post_Details Pst 
   Where Pst.Code_No=Decode(V_Item_Posting_Flag,1,Ias_bill_Dtl.i_code,2,Ias_bill_Dtl.w_code)
   Group By Pst.Post_Code,
   Order By Pst.Post_Code,Decode(V_Ar_Cs_Type,2,Ias_Bill_Dtl.cc_code,Null) )
 ( Select b.sc_type   sc_type,
     From other_charges_items a,sales_charges b,Ias_Post_Details c 
    Where a.sc_no=b.sc_no
      Begin
          Select nvl(sum(Decode(oci.a_cy,v_local_cur,0,nvl(amt,0))),0),nvl(sum(amt),0)
            From other_charges_items oci,Ias_Post_Details Pst 
           where oci.bill_type=M_cv.bill_type
             and oci.sc_no In (Select Sc_no From Sales_Charges Where nvl(posted_to_sales,0)=1);
       Exception 
      End; 
       Begin
         Select Pur_Type InTo V_Pur_Type From Ias_Outgoing_Mst Where Out_Ser=Nvl(D_cv_g.Doc_Ser_Ref,0) And RowNum<=1;
       Exception WHen Others Then
       End;      
              Begin
                Select 1 
                  From Ias_bill_Dtl,Ias_Post_Details Pst
                 Where Pst.Code_No=Decode(V_Item_Posting_Flag,1,Ias_bill_Dtl.i_code,2,Ias_bill_Dtl.w_code)
                Exception 
                End;
       Select SUM(NVL(free_qty,0)*nvl(i_price,0)) Into v_free_amt From ias_bill_dtl where Bill_ser=M_cv.doc_ser;
       Select count(1) Into v_amt From ias_bill_dtl where Bill_ser=M_cv.doc_ser;
 ( Select b.sc_type                   sc_type,
   From other_charges a,sales_charges b,ias_bill_dtl c
  Where a.sc_no=b.sc_no
    group by b.sc_type ,
 ( Select b.sc_type                   sc_type,
   From other_charges a,sales_charges b
  Where a.sc_no=b.sc_no
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
    Begin
     Update Ias_Bill_Mst Set bill_post=1,
      Where bill_ser=M_cv.doc_ser;
    Exception When Others Then
      raise_application_error(-20659,'Error When Update Post Flag ='||SqlErrm) ;
    End;
         raise_application_error(-20660,'Error Not Update Post Flag ='||SqlErrm) ;
    --## Update Interm tables.
Procedure Post_Sales_Add_Disc   (  P_f_doc_no      In NUMBER   Default Null
 ( Select 
      From IAS_BILL_MST_ADD_DISC Mb
     Where nvl(Mb.doc_post,0)=0
             And Exists (Select 1 From S_Brn_Usr_Priv
                          Where U_Id = V_User_no                            
       For Update NoWait)
        If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_type,M_cv.doc_ser    )    ,0)  = 0 Then -- (Begin Chk Exist) --
             (Select 
                    From Ias_Bill_Dtl_Add_Disc D,Ias_Post_Details C 
                   Where C.Code_No=Decode(V_Item_Posting_Flag,1,D.I_Code,2,D.W_Code)
                   Group By Decode(V_Post_Add_Disc_Itm_Type,1,C.Post_Code,Null),
                   Order By Decode(V_Post_Add_Disc_Itm_Type,1,C.Post_Code,Null),
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
    Begin
     Update IAS_BILL_MST_ADD_DISC Set doc_post=1,
      Where doc_ser=M_cv.doc_ser;
    Exception When Others Then
      raise_application_error(-20659,'Error When Update Post Flag ='||SqlErrm) ;
    End;
         Raise_application_error(-20660,'Error Not Update Post Flag ='||SqlErrm) ;
    --## Update Interm tables.
 ( Select 
            From Ias_rt_bill_Mst Mb
         Where nvl(Mb.rt_bill_post,0)=0
             And Exists (Select 1 From S_Brn_Usr_Priv
                          Where U_Id = V_User_no                            
             For Update NoWait)
          Begin
              Delete From Ias_Post_Mst Where Doc_Ser=M_cv.doc_ser;
          Exception When Others Then
          End;
        If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_type,M_cv.doc_ser    )    ,0)  = 0 Then -- (Begin Chk Exist) --
  Begin
      Select 1
        From other_charges
       Where bill_type=M_cv.rt_bill_type
         and sc_no In (Select sc_no From Sales_Charges Where nvl(posted_to_sales,0)=1 )  
   Exception 
     (Select Sum(nvl(i_qty,0) * nvl(i_price,0))                                         bamt,
            From Ias_Rt_Bill_Dtl
           Where Ias_Rt_Bill_Dtl.rt_bill_ser=M_cv.doc_ser
           Group By  (Case When V_Cc_Avail=3 Or V_Cc_Post=1 Then Decode(V_Ar_Cs_Type,2,Ias_Rt_Bill_Dtl.Cc_Code,Null) End),
           Order By (Case When V_Cc_Avail=3 Or
                    Begin
                        Select Decode(nvl(D.due_period,0),0,D.bank_ac,D.acode_rec_letter),D.comm_per,comm_ac,D.comm_calc_type,Decode(nvl(D.due_period,0),0,D.bank_no,null),D.cr_card_type,M.Vat_Per,D.A_Cy_Max_Comm
                          From Credit_card_types D,Ias_Cr_Card_Types M 
                         Where M.Cr_Card_Type=D.Cr_Card_Type
                      Exception 
                          Raise_application_error(-20656,'Error When Select Credit_card_types  = '||SqlErrm) ;
                    End;
                         Begin
                            Select Decode(nvl(D.due_period,0),0,D.bank_ac,D.acode_rec_letter),D.comm_per,comm_ac,D.comm_calc_type,Decode(nvl(D.due_period,0),0,D.bank_no,null),D.cr_card_type,M.Vat_Per
                              From Credit_card_types D,Ias_Cr_Card_Types M 
                             Where M.Cr_Card_Type=D.Cr_Card_Type
                         Exception 
                             Raise_application_error(-20656,'Error When Select Credit_card_types (scnd) = '||SqlErrm) ;
                         End;
                         Begin
                             Select Decode(nvl(D.due_period,0),0,D.bank_ac,D.acode_rec_letter),D.comm_per,comm_ac,D.comm_calc_type,Decode(nvl(D.due_period,0),0,D.bank_no,null),D.cr_card_type,M.Vat_Per
                              From Credit_card_types D,Ias_Cr_Card_Types M 
                             Where M.Cr_Card_Type=D.Cr_Card_Type
                            Exception 
                            Raise_application_error(-20656,'Error When Select Credit_card_types (thrd)  = '||SqlErrm) ;
                         End;
   Begin
     Select R_a_code ,Ac_Dtl_Typ,Ac_Code_Dtl 
       From Sales_Man 
      Where Reprs_Code=M_cv.rep_code;
     Exception 
   End;
 (Select Sum(nvl(i_qty,0) * nvl(i_price,0))                                           bamt,
       From Ias_rt_bill_Dtl Rbd,Ias_Post_Details Pst
      Where Pst.Code_No=Decode(V_Item_Posting_Flag,1,Rbd.i_code,2,Rbd.w_code)
      Group By Pst.Post_Code,
      Order by Pst.Post_Code)
 ( Select b.sc_type    sc_type,
     From other_charges_items a,sales_charges b, Ias_Post_Details c
    Where a.sc_no=b.sc_no
          Begin
              Select nvl(Sum(Decode(oci.a_cy,v_local_cur,0,nvl(amt,0))),0),nvl(sum(amt),0)
                From other_charges_items oci,Ias_Post_Details Pst
               where oci.bill_type=M_cv.rt_bill_type
                 and oci.sc_no In (Select Sc_no From Sales_Charges Where nvl(posted_to_sales,0)=1);
           Exception 
          End; 
            Begin
                Select 1 
                  From Ias_Rt_bill_Dtl,Ias_Post_Details Pst
                 Where Pst.Code_No=Decode(V_Item_Posting_Flag,1,Ias_Rt_bill_Dtl.i_code,2,Ias_Rt_bill_Dtl.w_code)
            Exception 
            End;
       Select count(1) Into v_amt From ias_rt_bill_dtl where rt_Bill_ser=M_cv.doc_ser;
  (Select b.sc_type               sc_type,
   From other_charges a,sales_charges b,ias_rt_bill_dtl c
  Where a.sc_no=b.sc_no
    group by b.sc_type ,
 ( Select sales_charges.sc_type               sc_type,
   From other_charges,sales_charges
  Where other_charges.sc_no=sales_charges.sc_no
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
    Begin
     Update Ias_Rt_Bill_Mst Set rt_bill_post = 1,
      Where rt_bill_ser=M_cv.doc_ser;
    Exception When Others Then
    End;
       raise_application_error(-20665,'Error Not Update Post Flag ='||SqlErrm) ;
   --## Update Interm tables.
Procedure Post_out_bills( P_f_doc_no      In NUMBER   Default Null
 ( Select 
 From Master_out_bills Mob  
Where nvl(Mob.out_post,0)=0
And Exists (Select 1 From S_Brn_Usr_Priv
            Where U_Id = V_User_no                            
,0)  = 0 Then -- (Begin Chk Exist) --
  --## Insert into Ias_Post_Mst
     (Select sum(nvl(i_qty,0) * nvl(i_price,0))     
From detail_out_bills,Ias_Post_Details 
Where Ias_Post_Details.Code_No =Decode(V_Item_Posting_Flag,1,detail_out_bills.i_code,2,detail_out_bills.w_code)
   Group By Ias_Post_Details.Post_Code,
   Order By Ias_Post_Details.Post_Code)
          Begin
              Select 1
                From other_charges
               Where bill_type=1
                 and sc_no In (Select sc_no From Sales_Charges Where nvl(posted_to_sales,0)=1 )  
           Exception 
          Begin
          Select nvl(sum(Decode(oci.a_cy,v_local_cur,0,nvl(oci.Unit_Amt,0))*Nvl(Od.I_Qty,0)),0),nvl(sum(Nvl(oci.Unit_Amt,0)*Nvl(Od.I_Qty,0)),0)
            From other_charges_items oci,Ias_Post_Details Pst,Detail_Out_Bills Od 
           where oci.bill_type=1
     and oci.sc_no In (Select Sc_no From Sales_Charges Where nvl(posted_to_sales,0)=1);
           Exception 
          End;
     --## Update Interm tables.
--## Update Post flag
  If P_Post_Type = 1 Then -- From Screen Post
 Update Master_out_bills Set Out_Post  = 1,
  Where Out_ser=M_cv.doc_ser;
Exception When Others Then
   Update Ias_Post_Mst Set Doc_Post=1
    Where Doc_ser =M_cv.doc_ser;
Exception 
   Update Ias_Post_Dtl Set Doc_Post=1
    Where Doc_ser =M_cv.doc_ser;
Exception 
Procedure Post_Ret_rt_bills( P_f_doc_no      In NUMBER   Default Null
 ( Select 
 From Ias_Ret_Bill_Mst Mob
Where nvl(Mob.ret_post,0)=0
And Exists (Select 1 From S_Brn_Usr_Priv
            Where U_Id = V_User_no                            
,0)  = 0 Then -- (Begin Chk Exist) --
   --## Insert into Ias_Post_Mst
 (Select sum(nvl(i_qty,0) * nvl(i_price,0))     
    From Ias_Ret_Bill_Dtl,Ias_Post_Details 
   Where Ias_Post_Details.Code_No =Decode(V_Item_Posting_Flag,1,Ias_Ret_Bill_Dtl.i_code,2,Ias_Ret_Bill_Dtl.w_code)
   Group By Ias_Post_Details.Post_Code ,
   Order By Ias_Post
          Begin
              Select 1
                From other_charges
               Where bill_type=3
                 and sc_no In (Select sc_no From Sales_Charges Where Nvl(Allow_Return,0)=1 And nvl(posted_to_sales,0)=1 )  
           Exception 
          Begin
          Select nvl(sum(Decode(oci.a_cy,v_local_cur,0,nvl(oci.Unit_Amt,0))*Nvl(Rd.I_Qty,0)),0),nvl(sum(Nvl(oci.Unit_Amt,0)*Nvl(Rd.I_Qty,0)),0)
            From other_charges_items oci,Ias_Post_Details Pst,Ias_Ret_Bill_Dtl Rd 
           where oci.bill_type=3
             and oci.sc_no In (Select Sc_no From Sales_Charges Where Nvl(Allow_Return,0)=1 And nvl(posted_to_sales,0)=1);
           Exception 
          End;         
   --## Update Interm tables.
--## Update Post flag
  If P_Post_Type = 1 Then -- From Screen Post
 Update IAS_RET_BILL_MST Set Ret_Post  = 1,
  Where ret_ser=M_cv.doc_ser;
Exception 
   Update Ias_Post_Mst Set Doc_Post=1
    Where Doc_ser =M_cv.doc_ser;
Exception 
   Update Ias_Post_Dtl Set Doc_Post=1
    Where Doc_ser =M_cv.doc_ser;
Exception 
Procedure Post_Sales_Due_Cr_Card   (  P_f_doc_no      In NUMBER   Default Null
 ( Select     72                   doc_type 
      From IAS_DUE_CREDIT_CARD Mb
     Where nvl(Mb.doc_post,0)=0
       and Exists (Select 1 From S_Brn_Usr_Priv
                    Where U_Id = V_User_no                            
       For Update NoWait)
    If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_type,M_cv.doc_ser    )    ,0)  = 0 Then -- (Begin Chk Exist) --
        Begin
            Select Acode_Rec_Letter,Comm_Per,bank_ac,bank_no InTo V_Ac_Code,V_Comm_Per,v_bank_ac,v_bank_no 
            From Credit_Card_Types
             Where Cr_Card_No=M_Cv.Cr_Card_No
        Exception When Others Then null;
        End;   
            Begin
              Select Cc_Code
              From Ias_Account_Cc
               Where A_Code = M_cv.A_Code ;
            Exception
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
    Begin
      Update Ias_Due_Credit_Card Set doc_post=1, Post_u_id = V_User_no,Post_Date = SysDate 
       Where doc_ser=M_cv.doc_ser;
    Exception When Others Then
      raise_application_error(-20663,'Error When Update Post Flag ='||SqlErrm) ;
    End;
         Raise_application_error(-20664,'Error Not Update Post Flag ='||SqlErrm) ;
    --## Update Interm tables.
PROCEDURE Post_Sales_Cpn ( P_Post_Type      In NUMBER   Default 0
                    BEGIN
                       For M_Cv In (Select     123 Doc_Type, 
                         From Ias_Sal_Cpn_Mst Mb  
                         Where nvl(Mb.Doc_Pst,0)= 0
                               and Exists (Select 1 from S_BRN_USR_PRIV Prv 
                                            Where Prv.U_Id = V_User_no
                               For Update NoWait)
              Begin
                  Delete From Ias_Post_Mst Where Doc_Ser=M_cv.doc_ser;
              Exception When Others Then
              End;
         If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_type,M_cv.doc_ser    )    ,0)  = 0 Then -- (Begin Chk Exist) --
              For D_Cv In ( Select Mc.A_Code_Intrfc,
                              From Ias_Cpn_Typ_Mst Mc ,Ias_Sal_Cpn_Dtl Dc
                             Where Mc.Cpn_Typ_No=Dc.Cpn_Typ_No
                             Group By Mc.A_Code_Intrfc,Mc.A_Code_Dscnt
                             Order By Mc.A_Code_Intrfc) Loop
      --## Update Post flag
      If P_Post_Type = 1 Then -- From Posting Screen
        Begin
         Update Ias_Sal_Cpn_Mst Set Doc_Pst=1,Post_u_id = V_User_no,Post_Date = SysDate
          Where Doc_ser=M_cv.doc_ser;
        Exception When Others Then
          raise_application_error(-20659,'Error When Update Post Flag ='||SqlErrm) ;
        End;
             raise_application_error(-20660,'Error Not Update Post Flag ='||SqlErrm) ;
    --## Update Interm tables.
Procedure Post_Sales_Cmpns_Qty   (  P_f_doc_no      In NUMBER   Default Null
 ( Select 
      From Ias_Cmpns_Qty_Clc_Mst Mb
     Where nvl(Mb.doc_post,0)=0
             And Exists (Select 1 From S_Brn_Usr_Priv
                          Where U_Id = V_User_no                            
       For Update NoWait)
   If Nvl(IAS_Posting_Pkg.Chk_Exist_Pst_Doc(M_cv.doc_type,M_cv.doc_ser    )    ,0)  = 0 Then -- (Begin Chk Exist) --
             (Select  sum(nvl(Cmpns_qty,0) * nvl(stk_cost,0))     free_stk_cost_gcode, 
                 From Ias_Cmpns_Qty_Clc_Dtl D,Ias_Post_Details C 
                Where C.Code_No=Decode(V_Item_Posting_Flag,1,D.i_code,2,D.w_code)
             Group By C.Post_Code ,
             Order By Decode(V_Ar_Cs_Type,2,D.Cc_Code,Null))
                  Begin
                       Select Cst_Cmpns_Si_A_Code Into v_a_code From IAS_CONN_ACC_INV_BY_GL
                        Where POST_CODE=D_cv.Post_Code
                  Exception When Others Then
                  End;
--## Update Post flag
  If P_Post_Type = 1 Then -- From Posting Screen
    Begin
     Update Ias_Cmpns_Qty_Clc_Mst Set doc_post=1,
      Where doc_srl=M_cv.doc_ser;
    Exception When Others Then
      raise_application_error(-20659,'Error When Update Post Flag ='||SqlErrm) ;
    End;
         Raise_application_error(-20660,'Error Not Update Post Flag ='||SqlErrm) ;
    --## Update Interm tables.
CREATE OR REPLACE PACKAGE Ias_Qt_Prm_Pkg AS
PROCEDURE Ias_Get_Qt_Prm  (   P_Date                    In  Date,
   PROCEDURE IAS_Calc_Quot_Prm_Prc ( P_Date          In Date , 
   PROCEDURE IAS_Calc_Quot_Prm_Save_Prc ( P_Doc_Srl       In Number,
   FUNCTION  Ias_Get_Qt_Prm_Type ( P_Qt_Ser In  Number) RETURN Number;
   FUNCTION  Ias_Get_Qt_Prm_Method ( P_Qt_Ser In  Number) RETURN Number;                           
   FUNCTION  Ias_Get_Qt_Prm_Fqty ( P_Qt_Ser In  Number , P_Qt_Rcrd_No In  Number,P_Icode In Varchar2,P_Itm_Unt In Varchar2) RETURN Number ;
   FUNCTION  Chk_Qt_Prm_Disc ( P_Qt_Ser In  Number ) RETURN Number;
   FUNCTION  Chk_Qt_Prm_Free_Qty ( P_Qt_Ser In  Number ) RETURN Number;
   FUNCTION GET_QUOT_PRICE_FNC (P_BARCODE   IN   IAS_ITM_UNT_BARCODE.BARCODE%TYPE,P_NO_OF_DCML IN NUMBER DEFAULT 1) RETURN NUMBER ;
   PROCEDURE IAS_Clc_Qtn_Prm_Grp_Prc ( P_Date          In Date , 
   PROCEDURE IAS_Clc_Qtn_Prm_Grp_Save_Prc ( P_Doc_Srl       In Number,
 FUNCTION Get_Qt_Price_Fnc ( P_Icode         In Varchar2,               -- ITEM_CODE
PROCEDURE  Get_Prm_Grp_Icode ( P_Prm_Grp_No        In Ias_Qut_Prm_Grp_Mst.Prm_Grp_No%Type,
CREATE OR REPLACE PACKAGE  BODY Ias_Qt_Prm_Pkg AS
PROCEDURE Ias_Get_Qt_Prm  (   P_Date                    In  Date,
    BEGIN
     Select Ias_Qut_Prm_Mst.Quot_No,
      From Ias_Qut_Prm_Mst,Ias_Qut_Prm_Dtl
            Where Ias_Qut_Prm_Mst.Quot_Ser = Ias_Qut_Prm_Dtl.Quot_Ser
                              When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=2 And Ias_Qut_Prm_Dtl.Whg_Code =(Select Whg_Code From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                              When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=3 And Ias_Qut_Prm_Dtl.Cntry_No =(Select Cntry_No From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                              When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=4 And Ias_Qut_Prm_Dtl.Prov_No  =(Select Prov_No  From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                              When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=5 And Ias_Qut_Prm_Dtl.City_No  =(Select City_No  From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                              When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=6 And Ias_Qut_Prm_Dtl.R_Code   =(Select R_Code   From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=1 And Ias_Qut_Prm_Dtl.G_Code=(Select G_Code From Ias_Itm_mst Where I_Code=P_Icode And RowNum<=1) Then 1 
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=2 And Ias_Qut_Prm_Dtl.Mng_Code=(Select Nvl(Mng_Code,'0') From Ias_Itm_mst Where I_Code=P_Icode And RowNum<=1) Then 1
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=3 And Ias_Qut_Prm_Dtl.Subg_Code=(Select Nvl(Subg_Code,'0') From Ias_Itm_mst Where I_Code=P_Icode And RowNum<=1) Then 1
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=4 And Ias_Qut_Prm_Dtl.Assistant_No=(Select Nvl(Assistant_No,'0') From Ias_Itm_mst Where I_Code=P_Icode And RowNum<=1) Then 1
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=5 And Ias_Qut_Prm_Dtl.Detail_No=(Select Nvl(Detail_No,'0') From Ias_Itm_mst Where I_Code=P_Icode And RowNum<=1) Then 1
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=6 And Ias_Qut_Prm_Dtl.Group_No=(Select Nvl(Group_No,0) From Ias_Itm_mst Where I_Code=P_Icode And RowNum<=1) Then 1
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=7 And Ias_Qut_Prm_Dtl.Item_Type=(Select Nvl(Item_Type,0) From Ias_Itm_mst Where I_Code=P_Icode And RowNum<=1) Then 1
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=8 And Ias_Qut_Prm_Dtl.Grp_Class_Code=(Select nvl(Grp_Class_Code,'0') From Ias_Itm_mst Where I_Code=P_Icode And RowNum<=1) Then 1
                             When Ias_Qut_Prm_Mst.Qt_Prm_Itm_Type=9 And Exists(Select 1 From Ias_Qut_Prm_Grp_Dtl Where Prm_Grp_No=Ias_Qut_Prm_Dtl.Prm_Grp_No And I_Code=P_Icode And RowNum<=1) Then 1
             BEGIN
               Select Nvl(Sum(Nvl(I_Qty,0)+Nvl(
Free_Qty,0)),0) InTo V_Qt_Qty_Bill From Ias_Bill_Dtl Where Qt_Prm_Ser=P_Qt_Ser And Qt_Prm_Rcrd_No=P_Qt_Rcrd_No;
             EXCEPTION WHEN OTHERS THEN V_Qt_Qty_Bill:=0;       
             END;    
                    Select  TRUNC(SUM(Case When Ias_Qut_Prm_Dtl.T_Qty<=P_Iqty And V_Calc_All_Slides=1 Then TRUNC((T_Qty-F_Qty+1)/Decode(V_By_Comp_Qty,1,Comp_Qty,(T_Qty-F_Qty+1)))*Free_Qty
                      From Ias_Qut_Prm_Mst,Ias_Qut_Prm_Dtl
                     Where Ias_Qut_Prm_Mst.Quot_Ser = Ias_Qut_Prm_Dtl.Quot_Ser
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=2 And Ias_Qut_Prm_Dtl.Whg_Code =(Select Whg_Code From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=3 And Ias_Qut_Prm_Dtl.Cntry_No =(Select Cntry_No From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=4 And Ias_Qut_Prm_Dtl.Prov_No  =(Select Prov_No  From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=5 And Ias_Qut_Prm_Dtl.City_No  =(Select City_No  From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=6 And Ias_Qut_Prm_Dtl.R_Code   =(Select R_Code   From Warehouse_Details Where W_Code=
                   Select SUM(Case When Disc_type=1 And Ias_Qut_Prm_Dtl.T_Qty<=P_Iqty Then (((T_Qty-F_Qty+1)*(Ias_Qut_Prm_Dtl.Disc_Amt_Per/100))/P_Iqty)
                      From Ias_Qut_Prm_Mst,Ias_Qut_Prm_Dtl
                     Where Ias_Qut_Prm_Mst.Quot_Ser = Ias_Qut_Prm_Dtl.Quot_Ser
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=2 And Ias_Qut_Prm_Dtl.Whg_Code =(Select Whg_Code From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=3 And Ias_Qut_Prm_Dtl.Cntry_No =(Select Cntry_No From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=4 And Ias_Qut_Prm_Dtl.Prov_No  =(Select Prov_No  From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=5 And Ias_Qut_Prm_Dtl.City_No  =(Select City_No  From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                                  When Ias_Qut_Prm_Mst.Qt_Prm_Wc_Type=6 And Ias_Qut_Prm_Dtl.R_Code   =(Select R_Code   From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                  Begin
                    Select Sum(Nvl(I_Qty,0)) InTo V_Iqty_Cmltv From Ias_Bill_Dtl_Itm_Tmp Where I_Code=P_Icode And Doc_Seq <= P_Doc_Seq_Tmp ;
                  Exception WHen Others Then V_Iqty_Cmltv := 0; 
                  End;
                    Begin
                      Select Nvl(Ias_Qut_Prm_Dtl.I_Price,0)
                      From Ias_Qut_Prm_Mst,Ias_Qut_Prm_Dtl
                     Where Ias_Qut_Prm_Mst.Quot_Ser = Ias_Qut_Prm_Dtl.Quot_Ser
                    Exception WHen Others Then P_Price := 0; 
                    End;    
                  Begin
                      Select Max(Nvl(Ias_Qut_Prm_Dtl.T_Qty,0))
                      From Ias_Qut_Prm_Mst,Ias_Qut_Prm_Dtl
                     Where Ias_Qut_Prm_Mst.Quot_Ser = Ias_Qut_Prm_Dtl.Quot_Ser
                  Exception WHen Others Then V_Max_Qty := 0; 
                  End;
                  Begin
                    Select Sum(Nvl(D.P_Qty,0)/nvl(V_P_Size_Qt,1))
                      From Ias_Bill_Mst M,Ias_Bill_Dtl D,Warehouse_Details W 
                     Where M.Bill_Ser = D.Bill_Ser
                  Exception WHen Others Then V_Qty := 0; 
                  End;
                  Begin
                      Select Sum(Nvl(D.I_Qty,0)*Nvl(D.P_Size,0)/nvl(V_P_Size_Qt,1)) Into V_Iqty From Ias_Bill_Dtl_Itm_Tmp D,Warehouse_Details W 
                       Where D.W_code = W.W_code
                  Exception w
             Begin
               Select Decode(D.Disc_type,1,d.Disc_Amt_Per),
                  From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D,Ias_Itm_Mst Mi,Ias_Itm_Dtl Di
                 Where m.Quot_Ser = d.Quot_Ser
                             When P_Qt_Prm_Itm_Type=9 And Exists(Select 1 From Ias_Qut_Prm_Grp_Dtl Where Prm_Grp_No=D.Prm_Grp_No And I_Code=P_Icode And RowNum<=1) Then 1
                              When M.Qt_Prm_Wc_Type=2 And D.Whg_Code =(Select Whg_Code From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                              When M.Qt_Prm_Wc_Type=3 And D.Cntry_No =(Select Cntry_No From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                              When M.Qt_Prm_Wc_Type=4 And D.Prov_No  =(Select Prov_No  From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                              When M.Qt_Prm_Wc_Type=5 And D.City_No  =(Select City_No  From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                              When M.Qt_Prm_Wc_Type=6 And D.R_Code   =(Select R_Code   From Warehouse_Details Where W_Code=P_Wcode And RowNum<=1) Then 1
                EXCEPTION WHEN OTHERS THEN               
                END;
    EXCEPTION WHEN OTHERS THEN Null;       
    PROCEDURE IAS_Calc_Quot_Prm_Prc ( P_Date In Date , P_Bill_Doc_Type IN NUMBER , P_No_Of_Dcml In Number) IS
       Cursor Qt_Prm Is Select Distinct M.Quot_No,
                                   From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D,IAS_BILL_DTL_ITM_TMP BD,Ias_Itm_Mst I
                                  Where M.Quot_Ser = D.Quot_Ser
                                              When M.Qt_Prm_Method=9 And Exists(Select 1 From Ias_Qut_Prm_Grp_Dtl Where Prm_Grp_No=D.Prm_Grp_No And I_Code=BD.I_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=2 And D.Whg_Code =(Select Whg_Code From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=3 And D.Cntry_No =(Select Cntry_No From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=4 And D.Prov_No  =(Select Prov_No  From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=5 And D.City_No  =(Select City_No  From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=6 And D.R_Code   =(Select R_Code   From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                    Group By M.Quot_No,
  Begin
      Update IAS_BILL_DTL_ITM_TMP D Set Dis_per=0,Dis_Amt_Dtl=0,Chng_Flg=1
       Where --Bill_Ser = P_Doc_Srl
         And Exists(Select 1 From Ias_Qut_Prm_Mst Where Quot_Ser=D.Qt_Prm_Ser And Qt_Prm_Type In (4,5) And RowNum<=1);
  Exception when others then 
      Cursor C_Bill Is Select D.I_Code,D.I_Qty,D.I_Price,D.Rcrd_No,D.Doc_Seq From IAS_BILL_DTL_ITM_TMP D,Ias_Itm_Mst M ,Ias_Qut_Prm_Dtl Q,Ias_Qut_Prm_Grp_Dtl G
                        Where D.I_Code     = M.I_Code 
                          Order By  Decode(I.Qt_Prm_Type,4,I_Price,I_Price*-1) Asc,D.Rcrd_No;                            
    Begin
          Update IAS_BILL_DTL_ITM_TMP Set Dis_Amt_Dtl  = (Nvl(J.I_Price,0)/J.I_Qty)*Nvl(V_Qt_Iqty,0),
          Where --Bill_Ser     = P_Doc_Srl
           Update IAS_BILL_DTL_ITM_TMP Set Dis_Amt_Dtl    = Nvl(J.I_Price,0),
            Where --Bill_Ser     = P_Doc_Srl
    ENd;
 Exception when others then 
PROCEDURE IAS_Calc_Quot_Prm_Save_Prc ( P_Doc_Srl In Number , P_Date In Date , P_Bill_Doc_Type IN NUMBER , P_No_Of_Dcml In Number) IS
       Cursor Qt_Prm Is Select Distinct M.Quot_No,
                                   From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D,Ias_Bill_Dtl BD,Ias_Itm_Mst I
                                  Where M.Quot_Ser = D.Quot_Ser
                                              When M.Qt_Prm_Method=9 And Exists(Select 1 From Ias_Qut_Prm_Grp_Dtl Where Prm_Grp_No=D.Prm_Grp_No And I_Code=BD.I_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=2 And D.Whg_Code =(Select Whg_Code From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=3 And D.Cntry_No =(Select Cntry_No From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=4 And D.Prov_No  =(Select Prov_No  From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=5 And D.City_No  =(Select City_No  From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=6 And D.R_Code   =(Select R_Code   From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                    Group By M.Quot_No,
  Begin
      Update Ias_Bill_Dtl D Set Dis_per=0,Dis_Amt_Dtl=0
       Where Bill_Ser = P_Doc_Srl
         And Exists(Select 1 From Ias_Qut_Prm_Mst Where Quot_Ser=D.Qt_Prm_Ser And Qt_Prm_Type In (4,5) And RowNum<=1);
  Exception when others then 
      Cursor C_Bill Is Select D.
I_Code,D.I_Qty,D.I_Price,D.Rcrd_No,D.Doc_Sequence From Ias_Bill_Dtl D,Ias_Itm_Mst M ,Ias_Qut_Prm_Dtl Q
                        Where D.Bill_Ser = P_Doc_Srl                          
                          Order By  Decode(I.Qt_Prm_Type,4,I_Price,I_Price*-1) Asc,D.Rcrd_No;                            
    Begin
          Update Ias_Bill_Dtl Set Dis_Amt_Dtl    = (Nvl(J.I_Price,0)/J.I_Qty)*Nvl(V_Qt_Iqty,0),
          Where Bill_Ser     = P_Doc_Srl
           Update Ias_Bill_Dtl Set Dis_Amt_Dtl    = Nvl(J.I_Price,0),
            Where Bill_Ser     = P_Doc_Srl
    ENd;
  BEGIN
    Update Ias_Bill_Mst Set Disc_Amt_Dtl=(Select Round(Nvl(Sum(I_Qty*Dis_Amt_Dtl),0),P_No_Of_Dcml)  
                                           From Ias_Bill_Dtl
                                          Where Bill_Ser=P_Doc_Srl),
                               Disc_Amt= Round(Nvl((Select Round(Nvl(Sum(I_Qty*Dis_Amt_Dtl),0),P_No_Of_Dcml)  
                                           From Ias_Bill_Dtl
                                          Where Bill_Ser=P_Doc_Srl),0)+Nvl(Disc_Amt_Dtl,0),P_No_Of_Dcml)
       Where Bill_Ser = P_Doc_Srl;
  Exception when others then 
 Exception when others then 
    FUNCTION  Ias_Get_Qt_Prm_Type ( P_Qt_Ser In  Number) RETURN Number Is
    Begin
      Select Qt_Prm_Type
        From ias_qut_prm_mst
       Where quot_ser = P_qt_ser
     Exception When Others Then
    FUNCTION  Ias_Get_Qt_Prm_Method ( P_Qt_Ser In  Number) RETURN Number Is
    Begin
      Select Qt_Prm_Method
        From ias_qut_prm_mst
       Where quot_ser = P_qt_ser
     Exception When Others Then
     FUNCTION  Ias_Get_Qt_Prm_Fqty ( P_Qt_Ser In  Number , P_Qt_Rcrd_No In  Number,P_Icode In Varchar2,P_Itm_Unt In Varchar2) RETURN Number Is
        Begin
              Select Free_Qty
                From ias_qut_prm_dtl
               Where quot_ser = P_qt_ser
                  Select Free_Qty
                From ias_qut_prm_sub_dtl
               Where quot_ser = P_qt_ser
         Exception When Others Then
   FUNCTION  Chk_Qt_Prm_Disc ( P_Qt_Ser In  Number ) RETURN Number IS
   Begin
        Begin  
          Select Disc_Amt_Per
            From Ias_Qut_Prm_Dtl
           Where Quot_Ser = P_Qt_Ser
         Exception When Others Then  
         End;
           Begin  
              Select 1
                From Ias_Qut_Prm_Mst
               Where Quot_Ser = P_Qt_Ser
             Exception When Others Then  
             End;
    FUNCTION  Chk_Qt_Prm_Free_Qty ( P_Qt_Ser In  Number ) RETURN Number IS
   Begin
          Select Free_Qty
            From ias_qut_prm_dtl
           Where quot_ser = P_qt_ser
             Select Free_Qty
            From ias_qut_prm_sub_dtl
           Where quot_ser = P_qt_ser
     Exception When Others Then
FUNCTION GET_QUOT_PRICE_FNC (P_BARCODE   IN   IAS_ITM_UNT_BARCODE.BARCODE%TYPE,P_NO_OF_DCML IN NUMBER DEFAULT 1)
  BEGIN
       BEGIN
        SELECT I_CODE,
        FROM   IAS_ITM_UNT_BARCODE
        WHERE  BARCODE = P_BARCODE AND ROWNUM <= 1;
           EXCEPTION
       END;
      BEGIN
         SELECT I_CODE
         FROM   IAS_ITM_DTL
         WHERE  IAS_ITM_DTL.SALE_UNIT = 1
      EXCEPTION
      END;
   SELECT (  NVL (IAS_QUT_PRM_DTL.I_PRICE, 0)* NVL (ROUND (  IAS_GEN_PKG.GET_CUR_RATE (IAS_QUT_PRM_MST.QUOT_CUR)/ IAS_GEN_PKG.GET_CUR_RATE (P_ACY=>IAS_QUT_PRM_MST.QUOT_CUR),P_NO_OF_DCML),0)) V_PRICE
   FROM   IAS_QUT_PRM_MST,
   WHERE  IAS_QUT_PRM_MST.QUOT_SER = IAS_QUT_PRM_DTL.QUOT_SER
EXCEPTION
PROCEDURE IAS_Clc_Qtn_Prm_Grp_Prc ( P_Date          In Date , 
       Cursor Qt_Prm Is Select Distinct M.Quot_No,
                                   From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D,IAS_BILL_DTL_ITM_TMP BD,Ias_Qut_Prm_Grp_Mst GM,Ias_Qut_Prm_Grp_Dtl GD
                                  Where M.Quot_Ser      = D.Quot_Ser
                                              When M.Qt_Prm_Wc_Type=2 And D.Whg_Code =(Select Whg_Code From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
     When M.Qt_Prm_Wc_Type=3 And D.Cntry_No =(Select Cntry_No From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=4 And D.Prov_No  =(Select Prov_No  From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=5 And D.City_No  =(Select City_No  From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=6 And D.R_Code   =(Select R_Code   From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                    Group By M.Quot_No,
  Begin
      Update Ias_Bill_Dtl_Itm_Tmp D Set Dis_per=0,Dis_Amt_Dtl=0,Chng_Flg=1
       Where Qt_Prm_Ser Is Not Null 
         And Exists(Select 1 From Ias_Qut_Prm_Mst Where Quot_Ser=D.Qt_Prm_Ser And Qt_Prm_Type In (1,2) And Qt_Prm_Method=6 And RowNum<=1);
      Update Ias_Bill_Dtl_Itm_Tmp D Set Qt_Free_Qty=0,Chng_Flg=1
       Where Qt_Prm_Ser Is Not Null 
         And Exists(Select 1 From Ias_Qut_Prm_Mst Where Quot_Ser=D.Qt_Prm_Ser And Qt_Prm_Type In (1,2) And Qt_Prm_Method=7 And RowNum<=1); 
  Exception when others then 
                    Begin 
                        Select 1 InTo V_Cnt From (Select I_Code,Itm_Unt,Sum(I_Qty) From ( Select I_Code,Itm_Unt,Nvl(I_Qty,0) I_Qty From IAS_QUT_PRM_GRP_DTL WHERE Prm_Grp_No=I.Prm_Grp_No
                                                                                          Select I_Code,Itm_Unt,Sum(Nvl(I_Qty,0))*-1 I_Qty From IAS_BILL_DTL_ITM_TMP Group By I_Code,Itm_Unt
                                                   Group By I_Code,Itm_Unt
                        Where RowNum<=1; 
                    Exception When Others Then
                    End;
                       Begin
                          Select trunc(Min(Nvl(D.I_qty,0)/Nvl(G.I_qty,0))) InTo V_Min_Qty
                             From IAS_BILL_DTL_ITM_TMP D,IAS_QUT_PRM_GRP_DTL G ,Ias_Qut_Prm_Dtl Q
                            Where D.I_Code     = G.I_Code 
                       Exception When Others Then
                       End; 
                          Cursor C_Bill Is Select D.I_Code,D.I_Price,D.Rcrd_No,D.Doc_Seq,D.W_Code,sum(Nvl(D.I_qty,0)) Bill_qty,sum(Nvl(G.I_qty,0)) Grp_qty 
                                             From IAS_BILL_DTL_ITM_TMP D,IAS_QUT_PRM_GRP_DTL G ,Ias_Qut_Prm_Dtl Q
                                            Where D.I_Code     = G.I_Code 
                                              Group By D.I_code,D.I_price,D.Rcrd_no,D.Doc_seq,D.W_code
                                              Order By D.Rcrd_No;                           
                        Begin
                                    Update IAS_BILL_DTL_ITM_TMP Set Dis_Amt_Dtl    = V_Dis_Amt,
                                     Where I_Code       = J.I_Code
                                  Begin
                                    Select Max(Rcrd_No) Into V_Rcrd_No From Ias_Bill_Dtl_Itm_Tmp;
                                    Exception When Others Then
                                  End;
                                   Begin
                                    Select 1 InTo V_Cnt 
                                      From Ias_Bill_Dtl_Itm_Tmp 
                                     Where I_Code                = V_Qt_I_Code 
                                  Exception When Others Then
                                  End;  
                                          INSERT INTO ias_bill_dtl_itm_tmp
                                       Update Ias_Bill_Dtl_Itm_Tmp Set Qt_Free_qty= I.Qt_Qty*I.Free_Qty,chng_flg=1
                                        Where I_Code         = V_Qt_I_Code 
                        End;          
                      Cursor C_Bill Is Select D.I_Code,D.I_Price,D.Rcrd_No,D.Doc_Seq,D.W_Code From Ias_Bill_Dtl_Itm_Tmp D,Ias_Qut_Prm_Grp_Dtl G ,Ias_Qut_Prm_Dtl Q
                                        Where D.I_Code     = G.I_Code 
                                          Order By D.Rcrd_No;                            
                    Begin
                            Update IAS_BILL_DTL_ITM_TMP Set Dis_Amt_Dtl    = ((I.I_Qty-Mod(I.I_Qty,I.Comp_Qty))*(V_Dis_Per/100)*J.I_Price)/I.I_Qty,
                             Where I_Code       = J.I_Code
                              Begin
                         Select 1 InTo V_Cnt 
                                      From Ias_Bill_Dtl_Itm_Tmp 
                                     Where I_Code                = V_Qt_I_Code 
                              Exception When Others Then
                              End;  
                                      INSERT INTO ias_bill_dtl_itm_tmp
                                   Update Ias_Bill_Dtl_Itm_Tmp Set Qt_Free_qty= I.Qt_Qty*I.Free_Qty,chng_flg=1
                                    Where I_Code         = V_Qt_I_Code 
                    ENd;
                           Select SUM(Case When Disc_type=1 And D.T_Qty<=I.I_Qty Then (((D.T_Qty-D.F_Qty+1)*(D.Disc_Amt_Per/100))/I.I_Qty)
                              From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D
                             Where M.Quot_Ser   = D.Quot_Ser
                           Begin
                               Select Decode(Disc_type,1,Disc_Amt_Per) ,
                                  From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D
                                 Where M.Quot_Ser   = D.Quot_Ser
                             Exception when others then 
                             End;  
                     Update IAS_BILL_DTL_ITM_TMP a Set Dis_Amt_Dtl    = (Case When Nvl(V_Dis_Per,0)>0 Then  (nvl(I_Price,0)*nvl(V_Dis_Per,0))/100
                     Where Exists ( Select 1 From IAS_QUT_PRM_GRP_DTL 
                                     Where I_Code     = a.I_Code
                 Begin
                  Select  TRUNC(SUM(Case When D.T_Qty<=I.I_Qty And I.Calc_All_Slides=1 Then TRUNC((T_Qty-F_Qty+1)/Decode(I.By_Comp_Qty,1,Comp_Qty,(T_Qty-F_Qty+1)))*Free_Qty
                   From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D
                  Where M.Quot_Ser      = D.Quot_Ser
                 Exception When Others Then
                  End;  
                  Begin
                        Select W_Code InTo V_W_Code 
                          From Ias_Bill_Dtl_Itm_Tmp 
                         Where W_Code Is Not Null
                  Exception When Others Then
                  End;  
                  Begin
                        Select 1 InTo V_Cnt 
                          From Ias_Bill_Dtl_Itm_Tmp 
                         Where I_Code                = V_Qt_I_Code 
                  Exception When Others Then
                  End;  
                          INSERT INTO ias_bill_dtl_itm_tmp
                       Update Ias_Bill_Dtl_Itm_Tmp Set Qt_Free_qty= V_Free_Qty,chng_flg=1
                        Where I_Code         = V_Qt_I_Code 
 Exception when others then 
PROCEDURE IAS_Clc_Qtn_Prm_Grp_Save_Prc ( P_Doc_Srl       In Number,
       Cursor Qt_Prm Is Select Distinct M.Quot_No,
                                   From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D,IAS_BILL_DTL BD,Ias_Qut_Prm_Grp_Mst GM,Ias_Qut_Prm_Grp_Dtl GD
                                  Where M.Quot_Ser      = D.Quot_Ser
                                              When M.Qt_Prm_Wc_Type=2 And D.Whg_Code =(Select Whg_Code From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=3 And D.Cntry_No =(Select Cntry_No From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=4 And D.Prov_No  =(Select Prov_No  From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=5 And D.City_No  =(Select City_No  From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                              When M.Qt_Prm_Wc_Type=6 And D.R_Code   =(Select R_Code   From Warehouse_Details Where W_Code=BD.W_Code And RowNum<=1) Then 1
                                    Group By M.Quot_No,
  Begin
      Update Ias_Bill_Dtl D Set Dis_per=0,Dis_Amt_Dtl=0
       Where Bill_Ser     = P_Doc_Srl
         And Exists(Select 1 From Ias_Qut_Prm_Mst Where Quot_Ser=D.Qt_Prm_Ser And Qt_Prm_Type In (1,2) And Qt_Prm_Method=6 And RowNum<=1);
  Exception when others then 
                    Begin 
                        Select 1 InTo V_Cnt From (Select I_Code,Itm_Unt,Sum(I_Qty) From ( Select I_Code,Itm_Unt,Nvl(I_Qty,0) I_Qty From IAS_QUT_PRM_GRP_DTL WHERE Prm_Grp_No=I.Prm_Grp_No
                                                                                          Select I_Code,Itm_Unt,Sum(Nvl(I_Qty,0))*-1 I_Qty From IAS_BILL_DTL Where Bill_Ser = P_Doc_Srl Group By I_Code,Itm_Unt
                                                   Group By I_Code,Itm_Unt
                        Where RowNum<=1; 
                    Exception When Others Then
                    End;
                          Cursor C_Bill Is Select D.I_Code,D.I_Price,D.Rcrd_No,D.Doc_Sequence From IAS_BILL_DTL D,IAS_QUT_PRM_GRP_DTL G ,Ias_Qut_Prm_Dtl Q
                                            Where D.Bill_Ser   = P_Doc_Srl
                                              Order By D.Rcrd_No;                            
                        Begin
                                Update IAS_BILL_DTL Set Dis_Amt_Dtl    = V_Dis_Amt,
                                 Where Bill_Ser     = P_Doc_Srl
                        ENd;
                      Cursor C_Bill Is Select D.I_Code,D.I_Price,D.Rcrd_No,D.Doc_Sequence From Ias_Bill_Dtl D,Ias_Qut_Prm_Grp_Dtl G ,Ias_Qut_Prm_Dtl Q
                                        Where D.Bill_Ser   = P_Doc_Srl
                                  Order By D.Rcrd_No;                            
                    Begin
                            Update IAS_BILL_DTL Set Dis_Amt_Dtl    = ((I.I_Qty-Mod(I.I_Qty,I.Comp_Qty))*(V_Dis_Per/100)*J.I_Price)/I.I_Qty,
                             Where Bill_Ser     = P_Doc_Srl
                    ENd;
                   Select SUM(Case When Disc_type=1 And D.T_Qty<=I.I_Qty Then (((D.T_Qty-D.F_Qty+1)*(D.Disc_Amt_Per/100))/I.I_Qty)
                      From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D
                     Where M.Quot_Ser   = D.Quot_Ser
                   Begin
                       Select Decode(Disc_type,1,Disc_Amt_Per) ,
                          From Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D
                         Where M.Quot_Ser   = D.Quot_Ser
                     Exception when others then 
                     End;  
             Update IAS_BILL_DTL A Set Dis_Amt_Dtl    = (Case When Nvl(V_Dis_Per,0)>0 Then  (nvl(I_Price,0)*nvl(V_Dis_Per,0))/100
             Where A.Bill_Ser = P_Doc_Srl
               And Exists ( Select 1 From IAS_QUT_PRM_GRP_DTL 
                             Where I_Code     = A.I_Code
 Exception when others then 
FUNCTION Get_Qt_Price_Fnc ( P_Icode          In Varchar2,               -- ITEM_CODE
  BEGIN
   BEGIN
    SELECT I_CODE,
    FROM   IAS_ITM_UNT_BARCODE
    WHERE  BARCODE = P_Icode AND ROWNUM <= 1;
       EXCEPTION
   END;
      BEGIN
         SELECT I_CODE
         FROM   IAS_ITM_DTL
         WHERE  IAS_ITM_DTL.SALE_UNIT = 1
      EXCEPTION
      END;
   BEGIN
       SELECT (  NVL (IAS_QUT_PRM_DTL.I_PRICE, 0)* NVL (ROUND (  IAS_GEN_PKG.GET_CUR_RATE (IAS_QUT_PRM_MST.QUOT_CUR)/ P_Bill_Rate,P_NO_OF_DCML),0)) V_PRICE
       FROM   IAS_QUT_PRM_MST,
       WHERE  IAS_QUT_PRM_MST.QUOT_SER = IAS_QUT_PRM_DTL.QUOT_SER
   EXCEPTION
   END;
  Begin
        Select Price_Type Into V_Price_Type From Ias_Para_Inv Where RowNum<=1;
      Exception WHen Others Then V_Price_Type:=1;
      End;
       SELECT SUM(DECODE(A_CY,P_ACY     , I_PRICE,
           FROM IAS_PRICING_LEVELS,IAS_ITEM_PRICE,EX_RATE
          WHERE IAS_PRICING_LEVELS.LEV_NO=IAS_ITEM_PRICE.LEV_NO
EXCEPTION
PROCEDURE  Get_Prm_Grp_Icode ( P_Prm_Grp_No        In Ias_Qut_Prm_Grp_Mst.Prm_Grp_No%Type,
    Select I_Code,Itm_Unt InTo P_Qt_I_Code,P_Qt_Itm_Unt
    Select B.I_Code,B.Itm_Unt,Sum(Nvl(B.I_Qty,0)*Nvl(B.I_Price,0)) Total From IAS_BILL_DTL_ITM_TMP B,Ias_Qut_Prm_Grp_Dtl G
    Where B.I_Code=G.I_Code   
    Group By B.I_Code,B.Itm_Unt
    Order By Total Desc)
    Where RowNum<=1;
    Select I_Code,Itm_Unt InTo P_Qt_I_Code,P_Qt_Itm_Unt
    Select B.I_Code,B.Itm_Unt,Sum(Nvl(B.I_Qty,0)*Nvl(B.I_Price,0)) Total From IAS_BILL_DTL_ITM_TMP B,Ias_Qut_Prm_Grp_Dtl G
    Where B.I_Code=G.I_Code    
    Group By B.I_Code,B.Itm_Unt    
    Order By Total Asc)
    Where RowNum<=1;  
    Select I_Code,Itm_Unt InTo P_Qt_I_Code,P_Qt_Itm_Unt
    Select B.I_Code,B.Itm_Unt From IAS_BILL_DTL_ITM_TMP B,Ias_Qut_Prm_Grp_Dtl G
    Where B.I_Code=G.I_Code    
    Order By B.Rcrd_No Asc
    Where RowNum<=1;  
Exception When Others Then
CREATE OR REPLACE Package IAS_SMAN_PKG is
  FUNCTION Get_Sman_Name (P_Rep_Code In Sales_Man.Reprs_Code%Type,P_Lng_no In Number) RETURN VARCHAR2 ;
  FUNCTION  Chk_Sman_CrLmt ( P_Rep_Code In Sales_Man.Reprs_Code%Type , P_Lng_no In Number ) Return Varchar2;
  FUNCTION Get_Acode (P_Rep_code In SALES_MAN.Reprs_Code%TYPE) Return VARCHAR2 ;
  FUNCTION Get_AC_Code_DTL (P_Rep_code In SALES_MAN.Reprs_Code%TYPE) Return VARCHAR2 ;
CREATE OR REPLACE Package Body IAS_SMAN_PKG is
FUNCTION  Chk_Sman_CrLmt ( P_Rep_Code In Sales_Man.Reprs_Code%Type , P_Lng_no In Number ) Return Varchar2 Is
     Begin
       Select Conn_cst_multi_sman InTo V_Conn_cst_multi_sman From ias_para_ar;                
     Exception When Others Then
     End;
     Begin
       Select Cr_Lmt InTo V_CrLmt From Sales_Man Where Reprs_Code=P_Rep_Code And RowNum<=1;                
     Exception When Others Then
     End;
       Begin
             Select Sum(D.Amt) InTo V_Blnc_Amt 
               From Ias_Post_Dtl D,Customer C 
              Where Nvl(D.Ac_Dtl_Typ,0)=3            
             Select Sum(D.Amt) InTo V_Blnc_Amt 
               From Ias_Post_Dtl D,IAS_CST_SMAN C 
              Where Nvl(D.Ac_Dtl_Typ,0)=3            
       Exception When Others Then
       End;
 Exception When Others Then
FUNCTION Get_Sman_Name (P_Rep_Code In Sales_Man.Reprs_Code%Type,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
     Select Decode(P_Lng_no,1,Reprs_A_Name,nvl(Reprs_E_Name,Reprs_A_Name)) 
       From Sales_Man
      where Reprs_code=P_Rep_Code
 Exception
FUNCTION Get_Acode (P_Rep_code In SALES_MAN.Reprs_Code%TYPE) Return VARCHAR2 Is
 select R_A_CODE 
   From SALES_MAN
  where Reprs_Code=P_Rep_code ;
Exception 
FUNCTION Get_AC_Code_DTL (P_Rep_code In SALES_MAN.Reprs_Code%TYPE) Return VARCHAR2 Is
        Begin
         select AC_CODE_DTL 
           From SALES_MAN
          where Reprs_Code=P_Rep_code 
        Exception 
CREATE OR REPLACE PACKAGE IAS_Trns_Pkg Is
FUNCTION Get_Sordr_Resvd_Qty (P_i_code In Ias_Itm_Mst.I_CODE%TYPE,P_w_code In WAREHOUSE_DETAILS.W_CODE%TYPE,P_billDate In Date) Return Number;
PROCEDURE Update_Bill_Disc_Prc ( P_docser In Number, P_disc_type In Number) ;
PROCEDURE Update_RtBill_Disc_Prc ( P_docser In Number, P_disc_type In Number) ;
PROCEDURE Update_PiBill_Disc_Prc ( P_docser In Number, P_disc_type In Number) ;
PROCEDURE Calc_ChrgItm_SI_Prc  ( P_docser    In Number,
PROCEDURE Calc_ChrgItm_SR_Prc  ( P_docser    In Number,
PROCEDURE Update_Othr_Chrg (P_bill_ser In Number ,P_Dec_No In Number);
Procedure Update_Bill_Add_Disc_Prc ( P_Bill_Ser      In Number, 
Procedure Update_PI_Bill_Add_Disc_Prc ( P_Docser      In Number, 
PROCEDURE Calc_Chrg_SI_B4save_Prc  (  P_acy 
PROCEDURE Calc_ChrgItm_SI_B4save_Prc (  P_acy 
PROCEDURE Update_RtBill_Rq_Disc_Prc (P_docser In Number, P_disc_type In Number) ;  
PROCEDURE Calc_ChrgItm_Sr_Rq_Prc (  P_docser          In Number,
PROCEDURE Calc_ChrgItm_Qt_Prc ( P_docser           In Number,
PROCEDURE Update_Othr_Chrg_Qt (P_Quot_ser In Number ,P_Dec_No In Number);
PROCEDURE Calc_ChrgItm_So_Prc ( P_docser           In Number,
PROCEDURE Update_Othr_Chrg_So (P_Order_ser In Number ,P_Dec_No In Number);
PROCEDURE Update_Qt_Disc_Prc (P_docser In Number, P_disc_type In Number);
PROCEDURE Update_So_Disc_Prc (P_docser In Number, P_disc_type In Number);
PROCEDURE Insrt_Bill_Dtl_Tmp_Prc(  P_Doc_M_Sq            In  Ias_Bill_Mst.D
Function Get_Rsrv_Qty_Bill_BkTmp ( P_Doc_Typ      In Number,
Function Get_Itm_Disc_Avg_Ap ( P_I_Code     In Ias_Itm_Mst.I_Code%Type    ,
PROCEDURE Upd_Order_Stat (  P_Ordr_Stat_Typ In Sales_Order.Ordr_Stat_Typ%Type,
PROCEDURE Upd_Bill_Stat ( P_Bill_Stat_T
CREATE OR REPLACE PACKAGE Body IAS_Trns_Pkg Is
FUNCTION Get_Sordr_Resvd_Qty (P_i_code In Ias_Itm_Mst.I_CODE%TYPE,P_w_code In WAREHOUSE_DETAILS.W_CODE%TYPE,P_billDate In Date)  
  Select nvl(sum(nvl(i_qty,0)+nvl(Free_qty,0)),0)
    From order_detail
   where i_code=P_i_code
 Exception  
PROCEDURE Update_Bill_Disc_Prc (P_docser In Number, P_disc_type In Number) IS
      Begin
          Update Ias_Bill_Dtl a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Bill_Mst
                                                  Where bill_ser=a.bill_ser
                                       dis_amt =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Bill_Mst
                                                  Where bill_ser=a.bill_ser
           where bill_ser=P
        Exception When others Then
      End;
      Begin
          Update Ias_Bill_Dtl a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Bill_Mst
                                                  Where bill_ser=a.bill_ser
                                       dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0)) + nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0) From Ias_Bill_Mst
                                                  Where bill_ser=a.bill_ser
           where bill_ser=P_docser;
        Exception When others Then
      End;
PROCEDURE Update_RtBill_Disc_Prc (P_docser In Number, P_disc_type In Number) Is
      Begin
          Update Ias_Rt_Bill_Dtl a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst
                                                      Where rt_bill_ser=a.rt_bill_ser
                                       dis_amt =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst
                                                  Where rt_bill_ser=a.rt_bill_ser
           where rt_bill_ser=P_docser;
        Exception When others Then
      End;
      Begin
          Update Ias_Rt_Bill_Dtl a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst
                                                      Where rt_bill_ser=a.rt_bill_ser
                                       dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0)) + nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0) From Ias_Rt_Bill_Mst
                                                  Where rt_bill_ser=a.rt_bill_ser
           where rt_bill_ser=P_docser;
        Exception When others Then
      End;
PROCEDURE Update_PiBill_Disc_Prc (P_docser In Number, P_disc_type In Number) IS
      Begin
          Update Ias_pi_bill_Dtl a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_pi_bill_Mst
                                                  Where bill_ser=a.bill_ser
                                       dis_amt =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_pi_bill_Mst
                                                  Where bill_ser=a.bill_ser
           where bill_ser=P_docser;
        Exception When others Then
      End;
      Begin
          Update Ias_pi_bill_Dtl a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_pi_bill_Mst
                                                  Where bill_ser=a.bill_ser
                                       dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0)) + (nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0)) 
 From Ias_pi_bill_Mst
                                                  Where bill_ser=a.bill_ser
           where bill_ser=P_docser;
        Exception When others Then
      End;
PROCEDURE Calc_ChrgItm_SI_Prc ( P_docser 
 Select 1 Into cnt From Sales_Charges
  where nvl(inv_item,0)=1
Exception
  Raise_Application_Error(-20455,'Error When Select Sales_charges  = '||SqlErrm) ;
 Begin
 Delete From other_charges_items
  where bill_type=1
 Exception when others then
 Begin
  Begin
     Insert Into Other_Charges_Items (   bill_type,
  Select 1,
From Ias_Bill_Dtl,sales_charges,sales_charges_items,Ias_Itm_Mst
 where sales_charges.sc_no=sales_charges_items.sc_no
--                         order by Ias_Bill_Dtl.i_code,sales_charges_items.sc_no;
    Exception
    End;
-----------------------------## Insert Into Other_Charges ##---------------------------------
 Begin
 Delete From Other_Charges
  where bill_type=1
 Exception when others then
 Begin
  Begin
    Insert Into Other_Charges ( bill_type,
                      Select  1,
          From Ias_Bill_Mst a,Other_Charges_Items b,sales_charges c
       where b.bill_type=1 
group by b.bill_type,a.bill_doc_type,a.bill_no,a.bill_ser,b.sc_no,b.a_code,a.bill_currency,a.bill_rate,c.vat_per,a.brn_no,a.brn_year,a.CMP_NO, a.BRN_USR
Exception when others Then
Exception when others Then
PROCEDURE Calc_ChrgItm_SR_Prc ( P_docser 
 Select 1 Into cnt From Sales_Charges
  where nvl(inv_item,0)=1
Exception
  Raise_Application_Error(-20460,'Error When Select Sales_charges  = '||SqlErrm) ;
 Begin
 Delete From other_charges_items
  where bill_type=3
 Exception when others then
 Begin
  Begin
     Insert Into Other_Charges_Items (   bill_type,
  Select 3,
From Ias_Rt_Bill_Dtl,sales_charges,sales_charges_items,Ias_Itm_Mst
 where sales_charges.sc_no=sales_charges_items.sc_no
    Exception
    End;
-----------------------------## Insert Into Other_Charges ##---------------------------------
 Begin
 Delete From Other_Charges
  where bill_type=3
 Exception when others then
 Begin
  Begin
    Insert Into Other_Charges ( bill_type,
                      Select  3,
          From Ias_Rt_Bill_Mst a,Other_Charges_Items b,sales_charges c
       where b.bill_type=3 
group by b.bill_type,a.Rt_bill_doc_type,a.Rt_bill_no,a.Rt_bill_ser,b.sc_no,b.a_code,a.Rt_bill_currency,a.Rt_bill_rate,c.vat_per,a.brn_no,a.brn_year,a.CMP_NO, a.BRN_USR
Exception when others Then
Exception when others Then
PROCEDURE Update_Othr_Chrg (P_bill_ser In Number ,P_Dec_No In Number) Is
Begin      
Begin 
 Select Round(nvl(sum(amt),0),P_Dec_No) 
   From Other_Charges
  where bill_type=1
Exception 
End;        
 Update Ias_Bill_Mst Set Othr_amt = nvl(oth_amt,0)
  where bill_ser=P_bill_ser;        
 Exception 
Procedure Update_Bill_Add_Disc_Prc ( P_Bill_Ser      In Number, 
Begin     
      Begin
          Update Ias_Bill_Mst 
             Set Add_Disc_Amt_Mst = (Select Nvl(Sum(Nvl(Add_Disc_Amt_Mst,0)),0) 
                                       From Ias_Bill_Mst_Add_Disc
                                      Where Add_Disc_Type=1
                 Disc_Amt         = Nvl(Nvl(Disc_Amt_Mst,0)+ (Select Sum(Nvl(Add_Disc_Amt_Mst,0)) 
                                                            From Ias_Bill_Mst_Add_Disc
                                                           Where Add_Disc_Type=1
           Where Bill_Ser = P_Bill_Ser ;
           Update Ias_Bill_Dtl A Set Add_Dis_Amt_Mst = Nvl((Select (Nvl(Add_Disc_Amt_Mst,0)/Nvl(Bill_Amt,0))*Nvl(A.I_Price,0) 
                                                          From Ias_Bill_Mst
                                                         Where Bill_Ser=P_Bill_Ser),0),
                                     Dis_Amt         = Nvl(Dis_Amt_Mst,0)+Nvl((Select (Nvl(Add_Disc_Amt_Mst,0)/Nvl(Bill_Amt,0))*Nvl(A.I_Price,0) 
                                                          From Ias_Bill_Mst
                                                         Where Bill_Ser=P_Bill_Ser),0)+Nvl(Dis_Amt_Dtl,0)+Nvl(Add_Dis_Amt_Dtl,0)
           Where Bill_Ser=P_Bill_Ser;
      Exception When Others Then
      End;  
      Begin
          Update Ias_Bill_Mst A Set Add_Disc_Amt_Dtl = (Select Nvl(Sum(Nvl(D.Add_Dis_Qty,0)*Nvl(D.Add_Dis_Amt_Dtl,0)),0) 
                                                         From Ias_Bill_Mst_Add_Disc M,Ias_Bill_Dtl_Add_Disc D
                                                        Where M.DOC_SER=D.DOC_SER
                                                        (Select Nvl(Sum(Nvl(D.Add_Dis_Qty,0)*Nvl(D.Add_Dis_Amt_Dtl,0)),0) 
                                                          From Ias_Bill_Mst_Add_Disc M,Ias_Bill_Dtl_Add_Disc D
                                                         Where M.DOC_SER=D.DOC_SER
          Where Exists(Select 1 From Ias_Bill_Mst_Add_Disc M,Ias_Bill_Dtl_Add_Disc D
                         Where M.Doc_Ser       = D.Doc_Ser
          Update Ias_Bill_Dtl A Set Add_Dis_Amt_Dtl = (Select Nvl(Sum((Nvl(Dtl_Disc.Add_Dis_Qty,0)*Nvl(Dtl_Disc.Add_Dis_Amt_Dtl,0))/Nvl(Dtl.I_Qty,0)),0) 
                                                         From Ias_Bill_Mst_Add_Disc Mst_Disc,Ias_Bill_Dtl_Add_Disc Dtl_Disc,Ias_Bill_Dtl Dtl
                                                        Where Mst_Disc.Doc_Ser=Dtl_Disc.Doc_Ser
                                     (Select Nvl(Sum((Nvl(Dtl_Disc.Add_Dis_Qty,0)*Nvl(Dtl_Disc.Add_Dis_Amt_Dtl,0))/Nvl(Dtl.I_Qty,0)),0) 
                                                          From Ias_Bill_Mst_Add_Disc Mst_Disc,Ias_Bill_Dtl_Add_Disc Dtl_Disc,Ias_Bill_Dtl Dtl
                                                        Where Mst_Disc.Doc_Ser      =Dtl_Disc.Doc_Ser
           Where Exists(Se
lect 1 From Ias_Bill_Mst_Add_Disc M,Ias_Bill_Dtl_Add_Disc D 
                         Where M.Doc_Ser       = D.Doc_Ser
      Exception When Others Then
      End;   
Procedure Update_Pi_Bill_Add_Disc_Prc ( P_Docser      In Number, 
Begin     
      Begin
          Update Ias_Pi_Bill_Mst 
             Set Add_Disc_Amt_Mst = (Select Nvl(Sum(Nvl(Add_Disc_Amt_Mst,0)),0) 
                                       From Ias_Pi_Bill_Mst_Add_Disc
                                      Where Bill_Ser=P_Docser
           Where Bill_Ser = P_Docser ;
           Update Ias_Pi_Bill_Dtl A Set Add_Dis_Amt_Mst = Nvl((Select (Nvl(Add_Disc_Amt_Mst,0)/Nvl(Bill_Amt,0))*Nvl(A.I_Price,0) 
                                                          From Ias_Pi_Bill_Mst
                                                         Where Bill_Ser=P_Docser),0)
           Where Bill_Ser=P_Docser;
      Exception When Others Then
      End;  
      Begin
          Update Ias_Pi_Bill_Mst A Set Add_Disc_Amt_Dtl = (Select Nvl(Sum(Nvl(Add_Dis_Qty,0)*Nvl(Add_Dis_Amt_Dtl,0)),0) 
                                                         From Ias_Pi_Bill_Dtl_Add_Disc
                                                        Where Bill_Ser=A.Bill_Ser
          Where Exists(Select 1 From Ias_Pi_Bill_Dtl_Add_Disc 
                         Where Bill_Ser     = A.Bill_Ser
          Update Ias_Pi_Bill_Dtl A Set Add_Dis_Amt_Dtl = (Select Nvl(Sum((Nvl(Dtl_Disc.Add_Dis_Qty,0)*Nvl(Dtl_Disc.Add_Dis_Amt_Dtl,0))/Nvl(Dtl.I_Qty,0)),0) 
                                                         From Ias_Pi_Bill_Dtl_Add_Disc Dtl_Disc,Ias_Pi_Bill_Dtl Dtl
                                                        Where Dtl_Disc.Bill_Ser     = Dtl.Bill_Ser
           Where Exists(Select 1 From Ias_Pi_Bill_Dtl_Add_Disc 
                         Where Bill_Ser     = A.Bill_Ser
      Exception When Others Then
      End;   
PROCEDURE Calc_Chrg_SI_B4save_Prc  ( P_acy 
     Select Sum(Decode(amt_type,1,Decode(a_cy,P_acy,amt,amt*ac_rate*1/P_billrate),(Nvl(P_Bill_Amt,0)*(Nvl(Amt,0)/100))))
       From Sales_Charges
      where nvl(fill_auto,0)=1
      Exception
PROCEDURE Calc_ChrgItm_SI_B4save_Prc (  P_acy 
    Begin
     Select 1 Into V_Cnt From Sales_Charges
      where nvl(inv_item,0)=1
    Exception       
    End;
          Begin          
 Select ROUND((Decode(sales_charges.amt_type,0,(Round((Decode(Nvl(Sales_Charges.Calc_Type,0),0,Nvl(P_Iprice,0),2,(Nvl(P_Iprice,0)-Nvl(P_Disc_Amt,0)-nvl(p_vat_amt,0)),(Nvl(P_Iprice,0)-Nvl(P_Disc_Amt,0)))*(sales_charges_items.per_amt/100)),P_DEC_NO)*(Nvl(P_Iqty,0)+
From sales_charges,sales_charges_items,Ias_Itm_Mst,Ias_Itm_Dtl
 where sales_charges.sc_no=sales_charges_items.sc_no
    Exception
    End;
Exception
PROCEDURE Update_RtBill_Rq_Disc_Prc (P_docser In Number, P_disc_type In Number) Is
      Begin
          Update Ias_Rt_Bill_Dtl_Rq a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst_Rq
                                                      Where rt_bill_ser=a.rt_bill_ser
                                       dis_amt =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst_Rq
                                                  Where rt_bill_ser=a.rt_bill_ser
           where rt_bill_ser=P_docser;
        Exception When others Then
      End;
      Begin
          Update Ias_Rt_Bill_Dtl_Rq a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0) From Ias_Rt_Bill_Mst_Rq
                                                      Where rt_bill_ser=a.rt_bill_ser
                                       dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl(bill_amt,0))*nvl(a.i_price,0)) + nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0) From Ias_Rt_Bill_Mst_Rq
                                                  Where rt_bill_ser=a.rt_bill_ser
           where rt_bill_ser=P_docser;
        Exception When others Then
      End;
PROCEDURE Calc_ChrgItm_Sr_Rq_Prc ( P_docser             In Number,
 Select 1 Into cnt From Sales_Charges
  where nvl(inv_item,0)=1
Exception
  Raise_Application_Error(-20460,'Error When Select Sales_charges  = '||SqlErrm) ;
 Begin
     Delete From other_charges_items_Othrs
      where bill_type=136
 Exception when others then
 Begin
  Begin
     Insert Into Other_Charges_Items_Othrs (   bill_type,
                                                                  Select 136,
                                                        From Ias_Rt_Bill_Dtl_Rq,sales_charges,sales_charges_items,Ias_Itm_Mst
                                                        where sales_charges.sc_no=sales_charges_items.sc_no
        Exception
        End;
-----------------------------## Insert Into Other_Charges ##---------------------------------
 Begin
     Delete From Other_Charges_Othrs
      where bill_type=136
     Exception when others then
 Begin
  Begin
    Insert Into Other_Charges_Othrs ( bill_type,
                          Select  136,
                                          From Ias_Rt_Bill_Mst_Rq a,Other_Charges_Items_Othrs b
                                           where b.bill_type=136
                                            group by b.bill_type,a.Rt_bill_doc_type,a.Rt_bill_no,a.Rt_bill_ser,b.sc_no,b.a_code,a.Rt_bill_currency,a.Rt_bill_rate,a.brn_no,a.brn_year,a.CMP_NO, a.BRN_USR    ;
        Exception when others Then
        End;
Exception when others Then
PROCEDURE Calc_ChrgItm_Qt_Prc ( P_docser           In Number,
 Select 1 Into cnt From Sales_Charges
  where nvl(inv_item,0)=1
Exception
  Raise_Application_Error(-20455,'Error When Select Sales_charges  = '||SqlErrm) ;
 Begin
     Delete From other_charges_items_othrs
      where bill_type=52
 Exception when others then
 Begin
  Begin
     Insert Into Other_Charges_Items_Othrs ( bill_type,
                                    Select 52,
                                From Quotation_Detail,sales_charges,sales_charges_items,Ias_Itm_Mst
                                where sales_charges.sc_no=sales_charges_items.sc_no
--                         order by Quotation_Detail.i_code,sales_charges_items.sc_no;
        Exception
        End;
-----------------------------## Insert Into Other_Charges ##---------------------------------
 Begin
     Delete From Other_Charges_Othrs
      where bill_type=52
     Exception when others then
 Begin
  Begin
    Insert Into Other_Charges_Othrs ( bill_type,
                             Select  52,
                                From Quotation a,Other_Charges_Items_Othrs b
                               where b.bill_type=52 
                            group by b.bill_type,a.QUOT_DOC_TYPE,a.Quot_no,a.Quot_ser,b.sc_no,b.a_code,a.Quot_cur,a.Cur_rate,a.brn_no,a.brn_year,a.CMP_NO, a.BRN_USR    ;
        Exception when others Then
        End;
Exception when 
PROCEDURE Update_Othr_Chrg_Qt (P_Quot_ser In Number ,P_Dec_No In Number) Is
Begin      
Begin 
 Select Round(nvl(sum(amt),0),P_Dec_No) 
   From Other_Charges_Othrs
  where bill_type=52
Exception 
End;        
 Update Quotation Set Othr_amt = nvl(V_Othr_Amt,0)
  where Quot_ser=P_Quot_ser;        
 Exception 
PROCEDURE Update_Qt_Disc_Prc (P_docser In Number, P_disc_type In Number) IS
      Begin
          Update Quotation_Detail a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(Quot_amt,0))*nvl(a.i_price,0) From Quotation
                                                  Where Quot_ser=a.Quot_ser
                                       dis_amt =(Select (nvl(disc_amt_mst,0)/nvl(Quot_amt,0))*nvl(a.i_price,0) From  Quotation
                                                  Where Quot_ser=a.Quot_ser
           where Quot_ser=P_docser;
        Exception When others Then
      End;
      Begin
          Update Quotation_Detail a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(Quot_amt,0))*nvl(a.i_price,0) From Quotation
                                                  Where Quot_ser=a.Quot_ser
                                       dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl(Quot_amt,0))*nvl(a.i_price,0)) + nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0) From Quotation
                                                  Where Quot_ser=a.Quot_ser
           where Quot_ser=P_docser;
        Exception When others Then
      End;
PROCEDURE Calc_ChrgItm_So_Prc ( P_docser           In Number,
 Select 1 Into cnt From Sales_Charges
  where nvl(inv_item,0)=1
Exception
  Raise_Application_Error(-20455,'Error When Select Sales_charges  = '||SqlErrm) ;
 Begin
     Delete From other_charges_items_othrs
      where bill_type=53
 Exception when others then
 Begin
  Begin
     Insert Into Other_Charges_Items_Othrs ( bill_type,
                                    Select 53,
                                From Order_Detail,sales_charges,sales_charges_items,Ias_Itm_Mst
                                where sales_charges.sc_no=sales_c
--                         order by Order_Detail.i_code,sales_charges_items.sc_no;
        Exception
        End;
-----------------------------## Insert Into Other_Charges ##---------------------------------
 Begin
     Delete From Other_Charges_Othrs
      where bill_type=53
     Exception when others then
 Begin
  Begin
    Insert Into Other_Charges_Othrs ( bill_type,
                             Select  53,
                                From Sales_Order a,Other_Charges_Items_Othrs b
                               where b.bill_type=53 
                            group by b.bill_type,a.Bill_DOC_TYPE,a.Order_no,a.Order_ser,b.sc_no,b.a_code,a.Order_cur,a.Cur_rate,a.brn_no,a.brn_year,a.CMP_NO, a.BRN_USR    ;
        Exception when others Then
        End;
Exception when others Then
PROCEDURE Update_Othr_Chrg_So (P_Order_ser In Number ,P_Dec_No In Number) Is
Begin      
        Begin 
         Select Round(nvl(sum(amt),0),P_Dec_No) 
           From Other_Charges_Othrs
          where bill_type=53
        Exception 
        End;        
     Update Sales_Order Set Othr_amt = nvl(V_Othr_Amt,0)
      where Order_ser=P_Order_ser;        
 Exception 
PROCEDURE Update_So_Disc_Prc (P_docser In Number, P_disc_type In Number) IS
      Begin
          Update Order_Detail a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(Order_amt,0))*nvl(a.i_price,0) From Sales_Order
                                                  Where Order_ser=a.Order_ser
                                       dis_amt =(Select (nvl(disc_amt_mst,0)/nvl(Order_amt,0))*nvl(a.i_price,0) From  Sales_Order
                                                  Where Order_ser=a.Order_ser
           where Order_ser=P_docser;
        Exception When others Then
      End;
      Begin
          Update Order_Detail a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl(Order_amt,0))*nvl(a.i_price,0) From Sales_Order
                                                  Where Order_ser=a.Order_ser
                                       dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl(Order_amt,0))*nvl(a.i_price,0)) + nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0) From Sales_Order
                                                  Where Order_ser=a.Order_ser
           where Order_ser=P_docser;
        Exception When others Then
      End;
PROCEDURE Insrt_Bill_Dtl_Tmp_Prc(  P_Doc_M_Sq            In  Ias_Bill_Mst.Doc_M_Sq%Type
     Begin 
           Delete From Ias_Bill_Dtl_Bktmp Where Doc_M_Sq = P_Doc_M_Sq;        
           Delete From Ias_Bill_Dtl_Bktmp Where Doc_M_Sq = P_Doc_M_Sq And Doc_Seq_Tmp = P_Doc_Seq_Tmp;
     Exception When Others Then Null;
     End;    
        Insert Into  Ias_Bill_Dtl_Bktmp (  doc_type,Bill_No, Bill_Date, C_Code, C_Name, A_Desc, I_Code, Itm_Unt, P_Size, W_Code, Expire_Date, Batch_No, Wt_Unt, Wt_Qty, 
 Exception When Others Then 
Function Get_Rsrv_Qty_Bill_BkTmp ( P_Doc_Typ      In Number,
    Select Nvl(Sum((Nvl(I_Qty,0)+Nvl(Free_Qty,0))*Nvl(P_Size,1)) ,0) /Nvl(P_Psize,1) Into V_Qty
      From Ias_Bill_Dtl_Bktmp
     Where I_Code = P_I_Code
Exception When Others Then 
Function Get_Itm_Disc_Avg_Ap ( P_I_Code     In Ias_Itm_Mst.I_Code%Type    ,
    Select Sum(Nvl(G.Cp_Qty,0)* Nvl(D.Dis_Per,0)) / Sum (Nvl(G.Cp_Qty,0))
      From Ias_Pi_Bill_Mst M ,Ias_Pi_Bill_Dtl D,Gr_Detail G
     Where M.Bill_Ser   = D.Bill_Ser
    Select Sum(Nvl(G.Cp_Qty,0)* Nvl(D.Dis_Per2,0)) / Sum (Nvl(G.Cp_Qty,0))
     From Ias_Pi_Bill_Mst M ,Ias_Pi_Bill_Dtl D,Gr_Detail G
     Where M.Bill_Ser   = D.Bill_Ser
    Select Sum(Nvl(G.Cp_Qty,0)* Nvl(D.Dis_Per3,0)) / Sum (Nvl(G.Cp_Qty,0))
      From Ias_Pi_Bill_Mst M ,Ias_Pi_Bill_Dtl D,Gr_Detail G
     Where M.Bill_Ser   = D.Bill_Ser
    Select Sum(Nvl(G.Cp_Qty,0)* ((Nvl(D.Dis_Amt_Dtl,0)+Nvl(D.Dis_Amt_Dtl2,0)+Nvl(D.Dis_Amt_Dtl3,0))/Decode(Nvl(D.I_Price,0),0,1,Nvl(D.I_Price,0))*100)) / Sum (Nvl(G.Cp_Qty,0))
      From Ias_Pi_Bill_Mst M ,Ias_Pi_Bill_Dtl D,Gr_Detail G
     Where M.Bill_Ser   = D.Bill_Ser
Exception When Others Then 
PROCEDURE Upd_Order_Stat (  P_Ordr_Stat_Typ In Sales_Order.Ordr_Stat_Typ%Type,
        Update Sales_Order M
         Where Ordr_Stat_Typ<>P_Ordr_Stat_Typ
           And Exists ( Select 1 From Ias_Outgoing_Dtl
                         Where Out_Ser=P_Doc_Ser
        Update Sales_Order M
         Where Ordr_Stat_Typ<>P_Ordr_Stat_Typ
           And Exists ( Select 1 From Ias_Bill_Dtl
                         Where Bill_Ser=P_Doc_Ser
        Update Sales_Order M
         Where Order_ser = P_Order_ser
          Begin
            Select 1 InTo V_Cnt From Ars_bill_fllwup_movmnt M,Ias_Bill_Dtl D
              Where M.Doc_ser=D.Bill_Ser
          Exception When Others Then
          End;
             Update Sales_order m
             Where Exists(Select 1 
                            From Ias_bill_dtl 
                           Where Nvl(Doc_ser_ref,0) = M.Order_ser
          Begin
             Select 1 InTo V_Cnt From Ias_Bill_Mst M,Ias_Bill_Dtl D
              Where M.Bill_Ser=D.Bill_Ser
          Exception When Others Then
          End;
             Update Sales_order m
             Where Exists(Select 1 
                            From Ias_bill_dtl 
                           Where Nvl(Doc_ser_ref,0) = M.Order_ser
          Begin
             Select 1 InTo V_Cnt From Ias_Bill_Dtl D
              Where D.Bill_Ser<>P_Doc_Ser
          Exception When Others Then
          End;
             Update Sa
             Where Order_ser = P_Order_ser;
          Begin
                     Select 1 InTo V_Cnt From Detail_Out_Bills D1, Ias_Bill_Dtl D2
                      Where D1.Bill_Ser=D2.Bill_Ser
                 Select 1 InTo V_Cnt From Ias_Outgoing_Dtl
                  Where Out_Ser<>P_Doc_Ser
          Exception When  Others Then
          End;
              Update Sales_Order 
             Where Order_ser = P_Order_ser;
          Begin
             Select 1 InTo V_Cnt From IAS_CHK_DOC_INOUT_QTY_MST
              Where doc_ser<>P_Doc_Ser
          Exception When Others Then
          End;
             Update Sales_Order 
             Where Order_ser = P_Order_ser;
          Begin
             Select 1 InTo V_Cnt From Sales_Order
              Where Order_ser=P_Order_ser
          Exception When Others Then
          End;
              Update Sales_Order 
       Where Order_ser = P_Order_ser;
          Update Sales_Order 
             Where Order_ser = P_Order_ser;
Exception When Others Then
PROCEDURE Upd_Bill_Stat ( P_Bill_Stat_Typ In Ias_Bill_Mst.Bill_Stat_Typ%Type,
       Update Ias_bill_mst M
         Where Bill_ser = P_bill_ser
          Begin
             Select 1 InTo V_Cnt From Detail_Out_Bills
              Where Out_Ser<>P_Doc_Ser
          Exception When Others Then
          End;
             Update Ias_Bill_Mst 
             Where B
          Begin
             Select 1 InTo V_Cnt From IAS_CHK_DOC_INOUT_QTY_MST
              Where doc_ser<>P_Doc_Ser
          Exception When Others Then
          End;
             Update Ias_Bill_Mst 
             Where Bill_Ser = P_Bill_Ser;
          Begin
             Select 1 InTo V_Cnt From Ars_bill_fllwup_movmnt
              Where Trns_typ=1
          Exception When Others Then
          End;
             Update Ias_Bill_Mst 
             Where Bill_Ser = P_Bill_Ser;
          Begin
             Select 1 InTo V_Cnt From Ias_Bill_Mst
              Where Bill_Ser=P_Bill_Ser
          Exception When Others Then
          End;
             Update Ias_Bill_Mst 
             Where Bill_Ser = P_Bill_Ser;
          Update Ias_Bill_Mst 
             Where Bill_Ser = P_Bill_Ser;
Exception When Others Then
CREATE OR REPLACE Package YS_POST_INV_TRNS_PKG As
    PROCEDURE Update_Post_tr ;
    Procedure Check_Duplicate_Tr(  P_Tr_Inout_Type Ias_Whtrns_Mst.Tr_Inout_Type%Type ,
    PROCEDURE Check_Duplicate_SI(P_Bill_No In Number,P_Bill_Doc_Type In NUmber,P_Bill_Ser In NUmber )  ;                             
    PROCEDURE Check_Duplicate_Sr(P_Rt_Bill_No In Number,P_Rt_Bill_Doc_Type In NUmber,P_Rt_Bill_Ser In NUmber )  ;
    PROCEDURE Insert_Installemnt (P_Doc_Type    Number,
    Procedure Insert_Other_Charges (P_Billno      Number,
    Procedure Insert_Other_Charges_Sr ( P_Rt_Billno      Number,
    PROCEDURE Check_Avl_Qty (  P_Doc_Type Number);                                                            
    Function Get_Bill_No (  P_Invoicing_Serials In Number   ,
   Function Get_Bill_No_Br (  P_Invs In Number   ,
    Function Get_Bill_Ser ( P_Invs              In Number ,
    FUNCTION Get_Rt_Bill_No ( P_Invs_Sr          In Number,
   FUNCTION Get_Rt_Bill_No_Br ( P_Invs_Sr          In Number,
   FUNCTION Get_Rt_Bill_Ser (   P_Invs_Sr       IN Number,
   Function Get_Gr_No_Br ( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
   FUNCTION Get_Out_No_Br ( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
   Function Get_Out_Br_Ser ( P_Outgoing_Serial In Number ,
        Function Get_Gr_Br_Ser (   P_Incoming_Serial In Number ,
   Procedure Post_Incmng ( P_Doc_Ser  In Gr_Note.G_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_OutGoing ( P_Doc_Ser  In Ias_Outgoing_Mst.Out_Ser%Type   Default Null , P_Use_Adjstmnt In Number Default 0 ,P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_Out  ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_Use_Adjstmnt In Number Default 0 , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_In ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_Out_In ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   PROCEDURE Post_Sales_Detail ( P_Doc_Ser  In Ias_Bill_Mst.Bill_Ser%Type   Default Null , P_Use_Adjstmnt In Number Default 0
   PROCEDURE Post_Rt_Sales_Detail ( P_Doc_Ser  In Ias_Rt_Bill_Mst.Rt_Bill_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;   
   PROCEDURE Post_Sales_Sum ;
   PROCEDURE Post_Rt_Sales_Sum ( P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;   
   PROCEDURE Post_Stk_Adjstmnt ;  
   PROCEDURE Post_Jv;
   PROCEDURE Post_Vchr;
   PROCEDURE Insrt_Tax (P_Doc_Type In Number , P_Doc_Ser In Number) ;
   PROCEDURE Insrt_Point_Trns (P_Doc_Type In Number , P_Doc_Ser In Number);
   PROCEDURE Post_Serial (P_Doc_Ser In Number , P_Doc_Type In Number);
   FUNCTION Get_Card_Comm_Prcnt (P_Cr_Card_No In Number) RETURN Number;
   PROCEDURE Post_Trns_Data_Auto ;
 CREATE OR REPLACE Package Body YS_POST_INV_TRNS_PKG As
PROCEDURE Update_Post_tr IS
  Begin
   Update Ias_Whtrns_Mst_Br a
       Where  Nvl(Tr_Post,0)=0 
         And Exists(Select 1 From Ias_Whtrns_Mst 
                    Where Tr_Ser=A.Tr_Ser 
         And Exists(select Doc_Ser From Item_Movement Where Doc_Ser=A.Tr_Ser And RowNum<=1);
    Exception
          Raise_Application_Error(-20001,'Error In Update Ias_Whtrns_Mst_Br');
    Begin
       Update Ias_Whtrns_Mst_Br a
       Where  Nvl(Tr_Post,0)=1 
         And Not Exists(Select 1 From Ias_Whtrns_Mst 
                    Where Tr_Ser=A.Tr_Ser                  
    Exception
          Raise_Application_Error(-20002,'Error In Update Ias_Whtrns_Mst_Br');
Procedure Check_Duplicate_Tr( P_Tr_Inout_Type Ias_Whtrns_Mst.Tr_Inout_Type%Type ,
 Begin
    Begin
     V_Cnt := Ias_Gen_Pkg.Get_Cnt(' Select 1 
                                     From Ias_Whtrns_Mst 
                                      Where Tr_Inout_Type = '|| P_Tr_Inout_Type||' 
    Exception  
    End;
PROCEDURE Check_Duplicate_SI(P_Bill_No In Number,P_Bill_Doc_Type In NUmber,P_Bill_Ser In NUmber ) Is
    Begin
        Select Flg_Desc Into V_Doc_Type_Nm From S_Flags
            Where Flg_Code='TYPE_NAME_SI'
    Exception  
    End;      
    Begin
        V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Ias_Bill_Mst 
                                      Where Bill_Ser ='|| P_Bill_Ser||'
    Exception  
    End;
PROCEDURE Check_Duplicate_Sr(P_Rt_Bill_No In Number,P_Rt_Bill_Doc_Type In NUmber,P_Rt_Bill_Ser In NUmber ) Is
    Begin
        Select Flg_Desc Into V_Doc_Type_Nm From S_Flags
            Where Flg_Code='TYPE_NAME_SI'
    Exception  
    End;      
    Begin
        V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Ias_Rt_Bill_Mst 
                                      Where Rt_Bill_Ser ='|| P_Rt_Bill_Ser||'
    End;
PROCEDURE Insert_Installemnt (P_Doc_Type    Number,
               Select   I_No, 
                   From Ias_Bill_Mst_Br , Installment_Br
                        where Ias_Bill_Mst_Br.bill_ser= Installment_Br.bill_ser 
                Begin    
                       Begin         
                              Insert Into Installment (  Doc_Type, 
                       Exception
                       End;     
                End;
                   Select   I_No, 
                     From Ias_Bill_Mst_Br , Installment_Br
                        Where Ias_Bill_Mst_Br.bill_ser= Installment_Br.bill_ser 
                          Group By I_No,I_Date,Installment_Br.Cheque_No,Installment_Br.Cheque_Due_Date,Installment_Br.C_Code,A_Cy, 
                Begin    
                      Begin         
                              Insert Into Installment ( Doc_Type, 
                      Exception
                      End;     
                End;
PROCEDURE Insert_Other_Charges (P_BillNo      Number,
               Select amt,per,sc_no,Other_Charges_Br.a_code,a_cy,ac_rate,inv_item,rcrd_no,Other_Charges_Br.brn_no,Other_Charges_Br.brn_year,
                 From Ias_Bill_Mst_Br , Other_Charges_Br
                where Ias_Bill_Mst_Br.bill_ser= Other_Charges_Br.bill_ser                   
                Begin    
                       Begin         
                              Insert Into Other_Charges ( Bill_Type, 
                       Exception
                      End;     
                End;
                       Select nvl(amt,0) amt,nvl(per,0) per,sc_no,Other_Charges_Items_Br.a_code,a_cy,ac_rate,i_code,
                         From Ias_Bill_Mst_Br , Other_Charges_Items_Br
                        where Ias_Bill_Mst_Br.bill_ser= Other_Charges_Items_Br.bill_ser 
                Begin                          
                        Begin                            
                              Insert Into Other_Charges_Items 
                         Exception
                          End;               
            End;
               Select nvl(Sum(amt),0) amt,nvl(per,0) per,sc_no,Other_Charges_Br.a_code,a_cy,ac_rate,inv_item,Other_Charges_Br.brn_no,Other_Charges_Br.brn_year,
                 From Ias_Bill_Mst_Br , Other_Charges_Br
                where Ias_Bill_Mst_Br.bill_ser= Other_Charges_Br.bill_ser 
                  Group by nvl(per,0),sc_no,Other_Charges_Br.a_code,a_cy,ac_rate,inv_item,Other_Charges_Br.brn_no,Other_Charges_Br.brn_year,
                Begin    
                       Begin         
                              Insert Into Other_Charges ( Bill_Type, 
                     Exception
                      End;     
                End;
                       Select nvl(Sum(amt),0) amt,nvl(per,0) per,sc_no,Other_Charges_Items_Br.a_code,a_cy,ac_rate,i_code,
                         From Ias_Bill_Mst_Br , Other_Charges_Items_Br
                        where Ias_Bill_Mst_Br.bill_ser= Other_Charges_Items_Br.bill_ser 
                          Group by nvl(per,0),sc_no,Other_Charges_Items_Br.a_code,a_cy,ac_rate,i_code,Itm_Unt,p_size ,rcrd_no,Other_Charges_Items_Br.brn_no,
         Begin                        
                          Begin            
                              Insert Into Other_Charges_Items ( BILL_TYPE, 
                         Exception
                          End;               
                End;
Procedure Insert_Other_Charges_Sr ( P_Rt_Billno      Number,
               Select amt,per,sc_no,Other_Charges_Br.a_code,a_cy,ac_rate,inv_item,rcrd_no,Other_Charges_Br.brn_no,Other_Charges_Br.brn_year,
                 From Ias_Rt_Bill_Mst_Br , Other_Charges_Br
                where Ias_Rt_Bill_Mst_Br.Rt_Bill_ser= Other_Charges_Br.Bill_ser                   
                Begin    
                       Begin         
                              Insert Into Other_Charges ( Bill_Type, 
                       Exception
                      End;     
                End;
                       Select nvl(amt,0) amt,nvl(per,0) per,sc_no,Other_Charges_Items_Br.a_code,a_cy,ac_rate,i_code,
                         From Ias_Rt_Bill_Mst_Br , Other_Charges_Items_Br
                        where Ias_Rt_Bill_Mst_Br.Rt_Bill_ser= Other_Charges_Items_Br.Bill_ser 
                Begin                          
                        Begin                            
                              Insert Into Other_Charges_Items ( Bill_TYPE, 
                         Exception
                          End;               
            End;
               Select nvl(Sum(amt),0) amt,nvl(per,0) per,sc_no,Other_Charges_Br.a_code,a_cy,ac_rate,inv_item,Other_Charges_Br.brn_no,Other_Charges_Br.brn_year,
    From Ias_Rt_Bill_Mst_Br , Other_Charges_Br
                where Ias_Rt_Bill_Mst_Br.Rt_Bill_ser= Other_Charges_Br.Bill_ser 
                  Group by per,sc_no,Other_Charges_Br.a_code,a_cy,ac_rate,inv_item,Other_Charges_Br.brn_no,Other_Charges_Br.brn_year,
                Begin    
                       Begin         
                              Insert Into Other_Charges ( Bill_Type, 
                     Exception
                      End;     
                End;
                       Select nvl(Sum(amt),0) amt,nvl(per,0) per,sc_no,Other_Charges_Items_Br.a_code,a_cy,ac_rate,i_code,
                         From Ias_Rt_Bill_Mst_Br,Other_Charges_Items_Br
                        where Ias_Rt_Bill_Mst_Br.Rt_Bill_ser= Other_Charges_Items_Br.Bill_ser 
                          Group by per,sc_no,Other_Charges_Items_Br.a_code,a_cy,ac_rate,i_code,Itm_Unt,p_size ,rcrd_no,Other_Charges_Items_Br.brn_no,
                    Begin                        
                          Begin            
                              Insert Into Other_Charges_Items ( Bill_TYPE, 
                         Exception
                          End;               
                End;
PROCEDURE Check_Avl_Qty ( P_Doc_Type Number) IS
             Insert Into Ias_pos_minus_qty_Tmp(I_Code ,Itm_Unt,w_code ,expire_date,batch_no,p_qty,avl_qty,Brn_No)
                Select I_code ,Itm_Unt,w_code,expire_date,batch_no,p_qty,avl_qty,Brn_No From(
                            Select Ias_Bill_Dtl_Br.I_code ,
                         From Ias_Bill_Mst_Br ,Ias_Bill_Dtl_Br
                                Where Ias_Bill_Mst_Br.Bill_Ser=Ias_Bill_Dtl_Br.Bill_Ser                          
                                  And Exists (Select 1 From Ias_Bill_Mst_Br_Tmp Where Bill_Ser = Ias_Bill_Mst_Br.Bill_Ser And RowNum <=1 )
                            Group by Ias_Bill_Dtl_Br.I_code,Ias_Bill_Dtl_Br.W_code, To_Date(Ias_Bill_Dtl_Br.Expire_Date,'DD/MM/YYYY'), Ias_Bill_Dtl_Br.Batch_No,Ias_Bill_Mst_Br.Brn_No)
                            Where nvl(Avl_Qty,0)-nvl(p_qty,0)< 0 ;
             Insert Into Ias_pos_minus_qty_Tmp(I_code ,Itm_Unt,w_code ,expire_date,batch_no,p_qty,avl_qty,Brn_No)
                Select I_code ,Itm_Unt,w_code,expire_date,batch_no,p_qty,avl_qty,Brn_No From(
                            Select Ias_Outgoing_Dtl_Br.I_code ,
                                 From Ias_Outgoing_Mst_Br ,Ias_Outgoing_Dtl_Br
                                Where Ias_Outgoing_Mst_Br.Out_Ser=Ias_Outgoing_Dtl_Br.Out_Ser
                                  And Exists (Select 1 From Ias_Outgoing_Mst_Br_Tmp Where Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser And RowNum <=1  )                          
                            Group by Ias_Outgoing_Dtl_Br.I_code,Ias_Outgoing_Dtl_Br.W_code, To_Date(Ias_Outgoing_Dtl_Br.Expire_Date,'DD/MM/YYYY'), Ias_Outgoing_Dtl_Br.Batch_No,Ias_Outgoing_Dtl_Br.Brn_No)
                            Where nvl(Avl_Qty,0)-nvl(p_qty,0)< 0 ;                            
      Insert Into Ias_pos_minus_qty_Tmp(I_code ,Itm_Unt,w_code ,expire_date,batch_no,p_qty,avl_qty,Brn_No)
                Select I_code ,Itm_Unt,w_code,expire_date,batch_no,p_qty,avl_qty,Brn_No From(
                            Select Ias_Whtrns_Dtl_Br.I_code ,
                                 From Ias_Whtrns_Mst_Br ,Ias_Whtrns_Dtl_Br
                                Where Ias_Whtrns_Mst_Br.Tr_Ser=Ias_Whtrns_Dtl_Br.Tr_Ser                          
                                  And Exists (Select 1 From Ias_Whtrns_Mst_Br_Tmp Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And RowNum <=1  )
                            Group by Ias_Whtrns_Dtl_Br.I_code,Ias_Whtrns_Dtl_Br.W_code, To_Date(Ias_Whtrns_Dtl_Br.Expire_Date,'DD/MM/YYYY'), Ias_Whtrns_Dtl_Br.Batch_No,Ias_Whtrns_Dtl_Br.Brn_No)
                            Where nvl(Avl_Qty,0)-nvl(p_qty,0)< 0 ; 
  Exception When Others Then Null;
Function Get_Bill_No (  P_Invoicing_Serials In Number   ,
Begin    
           Select Nvl(Max(To_Number(Bill_No)),0) +1 
           From Ias_Bill_Mst 
        Where Brn_No =P_Brn_No;
              Select Nvl(Max(To_Number(Bill_No)),0) +1 Into V_Bill_No From Ias_Bill_Mst 
               Where Bill_Doc_Type = P_Bill_Doc_Type
              Select Nvl(Max(To_Number(Bill_No)),0)+1 Into V_Bill_No From Ias_Bill_Mst 
               Where Cc_Code In 
                    (Select Cc_Code From Cost_Centers
                      Where Nvl(C_Sr,0)=(Select Nvl(C_Sr,0) From Cost_Centers 
                                          Where Cc_Code=P_Cc_Code))
            Select Nvl(Max(To_Number(Bill_No)),0) +1 
            From Ias_Bill_Mst 
             Where Bill_Doc_Type = P_Bill_Doc_Type
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 Into V_Bill_No From Ias_Bill_Mst 
                   --Where W_Code=V_W_Code;              
                   Where W_Code In 
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=(Select Nvl(W_Ser,0) From Warehouse_Details 
                                          Where W_Code= P_W_Code))
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 
                   From Ias_Bill_Mst
                   Where Bill_Doc_Type=P_Bill_Doc_Type 
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 Into V_Bill_No From Ias_Bill_Mst 
                   Where Si_Type=P_Si_Type
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 
                   From Ias_Bill_Mst
                   Where Si_Type=P_Si_Type
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 
                   From Ias_Bill_Mst
                   Where Si_Type       = P_Si_Type
 Exception When Others Then
Function Get_Bill_No_Br (  P_Invs In Number   ,
Begin    
           Select Nvl(Max(To_Number(Bill_No)),0) +1 
           From Ias_Bill_Mst_Br 
        Where Brn_No =P_Brn_No;
              Select Nvl(Max(To_Number(Bill_No)),0) +1 
               Into V_Bill_No From Ias_Bill_Mst_Br 
               Where Bill_Doc_Type = P_Bill_Doc_Type
              Select Nvl(Max(To_Number(Bill_No)),0)+1 
              From Ias_Bill_Mst_Br 
               Where Cc_Code In 
                    (Select Cc_Code From Cost_Centers
                      Where Nvl(C_Sr,0)=(Select Nvl(C_Sr,0) From Cost_Centers 
                                          Where Cc_Code=P_Cc_Code))
            Select Nvl(Max(To_Number(Bill_No)),0) +1 
            From Ias_Bill_Mst_Br 
             Where Bill_Doc_Type = P_Bill_Doc_Type
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 
                   From Ias_Bill_Mst_Br 
                   --Where W_Code=V_W_Code;              
                   Where W_Code In 
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=(Select Nvl(W_Ser,0) From Warehouse_Details 
                                          Where W_Code= P_W_Code))
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 
                   From Ias_Bill_Mst_Br
                   Where Bill_Doc_Type=P_Bill_Doc_Type 
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 
                   From Ias_Bill_Mst_Br 
                   Where Si_Type=P_Si_Type
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 
                   From Ias_Bill_Mst_Br
                   Where Si_Type=P_Si_Type
                  Select Nvl(Max(To_Number(Bill_No)),0) +1 
                   From Ias_Bill_Mst_Br
                   Where Si_Type       = P_Si_Type
 Exception When Others Then
Function Get_Bill_Ser ( P_Invs In Number ,
 Exception When Others Then
 FUNCTION Get_Rt_Bill_No ( P_Invs_Sr          In Number,
Begin    
           Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
           From Ias_Rt_Bill_Mst
          Where Brn_No =P_brn_no;
              Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 Into V_Bill_No From Ias_Rt_Bill_Mst 
               Where Rt_Bill_Doc_Type=P_Bill_Doc_Type
              Select Nvl(Max(To_Number(Rt_Bill_No)),0)+1 Into V_Bill_No From Ias_Rt_Bill_Mst 
               Where Cc_Code In 
                    (Select Cc_Code From Cost_Centers
                      Where Nvl(C_Sr,0)=(Select Nvl(C_Sr,0) From Cost_Centers 
                                          Where Cc_Code=P_Cc_Code))
            Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
            From Ias_Rt_Bill_Mst 
             Where Rt_Bill_Doc_Type=P_Bill_Doc_Type
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 Into V_Bill_No From Ias_Rt_Bill_Mst 
                   --Where W_Code=P_W_Code;              
                   Where W_Code In 
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=(Select Nvl(W_Ser,0) From Warehouse_Details 
                                          Where W_Code=P_W_Code))
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
                   From Ias_Rt_Bill_Mst
                   Where Rt_Bill_Doc_Type=P_Bill_Doc_Type 
              Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 Into V_Bill_No From Ias_Rt_Bill_Mst 
               Where Sr_Type=P_Sr_Type
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
                   From Ias_Rt_Bill_Mst
                   Where Sr_Type=P_Sr_Type
 Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
                   From Ias_Rt_Bill_Mst
                   Where Sr_Type=P_Sr_Type
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
                   From Ias_Rt_Bill_Mst
                   Where Sr_Type=P_Sr_Type
 Exception When Others Then
FUNCTION Get_Rt_Bill_No_Br ( P_Invs_Sr          In Number,
Begin    
           Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
           From Ias_Rt_Bill_Mst_Br
          Where Brn_No =P_brn_no;
              Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 Into V_Bill_No From Ias_Rt_Bill_Mst_Br 
               Where Rt_Bill_Doc_Type=P_Bill_Doc_Type
              Select Nvl(Max(To_Number(Rt_Bill_No)),0)+1 Into V_Bill_No From Ias_Rt_Bill_Mst_Br 
               Where Cc_Code In 
                    (Select Cc_Code From Cost_Centers
                      Where Nvl(C_Sr,0)=(Select Nvl(C_Sr,0) From Cost_Centers 
                                          Where Cc_Code=P_Cc_Code))
            Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
            From Ias_Rt_Bill_Mst_Br 
             Where Rt_Bill_Doc_Type=P_Bill_Doc_Type
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 Into V_Bill_No From Ias_Rt_Bill_Mst_Br 
                   --Where W_Code=P_W_Code;              
                   Where W_Code In 
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=(Select Nvl(W_Ser,0) From Warehouse_Details 
                                          Where W_Code=P_W_Code))
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
                   From Ias_Rt_Bill_Mst_Br
                   Where Rt_Bill_Doc_Type=
              Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 Into V_Bill_No From Ias_Rt_Bill_Mst_Br 
               Where Sr_Type=P_Sr_Type
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
                   From Ias_Rt_Bill_Mst_Br
                   Where Sr_Type=P_Sr_Type
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
                   From Ias_Rt_Bill_Mst_Br
                   Where Sr_Type=P_Sr_Type
                  Select Nvl(Max(To_Number(Rt_Bill_No)),0) +1 
                   From Ias_Rt_Bill_Mst_Br
                   Where Sr_Type=P_Sr_Type
 Exception When Others Then
FUNCTION Get_Rt_Bill_Ser (  P_Invs_Sr       IN Number,
 Exception When Others Then
Function Get_Gr_No_Br ( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
        Begin
         Select Nvl(Max(Gr_No),0)+1  
            From Gr_Note_Br
             Where Brn_No = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Gr_No),0)+1  
            From Gr_Note_Br
             Where Brn_No = P_Brn_No
                    (Select W_Code From Warehouse_Details
                      Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                            From Warehouse_Details 
                                             Where W_Code = P_W_Code) ) ;
        Exception
        Begin
         Select Nvl(Max(Gr_No),0)+1  
            From Gr_Note_Br
             Where Brn_No     = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Gr_No),0)+1  
            From Gr_Note_Br
             Where Brn_No     = P_Brn_No
        Exception
 Exception
FUNCTION Get_Out_No_Br ( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
        Begin
         Select Nvl(Max(Out_No),0)+1  
            From Ias_Outgoing_Mst_Br
             Where Brn_No     = P_Brn_No ;
        Exception
        Begin
         Select Nvl(Max(Out_No),0)+1  
            From Ias_Outgoing_Mst_Br
             Where Brn_No     = P_Brn_No
                      (Select W_Code From Warehouse_Details
                         Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                                From Warehouse_Details 
                                                 Where W_Code = P_W_Code) ) ;
        Exception
        Begin
         Select Nvl(Max(Out_No),0)+1  
            From Ias_Outgoing_Mst_Br
             Where Brn_No   = P_Brn_No
        Exception
        Begin
         Select Nvl(Max(Out_No),0)+1  
            From Ias_Outgoing_Mst_Br
             Where Brn_No    = P_Brn_No
        Exception
 Exception
Function Get_Out_Br_Ser (   P_Outgoing_Serial In Number ,
Begin              
 Exception When Others Then
Function Get_Gr_Br_Ser (   P_Incoming_Serial In Number ,
Begin              
 Exception When Others Then
Procedure Post_Transfer_In  ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  Is    
Begin  
    Begin
      Select Lang_No InTo V_Lang_No From Ias_Sys.Lang_Def Where Nvl(Flg_St,1)= 1 And Lang_Dflt=1 And Rownum<=1;
    Exception WHen Others Then
    End;  
  Begin
      Select Nvl(Use_Price_Whtrns_Rec_Cost,0) ,
       From Ias_Para_Inv ;
  Exception WHen Others Then
    Raise_Application_Error(-20001,'Error When Select From Para In Post_Transfer_In (8) '||Chr(13)||SqlErrm);
  End;  
  Begin
        Select Allow_Enter_Zero_Cost InTo V_Allow_Enter_Zero_Cost From Privilege_Fixed Where U_Id=P_User_No And RowNum<=1;
  Exception WHen Others Then
      Raise_Application_Error(-20002,'Error When Select From Privilege_Fixed In Post_Transfer_In , '||Chr(13)||SqlErrm);
  End; 
    Insert Into Ias_Whtrns_Mst_Br_Tmp (Tr_No,Tr_Ser) Select Tr_No,Tr_Ser 
                                                       From Ias_Whtrns_Mst_Br 
                                                      Where Tr_InOut_Type=2 
                                                        And Exists ( Select 1 From Ias_Whtrns_Mst
                                                                      Where Tr_Inout_Type = 1 
                                                        And Exists(Select 1 From Ias_Whtrns_Dtl_Br Where Tr_Ser=Ias_Whtrns_Mst_Br.Tr_Ser And Rownum<=1)
                                                        And Not Exists(Select 1 From Ias_Whtrns_Mst Where Tr_Ser=Ias_Whtrns_Mst_Br.Tr_Ser And Rownum<=1);
     Cursor C_Tr_Mst Is Select Tr_Inout_Type, Tr_Type, Tr_No, 
                        From  Ias_Whtrns_Mst_Br
                         Where Tr_InOut_Type  = 2                           
                         And Exists (Select 1 From Ias_Whtrns_Mst_Br_Tmp Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser  And RowNum <=1  )              
                         Order By Ad_Date ; 
      Begin  
              Begin    
                   Insert Into Ias_Whtrns_Mst(  Tr_Inout_Type, Tr_Type, Tr_No, 
              Exception
                 Raise_Application_Error(-20005,'Error When Insert Into Ias_Whtrns_Mst '||Chr(13)||SqlErrm);  
              End;        
               Begin
               Exception 
                   Raise_Application_Error(-20006,'Error When Insert Into Gr_Note  '||Chr(13)||SqlErrm);   
              End;                                                     
                Cursor C_Tr_Dtl Is Select   Tr_Inout_Type, Tr_Type, Tr_No, 
                              From Ias_Whtrns_Dtl_Br
                                Where Ias_Whtrns_Dtl_Br.Tr_Ser  = J.Tr_Ser
             Begin
                      Begin
                         Select Decode(V_Use_Price_Whtrns_Rec_Cost,1,Nvl(I.I_Price,0),Nvl(Stk_Cost,0))
                          From Ias_Whtrns_Dtl
                           Where Tr_Inout_Type  = 1
                      Exception
                             Raise_Application_Error(-20006,'Error When Get Cost From Ias_Whtrns_Dtl Transfer '||Chr(13)
                      Begin
                          Select Ias_Doc_Seq.NextVal Into V_Seq From Dual;                                          
                      Exception
                      Begin 
                            Insert Into Ias_Whtrns_Dtl( Tr_Inout_Type, Tr_Type, Tr_No, 
                      Exception
                        Raise_Application_Error(-20008,'Error When Insert Into Ias_Whtrns_Dtl '||Chr(13)||SqlErrm);      
                      End; 
                      Begin    
                      Exception 
                      End;
                          Begin
                              Select 1 InTo V_Cnt
                               From Ias_Itm_Attach_Movement_Br
                               Where Doc_Ser   = J.Tr_Ser
                          Exception When Others Then                                                                          
                          End;               
                          Begin
                              Insert InTo Ias_Itm_Attach_Movement(  I_Code, Itm_Unt, P_Size, 
                               Select   I_Code, Itm_Unt, P_Size, 
                                   From Ias_Itm_Attach_Movement_Br
                                   Where Doc_Ser   = J.Tr_Ser
                          Exception When Others Then                                                    
                          End;       
                           Begin
                           Exception
                      Begin             
                      Exception 
                      End;
                      --## Insert Into Gr_Detail 
                      Begin
                      Exception 
                      End;
              --## Insert Into Item_movement
                  Begin
                  Exception 
                  End; 
             --## Update Warehouse Transfer Proc
             Begin
                 Update  Ias_Whtrns_Mst
                   Where Tr_Inout_Type  = 1
             Exception
                 Begin
                       Insert Into Inv_Wrhs_Trnsfr_Expns ( Doc_No, Doc_Ser, Tr_Inout_Type, Doc_Desc, Ref_No, A_Code,
                                                                       Select Doc_No, Doc_Ser, Tr_Inout_Type, Doc_Desc, Ref_No, A_Code,
                                                                           From Inv_Wrhs_Trnsfr_Expns_Br
                                                                          Where Doc_Ser = J.Tr_Ser;
                Exception When No_Data_found Then Null;
                End;
             Begin
             Exception 
             End;  
      --## Update Ias_Bill_Mst_Br        
      Begin     
          Update Ias_Whtrns_Mst_Br 
           Where Tr_InOut_Type  = 2
             And Exists (Select 1 From Ias_Whtrns_Mst_Br_Tmp Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser  And RowNum <=1  ) 
             And Exists (Select 1 From Ias_Whtrns_Mst Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser  And RowNum <=1  ) ;
      Exception
        Raise_Application_Error(-20016,'Error When Update Tr_Post In  Update Ias_Whtrns_Mst_Br ');
    End;
Procedure Post_Transfer_Out_In ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  IS
  Cursor Wt_M Is Select M.Tr_Ser
                   From Ias_Whtrns_Mst_Br M
                  Where M.Tr_InOut_Type  = 2
                    And Exists(Select 1 From Ias_Whtrns_Dtl_Br Where Tr_Ser=M.Tr_Ser And Rownum<=1)
                    And Not Exists(Select 1 From Ias_Whtrns_Mst Where Tr_Ser=M.Tr_Ser And Rownum<=1)
                  Order By  M.Ad_Date;
Procedure Post_OutGoing ( P_Doc_Ser  In Ias_Outgoing_Mst.Out_Ser%Type   Default Null , 
    Begin
      Select Lang_No InTo V_Lang_No From Ias_Sys.Lang_Def Where Nvl(Flg_St,1)= 1 And Lang_Dflt=1 And Rownum<=1;
    Exception WHen Others Then
    End;  
   --# To Insert Into  Ias_pos_minus_qty Temporary Table 
  Begin
      Select Nvl(Costing_Type,0)              ,
           From Ias_Para_Inv ;
  Exception WHen Others Then
    Raise_Application_Error(-20001,'Error When Select From Para In Post_OutGoing '||Chr(13)||SqlErrm);
  End;  
  Begin
        Select Allow_Enter_Zero_Cost InTo V_Allow_Enter_Zero_Cost From Privilege_Fixed Where U_Id=P_User_No And RowNum<=1;
  Exception WHen Others Then
      Raise_Application_Error(-20002,'Error When Select From Privilege_Fixed In Post_OutGoing'||Chr(13)||SqlErrm);
  End;
  Insert Into Ias_Outgoing_Mst_Br_Tmp (Out_No,Out_Ser) Select Out_No , Out_Ser 
                                                       From Ias_Outgoing_Mst_Br 
                                                      Where Out_Ser=Nvl(P_Doc_Ser,Out_Ser) 
                                                        And Exists(Select 1 From Ias_Outgoing_Dtl_Br Where Out_Ser=Ias_Outgoing_Mst_Br.Out_Ser And Rownum<=1)
                                                        And Not Exists(Select 1 From Ias_Outgoing_Mst Where Out_Ser=Ias_Outgoing_Mst_Br.Out_Ser And Rownum<=1);
  Begin
      Select 1 Into V_Cnt From Ias_pos_minus_qty_Tmp Where RowNum <=1 ;
   Exception
        Begin
            Delete Ias_Outgoing_Mst_Br_Tmp M Where Exists ( Select 1 From Ias_Outgoing_Dtl_Br A,Ias_Pos_Minus_Qty_Tmp B
                                                             Where A.Out_Ser    = M.Out_Ser 
       Exception When Others Then Null;
       End;                                                    
     Cursor Sm Is Select    Out_No, 
     From Ias_Outgoing_Mst_Br
       Where Exists (Select 1 From Ias_Outgoing_Mst_Br_Tmp Where Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser  
         Order By  Ad_Date;
    Begin ---(11)
        Begin
             Insert Into Ias_Outgoing_Mst ( Out_No, 
        Exception
            Raise_Application_Error(-20003,'Error When Insert Into Ias_Outgoing_Mst '||Chr(13)||SqlErrm);  
        End;        
           Begin
           Exception
               Raise_Application_Error(-20004,'Error When Insert Into Installment '||Chr(13)||SqlErrm);  
           End;          
         Cursor BD Is Select    Out_No,
                From Ias_Outgoing_Dtl_Br
                Where Out_ser=J.Out_ser
                 And Exists (Select 1 From Ias_Outgoing_Mst_Br_Tmp Where Ias_Outgoing_Mst_Br_Tmp.Out_Ser = Ias_Outgoing_Dtl_Br.Out_Ser  And RowNum <=1  );                
    Begin --- (12)
            Begin
            Exception 
            End;                     
            Select Ias_Doc_Seq.NextVal InTo V_Seq From Dual;
            Begin
              Insert Into Ias_Outgoing_Dtl( Out_No,
            Exception
            End;
                Begin
                      Select 1 InTo V_Cnt
                               From Ias_Itm_Attach_Movement_Br
                               Where Doc_Ser   = I.Out_Ser
                Exception 
                     Raise_Application_Error(-20007,'Error When Select From Ias_Itm_Attach_Movement_Br '||Chr(13)||SqlErrm);                                              
                End;               
                Begin
                     Insert InTo Ias_Itm_Attach_Movement( I_Code, Itm_Unt, P_Size, 
                                                    Select I_Code, Itm_Unt, P_Size, 
                                                      From Ias_Itm_Attach_Movement_Br
                                                     Where Doc_Ser   = J.Out_Ser
                Exception When Others Then                                                                          
                  Raise_Application_Error(-20008,'Error When Insert Into Ias_Itm_Attach_Movement '||Chr(13)||SqlErrm);                                          
                End;       
              Begin
              Exception
                 Raise_Application_Error(-20009,'Error When Insert Into Sale Cost '||Chr(13)||SqlErrm);    
     End; --(12)        
    Begin
     Exception 
    End;                                                
    --## Update Ias_Outgoing_Mst_Br        
    Begin            
          Update Ias_Outgoing_Mst_Br Set Out_Post=1
           Where nvl(Out_Post,0)=0                    
             And Exists (Select 1 From Ias_Outgoing_Mst Where Out_Ser=Ias_Outgoing_Mst_Br.Out_Ser And RowNum<=1)
             And Exists (Select 1 From Ias_Outgoing_Mst_Br_Tmp Where Ias_Outgoing_Mst_Br_Tmp.Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser  And RowNum <=
    Exception
        Raise_Application_Error(-20011,'Error When Update Out_Post In  Update Ias_Outgoing_Mst_Br ');
End;    
PROCEDURE Post_Sales_Sum Is     
   --# To Insert Into  Ias_pos_minus_qty Temporary Table 
   Begin
         If    Ias_Gen_Pkg.Get_Cnt ('Select Use_Expire_Date From Ias_Para_Inv Where RowNum <= 1 ') = 0   
           And Ias_Gen_Pkg.Get_Cnt ('Select Use_Batch_No From Ias_Para_Inv Where RowNum <= 1 ') = 0  Then
                         Insert Into IAS_POS_MINUS_QTY_TMP(I_Code ,Itm_Unt,W_Code ,Expire_Date,Batch_No,P_Qty,Avl_Qty,Brn_No)        
                            Select I_Code ,Itm_Unt,W_Code,Expire_Date,Batch_No,P_Qty,Avl_Qty,Brn_No From(
                                            Select Ias_Bill_Dtl_Br.I_Code                                        ,
                                                     From Ias_Bill_Mst_Br ,Ias_Bill_Dtl_Br
                                                    Where Ias_Bill_Mst_Br.Bill_No = Ias_Bill_Dtl_Br.Bill_No                          
                                                Group By Ias_Bill_Dtl_Br.Brn_No,Ias_Bill_Dtl_Br.I_Code,Ias_Bill_Dtl_Br.W_Code,Nvl(Ias_Bill_Dtl_Br.Expire_Date,'01/01/1900'), Nvl(Ias_Bill_Dtl_Br.Batch_No,'0')
                         Insert Into IAS_POS_MINUS_QTY_TMP(I_Code ,Itm_Unt,W_Code ,Expire_Date,Batch_No,P_Qty,Avl_Qty,Brn_No)
                            Select I_Code ,Itm_Unt,W_Code,Expire_Date,Batch_No,P_Qty,Avl_Qty,Brn_No From(
                                            Select Ias_Bill_Dtl_Br.I_Code                                        ,
                                                     From Ias_Bill_Mst_Br ,Ias_Bill_Dtl_Br
                                                    Where Ias_Bill_Mst_Br.Bill_No = Ias_Bill_Dtl_Br.Bill_No                          
                                                Group By Ias_Bill_Dtl_Br.Brn_No,Ias_Bill_Dtl_Br.I_Code,Ias_Bill_Dtl_Br.W_Code,Nvl(Ias_Bill_Dtl_Br.Expire_Date,'01/01/1900'), Nvl(Ias_Bill_Dtl_Br.Batch_No,'0')
   Exception 
       Raise_Application_Error ( -20001,' Err. When Insert Into Temp IAS_POS_MINUS_QTY_TMP Table ');
   End;
   Begin
      Select 1 Into V_Cnt
       From  IAS_POS_MINUS_QTY_TMP
        Where RowNum <=1 ;
    Begin
           Select Nvl(Costing_Type,0)   ,
           From Ias_Para_Inv ,Ias_Para_Ar ,IAS_PARA_GEN;
    Exception
    Insert Into Ias_Bill_Mst_Br_Tmp Select Bill_No , Bill_Ser From Ias_Bill_Mst_Br Where Nvl(Bill_Post,0) = 0 ;
      Cursor SM Is Select   Distinct    Bill_Date,
         From Ias_Bill_Mst_Br
           Where bill_doc_type<>4
             And Exists(Select 1 From Ias_Bill_Dtl_Br Where Bill_Ser=Ias_Bill_Mst_Br.Bill_Ser And RowNum<=1)
             And Exists (Select 1 From Ias_Bill_Mst_Br_Tmp Where Ias_Bill_Mst_Br_Tmp.Bill_Ser = Ias_Bill_Mst_Br.Bill_Ser  And RowNum <=1  )
          Order By  Bill_Date,
    Begin ---(11)        
            Begin
                  Select Sum(Bill_Amt) ,
                   From  Ias_Bill_Mst_Br
                    Where  Bill_Doc_Type <> 4
                      And Exists (Select 1 From Ias_Bill_Mst_Br_Tmp Where Bill_Ser = Ias_Bill_Mst_Br.Bill_Ser  And RowNum <=1  )
            Exception When Others Then
                 Raise_Application_Error(-20001,'Err. When Select Amt From Bills '||CHr(13)||SqlErrm);
            End;                       
           Begin
           Exception When Others Then
          Begin
           Exception When Others Then
            Begin
            Exception 
            End;  
            Begin
                 Insert Into Ias_Bill_Mst(  Bill_Doc_Type, 
                            --'Post From Light System', 
        Exception
            Raise_Application_Error(-20002,'Err. When Insert Into Ias_Bill_Mst '||CHR(13)||SqlErrm);             
        End;        
        Begin
        Exception
            Raise_Application_Error(-20003,'Err. When Insert Into Others Charges '||CHr(13)||SqlErrm);                           
        End;      
             Begin
           Exception
           End;         
             Cursor BD Is Select   Sum(Ias_Bill_Dtl_Br.I_Qty)          I_qty,
                        From Ias_Bill_Mst_Br,Ias_Bill_Dtl_Br
                            Where Ias_Bill_Mst_Br.Bill_Ser=Ias_Bill_Dtl_Br.Bill_Ser
                                And Exists (Select 1 From Ias_Bill_Mst_Br_Tmp W
                      Group by Ias_Bill_Dtl_Br.I_Code ,
                     Order By  Ias_Bill_Mst_Br.Bill_Date,             
         Begin --- (12)         
                 Begin    
                 Exception 
                 End;                         
                 Select Ias_Doc_Seq.NextVal InTo V_Seq From Dual;                    
                 Begin
  Insert Into Ias_Bill_Dtl( Bill_Doc_Type, 
                 Exception
                 End; 
                     Begin
                          Insert InTo Ias_Itm_Attach_Movement(  I_Code, Itm_Unt, P_Size, 
                            Select  I_Code, Itm_Unt, P_Size, 
                               From Ias_Bill_Mst_Br,Ias_Itm_Attach_Movement_Br
                                   Where Ias_Bill_Mst_Br.Bill_Ser           = Ias_Itm_Attach_Movement_Br.Doc_Ser
                                    And Exists (Select 1 From Ias_Bill_Mst_Br_Tmp Where Bill_Ser = Ias_Bill_Mst_Br.Bill_Ser  And RowNum <=1  )
                           Group by  I_Code, Itm_Unt, P_Size, 
                     Exception 
                     End;                     
                Begin
                                                            P_Adesc       => 'Post From Light System' ,
                     Exception When Others Then
                     END;    
         End; --(12)     
            Begin
            Exception 
            End;                    
             Begin
                                        Insert Into Gnr_Tax_Itm_Movmnt (Doc_No, 
                                                               Select    D.Bill_No, 
                                                                   From Ias_Bill_Mst_Br Bm,Ias_Bill_Dtl d,Gnr_Tax_Itm_Movmnt_Br M
                                                                           Where Bm.Bill_Ser 
                                                       Group By D.Bill_No, 
                 Exception When Others Then                                                    
                End;
      Begin
        Insert Into Ias_Point_Calc_Trns(Trns_Date, Cust_Code, Mobile_No, Point_Typ_No, Bill_No, Rt_Bill_No, Doc_Amt, A_Cy, Point_Cnt, Trns_Type, Machine_No, 
                                   Select T.Trns_Date, T.Cust_Code, T.Mobile_No, T.Point_Typ_No, V_BILL_NO, Null, T.Doc_Amt, T.A_Cy, T.Point_Cnt, T.Trns_Type,
                                     From Ias_Bill_Mst_Br Bm, Ias_Point_Calc_Trns_B
                                    Where Bm.Bill_Ser            = T.Doc_Srl
      Exception When Others Then                                                    
              Raise_Application_Error(-20003,'ERROR WHEN INSERT INTO Ias_Point_Calc_Trns'||Chr(13)||SqlErrm);                                                  
      End;   
         Begin
         Exception 
         End;  
            BEGIN
           Exception 
           END;                               
    --## Update Ias_Bill_Mst_Br        
    Begin
     Update  Ias_Bill_Mst_Br
       Where Bill_Doc_Type      <>4
          And Exists (Select 1 From Ias_Bill_Dtl_Br Where Bill_Ser=Ias_Bill_Mst_Br.Bill_Ser And Rownum<=1)
          And Exists (Select 1 From Ias_Bill_Mst_Br_Tmp Where Bill_Ser = Ias_Bill_Mst_Br.Bill_Ser  And RowNum <=1  ) ;
    Exception
  END;
PROCEDURE Post_Sales_Detail ( P_Doc_Ser  In Ias_Bill_Mst.Bill_Ser%Type   Default Null , P_Use_Adjstmnt In Number Default 0 , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  Is     
    Begin
      Select Lang_No InTo V_Lang_No From Ias_Sys.Lang_Def Where Nvl(Flg_St,1)= 1 And Lan
    Exception WHen Others Then
    End;  
   --# To Insert Into  Ias_pos_minus_qty Temporary Table 
  Begin
      Select Nvl(Costing_Type,0)   ,
           From Ias_Para_Inv ,Ias_Para_Ar ;
  Exception WHen Others Then
    Raise_Application_Error(-20001,'Error When Select From Para In Post_Sales_Detail '||Chr(13)||SqlErrm);
  End;  
  Begin
        Select Allow_Enter_Zero_Cost InTo V_Allow_Enter_Zero_Cost From Privilege_Fixed Where U_Id=P_User_No And RowNum<=1;
  Exception WHen Others Then
      Raise_Application_Error(-20002,'Error When Select From Privilege_Fixed In Post_Sales_Detail'||Chr(13)||SqlErrm);
  End;
  Insert Into Ias_Bill_Mst_Br_Tmp (Bill_No,Bill_Ser) Select Bill_No , Bill_Ser 
                                                       From Ias_Bill_Mst_Br 
                                                      Where Bill_Ser=Nvl(P_Doc_Ser,Bill_Ser) 
                                                        And Exists(Select 1 From Ias_Bill_Dtl_Br Where Bill_Ser=Ias_Bill_Mst_Br.Bill_Ser And Rownum<=1)
                                                        And Not Exists(Select 1 From Ias_Bill_Mst Where Bill_Ser=Ias_Bill_Mst_Br.Bill_Ser And Rownum<=1);
  Begin
      Select 1 Into V_Cnt From Ias_Pos_Minus_Qty_Tmp Where RowNum <=1 ;
   Exception
        Begin
            Delete Ias_Bill_Mst_Br_Tmp M Where Exists ( Select 1 From Ias_Bill_Dtl_Br A,Ias_Pos_Minus_Qty_Tmp B
                                                        Where A.Bill_Ser    = M.Bill_Ser 
       Exception When Others Then Null;
       End;                                                    
     Cursor Sm Is Select    Bill_Doc_Type           , 
                       From Ias_Bill_Mst_Br
                      Where Nvl(Bill_Post,0)=0         
                        And Exists (Select 1 From Ias_Bill_Mst_Br_Tmp Where Bill_Ser = Ias_Bill_Mst_Br.Bill_Ser  And RowNum <=1  )
                        Order By  Ad_Date;
    Begin ---(11)
         Begin
             Insert Into Ias_Bill_Mst(  Bill_Doc_Type           , 
        Exception
            Raise_Application_Error(-20003,'Err. When Insert Into Ias_Bill_Mst '||CHr(13)||SqlErrm);              
        End;        
           Begin        
          Exception
             Raise_Application_Error(-20004,'Err. When Insert Into Insert Installemnt '||CHr(13)||SqlErrm);                           
          End;  
        Begin
        Exception
            Raise_Application_Error(-20005,'Err. When Insert Into Others Charges '||CHr(13)||SqlErrm);                           
        End;                                         
           Begin
           Exception
           End;         
             Cursor BD Is Select    Bill_Doc_Type             , 
                               From Ias_Bill_Dtl_Br
                              Where Ias_Bill_Dtl_Br.Bill_Ser=J.Bill_Ser ;                
           Begin --- (12)
                     Begin    
                     Exception 
                     End;    
                     Select Ias_Doc_Seq.NextVal InTo V_Seq From Dual;                
                       Begin
                       Exception 
                       End;   
                   Begin
                         Insert Into Ias_Bill_Dtl(  Bill_Doc_Type       , 
                   Exception
                   End; 
                      Begin
                            Select 1 InTo V_Cnt
                           From Ias_Itm_Attach_Movement_Br
                           Where Doc_Ser   = J.bill_Ser
                      Exception 
                          Raise_Application_Error(-20010,'Err. When Get Data From Ias_Itm_Attach_Movement_Br '||Chr(13)||SqlErrm);                                                  
                      End;               
                      Begin
                          Insert InTo Ias_Itm_Attach_Movement( I_Code, Itm_Unt, P_Size, 
                                                        Select I_Code, Itm_Unt, P_Size, 
                                                          From Ias_Itm_Attach_Movement_Br
                                                          Where Doc_Ser   = J.bill_Ser
                      Exception 
                      End;       
           End; --(12)        
                Begin
                Exception 
                End;                    
           Begin
           Exception 
           End;
              begin
              Exception 
              End;                        
    --## Update Ias_Bill_Mst_Br        
    Begin
       Update Ias_Bill_Mst_Br
        Where Exists (Select 1 From Ias_Bill_Mst_Br_Tmp Where Bill_Ser = Ias_Bill_Mst_Br.Bill_Ser  And RowNum <=1  )
          And Exists (Select 1 From Ias_Bill_Mst Where Bill_Ser = Ias_Bill_Mst_Br.Bill_Ser  And RowNum <=1  );
    Exception
    END;                                                                                                     
PROCEDURE Post_Rt_Sales_Detail ( P_Doc_Ser  In Ias_Rt_Bill_Mst.Rt_Bill_Ser%Type Default Null , 
    Begin
      Select Lang_No InTo V_Lang_No From Ias_Sys.Lang_Def Where Nvl(Flg_St,1)= 1 And Lang_Dflt=1 And Rownum<=1;
    Exception WHe
    End;  
  Begin
      Select Use_Out_Bills,Invoicing_Serials_Sr,Costing_Type,Wtavg_Type,Use_Itm_Attach ,Stkcost_Fraction
        From Ias_Para_AR,Ias_Para_Inv  ,IAS_PARA_GEN  
       Where RowNum<=1;
  Exception WHen Others Then
    Raise_Application_Error(-20001,'Error When Select From Para In Post_Rt_Sales_Detail '||Chr(13)||SqlErrm);
  End;  
  Begin
        Select Allow_Enter_Zero_Cost InTo V_Allow_Enter_Zero_Cost From Privilege_Fixed Where U_Id=P_User_No And RowNum<=1;
  Exception WHen Others Then
      Raise_Application_Error(-20002,'Error When Select From Privilege_Fixed In Post_Rt_Sales_Detail'||Chr(13)||SqlErrm);
  End;
  Insert Into Ias_Rt_Bill_Mst_Br_Tmp (Rt_Bill_No,Rt_Bill_Ser) Select Rt_Bill_No , Rt_Bill_Ser 
                                                               From Ias_Rt_Bill_Mst_Br 
                                                              Where Rt_Bill_Ser=Nvl(P_Doc_Ser,Rt_Bill_Ser) 
                                                                And Exists(Select 1 From Ias_Rt_Bill_Dtl_Br Where Rt_Bill_Ser=Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser And Rownum<=1)
                                                                And Not Exists(Select 1 From Ias_Rt_Bill_Mst Where Rt_Bill_Ser=Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser And Rownum<=1);
       Cursor SRM Is Select Rt_Bill_Doc_Type  , 
             From Ias_Rt_Bill_Mst_Br
              Where nvl(Rt_Bill_Post,0)=0    
                And Exists (Select 1 From Ias_Rt_Bill_Mst_Br_Tmp Where Rt_Bill_Ser = Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser  And RowNum <=1  )
       Order By Ad_Date;
    Begin ---(11)
        Begin
          Insert Into Ias_Rt_Bill_Mst(  Rt_Bill_Doc_Type             , 
        Exception
            Raise_Application_Error(-20003,'Error When Insert Into Ias_Rt_Bill_Mst In Post Rt Sales , '||Chr(13)||SqlErrm);    
        End;        
    Begin
        Exception when Others Then
             Raise_Application_Error(-20004,'Error When Insert Into Gr_Note In Post Rt Sales'||Chr(13)||SqlErrm);
        End;
         Cursor SRD Is Select  Rt_Bill_Doc_Type                , 
                          From Ias_Rt_Bill_Dtl_Br             
                         Where Ias_Rt_Bill_Dtl_Br.Rt_bill_ser=J.Rt_bill_ser;     
    Begin --- (12)
         Begin
                        Begin 
                          Select  W_Code
                           From Warehouse_Details
                            Where Nvl(Main_Wcode,0) = 1  ;
                        Exception
            Select Ias_Doc_Seq.NextVal InTo V_Seq From Dual;
             Begin 
               Insert Into Ias_Rt_Bill_Dtl ( Rt_Bill_Doc_Type, 
              Exception
                    Raise_Application_Error(-20006,'Error When Insert Into Ias_Rt_Bill_Dtl  '||Chr(13)||SqlErrm);
              End;
                  Begin
                      Select 1 InTo V_Cnt
                               From Ias_Itm_Attach_Movement_Br
                           Where Doc_Ser   = J.rt_bill_Ser
                 Exception When Others Then                                                                          
                      Raise_Application_Error(-20007,'Error When Select Attach From Ias_Itm_Attach_Movement_Br , Attach Not Found (Rt Sales)'||Chr(1
                 End;               
                  Begin
                      Insert InTo Ias_Itm_Attach_Movement ( I_Code, Itm_Unt, P_Size,Attch_No1, Attch_Desc_No1, Attch_No2, Attch_Desc_No2, 
                                                     Select I_Code, Itm_Unt, P_Size, 
                                                       From Ias_Itm_Attach_Movement_Br
                                                      Where Doc_Ser   = J.rt_bill_Ser
                  Exception When Others Then                                                    
                      Raise_Application_Error(-20008,'Error In Insert InTo Ias_Itm_Attach_Movement (Rt Sales)'||Chr(13)||SqlErrm);                                                  
                  End;       
                            Begin    
                            Exception 
                            End;      
                           Begin
                           Exception when Others Then
                              Raise_Application_Error(-20010,'Error When Insert Into Gr Detail , (Rt Sales) '||Chr(13)||SqlErrm);
                           End;
                          --## Insert Into Item_movement        
                          Begin                                                    
                        Exception when Others Then
                          Raise_Application_Error(-20010,'Error When Insert Into Item Movement , (Rt Sales) '||Chr(13)||SqlErrm);
                        End;
                   End;                  
     End; --(12)
            Begin
          Exception When Others Then                                                    
             Raise_Application_Error(-20011,'Error When Insert Into Out Bills Tables , (Rt Sales)'||Chr(13)||SqlErrm);                                             
          End;         
     Begin
     Exception When Others Then
     End;
         BEGIN
         Exception When Others Then
         End;
    --## Update Ias_Rt_Bill_Mst_Br        
    Begin    
        Update Ias_Rt_Bill_Mst_Br Set Rt_Bill_post=1
         Where nvl(Rt_Bill_post,0)= 0                    
           And Exists (Select 1 From Ias_Rt_Bill_Mst_Br_Tmp Where Rt_Bill_Ser = Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser  And RowNum <=1  ) 
           And Exists (Select 1 From Ias_Rt_Bill_Mst Where Rt_Bill_Ser=Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser And RowNum<=1);
    Exception When Others Then
         Raise_Application_Error(-20013,'Error When Update Rt_Bill_Post , '||Chr(13)||SqlErrm);                                                   
    End;                             
  End;
PROCEDURE Post_Rt_Sales_Sum (P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null) Is     
    Begin
      Select 
Lang_No InTo V_Lang_No From Ias_Sys.Lang_Def Where Nvl(Flg_St,1)= 1 And Lang_Dflt=1 And Rownum<=1;
    Exception WHen Others Then
    End;  
  Begin
      Select Use_Out_Bills,Invoicing_Serials_Sr,Costing_Type,Wtavg_Type,Use_Itm_Attach ,Stkcost_Fraction, NVL(Use_Vat,0) , NVL(V_CALC_VAT_AMT_TYPE,0)  
        From Ias_Para_AR,Ias_Para_Inv ,IAS_PARA_GEN   
       Where RowNum<=1;
  Exception WHen Others Then
    Raise_Application_Error(-20001,'Error When Select From Para In Post_Rt_Sales_Detail '||Chr(13)||SqlErrm);
  End;  
  Begin
        Select Allow_Enter_Zero_Cost InTo V_Allow_Enter_Zero_Cost From Privilege_Fixed Where U_Id=P_User_No And RowNum<=1;
  Exception WHen Others Then
      Raise_Application_Error(-20002,'Error When Select From Privilege_Fixed In Post_Rt_Sales_Detail'||Chr(13)||SqlErrm);
  End;
  Insert Into Ias_Rt_Bill_Mst_Br_Tmp (Rt_Bill_No,Rt_Bill_Ser) Select Rt_Bill_No , Rt_Bill_Ser 
                                                               From Ias_Rt_Bill_Mst_Br 
                                                              Where Rt_Bill_Doc_Type<>4 
                                                                And Exists(Select 1 From Ias_Rt_Bill_Dtl_Br Where Rt_Bill_Ser=Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser And Rownum<=1);
      Cursor SM Is Select   DIstinct   Decode(P_Year,0,2,P_Year) P_Year,
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Exists(Select 1 From Ias_Rt_Bill_Mst_Br_Tmp Where Rt_Bill_Ser=Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser And RowNum<=1)
                                 Order By  Rt_Bill_Date,               
        Begin ---(11)
     Begin          
       Begin
                  Select Sum(Bill_amt) ,
                    From Ias_Rt_Bill_Mst_Br
            Where Exists(Select 1 From Ias_Rt_Bill_Mst_Br_Tmp Where Rt_Bill_Ser=Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser And RowNum<=1)
      Exception
            Raise_Application_Error(-20003,'Error When Select From Ias_Rt_Bill_Mst In Post Rt Sales Sum , '||Chr(13)||SqlErrm);    
      End;                       
       Begin
       Exception When Others Then
       Begin
       Exception When Others Then
      Insert Into Ias_Rt_Bill_Mst(  Rt_Bill_Doc_Type, 
    Exception
        Raise_Application_Error(-20004,'Error When Insert Into Ias_Rt_Bill_Mst In Post Rt Sales Sum, '||Chr(13)||SqlErrm);    
    End; 
    Begin
             Exception
        Raise_Application_Error(-20005,'Error When Insert Into Gr_Note In Post Rt Sales Sum, '||Chr(13)||SqlErrm);    
    End;
         Cursor BD Is Select   Sum(Ias_Rt_Bill_Dtl_Br.I_Qty)       I_qty,
             From Ias_Rt_Bill_Mst_Br,Ias_Rt_Bill_Dtl_Br
           Where Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser         = Ias_Rt_Bill_Dtl_Br.Rt_Bill_Ser
             And Exists(Select 1 From Ias_Rt_Bill_Mst_Br_Tmp Where Rt_Bill_Ser=Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser And RowNum<=1)                 
        Group by Ias_Rt_Bill_Dtl_Br.I_Code,
       Order By  Ias_Rt_Bill_Mst_Br.Rt_Bill_Date,             
    Begin --- (12)
             Begin               
                                Begin 
                                  Select  W_Code
                                   From Warehouse_Details
                                    Where Nvl(Main_Wcode,0) = 1  ;
                                Exception
            Select Ias_Doc_Seq.NextVal InTo V_Seq From Dual;
              Insert Into Ias_Rt_Bill_Dtl( Rt_Bill_Doc_Type, 
              Exception
                    Raise_Application_Error(-20006,'Error When Insert Into Ias_Rt_Bill_Dtl Sum '||Chr(13)||SqlErrm);
              End; 
                      Begin
                          Insert InTo Ias_Itm_Attach_Movement( I_Code, Itm_Unt, P_Size, 
                                                        Select I_Code, Itm_Unt, P_Size, 
                                                          From Ias_Rt_Bill_Mst_Br,Ias_Itm_Attach_Movement_Br
                                                         Where Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser        = Ias_Itm_Attach_Movement_Br.Doc_Ser
                                                          And Exists(Select 1 From Ias_Rt_Bill_Mst_Br_Tmp Where Rt_Bill_Ser=Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser And RowNum<=1)     
                                                     Group by  I_Code, Itm_Unt, P_Size, 
                        Exception When Others Then                                                    
                           Raise_Application_Error(-20008,'Error In Insert InTo Ias_Itm_Attach_Movement (Rt Sales Sum)'||Chr(13)||SqlErrm);                                                  
                        End;                     
            Begin    
            Exception When Others Then                                                    
            End;      
                   Begin
                   Exception When Others Then                                                    
                       Raise_Application_Error(-20008,'Error In Insert InTo Gr_Detail (Rt Sales Sum)'||Chr(13)||SqlErrm);                                                  
                    End;
--## Insert Into Item_movement        
                 Begin
                Exception When Others Then                                                    
                   Raise_Application_Error(-20009,'Error In Insert InTo Item_Movement (Rt Sales Sum)'||Chr(13)||SqlErrm);                                                  
                End;
     End; --(12)
            Begin
        Exception When Others Then                                                    
        End;         
     Begin
        Insert Into Gnr_Tax_Itm_Movmnt (Doc_No, 
                                                   Select D.Rt_Bill_No, 
                                                           From Ias_Rt_Bill_Mst_Br Bm,Ias_Rt_Bill_Dtl d,Gnr_Tax_Itm_Movmnt_Br M
                                                                   Where Bm.Rt_Bill_Ser        = M.Doc_Ser
                            Group By D.Rt_Bill_No, 
            Exception When Others Then                                                    
            End;
 Begin
        Insert Into Ias_Point_Calc_Trns(Trns_Date, Cust_Code, Mobile_No, Point_Typ_No, Bill_No, Rt_Bill_No, Doc_Amt, A_Cy, Point_Cnt, Trns_Type, Machine_No, 
                                   Select T.Trns_Date, T.Cust_Code, T.Mobile_No, T.Point_Typ_No, Null, V_RT_BILL_NO, T.Doc_Amt, T.A_Cy, T.Point_Cnt, T.Trns_Type,
                                     From Ias_Rt_Bill_Mst_Br Bm, Ias_Point_Calc_Trns_Br T
                                    Where Bm.Rt_Bill_Ser         = T.Doc_Srl
        Exception When Others Then                                                    
        End;  
     Begin
     Exception When Others Then
     End;
           Begin
             Exception When Others Then
             End;
    --## Update Ias_Rt_Bill_Mst_Br        
    Begin    
        Update Ias_Rt_Bill_Mst_Br Set Rt_Bill_post=1
         Where nvl(Rt_Bill_post,0)= 0                    
           And Exists (Select 1 From Ias_Rt_Bill_Mst_Br_Tmp Where Rt_Bill_Ser = Ias_Rt_Bill_Mst_Br.Rt_Bill_Ser  And RowNum <=1  );
    Exception When Others Then
         Raise_Application_Error(-20013,'Error When Update Rt_Bill_Post Sum, '||Chr(13)||SqlErrm);                                                   
    End;  
  END;
Procedure Post_Transfer_Out ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_Use_Adjstmnt In Number Default 0 , P_User_No In User_R.U_Id%Type Default Null ,P_Lang_No In Number Default Null)  IS     
    Begin
      Select Lang_No InTo V_Lang_No From Ias_Sys.Lang_Def Where Nvl(Flg_St,1)= 1 And Lang_Dflt=1 And Rownum<=1;
    Exception WHen Others Then
    End;  
  Begin
      Select Costing_Type,Wtavg_Type,Use_Itm_Attach ,Stkcost_Fraction
        From Ias_Para_AR,Ias_Para_Inv    
       Where RowNum<=1;
  Exception WHen Others Then
    Raise_Application_Error(-20001,'Error When Select From Para In Post_Transfer_Out (7) '||Chr(13)||SqlErrm);
  End;  
  Begin
        Select Allow_Enter_Zero_Cost InTo V_Allow_Enter_Zero_Cost From Privilege_Fixed Where U_Id=P_User_No And RowNum<=1;
  Exception WHen Others Then
      Raise_Application_Error(-20002,'Error When Select From Privilege_Fixed In Post_Transfer_Out , '||Chr(13)||SqlErrm);
  End;
  Insert Into Ias_Whtrns_Mst_Br_Tmp (Tr_No,Tr_Ser) Select Tr_No,Tr_Ser 
                                                       From Ias_Whtrns_Mst_Br 
                                                      Where Tr_InOut_Type=1 
                                                        And Exists(Select 1 From Ias_Whtrns_Dtl_Br Where Tr_Ser=Ias_Whtrns_Mst_Br.Tr_Ser And Rownum<=1)
                                                        And Not Exists(Select 1 From Ias_Whtrns_Mst Where Tr_Ser=Ias_Whtrns_Mst_Br.Tr_Ser And Rownum<=1);
  Begin
      Select 1 Into V_Cnt
       From  Ias_pos_minus_qty_Tmp
        Where RowNum <=1 ;
   Exception
        Begin
            Delete Ias_Whtrns_Mst_Br_Tmp M Where Exists ( Select 1 From Ias_Whtrns_Dtl_Br A,Ias_Pos_Minus_Qty_Tmp B
                                                           Where A.Tr_Ser      = M.Tr_Ser 
        Exception When Others Then Null;
        End; 
     Cursor C_Tr_Mst Is Select Tr_Inout_Type, Tr_Type, Tr_No,Tr_Ser, Tr_Date, Ref_No,W_Code, T_W_Code, F_W_Code,Cc_Code,pj_no,actv_no, Tr_Desc, Stk_Rate, 
                        From   Ias_Whtrns_Mst_Br
                         Where Tr_InOut_Type  = 1
                          And Exists (Select 1 From Ias_Whtrns_Mst_Br_Tmp Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser  And RowNum <=1  )                                               
                         Order By Ad_Date ;       
      Begin  
           Begin    
                Insert Into Ias_Whtrns_Mst( Tr_Inout_Type, Tr_Type, Tr_No, Tr_Ser, Tr_Date, Ref_No,W_Code, T_W_Code, F_W_Code,Cc_Code,pj_no,actv_no, Tr_Desc, Stk_Rate, 
              Exception
                 Raise_Application_Error ( -20004,' Err. When Insert InTo Ias_Whtrns_Mst , '||SqlErrm);    
              End;                                                                      
                Cursor C_Tr_Dtl Is Select Tr_Inout_Type, Tr_Type, Tr_No, Tr_Ser, I_Code, I_Qty,Itm_Unt, P_Size, P_Qty,W_Code, T_W_Code, F_W_Code,Tr_Qty,
                                     From Ias_Whtrns_Dtl_Br
                                    Where Tr_InOut_Type=1
              Begin 
                  Begin
                  Exception 
                    End;     
                  Begin
                      Select Ias_Doc_Seq.NextVal Into V_Seq From Dual;                    
                  Exception
                  Begin
                      Insert Into Ias_Whtrns_Dtl (  Tr_Inout_Type, Tr_Type, Tr_No,Tr_Ser, I_Code, I_Qty,Itm_Unt, P_Size, P_Qty,W_Code, T_W_Code, F_W_Code, 
                  Exception
                  End; 
                      Begin
                          Select 1 InTo V_Cnt
                            From Ias_Itm_Attach_Movement_Br
                           Where Doc_Ser   = J.Tr_Ser
                     Exception When Others Then                                                                          
                     End; 
                     Begin
                        Insert InTo Ias_Itm_Attach_Movement ( I_Code, Itm_Unt, P_Size,Attch_No1, Attch_Desc_No1, Attch_No2, Attch_Desc_No2, 
                                                       Select I_Code, Itm_Unt, P_Size, 
                                                         From Ias_Itm_Attach_Movement_Br
                                                        Where Doc_Ser   = J.Tr_Ser
                     Exception When Others Then                                                    
                        Raise_Application_Error ( -20010,' Err. When Insert InTo Ias_Itm_Attach_Movement_Br (7) , '||SqlErrm);     
                     End;  
                  Begin
                   Select Decode(J.Tr_Cost_Type,1,Nvl(V_StkCost,0),Nvl(I.I_Price,0)) 
                    From Dual;
                  Exception
                  Begin
                  Exception When Others Then
              Begin
             Exception 
              End;              
       --## Update Ias_Rt_Bill_Mst_Br        
        Begin    
            Update Ias_Whtrns_Mst_Br Set Tr_post=1
             Where Tr_Inout_Type=1
               And Exists (Select 1 From Ias_Whtrns_Mst_Br_Tmp Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser  And RowNum <=1  ) 
               And Exists (Select 1 From Ias_Whtrns_Mst Where Tr_Ser=Ias_Whtrns_Mst_Br.Tr_Ser And RowNum<=1);
             Raise_Application_Error(-20013,'Error When Update Ias_Whtrns_Mst_Br (7) , '||Chr(13)||SqlErrm);                                                   
        End;                
   End;
Procedure Post_Incmng ( P_Doc_Ser  In Gr_Note.G_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null) Is     
Begin  
    Begin
      Select Lang_No InTo V_Lang_No From Ias_Sys.Lang_Def Where Nvl(Flg_St,1)= 1 And Lang_Dflt=1 And Rownum<=1;
    Exception WHen Others Then
    End;  
  Begin
      Select Nvl(Costing_Type,0) ,
       From Ias_Para_Inv ;
  Exception WHen Others Then
    Raise_Application_Error(-20001,'Error When Select From Para In Post_Incoming '||Chr(13)||SqlErrm);
  End;  
  Begin
        Select Allow_Enter_Zero_Cost InTo V_Allow_Enter_Zero_Cost From Privilege_Fixed Where U_Id=P_User_No And RowNum<=1;
  Exception WHen Others Then
      Raise_Application_Error(-20002,'Error When Select From Privilege_Fixed In Post_Incomingt , '||Chr(13)||SqlErrm);
  End; 
    Insert Into Gr_Note_Br_Tmp (Gr_No,G_Ser) Select Gr_No,G_Ser 
                                               From Gr_Note_Br 
                                              Where Pi_Type=5 
                                                And Exists(Select 1 From Gr_Detail_Br Where G_Ser=Gr_Note_Br.G_Ser And Rownum<=1)
                                                And Not Exists(Select 1 From Gr_Note Where G_Ser=Gr_Note_Br.G_Ser And Rownum<=1);
       Cursor GRM Is Select Pi_Type, 
                    From Gr_Note_Br
                    Where Pi_Type=5
                      And Exists (Select 1 From Gr_Note_Br_Tmp Where G_Ser = Gr_Note_Br.G_Ser  And RowNum <=1  )              
                    Order By Ad_Date ;
    Begin ---(11)
        Begin
          Insert Into Gr_Note ( Pi_Type, 
        Exception
         Raise_Application_Error(-20005,'Error When Insert Into Gr_Note '||Chr(13)||SqlErrm);  
      End;        
         Cursor GRD Is Select  Pi_Type, 
                          From Gr_Detail_br             
                         Where Pi_Type=5
    Begin --- (12)
            Begin
                Select Ias_Doc_Seq.NextVal InTo V_Seq From Dual;
                Select Ias_Recno_Seq.NextVal InTo V_Rec_No From Dual;                    
                  Begin    
                  Exception 
                  End;
                       Begin
                        Exception
          Insert Into Gr_Detail (  Pi_Type, 
              Exception
                     Raise_Application_Error(-20005,'Error In Insert InTo Gr_Detail '||Chr(13)||SqlErrm);
              End;
                  Begin
                      Select 1 InTo V_Cnt
                       From Ias_Itm_Attach_Movement_Br
                      Where Doc_Ser   = J.G_Ser
                        Exception When Others Then                                                                          
                         End;               
                  Begin
                     Insert InTo Ias_Itm_Attach_Movement(I_Code, Itm_Unt, P_Size, 
                                                    Select I_Code, Itm_Unt, P_Size, 
                                                      From Ias_Itm_Attach_Movement_Br
                                                     Where Doc_Ser   = J.G_Ser
                      Exception When Others Then                                                    
                          Raise_Application_Error(-20010,'Error In  In Insert InTo Ias_Itm_Attach_Movement In Post_Incmng');                                                  
                      End;       
                Begin
                    Exception when Others Then
                        Raise_Application_Error(-20010,'Error In  In Insert InTo Ias_Itm_Attach_Movement In Post_Incmng');
                    End;
             End; --(12)
       Begin
       Exception 
       End;    
    --## Update Gr_Note_Br        
    Begin
       Update Gr_Note_Br
        Where Exists (Select 1 From Gr_Note_Br_Tmp Where G_Ser = Gr_Note_Br.G_Ser  And RowNum <=1  )
          And Exists (Select 1 From Gr_Note Where G_Ser = Gr_Note_Br.G_Ser  And RowNum <=1  );
    Exception
        END;
   Begin
      Select 1
        From IAS_POS_MINUS_QTY_TMP
       Where Rownum <= 1;
   Exception
   End;
            Cursor C_Brn Is Select Distinct Brn_No From Ias_Pos_Minus_Qty_Tmp  Order By Brn_No ;
       Begin
                     Select Brn_Year, Brn_Usr
                       From S_Brn
                      Where Brn_No = I_Brn.Brn_No;
                 Begin
                 Exception
                 End;
                  Begin
                     Select Stk_Adj_A_Code
                       From Interface_Acc
                      Where Brn_No = I_Brn.Brn_No And Rownum <= 1;
                  Exception
                  End;
                  Begin
                     Select Min (Stk_Type)
                       From Ias_Stk_Adjst_Types
                      Where Rownum <= 1;
                  Exception
                  End;
                  Begin
                     Insert Into Stk_Adjustment (Stk_Type,
                  Exception
                        Raise_Application_Error (-20007,'Error When Insert Into Stk_Adjustment '|| Chr (13)|| Sqlerrm);
                  End;
                  Begin
                  Exception
                        Raise_Application_Error ( -20008, 'Error When Insert Into Gr_Note ' || Chr (13) || Sqlerrm);
                  End;
                        Select I_Code,
                          From Ias_Pos_Minus_Qty_Tmp 
                          Where Brn_No =I_Brn.Brn_No;
                      Begin
                                Begin
                                   Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                                Exception
                                End;
                                If Ias_Gen_Pkg.Get_Cnt ('Select Costing_Type From Ias_Para_Inv Where RowNum <= 1 ') = 2 Then                                                      -- Wtavg
                                   Begin
                                      V_Wt_Before := Nvl (Ias_Itm_Pkg.Get_Grand_Wtavg ( P_Wtavg_Type   => Ias_Gen_Pkg.Get_Cnt ('Select Wtavg_Type From Ias_Para_Inv Where RowNum <= 1 '),
                                   Exception
                                   End;
                                      Last_Incoming_Price (P_Wtavg_Type   => Ias_Gen_Pkg.Get_Cnt ('Select Wtavg_Type From Ias_Para_Inv Where RowNum <= 1 '),
                                Begin
                                   Insert Into Stk_Adjustment_Det (Adjust_Type,
                                                  Get_Post_Code_Inv (Ias_Gen_Pkg.Get_Cnt ('Select Item_Posting_Flag From Ias_Para_Inv Where Rownum <= 1 '),
                                Exception
                                End;
                                Begin
                                      Calc_Wtavg_Cost (P_Cost_Type    => Ias_Gen_Pkg.Get_Cnt ('Select Costing_Type From Ias_Para_Inv Where RowNum <= 1 '),
                                                       P_Wtavg_Type   => Ias_Gen_Pkg.Get_Cnt ('Select Wtavg_Type From Ias_Para_Inv Where RowNum <= 1 '),
                                Exception
                                End;
                                --## Insert Into Storage
                                Begin
                                Exception
                                End;
                                --## Insert Into Gr_Detail
                                Begin
                                Exception
                                End;
                                --## Insert Into Item_movement
                                Begin
                                Exception
                                End;
                                Begin
                                Exception
                                End;
                      End;
Procedure Post_Jv Is
   Cursor C_Jv Is Select J_Ser,Jv_Type,J_Doc_No,Ad_U_Id From Master_Journal_V 
                      Where Nvl(Stand_By,0)=0 
                        And J_Ser In ( Select J_Ser From Master_Journal_V Where Nvl(Stand_By,0)=0
                                       Select Doc_Ser From Ias_Post_Mst Where 
Exception When Others Then
Procedure Post_Vchr Is
   Cursor C_Vchr Is Select Decode(Voucher_Type,1,2,2,3) Doc_Type,V_Ser,Voucher_Pay_Type,Voucher_N
o,Ad_U_Id From Vouchers 
                        Where Nvl(Stand_By,0)=0 
                          And V_Ser In ( Select V_Ser From Vouchers Where Nvl(Stand_By,0)=0
                                         Select Doc_Ser From Ias_Post_Mst Where Doc_Type In (2,3));
Exception When Others Then
PROCEDURE Insrt_Tax (P_Doc_Type In Number , P_Doc_Ser In Number) Is
  Insert InTo Gnr_Tax_Itm_Movmnt ( Doc_Type, Bill_Doc_Type, Doc_Jv_Type, Doc_No, Doc_Ser, Doc_Date, Tax_No, Clc_Typ_No, Agncy_No, I_Code, Itm_Unt, P_Size, I_Price, Disc_Amt, A_Code, A_Cy, Ac_Rate, 
                            Select Doc_Type, Bill_Doc_Type, Doc_Jv_Type, Doc_No, Doc_Ser, Doc_Date, Tax_No, Clc_Typ_No, Agncy_No, I_Code, Itm_Unt, P_Size, I_Price, Disc_Amt, A_Code, A_Cy, Ac_Rate, 
                              From Gnr_Tax_Itm_Movmnt_Br
                             Where Doc_Type = P_Doc_Type 
Exception 
PROCEDURE Insrt_Point_Trns (P_Doc_Type In Number , P_Doc_Ser In Number) Is 
 Insert InTo Ias_Point_Calc_Trns (Trns_Date, Cust_Code, Mobile_No, Point_Typ_No, Bill_No, Rt_Bill_No, Doc_Amt, A_Cy, Point_Cnt, Trns_Type, Machine_No, 
                           Select Trns_Date, Cust_Code, Mobile_No, Point_Typ_No, Bill_No, Rt_Bill_No, Doc_Amt, A_Cy, Point_Cnt, Trns_Type, Machine_No, 
                             From Ias_Point_Calc_Trns_Br
                            Where Doc_Typ = P_Doc_Type 
  Exception 
PROCEDURE Post_Serial (P_Doc_Ser In Number , P_Doc_Type In Number)IS
         Begin
                 Insert InTo Ias_Item_Serialno(Doc_Type, Bill_Doc_Type, Doc_No, Doc_Ser, Doc_Date, I_Code, Serialno, Desc_No, W_Code, Cc_Code, Pj_No, Actv_No, Expire_Date, Batch_No, Free_Flg, Bill_Cost, 
                Select Doc_Type, Bill_Doc_Type, Doc_No, Doc_Ser, Doc_Date, I_Code, Serialno, Desc_No, W_Code, Cc_Code, Pj_No, Actv_No, Expire_Date, Batch_No, Free_Flg, Bill_Cost, 
               From Ias_Item_Serialno_Br
               Where Doc_Ser   = P_Doc_Ser
          Exception When Others Then
          End;
FUNCTION Get_Card_Comm_Prcnt (P_Cr_Card_No In Number) RETURN Number IS
     Begin
      Select D.comm_per Into v_comm_per
        From Credit_card_types D,Ias_Cr_Card_Types M 
       Where M.Cr_Card_Type=D.Cr_Card_Type
    Exception 
    End;
Procedure Post_Trns_Data_Auto Is 
  Cursor C_Post Is Select Doc_Type,Doc_Ser,Doc_Sequence From 
          (Select 1 Doc_Type,M.Bill_Ser Doc_Ser,Min(Doc_Sequence) Doc_Sequence
            From Ias_Bill_Mst_Br M,Ias_Bill_Dtl_Br D
           Where M.Bill_Ser = D.Bill_Ser 
            And Exists(Select 1 From Ias_Bill_Dtl_Br Where Bill_Ser=M.Bill_Ser And Rownum<=1)
            And Not Exists(Select 1 From Ias_Bill_Mst Where Bill_Ser=M.Bill_Ser And Rownum<=1)
          Group By M.Bill_Ser  
            From Ias_Rt_Bill_Mst_Br M,Ias_Rt_Bill_Dtl_Br D
           Where M.Rt_Bill_Ser = D.Rt_Bill_Ser 
            And Exists(Select 1 From Ias_Rt_Bill_Dtl_Br Where Rt_Bill_Ser=M.Rt_Bill_Ser And Rownum<=1)
            And Not Exists(Select 1 From Ias_Rt_Bill_Mst Where Rt_Bill_Ser=M.Rt_Bill_Ser And Rownum<=1)
          Group By M.Rt_Bill_Ser
          Select 5 Doc_Type,M.G_Ser Doc_Ser,Min(Doc_Sequence) Doc_Sequence
            From Gr_Note_Br M,Gr_Detail_Br D
           Where M.G_Ser = D.G_Ser 
            And Exists(Select 1 From Gr_Detail_Br Where G_Ser=M.G_Ser And Rownum<=1)
            And Not Exists(Select 1 From Gr_Note Where G_Ser=M.G_Ser And Rownum<=1)
          Group By M.G_Ser
          Select 6 Doc_Type,M.Out_Ser Doc_Ser,Min(Doc_Sequence) Doc_Sequence
            From Ias_Outgoing_Mst_Br M,Ias_Outgoing_Dtl_Br D
           Where M.Out_Ser = D.Out_Ser 
            And Exists(Select 1 From Ias_Outgoing_Dtl_Br Where Out_Ser=M.Out_Ser And Rownum<=1)
            And Not Exists(Select 1 From Ias_Outgoing_Mst Where Out_Ser=M.Out_Ser And Rownum<=1)
          Group By M.Out_Ser
          Select Decode(M.Tr_InOut_Type,1,7,2,8) Doc_Type,M.Tr_Ser Doc_Ser,Min(Doc_Sequence) Doc_Sequence
            From Ias_Whtrns_Mst_Br M,Ias_Whtrns_Dtl_Br D
           Where M.Tr_Ser = D.Tr_Ser 
             And Exists(Select 1 From Ias_Whtrns_Dtl_Br Where Tr_Ser=M.Tr_Ser And Rownum<=1)
             And Not Exists(Select 1 From Ias_Whtrns_Mst Where Tr_Ser=M.Tr_Ser And Rownum<=1)
          Group By Decode(M.Tr_InOut_Type,1,7,2,8),M.Tr_Ser)
          Order By Doc_Sequence;
 Begin
CREATE OR REPLACE PACKAGE ARS_AUTO_SYNC_PKG AS
FUNCTION CHK_USR_DATA   ( P_C_CODE                IN CUSTOMER.C_CODE%TYPE          
PROCEDURE CHK_ITM  ( P_I_CODE                IN IAS_ITM_MST.I_CODE%TYPE          
PROCEDURE INSRT_AUTO_SLS_ORDR_MST( P_DOC_NO     IN     ARS_AUTO_SLS_ORDR_MST.DOC_NO%TYPE DEFAULT NULL,
PROCEDURE INSRT_AUTO_SLS_ORDR_DTL( P_DOC_NO      IN     ARS_AUTO_SLS_ORDR_MST.DOC_NO%TYPE DEFAULT NULL,
PROCEDURE GET_EXTRCT_ORDR_XML(P_XML        IN   VARCHAR2,P_XML_OUT         OUT  VARCHAR2);
CREATE OR REPLACE PACKAGE BODY ARS_AUTO_SYNC_PKG IS
FUNCTION CHK_USR_DATA   ( P_C_CODE                IN CUSTOMER.C_CODE%TYPE          
  SELECT 1 INTO V_CNT FROM CUSTOMER 
   WHERE C_CODE =P_C_CODE
EXCEPTION WHEN OTHERS THEN
PROCEDURE CHK_ITM  ( P_I_CODE                IN IAS_ITM_MST.I_CODE%TYPE          
    BEGIN
        SELECT LANG_NO INTO V_LNG_DFLT  FROM IAS_SYS.LANG_DEF
         WHERE LANG_DFLT=1
    EXCEPTION   WHEN OTHERS THEN
    END;
       BEGIN
           SELECT 1 INTO V_CNT
                   FROM 
                  WHERE I_CODE = P_I_CODE
       EXCEPTION WHEN OTHERS THEN
       END;
       BEGIN
         SELECT 1,NVL(NO_SALE,0),NVL(INACTIVE,0) INTO V_CNT,V_NO_SAL_FLG,V_INACTV_FLG
           FROM IAS_ITM_DTL 
          WHERE I_CODE = P_I_CODE AND ITM_UNT = P_ITM_UNT AND ROWNUM<=1;  
       EXCEPTION WHEN OTHERS THEN
       END;
PROCEDURE INSRT_AUTO_SLS_ORDR_MST(P_DOC_NO      IN     ARS_AUTO_SLS_ORDR_MST.DOC_NO%TYPE DEFAULT NULL,
    BEGIN
         SELECT LANG_NO INTO V_LNG_DFLT  FROM IAS_SYS.LANG_DEF
         WHERE LANG_DFLT=1
    EXCEPTION   WHEN OTHERS THEN
    END;
    BEGIN
        SELECT MAX(YR_NO) INTO V_BRN_YEAR FROM S_PRD_DTL WHERE TO_DATE(SYSDATE,'DD/MM/RRRR') BETWEEN F_DATE AND T_DATE;
    EXCEPTION WHEN OTHERS THEN
    END;
       BEGIN
         SELECT NVL(MAX(DOC_NO),0)+1 INTO V_DOC_NO FROM ARS_AUTO_SLS_ORDR_MST;
       EXCEPTION WHEN OTHERS THEN 
       END;
           BEGIN
            SELECT DECODE(V_LNG_DFLT,1,C_A_NAME,NVL(C_E_NAME,C_A_NAME)),NVL(INACTIVE,0) INTO V_CST_NM,V_INACTV_FLG FROM CUSTOMER 
             WHERE C_CODE = P_C_CODE AND ROWNUM<=1;
           EXCEPTION 
           END;
    INSERT INTO ARS_AUTO_SLS_ORDR_MST(DOC_NO  , 
EXCEPTION 
         RAISE_APPLICATION_ERROR (-20021,'Error When Insert Into Ars_Auto_Sls_Ordr_Mst '||CHR(10)||SQLERRM);
PROCEDURE INSRT_AUTO_SLS_ORDR_DTL( P_DOC_NO      IN     ARS_AUTO_SLS_ORDR_MST.DOC_NO%TYPE DEFAULT NULL,
    INSERT INTO ARS_AUTO_SLS_ORDR_DTL (DOC_NO, 
EXCEPTION 
       RAISE_APPLICATION_ERROR (-20050,'Error When Insert Into Ars_Auto_Sls_Ordr_Dtl  , '||CHR(10)||SQLERRM);
PROCEDURE GET_EXTRCT_ORDR_XML (P_XML        IN   VARCHAR2,P_XML_OUT         OUT  VARCHAR2) IS
    BEGIN
          BEGIN
                SELECT MAX(YR_NO) INTO V_BRN_YEAR FROM S_PRD_DTL; 
          EXCEPTION WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20901,' Err When Select V_Brn_Year '||CHR(10)||SQLERRM) ;
          END;
          BEGIN
             SELECT NVL(MAX(DOC_NO),0)+1 INTO V_DOC_NO FROM ARS_AUTO_SLS_ORDR_MST;
          EXCEPTION WHEN OTHERS THEN
                  RAISE_APPLICATION_ERROR(-20902,' Err When Select DOC_NO '||CHR(10)||SQLERR
          END;
          BEGIN
            SELECT        DISTINCT         EXTRACTVALUE (VALUE (XMLMSTDMY), '*/PR_NO             ') AS  PR_NO  
                              FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE,'/ROWSET/ROWPREQUEST'))) XMLMSTDMY;
          EXCEPTION WHEN OTHERS THEN
          END;
          BEGIN
            SELECT 1 INTO V_CNT FROM ARS_AUTO_SLS_ORDR_MST WHERE DOC_SRL_REF=V_DOC_SRL_REF;
           EXCEPTION WHEN OTHERS THEN 
          END;
          BEGIN
          EXCEPTION 
          END; 
                        ( SELECT           EXTRACTVALUE (VALUE (XMLMSTDMY), '*/PR_NO             ') AS  PR_NO  
                              FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE,'/ROWSET/ROWPREQUEST'))) XMLMSTDMY)
                      BEGIN
                      EXCEPTION 
EXCEPTION WHEN OTHERS THEN
CREATE OR REPLACE PACKAGE ARS_MOBILE_TRNS_PKG IS
 PROCEDURE  INSRT_CST_RQ_PRC(     P_LANG_NO                 IN NUMBER 
 PROCEDURE  INSRT_CST_PRC( P_LANG_NO                 IN NUMBER 
                                  ,P_UPD_FLG                IN NUMBER                       DEFAULT  0  --##  0 insert NEW CST_CODE ,--##  0 update customer data
PROCEDURE GET_PRMTR_PRC (   P_SYS_NO   IN NUMBER                              DEFAULT NULL,
PROCEDURE INSRT_DOC_PRC(  P_DOC_TYP    IN  IAS_POST_MST.DOC_TYPE%TYPE,
PROCEDURE INSRT_SALES_ORDER (
PROCEDURE INSRT_ORDER_DETAIL(    
   PROCEDURE CHK_INPT_DATA ( P_INPT_TYP     IN VARCHAR2,
PROCEDURE INSRT_GNR_RQ_TAX_ITM_MOVMNT (     
PROCEDURE GET_DOC_NO(P_D
 PROCEDURE GET_DOC_SER(P_DOC_TYP IN NUMBER);   
PROCEDURE CHK_DOC_NO(P_DOC_TYP IN NUMBER,
PROCEDURE CHK_ACCNT (    P_CUR_CODE              IN EX_RATE.CUR_CODE%TYPE
PROCEDURE CHK_GNR_DATA (  P_BRN_NO                  IN IAS_BILL_MST.BRN_NO%TYPE           DEFAULT NULL,
PROCEDURE CHK_ITM  ( P_I_CODE               IN IAS_ITM_MST.I_CODE%TYPE          
PROCEDURE CHK_SUB_LDGR (  P_MST_FLG                 IN NUMBER ,  -- 1 = MST ,0 = DTL 
PROCEDURE CHK_AVL_QTY (   P_I_CODE        IN ITEM_MOVEMENT.I_CODE%TYPE 
PROCEDURE CLR_GLBL_VAR;
PROCEDURE INSRT_RESERVE_PRC( P_I_CODE         IN ITEM_MOVEMENT.I_CODE%TYPE 
PROCEDURE CHK_INSRT_DATA ( P_DOC_TYP  IN IAS_POST_MST.DOC_TYPE%TYPE,
Function Get_Qt_Prm  (   P_Date                    In  Date,
CREATE OR REPLACE PACKAGE BODY ARS_MOBILE_TRNS_PKG IS
PROCEDURE  INSRT_CST_RQ_PRC(     P_LANG_NO                 IN NUMBER 
 BEGIN
     BEGIN
      SELECT cust_d_type,Cst_Seq_Type,Ar_Ac_Link_Type INTO V_cust_d_type,V_Cst_Seq_Type,V_Aralt FROM IAS_PARA_AR WHERE ROWNUM<=1;
     EXCEPTION WHEN OTHERS THEN                                           
     END;
        BEGIN
          SELECT 1 INTO V_CNT FROM CUSTOMER_GROUP WHERE c_group_code=P_c_group_code AND ROWNUM<=1;
        EXCEPTION WHEN OTHERS THEN
       END; 
        BEGIN
          SELECT 1 INTO V_CNT FROM CUSTOMER_CLASS
            WHERE C_CLASS=P_C_CLASS AND ROWNUM<=1;
        EXCEPTION WHEN OTHERS THEN
       END; 
        BEGIN
          SELECT 1 INTO V_CNT FROM Customer_Class_Typ
            WHERE C_CLASS_TYP=P_C_CLass_Typ AND ROWNUM<=1;
        EXCEPTION WHEN OTHERS THEN
       END; 
        BEGIN
            SELECT 1 INTO V_CNT  FROM CUSTOMER_RQ WHERE NVL(C_MOBILE,0)=NVL(P_C_MOBILE,0) AND ROWNUM<=1   ;
        EXCEPTION  
        END;
    BEGIN
        SELECT 1 INTO V_CNT  FROM CUSTOMER_RQ WHERE C_CODE_TRGT=P_C_CODE AND ROWNUM<=1   ;
    EXCEPTION  
    END;
              BEGIN
                SELECT NVL(MAX(TO_NUMBER(C_CODE)),0)+1 INTO V_CST_CODE FROM CUSTOMER_RQ ;             
              EXCEPTION  WHEN NO_DATA_FOUND THEN
                BEGIN
                   SELECT NVL (MAX (TO_NUMBER (c_code)), 0) + 1 INTO   V_cst_code FROM   CUSTOMER_RQ
                   WHERE  c_group_code = P_c_group_code;                
                EXCEPTION
                END;           
               Begin
                  Select Nvl(Max(To_Number(C_Code)),0)+1 Into V_CST_CODE From CUSTOMER_RQ
                                     Where 
               Exception  When NO_DATA_FOUND THEN
    Begin
       SELECT C_A_CODE Into V_C_ACODE  FROM  CUSTOMER_GROUP 
        WHERE C_GROUP_CODE=P_C_GROUP_CODE AND ROWNUM<=1;
    EXCEPTION  WHEN OTHERS THEN
    END;    
    BEGIN
    Select Nvl(Max(Cst_Seq),0)+1 Into V_Cst_Seq From CUSTOMER_RQ; 
     EXCEPTION  WHEN OTHERS THEN
    END;
     BEGIN
        SELECT 1 INTO V_CNT  FROM CUSTOMER_RQ WHERE C_CODE=V_CST_CODE AND ROWNUM<=1   ;
    EXCEPTION  
    END;
       BEGIN
            INSERT INTO CUSTOMER_RQ (C_CODE,
       Exception  When Others Then 
           RAISE_APPLICATION_ERROR(-20008,'Err INSERT INTO CUSTOMER_RQ  '||CHR(10)||SQLERRM);
    IF NVL(Ias_Gen_Pkg.Get_Cnt('Select 1 From CUSTOMER_RQ Where 
         FOR I IN (SELECT A_CY,INACTIVE  FROM ACCOUNT_CURR  WHERE A_CODE=V_C_ACODE) 
              INSERT INTO CUSTOMER_CURR_RQ(C_CODE, 
           Exception  When Others Then
                RAISE_APPLICATION_ERROR(-20009,'Err INSERT INTO CUSTOMER_CURR_RQ  '||CHR(10)||SQLERRM);                     
  PROCEDURE  INSRT_CST_PRC( P_LANG_NO                 IN NUMBER 
                                  ,P_UPD_FLG                IN NUMBER                       DEFAULT  0  --##  0 insert NEW CST_CODE ,--##  0 update customer data 
 BEGIN
     BEGIN
      SELECT cust_d_type,Cst_Seq_Type,Ar_Ac_Link_Type INTO V_cust_d_type,V_Cst_Seq_Type,V_Aralt FROM IAS_PARA_AR WHERE ROWNUM<=1;
     EXCEPTION WHEN OTHERS THEN                                           
     END;
        BEGIN
          SELECT 1 INTO V_CNT FROM CUSTOMER_GROUP WHERE c_group_code=P_c_group_code AND ROWNUM<=
        EXCEPTION WHEN OTHERS THEN
       END; 
        BEGIN
          SELECT 1 INTO V_CNT FROM CUSTOMER_CLASS
            WHERE C_CLASS=P_C_CLASS AND ROWNUM<=1;
        EXCEPTION WHEN OTHERS THEN
       END; 
        BEGIN
          SELECT 1 INTO V_CNT FROM Customer_Class_Typ
            WHERE C_CLASS_TYP=P_C_CLass_Typ AND ROWNUM<=1;
        EXCEPTION WHEN OTHERS THEN
       END; 
            BEGIN
                SELECT 1 INTO V_CNT  FROM CUSTOMER WHERE NVL(C_MOBILE,0)=NVL(P_C_MOBILE,0) AND ROWNUM<=1   ;
            EXCEPTION  
            END;
            BEGIN
                SELECT 1 INTO V_CNT  FROM CUSTOMER WHERE NVL(C_MOBILE,0)=NVL(P_C_MOBILE,0) AND C_CODE<>P_C_CODE AND ROWNUM<=1   ;
            EXCEPTION  
           END;
                BEGIN
                    SELECT 1 INTO V_CNT  FROM CUSTOMER WHERE NVL(C_CODE_TRGT,0)=NVL(P_C_CODE,0) AND ROWNUM<=1   ;
                EXCEPTION  
                END;
                      BEGIN
                        SELECT NVL(MAX(TO_NUMBER(C_CODE)),0)+1 INTO V_CST_CODE FROM CUSTOMER;             
                      EXCEPTION  WHEN NO_DATA_FOUND THEN
                        BEGIN
                           SELECT NVL (MAX (TO_NUMBER (c_code)), 0) + 1 INTO   V_cst_code FROM   CUSTOMER
                           WHERE  c_group_code = P_c_group_code;                
                        EXCEPTION
                        END;           
                       Begin
                          Select Nvl(Max(To_Number(C_Code)),0)+1 Into V_CST_CODE From CUSTOMER
                                             Where  C_Group_Code=P_C_Group_Code
                       Exception  When NO_DATA_FOUND THEN
            Begin
               SELECT C_A_CODE Into V_C_ACODE  FROM  CUSTOMER_GROUP 
                WHERE C_GROUP_CODE=P_C_GROUP_CODE AND ROWNUM<=1;
            EXCEPTION  WHEN OTHERS THEN
            END;    
            BEGIN
            Select Nvl(Max(Cst_Seq),0)+1 Into V_Cst_Seq From CUSTOMER; 
             EXCEPTION  WHEN OTHERS THEN
            END;
             BEGIN
                SELECT 1 INTO V_CNT 
 FROM CUSTOMER WHERE C_CODE=V_CST_CODE AND ROWNUM<=1   ;
            EXCEPTION  
            END;
               BEGIN
                    INSERT INTO CUSTOMER(C_CODE,
               Exception  When Others Then 
                   RAISE_APPLICATION_ERROR(-20008,'Err INSERT INTO CUSTOMER  '||CHR(10)||SQLERRM);
            IF NVL(Ias_Gen_Pkg.Get_Cnt('Select 1 From CUSTOMER Where 
                 FOR I IN (SELECT A_CY,INACTIVE  FROM ACCOUNT_CURR  WHERE A_CODE=V_C_ACODE) 
                    Begin             
                      INSERT INTO CUSTOMER_CURR(C_CODE, 
                   Exception  When Others Then
                        RAISE_APPLICATION_ERROR(-20009,'Err INSERT INTO CUSTOMER_CURR '||CHR(10)||SQLERRM);                     
                    Begin      
                        FOR J IN  (SELECT DISTINCT
                                     FROM PRIV_ACC P ,  CUSTOMER C
                                  WHERE P.A_CODE=C.C_A_CODE 
                             INSERT INTO IAS_PRIV_CUSTOMER(U_ID,C_CODE,A_CY,ADD_FLAG,VIEW_FLAG,AD_U_ID,AD_DATE)
                  Exception  When Others Then
                        RAISE_APPLICATION_ERROR(-20009,'Err INSERT INTO Ias_Priv_Customer '||CHR(10)||SQLERRM);                     
       BEGIN
           UPDATE CUSTOMER
            WHERE C_CODE = P_C_CODE;
       EXCEPTION
              RAISE_APPLICATION_ERROR(-20008, 'Err WHEN UPDATE CUSTOMER  ' || CHR(10) || SQLERRM);
       END;
 PROCEDURE GET_PRMTR_PRC (  P_SYS_NO   IN NUMBER                               DEFAULT NULL,
  BEGIN  
     BEGIN
             SELECT LANG_NO INTO G_LNG_DFLT  FROM IAS_SYS.LANG_DEF
             WHERE LANG_DFLT=1
     EXCEPTION   WHEN OTHERS THEN
      RAISE_APPLICATION_ERROR(-20005,'Error When Select Deflt LANG  , '||SQLERRM);
     END;
     BEGIN
            FROM 
   EXCEPTION 
            RAISE_APPLICATION_ERROR(-20006,'Error When Select PARAMETER , '||SQLERRM);      
        BEGIN
          SELECT MAX(YR_NO) INTO G_BRN_YEAR FROM S_PRD_DTL WHERE TO_DATE(SYSDATE,'DD/MM/RRRR') BETWEEN F_DATE AND T_DATE;
        EXCEPTION WHEN OTHERS THEN
        END;
     BEGIN
     EXCEPTION WHEN OTHERS THEN 
     END;
     BEGIN
       SELECT BRN_USR  INTO G_BRN_USR FROM S_BRN WHERE BRN_NO=G_BRN_NO AND ROWNUM<=1;
     EXCEPTION WHEN OTHERS THEN 
     END;
        RAISE_APPLICATION_ERROR(-20009,'Error When Select YR_NO. from S_PRD_DTL , '||SQLERRM);
        RAISE_APPLICATION_ERROR(-20010,'Error When Select Local Cur. from EX_RATE , '||SQLERRM);
        RAISE_APPLICATION_ERROR(-20011,'Error When Select Stock Cur. from EX_RATE , '||SQLERRM);
    EXCEPTION 
PROCEDURE INSRT_DOC_PRC(  P_DOC_TYP    IN  IAS_POST_MST.DOC_TYPE%TYPE,
                       (SELECT    EXTRACTVALUE (VALUE (XMLMSTDMY), '*/SYS_NO              ') AS SYS_NO                                 
       FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE, '/SAL_ORDR/SALES_ORDER'))) XMLMSTDMY) 
               BEGIN                  --(1)
               EXCEPTION 
               END; --(1)  
               (SELECT          EXTRACTVALUE (VALUE (XMLDTLDMY), '*/I_CODE               ')  AS  I_CODE                   
                 FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE, '/SAL_ORDR/ORDER_DETAIL'))) XMLDTLDMY) LOOP  --(12)  
        BEGIN
          Select Ias_Doc_Seq_Othr.NextVal InTo V_DOC_SEQ From Dual; 
        EXCEPTION 
        END;               
        BEGIN                         --(2)
        EXCEPTION 
        END;   --(2) 
              (SELECT            EXTRACTVALUE (VALUE (XMLTAXDMY), '*/DOC_NO              ')  AS  DOC_NO 
                FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_TYPE, '/SAL_ORDR/GNR_RQ_TAX_ITM_MOVMNT'))) XMLTAXDMY) LOOP  --(13)  
                RAISE_APPLICATION_ERROR(-20912,'Err .INSRT_GNR_RQ_TAX_ITM_MOVMNT When GET DOC_SEQ From Detail DOC_NO= '||V_DOC_NO ||' ' ||CHR(10)||SQLERRM) ;
             BEGIN       --(3)
              EXCEPTION           
             END;   --(3)
    EXCEPTION
  PROCEDURE INSRT_SALES_ORDER (
  BEGIN
        BEGIN
          SELECT MAX(YR_NO) INTO G_BRN_YEAR FROM S_PRD_DTL WHERE TO_DAT
        EXCEPTION WHEN OTHERS THEN
        END;
           BEGIN
             SELECT CREDIT_PERIOD INTO V_CRDT_PRD_DAY FROM CUSTOMER WHERE C_CODE= P_C_CODE  AND ROWNUM<=1;
          EXCEPTION 
          END;             
        BEGIN
        SELECT G_DOC_DATE + NVL(G_MAX_PRD_EXP_DATE_SO_DAY,1) INTO  V_ORDR_EXP_DATE FROM DUAL;
          EXCEPTION WHEN OTHERS THEN
        END;
         BEGIN
             SELECT R_CODE INTO V_R_CODE FROM CUSTOMER WHERE C_CODE= P_C_CODE  AND ROWNUM<=1;
          EXCEPTION 
         END;         
   BEGIN
      SELECT 1 INTO V_CNT FROM SALES_ORDER WHERE ORDER_SER = G_DOC_SER AND ROWNUM<=1;
   EXCEPTION WHEN OTHERS THEN
   END;  
       INSERT INTO SALES_ORDER
    EXCEPTION 
           RAISE_APPLICATION_ERROR (-20050,'Error When Insert Into Sales Order Master , '||CHR(10)||SQLERRM);
  PROCEDURE INSRT_ORDER_DETAIL(    
 BEGIN
            BEGIN 
            SELECT DOC_NO,DOC_SER INTO G_DOC_NO,G_DOC_SER FROM ARS_SAL_ORDR_MST WHERE DOC_M_SQ = G_DOC_M_SQ AND ROWNUM<=1;
        EXCEPTION 
        END;*/
                BEGIN
                EXCEPTION WHEN OTHERS THEN
                END;     
        BEGIN
 1 INTO V_CNT FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS WHERE DOC_TYPE = P_DOC_TYPE_REF  AND ROWNUM<=1;
          EXCEPTION WHEN OTHERS THEN
        END;
           BEGIN
            SELECT 1 INTO V_CNT FROM QUOTATION_DETAIL 
             WHERE QUOT_NO   = P_DOC_NO_REF
           EXCEPTION WHEN OTHERS THEN
           END;
          BEGIN
              Select Ias_Doc_Seq_Othr.NextVal InTo V_DOC_SEQ From Dual; 
            EXCEPTION 
            END;
    INSERT INTO ORDER_DETAIL
   EXCEPTION
           RAISE_APPLICATION_ERROR (-20063,'Error When Insert Into Sales Order Detail , '||CHR(10)||SQLERRM);         
PROCEDURE INSRT_GNR_RQ_TAX_ITM_MOVMNT (   
        BEGIN
          SELECT 1 INTO V_CNT FROM ORDER_DETAIL WHERE ORDER_SER = G_DOC_SER AND I_CODE= P_I_CODE AND DOC_SEQ = P_DOC_SEQ AND ROWNUM<=1;
        EXCEPTION WHEN OTHERS THEN
        END;        
  /*  BEGIN
      EXECUTE IMMEDIATE 'DELETE '||V_TBL_MVMNT_NM||' WHERE DOC_TYPE='||G_DOC_TYP||' AND DOC_SER='||G_DOC_SER;          
    EXCEPTION WHEN OTHERS THEN NULL;
    END;*/    
    BEGIN 
         V_SLCT:=  'INSERT INTO '||V_TBL_MVMNT_NM||' ( DOC_TYPE, 
                                                SELECT '||G_DOC_TYP||', 
                                                  FROM '||V_TBL_MST_NM||' M,'||V_TBL_DTL_NM||' D ,GNR_TAX_ITM TI,GNR_TAX_CODE_MST TM ,GNR_TAX_CODE_DTL TD ,GNR_TAX_TYP_CLC_DTL TC,IAS_ITM_MST I
                                                 WHERE '||V_FLD_DOC_SER||'='||REPLACE(V_FLD_DOC_SER,'M.','D.')||'
                                              ORDER BY '||V_FLD_DOC_SEQ;                                             
         V_SLCT:=  'INSERT INTO '||V_TBL_MVMNT_NM||' ( DOC_TYPE, 
                                                SELECT '||G_DOC_TYP||', 
                                                  FROM '||V_TBL_MST_NM||' M,'||V_TBL_DTL_NM||' D ,GNR_TAX_CODE_DTL TD,'||REPLACE(V_TBL_MVMNT_NM,'RQ_')||' T
                                                 WHERE '||V_FLD_DOC_SER||' ='||REPLACE(V_FLD_DOC_SER,'M.','D.')||'                                                   
                                              ORDER BY '||V_FLD_DOC_SEQ;                                                                                                         
      --## UPDATE TAX TABLES FOR DOCUMENT
      V_CNT := YS_GEN_PKG.GET_CNT('SELECT 1 FROM '||V_TBL_MVMNT_NM||' 
                                    WHERE DOC_TYPE = '||G_DOC_TYP||'
  EXCEPTION WHEN OTHERS THEN
 END;     
PROCEDURE GET_DOC_NO(P_DOC_TYP IN NUMBER) IS
          BEGIN    
            SELECT NVL(MAX(TO_NUMBER(ORDER_NO)),0)+1 INTO G_DOC_NO 
              FROM SALES_ORDER
             WHERE BRN_NO =G_BRN_NO;
           EXCEPTION WHEN NO_DATA_FOUND THEN
          END; 
           BEGIN
            SELECT NVL(MAX(TO_NUMBER(ORDER_NO)),0)+1  INTO G_DOC_NO 
              FROM SALES_ORDER
             WHERE SO_TYPE = G_SO_TYPE
           EXCEPTION WHEN NO_DATA_FOUND THEN
           END;
PROCEDURE GET_DOC_SER(P_DOC_TYP IN NUMBER) IS
              SELECT G_BRN_YEAR||LPA
D(G_BRN_NO,6,'0')||G_DOC_NO INTO G_DOC_SER FROM DUAL;
                SELECT G_BRN_YEAR||LPAD(G_BRN_NO,6,'0')||TO_NUMBER(LTRIM(G_DOC_NO))||LTRIM(LPAD(G_SO_TYPE,5,'0')) INTO G_DOC_SER FROM DUAL;
PROCEDURE CHK_DOC_NO(P_DOC_TYP IN NUMBER
             V_CNT:=IAS_GEN_PKG.GET_CNT('Select 1 from Sales_Order 
                                       where Order_No='||P_DOC_NO||'
               V_CNT:=IAS_GEN_PKG.GET_CNT('Select 1 from Sales_Order 
                                       where Order_No='||P_DOC_NO||'
PROCEDURE CHK_INPT_DATA ( P_INPT_TYP     IN VARCHAR2,
 BEGIN
      BEGIN
        SELECT DECODE(P_LNG_DFLT,1,U_A_NAME,NVL(U_E_NAME,U_A_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG  FROM USER_R 
         WHERE U_ID   = P_INPT_CODE1 
       EXCEPTION 
      END;
      BEGIN
        SELECT DECODE(P_LNG_DFLT,1,CMP_LNAME,NVL(CMP_FNAME,CMP_LNAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM S_BRN 
         WHERE BRN_NO   = P_INPT_CODE1           
       EXCEPTION 
      END;
      BEGIN
        SELECT DECODE(P_LNG_DFLT,1,A_NAME,NVL(A_NAME_ENG,A_NAME)),NVL(AC_CLOSE,0) INTO P_INPT_NM,V_INACTV_FLG FROM ACCOUNT 
         WHERE A_CODE   = P_INPT_CODE1 
           AND A_S_M IN(SELECT ACCOUNT_TYPE FROM ACCOUNT_TYPES WHERE AFFECTED_BY_TRANS=1 AND ROWNUM<=1)
       EXCEPTION 
      END;
      BEGIN
  /*SELECT DECODE(P_LNG_DFLT,1,AC_CODE_DTL_L_NM,NVL(AC_CODE_DTL_F_NM,AC_CODE_DTL_L_NM)),NVL(INACTV_FLG,0) INTO P_INPT_NM,V_INACTV_FLG 
          FROM GNR_ACCNT_DTL_VW 
         WHERE AC_CODE     = P_INPT_CODE1 
       EXCEPTION 
      END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,EMP_L_NM,NVL(EMP_F_NM,EMP_L_NM)),NVL(INACTIVE,0) , NVL(EMP_ST,0) INTO P_INPT_NM,V_INACTV_FLG,V_INPT_ST FROM S_EMP 
         WHERE EMP_NO = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,C_A_NAME,NVL(C_E_NAME,C_A_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM CUSTOMER 
         WHERE C_CODE = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,V_A_NAME,NVL(V_E_NAME,V_A_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM V_DETAILS 
         WHERE V_CODE = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,REPRS_A_NAME,NVL(REPRS_E_NAME,REPRS_A_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM SALES_MAN
         WHERE REPRS_CODE = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,COL_NAME,NVL(COL_E_NAME,COL_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM COLLERCTOR
         WHERE COL_NO = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,CC_A_NAME,NVL(CC_E_NAME,CC_A_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM COST_CENTERS
         WHERE CC_CODE = P_INPT_CODE1
         AND C_S_M IN (SELECT CC_TYPE FROM COST_CENTER_TYPES WHERE AFFECTED_BY_TRANS=1 AND ROWNUM<=1 )
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,PJ_A_NAME,NVL(PJ_E_NAME,PJ_A_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM IAS_PROJECTS
         WHERE PJ_NO = P_INPT_CODE1
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,ACTV_A_NAME,NVL(ACTV_E_NAME,ACTV_A_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM IAS_ACTVTY
         WHERE ACTV_NO = P_INPT_CODE1
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,R_A_NAME,NVL(R_E_NAME,R_A_NAME)) INTO P_INPT_NM FROM REGIONS 
         WHERE R_CODE = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,W_NAME,NVL(W_E_NAME,W_NAME)),NVL(INACTIVE,0),CONN_BRN_NO INTO P_INPT_NM,V_INACTV_FLG,V_BRN_NO FROM WAREHOUSE_DETAILS WHERE W_CODE = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;     
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,CASH_NAME,NVL(CASH_E_NAME,CASH_NAME)),NVL(INACTIVE,0),CONN_BRN_NO INTO P_INPT_NM,V_INACTV_FLG,V_BRN_NO FROM CASH_IN_HAND WHERE CASH_NO = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;       
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,BANK_NAME,NVL(BANK_E_NAME,BANK_NAME)),NVL(INACTIVE,0),CONN_BRN_NO INTO P_INPT_NM,V_INACTV_FLG,V_BRN_NO FROM CASH_AT_BANK WHERE BANK_NO = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;       
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,LEV_A_NAME,NVL(LEV_E_NAME,LEV_A_NAME)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM IAS_PRICING_LEVELS 
         WHERE LEV_NO = P_INPT_CODE1 AND ROWNUM<=1;
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,LEV_A_NAME,NVL(LEV_E_NAME,LEV_A_NAME)),NVL(M.INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG FROM IAS_PRICING_LEVELS M, IAS_ITEM_PRICE D 
         WHERE M.LEV_NO     = D.LEV_NO 
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(G_LNG_DFLT,1,TYP_L_NM,NVL(TYP_F_NM,TYP
          FROM GNR_DOC_TYP_DTL
         WHERE DOC_TYP = P_INPT_CODE1 
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,TAX_L_NM,NVL(TAX_F_NM,TAX_L_NM)),NVL(INACTIVE,0) INTO P_INPT_NM,V_INACTV_FLG 
          FROM GNR_TAX_CODE_MST
         WHERE TAX_NO  = P_INPT_CODE1 
       EXCEPTION 
       END;
       BEGIN
       Select 1, Decode(P_LNG_DFLT,1,Nvl(Clc_Typ_L_Nm, Clc_Typ_F_Nm),Nvl(Clc_Typ_F_Nm,Clc_Typ_L_Nm)) INTO V_CNT,P_INPT_NM
                               From  Gnr_Tax_Typ_Clc_Mst M,Gnr_Tax_Typ_Clc_Brn DB
                              Where M.Clc_Typ_No=DB.Clc_Typ_No 
                                And (M.Clc_Tax_Typ<>0 Or Exists(Select D.Clc_Typ_No
                                    From  Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Code_Mst T
                                    Where D.Tax_No    =T.Tax_No            
       EXCEPTION 
       END; 
        BEGIN
            Select 1,Decode(P_LNG_DFLT,1,Nvl(Clc_Typ_L_Nm, Clc_Typ_F_Nm),Nvl(Clc_Typ_F_Nm,Clc_Typ_L_Nm)) INTO V_CNT,P_INPT_NM
                                        From  Gnr_Tax_Typ_Clc_Mst M,Gnr_Tax_Typ_Clc_Brn DB
                           Where M.Clc_Typ_No=DB.Clc_Typ_No 
                                         And (M.Clc_Tax_Typ<>0 Or Exists(Select D.Clc_Typ_No
                                                 From Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Typ_Clc_Brn DB , Gnr_Tax_Code_Mst T
                                                Where D.Tax_No    =T.Tax_No            
         EXCEPTION 
         END; 
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,SC_NAME,NVL(SC_NAME,SC_NAME))INTO P_INPT_NM 
          FROM SALES_CHARGES
         WHERE SC_NO  = P_INPT_CODE1 
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,SO_A_NAME,NVL(SO_E_NAME,SO_A_NAME)) INTO P_INPT_NM 
          FROM IAS_SORDER_TYPES
         WHERE SO_TYPE = P_INPT_CODE1           
       EXCEPTION 
       END;
       BEGIN
        SELECT DECODE(P_LNG_DFLT,1,SI_A_NAME,NVL(SI_E_NAME,SI_A_NAME)) INTO P_INPT_NM 
          FROM IAS_SALES_TYPES
         WHERE SI_TYPE = P_INPT_CODE1           
       EXCEPTION 
       END;                                        
   EXCEPTION   WHEN OTHERS THEN
PROCEDURE CHK_ACCNT (     P_CUR_CODE                    IN EX_RATE.CUR_CODE%TYPE
 BEGIN
      BEGIN
        SELECT 1 INTO V_CNT FROM S_FLAGS               
             WHERE FLG_CODE = 'TYPE_NAME_SI'
      EXCEPTION WHEN OTHERS THEN
      END;
PROCEDURE CHK_GNR_DATA (  P_BRN_NO                  IN IAS_BILL_MST.BRN_NO%TYPE           DEFAULT NULL,
 BEGIN
PROCEDURE CHK_ITM  ( P_I_CODE               IN IAS_ITM_MST.I_CODE%TYPE          
       BEGIN
         SELECT P_SIZE,NVL(NO_SALE,0),NVL(INACTIVE,0) INTO P_P_SIZE,V_NO_SAL_FLG,V_INACTV_FLG
           FROM IAS_ITM_DTL 
          WHERE I_CODE = P_I_CODE AND ITM_UNT = P_ITM_UNT AND ROWNUM<=1;  
       EXCEPTION WHEN OTHERS THEN
       END; 
       SELECT NVL(USE_EXP_DATE,0) USE_EXP_DATE,NVL(USE_QTY_FRACTION,0) USE_QTY_FRACTION ,USE_BATCH_NO,
         FROM IAS_ITM_MST WHERE I_CODE = P_I_CODE AND ROWNUM<=1;
     BEGIN
               BEGIN
                  SELECT 1 INTO V_CNT 
                    FROM ITEM_MOVEMENT D 
                   WHERE I_CODE = P_I_CODE 
               EXCEPTION
               END;
               BEGIN
                  SELECT 1 INTO V_CNT 
                    FROM ITEM_MOVEMENT D 
                   WHERE I_CODE = P_I_CODE 
               EXCEPTION
               END;
     END;
PROCEDURE CHK_SUB_LDGR (  P_MST_FLG                 IN NUMBER ,  -- 1 = MST ,0 = DTL 
 BEGIN  
     ELSE -- CALL FROM DTL
               BEGIN
                SELECT CC_CODE INTO G_CC_CODE FROM SALES_MAN
                    WHERE REPRS_CODE=G_REP_CODE AND ROWNUM<=1;
               EXCEPTION WHEN OTHERS THEN
              END;               
              BEGIN
                SELECT PJ_NO INTO G_PJ_NO FROM SALES_MAN
                    WHERE REPRS_CODE=G_REP_CODE AND ROWNUM<=1;
              EXCEPTION WHEN OTHERS THEN
              END;
              BEGIN
                SELECT PJ_NO INTO G_PJ_NO FROM SALES_MAN
                    WHERE REPRS_CODE=G_REP_CODE AND ROWNUM<=1;
              EXCEPTION WHEN OTHERS THEN
              END;
 PROCEDURE CHK_AVL_QTY (  P_I_CODE        IN ITEM_MOVEMENT.I_CODE%TYPE 
BEGIN    
            BEGIN
              SELECT SUM(((NVL(I_QTY,0)-NVL(OUT_QTY,0))+(NVL(FREE_QTY,0)+NVL(OUT_FREE_QTY,0)))*NVL(P_SIZE,1)) 
                   FROM IAS_BILL_MST,IAS_BILL_DTL
                  WHERE IAS_BILL_MST.BILL_SER=IAS_BILL_DTL.BILL_SER
            EXCEPTION WHEN OTHERS THEN
            END;
            BEGIN
              SELECT SUM(((NVL(I_QTY,0)-NVL(RET_QTY,0))+(NVL(FREE_QTY,0)+NVL(RET_FREE_QTY,0)))*NVL(P_SIZE,1)) 
                   FROM IAS_RT_BILL_MST,IAS_RT_BILL_DTL
                  WHERE IAS_RT_BILL_MST.RT_BILL_SER=IAS_RT_BILL_DTL.RT_BILL_SER
        EXCEPTION WHEN OTHERS THEN
            END;
      BEGIN
          SELECT (SUM(NVL(P_QTY,0)+(NVL(FREE_QTY,0)*NVL(P_SIZE,1))) - SUM(NVL(PI_QTY,0)/NVL(P_SIZE,1))) INTO PO_QTY 
            FROM P_ORDER A , P_ORDER_DETAIL B
           WHERE A.PO_SER           = B.PO_SER
      EXCEPTION WHEN OTHERS THEN
      END;
                   BEGIN
                       SELECT NVL(SUM(NVL(CP_QTY,0)),0) /NVL( P_P_SIZE,1)
                        FROM IAS_RESERVE_DTL
                         WHERE I_CODE             = P_I_CODE
                   EXCEPTION WHEN OTHERS THEN
                     END;
PROCEDURE INSRT_RESERVE_PRC( P_I_CODE         IN ITEM_MOVEMENT.I_CODE%TYPE 
              BEGIN
                 SELECT NVL (MAX (DOC_NO), 0) + 1
                 FROM   IAS_RESERVE_MST
                 WHERE  DOC_TYPE_REF = G_DOC_TYP;
              EXCEPTION
              END;
              BEGIN
                 INSERT INTO IAS_RESERVE_MST
              EXCEPTION
              END;
       BEGIN          
        INSERT INTO IAS_RESERVE_DTL
       EXCEPTION
PROCEDURE CLR_GLBL_VAR IS
 PROCEDURE CHK_INSRT_DATA ( P_DOC_TYP  IN IAS_POST_MST.DOC_TYPE%TYPE,
        SELECT 53 DOC_TYP
          FROM SALES_ORDER WHERE ORDER_SER = P_DOC_SER; 
    BEGIN
         BEGIN
             SELECT 1 INTO V_CNT FROM (
                 SELECT ORDER_NO, ORDER_SER FROM SALES_ORDER WHERE ORDER_SER = I.DOC_SER 
                 SELECT ORDER_NO, ORDER_SER FROM ORDER_DETAIL WHERE ORDER_SER = I.DOC_SER)
             WHERE ROWNUM<=1;
         EXCEPTION 
         END;
            BEGIN
                SELECT 1 INTO V_CNT FROM ORDER_DETAIL D 
                 WHERE ORDER_SER = I.DOC_SER
                   AND EXISTS ( SELECT 1 FROM  
                                           WHERE           TI.TAX_NO = TM.TAX_NO
            EXCEPTION 
            END;
               BEGIN
                 SELECT 1 INTO V_CNT FROM GNR_RQ_TAX_ITM_MOVMNT WHERE DOC_TYPE = I.DOC_TYP AND DOC_SER = I.DOC_SER AND ROWNUM<=1;
               EXCEPTION
               END;              
                   BEGIN
                   EXCEPTION 
                   END;
        BEGIN
          SELECT  NVL(SUM(NVL(I_PRICE,0) * NVL(I_QTY,0)),0)INTO V_DOC_AMT
                     FROM ORDER_DETAIL
                    WHERE ORDER_SER=I.DOC_SER;
        EXCEPTION WHEN OTHERS THEN
        END;
            BEGIN
                UPDATE SALES_ORDER M SET DISC_AMT_DTL =(SELECT SUM((NVL(D.DIS_AMT_DTL,0)+NVL(D.DIS_AMT_DTL2,0)+NVL(D.DIS_AMT_DTL3,0))*NVL(D.I_QTY,0)) FROM ORDER_DETAIL D
                                                                                  WHERE D.ORDER_SER=M.ORDER_SER)                   
                             WHERE ORDER_SER=I.DOC_SER;
             EXCEPTION WHEN OTHERS THEN
             END; 
             BEGIN
                UPDATE ORDER_DETAIL D SET DIS_AMT_MST =(SELECT (NVL(M.DISC_AMT_MST,0)/NVL(V_DOC_AMT,0))*NVL(D.I_PRICE,0) FROM SALES_ORDER M
                                                                                  WHERE M.ORDER_SER=D.ORDER_SER)                   
                             WHERE ORDER_SER=I.DOC_SER;
             EXCEPTION WHEN OTHERS THEN
             END; 
             BEGIN
                UPDATE SALES_ORDER  SET DISC_AMT=NVL(DISC_AMT_MST,0)+NVL(DISC_AMT_DTL,0)                  
                             WHERE ORDER_SER=I.DOC_SER;
             EXCEPTION WHEN OTHERS THEN
             END;
            BEGIN
                UPDATE ORDER_DETAIL D SET DIS_AMT =NVL(DIS_AMT_MST,0)+ NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0)                  
                     WHERE ORDER_SER=I.DOC_SER;
            EXCEPTION WHEN OTHERS THEN
            END;
       /*  BEGIN    
          V_SQL := 'UPDATE SALES_ORDER M SET TAX_AMT   = ( SELECT NVL(SUM((NVL(TAX_AMT,0) * NVL(ITM_QTY,0))),0) 
                                                                    FROM GNR_RQ_TAX_MOVMNT MV
                                                                   WHERE MV.DOC_TYP = :P_DOC_TYP
                                  WHERE DOC_TYP = :P_DOC_TYP
         EXCEPTION WHEN OTHERS THEN
         END;  
         BEGIN     
              V_SQL := 'UPDATE ORDER_DETAIL D SET ITM_TAX_AMT   = ( SELECT NVL(SUM(NVL(TAX_AMT,0)),0) 
                                                                            FROM GNR_RQ_TAX_
                                                                           WHERE MV.DOC_TYP  = :P_DOC_TYP
                                                       ,ITM_TAX_PRCNT = ( SELECT NVL(SUM(NVL(TAX_PRCNT,0)),0) 
                                                                            FROM GNR_RQ_TAX_MOVMNT MV
                                                                           WHERE MV.DOC_TYP = :P_DOC_TYP
                                  WHERE DOC_SER  = :P_DOC_SER';                                                
         EXCEPTION WHEN OTHERS THEN
         END;  */
        BEGIN
             FOR M_CV IN( SELECT ROUND (NVL (ORDER_AMT, 0),  G_NO_OF_DECIMAL_AR)   DOC_AMT,
                            FROM SALES_ORDER WHERE ORDER_SER = I.DOC_SER)LOOP --LOOP MST 
            FOR D_CV IN( SELECT   ROUND(SUM(NVL(I_PRICE,0) * NVL(I_QTY,0)),G_NO_OF_DECIMAL_AR)   DOC_AMT_DTL,
                            FROM ORDER_DETAIL WHERE ORDER_SER = I.DOC_SER)LOOP ---LOOP DTL
       EXCEPTION  WHEN OTHERS THEN
       END;  
      BEGIN            
             FOR M_CV IN( SELECT   NVL(ROUND(NVL(VAT_AMT,0),G_NO_OF_DECIMAL_AR),0) VAT_AMT
                          FROM SALES_ORDER WHERE ORDER_SER = I.DOC_SER )LOOP  --MST
                FOR TAX_CV IN( SELECT  NVL(ROUND(SUM(NVL(TAX_AMT,0) * NVL(I_QTY,0)),G_NO_OF_DECIMAL_AR),0) VAT_AMT
                         FROM  GNR_RQ_TAX_ITM_MOVMNT WHERE DOC_SER = I.DOC_SER)LOOP  ---TAX
       EXCEPTION  WHEN OTHERS THEN
        BEGIN            
             FOR D_CV IN( SELECT  SUM(NVL(ROUND(NVL(VAT_AMT,0),G_NO_OF_DECIMAL_AR),0)) VAT_AMT,SUM(NVL(VAT_PER,0)) VAT_PER
                          FROM ORDER_DETAIL WHERE ORDER_SER = I.DOC_SER )LOOP  --MST
                FOR TAX_CV IN( SELECT  NVL(SUM(NVL(TAX_AMT,0)),0) VAT_AMT,NVL(SUM(NVL(TAX_PRCNT,0)),0) VAT_PER
                         FROM  GNR_RQ_TAX_ITM_MOVMNT WHERE DOC_SER = I.DOC_SER)LOOP  ---TAX                 
       EXCEPTION  WHEN OTHERS THEN
          /* BEGIN
              SELECT DOC_APPRVD_FLG INTO V_CNT FROM IAS_SYS.GNR_DDC_TBL
                    WHERE DOC_TYP=I.DOC_TYP
           EXCEPTION WHEN OTHERS THEN
           END;
            BEGIN
            EXCEPTION
            END;
    END;
Function Get_Qt_Prm  (   P_Date                    In  Date,
    Begin
    Exception When Others Then 
    End;   
             Begin                                                        
                 From Dual;
             Exception 
             End;
       Begin
         Begin
            Select 1 InTo V_Use_Qt_Prm_Tmp_Tbl From Ias_Qut_Prm_Mst Where P_Date Between F_Date And T_Date 
         Exception When Others Then
         Begin
            Select 1 InTo V_Use_Qt_Prm_Less_Price From Ias_Qut_Prm_Mst Where Qt_Prm_Type In (4,5) And P_Date Between F_Date And T_Date And RowNum<=1;
         Exception When Others Then
         Begin
            Select 1 InTo V_Use_Qt_Prm_PrmGrp From Ias_Qut_Prm_Mst Where Qt_Prm_Type In (1,2) And Qt_Prm_Method In (6,7) And P_Date Between F_Date And T_Date And RowNum<=1;        
         Exception When Others Then
         Begin
            Select 1 InTo V_Use_Qt_Prm_PrmGrp_Dsc From Ias_Qut_Prm_Mst Where ((Qt_Prm_Type In (1,2) And Qt_Prm_Method=6) Or Qt_Prm_Type In (4,5)) And P_Date Between F_Date And T_Date And RowNum<=1;
         Exception When Others Then
         Begin
            Select 1 InTo V_Use_Qt_Prm_Prm From Ias_Qut_Prm_Mst Where P_Date Between F_Date And T_Date And RowNum<=1;
         Exception When Others Then
       End;
              Begin
                Select Ias_Doc_Seq_Othr.Nextval Into V_Doc_Seq_Tmp From Dual;
              Exception
              End;
                     Begin
                    begin
                      Delete  IAS_BILL_DTL_ITM_TMP where Doc_Seq=V_Doc_Seq_Tmp;
                    Exception
                    End;
                       Insert Into IAS_BILL_DTL_ITM_TMP (Bill_Doc_Type, I_Code, Itm_Unt,P_Size,I_Qty,Qt_Free_Qty,I_Price, W_Code, C_Code, Dis_Per, Dis_Amt_Dtl, Rcrd_No, Doc_Seq,Chng_Flg)
                  Exception
                  End;
              Begin
                Select Qt_Free_Qty, I_Price, Dis_Per, Dis_Amt_Dtl, Qt_Prm_No, Qt_Prm_Ser, Qt_Prm_Rcrd_No
                  From IAS_BILL_DTL_ITM_TMP
                 Where Nvl(Chng_Flg,0)=1
              Exception When Others Then
               Begin                                                        
                 Select 
                 From Dual;
             Exception 
             End;
              Begin
                  Update Ias_Bill_Dtl_ITM_TMP Set Chng_Flg=0 Where Doc_Seq=V_Doc_Seq_Tmp; 
              Exception
              End; 
CREATE OR REPLACE PACKAGE AR_DOC_SQ_PKG
   FUNCTION GET_DOC_TYP_SERIAL (P_DOC_TYP IN NUMBER)
   FUNCTION GET_DOC_NO (
   FUNCTION GET_DOC_SRL (
 FUNCTION CHK_DOC_NO (
CREATE OR REPLACE PACKAGE BODY AR_DOC_SQ_PKG AS
   FUNCTION GET_DOC_TYP_SERIAL (P_DOC_TYP IN NUMBER)
   BEGIN
      EXECUTE IMMEDIATE ('SELECT ' || V_FLD_NM || ' FROM IAS_PARA_AR ')
   EXCEPTION
   END;
   FUNCTION GET_DOC_NO (
   BEGIN
     Begin
         Select Lang_No
           From Ias_Sys.Lang_Def
          Where Lang_Dflt = 1 And Rownum <= 1;
      Exception When others Then
      End;
            RAISE_APPLICATION_ERROR(-20001,'ERROR WHEN SELECT SERIAL TYP FOR DOCUMENTS , '|| SQLERRM);
            SELECT NVL (MAX (TO_NUMBER (QUOT_NO)), 0) + 1
              FROM QUOTATION
             WHERE BRN_NO = P_BRN_NO
                SELECT NVL (MAX (TO_NUMBER (QUOT_NO)), 0) + 1
                  FROM QUOTATION
                 WHERE QT_TYPE = P_TYP_NO AND BRN_NO = P_BRN_NO
                Select nvl(max(to_number(Order_No)),0)+1 into V_DOC_NO 
                  From Sales_Order
                 Where Brn_No = P_BRN_NO
                 Select nvl(max(to_number(Order_No)),0)+1 into V_DOC_NO 
                   From Sales_Order
                  Where So_Type = P_TYP_NO
                   select nvl(max(to_Number(bill_no)),0) +1 
                     From Ias_Bill_Mst
                    Where Brn_No = P_BRN_NO
                      select nvl(max(to_Number(bill_no)),0) +1 into V_DOC_NO from Ias_Bill_Mst 
                       where bill_doc_type=P_PAY_TYP
                      Select nvl(max(to_Number(bill_no)),0)+1 Into V_DOC_NO from Ias_Bill_Mst 
       where Cc_Code in 
                            (select Cc_Code from cost_centers
                              where nvl(c_sr,0)=(select nvl(c_sr,0) From Cost_Centers 
                                                  where Cc_Code=P_CC_CODE))
                    select nvl(max(to_Number(bill_no)),0) +1 
                      From Ias_Bill_Mst 
                     Where bill_doc_type=P_PAY_TYP
                          select nvl(max(to_Number(bill_no)),0) +1 into V_DOC_NO from Ias_Bill_Mst                                     
                           where W_Code in 
                            (select W_Code from Warehouse_Details
                              where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                  where W_Code=P_W_CODE))
                          Select nvl(max(to_Number(bill_no)),0) +1 
                           From Ias_Bill_Mst
                           Where bill_doc_type=P_PAY_TYP 
                          Select nvl(max(to_Number(bill_no)),0) +1 
                           From Ias_Bill_Mst
                           Where SI_type=P_TYP_NO
                          Select nvl(max(to_Number(bill_no)),0) +1 
                           From Ias_Bill_Mst
                           Where SI_type=P_TYP_NO
                          Select nvl(max(to_Number(bill_no)),0) +1 
                           From Ias_Bill_Mst
                           Where SI_type=P_TYP_NO
                          Select nvl(max(to_Number(bill_no)),0) +1 
                           From Ias_Bill_Mst
                           Where SI_type=P_TYP_NO
             Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  
                   From Ias_Rt_Bill_Mst 
                   Where Brn_No = P_BRN_NO
                          Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst 
                           Where Rt_Bill_Doc_Type=P_PAY_TYP 
                      Select nvl(max(to_Number(Rt_Bill_No)),0)+1 Into V_Doc_No  From Ias_Rt_Bill_Mst 
                       Where Cc_Code in 
                            (Select Cc_Code From cost_centers
                              Where nvl(c_sr,0)=(Select nvl(c_sr,0) From Cost_Centers 
                                                  Where Cc_Code=P_CC_CODE ))
                              Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst 
                               Where W_Code in (select W_Code from Warehouse_Details
                                                          where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                                              where W_Code=P_W_CODE ))
                          Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst
                           Where Rt_Bill_Doc_Type=P_PAY_TYP  
                        Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst 
                         Where Rt_Bill_Doc_Type=P_PAY_TYP 
                        Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst 
                         Where Sr_Type=P_TYP_NO 
                      Select nvl(max(to_Number(RT_bill_no)),0) +1 
                       From Ias_Rt_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                      Select nvl(max(to_Number(RT_bill_no)),0) +1 
                       From Ias_Rt_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                      Select nvl(max(to_Number(RT_bill_no)),0) +1 
                       From Ias_Rt_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                   select nvl(max(to_Number(Out_No)),0) +1 
                     From Master_Out_Bills
                    Where Brn_No = P_BRN_NO;
                      select nvl(max(to_Number(Out_No)),0) +1 into V_DOC_NO from Master_Out_Bills 
                       where bill_doc_type=P_PAY_TYP
                      Select nvl(max(to_Number(Out_No)),0)+1 Into V_DOC_NO from Master_Out_Bills 
                       where Cc_Code in 
                            (select Cc_Code from cost_centers
                              where nvl(c_sr,0)=(select nvl(c_sr,0) From Cost_Centers 
                                                  where Cc_Code=P_CC_CODE))
                    select nvl(max(to_Number(Out_No)),0) +1 
                      From Master_Out_Bills 
                     Where bill_doc_type=P_PAY_TYP
                          select nvl(max(to_Number(Out_No)),0) +1 into V_DOC_NO from Master_Out_Bills                                     
                           where W_Code in 
                            (select W_Code from Warehouse_Details
                              where nv
l(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                  where W_Code=P_W_CODE))
                          Select nvl(max(to_Number(Out_No)),0) +1 
                           From Master_Out_Bills
                           Where bill_doc_type=P_PAY_TYP 
                          Select nvl(max(to_Number(Out_No)),0) +1 
                           From Master_Out_Bills
                           Where SI_type=P_TYP_NO
                          Select nvl(max(to_Number(Out_No)),0) +1 
                           From Master_Out_Bills
                           Where SI_type=P_TYP_NO
                          Select nvl(max(to_Number(Out_No)),0) +1 
                           From Master_Out_Bills
                           Where SI_type=P_TYP_NO
                          Select nvl(max(to_Number(Out_No)),0) +1 
                           From Master_Out_Bills
                           Where SI_type=P_TYP_NO
             Select nvl(max(to_Number(Ret_No)),0) +1 into V_Doc_No  
                   From Ias_Ret_Bill_Mst 
                   Where Brn_No = P_BRN_NO;
                          Select nvl(max(to_Number(Ret_No)),0) +1 into V_Doc_No  From Ias_Ret_Bill_Mst 
                           Where Rt_Bill_Doc_Type=P_PAY_TYP 
                      Select nvl(max(to_Number(Ret_No)),0)+1 Into V_Doc_No  From Ias_Ret_Bill_Mst 
                       Where Cc_Code in 
                            (Select Cc_Code From cost_centers
                              Where nvl(c_sr,0)=(Select nvl(c_sr,0) From Cost_Centers 
                                                  Where Cc_Code=P_CC_CODE ))
                              Select nvl(max(to_Number(Ret_No)),0) +1 into V_Doc_No  From Ias_Ret_Bill_Mst 
                               Where W_Code in (select W_Code from Warehouse_Details
                                                          where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                                              where W_Code=P_W_CODE ))
                          Select nvl(max(to_Number(Ret_No)),0) +1 into V_Doc_No  From Ias_Ret_Bill_Mst
                           Where Rt_Bill_Doc_Type=P_PAY_TYP  
                        Select nvl(max(to_Number(Ret_No)),0) +1 into V_Doc_No  From Ias_Ret_Bill_Mst 
                         Where Rt_Bill_Doc_Type=P_PAY_TYP 
                        Select nvl(max(to_Number(Ret_No)),0) +1 into V_Doc_No  From Ias_Ret_Bill_Mst 
                         Where Sr_Type=P_TYP_NO 
                      Select nvl(max(to_Number(Ret_No)),0) +1 
                       From Ias_Ret_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                      Select nvl(max(to_Number(Ret_No)),0) +1 
                       From Ias_Ret_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                      Select nvl(max(to_Number(Ret_No)),0) +1 
                       From Ias_Ret_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
             Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  
                   From Ias_Rt_Bill_Mst_Rq 
                   Where Brn_No = P_BRN_NO
                          Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst_Rq 
                           Where Rt_Bill_Doc_Type=P_PAY_TYP 
                      Select nvl(max(to_Number(Rt_Bill_No)),0)+1 Into V_Doc_No  From Ias_Rt_Bill_Mst_Rq 
                       Where Cc_Code in 
                            (Select Cc_Code From cost_centers
                              Where nvl(c_sr,0)=(Select nvl(c_sr,0) From Cost_Centers 
                                                  Where Cc_Code=P_CC_CODE ))
                              Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst_Rq 
                               Where W_Code in (select W_Code from Warehouse_Details
                                                          where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                                              where W_Code=P_W_CODE ))
                          Select nvl(max(to_Number(Rt_Bill_No)),0) +1 
into V_Doc_No  From Ias_Rt_Bill_Mst_Rq
                           Where Rt_Bill_Doc_Type=P_PAY_TYP  
                        Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst_Rq 
                         Where Rt_Bill_Doc_Type=P_PAY_TYP 
                        Select nvl(max(to_Number(Rt_Bill_No)),0) +1 into V_Doc_No  From Ias_Rt_Bill_Mst_
                         Where Sr_Type=P_TYP_NO 
                      Select nvl(max(to_Number(RT_bill_no)),0) +1 
                       From Ias_Rt_Bill_Mst_Rq
                       Where Sr_TYPE=P_TYP_NO  
                      Select nvl(max(to_Number(RT_bill_no)),0) +1 
                       From Ias_Rt_Bill_Mst_Rq
                       Where Sr_TYPE=P_TYP_NO  
                      Select nvl(max(to_Number(RT_bill_no)),0) +1 
                       From Ias_Rt_Bill_Mst_Rq
                       Where Sr_TYPE=P_TYP_NO  
   EXCEPTION WHEN no_data_found then
   FUNCTION GET_DOC_SRL (
   BEGIN
            RAISE_APPLICATION_ERROR(-20001,'ERROR WHEN SELECT SERIAL TYP FOR DOCUMENT , '|| SQLERRM                           );
   EXCEPTION
                               'ERROR WHEN SELECT SERIAL TYP FOR DOCUMENT , '
   FUNCTION CHK_DOC_NO (  P_DOC_TYP       IN   NUMBER, --## 4 sales--  5 SALEs RETURN-- 52 QUOTATION --53 Sales_Order
   BEGIN    
            RAISE_APPLICATION_ERROR(-20001,'ERROR WHEN SELECT SERIAL TYP FOR DOCUMENTS , '|| SQLERRM);
            SELECT 1
              FROM QUOTATION
             WHERE BRN_NO = P_BRN_NO            
                SELECT 1
                  FROM QUOTATION
                 WHERE QT_TYPE = P_TYP_NO AND BRN_NO = P_BRN_NO
                Select 1 into V_CNT 
                  From Sales_Order
                 Where Brn_No = P_BRN_NO
                 Select 1 into V_CNT 
                   From Sales_Order
                  Where So_Type = P_TYP_NO
                   select 1 
                     From Ias_Bill_Mst
                    Where Brn_No = P_BRN_NO
                      select 1 into V_CNT
                       from Ias_Bill_Mst 
                       where bill_doc_type=P_PAY_TYP
                      Select 1 Into V_CNT from Ias_Bill_Mst 
                       where Cc_Code in 
                            (select Cc_Code from cost_centers
                      where nvl(c_sr,0)=(select nvl(c_sr,0) From Cost_Centers 
                                                  where Cc_Code=P_CC_CODE))
                    select  1 
                      From Ias_Bill_Mst 
                     Where bill_doc_type=P_PAY_TYP
                          select 1 into V_CNT 
                          from Ias_Bill_Mst                                     
                           where W_Code in 
                            (select W_Code from Warehouse_Details
                              where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                  where W_Code=P_W_CODE))
                          Select 1 
                           From Ias_Bill_Mst
                           Where bill_doc_type=P_PAY_TYP 
               Select  1 
                           From Ias_Bill_Mst
                           Where SI_type=P_TYP_NO
                          Select 1 
                           From Ias_Bill_Mst
                           Where SI_type=P_TYP_NO
                          Select  1 
                           From Ias_Bill_Mst
                           Where SI_type=P_TYP_NO
                          Select  1 
                           From Ias_Bill_Mst
                           Where SI_type=P_TYP_NO
             Select 1 into V_CNT  
                   From Ias_Rt_Bill_Mst 
                   Where Brn_No = P_BRN_NO
                          Select 1 into V_CNT 
                           From Ias_Rt_Bill_Mst 
                           Where Rt_Bill_Doc_Type=P_PAY_TYP 
                      Select 1 Into V_CNT  
                      From Ias_Rt_Bill_Mst 
                       Where Cc_Code in 
                            (Select Cc_Code From cost_centers
                              Where nvl(c_sr,0)=(Select nvl(c_sr,0) From Cost_Centers 
                                                  Where Cc_Code=P_CC_CODE ))
                              Select  1 into V_CNT 
                               From Ias_Rt_Bill_Mst 
                               Where W_Code in (select W_Code from Warehouse_Details
                                                          where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                                              where W_Code=P_W_CODE ))
                          Select 1 into V_CNT 
                           From Ias_Rt_Bill_Mst
                           Where Rt_Bill_Doc_Type=P_PAY_TYP  
                        Select 1 into V_CNT 
                         From Ias_Rt_Bill_Mst 
                         Where Rt_Bill_Doc_Type=P_PAY_TYP 
                        Select 1 into V_CNT 
                         From Ias_Rt_Bill_Mst 
                         Where Sr_Type=P_TYP_NO 
                      Select 1 
                       From Ias_Rt_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                      Select 1 
              From Ias_Rt_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                      Select 1 
                       From Ias_Rt_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                   select 1 
                     From Master_Out_Bills
                    Where Brn_No = P_BRN_NO
                      select 1 into V_CNT
                       from Master_Out_Bills 
                       where bill_doc_type=P_PAY_TYP
                      Select 1 Into V_CNT 
                      from Master_Out_Bills 
                       where Cc_Code in 
                            (select Cc_Code from cost_centers
                              where nvl(c_sr,0)=(select nvl(c_sr,0) From Cost_Centers 
                                                  where Cc_Code=P_CC_CODE))
                    select 1 
                      From Master_Out_Bills 
                     Where bill_doc_type=P_PAY_TYP
                          select 1 into V_CNT 
                          from Master_Out_Bills                                     
                           where W_Code in 
                            (select W_Code from Warehouse_Details
                              where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                  where W_Code=P_W_CODE))
                          Select  1 
                           From Master_Out_Bills
                           Where bill_doc_type=P_PAY_TYP 
                          Select 1 
                           From Master_Out_Bills
                           Where SI_type=P_TYP_NO
                          Select 1 
                           From Master_Out_Bills
                           Where SI_type=P_TYP_NO
                          Select 1 
                           From Master_Out_Bills
                           Where SI_type=P_TYP_NO
                          Select  1 
                           From Master_Out_Bills
                           Where SI_type=P_TYP_NO
             Select  1 into V_CNT  
                   From Ias_Ret_Bill_Mst 
                   Where Brn_No = P_BRN_NO
                          Select 1 into V_CNT 
                           From Ias_Ret_Bi
                           Where Rt_Bill_Doc_Type=P_PAY_TYP 
                      Select 1 Into V_CNT  From Ias_Ret_Bill_Mst 
                       Where Cc_Code in 
                            (Select Cc_Code From cost_centers
                              Where nvl(c_sr,0)=(Select nvl(c_sr,0) From Cost_Centers 
                                                  Where Cc_Code=P_CC_CODE ))
                              Select 1 into V_CNT 
                               From Ias_Ret_Bill_Mst 
                               Where W_Code in (select W_Code from Warehouse_Details
                                                          where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                                              where W_Code=P_W_CODE ))
                          Select 1 into V_CNT  
                           From Ias_Ret_Bill_Mst
                           Where Rt_Bill_Doc_Type=P_PAY_TYP  
                        Select  1 into V_CNT 
                         From Ias_Ret_Bill_Mst 
                         Where Rt_Bill_Doc_Type=P_PAY_TYP 
                        Select 1 into V_CNT 
                         From Ias_Ret_Bill_Mst 
                         Where Sr_Type=P_TYP_NO 
                      Select 1 
                       From Ias_Ret_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                      Select  1 
                       From Ias_Ret_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
                      Select  1 
                       From Ias_Ret_Bill_Mst
                       Where Sr_TYPE=P_TYP_NO  
             Select 1 into V_CNT  
                   From Ias_Rt_Bill_Mst_Rq 
                   Where Brn_No = P_BRN_NO
                          Select 1 into V_CNT 
                           From Ias_Rt_Bill_Mst_Rq 
                           Where Rt_Bill_Doc_Type=P_PAY_TYP 
                      Select 1 Into V_CNT  
                      From Ias_Rt_Bill_Mst_Rq 
                       Where Cc_Code in 
                            (Select Cc_Code From cost_centers
                              Where nvl(c_sr,0)=(Select nvl(c_sr,0) From Cost_Centers 
                                                  Where Cc_Code=P_CC_CODE ))
                              Select  1 into V_CNT 
                               From Ias_Rt_Bill_Mst_Rq 
                               Where W_Code in (select W_Code from Warehouse_Details
                                                          where nvl(W_Ser,0)=(select nvl(W_Ser,0) From Warehouse_Details 
                                                                              where W_Code=P_W_CODE ))
                          Select 1 into V_CNT 
                           From Ias_Rt_Bill_Mst_Rq
                           Where Rt_Bill_Doc_Type=P_PAY_TYP  
                        Select 1 into V_CNT 
                         From Ias_Rt_Bill_Mst_Rq 
                         Where Rt_Bill_Doc_Type=P_PAY_TYP 
                        Select 1 into V_CNT 
                         From Ias_Rt_Bill_Mst_Rq 
                         Where Sr_Type=P_TYP_NO 
                      Select 1 
                       From Ias_Rt_Bill_Mst_Rq
                       Where Sr_TYPE=P_TYP_NO  
                      Select 1 
                       From Ias_Rt_Bill_Mst_Rq
                       Where Sr_TYPE=P_TYP_NO  
                      Select 1 
                       From Ias_Rt_Bill_Mst_Rq
                       Where Sr_TYPE=P_TYP_NO  
   EXCEPTION WHEN no_data_found then
CREATE OR REPLACE PACKAGE ARS_CSS_PKG IS
   G_Exception_Err               Varchar2 (4000) := Null;
function  Get_cst_info(     P_USER_NO            IN Varchar2  ,
function  Chng_password(     P_user_no           In Varchar2  ,
function  Get_cst_blnc(      p_c_code            IN Varchar2  ,
Function  Get_group_data (  P_c_code             In Varchar2 ,         
Function  Get_itm_info(     P_c_code             In Varchar2  ,                            
function  Get_Itm_Qt_Prm(     P_C_CODE             IN Varchar2  ,                                                                                                               
Procedure Insrt_Doc_Prc(P_Xml In clob,p_lng_no IN number  Default 1,P_Json_Rslt Out Varchar2) ; 
Function Get_Sales_Order_Mst(P_C_Code In Varchar2,  P_Lng_No In Number Default 1) Return Clob;
Function Get_Sales_Order_Dtl(P_C_Code In Varchar2, P_Doc_ser  In Number Default 1, P_Lng_No In Number Default 1) Return Clob;
 Function Get_req_itm_cstmr(P_C_Code        In Varchar2, 
 Function Updt_Req_Itm_Cstmr(P_Xml In Clob, P_Lng_No In Number Default 1) Return Clob;
 Function Updt_Sal_Ordr_Cst_Accpt (P_Xml In Clob, P_Lng_No In Number Default 1) Return Clob;
   Procedure Get_Prmtr_Prc (P_Sys_No    In Number Default Null
   Procedure Insrt_Sales_Order (P_Sys_No              In     Number
   Procedure Insrt_Order_Detail (P_I_Code                 In     Order_Detail.I_Code%Type Default Null
 Procedure Chk_Inpt_Data (P_Inpt_Typ     In     Varchar2
   Procedure Get_Doc_No (P_Doc_Typ In Number);
   Procedure Get_Doc_Ser (P_Doc_Typ In Number);
   Procedure Chk_Doc_No (P_Doc_Typ    In     Number
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
   Procedure Chk_Itm (P_I_Code             In     Ias_Itm_Mst.I_Code%Type
   Procedure Chk_Sub_Ldgr (P_Mst_Flg    In     Number
   Procedure Chk_Avl_Qty (P_I_Code         In     Item_Movement.I_Code%Type
   Procedure Clr_Glbl_Var;
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
    Procedure Updt_Bill_Disc_Prc (P_Doc_Typ             In     Number
   Procedure Chk_Insrt_Data (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
  Procedure Chk_Credit_Limit (  P_Chk_CrDT_LMIT  In    NUMBER --## 0 UNCHECKCredit_Limit  1- CHECK Credit_Limit
CREATE OR REPLACE Package Body Ars_Css_Pkg
   Function Get_Cst_Info(P_User_No        In Varchar2,
   Begin
      Begin
         Select C_Code_Lgn
           From Customer
          Where C_Code_Lgn = P_User_No
      Exception
      End;
      Begin
         Select Cur_Code
           From Ars_Para_Css
          Where Rownum <= 1;
      Exception
      End;
         Begin
            Select C_Code
              From Customer
             Where C_Code_Lgn = V_Usr_No
         Exception
         End;
         Begin
            Select 1
              From Customer_Curr
             Where C_Code = V_C_Code
         Exception
         End;
         Begin
            Select 1,
              From Ias_Cst_Dvcs
             Where Dvc_Code = P_Dvc_Code
         Exception
                   Insert Into Ias_Cst_Dvcs(Rcrd_No,
         End;
         Begin
            Select 1
              From Customer_Curr
             Where C_Code = V_C_Code
         Exception
         End;
      V_Sql_Qry :=   'Select  C.C_Code,
                          From Customer C,
                               (Select Ac_Code_Dtl C_Code,
                                  From Ias_Ac_Cc_Lmt
                                 Where Ac_Dtl_Typ = 3) L
                         Where C.C_Code = ''' || V_C_Code || '''
   Exception
   Function Chng_Password(P_User_No       In Varchar2,
   Begin
      Begin
         Select C_Code_Lgn
           From Customer
          Where C_Code_Lgn = P_User_No
      Exception
      End;
         Begin
            Select 1
              From Customer
             Where C_Code_Lgn = V_Usr_No
         Exception
         End;
      Update Customer
       Where C_Code_Lgn = V_Usr_No;
   Exception
   Function Get_Cst_Blnc(P_C_Code      In Varchar2,
   Begin
      Begin
         Select 1
           From Customer
          Where C_Code = P_C_Code
      Exception
      End;
         Begin
            Select 1
              From Customer_Curr
             Where C_Code = P_C_Code
         Exception
         End;
         V_Sql_Qry := 'SELECT * FROM (        
                Select A.C_Code,
                            From Ias_Post_Dtl A, Customer B
                           Where A.Ac_Code_Dtl = B.C_Code
                        Group By A.C_Code,
                        Select A.C_Code,
                                                From Ias_Post_Dtl A, Customer B
                                               Where A.Ac_Code_Dtl = B.C_Code
                                            Order By Doc_Date desc,A_Cy,Doc_Type,Doc_No  ';
         V_Sql_Qry := 'Select C_Code,
                          From (  Select C_Code,
                                    From (  Select A.C_Code,
                                              From Ias_Post_Dtl A, Customer B
                                             Where A.Ac_Code_Dtl = B.C_Code
                                          Group By A.C_Code, Decode(' || P_Lng_No || ', 1, Nvl(C_A_Name, C_E_Name), Nvl(C_E_Name, C_A_Name)), A_Cy
                                            Select A.C_Code,
                                              From Ias_Post_Dtl A, Customer B
                                             Where A.Ac_Code_Dtl = B.C_Code
                                          Group By A.C_Code, Decode(' || P_Lng_No || ', 1, Nvl(C_A_Name, C_E_Name), Nvl(C_E_Name, C_A_Name)), A_Cy)
                                Group By C_Code, C_Name, A_Cy)';
         V_Sql_Qry :='Select Round(Sum(Decode(A_Cy, Ys_Gen_Pkg.Get_Local_Cur, Nvl(Amt, 0), Nvl(Amt_F, 0))), 2) Blnc_Amt
                        From Ias_Post_Dtl
                       Where Ac_Dtl_Typ = 3
   Exception
   Function  Get_group_data (   P_c_code             In Varchar2 ,                            
      V_Whr          Varchar2(32000):=' Where 1=1';
   Begin
      Begin
         Select 1
           From Customer
          Where C_Code = P_C_Code
      Exception
      End;
      Begin
         Select Conn_Cst_Itm_Actvty
           From Ars_Para_Css
          Where Rownum <= 1;
      Exception
      End;      
         V_Whr_actvty := ' And Exists (Select 1 From Ias_cst_itm_actvty 
                                        Where C_Code =''' || P_C_Code || '''
      V_Sql_Qry      := ' Select G_Code,Mng_Code,Subg_Code,Assistant_No,Detail_No,G_Name,Grp_Typ
                            From (Select Nvl(G_Code, ''0'') G_Code,
                                    From (Select G_Code,
                                            From Group_Details
                                           Where Exists
                                                    (Select 1
                                                       From Ias_Itm_Mst
                                                      Where Use_Itm_In_Css_Sys_Flg = 1
                                          Select G_Code,
                                            From Ias_Mainsub_Grp_Dtl
                                           Where Exists
                                                    (Select 1
                                                       From Ias_Itm_Mst
                                                      Where Use_Itm_In_Css_Sys_Flg = 1
                                          Select G_Code,
                                            From Ias_Sub_Grp_Dtl
                                           Where Exists
                                                    (Select 1
                                                       From Ias_Itm_Mst
                                                      Where Use_Itm_In_Css_Sys_Flg = 1
                                          Select G_Code,
                                            From Ias_Assistant_Group
                                           Where Exists
                                                    (Select 1
                                                       From Ias_Itm_Mst
                                                      Where Use_Itm_In_Css_Sys_Flg = 1
                                          Select G_Code,
                                            From Ias_Detail_Group
                                           Where Exists
                                                    (Select 1
                                                       From Ias_Itm_Mst
                                                      Where Use_Itm_In_Css_Sys_Flg = 1
                        Order By Grp_Typ,
   Exception
   Function  Get_itm_info(      P_c_code             In Varchar2  ,                            
   Begin
      Begin
         Select 1
           From Customer
          Where C_Code = P_C_Code
      Exception
      End;
      Begin
         Select Nvl(New_Itm_Prd_Day, 0), Nvl(Itm_Not_Store_Prd_Day, 0), Nvl(Conn_Cst_Itm_Actvty, 0)
           From Ars_Para_Css;
      Exception
      End;
         V_Whr := V_Whr || ' AND Exists(SELECT 1 FROM IAS_CST_ITM_ACTVTY  
                                          WHERE C_CODE=''' || P_C_Code || ''' 
            V_Whr := V_Whr || '  AND NOT Exists(SELECT 1 FROM ITEM_MOVEMENT WHERE I_CODE=I.I_CODE AND ROWNUM<=1)';
         V_Sql_Qry := 'Select I.I_Code,
                               Nvl((Select I_Qty
                                      From Ias_Cst_Itm_Lmt_Sal
                                     Where C_Code = ''' || P_C_Code || ''' 
                          From Ias_Itm_Mst I
                          WHERE USE_ITM_IN_CSS_SYS_FLG=1 ' || V_Whr;
         V_Sql_Qry := ' Select I.I_Code,
                           Nvl((Select I_Qty
                                  From Ias_Cst_Itm_Lmt_Sal
                                 Where C_Code = ''' || P_C_Code || ''' 
                      From Ias_Itm_Mst I, Gr_Detail G
                     Where I.I_Code = G.I_Code
                                   (  Select 1
                                        From Item_Movement
                                       Where I_Code = I.I_Code
                                    Group By I_Code)
                                      (Select 1
                                         From Gr_Detail
                                        Where I_Code = I.I_Code
   Exception
Function Get_Itm_Qt_Prm ( P_C_Code        In Varchar2,  
   Begin      
      Begin
         Select 1
           From Customer
          Where C_Code = P_C_Code
      Exception
      End;
      Begin
         Select Nvl(New_Itm_Prd_Day, 0), Nvl(Itm_Not_Store_Prd_Day, 0), Nvl(Conn_Cst_Itm_Actvty, 0)
           From Ars_Para_Css;
      Exception
      End;
         V_Whr := V_Whr || ' AND Exists(SELECT 1 FROM IAS_CST_ITM_ACTVTY  
                                          WHERE C_CODE=''' || P_C_Code || ''' 
                               (Select Flg_Desc 
                                       From S_Flags
                                       Where Lang_No='|| P_Lng_No ||'
                               (Select Flg_Desc 
                                       From S_Flags
                                       Where Lang_No='|| P_Lng_No ||'
                        Select M.Quot_No,
                          From  Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D
                          Where M.Quot_Ser = D.Quot_Ser
                        Select M.Quot_No,
                          From  Ias_Qut_Prm_Mst M,Ias_Qut_Prm_Dtl D, Ias_Qut_Prm_Sub_Dtl S
                         Where M.Quot_Ser = D.Quot_Ser
                               where t.i_code=i.i_code
   Exception
 Function Get_Sales_Order_Mst(P_C_Code In Varchar2,  P_Lng_No In Number Default 1)
   Begin
      Begin
         Select 1
           From Customer
          Where C_Code = P_C_Code
      Exception
      End;
         V_Sql_Qry := 'Select  m.order_no doc_no,
                          From Sales_Order M                                                   
                          WHERE c_code='''||P_c_code||'''
                          and exists( select 1 from 
                              where d.order_ser=M.order_ser
                          Order By Ad_date Desc';
   Exception
 Function Get_Sales_Order_Dtl(P_C_Code In Varchar2, P_Doc_ser  In Number Default 1, P_Lng_No In Number Default 1)
   Begin
      Begin
         Select 1
           From Customer
          Where C_Code = P_C_Code
      Exception
      End;
         V_Sql_Qry := 'Select D.I_code,
                          From Sales_order M,Order_detail D, Ias_itm_mst I                            
                          Where M.Order_ser=D.Order_ser
   Exception
 Function Get_req_itm_cstmr ( P_C_Code         In Varchar2, 
   Begin
      Begin
         Select 1
           From Customer
          Where C_Code = P_C_Code
      Exception
      End;
         V_Sql_Qry := 'Select  d.DOC_NO_REF,
                               nvl((Select nvl(Avl_Qty,0)-nvl(Rsrv_Qty,0)-nvl(Net_Out_Bill_Qty,0)                                       
                                        From Table(Inv_Qty_Pkg.Get_Avl_Qty_Fnc(P_Itm_Code      => d.I_Code,
                          From  Ias_rq_itm_cstmr d, Ias_Itm_Mst I                            
                          WHERE d.i_code=I.i_code
                          Order By D.Ad_date Desc ';      
   Exception
Function Updt_Req_Itm_Cstmr(P_Xml In Clob, P_Lng_No In Number Default 1)
   Begin
      Select U_Id
        From User_R
       Where Css_Usr_Flg = 1
   Exception
   End;
   For D_Cv In (Select Extractvalue(Value(Xmldtldmy), '*/I_CODE               ') As I_Code,
                  From Table(Xmlsequence(Extract(V_Xml_Type, '/REQ_ITM/ITM'))) Xmldtldmy)
      --## -update rq_itm_cstmr ##--
      Begin
         Update Ias_Rq_Itm_Cstmr
          Where I_Code = D_Cv.I_Code
      Exception
      End;
Exception
Function Updt_Sal_Ordr_Cst_Accpt (P_Xml In Clob, P_Lng_No In Number Default 1)
   Begin
      Select U_Id
        From User_R
       Where Css_Usr_Flg = 1
   Exception
   End;
   For M_Cv In (Select Extractvalue(Value(Xmldtldmy), '*/DOC_SER              ') As Doc_ser,
                  From Table(Xmlsequence(Extract(V_Xml_Type, '/CST_ACCPT/SAL_ORDR'))) Xmldtldmy)
         Begin
           Select Decode(Nvl(Procesed,0),1,4,Nvl(Approved,0)) Into V_stat From Sales_order Where Order_ser=M_cv.Doc_Ser;
         Exception When Others Then
         End;          
      --## -update Sales Order ##--
      Begin
         UPDATE Sales_order
          WHERE Order_ser = M_cv.Doc_ser;
      Exception
            Raise_Application_Error(-20001, 'Error When Update Sale Order Customer Accept , ' || Chr(10) || Sqlerrm);
      End;
Exception
      Raise_Application_Error(-20002, 'Error When Update Sale Order Customer Accept , ' || Chr(10) || Sqlerrm);
Procedure Insrt_Doc_Prc(P_Xml In clob,p_lng_no IN number  Default 1,P_Json_Rslt Out Varchar2)
   Begin
      Select So_Type,
        From Ars_Para_Css, Ias_Para_Ar, Ias_Para_Inv,ias_para_gen;
   Exception
   End;
   For M_Cv In (Select Extractvalue(Value(Xmlmstdmy), '*/C_CODE               ') As C_Code
                  From Table(Xmlsequence(Extract(V_Xml_Type, '/SAL_ORDR/SALES_ORDER'))) Xmlmstdmy)
         Begin
           Select Decode(Nvl(Procesed,0),1,4,Nvl(Approved,0)) Into V_stat From Sales_order Where Order_no=M_cv.Doc_no And Order_ser=M_cv.Doc_Ser;
         Exception When Others Then
         End;          
         Begin
            Delete Sales_order Where Order_ser=M_cv.Doc_ser;
            Delete S_apprvd_mov Where Doc_ser=M_cv.Doc_ser;
            Delete Ias_reserve_mst Where Doc_ser_ref=M_cv.Doc_ser;
         Exception When Others Then Null;
         End;
      Begin
             Begin
               Select Count(1) Into V_cnt From Sales_order Where C_code=M_cv.C_code And Nvl(Procesed,0)=0;
             Exception When Others Then
             End;          
         Begin
            Select Clc_Typ_No_Tax, Clc_Vat_Price_Typ, Conn_Brn_No
              From Customer
             Where C_Code = M_Cv.C_Code
         Exception
         End;
         Begin
            Select Lev_No_Csh, Lev_No
              From Customer_Curr
             Where C_Code = M_Cv.C_Code
         Exception
         End;
               Begin
                  Select W_Code
                    From Ias_Cst_Itm_Actvty
                   Where C_Code = M_Cv.C_Code
Exception
               End;
         Begin
            Select Brn_Usr
              From S_Brn
             Where Brn_No = V_Conn_Brn_No
         Exception
         End;
         Begin
            Select Dvc_Code
              From Ias_Cst_Dvcs
             Where C_Code = M_Cv.C_Code
         Exception
         End;
         Begin
            Select U_Id
              From User_R
             Where CSS_USR_FLG = 1
         Exception
         End;
         Begin
         Exception
         End;
         For D_Cv In (Select Extractvalue(Value(Xmldtldmy), '*/I_CODE               ') As I_Code,
                        From Table(Xmlsequence(Extract(V_Xml_Type, '/SAL_ORDR/ORDER_DETAIL'))) Xmldtldmy)
            Begin
                     Begin
                        Select W_Code
                          From Ias_Cst_Itm_Actvty
                         Where C_Code = M_Cv.C_Code
                               And Activity_No = (Select Activity_No
                                                    From Ias_Itm_Mst
                                                   Where I_Code = D_Cv.I_Code
                     Exception
                     End;
               Begin
                  Select Avl_Qty, Rsrv_Qty, Net_Out_Bill_Qty
                    From Table(Inv_Qty_Pkg.Get_Avl_Qty_Fnc(P_Itm_Code      => D_Cv.I_Code,
               Exception
               End;
                    Begin
                         Select C_Group_Code,C_Class,C_Degree InTo V_C_Group_Code,V_C_Class,V_C_Degree 
                           From Customer 
                          Where C_Code= M_Cv.C_Code
                    Exception WHen Others Then
                    End;  
               Begin                                          
                 Select V_qt_prm_type,
                   From Table(Ars_mobile_trns_pkg.Get_qt_prm  ( P_date               => To_Date(Ias_Gen_Pkg.Get_Curdate, 'DD/MM/YYYY'),       
               Exception When Others Then Null;                   
               End; 
                  Begin                  
                  Exception
                  End;  
                         Begin
                            Update Ias_rq_itm_cstmr
                          Where I_code = D_cv.I_code 
                         Exception
                         End;
                         Begin
                            Select 1 Into V_cnt From Ias_rq_itm_cstmr
                             Where I_code = D_cv.I_code 
                        Exception When Others Then
                        End;
                          Begin
                               Insert Into Ias_rq_itm_cstmr
                      Exception
                          End;
            End;     
            BEGIN
                Delete From Sales_order Where Order_ser=G_doc_ser;
                Update Ias_rq_itm_cstmr Set Doc_ser_ref=0,Doc_no_ref=0
                  Where  Doc_ser_ref=G_doc_ser
            Exception When Others Then 
            End; 
      End;
Exception
   Procedure Get_Prmtr_Prc (P_Sys_No    In Number Default Null
   Begin
      Begin
         Select Lang_No
           From Ias_Sys.Lang_Def
          Where Lang_Dflt = 1 And Rownum <= 1;
      Exception
            Raise_Application_Error (-20005, 'Error When Select Deflt LANG  , ' || Sqlerrm);
      End;
      Begin
         Select Nvl (Check_Lmt_Sorder, 0)
           From Ias_Para_Gen
      Exception
            Raise_Application_Error (-20006, 'Error When Select PARAMETER , ' || Sqlerrm);
      End;
         Begin
            Select Max (Yr_No)
              From S_Prd_Dtl
             Where To_Date (Sysdate, 'DD/MM/RRRR') Between F_Date And T_Date;
         Exception
         End;
      Begin
      Exception
      End;
         V_Msg_Txt := 'Error When Select Local Cur. from EX_RATE';
         V_Msg_Txt := 'Error When Select Stock Cur. from EX_RATE ';
   Exception
 Procedure Insrt_Sales_Order (P_Sys_No              In     Number
   Begin
         Begin
            Select Max (Yr_No)
              From S_Prd_Dtl
             Where To_Date (P_Doc_Date, 'DD/MM/RRRR') Between F_Date And T_Date;
         Exception
         End;
            Begin
               Select Credit_Period
                 From Customer
                Where C_Code = P_C_Code And Rownum <= 1;
            Exception
            End;
         Begin
            Select G_Doc_Date + Nvl (G_Max_Prd_Exp_Date_So_Day, 1) Into V_Ordr_Exp_Date From Dual;
         Exception
         End;
            Begin
               Select R_Code
                 From Customer
                Where C_Code = P_C_Code And Rownum <= 1;
            End;
      Begin
         Select 1
           From Sales_Order
          Where Order_Ser = G_Doc_Ser And Rownum <= 1;
      Exception
      End;
      Insert Into Sales_Order (Order_No
   Exception
         Raise_Application_Error (-20050, 'Error When Insert Into Sales Order Master , ' || Chr (10) || Sqlerrm);
   Procedure Insrt_Order_Detail (P_I_Code                 In     Order_Detail.I_Code%Type Default Null
   Begin
              BEGIN
              SELECT DOC_NO,DOC_SER INTO G_DOC_NO,G_DOC_SER FROM ARS_SAL_ORDR_MST WHERE DOC_M_SQ = G_DOC_M_SQ AND ROWNUM<=1;
        EXCEPTION
          END;*/
      Begin
      Exception
      End;
         Begin
            Select 1
              From Ias_Sys.Ias_Docjv_Type_Systems
             Where Doc_Type = P_Doc_Type_Ref And Rownum <= 1;
         Exception
         End;
            Begin
               Select 1
                 From Quotation_Detail
                Where Quot_No = P_Doc_No_Ref And Quot_Ser = P_Doc_Ser_Ref And Rownum <= 1;
            Exception
            End;
         Begin
            Select Ias_Doc_Seq_Othr.Nextval Into V_Doc_Seq From Dual;
         Exception
         End;
          BEGIN
          EXCEPTION WHEN OTHERS THEN
          End;
      Insert Into Order_Detail (So_Type
   Exception
         Raise_Application_Error (-20063, 'Error When Insert Into Sales Order Detail , ' || Chr (10) || Sqlerrm);
    Procedure Get_Doc_No (P_Doc_Typ In Number)
   Begin
            Begin
               Select Nvl (Max (To_Number (Order_No)), 0) + 1
                Where Brn_No = G_Brn_No;
            Exception
           End;
            Begin
               Select Nvl (Max (To_Number (Order_No)), 0) + 1
                 From Sales_Order
                Where So_Type = G_So_Type And Brn_No = G_Brn_No;
            Exception
            End;
   Procedure Get_Doc_Ser (P_Doc_Typ In Number)
   Begin
            Select G_Brn_Year || Lpad (G_Brn_No, 6, '0') || P_Doc_Typ || G_Doc_No Into G_Doc_Ser From Dual;
            Select G_Brn_Year || Lpad (G_Brn_No, 6, '0') || P_Doc_Typ || To_Number (Ltrim (G_Doc_No)) || Ltrim (Lpad (G_So_Type, 5, '0')) Into G_Doc_Ser From Dual;
   Procedure Chk_Doc_No (P_Doc_Typ    In     Number
   Begin
            V_Cnt := Ias_Gen_Pkg.Get_Cnt ('Select 1 from Sales_Order 
                                       where Order_No=' || P_Doc_No || '
            V_Cnt := Ias_Gen_Pkg.Get_Cnt ('Select 1 from Sales_Order 
                                       where Order_No=' || P_Doc_No || '
   Procedure Chk_Inpt_Data (P_Inpt_Typ     In     Varchar2
   Begin
         Begin
            Select Decode (P_Lng_Dflt, 1, U_A_Name, Nvl (U_E_Name, U_A_Name)), Nvl (Inactive, 0)
              From User_R
             Where U_Id = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Cmp_Lname, Nvl (Cmp_Fname, Cmp_Lname)), Nvl (Inactive, 0)
              From S_Brn
             Where Brn_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, A_Name, Nvl (A_Name_Eng, A_Name)), Nvl (Ac_Close, 0)
              From Account
             Where     A_Code = P_Inpt_Code1
                   And A_S_M In (Select Account_Type
                                   From Account_Types
                                  Where Affected_By_Trans = 1 And Rownum <= 1)
         Exception
         End;
         Begin
            /*SELECT DECODE(P_LNG_DFLT,1,AC_CODE_DTL_L_NM,NVL(AC_CODE_DTL_F_NM,AC_CODE_DTL_L_NM)),NVL(INACTV_FLG,0) INTO P_INPT_NM,V_INACTV_FLG
              FROM GNR_ACCNT_DTL_VW
             WHERE AC_CODE     = P_INPT_CODE1
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Emp_L_Nm, Nvl (Emp_F_Nm, Emp_L_Nm)), Nvl (Inactive, 0), Nvl (Emp_St, 0)
              From S_Emp
             Where Emp_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, C_A_Name, Nvl (C_E_Name, C_A_Name)), Nvl (Inactive, 0)
              From Customer
             Where C_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, V_A_Name, Nvl (V_E_Name, V_A_Name)), Nvl (Inactive, 0)
              From V_Details
             Where V_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Reprs_A_Name, Nvl (Reprs_E_Name, Reprs_A_Name)), Nvl (Inactive, 0)
              From Sales_Man
             Where Reprs_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Col_Name, Nvl (Col_E_Name, Col_Name)), Nvl (Inactive, 0)
              From Collerctor
             Where Col_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Cc_A_Name, Nvl (Cc_E_Name, Cc_A_Name)), Nvl (Inactive, 0)
              From Cost_Centers
             Where     Cc_Code = P_Inpt_Code1
                   And C_S_M In (Select Cc_Type
                                   From Cost_Center_Types
                                  Where Affected_By_Trans = 1 And Rownum <= 1)
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Pj_A_Name, Nvl (Pj_E_Name, Pj_A_Name)), Nvl (Inactive, 0)
              From Ias_Projects
             Where Pj_No = P_Inpt_Code1 And Pj_Sub = 1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Actv_A_Name, Nvl (Actv_E_Name, Actv_A_Name)), Nvl (Inactive, 0)
              From Ias_Actvty
             Where Actv_No = P_Inpt_Code1 And Actv_Sub = 1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, R_A_Name, Nvl (R_E_Name, R_A_Name))
              From Regions
             Where R_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
            Select Decode (P_Lng_Dflt, 1, W_Name, Nvl (W_E_Name, W_Name)), Nvl (Inactive, 0), Conn_Brn_No
              From Warehouse_Details
             Where W_Code = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Cash_Name, Nvl (Cash_E_Name, Cash_Name)), Nvl (Inactive, 0), Conn_Brn_No
              From Cash_In_Hand
             Where Cash_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Bank_Name, Nvl (Bank_E_Name, Bank_Name)), Nvl (Inactive, 0), Conn_Brn_No
              From Cash_At_Bank
             Where Bank_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Lev_A_Name, Nvl (Lev_E_Name, Lev_A_Name)), Nvl (Inactive, 0)
              From Ias_Pricing_Levels
             Where Lev_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Lev_A_Name, Nvl (Lev_E_Name, Lev_A_Name)), Nvl (M.Inactive, 0)
              From Ias_Pricing_Levels M, Ias_Item_Price D
             Where M.Lev_No = D.Lev_No And M.Lev_No = P_Inpt_Code1 And D.I_Code = P_Inpt_Code2 And D.Itm_Unt = P_Inpt_Code3 And Rownum <= 1;
         Exception
         End;
           BEGIN
            SELECT DECODE(G_LNG_DFLT,1,TYP_L_NM,NVL(TYP_F_NM,TYP_L_NM)),NVL(INACTV_FLG,0) INTO P_INPT_NM,V_INACTV_FLG
              FROM GNR_DOC_TYP_DTL
             WHERE DOC_TYP = P_INPT_CODE1
           EXCEPTION
           END;
         Begin
            Select Decode (P_Lng_Dflt, 1, Tax_L_Nm, Nvl (Tax_F_Nm, Tax_L_Nm)), Nvl (Inactive, 0)
              From Gnr_Tax_Code_Mst
             Where Tax_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1, Decode (P_Lng_Dflt, 1, Nvl (Clc_Typ_L_Nm, Clc_Typ_F_Nm), Nvl (Clc_Typ_F_Nm, Clc_Typ_L_Nm))
              From Gnr_Tax_Typ_Clc_Mst M, Gnr_Tax_Typ_Clc_Brn Db
             Where     M.Clc_Typ_No = Db.Clc_Typ_No
                              (Select D.Clc_Typ_No
                                 From Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Code_Mst T
                                Where D.Tax_No = T.Tax_No And D.Clc_Typ_No = M.Clc_Typ_No And T.Clc_Doc_Typ In (1, 3) And Rownum <= 1))
         Exception
         End;
            Begin
               Select 1, Decode (P_Lng_Dflt, 1, Nvl (Clc_Typ_L_Nm, Clc_Typ_F_Nm), Nvl (Clc_Typ_F_Nm, Clc_Typ_L_Nm))
                 From Gnr_Tax_Typ_Clc_Mst M, Gnr_Tax_Typ_Clc_Brn Db
                Where     M.Clc_Typ_No = Db.Clc_Typ_No
                                 (Select D.Clc_Typ_No
                                    From Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Typ_Clc_Brn Db, Gnr_Tax_Code_Mst T
                                   Where D.Tax_No = T.Tax_No And D.Clc_Typ_No = M.Clc_Typ_No And D.Clc_Typ_No = Db.Clc_Typ_No And T.Clc_Doc_Typ In (1, 3) And Db.Brn_No = Decode (Nvl (P_Inpt_Code2, 0),  0, 0,  Db.Brn_No, Nvl (P_Inpt_Code2, 0)) And Rownum <= 1))
            Exception
            End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Sc_Name, Nvl (Sc_Name, Sc_Name))
              From Sales_Charges
             Where Sc_No = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, So_A_Name, Nvl (So_E_Name, So_A_Name))
              From Ias_Sorder_Types
             Where So_Type = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Si_A_Name, Nvl (Si_E_Name, Si_A_Name))
              From Ias_Sales_Types
             Where Si_Type = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
         Begin
            Select Decode (P_Lng_Dflt, 1, Sr_A_Name, Nvl (Sr_E_Name, Sr_A_Name))
              From Ias_Rt_Sales_Types
             Where Sr_Type = P_Inpt_Code1 And Rownum <= 1;
         Exception
         End;
   Exception
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
   Begin
         Begin
            Select 1
              From S_Flags
             Where Flg_Code = 'TYPE_NAME_SI' And Flg_Value = Nvl (P_Bill_Doc_Type, 0) And Rownum <= 1;
         Exception
         End;
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
   Begin
   Procedure Chk_Itm (P_I_Code             In     Ias_Itm_Mst.I_Code%Type
   Begin
         Begin
            Select 1
              From Ias_Itm_Mst
             Where I_Code = P_I_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Ias_Itm_Dtl
             Where I_Code = P_I_Code And Itm_Unt = P_Itm_Unt And Rownum <= 1;
         Exception
         End;
            Select Nvl (Use_Exp_Date, 0) Use_Exp_Date
              From Ias_Itm_Mst
             Where I_Code = P_I_Code And Rownum <= 1;
      Begin
               Begin
                  Select 1
                    From Item_Movement D
                   Where I_Code = P_I_Code And Expire_Date = P_Expire_Date And W_Code = G_W_Code And Rownum <= 1;
               Exception
               End;
               Begin
                  Select 1
                    From Item_Movement D
                   Where I_Code = P_I_Code And Batch_No = P_Batch_No And W_Code = G_W_Code And Rownum <= 1;
               Exception
               End;
      End;
   Procedure Chk_Sub_Ldgr (P_Mst_Flg    In     Number
   Begin
      Else                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             -- CALL FROM DTL
            Begin
               Select Cc_Code
                 From Sales_Man
                Where Reprs_Code = G_Rep_Code And Rownum <= 1;
            Exception
            End;
            Begin
               Select Pj_No
                 From Sales_Man
                Where Reprs_Code = G_Rep_Code And Rownum <= 1;
            Exception
            End;
            Begin
               Select Pj_No
                 From Sales_Man
                Where Reprs_Code = G_Rep_Code And Rownum <= 1;
            Exception
            End;
  Procedure Chk_Avl_Qty(P_I_Code         In     Item_Movement.I_Code%Type,
   Begin
       Select Avl_Qty,
         From Table(Inv_Qty_Pkg.Get_Avl_Qty_Fnc(P_Itm_Code      => P_I_Code,
   Exception When Others Then
   End; 
Exception
 Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
   Begin
            Begin
               Select Nvl (Max (Doc_No), 0) + 1
                 From Ias_Reserve_Mst
                Where Doc_Type_Ref = G_Doc_Typ;
            Exception
            End;
            Begin
               Insert Into Ias_Reserve_Mst (Doc_Type
            Exception
            End;
         Begin
            Insert Into Ias_Reserve_Dtl (Doc_Type
         Exception
         End;
     Procedure Updt_Bill_Disc_Prc (P_Doc_Typ             In     Number
   Begin
      Select Nvl (Calc_Si_Disc_Without_Itm_Disc, 0), Nvl (No_Of_Decimal_Ar, 2), Nvl (Show_Disc_Per_Items_Ar, 0)
        From Ias_Para_Ar;
      Execute Immediate 'SELECT NVL(SUM((NVL(I_QTY,0) * NVL(I_PRICE,0))),0),NVL(SUM((NVL(I_QTY,0) * NVL(I_PRICE_VAT,0))),0) 
                         FROM ' || V_Tbl_Dtl_Nm || '
                         WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Bill_Amt, V_Bill_Amt_Vat;
      Execute Immediate 'SELECT  nvl(disc_amt_Mst,0) ,NVL(disc_amt_mst_vat,0)
                       FROM ' || V_Tbl_Mst_Nm || ' 
                       WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Disc_Amt_Mst, V_Disc_Amt_Mst_Vat;
         Begin
               Begin
                  Execute Immediate ' UPDATE ' || V_Tbl_Dtl_Nm || ' SET 
                                                     WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
               Exception
                     Raise_Application_Error (-20040, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate '  UPDATE  ' || V_Tbl_Dtl_Nm || ' SET 
                                                         WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
               Exception
                     Raise_Application_Error (-20041, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate '  UPDATE ' || V_Tbl_Dtl_Nm || ' SET 
                                                         WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
               Exception
                     Raise_Application_Error (-20042, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
                  Begin
                     Execute Immediate '  UPDATE ' || V_Tbl_Dtl_Nm || ' SET 
                                                           WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
                  Exception
                        Raise_Application_Error (-20043, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
                  End;
                  Begin
                     Execute Immediate '  UPDATE ' || V_Tbl_Dtl_Nm || ' SET 
                                                         WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '
                  Exception
                        Raise_Application_Error (-20044, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
                  End;
         End;
      Begin
          Begin
               Execute Immediate 'SELECT SUM((NVL(DIS_AMT_DTL_VAT,0)+NVL(DIS_AMT_DTL2_VAT,0)+NVL(DIS_AMT_DTL3_VAT,0))*NVL(I_QTY,0)) 
                                               FROM ' || V_Tbl_Dtl_Nm || ' 
                                    WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Sum_Dis_Amt_Dtl_Vat;
            Exception
                  Raise_Application_Error (-20045, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
            End;
            Begin
               Execute Immediate ' SELECT SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0))*NVL(I_QTY,0)) 
                                      FROM ' || V_Tbl_Dtl_Nm || '
                                     WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Sum_Dis_Amt_Dtl;
                  Raise_Application_Error (-20046, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
            End;
      Exception
      End;
               Begin
                  Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt_Mst_Vat=Round((((' || Nvl (V_Bill_Amt_Vat, 0) || '- ' || Nvl (V_Sum_Dis_Amt_Dtl_Vat, 0) || ')*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ') 
                         WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
               Exception
                     Raise_Application_Error (-20047, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt_Mst_Vat=Round(((' || Nvl (V_Bill_Amt_Vat, 0) || '*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ') 
                                           WHERE  ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
               Exception
                     Raise_Application_Error (-20048, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt_Mst=Round((((' || Nvl (V_Bill_Amt, 0) || '- ' || Nvl (V_Sum_Dis_Amt_Dtl, 0) || ')*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ')
                                                     WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
               Exception
                     Raise_Application_Error (-20049, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate ' UPDATE  ' ||
                                WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
               Exception
                     Raise_Application_Error (-20050, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
         Begin
            Execute Immediate ' SELECT NVL(disc_amt_mst_vat,0)  FROM ' || V_Tbl_Mst_Nm || ' 
                                        WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || ' 
         Exception
               Raise_Application_Error (-20051, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || ' Set Dis_Amt_Mst_Vat = ((((100 *' || Nvl (V_Disc_Amt_Mst_Vat, 0) || ')/' || V_Bill_Amt_Vat || ')*Nvl(i_price_vat,0))/100),
           Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20052, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' Set Disc_Amt_Mst = (Select SUM(Nvl(I_Qty,0)*Nvl(Dis_Amt_Mst,0)) From ' || V_Tbl_Dtl_Nm || ' Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || '),
                                  Disc_Amt_Dtl = (Select SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0))*NVL(I_QTY,0)) From ' || V_Tbl_Dtl_Nm || ' Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser || ')                              
           Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20053, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || '  Set Dis_Amt = Nvl(Dis_Amt_Mst,0)+NVL(Dis_Amt_Dtl,0)+NVL(Dis_Amt_Dtl2,0)+NVL(Dis_Amt_Dtl3,0)
           Where ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20054, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            -- Update Ias_Bill_Mst Set Disc_Amt = Nvl(Disc_Amt_Mst,0)+Nvl(Disc_Amt_Dtl,0) Where Bill_Ser=P_DOC_SER;
            Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt=Round((nvl(disc_amt_mst,0)+nvl(disc_amt_dtl,0)+nvl(Disc_Amt_Aftr_Vat,0)),' || V_No_Of_Decimal || ') 
                        WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20055, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
                  Begin
                     Update Ias_Bill_Dtl_Br A
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                      Where Bill_Ser = P_Doc_Ser;
                  Exception
                  End;
                  Begin
                     Update Ias_Bill_Dtl_Br A
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                               (Select ( (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)) + Nvl (A.Dis_Amt_Dtl, 0) + Nvl (A.Dis_Amt_Dtl2, 0) + Nvl (A.Dis_Amt_Dtl3, 0)
                                  From Ias_Bill_Mst_Br
                                 Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                      Where Bill_Ser = P_Doc_Ser;
                  Exception
                  End;
                  Begin
      Update Ias_Rt_Bill_Dtl_Br A
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Rt_Bill_Ser = A.Rt_Bill_Ser And Rt_Bill_Ser = P_Doc_Ser)
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Rt_Bill_Ser = A.Rt_Bill_Ser And Rt_Bill_Ser = P_Doc_Ser)
                      Where Rt_Bill_Ser = P_Doc_Ser;
                  Exception
                  End;
                  Begin
                     Update Ias_Rt_Bill_Dtl_Br A
                               (Select (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Rt_Bill_Ser = A.Rt_Bill_Ser And Rt_Bill_Ser = P_Doc_Ser)
                               (Select ( (Nvl (Disc_Amt_Mst, 0) / Nvl (Bill_Amt, 0)) * Nvl (A.I_Price, 0)) + Nvl (A.Dis_Amt_Dtl, 0) + Nvl (A.Dis_Amt_Dtl2, 0) + Nvl (A.Dis_Amt_Dtl3, 0)
                                  From Ias_Rt_Bill_Mst_Br
                                 Where Rt_Bill_Ser = A.Rt_Bill_Ser And Rt_Bill_Ser = P_Doc_Ser)
                      Where Rt_Bill_Ser = P_Doc_Ser;
                  Exception
                  End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' m Set Disc_Amt_Dtl=(select SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DT
                                                                                           from ' || V_Tbl_Dtl_Nm || ' d 
                                                                                             where m.' || V_Fld_Doc_Ser || '=d.' || V_Fld_Doc_Ser || ' )
                 Where M.' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20056, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
         Begin
            Execute Immediate ' UPDATE  ' || V_Tbl_Mst_Nm || ' SET Disc_Amt=Round(nvl(disc_amt_mst,0)+nvl(disc_amt_dtl,0),' || V_No_Of_Decimal || ') 
                      WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
         Exception
               Raise_Application_Error (-20057, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
         End;
      Begin
         Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || ' SET Vat_Amt_Bfr_Dis= (Nvl(i_price,0)*Nvl(vat_per,0))/100
                               WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            Raise_Application_Error (-20058, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
      End;
      Begin
         Execute Immediate ' UPDATE  ' || V_Tbl_Dtl_Nm || ' SET Vat_Amt_Aftr_Dis = ((Nvl(i_price,0)-(Nvl(Dis_Amt_Dtl,0)+Nvl(Dis_Amt_Dtl2,0)+Nvl(Dis_Amt_Dtl3,0)+Nvl(Dis_Amt_Mst,0)))*Nvl(vat_per,0))/100          
           WHERE ' || V_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            Raise_Application_Error (-20059, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
      End;
   Exception
         Raise_Application_Error (-20060, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
   Procedure Clr_Glbl_Var
   Begin
      G_Exception_Err := Null;
   Procedure Chk_Insrt_Data (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
   Begin
               Select 53 Doc_Typ
                 From Sales_Order
                Where Order_Ser = P_Doc_Ser;
         Begin
               Begin
                  Select 1
                    From (Select Order_No, Order_Ser
                            From Sales_Order
                           Where Order_Ser = I.Doc_Ser
                          Select Order_No, Order_Ser
                            From Order_Detail
                           Where Order_Ser = I.Doc_Ser)
                   Where Rownum <= 1;
               Exception
               End;
                 BEGIN
                    UPDATE SALES_ORDER M SET ORDER_AMT =(SELECT  NVL(SUM(NVL(I_PRICE,0) * NVL(I_QTY,0)),0) FROM ORDER_DETAIL D
                                                                                  WHERE D.ORDER_SER=M.ORDER_SER)                   
                             WHERE ORDER_SER=I.DOC_SER;
                 EXCEPTION WHEN OTHERS THEN
                  END;              
                     Begin
                 EXCEPTION
                     End;
               --## UPDATE DISC
               Begin
               Exception
               End;
              Begin
                    Select Nvl (Round (Sum (Nvl (VAT_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt Into V_vat_amt_dtl
                                                        From Order_detail
                                                       Where Order_ser = I.Doc_ser;
              Exception When Others Then
              End; 
                  Begin
                  Exception
                  End;
                  Begin
                     Select 1
                       From Order_Detail D
                      Where     Order_Ser = I.Doc_Ser
                                   (Select 1
                                      From Gnr_Tax_Itm Ti
                                     Where Ti.Tax_No = Tm.Tax_No And Ti.Tax_No = Td.Tax_No And Ti.Agncy_No = Td.Agncy_No And Ti.Tax_No = Tc.Tax_No And Tm.Tax_No = Td.Tax_No And Tm.Tax_No = Tc.Tax_No And Td.Tax_No = Tc.Tax_No And Nvl (Tm.Inactive, 0) = 0 And I_Code = D.I_Code And Tc.Clc_Typ_No = I.Clc_Typ_No_Tax And Rownum <= 1)
                  Exception
                  End;
                     Begin
                        Select 1
                          From Gnr_Rq_Tax_Itm_Movmnt
                         Where Doc_Type = I.Doc_Typ And Doc_Ser = I.Doc_Ser And Rownum <= 1;
                     Exception
                     End;
               Begin
                  For M_Cv In (Select Round (Nvl (Order_Amt, 0), G_No_Of_Decimal_Ar) Doc_Amt
                                 From Sales_Order
                                Where Order_Ser = I.Doc_Ser)
                     For D_Cv In (Select Round (Sum (Nvl (I_Price, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar) Doc_Amt_Dtl
                                    From Order_Detail
                                   Where Order_Ser = I.Doc_Ser)
               Exception
               End;
             /*  Begin
                  For M_Cv In (Select Nvl (Round (Nvl (Vat_Amt, 0), G_No_Of_Decimal_Ar), 0) Vat_Amt
                                 From Sales_Order
                                Where Order_Ser = I.Doc_Ser)
                     For Tax_Cv In (Select Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt
                                      From Gnr_Rq_Tax_Itm_Movmnt
                                     Where Doc_Ser = I.Doc_Ser)
               Exception
               End;
               Begin
                  For D_Cv In (Select Nvl (Round (Sum (Nvl (VAT_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt, Sum (Nvl (Vat_Per, 0)) Vat_Per
                                 From Order_Detail
                                Where Order_Ser = I.Doc_Ser)
                     For Tax_Cv In (Select Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt, Nvl (Sum (Nvl (Tax_Prcnt, 0)), 0) Vat_Per
                                      From Gnr_Rq_Tax_Itm_Movmnt
                                     Where Doc_Ser = I.Doc_Ser)
               Exception
               End;*/
               Exception
               End;               
                  /* Begin
                     Select Nvl(Order_Amt,0)+Nvl(Vat_Amt,0)-Nvl(Disc_Amt,0)+Nvl(Othr_Amt,0) InTo V_Doc_Amt
                     From Sales_Order
                    Where Order_Ser = P_Doc_Ser;
                   Exception When Others Then
                   End;
         End;
Procedure Chk_Credit_Limit (  P_Chk_CrDT_LMIT  In    NUMBER --## 0 UNCHECKCredit_Limit  1- CHECK Credit_Limit
   Begin
        begin
               Execute Immediate '  SELECT (Nvl ('||P_Fld_MST_AMT||', 0) - Nvl (Disc_Amt, 0) + Nvl (Othr_Amt, 0) + Nvl (Vat_Amt, 0))
                                   FROM ' || P_Tbl_Mst_Nm || '  WHERE '|| P_Fld_Doc_Ser||' =' || P_Doc_Ser||' AND ROWNUM<=1'
        Exception When NO_DATA_FOUND THEN
              P_Msg_Txt :='ERROR WHEN CHECK  AMT  FROM   '||P_Tbl_MST_Nm||' '|| Chr (13) || Sqlerrm ;
        END;
     BEGIN
    Exception  When Others Then 
    END;                         
      Begin
         Select Nvl (Inv_Dis_Lmt, 0), Nvl (Inv_Dis_Lmt_Itm, Inv_Dis_Lmt)
           From Privilege_Fixed
          Where U_Id = P_User_No;
      Exception
      End;
   Exception When Others then
            Select Nvl (Use_Exp_Date, 0) Use_Exp_Date
              From Ias_Itm_Mst
             Where I_Code = P_I_Code And Rownum <= 1;
      Begin
CREATE TABLE IAS_PARA_LGHT ( PARA_NO       NUMBER (1),
Create Table Ias_Transfer_Out_Br_Tmp (Tr_Ser NUMBER,F_Tr_Ser NUMBER)
Create Table Ias_Transfer_In_Br_Tmp (Tr_Ser NUMBER,F_Tr_Ser NUMBER) 
CREATE TABLE MASTER_JOURNAL_V_BR ( 
CREATE TABLE DETAIL_JOURNAL_V_BR ( 
CREATE TABLE IAS_OUTGOING_MST_BR ( 
CREATE TABLE IAS_OUTGOING_DTL_BR ( 
CREATE TABLE IAS_WHTRNS_MST_BR ( 
CREATE TABLE IAS_WHTRNS_DTL_BR ( 
CREATE TABLE INV_WRHS_TRNSFR_EXPNS_BR(
CREATE TABLE IAS_BILL_MST_BR ( 
CREATE TABLE IAS_BILL_DTL_BR ( 
CREATE TABLE INSTALLMENT_BR ( 
CREATE TABLE IAS_BILL_CPN_BR
CREATE TABLE OTHER_CHARGES_BR ( 
CREATE TABLE OTHER_CHARGES_ITEMS_BR(
CREATE TABLE IAS_CARGO_SERVICES_BR(
ALTER TABLE IAS_BILL_MST_BR ADD (CONSTRAINT IasBillMstBR_CC_FK FOREIGN KEY (CC_CODE) 
ALTER TABLE IAS_BILL_MST_BR ADD (CONSTRAINT IasBillMstBR_WCode_FK FOREIGN KEY (W_CODE) 
ALTER TABLE IAS_BILL_MST_BR ADD (CONSTRAINT IasBillMstBR_REPCODE_FK FOREIGN KEY (REP_CODE) 
ALTER TABLE IAS_BILL_MST_BR ADD (CONSTRAINT IasBillMstBR_RCODE_FK FOREIGN KEY (R_CODE) 
CREATE INDEX IasBillDtltBR_BillNO_ICODE ON IAS_BILL_DTL_BR (BILL_NO, I_CODE) 
CREATE INDEX IasBillDtltBR_BILLNO ON IAS_BILL_DTL_BR (BILL_NO) 
ALTER TABLE IAS_BILL_DTL_BR ADD (CONSTRAINT IasBillDtlBR_CC_Fk FOREIGN KEY (CC_CODE) 
ALTER TABLE IAS_BILL_DTL_BR ADD (CONSTRAINT IasBillDtlBR_ICODE_FK FOREIGN KEY (I_CODE) 
ALTER TABLE IAS_BILL_DTL_BR ADD (CONSTRAINT IasBillDtlBR_WCODE_FK FOREIGN KEY (W_CODE) 
CREATE TABLE IAS_RT_BILL_MST_BR ( 
CREATE TABLE IAS_RT_BILL_DTL_BR (  
CREATE INDEX RTSDM_INDX ON IAS_RT_BILL_MST_BR (RT_BILL_POST, RT_BILL_DATE, AD_U_ID)
ALTER TABLE IAS_RT_BILL_MST_BR ADD (CONSTRAINT IasRtBillMstBR_CC_FK FOREIGN KEY (CC_CODE) 
ALTER TABLE IAS_RT_BILL_MST_BR ADD (CONSTRAINT IasRtBillMstBR_WCode_FK FOREIGN KEY (W_CODE) 
ALTER TABLE IAS_RT_BILL_MST_BR ADD (CONSTRAINT IasRtBillMstBR_REPCODE_FK FOREIGN KEY (REP_CODE) 
ALTER TABLE IAS_RT_BILL_MST_BR ADD (CONSTRAINT IasRtBillMstBRM_RCODE_FK FOREIGN KEY (R_CODE) 
ALTER TABLE IAS_RT_BILL_DTL_BR ADD (CONSTRAINT IasRtBillDtlBR_CC_Fk FOREIGN KEY (CC_CODE) 
ALTER TABLE IAS_RT_BILL_DTL_BR ADD (CONSTRAINT IasRtBillDtlBR_ICODE_FK FOREIGN KEY (I_CODE) 
ALTER TABLE IAS_RT_BILL_DTL_BR ADD (CONSTRAINT IasRtBillDtlBR_WCODE_FK FOREIGN KEY (W_CODE) 
CREATE TABLE IAS_ITEM_SERIALNO_BR(
ALTER TABLE IAS_BILL_MST_BR  ADD (CONSTRAINT IASBILLMST_ACODE_ACY_FK  FOREIGN KEY (A_CODE,BILL_CURRENCY) 
ALTER TABLE IAS_RT_BILL_MST_BR  ADD (CONSTRAINT IASRTBILLMST_ACODE_ACY_FK  FOREIGN KEY (A_CODE,RT_BILL_CURRENCY) 
ALTER TABLE OTHER_CHARGES_BR ADD (CONSTRAINT OTHRCHRGBR_ACODE_ACY_FK  FOREIGN KEY (A_CODE,A_CY) 
ALTER TABLE OTHER_CHARGES_ITEMS_BR ADD (CONSTRAINT OTHRCHRGITMBR_ACODE_ACY_FK  FOREIGN KEY (A_CODE,A_CY) 
ALTER TABLE IAS_ITEM_SERIALNO_BR ADD CONSTRAINT IASITMSERNO_ICODE_FK FOREIGN KEY (I_CODE)  
ALTER TABLE OTHER_CHARGES_ITEMS_BR ADD CONSTRAINT OTHRCHRGITMBR_ICODE_FK FOREIGN KEY (I_CODE,ITM_UNT)  
CREATE TABLE IAS_ITM_ATTACH_MOVEMENT_BR( 
CREATE TABLE GR_NOTE_BR ( 
CREATE TABLE GR_DETAIL_BR ( 
CREATE TABLE VOUCHERS_BR ( 
CREATE TABLE VOUCHER_DETAIL_BR ( 
CREATE TABLE IAS_RT_BILL_DTL_RQ_BR ( RT_BILL_DOC_TYPE  NUMBER(2)                   NOT NULL,
CREATE TABLE GNR_TAX_INPT_MOVMNT_BR ( DOC_TYPE       NUMBER(5)                      NOT NULL,
CREATE TABLE IAS_REPLICA_TABLE_MST ( TRANS_CODE         NUMBER(5),
ALTER TABLE IAS_REPLICA_TABLE_MST ADD ( CONSTRAINT IAS_REPLICA_MST_PK PRIMARY KEY (TRANS_CODE, CENTER_BRANCH))
CREATE TABLE IAS_REPLICA_TABLE_DTL ( RCRD_NO        NUMBER(5),
ALTER TABLE IAS_REPLICA_TABLE_DTL ADD ( CONSTRAINT IAS_UNQ_REPLICA_DTL UNIQUE (TRANS_CODE, CENTER_BRANCH, RCRD_NO))
CREATE TABLE IAS_REPLICA_TABLE_BR (  RCRD_NO           NUMBER(5),
CREATE TABLE MASTER_OUT_BILLS_BR(
CREATE TABLE DETAIL_OUT_BILLS_BR(
CREATE TABLE IAS_RET_BILL_MST_BR(
CREATE TABLE IAS_RET_BILL_DTL_BR(
SELECT COUNT(1)   FROM S_SEQ_CTL  WHERE S_TAB_NAME = ''IAS_BILL_MST_BR''"INSERT INTO S_SEQ_CTL ( CMP_NO,BRN_USR,BRN_NO,BRN_YEAR,S_TAB_NAME,S_COL_NAME,S_SEQ_TYP,S_COL1,S_COL2,S_COL3,S_COL4,S_COL5,S_COL6,S_INCRBY_VAL,S_INIT_VAL,S_SEQ_CONC,TRIG_NAME )  VALUES ( :b1,:b2,:b3,:b4,''IAS_BILL_MST_BR'',''BILL_NO'',0, NULL , NULL , NULL , NULL , NULL , NULL ,1,1, NULL , NULL   )"INSERT INTO S_SEQ_CTL ( CMP_NO,BRN_USR,BRN_NO,BRN_YEAR,S_TAB_NAME,S_COL_NAME,S_SEQ_TYP,S_COL1,S_COL2,S_COL3,S_COL4,S_COL5,S_COL6,S_INCRBY_VAL,S_INIT_VAL,S_SEQ_CONC,TRIG_NAME )  VALUES ( :b1,:b2,:b3,:b4,''IAS_RT_BILL_MST_BR'',''RT_BILL_NO'',0, NULL , NULL , NULL , NULL , NULL , NULL ,1,1, NULL , NULL   )"INSERT INTO S_SEQ_CTL ( CMP_NO,BRN_USR,BRN_NO,BRN_YEAR,S_TAB_NAME,S_COL_NAME,S_SEQ_TYP,S_COL1,S_COL2,S_COL3,S_COL4,S_COL5,S_COL6,S_INCRBY_VAL,S_INIT_VAL,S_SEQ_CONC,TRIG_NAME )  VALUES ( :b1,:b2,:b3,:b4,''SALES_ORDER_BR'',''ORDER_NO'',0, NULL , NULL , NULL , NULL , NULL , NULL ,1,1, NULL , NULL   )"
                                    From Order_Detail
                                   Where Order_Ser = I.Doc_Ser)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_TYP,DOC_TYP)VALUES ('SHO', 67, 2300, 44, NULL,0, 0, 57, NULL, NULL,NULL)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_TYP,DOC_TYP)VALUES ('SHO', 67, 2301, 2300, 'SHOS001',1, 0, 2301, NULL, NULL,NULL)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_TYP,DOC_TYP)VALUES ('SHO', 67, 2302, 2300, 'SHOI001',1, 0, 2302, NULL, NULL,NULL)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_TYP,DOC_TYP)VALUES ('SHO', 67, 2303, 2300, 'SHOI002',1, 0, 2303, NULL, NULL,NULL)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_TYP,DOC_TYP)VALUES ('SHO', 67, 2320, 2300, 'SHOR001',1, 0, 2303, NULL, NULL,NULL)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE, F_ORDER_NO, SCR_ORGNL, SCR_THEME_NO,SCR_TYP, DOC_TYP)VALUES('SHO', 67, 2304, 2300, 'SHOI003',1, 0, 2304, NULL, NULL, NULL, NULL)
INSERT INTO FORM_DETAIL (F_SYS, SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME,F_BT_PRIV, F_INACTIVE,
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 2300, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 2300, 'Shopping Online System')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 2301, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 2301, 'Initial Params')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 2302, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 2302, 'Items Site')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 2320, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 2320, 'Items Site Reports')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 2303, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 2303, 'Advertisement')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 2304, '
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(2, 2304, 'Items Order')
INSERT INTO IAS_FORM_NAME(LANG_NO, FORM_NO, FORM_NAME)VALUES(1, 2305, '
                     For Tax_Cv In (Select Nvl (Round (Sum (Nvl (Tax_Amt, 0) * Nvl (I_Qty, 0)), G_No_Of_Decimal_Ar), 0) Vat_Amt
                                      From Gnr_Rq_Tax_Itm_Movmnt
                                     Where Doc_Ser = I.Doc_Ser)
CREATE INDEX IAS_ITM_ONLINE_UQ ON IAS_ITM_ONLINE
ARS_DBA_FUNCTION_SCRIPT
"PKG INIT"ARS_DBA_FUNCTION_SCRIPT""
ARS_DBA_FUNCTION_SCRIPT
CREATE OR REPLACE Function Get_Rt_Amt_Fnc  ( P_Doc_Type      IN NUMBER,
     V_Rt_Bill_Amt := Ias_Gen_Pkg.Get_Cnt('Select Nvl(Sum((Nvl(D.I_Qty,0) *(Nvl(D.I_Price,0)-Nvl(D.Dis_Amt,0)+Nvl(D.Vat_Amt,0)+Nvl(D.Othr_Amt,0))) * Decode('||P_Local_Amt_Flg||',1,Nvl(M.Rt_Bill_Rate,1),1)),0)
                                            From Ias_Rt_Bill_Mst M,Ias_Rt_Bill_Dtl D  
                                           Where M.Rt_Bill_Ser = D.Rt_Bill_Ser
Exception When Others Then
CREATE OR REPLACE FUNCTION Ias_Chk_Lght_Doc_Brn_Fnc ( P_Brn_No        In S_Brn.Brn_No%TYPE , 
    V_Inpt_Typ := Ys_Gen_Pkg.Get_Cnt('Select Inpt_Cntr_Br_Typ From Ias_Lght_Doc_Brn Where Brn_No='||P_Brn_No||' and Post_Doc_Type='||P_Doc_Type||' And Ro
    V_Head_Office := Ias_Gen_Pkg.Get_Cnt('Select Nvl(Head_Office,1) From Ias_Para_Lght');    
    V_Brn_Lght    := Ias_Gen_Pkg.Get_Cnt('Select Nvl(Brn_Lght,0) From S_Brn Where Brn_No='||P_Brn_No||' And RowNum<=1');
Exception 
CREATE OR REPLACE Function Ias_Ar_Get_Rep_Label (
Exception
CREATE OR REPLACE Function Ias_Ar_Get_V_Name (
         Select Decode (P_Lang_No,1, Nvl (G_A_Name, G_E_Name),Nvl (G_E_Name, G_A_Name))
           From Group_Details
          Where G_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (I_Name, I_E_Name),Nvl (I_E_Name, I_Name))
           From Ias_Itm_Mst
          Where I_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
           From Customer
          Where C_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
              From Customer
             Where C_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (I_Name, I_E_Name),Nvl (I_E_Name, I_Name))
              From Ias_Itm_Mst
             Where I_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Reprs_A_Name, Reprs_E_Name),Nvl (Reprs_E_Name, Reprs_A_Name))
           From Sales_Man
          Where Reprs_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (Reprs_A_Name, Reprs_E_Name),Nvl (Reprs_E_Name, Reprs_A_Name))
              From Sales_Man
             Where Reprs_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
             Where C_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (Reprs_A_Name, Reprs_E_Name),Nvl (Reprs_E_Name, Reprs_A_Name))
              From Sales_Man
             Where Reprs_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (I_Name, I_E_Name),Nvl (I_E_Name, I_Name))
              From Ias_Itm_Mst
             Where I_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (R_A_Name, R_A_Name),Nv
           From Regions
          Where R_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (R_A_Name, R_A_Name),Nvl (R_E_Name, R_A_Name))
              From Regions
             Where R_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (Reprs_A_Name, Reprs_E_Name),Nvl (Reprs_E_Name, Reprs_A_Name))
              From Sales_Man
             Where Reprs_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (W_Name, W_E_Name),Nvl (W_E_Name, W_Name))
           From Warehouse_Details
          Where W_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Cc_A_Name, Cc_E_Name),Nvl (Cc_E_Name, Cc_A_Name))
           From Cost_Centers
          Where Cc_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Si_A_Name, Si_E_Name),Nvl (Si_E_Name, Si_A_Name))
           From Ias_Sales_Types
          Where Si_Type = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Cntry_A_Name, Cntry_E_Name),Nvl (Cntry_E_Name, Cntry_A_Name))
           From Cntry
          Where Cntry_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Prov_A_Name, Prov_E_Name),Nvl (Prov_E_Name, Prov_A_Name))
           From Ias_Provinces
          Where Prov_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (City_A_Name, City_E_Name),Nvl (City_E_Name, City_A_Name))
           From Cities
          Where City_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Pj_A_Name, Pj_E_Name),Nvl (Pj_E_Name, Pj_A_Name))
           From Ias_Projects
          Where Pj_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Brn_Lname, Brn_Fname),Nvl (Brn_Fname, Brn_Lname))
           From S_Brn
          Where Brn_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Driver_A_Name, Driver_E_Name),Nvl (Driver_E_Name, Driver_A_Name))
           From Ias_Drivers
          Where Driver_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Actv_A_Name, Actv_E_Name),Nvl (Actv_E_Name, Actv_A_Name))
           From Ias_Actvty
          Where Actv_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Grp_L_Name, Grp_F_Name),Nvl (Grp_F_Name, Grp_L_Name))
           From Ias_Grp_Itm_Lvl
          Where Grp_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Mng_A_Name, Mng_E_Name),Nvl (Mng_E_Name, Mng_A_Name))
           From Ias_Mainsub_Grp_Dtl
          Where Mng_Code = P_Code And G_Code=Nvl(P
         Select Decode (P_Lang_No,1, Nvl (Subg_A_Name, Subg_E_Name),Nvl (Subg_E_Name, Subg_A_Name))
           From Ias_Sub_Grp_Dtl
          Where Subg_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Assistant_A_Name, Assistant_E_Name),Nvl (Assistant_E_Name, Assistant_A_Name))
           From Ias_Assistant_Group
          Where Assistant_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Detail_A_Name, Detail_E_Name),Nvl (Detail_E_Name, Detail_A_Name))
           From Ias_Detail_Group
          Where Detail_No = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (I_Name, I_E_Name),Nvl (I_E_Name, I_Name))
              From Ias_Itm_Mst
             Where I_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
              From Customer
             Where C_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Prm_L_Nm, Prm_F_Nm),Nvl (Prm_F_Nm, Prm_L_Nm))
           From Ias_Promoters
          Where Prm_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_Class_Name, C_Class_E_Name),Nvl (C_Class_E_Name, C_Class_Name))
           From Customer_Class
          Where C_Class = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_Group_A_Name, C_Group_E_Name),Nvl (C_Group_E_Name, C_Group_A_Name))
           From Customer_Group
          Where C_Group_Code = P_Code And Rownum <= 1;      
         Select Decode (P_Lang_No,1, Nvl (C_Group_A_Name, C_Group_E_Name),Nvl (C_Group_E_Name, C_Group_A_Name))
           From Customer_Group
          Where C_Group_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_Class_Name, C_Class_E_Name),Nvl (C_Class_E_Name, C_Class_Name))
           From Customer_Class
          Where C_Class = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_Group_A_Name, C_Group_E_Name),Nvl (C_Group_E_Name, C_Group_A_Name))
           From Customer_Group
          Where C_Group_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
           From Customer
          Where C_Code = P_Code And Rownum <= 1;
      Select Flg_Desc
        From S_Flags
       Where Lang_No = P_Lang_No
        Select Decode(P_Lang_No,1,Nvl(EMP_L_NM,EMP_F_NM),Nvl(EMP_F_NM,EMP_L_NM))
          From S_EMP
         Where EMP_NO=P_Code 
        Select Decode(P_Lang_No,1,Nvl(PRSON_L_NM, PRSON_F_NM),Nvl(PRSON_F_NM, PRSON_L_NM))
          From IAS_INSRNCE_CARD
         Where PRSON_CARD_NO=P_Code 
        Select Decode(P_Lang_No,1,Nvl(Sub_L_Name, Sub_F_Name),Nvl(Sub_F_Name, Sub_L_Name))
          From Ias_Gnr_Code_Dtl
         Where Main_Code = 1
        Select Decode(P_Lang_No,1,Nvl(Ptnt_L_Nm,Ptnt_F_Nm),Nvl(Ptnt_F_Nm, Ptnt_L_Nm))
          From Hps_Ptnt
         Where Ptnt_No=P_Code 
        Select Decode(P_Lang_No,1,Nvl(Dctr_L_Nm, Dctr_F_Nm),Nvl(Dctr_F_Nm, Dctr_L_Nm))
          From Hps_Dctr
         Where Dctr_No=P_Code 
       Select Decode(P_Lang_No,1,Nvl(Ptnt_L_Nm,Ptnt_F_Nm),Nvl(Ptnt_F_Nm, Ptnt_L_Nm))
          From Hps_Ptnt
         Where Ptnt_No=P_Code 
       Select Decode(P_Lang_No,1,Nvl(C_GROUP_A_NAME,C_GROUP_E_NAME),Nvl(C_GROUP_E_NAME,C_GROUP_A_NAME))
          From Customer_Group
         Where C_GROUP_CODE=P_Code 
Exception
CREATE OR REPLACE Procedure Ias_Last_Sale_Price_Prc ( P_Icode                 In  Ias_Itm_Mst.I_Code%Type ,
     Begin
        Select Max(M.Bill_Date) 
          From Ias_Bill_Mst M,Ias_Bill_Dtl D
         Where M.Bill_Ser=D.Bill_Ser
         Select Max(D.Doc_Sequence) 
          From Ias_Bill_Mst M,Ias_Bill_Dtl D
         Where M.Bill_Ser=D.Bill_Ser
      Exception
              Begin
                Select Max(M.Bill_Date) 
          From Ias_V_Bill_Mst_Yr M,Ias_V_Bill_Dtl_Yr D
         Where M.Bill_Ser=D.Bill_Ser
         Select Max(D.Doc_Sequence) 
          From Ias_V_Bill_Mst_Yr M,Ias_V_Bill_Dtl_Yr D
         Where M.Bill_Ser=D.Bill_Ser
              Exception
             End;
       End;                     
     Begin
        Select Max (Round ((Decode(CLC_VAT_PRICE_TYP,2,Nvl (D.I_Price_Vat,0),Nvl (D.I_Price,0)) - Nvl (D.Dis_Amt_Dtl, 0)), 2))
          From Ias_Bill_Mst M,Ias_Bill_Dtl D
         Where M.Bill_Ser = D.Bill_Ser 
        Exception
            Begin           
               Select Max (Round ((Decode(CLC_VAT_PRICE_TYP,2,Nvl (D.I_Price_Vat,0),Nvl (D.I_Price,0)) - Nvl (D.Dis_Amt_Dtl, 0)), 2))
          From Ias_V_Bill_Mst_Yr M,Ias_V_Bill_Dtl_Yr D
         Where M.Bill_Ser = D.Bill_Ser 
            Exception
            End;
        End;
Create Or Replace Function Get_Out_Bill_Qty ( P_Icode         In Ias_Itm_Mst.I_Code%Type,
 Begin
            Begin
              Select Sum(((Nvl(I_Qty,0)-Nvl(Out_Qty,0))+(Nvl(Free_Qty,0)-Nvl(Out_Free_Qty,0)))*Nvl(P_Size,1)) 
                   From Ias_V_Bill_Dtl_Out
                  Where I_Code=P_Icode
            Exception When Others Then
            End;
            Begin
              Select Sum(((Nvl(I_Qty,0)-Nvl(Ret_Qty,0))+(Nvl(Free_Qty,0)-Nvl(Ret_Free_Qty,0)))*Nvl(P_Size,1)) 
                   From Ias_V_Rt_Bill_Dtl_Out
                  Where I_Code = P_Icode
            Exception When Others Then
            End;
 Exception
 CREATE OR REPLACE Function Get_Cstmr_Blnc_Xml(P_Sys_No            In Number,
                                                  P_Pst_Type          In Number Default 0, --## 0 all balnc 1- unposted 2- posted 3- not posted from br                                                                                                                                                                                                                     
   Begin
   End;
                Select C_Code ,
                  From ias_post_dtl 
                  where ac_dtl_typ=3                   
                Select C_Code ,
                  From Ias_Bill_Mst_Br M
                 Where Nvl(External_Post, 0) = 70
                       And  Not exists (Select 1
                                             From Ias_Bill_Mst I
                                            Where Nvl(External_Post, 0) = 70
                Select C_Code ,
                  From Ias_Rt_Bill_Mst_Br M
                 Where Nvl(External_Po
                       And  Not exists (Select 1
                                             From Ias_Rt_Bill_Mst I
                                            Where Nvl(External_Post, 0) = 70
   Begin
   Exception
   End;
   Begin
      Select Nvl(Ar_Ac_Link_Type, 0), Nvl(Conn_Cst_Multi_Sman, 0)
        From Ias_Par
   Exception
   End;
      Begin
         V_Cstmr_Blnc_Type := Ias_Gen_Pkg.Get_Cnt('Select NVL (CSTMR_BLNC_TYPE, 0) From DTS_PARA');
      Exception
      End;
                               Select 1
                                 From Priv_Acc
                                Where U_Id = ' || P_User_No || ' 
                               Select 1
                                 From Ias_Priv_Customer
                                Where U_Id =' || P_User_No || '
                                 Or Exists(Select 1
                                             From   S_brn_usr_priv
                                             Where  U_id = '||P_User_No ||'
      V_Whr_Sman := V_Whr_Sman || ' AND B.C_CODE IN( SELECT C_CODE FROM Dts_V_Sman_Cst WHERE SMAN_TYP=1 AND  REP_CODE BETWEEN  ''' || V_F_Rep_Code || ''' and  ''' || V_T_Rep_Code || ''' ) ';
         V_Whr_Sman := V_Whr_Sman || ' AND A.REP_CODE In(  Select Reprs_Code REP_CODE          
                                                                  From Sales_Man
      V_Sql_Qry      := 'SELECT   C_CODE,
                                  (Select Decode(' || P_Lng_No || ', 1, Nvl(Reprs_A_Name, Reprs_A_Name), Nvl(Reprs_A_Name, Reprs_A_Name))                                                       
                                          From Sales_Man
                                        WHERE Reprs_Code=T.rep_code
                         from        
                          Select B.C_Code,
                            From dts_v_all_cstmr_balnc A, Customer B
                           Where A.Ac_Code_Dtl = B.C_Code
                        Group By B.C_Code,
                        Select   B.C_Code,
                        From dts_v_all_cstmr_balnc A, Customer B
                        Where A.Ac_Code_Dtl = B.C_Code
                       Order By A_Cy ,Doc_Date, Doc_Type, Doc_No  ';
      V_Sql_Qry      := 'Select C_Code,
                                (Select Decode(' || P_Lng_No || ', 1, Nvl(Reprs_A_Name, Reprs_A_Name), Nvl(Reprs_A_Name, Reprs_A_Name))                      
                                   From Sales_Man
                                   WHERE Reprs_Code=T.rep_code
                          From (  Select C_Code,
                                    From (  Select B.C_Code,
                                              From dts_v_all_cstmr_balnc A, Customer B
                                             Where A.Ac_Code_Dtl = B.C_Code
                                          Group By B.C_Code, Decode('||P_Lng_No|| ', 1, Nvl(C_A_Name, C_E_Name), Nvl(C_E_Name, C_A_Name)), ' || V_Fld_Sman || ', A_Cy
                                            Select B.C_Code,
                                              From dts_v_all_cstmr_balnc A, Customer B
                                             Where A.Ac_Code_Dtl = B.C_Code
                                          Group By B.C_Code, Decode(' || P_Lng_No || ', 1, Nvl(C_A_Name, C_E_Name), Nvl(C_E_Name, C_A_Name)),' || V_Fld_Sman || ' , A_Cy)
                                Group By C_Code, C_Name,REP_CODE, A_Cy) T';
Exception
                  From Ias_Rt_Bill_Mst_Br M
                 Where Nvl(External_Po
ALTER TABLE IAS_BILL_DTL_BR ADD (CONSTRAINT IasBillDtlBR_WCODE_FK FOREIGN KEY (W_CODE) 
CREATE TABLE IAS_RT_BILL_MST_BR ( 
CREATE OR REPLACE Package Ars_Api_Trns_Pkg
   Procedure Insrt_Cst_Rq_Prc (P_Lang_No             In     Number
   Procedure Insrt_Cst_Prc (P_Lang_No             In     Number
                           ,P_Upd_Flg             In     Number Defaultinsert NEW CST_CODE ,--##  0 update customer data
   Procedure Get_Prmtr_Prc(P_Sys_No       In     Number Default Null,
 Number,  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR 
  Procedure INSRT_DOC_INTO_ONYX(P_Doc_Typ          In Ias_Post_Mst.Doc_Type%Type
  FUNCTION INSRT_DOC_INTO_BR (   P_Doc_Typ          In Ias_Post_Mst.Doc_Type%Type
   Procedure INSRT_DOC_BY_XML (P_Doc_Typ          In       Ias_Post_Mst.Doc_Type%Type
                              ,P_Pst_FROM_BR      In       Number  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Procedure Post_From_Br_Prc (P_Sys_No     In     Number
   Procedure Insrt_Sales_Order (P_Sys_No              In     Number
   Procedure Insrt_Order_Detail (P_I_Code                 In     Order_Detail.I_Code%Type Default Null
   Procedure Insrt_Ias_Bill_Mst (P_Sys_No                       In     Number
                                ,P_Pst_FROM_BR                  In     Number  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Procedure Insrt_Ias_Bill_Dtl (P_I_Code                   In     Ias_Bill_Dtl.I_Code%Type Default Null
   Procedure Insrt_Ias_Rt_Bill_Mst (P_Sys_No              In     Number
                                   ,P_Pst_FROM_BR         In     Number  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Procedure Insrt_Ias_Rt_Bill_Dtl (P_I_Code                 In     Ias_Rt_Bill_Dtl.I_Code%Type Default Null
   Procedure Get_Doc_No ( P_Doc_Typ In Number
   Procedure Get_Doc_Ser (P_Doc_Typ    In Number
   Procedure Check_Duplicate (P_Doc_Typ    In     Number
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
  Procedure Chk_Gnr_Da
Procedure Calc_Other_Charges (P_Doc_Typ          In     Number
   Procedure Clr_Glbl_Var;
   Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
   Procedure Insrt_Installment (P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type
  PROCEDURE Insert_Installemnt_FBR (P_Doc_Type    Number,
   Procedure Insrt_OTHER_CHARGES(    P_DOC_TYP                    IN IAS_POST_DTL.DOC_TYPE%TYPE                     DEFAULT NULL
 Procedure Ins
Procedure   INSRT_GNR_TAX_ITM_MOVMNT(    P_DOC_TYP                  IN GNR_TAX_ITM_MOVMNT.DOC_TYPE%TYPE               DEFAULT NULL
 Procedure DELETE_BILL (    P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type 
   Procedure Chk_Insrt_Data (P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type 
CREATE OR REPLACE Package Body Ars_Api_Trns_Pkg
   Procedure Insrt_Cst_Rq_Prc (P_Lang_No             In     Number
   Begin
      Begin
         Select Cust_D_Type, Cst_Seq_Type, Ar_Ac_Link_Type
           From Ias_Para_Ar
          Where Rownum <= 1;
      Exception
      End;
         Begin
            Select 1
              From Customer_Group
             Where C_Group_Code = P_C_Group_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Class
             Where C_Class = P_C_Class And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Class_Typ
             Where C_Class_Typ = P_C_Class_Typ And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Rq
             Where Nvl (C_Mobile, 0) = Nvl (P_C_Mobile, 0) And Rownum <= 1;
         Exception
         End;
      Begin
         Select 1
           From Customer_Rq
          Where C_Code_Trgt = P_C_Code And Rownum <= 1;
      Exception
      End;
               Begin
                  Select Nvl (Max (To_Number (C_Code)), 0) + 1 Into V_Cst_Code From Customer_Rq;
               Exception
               End;
               Begin
                  Select Nvl (Max (To_Number (C_Code)), 0) + 1
                    From Customer_Rq
                   Where C_Group_Code = P_C_Group_Code;
               Exception
               End;
               Begin
                  Select Nvl (Max (To_Number (C_Code)), 0) + 1
                    From Customer_Rq
                   Where C_Group_Code = P_C_Group_Code And C_Class = P_C_Class;
               Exception
               End;
      Begin
         Select C_A_Code
           From Customer_Group
          Where C_Group_Code = P_C_Group_Code And Rownum <= 1;
      Exception
      End;
      Begin
         Select Nvl (Max (Cst_Seq), 0) + 1 Into V_Cst_Seq From Customer_Rq;
      Exception
      End;
      Begin
         Select 1
           From Customer_Rq
          Where C_Code = V_Cst_Code And Rownum <= 1;
      Exception
      End;
      Begin
         Insert Into Customer_Rq (C_Code
      Exception
            Raise_Application_Error (-20278, 'Err INSERT INTO CUSTOMER_RQ  ' || Chr (10) || Sqlerrm);
      End;
      If Nvl (Ias_Gen_Pkg.Get_Cnt ('Select 1 From CUSTOMER_RQ Where 
         For I In (Select A_Cy, Inactive
                     From Account_Curr
                    Where A_Code = V_C_Acode)
            Begin
               Insert Into Customer_Curr_Rq (C_Code
            Exception
                  Raise_Application_Error (-20279, 'Err INSERT INTO CUSTOMER_CURR_RQ  ' || Chr (10) || Sqlerrm);
            End;
   Procedure Insrt_Cst_Prc (P_Lang_No             In     Number
insert NEW CST_CODE ,--##  0 update customer data
   Begin
      Begin
         Select Cust_D_Type, Cst_Seq_Type, Ar_Ac_Link_Type
           From Ias_Para_Ar
          Where Rownum <= 1;
      Exception
      End;
         Begin
            Select 1
              From Customer_Group
             Where C_Group_Code = P_C_Group_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Class
             Where C_Class = P_C_Class And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Customer_Class_Typ
             Where C_Class_Typ = P_C_Class_Typ And Rownum <= 1;
         Exception
         End;
            Begin
               Select 1
                 From Customer
                Where Nvl (C_Mobile, 0) = Nvl (P_C_Mobile, 0) And Rownum <= 1;
            Exception
            End;
            Begin
               Select 1
                 From Customer
                Where Nvl (C_Mobile, 0) = Nvl (P_C_Mobile, 0) And C_Code <> P_C_Code And Rownum <= 1;
            Exception
            End;
            Begin
               Select 1
                 From Customer
                Where Nvl (C_Code_Trgt, 0) = Nvl (P_C_Code, 0) And Rownum <= 1;
            Exception
            End;
                  Begin
                     Select Nvl (Max (To_Number (C_Code)), 0) + 1 Into V_Cst_Code From Customer;
                  Exception
                  End;
                  Begin
                     Select Nvl (Max (To_Number (C_Code)), 0) + 1
                       From Customer
                      Where C_Group_Code = P_C_Group_Code;
                  Exception
                  End;
                  Begin
                     Select Nvl (Max (To_Number (C_Code)), 0) + 1
                       From Customer
                      Where C_Group_Code = P_C_Group_Code And C_Class = P_C_Class;
                  Exception
                  End;
         Begin
            Select C_A_Code
              From Customer_Group
             Where C_Group_Code = P_C_Group_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select Nvl (Max (Cst_Seq), 0) + 1 Into V_Cst_Seq From Customer;
         Exception
         End;
         Begin
            Select 1
              From Customer
             Where C_Code = V_Cst_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Insert Into Customer (C_Code
         Exception
               Raise_Application_Error (-20294, 'Err INSERT INTO CUSTOMER  ' || Chr (10) || Sqlerrm);
         End;
         If Nvl (Ias_Gen_Pkg.Get_Cnt ('Select 1 From CUSTOMER Where 
            For I In (Select A_Cy, Inactive
                        From Account_Curr
                       Where A_Code = V_C_Acode)
               Begin
                  Insert Into Customer_Curr (C_Code
               Exception
                     Raise_Application_Error (-20295, 'Err INSERT INTO CUSTOMER_CURR ' || Chr (10) || Sqlerrm);
               End;
            Begin
               For J In (Select Distinct U_Id
                           From Priv_Acc P, Customer C
                          Where P.A_Code = C.C_A_Code And P.A_Code = V_C_Acode And C.C_Code = V_Cst_Code And Nvl (Add_Flag, 0) + Nvl (View_Flag, 0) > 0)
                  Insert Into Ias_Priv_Customer (U_Id
            Exception
                  Raise_Application_Error (-20296, 'Err INSERT INTO Ias_Priv_Customer ' || Chr (10) || Sqlerrm);
            End;
         Begin
            Update Customer
             Where C_Code = P_C_Code;
         Exception
               Raise_Application_Error (-20297, 'Err WHEN UPDATE CUSTOMER  ' || Chr (10) || Sqlerrm);
         End;
 Procedure Get_Prmtr_Prc (P_Sys_No          In     Number Default Null
                         P_Pst_From_Br      In     Number , --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
      Begin
         Select Lang_No
           From Ias_Sys.Lang_Def
          Where Lang_Dflt = 1 And Rownum <= 1;
      Exception
            P_Msg_Txt   := 'Error When Select Deflt Language ';
      End;
      Begin
         Select 1
           From Ias_Sys.Lang_Def
          Where Lang_No = G_Lng_No And Rownum <= 1;
      Exception
      End;
   Begin
      Select Nvl (Check_Lmt_Sorder, 0)
        From Ias_Para_Gen
   Exception
         Raise_Application_Error (-20298, 'Error When Select PARAMETER , ' || Sqlerrm);
   End;
   /* Begin
       Select Max(Yr_No)
         From S_Prd_Dtl
        Where To_Date(G_Doc_Date, 'DD/MM/RRRR') Between F_Date And T_Date;
    Exception
    End;*/
   Begin
   Exception
   End;
Exception
Procedure INSRT_DOC_INTO_ONYX(P_Doc_Typ          In Ias_Post_Mst.Doc_Type%Type
 Exception When Others Then
 Function INSRT_DOC_INTO_BR( P_Doc_Typ          In Ias_Post_Mst.Doc_Type%Type
Exception When Others Then
Procedure INSRT_DOC_BY_XML (   P_Doc_Typ          In       Ias_Post_Mst.Doc_Type%Type
                              ,P_Pst_FROM_BR      In       Number  --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
   Begin
         For M_Cv In (Select Extractvalue (Value (Xmlmstdmy), '*/SYS_NO              ') As Sys_No
                        From Table (Xmlsequence (Extract (V_Xml_Type, '/SAL_ORDR/SALES_ORDER'))) Xmlmstdmy)
            Begin
            Exception
            End
Select Extractvalue (Value (Xmldtldmy), '*/I_CODE               ') As I_Code
                           From Table (Xmlsequence (Extract (V_Xml_Type, '/SAL_ORDR/ORDER_DETAIL'))) Xmldtldmy)
               Begin
               Exception
               End;      
             For Tax_Mvmnt_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                     ') As Doc_Typ
                                  From Table( Xmlsequence( Extract( V_Xml_Type, '/SAL_ORDR/GNR_TAX_ITM_MOVMNT'))) Xmldtldmy                                  
                          Begin
                    Exception
                    End;
               For Othr_Chrg_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                     ') As Doc_Typ
                                      From Table( Xmlsequence( Extract( V_Xml_Type, '/SAL_ORDR/OTHER_CHARGES'))) Xmldtldmy)
                  Begin
                  Exception
                  End;
               For Othr_Chrg_Itm_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                    ') As Doc_Typ
                                                  From Table( Xmlsequence( Extract( V_Xml_Type, '/SAL_ORDR/OTHER_CHARGES_ITEMS'))) Xmldtldmy)
                          Begin
                          Exception
                          End;
         For M_Cv In (Select Extractvalue (Value (Xmlmstdmy), '*/SYS_NO                                   ') As Sys_No
                        From Table (Xmlsequence (Extract (V_Xml_Type, '/BILL/IAS_BILL_MST'))) Xmlmstdmy)
            Begin                                                                                                                                                                                                                                                                                
            Exception
            End;                                                                                                                                                                                                                                                            
            For D_Cv In (Select Extractvalue (Value (Xmldtldmy), '*/I_CODE                                           ') As I_Code
                           From Table (Xmlsequence (Extract (V_Xml_Type, '/BILL/IAS_BILL_DTL'))) Xmldtldmy)
               Begin
               Exception
               End
             For Tax_Mvmnt_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                     ') As Doc_Typ
                                  From Table( Xmlsequence( Extract( V_Xml_Type, '/BILL/GNR_TAX_ITM_MOVMNT'))) Xmldtldmy                                  
                          Begin
                    Exception
                    End;
                         For Othr_Chrg_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                     ') As Doc_Typ
                                      From Table( Xmlsequence( Extract( V_Xml_Type, '/BILL/OTHER_CHARGES'))) Xmldtldmy)
                  Begin
                  Exception
                  End;
               For Othr_Chrg_Itm_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                    ') As Doc_Typ
                                                  From Table( Xmlsequence( Extract( V_Xml_Type, '/BILL/OTHER_CHARGES_ITEMS'))) Xmldtldmy)
                          Begin
                          Exception
                          End;
         For M_Cv In (Select Extractvalue (Value (Xmlmstdmy), '*/SYS_NO                          ') As Sys_No
                        From Table (Xmlsequence (Extract (V_Xml_Type, '/RT_BILL/IAS_RT_BILL_MST'))) Xmlmstdmy)
            Begin
            Exception
            End
            For D_Cv In (Select Extractvalue (Value (Xmldtldmy), '*/I_CODE                          ') As I_Code
                           From Table (Xmlsequence (Extract (V_Xml_Type, '/RT_BILL/IAS_RT_BILL_DTL'))) Xmldtldmy)
               Begin
               Exception
               End
            For Tax_Mvmnt_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                     ') As Doc_Typ
                                  From Table( Xmlsequence( Extract( V_Xml_Type, '/BILL/GNR_TAX_ITM_MOVMNT'))) Xmldtldmy                                  
                          Begin
                    Exception
                    End;
                         For Othr_Chrg_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                     ') As Doc_Typ
                                      From Table( Xmlsequence( Extract( V_Xml_Type, '/BILL/OTHER_CHARGES'))) Xmldtldmy)
                  Begin
                  Exception
                  End;
               For Othr_Chrg_Itm_Cv In (Select Extractvalue( Value( Xmldtldmy), '*/DOC_TYP                    ') As Doc_Typ
                                                  From Table( Xmlsequence( Extract( V_Xml_Type, '/BILL/OTHER_CHARGES_ITEMS'))) Xmldtldmy)
                          Begin
                          Exception
                          End;
   Exception
   Procedure Post_From_Br_Prc (P_Sys_No     In     Number
   Begin
         For M_Cv In (Select *
                        From Ias_Bill_Mst_Br
                       Where Bill_Ser = P_Doc_Ser)
            Begin                                                                                                                                                                                         
            Exception
            End
            For D_Cv In (Select I_Code As I_Code
                           From Ias_Bill_Dtl_Br
                          Where Bill_Ser = P_Doc_Ser)
               Begin                                                                                                                                                
               Exception
               End
            Begin
               Update Ias_Bill_Mst_Br
                Where Bill_Ser = G_Doc_Ser;
            Exception
                  Raise_Application_Error (-20320, 'Err when UPDATE IAS_BILL_MST_BR DOC_NO= ' || V_Doc_No || ' ' || Chr (10) || Sqlerrm);
            End;
         For M_Cv In (Select P_Sys_No As Sys_No
                        From Ias_Rt_Bill_Mst_Br
                       Where Rt_Bill_Ser = P_Doc_Ser)
            Begin                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 --(1)
            Exception
            End
            For D_Cv In (Select I_Code As I_Code
                           From Ias_Rt_Bill_Dtl_Br
                          Where Rt_Bill_Ser = P_Doc_Ser)
               Begin
               Exception
               End
            Begin
               Update Ias_Rt_Bill_Mst_Br
                Where Rt_Bill_Ser = G_Doc_Ser;
            Exception
UPDATE IAS_BILL_MST_BR DOC_NO= ' || V_Doc_No || ' ' || Chr (10) || Sqlerrm);
            End;
   Exception
  Procedure Insrt_Sales_Order (P_Sys_No              In     Number
         Begin
            Select Credit_Period
              From Customer
             Where C_Code = P_C_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select R_Code
              From Customer
             Where C_Code = P_C_Code And Rownum <= 1;
         Exception
         End;
      Begin
      Exception
      End;
   Insert Into Sales_Order (Order_No
Exception
      P_Msg_Txt := 'Error When Insert Into Sales Order Master , ' || Chr(10) || Sqlerrm;
  Procedure Insrt_Order_Detail (P_I_Code                 In     Order_Detail.I_Code%Type Default Null
           BEGIN
           SELECT DOC_NO,DOC_SER INTO G_DOC_NO,G_DOC_SER FROM ARS_SAL_ORDR_MST WHERE DOC_M_SQ = G_DOC_M_SQ AND ROWNUM<=1;
       EXCEPTION
       END;*/
   Begin
   Exception
   End;
      Begin
         Select 1
           From Ias_Sys.Ias_Docjv_Type_Systems
          Where Doc_Type = P_Doc_Type_Ref And Rownum <= 1;
      Exception
      End;
         Begin
            Select 1
              From Quotation_Detail
             Where Quot_No = P_Doc_No_Ref And Quot_Ser = P_Doc_Ser_Ref And Rownum <= 1;
         Exception
         End;
   Begin
      Select Ias_Doc_Seq_Othr.Nextval Into V_Doc_Seq From Dual;
   Exception
   End;
   Insert Into Order_Detail (So_Type
Exception
      P_Msg_Txt := 'Error When Insert Into Sales Order Detail , ' || Chr(10) || Sqlerrm;
   Procedure Insrt_Ias_Bill_Mst (P_Sys_No                       In     Number
                             ,P_Pst_From_Br                  In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
         Begin
            Select Credit_Period
              From Customer
             Where C_Code = P_C_Code And Rownum <= 1;
         Exception
         End;
   Begin
   Exception
   End;
         Begin
            Select R_Code
              From Customer
             Where C_Code = G_C_Code And Rownum <= 1;
         Exception
         End;
      Begin
      Exception
      Insert Into Ias_Bill_Mst (Bill_Doc_Type
       Begin
       Exception
       End;
      Insert Into Ias_Bill_Mst_Br (Bill_Doc_Type
Exception
  Procedure Insrt_Ias_Bill_Dtl (P_I_Code                   In     Ias_Bill_Dtl.I_Code%Type Default Null
   Begin
      Begin
      Exception
      End;
         Begin
            Select 1
              From Ias_Sys.Ias_Docjv_Type_Systems
             Where Doc_Type = P_Doc_Type_Ref And Rownum <= 1;
         Exception
         End;
            Begin
               Select 1
                 From Order_Detail
            Exception
            End;
      Begin
      Exception
      End;
      Begin
         Select Ias_Doc_Seq.Nextval Into V_Doc_Sequence From Dual;
      Exception
      End;
      Select Service_Itm, Use_Serialno, Used_Itm
        From Ias_Itm_Mst
       Where I_Code = P_I_Code And Rownum <= 1;
         Begin
         Exception
         End;
         Insert Into Ias_Bill_Dtl (Bill_Doc_Type
         Insert Into Ias_Bill_Dtl_Br (Bill_Doc_Type
   Exception
         P_Msg_Txt   := 'Error When Insert Into ' || V_Tbl_Dtl || Chr(10) || Sqlerrm;
   End;
  Procedure Insrt_Ias_Rt_Bill_Mst (P_Sys_No              In     Number
                                ,P_Pst_From_Br         In     Number --## 1- POSTING FORM BR TABLE  0- NOT FROM BR
         Begin
            Select Credit_Period
              From Customer
             Where C_Code = P_C_Code And Rownum <= 1;
         Exception
         End;
         Begin
            Select R_Code
              From Customer
             Where C_Code = G_C_Code And Rownum <= 1;
         Exception
      Begin
         Insert Into Ias_Rt_Bill_Mst (Rt_Bill_No
      Exception
      End;
      Begin
      Exception
            P_Msg_Txt   := 'Error When Insert Into Gr_Note In Post Rt Sales' || Chr(10) || Sqlerrm;
      End;
      Insert Into Ias_Rt_Bill_Mst_Br (Rt_Bill_No
Exception
 Procedure Insrt_Ias_Rt_Bill_Dtl (P_I_Code                 In     Ias_Rt_Bill_Dtl.I_Code%Type Default Null
      Begin
         Select 1
           From Ias_Sys.Ias_Docjv_Type_Systems
          Where Doc_Type = P_Doc_Type_Ref And Rownum <= 1;
      Exception
      End;
           BEGIN
            SELECT 1,BILL_NO,DOC_SEQUENCE,RCRD_NO,BILL_DOC_TYPE ,I_QTY,FREE_QTY
               SELECT BILL_NO,BILL_SER,DOC_SEQUENCE,RCRD_NO,BILL_DOC_TYPE,I_CODE,ITM_UNT, EXPIRE_DATE,BATCH_NO,I_QTY,FREE_QTY FROM IAS_BILL_DTL
               SELECT BILL_NO,BILL_SER,DOC_SEQUENCE,RCRD_NO,BILL_DOC_TYPE ,I_CODE,ITM_UNT,EXPIRE_DATE,BATCH_NO,I_QTY ,FREE_QTY FROM  IAS_BILL_DTL_BR
                 WHERE BILL_SER=P_BILL_SER
           EXCEPTION WHEN OTHERS THEN
            END;
   Begin
   Exception
   End;
   Begin
      Select Ias_Doc_Seq.Nextval Into V_Doc_Sequence From Dual;
   Exception
   End;
   Begin
         Select Allow_Enter_Zero_Cost
           From Privilege_Fixed
          Where U_Id = G_Ad_U_Id And Rownum <= 1;
   Exception
         P_Msg_Txt   := 'Error When Select From Privilege_Fixed In Post_Rt_Sales_Detail' || Chr(10) || Sqlerrm;
   End;
   Select Service_Itm, Use_Serialno, Used_Itm
     From Ias_Itm_Mst
    Where I_Code = P_I_Code And Rownum <= 1;
            Begin
               Select W_Code
                 From Warehouse_Details
                Where Nvl (Main_Wcode, 0) = 1;
            Exception
            End;
      Begin
         Insert Into Ias_Rt_Bill_Dtl (Rt_Bill_No
      Exception
            P_Msg_Txt   := 'Error When Insert Into IAS_RT_BILL_DTL' || Chr (10) || Sqlerrm;
      End;
         Begin
         Exception
         End;
         Begin
         Exception
               P_Msg_Txt   := 'Error When Insert Into Gr Detail , (Rt
         End;
         --## Insert Into Item_movement
         Begin
         Exception
               P_Msg_Txt   := 'Error When Insert Into Item Movement , (Rt Sales) ' || Chr(10) || Sqlerrm;
         End;
      Insert Into Ias_Rt_Bill_Dtl_Br (Rt_Bill_No
Exception
      P_Msg_Txt   := 'Error When Insert Into ' || V_Tbl_Dtl || Chr(10) || Sqlerrm;
  Procedure Get_Doc_No (P_Doc_Typ   In     Number
      Begin
         Execute Immediate ' SELECT  Get_Dts_Trans_Ser( P_Doc_Type       =>' || V_Dts_Doc_Type || ',                                                        
                                                      P_No_Srl          => 1      ) FROM DUAL ' Into G_Doc_No;
      Exception
      End;
      Begin
      Exception
      End;
Exception
  Procedure Get_Doc_Ser (P_Doc_Typ   In     Number
      Begin
        Execute Immediate ' SELECT  Get_Dts_Trans_Ser( P_Doc_Type       =>' || V_Dts_Doc_Type || ',                                                        
                                                          P_No_Srl          => 1      ) FROM DUAL ' Into G_Doc_Ser;
      Exception
      End;
      Begin
      Exception
      End;
Exception
  Procedure Check_Duplicate (P_Doc_Typ   In     Number
         Begin
            Select 1
              From Sales_Order
             Where Order_Ser = G_Doc_Ser And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From (Select Bill_Ser
                      From Ias_Bill_Mst
                     Where Bill_Ser = G_Doc_Ser
                    Select Bill_Ser
                      From Ias_Bill_Mst_Br
                     Where Bill_Ser = G_Doc_Ser)
             Where Bill_Ser = G_Doc_Ser And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From (Select Rt_Bill_Ser
                      From Ias_Rt_Bill_Mst
                     Where Rt_Bill_Ser = G_Doc_Ser
                    Select RT_Bill_Ser
                      From Ias_Rt_Bill_Mst_Br
                     Where Rt_Bill_Ser = G_Doc_Ser)
             Where Rt_Bill_Ser = G_Doc_Ser And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Sales_Order
             Where Order_Ser = G_Doc_Ser And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Ias_Bill_Mst
             Where Bill_Ser = G_Doc_Ser And Rownum <= 1;
         Exception
         End;
         Begin
            Select 1
              From Ias_Rt_Bill_Mst
             Where Rt_Bill_Ser = G_Doc_Ser And Rownum <= 1;
         Exception
         End;
Exception
   Procedure Chk_Accnt (P_Cur_Code        In     Ex_Rate.Cur_Code%Type
   Begin
         Begin
            Select 1
              From S_Flags
             Where Flg_Code = 'TYPE_NAME_SI' And Flg_Value = Nvl (P_Bill_Doc_Type, 0) And Rownum <= 1;
         Exception
         End;
                 Begin 
                 Exception
                 End;
                 Begin   
                 Exception
                 End;               
                 Begin 
                 Exception
                 End; 
             Begin  
             Exception
             End;            
                 Begin
                 Exception
                 End;             
                 Begin                                     
                 Exception
                 End;          
                Begin                                      
                Exception
                End;        
   Exception When Others then
   Procedure Chk_Gnr_Data (P_Brn_No           In     Ias_Bill_Mst.Brn_No%Type Default Null
   Begin
   Exception When Others then
  Procedure Insrt_Reserve_Prc (P_I_Code       In Item_Movement.I_Code%Type
   Begin
            Begin
               Select Nvl (Max (Doc_No), 0) + 1
                 From Ias_Reserve_Mst
                Where Doc_Type_Ref = G_Doc_Typ;
            Exception
            End;
            Begin
               Insert Into Ias_Reserve_Mst (Doc_Type
            Exception
            End;
         Begin
            Insert Into Ias_Reserve_Dtl (Doc_Type
         Exception
         End;
   Exception When Others then
   Procedure Insrt_Installment (P_Bill_Doc_Type   In     Ias_Bill_Mst.Bill_Doc_Type%Type
   Begin
         V_Cnt := Ias_Gen_Pkg.Get_Cnt ('Select Count(1) From ' || V_Tbl_Instil || ' 
                                                              Where doc_type= 4 
         V_Cnt_Paid := Ias_Gen_Pkg.Get_Cnt ('Select Count(1) From  ' || V_Tbl_Instil || '           
                                                                          Where doc_type= 4 
            Begin
               Execute Immediate ' DELETE  ' || V_Tbl_Instil || ' WHERE BILL_SER=' || P_Doc_Ser || ' AND NVL(I_PY,0)=0 ';
            Exception
            End;
            --BEGIN
               Begin
                  Execute Immediate '   INSERT INTO ' || V_Tbl_Instil || ' ( DOC_TYPE        , 
                                                      SELECT  4               , 
                                                         FROM ' || V_Tbl_Mst || '
                                                        WHERE BILL_SER=' || P_Doc_Ser;
               EXCEPTION  WHEN NO_DATA_FOUND THEN
               End;
               Begin
                  Execute Immediate '  SELECT ((NVL(BILL_AMT,0)-NVL(DISC_AMT_MST,0)-NVL(DISC_AMT_DTL,0)-NVL(DISC_AMT_AFTR_VAT,0)-NVL(POINT_RPLC_AMT,0)-NVL(INSRNCE_CSH_AMT,0))+(NVL(OTHR_AMT,0)+NVL(VAT_AMT,0)+NVL(VAT_AMT_OTHR,0)+NVL(ASS_AMT,0))-(NVL(CR_CARD_AMT,0)+NVL(CR_CARD_AMT_SCND,0)+NVL(CR_CARD_AMT_THRD,0))),NVL(OTHR_AMT,0)  
                        FROM ' || V_Tbl_Mst || ' 
                       WHERE BILL_SER=' || P_Doc_Ser Into V_Bamt, V_Oamt;
                  Execute Immediate '  SELECT SUM(NVL(I_AMT,0)),SUM(NVL(PAID_AMT,0)+NVL(ADJ_AMT,0))   
                        FROM ' || V_Tbl_Instil || ' 
                       WHERE DOC_TYPE=4
               Exception WHEN NO_DATA_FOUND THEN
               End;
            Begin
               Execute Immediate '   INSERT INTO ' || V_Tbl_Instil || '( DOC_TYPE        , 
                                              SELECT  4               , 
                                                 FROM ' || V_Tbl_Mst || ' 
                                                WHERE BILL_SER=' || P_Doc_Ser || '
            Exception
            End;
   Exception When Others then
   PROCEDURE Insert_Installemnt_FBR (P_Doc_Type    Number,
               Select I_No, 
                 From Ias_Bill_Mst_Br , Installment_Br
                where Ias_Bill_Mst_Br.bill_ser= Installment_Br.bill_ser 
                Begin    
                       Begin         
                              Insert Into Installment (  Doc_Type, 
                       Exception
                      End;     
                End;
               Select I_No, 
                 From Ias_Bill_Mst_Br , Installment_Br
                where Ias_Bill_Mst_Br.bill_ser= Installment_Br.bill_ser 
                  Group By I_No,I_Date,Installment_Br.Cheque_No,Installment_Br.Cheque_D
                Begin    
                       Begin         
                              Insert Into Installment (  Doc_Type, 
                      Exception
                      End;     
                End;
Exception When Others then
   Procedure Insrt_Other_Charges(    P_DOC_TYP                    IN IAS_POST_DTL.DOC_TYPE%TYPE
 Insert Into  Other_Charges(   Bill_No,
Insert Into  Other_Charges_BR( Bill_No,
   Exception
 Procedure Insrt_Other_Charges_Items( P_DOC_TYP                   IN IAS_POST_DTL.DOC_TYPE%TYPE  
BEGIN  
 Insert Into Other_Charges_Items(   Bill_No,
 Insert Into Other_Charges_Items_BR(   Bill_No,
   Exception
   Procedure   INSRT_GNR_TAX_ITM_MOVMNT( P_DOC_TYP                    IN GNR_TAX_ITM_MOVMNT.DOC_TYPE%TYPE               DEFAULT NULL
            Insert Into Gnr_Tax_Itm_Movmnt(Doc_Type,
   Insert Into Gnr_Tax_Itm_Movmnt_BR(Doc_Type,
  Insert Into GNR_RQ_TAX_ITM_MOVMNT(Doc_Type,
   Exception
Procedure Calc_Other_Charges (P_Doc_Typ          In     Number
   Begin
      Execute Immediate 'Select ' || P_Fld_Mst_Amt || ', Disc_Amt        
                     From ' || P_Tbl_Mst_Nm || ' 
                    Where  ' || P_Fld_Doc_Ser || ' =' || P_Doc_Ser || ' ' Into V_Doc_Amt, V_Disc_Amt;
   Exception
   End;
           Select Sc_No
             From Sales_Charges
            Where Nvl (Fill_Auto, 0) = 1 And Nvl (Inv_Item, 0) = 0 
         Order By Sc_No;
   Begin
                  Begin
                  Exception
                  End;
   End;
Exception
   Procedure Clr_Glbl_Var
   Begin
Procedure Delete_Bill (P_Doc_Typ   In     Ias_Post_Mst.Doc_Type%Type
   Begin
      Delete From Ias_Post_Mst
            Where Doc_Ser = G_Doc_Ser And Doc_Type = 4;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  IAS_POST_MST' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From Item_Movement
            Where Doc_Ser = G_Doc_Ser And Doc_Type = 1;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  item_movement' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From Sale_Cost
            Where Doc_Ser = G_Doc_Ser And BILL_TYPE = 4;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  sale_cost' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From Other_Charges
            Where Bill_Ser = G_Doc_Ser;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  OTHER_CHARGES' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From Other_Charges_Items
            Where Bill_Ser = G_Doc_Ser;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  OTHER_CHARGES_ITEMS' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From Gnr_Tax_Itm_Movmnt
            Where Doc_Ser = G_Doc_Ser And Doc_Type = 4;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  GNR_TAX_ITM_MOVMNT' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From Installment
            Where Bill_Ser = G_Doc_Ser;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  Installment' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From DETAIL_OUT_BILLS
            Where Bill_Ser = G_Doc_Ser;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  DETAIL_OUT_BILLS' || Chr(10) || Sqlerrm;
   End;
    Begin
      Delete From MASTER_OUT_BILLS
            Where Bill_Ser = G_Doc_Ser;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  MASTER_OUT_BILLS' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From Ias_Bill_Dtl
            Where Bill_Ser = G_Doc_Ser;
   Exception
         P_Msg_Txt   := 'ERROR WHEN DELTE FROM  ias_bill_dtl' || Chr(10) || Sqlerrm;
   End;
   Begin
      Delete From Ias_Bill_Mst
            Where Bill_Ser = G_Doc_Ser;
   Exception
   End;
Exception
  Procedure Chk_Insrt_Data(P_Doc_Typ    In     Ias_Post_Mst.Doc_Type%Type
        BEGIN
             EXECUTE IMMEDIATE 'UPDATE '||V_Tbl_Dtl_Nm||' D SET 
                                  WHERE '||V_Fld_Doc_Ser||'='||G_Doc_Ser;
        EXCEPTION WHEN NO_DATA_FOUND THEN
               P_Msg_Txt :=  'Err. WHEN UPDATE VAT_PER' || Chr(10) || Sqlerrm;
        END; 
   --## UPDATE DISC  
   Begin
   Exception
   End;
         Begin
         Exception
         End; 
        BEGIN
             EXECUTE IMMEDIATE 'UPDATE '||V_Tbl_Dtl_Nm||' D SET VAT_PER = ( SELECT SUM(NVL(T.TAX_PRCNT,0)) 
                                                                                           FROM '||V_Tbl_Tax_Mvmnt_Nm||' T
                                                                                          WHERE T.DOC_TYPE     = '||G_DOC_TYP||'
                                  WHERE '||V_Fld_Doc_Ser||'='||G_Doc_Ser;
        EXCEPTION WHEN NO_DATA_FOUND THEN
               P_Msg_Txt :=  'Err. WHEN UPDATE VAT_PER' || Chr(10) || Sqlerrm;
        END;     
         BEGIN
            Exception When No_Data_Found Then 
            End;
               Begin
               Exception
               End; 
              Begin
              End;
         Begin
         Exception
         End;
          Begin
          Exception
          End;
         Begin
            Update Item_Movement M
               Set Dis_Amt      = (Select Dis_Amt
                                     From Detail_Out_Bills D
                                    Where M.Out_Gr_Ser = D.Out_Ser
             Where Doc_Ser = G_DOC_Ser;
         Exception
         End;          
         Begin
            Update Item_Movement M
               Set Dis_Amt      = (Select Dis_Amt
                                     From Ias_Bill_Dtl D
                                    Where M.Doc_Ser = D.Bill_Ser
             Where Doc_Ser = G_Doc_Ser;
         Exception
         End;
          Begin
          Exception
                   P_Msg_Txt :=  'Error When Insert Into Insrt_Ret_Bills Tables '|| Sqlerrm;
              --  Raise_Application_Error(-20011, 'Error When Insert Into Out Bills Tables , (Rt Sales)' || Chr(10) || Sqlerrm);
          End;
          Begin
          Exception
          End;
          Begin
             Update Gr_Detail M
                Set Dis_Amt      = (Select Dis_Amt
                                      From Ias_Ret_Bill_Dtl D
                                     Where M.G_Ser = D.Ret_Ser
              Where G_Ser = G_Ret_Ser;
          Exception
          End;
          Begin
             Update Item_Movement M
                Set Dis_Amt      = (Select Dis_Amt
                                      From Ias_Ret_Bill_Dtl D
                                     Where M.Out_Gr_Ser = D.Ret_Ser
              Where Doc_Ser = G_Doc_Ser;
          Exception
          End;
          Begin
             Update Gr_Detail M
                Set Dis_Amt      = (Select Dis_Amt
                                      From Ias_Rt_Bill_Dtl D
                                     Where M.Doc_Ser = D.Rt_Bill_Ser
              Where Doc_Ser = G_Doc_Ser;
          Exception
          End;
          Begin
             Update Item_Movement M
                Set Dis_Amt      = (Select Dis_Amt
                                      From Ias_Rt_Bill_Dtl D
                                     Where M.Doc_Ser = D.Rt_Bill_Ser
              Where Doc_Ser = G_Doc_Ser;
          Exception
          End;
      Begin
      Exception
      End;
EXCEPTION WHEN OTHERS THEN 
 BEGIN
CREATE OR REPLACE Package ARS_API_CHK_PKG
Function Get_Qt_Prm  (   P_Date                    In  Date,
Function  Chk_Qt_Prm(P_I_Code       In Ias_Itm_Mst.I_Code%Type,
  Procedure Updt_Bill_Disc_Prc ( P_Doc_Typ             In     Number
    Procedure Chk_Conn_Cst_Col (P_C_Code     In     Customer.C_Code%Type Default Null
Procedure   Chk_Sman_Conn_Data (P_Sys_No           In     Number
Procedure Chk_Cr_Card_Prc (P_Bill_Doc_Type          In     Ias_Bill_Mst.Bill_Doc_Type%Type
Procedure  Chk_Amt_And_Itm_Tax( P_Clc_Typ_No_Tax   In     Gnr_Tax_Itm_Movmnt.Clc_Typ_No%Type Default Null,
Procedure CHK_MNDTRY_FLIDS (P_Doc_Typ           IN  IAS_POST_DTL.DOC_TYPE%TYPE,
Procedure Chk_Credit_Period (   P_CHK_CRDT_PRD    In     Number   --## 0-UNCHECK Credit_Period 1-CHECK_Credit_Period
Procedure Chk_Credit_Limit (   P_Chk_CrDT_LMIT  In    NUMBER --## 0 UNCHECKCredit_Limit  1- CH
Procedure Update_Other_Charges (P_Doc_Typ          In     Number
CREATE OR REPLACE Package Body ARS_API_CHK_PKG
Function Get_Qt_Prm  (   P_Date                    In  Date,
    Begin
    Exception When Others Then 
    End;   
             Begin                                                        
                 Select 
                 From Dual;
             Exception 
             End;
       Begin
         Begin
            Select 1 InTo V_Use_Qt_Prm_Tmp_Tbl From Ias_Qut_Prm_Mst Where P_Date Between F_Date And T_Date 
         Exception When Others Then
         Begin
            Select 1 InTo V_Use_Qt_Prm_Less_Price From Ias_Qut_Prm_Mst Where Qt_Prm_Type In (4,5) And P_Date Between F_Date And T_Date And RowNum<=1;
         Exception When Others Then
         Begin
            Select 1 InTo V_Use_Qt_Prm_PrmGrp From Ias_Qut_Prm_Mst Where Qt_Prm_Type In (1,2) And Qt_Prm_Method In (6,7) And P_Date Between F_Date And T_Date And RowNum<=1;        
         Exception When Others Then
         Begin
            Select 1 InTo V_Use_Qt_Prm_PrmGrp_Dsc From Ias_Qut_Prm_Mst Where ((Qt_Prm_Type In (1,2) And Qt_Prm_Method=6) Or Qt_Prm_Type I
         Exception When Others Then
         Begin
            Select 1 InTo V_Use_Qt_Prm_Prm From Ias_Qut_Prm_Mst Where P_Date Between F_Date And T_Date And RowNum<=1;
         Exception When Others Then
       End;
              Begin
                Select Ias_Doc_Seq_Othr.Nextval Into V_Doc_Seq_Tmp From Dual;
              Exception
              End;
                     Begin
                    begin
                      Delete  IAS_BILL_DTL_ITM_TMP where Doc_Seq=V_Doc_Seq_Tmp;
                    Exception
                    End;
                       Insert Into IAS_BILL_DTL_ITM_TMP (Bill_Doc_Type, I_Code, Itm_Unt,P_Size,I_Qty,Qt_Free_Qty,I_Price, W_Code, C_Code, Dis_Per, Dis_Amt_Dtl, Rcrd_No, Doc_Seq,Chng_Flg)
                  Exception
                  End;
              Begin
                Select Qt_Free_Qty, I_Price, Dis_Per, Dis_Amt_Dtl, Qt_Prm_No, Qt_Prm_Ser, Qt_Prm_Rcrd_No
                  From IAS_BILL_DTL_ITM_TMP
                 Where Nvl(Chng_Flg,0)=1
              Exception When Others Then
               Begin                                                        
                 Select 
                 From Dual;
             Exception 
             End;
              Begin
                  Update Ias_Bill_Dtl_ITM_TMP Set Chng_Flg=0 Where Doc_Seq=V_Doc_Seq_Tmp; 
              Exception
              End; 
Function  Chk_Qt_Prm(P_I_Code       In Ias_Itm_Mst.I_Code%Type,
    Begin
      Select 1 InTo V_Cnt
          From Ias_Qut_Prm_Mst,Ias_Qut_Prm_Dtl
         Where Ias_Qut_Prm_Mst.Quot_Ser = Ias_Qut_Prm_Dtl.Quot_Ser
    Exception WHen Others Then
    End;
Procedure Updt_Bill_Disc_Prc (P_Doc_Typ             In     Number
   Select Nvl (Calc_Si_Disc_Without_Itm_Disc, 0), Nvl (No_Of_Decimal_Ar, 2), Nvl (Show_Disc_Per_Items_Ar, 0)
     From Ias_Para_Ar;
   Execute Immediate 'SELECT NVL(SUM((NVL(I_QTY,0) * NVL(I_PRICE,0))),0),NVL(SUM((NVL(I_QTY,0) * NVL(I_PRICE_VAT,0))),0) 
                         FROM ' || P_Tbl_Dtl_Nm || '
                         WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Bill_Amt, V_Bill_Amt_Vat;
   Execute Immediate 'SELECT  nvl(disc_amt_Mst,0) ,NVL(disc_amt_mst_vat,0)
                       FROM ' || P_Tbl_Mst_Nm || ' 
                       WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Disc_Amt_Mst, V_Disc_Amt_Mst_Vat;
      Begin
            Begin
               Execute Immediate ' UPDATE ' || P_Tbl_Dtl_Nm || ' SET 
                                                     WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || '
            Exception
                  P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
            End;
            Begin
               Execute Immediate '  UPDATE  ' || P_Tbl_Dtl_Nm || ' SET 
                                                         WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || '
            Exception
                  P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
            End;
            Begin
               Execute Immediate '  UPDATE ' || P_Tbl_Dtl_Nm || ' SET 
                                                         WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || '
            Exception
                  P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
            End;
             Begin
               Execute Immediate '  UPDATE ' || P_Tbl_Dtl_Nm || ' 
                                             WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || '
            Exception
                  P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
            end;
               Begin
                  Execute Immediate '  UPDATE ' || P_Tbl_Dtl_Nm || ' SET 
                                                           WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || '
               Exception
                     Raise_Application_Error (-20366, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
               Begin
                  Execute Immediate '  UPDATE ' || P_Tbl_Dtl_Nm || ' SET 
                                                         WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || '
               Exception
                     Raise_Application_Error (-20367, 'Errt When Update Disc' || Chr (10) || Sqlerrm);
               End;
      End;
   Begin
         Begin
            Execute Immediate 'SELECT SUM((NVL(DIS_AMT_DTL_VAT,0)+NVL(DIS_AMT_DTL2_VAT,0)+NVL(DIS_AMT_DTL3_VAT,0))*NVL(I_QTY,0)) 
                                  FROM ' || P_Tbl_Dtl_Nm || ' 
                                    WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Sum_Dis_Amt_Dtl_Vat;
         Exception
               P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
         End;
         Begin
            Execute Immediate ' SELECT SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0))*NVL(I_QTY,0)) 
                                      FROM ' || P_Tbl_Dtl_Nm || '
                                     WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser Into V_Sum_Dis_Amt_Dtl;
         Exception
               P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
         End;
   Exception
   End;
            Begin
               Execute Immediate ' UPDATE  ' || P_Tbl_Mst_Nm || ' SET Disc_Amt_Mst_Vat=Round((((' || Nvl (V_Bill_Amt_Vat, 0) || '- ' || Nvl (V_Sum_Dis_Amt_Dtl_Vat, 0) || ')*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ') 
                         WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
            Exception
                  P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
            End;
            Begin
               Execute Immediate ' UPDATE  ' || P_Tbl_Mst_Nm || ' SET Disc_Amt_Mst_Vat=Round(((' || Nvl (V_Bill_Amt_Vat, 0) || '*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ') 
                                           WHERE  ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
            Exception
                  P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
            End;
            Begin
               Execute Immediate ' UPDATE  ' || P_Tbl_Mst_Nm || ' SET Disc_Amt_Mst=Round((((' || Nvl (V_Bill_Amt, 0) || '- ' || Nvl (V_Sum_Dis_Amt_Dtl, 0) || ')*' || Nvl (V_Discount, 0) || ')/100),' || V_No_Of_Decimal || ')
                                                     WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
            Exception
                  P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
            End;
            Begin
               Execute Immediate ' UPDATE  ' || P_Tbl_Mst_Nm || ' SET Disc_Amt_Mst=Round(((' || Nvl (V_Bill_Amt, 0) || ' *' || Nvl (V_Discount, 0) |
                                WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
            Exception
                  P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
            End;
      Begin
         Execute Immediate ' SELECT NVL(disc_amt_mst_vat,0)  FROM ' || P_Tbl_Mst_Nm || ' 
                                        WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || ' 
      Exception
            P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
      End;
      Begin
         Execute Immediate ' UPDATE  ' || P_Tbl_Dtl_Nm || ' Set Dis_Amt_Mst_Vat = ((((100 *' || Nvl (V_Disc_Amt_Mst_Vat, 0) || ')/' || V_Bill_Amt_Vat || ')*Nvl(i_price_vat,0))/100),
           Where ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
      End;
      Begin
         Execute Immediate ' UPDATE  ' || P_Tbl_Mst_Nm || ' Set Disc_Amt_Mst = (Select SUM(Nvl(I_Qty,0)*Nvl(Dis_Amt_Mst,0))
                                                                     From ' || P_Tbl_Dtl_Nm || ' Where ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || ')
                                                                  , Disc_Amt_Dtl = (Select SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0))*NVL(I_QTY,0)) 
                                                                     From ' || P_Tbl_Dtl_Nm || ' Where ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser || ')                              
           Where ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
      End;
      Begin
         Execute Immediate ' UPDATE  ' || P_Tbl_Dtl_Nm || '  Set Dis_Amt = Nvl(Dis_Amt_Mst,0)+NVL(Dis_Amt_Dtl,0)+NVL(Dis_Amt_Dtl2,0)+NVL(Dis_Amt_Dtl3,0)
           Where ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
      End;
      Begin
         -- Update Ias_Bill_Mst Set Disc_Amt = Nvl(Disc_Amt_Mst,0)+Nvl(Disc_Amt_Dtl,0) Where Bill_Ser=P_DOC_SER;
         Execute Immediate ' UPDATE  ' || P_Tbl_Mst_Nm || ' SET Disc_Amt=Round((nvl(disc_amt_mst,0)+nvl(disc_amt_dtl,0)+nvl(Disc_Amt_Aftr_Vat,0)),' || V_No_Of_Decimal || ') 
                        WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
      End;
      Begin
               ' UPDATE  '|| P_Tbl_Dtl_Nm|| ' a Set dis_amt_mst =(Select (nvl(disc_amt_mst,0)/nvl('|| P_Fld_Mst_Amt|| ',0))*nvl(a.i_price,0) 
                                                        From '|| P_Tbl_Mst_Nm|| ' Where '|| P_Fld_Doc_Ser|| '=a.'|| P_Fld_Doc_Ser|| '
                                                  dis_amt =(Select ((nvl(disc_amt_mst,0)/nvl('|| P_Fld_Mst_Amt|| ',0))*nvl(a.i_price,0)) + nvl(a.dis_amt_dtl,0)+ nvl(a.dis_amt_dtl2,0)+ nvl(a.dis_amt_dtl3,0)
                                                         From '|| P_Tbl_Mst_Nm|| ' Where '|| P_Fld_Doc_Ser|| '=a.'|| P_Fld_Doc_Ser|| '
                WHERE '|| P_Fld_Doc_Ser|| '='|| P_Doc_Ser;
      Exception
            P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
      End;
      Begin
         Execute Immediate ' UPDATE  ' || P_Tbl_Mst_Nm || ' m Set Disc_Amt_Dtl=(select SUM((NVL(DIS_AMT_DTL,0)+NVL(DIS_AMT_DTL2,0)+NVL(DIS_AMT_DTL3,0))*NVL(I_QTY,0))
                                                                                           from ' || P_Tbl_Dtl_Nm || ' d 
                                                                                             where m.' || P_Fld_Doc_Ser || '=d.' || P_Fld_Doc_Ser || ' )
                 Where M.' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
      End;
      Begin
         Execute Immediate ' UPDATE  ' || P_Tbl_Mst_Nm || ' SET Disc_Amt=Round(nvl(disc_amt_mst,0)+nvl(disc_amt_dtl,0),' || V_No_Of_Decimal || ') 
                      WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
      Exception
            P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
      End;
   Begin
      Execute Immediate ' UPDATE  ' || P_Tbl_Dtl_Nm || ' SET Vat_Amt_Bfr_Dis= (Nvl(i_price,0)*Nvl(vat_per,0))/100
                               WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
   Exception
         P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
   End;
   Begin
      Execute Immediate ' UPDATE  ' || P_Tbl_Dtl_Nm || ' SET Vat_Amt_Aftr_Dis = ((Nvl(i_price,0)-(Nvl(Dis_Amt_Dtl,0)+Nvl(Dis_Amt_Dtl2,0)+Nvl(Dis_Amt_Dtl3,0)+Nvl(Dis_Amt_Mst,0)))*Nvl(vat_per,0))/100          
           WHERE ' || P_Fld_Doc_Ser || '=' || P_Doc_Ser;
   Exception
         P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
   End;
Exception
      P_Msg_Txt   := 'Errt When Update Disc' ||chr(10) || Sqlerrm;
    Procedure Chk_Conn_Cst_Col (P_C_Code     In     Customer.C_Code%Type Default Null
   Begin
      Begin
         Select Nvl (Mndtry_Conn_Cst_Col, 0), Nvl (Conn_Cst_Multi_Col, 0), Nvl (Si_Col_Mandtry, 0)
           From Ias_Para_Ar
          Where Rownum <= 1;
      Exception
      End;
            Begin
               Select 1
                 From Customer
                Where C_Code = P_C_Code And Col_No = P_Col_No And Rownum <= 1;
            Exception
            End;
            Begin
               Select 1
                 From Ias_Cst_Col
                Where C_Code = P_C_Code And Col_No = P_Col_No And Rownum <= 1;
            Exception
            End;
   Exception When Others then
 Procedure Chk_Sman_Conn_Data (P_Sys_No          In     Number
   Begin
      Select Nvl (Conn_Sman_Wc_Csh_Cc, 0)
        From Ias_Para_Ar, Ias_Para_Gen
       Where Rownum <= 1;
   Exception
   End;
      Begin
         Select W_Code
           From Sales_Man
          Where Reprs_Code = P_Rep_Code And Rownum <= 1;
      Exception
      End;
Exception
   Procedure Chk_Cr_Card_Prc (P_Bill_Doc_Type          In     Ias_Bill_Mst.Bill_Doc_Type%Type
Begin   
         Begin
            Select Count (1)
              From Credit_Card_Types
             Where Cr_Card_No = P_Cr_Card_No;
         Exception
         End;
            Begin
               Select Bank_Ac
                 From Credit_Card_Types
                Where Cr_Card_No = P_Cr_Card_No;
            Exception
            End;
         Begin
            Select Count (1)
              From Account_Curr
             Where A_Code = P_Cr_A_Code And A_Cy = P_Cur_Code;
         Exception
         End;
         Begin
            Select 1
              From Credit_Card_Types
             Where Cr_Card_No = P_Cr_Card_No 
         Exception
         End;
Exception
    Procedure Chk_Amt_And_Itm_Tax(  P_Clc_Typ_No_Tax   In     Gnr_Tax_Itm_Movmnt.Clc_Typ_No%Type Default Null,
Begin 
   Begin
      Select Nvl(Use_Vat, 0),NVL(Clc_Tax_Dscnt2,0),NVL(Clc_Tax_Dscnt3,0) Into V_Use_Vat,V_Clc_Tax_Dscnt2,V_Clc_Tax_Dscnt3 
      From Ias_Para_Gen,IAS_PARA_AR;
   Exception
   End;
   Begin
      V_Cnt := Ias_Gen_Pkg.Get_Cnt(' SELECT 1  FROM (
                                             SELECT ' || P_Fld_Doc_No ||','|| P_Fld_Doc_Ser || ' FROM ' || P_Tbl_Mst_Nm || ' WHERE ' || P_Fld_Doc_Ser || ' =' || P_Doc_Ser || '
                                             SELECT ' || P_Fld_Doc_No ||', ' || P_Fld_Doc_Ser || ' FROM ' || P_Tbl_Dtl_Nm || ' WHERE ' || P_Fld_Doc_Ser || ' = ' || P_Doc_Ser || ')
                                         WHERE ROWNUM<=1 ');
   Exception
   End;
       Begin
          V_Cnt := Ias_Gen_Pkg.Get_Cnt (' SELECT 1  FROM ' || P_Tbl_Dtl_Nm || ' D 
                                     WHERE '|| P_Fld_Doc_Ser||' =' || P_Doc_Ser|| '
                                       AND EXISTS ( SELECT 1 FROM  
                                                               WHERE           TI.TAX_NO = TM.TAX_NO
       Exception
       End;
          Begin
             V_Cnt := Ias_Gen_Pkg.Get_Cnt (' SELECT 1  FROM ' || P_Tbl_Mvmnt_Nm || ' WHERE DOC_TYPE =' || P_Doc_Typ || ' AND DOC_SER = ' || P_Doc_Ser || ' AND ROWNUM<=1 ');
          Exception
          End;
              BEGIN
               Execute Immediate '  SELECT     ROUND (NVL ('||P_Fld_MST_AMT||', 0), ' || P_No_Of_Decimal || ' )  ,
                                FROM     ' || P_Tbl
_Mst_Nm || '  WHERE '|| P_Fld_Doc_Ser||' =' || P_Doc_Ser
              Exception When NO_DATA_FOUND THEN
              END;         
              BEGIN
               Execute Immediate ' SELECT        ROUND(SUM(NVL(I_PRICE,0) * NVL(I_QTY,0)),' || P_No_Of_Decimal || ')   ,
                                   FROM  ' || P_Tbl_MST_Nm || ' M,' || P_Tbl_Dtl_Nm || ' D  
                                   WHERE M.'|| P_Fld_Doc_Ser||' = D.'||P_Fld_Doc_Ser||'
              Exception When NO_DATA_FOUND THEN
              END;           
              BEGIN
                   Execute Immediate ' SELECT  Nvl (Round (Sum (Nvl (Tax_Amt, 0) * (NVL(I_QTY,0)+(NVL(FREE_QTY,0)*NVL(CLC_TAX_FREE_QTY_FLG,0)))), '||P_No_Of_Decimal||'), 0) Vat_Amt
                                        FROM  ' || P_Tbl_Mvmnt_Nm || 
                                         ' WHERE DOC_SER =' || P_Doc_Ser
              Exception When NO_DATA_FOUND THEN
                      P_Msg_Txt :='ERROR WHEN CHECK  TAX FROM  '||P_Tbl_Mvmnt_Nm||' '||chr(10) || Sqlerrm ;
              END; 
            Begin
              BEGIN
               Select Bill_Doc_Type
                 From Ias_Bill_Mst
                Where Bill_Ser = P_DOC_SER;
              EXCEPTION WHEN OTHERS THEN
              END;      
                  UPDATE IAS_BILL_MST SET Cr_Card_Amt=V_Cr_Card_Amt WHERE BILL_SER=P_DOC_SER;
            End;
  BEGIN 
      V_QRY:='SELECT 
                    FROM '||P_Tbl_Mst_Nm||' M
                     WHERE  M.'||P_Fld_Doc_Ser||'='||P_Doc_Ser||' ';
  EXCEPTION WHEN OTHERS THEN
Exception When Others then      
Procedure CHK_MNDTRY_FLIDS (P_Doc_Typ           IN  IAS_POST_DTL.DOC_TYPE%TYPE,
BEGIN 
      Begin
         Select Nvl (Use_Vat, 0)               
           From Ias_Para_Gen, Ias_Para_Ar, Ias_Para_Gl;
      Exception
      End;
Exception When Others then
 Procedure Chk_Credit_Period (  P_CHK_CRDT_PRD    In     Number   --## 0-UNCHECK Credit_Period 1-CHECK_Credit_Period
   Begin
      Begin
         Select Nvl (Paid_Instllmnt_Man, 0), Nvl (No_Of_Decimal_Ar, 2), Nvl (Ar_Ac_Link_Type, 0)
           From Ias_Para_Ar;
      Exception
      End;
         Begin
            Select Nvl (Ar_Allow_Sales_Prv_Dr, 0), Nvl (Ar_Chk_Prd_Aftr_Due, 0), Nvl (Check_Credit_Periodllw_Excd_Credit_Period,0)
              From Privilege_Fixed
             Where U_Id = P_Usr_No;
         Exception
         End;
         Begin
            Select Credit_Period
              From Customer
             Where C_Code = P_C_Code;
         Exception
         End;
               Begin
                  Select Min (I_Date)
                    From Installment
                   Where C_Code = P_C_Code And Bill_Ser <> Nvl (P_Doc_Ser, -1) And Trunc (Nvl (I_Amt, 0)) > (Trunc (Nvl (Paid_Amt, 0) + Nvl (Adj_Amt, 0)) + 1) And Dr_No Is Null;
               Exception
               End;
               Begin
                  Select Count (Distinct A_Cy)
                    From Ias_Post_Dtl
                   Where C_Code = P_C_Code;
               Exception
               End;
               Begin
                  Delete From Ias_Dr_Det_Tmp;
               Exception
               End;
               Begin
                  --Select Min(To_Date(Doc_Date)+Decode(Doc_Type,0,Nvl(v_Credit_Period,0),0)) Into V_Min_Idate
                  Select Min (Doc_Date)
                    From Ias_Si_Dr_Dtl_Tmp
                   Where C_Code = P_C_Code And Doc_Ser <> Nvl (P_Doc_Ser, -1) And Trunc (Nvl (I_Amt, 0)) > (Trunc (Nvl (Paid_Amt, 0)) + 1);
               Exception
               End;
            Begin
               Delete From Ias_Si_Dr_Dtl_Tmp;
            Exception
            End;
   Exception
 Procedure Chk_Credit_Limit (  P_Chk_CrDT_LMIT  In    NUMBER --## 0 UNCHECKCredit_Limit  1- CHECK Credit_Limit
   Begin
        BEGIN
               Execute Immediate '  SELECT (Nvl ('||P_Fld_MST_AMT||', 0) - Nvl (Disc_Amt, 0) + Nvl (Othr_Amt, 0) + Nvl (Vat_Amt, 0))
                                   FROM ' || P_Tbl_Mst_Nm || '  WHERE '|| P_Fld_Doc_Ser||' =' || P_Doc_Ser||' AND ROWNUM<=1'
        Exception When NO_DATA_FOUND THEN
              P_Msg_Txt :='ERROR WHEN CHECK  AMT  FROM   '||P_Tbl_MST_Nm||' '||chr(10) || Sqlerrm ;
        END;
     BEGIN
    Exception  When Others Then 
  END;                         
      Begin
         Select Nvl (Inv_Dis_Lmt, 0), Nvl (Inv_Dis_Lmt_Itm, Inv_Dis_Lmt)
           From Privilege_Fixed
          Where U_Id = P_User_No;
      Exception
      End;
   Exception When Others then
Procedure Update_Other_Charges (P_Doc_Typ          In     Number
      Begin
         Begin
            Update Ias_Bill_Dtl
             Where Bill_Ser = P_Doc_Ser;
         Exception
         End;
         Begin
            Execute Immediate 'Select 1 From Other_Charges 
                                          Where Bill_Ser = ' || P_Doc_Ser || '
         Exception
         End;
         Begin
        Execute Immediate 'Select 1 From Sales_Charges 
                                                          Where Nvl(Inv_Item,0)=1    
         Exception
         End;
            Begin
                  Update Ias_Bill_Dtl A
                            (Select Sum (Decode (Nvl (Unit_Amt, 0), 0, (Nvl (Other_Charges_Items.Amt, 0) / Decode (Nvl (A.I_Qty, 0), 0, Decode (Nvl (A.Free_Qty, 0), 0, 1, A.Free_Qty), A.I_Qty)), Unit_Amt))
                               From Other_Charges_Items
                              Where Other_Charges_Items.Bill_Ser = A.Bill_Ser And Other_Charges_Items.Bill_Ser = P_Doc_Ser And Other_Charges_Items.I_Code = A.I_Code And Other_Charges_Items.Rcrd_No = A.Rcrd_No)
                            (Select Sum (Decode (Nvl (Unit_Amt, 0), 0, (Nvl (Other_Charges_Items.Amt, 0) / Decode (Nvl (A.I_Qty, 0), 0, Decode (Nvl (A.Free_Qty, 0), 0, 1, A.Free_Qty), A.I_Qty)), Unit_Amt))
                               From Other_Charges_Items
                              Where Other_Charges_Items.Bill_Ser = A.Bill_Ser And Other_Charges_Items.Bill_Ser = P_Doc_Ser And Other_Charges_Items.I_Code = A.I_Code And Other_Charges_Items.Rcrd_No = A.Rcrd_No)
                            (Select Abs (Sum (Decode (Nvl (Unit_Amt, 0), 0, (Nvl (Other_Charges_Items.Amt, 0) / Decode (Nvl (A.I_Qty, 0), 0, Decode (Nvl (A.Free_Qty, 0), 0, 1, A.Free_Qty), A.I_Qty)), Unit_Amt)))
                               From Other_Charges_Items
                              Where     Other_Charges_Items.Bill_Ser = A.Bill_Ser
                                           (Select 1
                                              From Sales_Charges
                                             Where Sc_No = Other_Charges_Items.Sc_No And Nvl (Use_Vat, 0) = 1 And Rownum <= 1))
                  Update Item_Movement A
                            (Select Sum (Decode (Nvl (Unit_Amt, 0), 0, (Nvl (Other_Charges_Items.Amt, 0) / Decode (Nvl (A.I_Qty, 0), 0, Decode (Nvl (A.Free_Qty, 0), 0, 1, A.Free_Qty), A.I_Qty)), Unit_Amt))
                               From Other_Charges_Items
                              Where Other_Charges_Items.Bill_Ser = A.Doc_Ser And Other_Charges_Items.Bill_Ser = P_Doc_Ser And Other_Charges_Items.I_Code = A.I_Code And Other_Charges_Items.Rcrd_No = A.Rcrd_No)
                   Where Doc_Type = 1 And Doc_Ser = P_Doc_Ser;
                  Update Ias_Bill_Dtl A
                            (Select Sum (Nvl (Other_Charges_Items.Amt, 0) / Decode (Nvl (A.I_Qty, 0), 0, Decode (Nvl (A.Free_Qty, 0), 0, 1, A.Free_Qty), A.I_Qty))
                               From Other_Charges_Items
                              Where Other_Charges_Items.Bill_Ser = A.Bill_Ser And Other_Charges_Items.Bill_Ser = P_Doc_Ser And Other_Charges_Items.I_Code = A.I_Code And Other_Charges_Items.Rcrd_No = A.Rcrd_No)
                            (Select Sum (Nvl (Other_Charges_Items.Amt, 0) / Decode (Nvl (A.I_Qty, 0), 0, Decode (Nvl (A.Free_Qty, 0), 0, 1, A.Free_Qty), A.I_Qty))
                               From Other_Charges_Items
                              Where Other_Charges_Items.Bill_Ser = A.Bill_Ser And Other_Charges_Items.Bill_Ser = P_Doc_Ser And Other_Charges_Items.I_Code = A.I_Code And Other_Charges_Items.Rcrd_No = A.Rcrd_No)
                            (Select Abs (Sum (Nvl (Other_Charges_Items.Amt, 0) / Decode (Nvl (A.I_Qty, 0), 0, Decode (Nvl (A.Free_Qty, 0), 0, 1, A.Free_Qty), A.I_Qty)))
                               From Other_Charges_Items
                              Where     Other_Charges_Items.Bill_Ser = A.Bill_Ser
                                           (Select 1
                                              From Sales_Charges
                                             Where Sc_No = Other_Charges_Items.Sc_No And Nvl (Use_Vat, 0) = 1 And Rownum <= 1))
                   Where Bill_Ser = P_Doc_Ser;
            Exception
            End;
         Begin
            Select Bill_Amt
              From Ias_Bill_Mst
             Where Bill_Ser = P_Doc_Ser And Rownum <= 1;
               Begin
                  Select 1
                    From Ias_Bill_Dtl
                   Where Bill_Ser = P_Doc_Ser And I_Qty > 0 And Rownum <= 1;
               Exception
                     Select Sum (Nvl (Free_Qty, 0) * Nvl (I_Price, 0))
                       From Ias_Bill_Dtl
                      Where Bill_Ser = P_Doc_Ser;
               End;
         Exception
         End;
         V_Cnt   := Ias_Gen_Pkg.Get_Cnt ('Select 1 From Other_Charges 
                                                          Where Bill_Ser =' || P_Doc_Ser || '
            Begin
                  Update Ias_Bill_Dtl A
                            (Select Nvl (A.Othr_Amt, 0) + (Sum (Nvl (Other_Charges.Amt, 0)) / Nvl (V_Billamt, 0)) * Nvl (A.I_Price, 0)
                               From Other_Charges
                              Where Other_Charges.Bill_Ser = A.Bill_Ser And Nvl (Other_Charges.Inv_Item, 0) = 0 And Other_Charges.Bill_Ser = P_Doc_Ser)
                            (Select Nvl (A.Othr_Amt_Disc, 0) + Abs (Sum (Nvl (Other_Charges.Amt, 0)) / Nvl (V_Billamt, 0)) * Nvl (A.I_Price, 0)
                               From Other_Charges
                              Where     Other_Charges.Bill_Ser = A.Bill_Ser
                                           (Select 1
                                              From Sales_Charges
                                             Where Sc_No = Other_Charges.Sc_No And Nvl (Use_Vat, 0) = 1 And Rownum <= 1))
                   Where Bill_Ser = P_Doc_Ser And Nvl (I_Qty, 0) > 0;
                  Update Item_Movement A
                            (Select Nvl (A.Othr_Amt, 0) + (Sum (Nvl (Other_Charges.Amt, 0)) / Nvl (V_Billamt, 0)) * Nvl (A.I_Cost, 0)
                               From Other_Charges
                              Where Other_Charges.Bill_Ser = A.Doc_Ser And Nvl (Other_Charges.Inv_Item, 0) = 0 And Other_Charges.Bill_Ser = P_Doc_Ser)
                   Where Doc_Type = 1 And Doc_Ser = P_Doc_Ser And Nvl (I_Qty, 0) > 0;
                  Update Ias_Bill_Dtl A
                            (Select Nvl (A.Othr_Amt, 0) + (Sum (Nvl (Other_Charges.Amt, 0)) / Nvl (V_Fbillamt, 0)) * Nvl (A.I_Price, 0)
                               From Other_Charges
                              Where Other_Charges.Bill_Ser = A.Bill_Ser And Nvl (Other_Charges.Inv_Item, 0) = 0 And Other_Charges.Bill_Ser = P_Doc_Ser)
                            (Select Nvl (A.Othr_Amt_Disc, 0) + Abs (Sum (Nvl (Other_Charges.Amt, 0)) / Nvl (V_Fbillamt, 0)) * Nvl (A.I_Price, 0)
                               From Other_Charges
                              Where     Other_Charges.Bill_Ser = A.Bill_Ser
                                           (Select 1
                                              From Sales_Charges
                                             Where Sc_No = Other_Charges.Sc_No And Nvl (Use_Vat, 0) = 1 And Rownum <= 1))
                   Where Bill_Ser = P_Doc_Ser;
                  Update Item_Movement A
                            (Select Nvl (A.Othr_Amt, 0) + (Sum (Nvl (Other_Charges.Amt, 0)) / Nvl (V_Fbillamt, 0)) * Nvl (A.I_Cost, 0)
                               From Other_Charges
                              Where Other_Charges.Bill_Ser = A.Doc_Ser And Nvl (Other_Charges.Inv_Item, 0) = 0 And Other_Charges.Bill_Ser = P_Doc_Ser)
                   Where Doc_Type = 1 And Doc_Ser = P_Doc_Ser;
            Exception
            End;
         Begin
            Update Ias_Bill_Mst
                      (Select Round (Nvl (Sum (Amt), 0), P_No_Of_Decimal)
                         From Other_Charges
     Where Bill_Type = 1 And Bill_Ser = P_Doc_Ser)
                      (Select Abs (Round (Nvl (Sum (Amt), 0), P_No_Of_Decimal))
                         From Other_Charges
                        Where     Bill_Type = 1
                                     (Select 1
                                        From Sales_Charges
                                       Where Sc_No = Other_Charges.Sc_No And Nvl (Use_Vat, 0) = 1 And Rownum <= 1))
             Where Bill_Ser = P_Doc_Ser;
         Exception
         End;
            Begin
               Update Ias_Bill_Mst A
                         (Select Sum (Nvl (Vat_Amt, 0))
                            From Other_Charges
                           Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                Where Bill_Ser = P_Doc_Ser;
 Update Ias_Bill_Dtl A
                         (Select (Nvl (Ias_Bill_Mst.Vat_Amt_Othr, 0) / Nvl (Ias_Bill_Mst.Bill_Amt, 0)) * Nvl (A.I_Price, 0)
                            From Ias_Bill_Mst
                           Where Bill_Ser = A.Bill_Ser And Bill_Ser = P_Doc_Ser)
                Where Bill_Ser = P_Doc_Ser;
               Update Item_Movement A
                         (Select (Nvl (Ias_Bill_Mst.Vat_Amt_Othr, 0) / Nvl (Ias_Bill_Mst.Bill_Amt, 0)) * Nvl (A.I_Cost, 0)
                            From Ias_Bill_Mst
                           Where Bill_Ser = A.Doc_Ser And Bill_Ser = P_Doc_Ser)
                Where Doc_Type = 1 And Doc_Ser = P_Doc_Ser;
            Exception
            End;
            Begin
               Update Ias_Bill_Mst A
                Where Bill_Ser = P_Doc_Ser;
               Update Ias_Bill_Dtl A
                Where Bill_Ser = P_Doc_Ser;
               Update Other_Charges A
                Where Bill_Type = 1 And Bill_Ser = P_Doc_Ser;
               Update Item_Movement
                Where Doc_Type = 1 And Doc_Ser = P_Doc_Ser;
            Exception
            End;
      Exception
      End;
Exception
CREATE OR REPLACE Package Gnr_api_pkg
FUNCTION GET_inpt_data (  P_inpt_typ       In     Varchar2
FUNCTION GET_ITM_PRICE (    P_ICODE     In        Varchar2 Default Null
Function Shw_Doc_Mst_Data(P_Doc_Type   In Number,   --## 4 sales invoice ,# 5 retrn sales 
Function Shw_Doc_Dtl_Data(P_Doc_Type   In Number,   --## 4 sales invoice ,# 5 retrn sales 
Function Get_Cstmr_Items( P_Doc_No     In Ias_Bill_Mst.Bill_No%Type Default Null,                         
Procedure Chk_Itm  ( P_Sys_No                IN  NUMBER
Procedure CHK_ITM_PRICE   ( P_I_Code                In Ias_Itm_Mst.I_Code%Type          
Function Chk_Price_Lmt(P_Lmt_Typ    In Number,
PROCEDURE CHK_INPT_DATA(P_INPT_TYP     IN     VARCHAR2,
PROCEDURE    CHK_SUB_LDGR(   P_SYS_TYP     IN     NUMBER,   --##    P_SYS_TYP =  1 = SALE , 2= STOCKE ,3 = PURCHASE                ,
CREATE OR REPLACE Package Body Gnr_api_pkg
FUNCTION GET_inpt_data (    P_inpt_typ     In     Varchar2
   Begin 
           V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,USER_R.*            
                            From User_R  Where  Nvl (Inactive, 0)=0  ';
            V_Sql_Qry:='Select ROWNUM  ROW_NUM ,S_Brn.*
                                        From S_Brn 
                                        Where Nvl (Inactive, 0)=0 
                                          AND   Exists(Select 1 From S_Brn_Usr_Priv 
                                                     Where u_id='||P_Usr_no||' 
          V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,Account.*           
                                  From Account
                                 Where  A_S_M In (Select Account_Type
                                                       From Account_Types
                                                      Where Affected_By_Trans = 1 And Rownum <= 1)
                                                        AND Exists(Select 1 From PRIV_ACC 
                                                                                                 Where u_id='||P_Usr_no||' 
                V_Sql_Qry := ' Select ROWNUM  ROW_NUM ,M.* 
                                   From S_Emp M
                                   Where Nvl (Inactive, 0)=0
                                                                                              Else (Select 1
                                                                                                      From S_Emp_Prv
                                                                                                     Where U_Id = '||P_Usr_no||'
         V_Sql_Qry := ' Select ROWNUM  ROW_NUM ,Customer.* 
                          From Customer
                         Where Nvl (Inactive,
                                               (Select 1
                                                  From Priv_Acc
                                                 Where U_Id = '||P_Usr_no||' And A_Code = Customer.C_A_Code And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))
                                               (Select 1
                                                  From Ias_Priv_Customer
                                                 Where U_Id = '||P_Usr_no||' And C_Code = Customer.C_Code And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))))  ';
          V_Sql_Qry:='Select ROWNUM  ROW_NUM ,Sales_Man.*
                                From Sales_Man 
                               Where Nvl (Inactive, 0)=0
                                     Or(Exists (Select 1  From IAS_PRIV_SMAN
                                           Where U_Id   = '||P_Usr_no||'
          V_Sql_Qry:='  Select ROWNUM  ROW_NUM ,Collerctor.*
                    From Collerctor
                   Where Nvl (Inactive, 0)=0
                            (Select 1
                               From Ias_Priv_Collectors
                              Where U_Id = '||P_Usr_no||' And Col_No = Collerctor.Col_No And Nvl (Add_Flag, 0) = 1 And Rownum <= 1) ';        
        V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,Cost_Centers.*
                        From Cost_Centers
                       Where     Nvl (Inactive_Sls, 0) = 0
                             And C_S_M = (Select Cc_Type
                                            From Cost_Center_Types
                                           Where Affected_By_Trans = 1)
                                        (Select Cc_Code
                                           From Privilege_Cc
                                          Where U_Id = '||P_Usr_no||' And Cc_Code = Cost_Centers.Cc_Code And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))  ';
          V_Sql_Qry:='  Select ROWNUM  ROW_NUM ,Ias_Projects.*
                From Ias_Projects
               Where     Pj_Sub = 1
                                (Select Pj_No
                                   From Ias_Priv_Projects
                                  Where U_Id =  '||P_Usr_no||' And Pj_No = Ias_Projects.Pj_No And Nvl (Add_Flag, 0) =
          V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,Ias_Actvty.*
                        From Ias_Actvty
                       Where     Actv_Sub = 1
                                        (Select Actv_No
                                           From Ias_Priv_Actvty
                                          Where U_Id =  '||P_Usr_no||' And Actv_No = Ias_Actvty.Actv_No And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))  ';      
          V_Sql_Qry:=' Select  Select ROWNUM  ROW_NUM ,Warehouse_Details.*
                          From Warehouse_Details
                         Where Inactive <> 1
                                          (Select W_Code
                                             From Privilege_Wh
                                            Where U_Id = '||P_Usr_no||' And W_Code = Warehouse_Details.W_Code And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))  ';
        V_Sql_Qry:='  Select ROWNUM  ROW_NUM ,Cash_In_Hand.*
                          From Cash_In_Hand
                         Where     Conn_Brn_No = '||P_brn_no||'
                                          (Select Cash_No
                                             From Priv_Cash
                                            Where U_Id = '||P_Usr_no||' And Cash_No = Cash_In_Hand.Cash_No And Cash_Type = 1 And Nvl (Add_Flag, 0) = 1 And Rownum <= 1)) ';
         V_Sql_Qry:='  Select ROWNUM  ROW_NUM ,Cash_At_Bank.*
                      From Cash_At_Bank
                     Where Nvl (Inactive, 0) = 0  
                                      (Select Cash_No
                                         From Priv_Cash
                                        Where U_Id = '||P_Usr_no||' And Cash_No = Cash_At_Bank.Bank_No And Cash_Type = 2 And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))  ';     
        V_Sql_Qry:='  Select ROWNUM  ROW_NUM ,Gnr_Tax_Code_Mst.*              
                          From Gnr_Tax_Code_Mst
                         Where Nvl (Inactive, 0)=0  ';
         V_Sql_Qry:=' Select Rownum ROW_NUM, Clc_Typ_No_Tax ,Clc_Typ_L_Nm ,Clc_Typ_F_Nm
                      From (Select Distinct M.Clc_Typ_No Clc_Typ_No_Tax,Clc_Typ_L_Nm ,Clc_Typ_F_Nm
                              From Gnr_Tax_Typ_Clc_Mst M, Gnr_Tax_Typ_Clc_Brn Db
                             Where     M.Clc_Typ_No = Db.Clc_Typ_No
                                              (Select D.Clc_Typ_No
                                                 From Gnr_Tax_Typ_Clc_Dtl D, Gnr_Tax_Code_Mst T
                                                Where D.Tax_No = T.Tax_No And D.Clc_Typ_No = M.Clc_Typ_No And T.Clc_Doc_Typ In (1, 3) And Rownum <= 1)))
                     Where 1 = 1   ';      
         V_Sql_Qry:='Select ROWNUM  ROW_NUM ,Ias_Sorder_Types.* 
                          From Ias_Sorder_Types
                         Where (   ( '||P_Usr_no||' = 1)
                                      (Select S_Type
                                         From Ias_Priv_Ar
                                        Where U_Id = '||P_Usr_no||' And Nvl (Add_Flag, 0) = 1 
        V_Sql_Qry:='Select ROWNUM  ROW_NUM ,Ias_Sales_Types.* 
                                From Ias_Sales_Types
                                Where  Exists(Select S_Type From Ias_Priv_Ar
                                                Where U_Id='||P_Usr_no||'
        V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,Ias_Rt_Sales_Types.* 
                                From Ias_Rt_Sales_Types
                                Where  Exists(Select S_Type From Ias_Priv_Ar
                                                Where U_Id='||P_Usr_no||' 
          V_Sql_Qry:='Select ROWNUM  ROW_NUM ,cities.*          
                           From cities ';
          V_Sql_Qry:='Select ROWNUM  ROW_NUM ,CNTRY.*           
                           From CNTRY ';      
         V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,Regions.*            
                           From Regions ';  
            V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,Ex_Rate.*                
                           From Ex_Rate ';
           V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,Group_Details.*  
                            From Group_Details
                           Where   '||P_Usr_no||' = 1
                                       (Select G_Code
                                          From Privilege_Gc
                                         Where U_Id = '||P_Usr_no||' And G_Code = Group_Details.G_Code And Add_Flag = 1 And Rownum <= 1)  '; 
           V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,Ias_Sub_Grp_Dtl.*
                          From Ias_Sub_Grp_Dtl
                         Where    (   '||P_Usr_no||' = 1
                                          (Select G_Code
                                             From Privilege_Gc
                                            Where Nvl (Add_Flag, 0) = 1 And U_Id = '||P_Usr_no||' And G_Code = Ias_Sub_Grp_Dtl.G_Code And Rownum <= 1))  ';
          V_Sql_Qry:='Select ROWNUM  ROW_NUM ,Customer_Group.*             
              From Customer_Group ';  
         V_Sql_Qry:='Select ROWNUM  ROW_NUM ,Ias_Itm_Mst.*    
                        From Ias_Itm_Mst 
                       Where  Get_Items_Activity (Activity_No
                                        (Select 1
                                           From Privilege_Gc
                                          Where U_Id = '||P_Usr_no||' And G_Code = G_Code And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))  ';
         V_Sql_Qry:=' Select ROWNUM  ROW_NUM ,m.* 
                        From Ias_Itm_Mst M, Ias_Itm_Dtl D
                       Where     M.I_Code = D.I_Code                                    
                                        (Select 1
                                           From Privilege_Gc
                                          Where U_Id ='||P_Usr_no||' And G_Code = M.G_Code And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))';
         V_Ordr:=' ORDER BY I_Code '  ;
          V_Sql_Qry:='Select DISTINCT  ROWNUM  ROW_NUM ,Ias_Itm_Dtl.*            
                           From Ias_Itm_Dtl                           ';                                                                                                                                                                                              
      V_SQL_QRY:=' select * from ( '||V_SQL_QRY||' ) where 1=1 ';
   Exception
FUNCTION GET_ITM_PRICE (    P_ICODE        In      Varchar2  Default Null
     SELECT ROWNUM  ROW_NUM ,
    From Ias_Itm_Mst M, Ias_Itm_Dtl D,IAS_ITEM_PRICE C 
   Where M.I_Code = D.I_Code 
TS (SELECT 1 FROM Ias_Priv_Price 
                  WHERE U_ID='||P_USR_NO||' AND LEV_NO=C.LEV_NO AND ADD_FLAG=1 ) 
                                        (Select 1
                                           From Privilege_Gc
                                          Where U_Id = '||P_Usr_no||' And G_Code = M.G_Code And Nvl (Add_Flag, 0) = 1 And Rownum <= 1))     '; 
      V_SQL_QRY:=' select * from ( '||V_SQL_QRY||' ) where 1=1 '||P_Pag_Whr||' ';
   Exception
Function Shw_Doc_Mst_Data(P_Doc_Type   In Number,  --## 4 sales invoice ,# 5 retrn sales  
   Begin
      Select Nvl(Ar_Wc_Type, 0),
        From Ias_Para_Ar, Ias_Para_Gen;
   Exception
   End;
   V_Whr :=    V_Whr || ' AND  EXISTS (SELECT 1
                           FROM S_BRN_USR_PRIV
                          WHERE U_ID = '||P_USR_NO||'
      V_Whr := V_Whr || ' AND EXISTS ( SELECT 1
                                              FROM PRIVILEGE_WH
                                             WHERE U_ID = ' || P_Usr_No || '
      V_Whr := V_Whr || ' AND EXISTS (SELECT 1
                                                 FROM PRIVILEGE_CC
                                                WHERE U_ID = ' || P_Usr_No || '
      V_Whr := V_Whr || ' And ( M.C_CODE Is Null Or Exists (Select 1
                                                                       From Priv_Acc
                                                                      Where U_Id   = ' || P_Usr_No || '
      V_Whr := V_Whr || ' And ( M.C_CODE Is Null Or Exists (Select 1
                                                                        From Ias_Priv_Customer
                                                                       Where U_Id   = ' || P_Usr_No || '
      V_Whr := V_Whr || 'AND  EXISTS (SELECT S_TYPE
                   FROM IAS_PRIV_AR
                  WHERE U_ID = '||P_USR_NO||'
      V_Sql_Qry := 'SELECT * FROM
                        Select M.Bill_Ser DOC_SER,
                          From IAS_BILL_MST M, S_Flags, Ias_Sales_Types
                         Where  M.Bill_Doc_Type = S_Flags.Flg_Value
                               where 1=1 ' || V_Add_Whr;
      V_Sql_Qry := 'SELECT * FROM 
                        Select M.Rt_Bill_Ser DOC_SER,
                          From IAS_rt_BILL_MST M, S_Flags, IAS_RT_SALES_TYPES
                         Where  M.rt_Bill_Doc_Type = S_Flags.Flg_Value
                               where 1=1 ' || V_Add_Whr;                               
Exception
Function Shw_Doc_Dtl_Data(P_Doc_Type   In Number,    --## 4 sales invoice ,# 5 retrn sales 
      V_Sql_Qry := 'SELECT * FROM 
                        ( Select            
                            from ias_bill_dtl d, IAS_ITM_MST I                        
                            WHERE d.i_CODE=I.I_CODE                        
                               where 1=1 ' || P_Whr;
      V_Sql_Qry := 'SELECT * FROM 
                        ( Select            
                            from ias_rt_bill_dtl d, IAS_ITM_MST I                        
                            WHERE d.i_CODE=I.I_CODE                        
                               where 1=1 ' || P_Whr;
Exception
Function Get_Cstmr_Items( P_Doc_No     In Ias_Bill_Mst.Bill_No%Type Default Null,                         
   Begin
      Select Nvl(Ar_Wc_Type, 0),
        From Ias_Para_Ar, Ias_Para_Gen;
   Exception
   End;
   V_Whr :=    V_Whr || ' AND  EXISTS (SELECT 1
                           FROM S_BRN_USR_PRIV
                          WHERE U_ID = '||P_USR_NO||'
      V_Whr := V_Whr || ' AND EXISTS ( SELECT 1
                                              FROM PRIVILEGE_WH
                                             WHERE U_ID = ' || P_Usr_No || '
V_Whr := V_Whr || ' AND EXISTS ( SELECT 1
                                              FROM PRIVILEGE_gc
                                             WHERE U_ID = ' || P_Usr_No || '
      V_Whr := V_Whr || ' And ( M.C_CODE Is Null Or Exists (Select 1
                                                                       From Priv_Acc
                                                                      Where U_Id   = ' || P_Usr_No || '
      V_Whr := V_Whr || ' And ( M.C_CODE Is Null Or Exists (Select 1
                                                                        From Ias_Priv_Customer
                                                                       Where U_Id   = ' || P_Usr_No || '
      V_Whr := V_Whr || 'AND  EXISTS (SELECT S_TYPE
                   FROM IAS_PRIV_AR
                  WHERE U_ID = '||P_USR_NO||'
      V_Sql_Qry := 'Select C_Code,
                          (Select Decode(' || V_Lng_No || ', 1, Nvl(C_A_Name, C_E_Name), Nvl(C_E_Name, C_A_Name))
                                     From Customer
                                    Where C_Code = T.C_Code
                            From (Select M.Bill_No Doc_No,
                                         (Select (Nvl(Sum(B.I_Qty * B.P_Size), 0) - Nvl(Sum(B.Free_Qty * B.P_Size), 0)) / Nvl(D.P_Size, 1)
                                            From Ias_Rt_Bill_Mst A, Ias_Rt_Bill_Dtl B
                                           Where A.Rt_Bill_Ser = B.Rt_Bill_Ser
                                    From Ias_Bill_Mst M, Ias_Bill_Dtl D, Ias_Itm_Mst I
                                   Where M.Bill_Ser = D.Bill_Ser
                                Where 1=1  '||P_Whr||'             
                        Group By C_Code,
Exception
Procedure Chk_Itm  ( P_Sys_No                IN  NUMBER
   Begin
      Select Nvl(Use_expire_date, 0)
      From   Ias_para_ar
   Exception
   End;
      Begin
         Select 1,
         From   Ias_itm_mst
         Where  I_code = P_i_code And Rownum <= 1;
      Exception
      End;
      Begin
         Select 1
         From   Ias_itm_dtl
         Where  I_code = P_i_code And Itm_unt = P_itm_unt And Rownum <= 1;
      Exception
      End;
       BEGIN
               Begin                      
                        Select Avl_Qty
                        From   Table(Inv_Qty_Pkg.Get_Avl_Qty_Fnc(P_Itm_Code         => P_I_Code
               Exception When No_Data_Found Then
      END;                              
EXCEPTION WHEN OTHERS THEN
Procedure CHK_ITM_PRICE   (  P_I_Code                In Ias_Itm_Mst.I_Code%Type          
   Begin
      Select Nvl(Chk_Price_Cost_Lmt_So_Si, 0),
        From Ias_Para_Ar, Ias_Para_Inv;
   Exception
   End;
      Begin
         Select Nvl(Plimit_Type, 2),
           From Privilege_Fixed
          Where U_Id = P_Usr_No;
      Exception
      End;    
EXCEPTION WHEN OTHERS THEN
Function Chk_Price_Lmt(P_Lmt_Typ    In Number,
   Begin
      V_Cur_Rate := Ias_Gen_Pkg.Get_Cnt('Select B.Cur_Rate
                                                             From Ias_Pricing_Levels A,Gls_Crncy_Usr_Lmt B
                                                            Where A.A_Cy     = B.Cur_Code        
   Exception
   End;
   Begin
      V_Cnt      := Ias_Gen_Pkg.Get_Cnt('Select 1 
                                          From Ias_Pricing_Levels a,Ias_Item_Price b,Ex_Rate c
                                             Where a.Lev_No   = b.Lev_No
   Exception
   End;
Exception
PROCEDURE CHK_INPT_DATA(P_INPT_TYP     IN     VARCHAR2,
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, U_A_NAME, NVL(U_E_NAME, U_A_NAME)), NVL(INACTIVE, 0)
           FROM USER_R
          WHERE U_ID = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, CUR_NAME, NVL(CUR_E_NAME, CUR_NAME))
           FROM EX_RATE
          WHERE CUR_CODE = P_INPT_CODE1
      EXCEPTION
      END;   
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, CMP_LNAME, NVL(CMP_FNAME, CMP
           FROM S_BRN
          WHERE BRN_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, A_NAME, NVL(A_NAME_ENG, A_NAME)), NVL(AC_CLOSE, 0)
           FROM ACCOUNT
          WHERE A_CODE = P_INPT_CODE1
                AND A_S_M IN (SELECT ACCOUNT_TYPE
                                FROM ACCOUNT_TYPES
                               WHERE AFFECTED_BY_TRANS = 1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, EMP_L_NM, NVL(EMP_F_NM, EMP_L_NM)), NVL(INACTIVE, 0), NVL(EMP_ST, 0)
           FROM S_EMP
          WHERE EMP_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, C_A_NAME, NVL(C_E_NAME, C_A_NAME)), NVL(INACTIVE, 0)
           FROM CUSTOMER
          WHERE C_CODE = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, V_A_NAME, NVL(V_E_NAME, V_A_NAME)), NVL(INACTIVE, 0)
           FROM V_DETAILS
          WHERE V_CODE = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, REPRS_A_NAME, NVL(REPRS_E_NAME, REPRS_A_NAME)), NVL(INACTIVE, 0)
           FROM SALES_MAN
          WHERE REPRS_CODE = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, COL_NAME, NVL(COL_E_NAME, COL_NAME)), NVL(INACTIVE, 0)
           FROM COLLERCTOR
          WHERE COL_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, CC_A_NAME, NVL(CC_E_NAME, CC_A_NAME)), NVL(INACTIVE, 0)
           FROM COST_CENTERS
          WHERE CC_CODE = P_INPT_CODE1
                AND C_S_M IN (SELECT CC_TYPE
                                FROM COST_CENTER_TYPES
                               WHERE AFFECTED_BY_TRANS = 1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, PJ_A_NAME, NVL(PJ_E_NAME, PJ_A_NAME)), NVL(INACTIVE, 0)
           FROM IAS_PROJECTS
          WHERE PJ_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, ACTV_A_NAME, NVL(ACTV_E_NAME, ACTV_A_NAME)), NVL(INACTIVE, 0)
           FROM IAS_ACTVTY
          WHERE ACTV_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE
           FROM REGIONS
          WHERE R_CODE = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, W_NAME, NVL(W_E_NAME, W_NAME)), NVL(INACTIVE, 0), CONN_BRN_NO
           FROM WAREHOUSE_DETAILS
          WHERE W_CODE = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, CASH_NAME, NVL(CASH_E_NAME, CASH_NAME)), NVL(INACTIVE, 0), CONN_BRN_NO
           FROM CASH_IN_HAND
          WHERE CASH_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, BANK_NAME, NVL(BANK_E_NAME, BANK_NAME)), NVL(INACTIVE, 0), CONN_BRN_NO
           FROM CASH_AT_BANK
          WHERE BANK_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, LEV_A_NAME, NVL(LEV_E_NAME, LEV_A_NAME)), NVL(INACTIVE, 0)
           FROM IAS_PRICING_LEVELS
          WHERE LEV_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, TAX_L_NM, NVL(TAX_F_NM, TAX_L_NM)), NVL(INACTIVE, 0)
           FROM GNR_TAX_CODE_MST
          WHERE TAX_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT 1, DECODE(P_LNG_DFLT, 1, NVL(CLC_TYP_L_NM, CLC_TYP_F_NM), NVL(CLC_TYP_F_NM, CLC_TYP_L_NM))
           FROM GNR_TAX_TYP_CLC_MST M, GNR_TAX_TYP_CLC_BRN DB
          WHERE M.CLC_TYP_NO = DB.CLC_TYP_NO
                           (SELECT D.CLC_TYP_NO
                              FROM GNR_TAX_TYP_CLC_DTL D, GNR_TAX_CODE_MST T
                             WHERE D.TAX_NO = T.TAX_NO
      EXCEPTION
      END;
         BEGIN
            SELECT 1, DECODE(P_LNG_DFLT, 1, NVL(CLC_TYP_L_NM, CLC_TYP_F_NM), NVL(CLC_TYP_F_NM, CLC_TYP_L_NM))
              FROM GNR_TAX_TYP_CLC_MST M, GNR_TAX_TYP_CLC_BRN DB
             WHERE M.CLC_TYP_NO = DB.CLC_TYP_NO
                              (SELECT D.CLC_TYP_NO
                                 FROM GNR_TAX_TYP_CLC_DTL D, GNR_TAX_TYP_CLC_BRN DB, GNR_TAX_CODE_MST T
                                WHERE D.TAX_NO = T.TAX_NO
         EXCEPTION
         END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, SC_NAME, NVL(SC_NAME, SC_NAME))
           FROM SALES_CHARGES
          WHERE SC_NO = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, SO_A_NAME, NVL(SO_E_NAME, SO_A_NAME))
           FROM IAS_SORDER_TYPES
          WHERE SO_TYPE = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, SI_A_NAME, NVL(SI_E_NAME, SI_A_NAME))
           FROM IAS_SALES_TYPES
          WHERE SI_TYPE = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN
         SELECT DECODE(P_LNG_DFLT, 1, SR_A_NAME, NVL(SR_E_NAME, SR_A_NAME))
           FROM IAS_RT_SALES_TYPES
          WHERE SR_TYPE = P_INPT_CODE1
      EXCEPTION
      END;
      BEGIN       
         SELECT DECODE(P_LNG_DFLT, 1, TR_NAME, NVL(TR_E_NAME, TR_NAME)),NVL(TR_REC,0)
           FROM TRANSFER_TYPES
          WHERE TR_TYPE = P_INPT_CODE1
      EXCEPTION
      END;
EXCEPTION
PROCEDURE CHK_SUB_LDGR(  P_SYS_TYP     IN     NUMBER,   --##    P_SYS_TYP =  1 = SALE , 2= STOCKE ,3 = PURCHASE                ,
   BEGIN
      SELECT NVL(CC_AVAIL, 0),
        FROM IAS_PARA_GEN, IAS_PARA_GL;
   EXCEPTION
   END;
         BEGIN
            SELECT CC_CODE
              FROM SALES_MAN
             WHERE REPRS_CODE = P_REP_CODE
         EXCEPTION
         END;
         BEGIN
            SELECT PJ_NO
              FROM SALES_MAN
             WHERE REPRS_CODE = P_REP_CODE
         EXCEPTION
         END;
         BEGIN
            SELECT PJ_NO
              FROM SALES_MAN
             WHERE REPRS_CODE = P_REP_CODE
         EXCEPTION
         END;
      BEGIN
      END;
EXCEPTION
FUNCTION GET_ITM_PRICE (    P_ICODE     In        Varchar2 Default Null
Function Shw_Doc_Mst_Data(P_Doc_Type   In Number,   --## 4 sales invoice ,# 5 retrn sales 
Function Shw_Doc_Dtl_Data(P_Doc_Type   In Number,   --## 4 sales invoice ,# 5 retrn sales 
Function Get_Cstmr_Items( P_Doc_No     In Ias_Bill_Mst.Bill_No%Type Default Null,                         
ALTER TABLE S_PRD_DTL ADD (UP_DATE DATE)
   SELECT SYSDATE INTO :NEW.UP_DATE FROM DUAL;
 EXCEPTION WHEN OTHERS THEN
ALTER TABLE S_FLAGS ADD (UP_DATE DATE)
   SELECT SYSDATE INTO :NEW.UP_DATE FROM DUAL;
 EXCEPTION WHEN OTHERS THEN
ALTER TABLE IAS_ITM_WCODE ADD (UP_DATE DATE)
ALTER TABLE GR_DETAIL ADD (UP_DATE DATE)
ALTER TABLE IAS_WHTRNS_MST ADD ( LGHT_MOV_DATE  DATE)
ALTER TABLE IAS_POST_MST ADD ( LGHT_MOV_DATE  DATE)
                    BEGIN
                       SELECT SYSDATE INTO :NEW.LGHT_MOV_DATE FROM DUAL;
                     EXCEPTION WHEN OTHERS THEN
ALTER TABLE IAS_POST_DTL ADD ( LGHT_MOV_DATE  DATE)
                    BEGIN
                       SELECT SYSDATE INTO :NEW.LGHT_MOV_DATE FROM DUAL;
                     EXCEPTION WHEN OTHERS THEN
ALTER TABLE ITEM_MOVEMENT ADD ( LGHT_MOV_DATE  DATE)
                    BEGIN
                       SELECT SYSDATE INTO :NEW.LGHT_MOV_DATE FROM DUAL;
                     EXCEPTION WHEN OTHERS THEN
ALTER TABLE IAS_ITEM_SERIALNO ADD ( LGHT_MOV_DATE  DATE)
                    BEGIN
                       SELECT SYSDATE INTO :NEW.LGHT_MOV_DATE FROM DUAL;
                     EXCEPTION WHEN OTHERS THEN
ALTER TABLE IAS_ITM_ATTACH_MOVEMENT ADD ( LGHT_MOV_DATE  DATE)
                    BEGIN
                       SELECT SYSDATE INTO :NEW.LGHT_MOV_DATE FROM DUAL;
                     EXCEPTION WHEN OTHERS THEN
ALTER TABLE IAS_POST_DTL DROP CONSTRAINT IASPOSTDTL_ACACY_FK
ALTER TABLE IAS_POST_DTL DROP CONSTRAINT IASPOSTDTL_LCNO_FK
ALTER TABLE IAS_POST_DTL DROP CONSTRAINT IASPOSTRDTL_PJ_FK
ALTER TABLE IAS_POST_DTL DROP CONSTRAINT IASPSTMST_PERNO_FK
ALTER TABLE IAS_POST_DTL DROP CONSTRAINT IAS_POSTDTL_ACTV_FK
ALTER TABLE IAS_POST_DTL DROP CONSTRAINT POSTDTL_F_BRNNO_FK
CREATE OR REPLACE PACKAGE IAS_REPLICA_DATA_PKG AS   
  PROCEDURE Ias_Call_Brn ( P_Sql Varchar2); 
PROCEDURE Ias_Refresh_Mv_Br (T_Name Varchar2,Mv_Name Varchar2,Ref_Type Varchar2,P_Rebuild Number,P_PK_NM VARCHAR2,P_Pk_Field Varchar2,Use_Period Varchar2,Use_Mv Number,P_whr Varchar2,P_Auto_Rfrsh Varchar2);
  PROCEDURE Ias_Update_Extrnl_Post_Br (TName Varchar2 ,Center_Branch Varchar2,P_Extrnl_Post_Val Number,P_Whr_Mod Varchar2,P_Cncl_So_Rsrvd Number);
  PROCEDURE Ias_Insrt_Data (FtName Varchar2,TtName Varchar2,V_Field_Pk Varchar2,Center_Branch Varchar2,P_Whr_Del Varchar2,P_Whr_Ins Varchar2,P_Use_Del Number,P_Lnk Varchar2,P_Rebuild Number Default 0);  
  PROCEDURE Ias_Delete_Mv_Br (Mvt_Name Varchar2,Drop_Type Varchar2);
FUNCTION  Ias_Check_Data_Cntr (P_Brn_No Number , T_Name Varchar2,F_Date Varchar2,T_Date Varchar2,P_Field_Date Varchar2,Center_Branch Varchar2) Return Number;
  PROCEDURE Ias_Dis_Ena_Constraint(Typ Number );  
  PROCEDURE Ias_Insrt_Data_Br ( P_Brn_No Number , TtName Varchar2,P_Whr_Ins Varchar2);
  FUNCTION Ias_chk_cstmr_dup (P_Brn_No IN  Number) RETURN VARCHAR2;
  PROCEDURE Ias_Insrt_Data_Br_Auto (FtName Varchar2,TtName Varchar2,V_Field_Pk Varchar2,P_Whr_Ins Varchar2) ;
  --## Replica Data From Branch To Center
  PROCEDURE Ias_Insrt_Sales_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_RtSales_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Jv_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Vchr_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Gr_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Outgng_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Whtrns_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Itm_Ordr_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Invntry_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Itm_Bin_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Qtn_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_Sordr_Bc_Auto_Br;
  PROCEDURE Ias_Insrt_RqOut_Bc_Auto_Br;  
  --## Replica Data From Center To Branch
  PROCEDURE Ias_Insrt_Whtrns_Cb_Auto_Br;
  PROCEDURE Ias_Insrt_ItmMov_Cb_Auto_Br;
  PROCEDURE Ias_Insrt_Itm_Attch_Cb_Auto_Br;
  PROCEDURE Ias_Insrt_Itm_Srl_Cb_Auto_Br;
  PROCEDURE Ias_Insrt_Postng_Cb_Auto_Br;
  PROCEDURE Ias_Insrt_Cstmr_Bc_Auto_Br;
CREATE OR REPLACE PACKAGE BODY Ias_Replica_Data_Pkg AS
 PROCEDURE Ias_Call_Brn ( P_Sql Varchar2 ) Is
    V_Sql Varchar2(2000):=' Begin '||P_Sql||' End;';
  BEGIN
  END;
PROCEDURE Ias_Refresh_Mv_Br (T_Name Varchar2,Mv_Name Varchar2,Ref_Type Varchar2,P_Rebuild Number,P_PK_NM VARCHAR2,P_Pk_Field Varchar2,Use_Period Varchar2,Use_Mv Number,P_whr Varchar2,P_Auto_Rfrsh Varchar2) IS
 BEGIN    
      Begin        
      Exception           
                       AS SELECT * FROM 
                       AS SELECT * FROM 
      Execute Immediate 'CREATE MATERIALIZED VIEW '||MvName||' BUILD IMMEDIATE REFRESH WITH '||Ref_Type||' FOR UPDATE 
                 AS SELECT * FROM 
      BEGIN                         
     --Execute Immediate 'ALTER TABLE '||T_Name||' ADD ( CONSTRAINT '||P_PK_NM||' PRIMARY KEY ('||P_Pk_Field||') DEFERRABLE INITIALLY DEFERRED )';
     Execute Immediate 'CREATE INDEX '||P_PK_NM||' ON '||T_Name||'
      EXCEPTION WHEN OTHERS THEN NULL;
      END;                          
  --Exception
 End; 
 PROCEDURE Ias_Update_Extrnl_Post_Br (TName Varchar2, Center_Branch Varchar2,P_Extrnl_Post_Val Number,P_Whr_Mod Varchar2,P_Cncl_So_Rsrvd Number) IS
 Begin              
       BEGIN
          EXECUTE IMMEDIATE 'UPDATE ORDER_DETAIL SET RESERVED=NULL,RES_DATE=NULL WHERE 1=1 '||P_Whr;         
          EXECUTE IMMEDIATE 'UPDATE IAS_RESERVE_DTL A SET CP_QTY = 0,RESERVED=0
                               WHERE DOC_TYPE_REF = 53
                                 AND EXISTS ( SELECT 1 FROM MV_ORDER_DETAIL WHERE ORDER_SER=A.DOC_SER_REF AND ROWNUM<=1)';                                                                                       
       EXCEPTION WHEN OTHERS THEN NULL ;
    EXECUTE IMMEDIATE 'UPDATE '||TName||' SET EXTERNAL_POST='||P_Extrnl_Post_Val||' WHERE NVL(EXTERNAL_POST,0)='||P_Ext_Val||P_Whr||P_Whr_Mod;
 --Exception
      --Raise_Application_Error(-20906,'Error In Update External Post '||TName||SqlErrm);
  End;
 PROCEDURE Ias_Insrt_Data (FtName Varchar2,TtName Varchar2,V_Field_Pk Varchar2,Center_Branch Varchar2,P_Whr_Del Varchar2,P_Whr_Ins Varchar2,P_Use_Del Number,P_Lnk Varchar2,P_Rebuild Number Default 0) IS   
   Cursor C_Field Is Select Column_Name From User_Tab_Columns A
      Where Table_Name=TtName And Exists (Select Column_Name From User_Tab_Columns
                                          Where Table_Name=FtName
      Order By Column_Id;
 Begin      
       Execute Immediate 'Delete '||TtName||' Where Doc_Type Not In (1,3,5,7,8)';     
       Execute Immediate 'Delete IAS_POST_MST Where Doc_Type Not In (1,2,3,4,5,8,11,12)';
       Execute Immediate 'Delete IAS_POST_DTL Where Doc_Type Not In (1,2,3,4,5,8,11,12)';
     Execute Immediate 'Delete '||TtName||' Where ('||Field_Pk||') In (Select '||Field_Pk||' From '||FtName||')'||' '||P_Whr_Del;
     Execute Immediate 'Delete Item_Movement Mov Where Exists ( Select 1 From Mv_Item_Movement
                                                           Where Doc_Type   =Mov.Doc_Type
   Execute Immediate 'Insert Into '||TtName||'('||Field||') Select '||I_Field||' From '||V_Usr||FtName||P_Lnk||' '||P_Whr_Ins;
 Exception
    --Raise_Application_Error(-20907,'Insert Into '||TtName||'('||Field||') Select '||I_Field||' From '||FtName) ;   
 PROCEDURE Ias_Delete_Mv_Br (Mvt_Name Varchar2,Drop_Type Varchar2) Is
 BEGIN
     Select 1 InTo Cnt From Tab Where TNAME=Mvt_Name And RowNum<=1;
       Execute Immediate 'Drop Table '||Mvt_Name||' Cascade Constraint';
     Select 1 InTo Cnt From USER_SNAPSHOTS Where NAME=Mvt_Name And RowNum<=1;
       BEGIN
         SELECT IAS_DBS_SYS_PKG.GET_CONS_NAME (Mvt_Name,'P' ) INTO PK FROM DUAL;         
         Execute Immediate 'ALTER TABLE '||Mvt_Name||' DROP CONSTRAINT '||PK ||' CASCADE';         
       Exception           
       END;    
 Exception           
FUNCTION Ias_Check_Data_Cntr (P_Brn_No Number , T_Name Varchar2,F_Date Varchar2,T_Date Varchar2,P_Field_Date Varchar2,Center_Branch Varchar2) Return Number Is
     Begin   
         EXECUTE IMMEDIATE 'Select 1 From '||T_Name||' 
                                      Where  '||P_Field_Date||' Between To_Date('''||F_Date||''',''DD/MM/YYYY HH24:MI:SS'')
         EXECUTE IMMEDIATE 'Select 1 From 
                                      Where Nvl(External_Post,0)=0
 Exception
  End;
PROCEDURE Ias_Dis_Ena_Constraint(Typ Number ) Is
BEGIN 
    --Execute Immediate 'ALTER TABLE ITEM_DETAILS DISABLE CONSTRAINT ITMS_DET_PK CASCADE';
  Execute Immediate 'ALTER TABLE ACCOUNT DISABLE CONSTRAINT A_CODE_PK CASCADE';
  Execute Immediate 'ALTER TABLE ACCOUNT_CURR DISABLE CONSTRAINT AC_PK CASCADE';
  Execute Immediate 'ALTER TABLE CUSTOMER DISABLE CONSTRAINT CUSTOMER_PK CASCADE';
  Execute Immediate 'ALTER TABLE CUSTOMER_CURR DISABLE CONSTRAINT CSTCURR_PK CASCADE';
  Execute Immediate 'ALTER TABLE V_DETAILS DISABLE CONSTRAINT VDETAILS_PK CASCADE';
  Execute Immediate 'ALTER TABLE VENDOR_CURR DISABLE CONSTRAINT VCURR_PK CASCADE';
    Execute Immediate 'ALTER TABLE IAS_ITM_WCODE DISABLE CONSTRAINT IASSTG_AVLQTY_CHKVL';
    Execute Immediate 'ALTER TABLE IAS_POST_DTL DISABLE CONSTRAINT IASPOSTDTL_LCNO_FK';
    --Execute Immediate 'ALTER TABLE ITEM_DETAILS ENABLE CONSTRAINT ITMS_DET_PK';
  Execute Immediate 'ALTER TABLE ACCOUNT ENABLE CONSTRAINT A_CODE_PK';
  Execute Immediate 'ALTER TABLE ACCOUNT_CURR ENABLE CONSTRAINT AC_PK';
  Execute Immediate 'ALTER TABLE CUSTOMER ENABLE CONSTRAINT CUSTOMER_PK';
  Execute Immediate 'ALTER TABLE CUSTOMER_CURR ENABLE CONSTRAINT CSTCURR_PK';    
  Execute Immediate 'ALTER TABLE V_DETAILS ENABLE CONSTRAINT VDETAILS_PK CASCADE';
  Execute Immediate 'ALTER TABLE VENDOR_CURR ENABLE CONSTRAINT VCURR_PK CASCADE';
    Execute Immediate 'ALTER TABLE IAS_QUT_PRM_DTL ENABLE CONSTRAINT IASQTPD_ICODE_FK';
  Execute Immediate 'ALTER TABLE QUOTATION_DETAIL ENABLE CONSTRAINT QTD_ICODE_FK';
  Execute Immediate 'ALTER TABLE ORDER_DETAIL ENABLE CONSTRAINT ORD_ICODE_FK';
  Execute Immediate 'ALTER TABLE IAS_BILL_DTL ENABLE CONSTRAINT IASBILLDTL_ICODE_FK';
  Execute Immediate 'ALTER TABLE IAS_RT_BILL_DTL ENABLE CONSTRAINT IASRTBDTL_ICODE_FK';
    Execute Immediate 'ALTER TABLE IAS_ITM_WCODE ENABLE CONSTRAINT IASSTG_AVLQTY_CHKVL';
  EXCEPTION  
PROCEDURE Ias_Insrt_Data_Br (P_Brn_No Number , TtName Varchar2,P_Whr_Ins Varchar2) IS   
   Cursor C_Field Is Select Column_Name From User_Tab_Columns A
      Where Table_Name=TtName 
      Order By Column_Id;
 Begin      
   Execute Immediate 'Insert Into 
'||TtName||'@Db_Lnk_Cntr'||V_ACTV_NO||P_Brn_No||'.Lght.Com('||F_Field||') Select '||I_Field||' From '||TtName||' '||P_Whr_Ins;
 Exception
FUNCTION Ias_chk_cstmr_dup (P_Brn_No IN  Number) RETURN VARCHAR2 IS   
 Begin      
    Execute Immediate 'SELECT C_CODE FROM ( SELECT C_CODE FROM 
                                            WHERE NVL(EXTERNAL_POST,0)=0 
                       WHERE EXISTS ( SELECT 1 FROM 
CUSTOMER WHERE C_CODE=C.C_CODE AND ROWNUM<=1)
 Exception When Others Then    
PROCEDURE Ias_Insrt_Data_Br_Auto (FtName Varchar2,TtName Varchar2,V_Field_Pk Varchar2,P_Whr_Ins Varchar2) IS   
   Cursor C_Field Is Select Column_Name From User_Tab_Columns A
      Where Table_Name=FtName 
      Order By Column_Id;
 Begin      
   Execute Immediate 'Insert Into '||TtName||'('||Field||') Select '||I_Field||' From 
 Exception
      Raise_Application_Error(-20000,'Error When Update Data , '||Chr(13)||SqlErrm);  
PROCEDURE Ias_Insrt_Sales_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE IAS_BILL_MST SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0 AND NVL(STAND_BY,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_BILL_MST_TMP (BILL_SER)  SELECT BILL_SER FROM IAS_BILL_MST WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = M.BILL_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)');                 
                             P_Whr_Ins =>' D WHERE BILL_TYPE=1 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)');
                             P_Whr_Ins =>' D WHERE BILL_TYPE=1 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE=4 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE=1 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.DOC_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE=1 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.DOC_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)');
    EXECUTE IMMEDIATE 'UPDATE IAS_BILL_MST M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = M.BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_BILL_DTL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE OTHER_CHARGES D SET EXTERNAL_POST=85 WHERE BILL_TYPE=1 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE OTHER_CHARGES_ITEMS D SET EXTERNAL_POST=85 WHERE BILL_TYPE=1 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE INSTALLMENT D SET EXTERNAL_POST=85 WHERE DOC_TYPE=4 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT D SET EXTERNAL_POST=85 WHERE DOC_TYPE=1 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO D SET EXTERNAL_POST=85 WHERE DOC_TYPE=1 AND EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_CARGO_SERVICES D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_BILL_MST_TMP WHERE BILL_SER = D.BILL_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_RtSales_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE IAS_RT_BILL_MST SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0 AND NVL(STAND_BY,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_RT_BILL_MST_TMP (RT_BILL_SER) SELECT RT_BILL_SER FROM IAS_RT_BILL_MST WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = M.RT_BILL_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.RT_BILL_SER AND ROWNUM <= 1)');                 
                             P_Whr_Ins =>' D WHERE BILL_TYPE=3 AND EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.BILL_SER AND ROWNUM <= 1)');
                             P_Whr_Ins =>' D WHERE BILL_TYPE=3 AND EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.BILL_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE=3 AND EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.DOC_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE=3 AND EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.DOC_SER AND ROWNUM <= 1)');                             
    EXECUTE IMMEDIATE 'UPDATE IAS_RT_BILL_MST M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = M.RT_BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_RT_BILL_DTL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.RT_BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE OTHER_CHARGES D SET EXTERNAL_POST=85 WHERE BILL_TYPE=3 AN
D EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE OTHER_CHARGES_ITEMS D SET EXTERNAL_POST=85 WHERE BILL_TYPE=3 AND EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.BILL_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT D SET EXTERNAL_POST=85 WHERE DOC_TYPE=3 AND EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO D SET EXTERNAL_POST=85 WHERE DOC_TYPE=3 AND EXISTS (SELECT 1 FROM IAS_RT_BILL_MST_TMP WHERE RT_BILL_SER = D.DOC_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Jv_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE MASTER_JOURNAL_V SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0 AND NVL(STAND_BY,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO MASTER_JOURNAL_V_TMP (J_SER) SELECT J_SER FROM MASTER_JOURNAL_V WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM MASTER_JOURNAL_V_TMP WHERE J_SER = M.J_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM MASTER_JOURNAL_V_TMP WHERE J_SER = D.J_SER AND ROWNUM <= 1)');                 
    EXECUTE IMMEDIATE 'UPDATE MASTER_JOURNAL_V M SET EXTERNAL_POST=85 WHER
E EXISTS (SELECT 1 FROM MASTER_JOURNAL_V_TMP WHERE J_SER = M.J_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE DETAIL_JOURNAL_V D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM MASTER_JOURNAL_V_TMP WHERE J_SER = D.J_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
END;                                 
PROCEDURE Ias_Insrt_Vchr_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE VOUCHERS SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0 AND NVL(STAND_BY,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO VOUCHERS_TMP (V_SER) SELECT V_SER FROM VOUCHERS WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM VOUCHERS_TMP WHERE V_SER = M.V_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM VOUCHERS_TMP WHERE V_SER = D.V_SER AND ROWNUM <= 1)');                 
    EXECUTE IMMEDIATE 'UPDATE VOUCHERS M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM VOUCHERS_TMP WHERE V_SER = M.V_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE VOUCHER_DETAIL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM VOUCHERS_TMP WHERE V_SER = D.V_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
END;             
PROCEDURE Ias_Insrt_Gr_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE GR_NOTE SET EXTERNAL_POST=-1 WHERE PI_TYPE=5 AND NVL(EXTERNAL_POST,0)=0 AND NVL(HUNG,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO GR_NOTE_TMP (G_SER)  SELECT G_SER FROM GR_NOTE WHERE PI_TYPE=5 AND EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM GR_NOTE_TMP WHERE G_SER = M.G_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM GR_NOTE_TMP WHERE G_SER = D.G_SER AND ROWNUM <= 1)');                 
                             P_Whr_Ins =>' D WHERE DOC_TYPE=5 AND EXISTS (SELECT 1 FROM GR_NOTE_TMP WHERE G_SER = D.DOC_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE=5 AND EXISTS (SELECT 1 FROM GR_NOTE_TMP WHERE G_SER = D.DOC_SER AND ROWNUM <= 1)');                             
    EXECUTE IMMEDIATE 'UPDATE GR_NOTE M SET EXTERNAL_POST=85 WHERE PI_TYPE=5 AND EXISTS (SELECT 1 FROM GR_NOTE_TMP WHERE G_SER = M.G_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE GR_DETAIL D SET EXTERNAL_POST=85 WHERE PI_TYPE=5 AND EXISTS (SELECT 1 FROM GR_NOTE_TMP WHERE G_SER = D.G_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT D SET EXTERNAL_POST=85 WHERE DOC_TYPE=5 AND EXISTS (SELECT 1 FROM GR_NOTE_TMP WHERE G_SER = D.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO D SET EXTERNAL_POST=85 WHERE DOC_TYPE=5 AND EXISTS (SELECT 1 FROM GR_NOTE_TMP WHERE G_SER = D.DOC_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
END;    
PROCEDURE Ias_Insrt_Outgng_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE IAS_OUTGOING_MST SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0 AND NVL(HUNG,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_OUTGOING_MST_TMP (OUT_SER)  SELECT OUT_SER FROM IAS_OUTGOING_MST WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_TMP WHERE OUT_SER = M.OUT_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_TMP WHERE OUT_SER = D.OUT_SER AND ROWNUM <= 1)');                 
                             P_Whr_Ins =>' D WHERE DOC_TYPE=6 AND EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_TMP WHERE OUT_SER = D.DOC_SER AND ROWNU
                             P_Whr_Ins =>' D WHERE DOC_TYPE=6 AND EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_TMP WHERE OUT_SER = D.DOC_SER AND ROWNUM <= 1)');                             
    EXECUTE IMMEDIATE 'UPDATE IAS_OUTGOING_MST M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_TMP WHERE OUT_SER = M.OUT_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_OUTGOING_DTL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_TMP WHERE OUT_SER = D.OUT_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT D SET EXTERNAL_POST=85 WHERE DOC_TYPE=6 AND EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_TMP WHERE OUT_SER = D.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO D SET EXTERNAL_POST=85 WHERE DOC_TYPE=6 AND EXISTS (SELECT 1 FROM IAS_OUTGOING_MST_TMP WHERE OUT_SER = D.DOC_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
END;  
PROCEDURE Ias_Insrt_Whtrns_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_MST SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0 AND NVL(HUNG,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_WHTRNS_MST_TMP (TR_SER)  SELECT TR_SER FROM IAS_WHTRNS_MST WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_TMP WHERE TR_SER = M.TR_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_TMP WHERE TR_SER = D.TR_SER AND ROWNUM <= 1)');                 
                             P_Whr_Ins =>' D WHERE DOC_TYPE IN (7,8) AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE IN (7,8) AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)');                             
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_MST M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_TMP WHERE TR_SER = M.TR_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_DTL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_TMP WHERE TR_SER = D.TR_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT D SET EXTERNAL_POST=85 WHERE DOC_TYPE IN (7,8) AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO D SET EXTERNAL_POST=85 WHERE DOC_TYPE IN (7,8) AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Itm_Ordr_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE ITEMS_ORDER SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO ITEMS_ORDER_TMP (I_CODE)  SELECT I_CODE FROM ITEMS_ORDER WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM ITEMS_ORDER_TMP WHERE I_CODE = M.I_CODE AND ROWNUM <= 1)');   
    EXECUTE IMMEDIATE 'UPDATE ITEMS_ORDER M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM ITEMS_ORDER_TMP WHERE I_CODE = M.I_CODE AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Invntry_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE MASTER_INV SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO MASTER_INV_TMP (INV_SER)  SELECT INV_SER FROM MASTER_INV WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM MASTER_INV_TMP WHERE INV_SER = M.INV_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM MASTER_INV_TMP WHERE INV_SER = D.INV_SER AND ROWNUM <= 1)');                 
PDATE MASTER_INV M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM MASTER_INV_TMP WHERE INV_SER = M.INV_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE DETAIL_INV D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM MASTER_INV_TMP WHERE INV_SER = D.INV_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Itm_Bin_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE ITEM_BIN SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO ITEM_BIN_TMP (I_CODE,W_CODE,B_CODE)  SELECT I_CODE,W_CODE,B_CODE FROM ITEM_BIN WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM ITEM_BIN_TMP WHERE I_CODE=M.I_CODE AND W_CODE=M.W_CODE AND B_CODE=M.B_CODE AND ROWNUM<=1)');   
    EXECUTE IMMEDIATE 'UPDATE ITEM_BIN M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM ITEM_BIN_TMP WHERE I_CODE=M.I_CODE AND W_CODE=M.W_CODE AND B_CODE=M.B_CODE AND ROWNUM<=1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Qtn_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE QUOTATION SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO QUOTATION_TMP (QUOT_SER) SELECT QUOT_SER FROM QUOTATION WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM QUOTATION_TMP WHERE QUOT_SER = M.QUOT_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM QUOTATION_TMP WHERE QUOT_SER = D.QUOT_SER AND ROWNUM <= 1)');                 
    EXECUTE IMMEDIATE 'UPDATE QUOTATION M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM QUOTATION_TMP WHERE QUOT_SER = M.QUOT_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE QUOTATION_DETAIL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM QUOTATION_TMP WHERE QUOT_SER = D.QUOT_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Sordr_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE SALES_ORDER SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO SALES_ORDER_TMP (ORDER_SER) SELECT ORDER_SER FROM SALES_ORDER WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM SALES_ORDER_TMP WHERE ORDER_SER = M.ORDER_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM SALES_ORDER_
TMP WHERE ORDER_SER = D.ORDER_SER AND ROWNUM <= 1)');                 
    EXECUTE IMMEDIATE 'UPDATE SALES_ORDER M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM SALES_ORDER_TMP WHERE ORDER_SER = M.ORDER_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE ORDER_DETAIL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM SALES_ORDER_TMP WHERE ORDER_SER = D.ORDER_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_RqOut_Bc_Auto_Br IS          
    EXECUTE IMMEDIATE 'UPDATE IAS_OUT_REQUEST_MST SET EXTERNAL_POST=-1 WHERE NVL(EXTERNAL_POST,0)=0';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_OUT_REQUEST_MST_TMP (OUT_REQ_SER) SELECT OUT_REQ_SER FROM IAS_OUT_REQUEST_MST WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_OUT_REQUEST_MST_TMP WHERE OUT_REQ_SER = M.OUT_REQ_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_OUT_REQUEST_MST_TMP WHERE OUT_REQ_SER = D.OUT_REQ_SER AND ROWNUM <= 1)');                 
    EXECUTE IMMEDIATE 'UPDATE IAS_OUT_REQUEST_MST M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_OUT_REQUEST_MST_TMP WHERE OUT_REQ_SER = M.OUT_REQ_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_OUT_REQUEST_DTL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_OUT_REQUEST_MST_TMP WHERE OUT_REQ_SER = D.OUT_REQ_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
END;           
PROCEDURE Ias_Insrt_Whtrns_Cb_Auto_Br IS
  CURSOR C_BRN IS SELECT BRN_NO FROM S_BRN WHERE NVL(BRN_LGHT,0)=1 ORDER BY BRN_NO;  
BEGIN 
    BEGIN
      --V_HD := IAS_GEN_PKG.GET_CNT('SELECT NVL(HEAD_OFFICE,0)+1 FROM 
      EXECUTE IMMEDIATE 'SELECT NVL(HEAD_OFFICE,0)+1 FROM 
    EXCEPTION WHEN OTHERS THEN      
    END;
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_MST SET EXTERNAL_POST=85 WHERE EXTERNAL_POST=-1 AND TR_SER IN (SELECT TR_SER FROM 
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_MST SET EXTERNAL_POST=-1 WHERE TR_SER IN ( SELECT TR_SER FROM IAS_WHTRNS_MST 
                                                                                     WHERE TR_INOUT_TYPE=1 AND NVL(HUNG,0)=0 AND NVL(PROCESSED,0)=0 
                                                                                       AND EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=IAS_WHTRNS_MST.T_W_CODE AND CONN_BRN_NO='||I.BRN_NO||' AND ROWNUM<=1)
                                                                                     SELECT TR_SER FROM 
    EXECUTE IMMEDIATE 'INSERT INTO IAS_WHTRNS_MST_CB_TMP (TR_SER)  SELECT TR_SER FROM IAS_WHTRNS_MST WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = M.TR_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.TR_SER AND ROWNUM <= 1)');                 
                             P_Whr_Ins =>' D WHERE DOC_TYPE=7 AND EXISTS (SELECT 1 FRO
M IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE =7 AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)');                             
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_MST M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = M.TR_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_DTL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.TR_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT D SET EXTERNAL_POST=85 WHERE DOC_TYPE=7 AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO D SET EXTERNAL_POST=85 WHERE DOC_TYPE=7 AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_MST_BR SET EXTERNAL_POST=85 WHERE EXTERNAL_POST=-1 AND TR_SER IN (SELECT TR_SER FROM 
    EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_MST_BR SET EXTERNAL_POST=-1 WHERE TR_SER IN ( SELECT TR_SER FROM IAS_WHTRNS_MST_BR 
                                                                                     WHERE TR_INOUT_TYPE=1 AND NVL(HUNG,0)=0 AND NVL(PROCESSED,0)=0 
                                                                                       AND EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=IAS_WHTRNS_MST_BR.T_W_CODE AND CONN_BRN_NO='||I.BRN_NO||' AND ROWNUM<=1)
                                                                                     SELECT TR_SER FROM 
    EXECUTE IMMEDIATE 'INSERT INTO IAS_WHTRNS_MST_CB_TMP (TR_SER)  SELECT TR_SER FROM IAS_WHTRNS_MST_BR WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = M.TR_SER AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.TR_SER AND ROWNUM <= 1)');                 
                             P_Whr_Ins =>' D WHERE DOC_TYPE=7 AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)');                             
                             P_Whr_Ins =>' D WHERE DOC_TYPE =7 AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)');                             
        EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_MST_BR M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = M.TR_SER AND ROWNUM <= 1)';
        EXECUTE IMMEDIATE 'UPDATE IAS_WHTRNS_DTL_BR D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.TR_SER AND ROWNUM <= 1)';
        EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT_BR D SET EXTERNAL_POST=85 WHERE DOC_TYPE=7 AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)';
        EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO_BR D SET EXTERNAL_POST=85 WHERE DOC_TYPE=7 AND EXISTS (SELECT 1 FROM IAS_WHTRNS_MST_CB_TMP WHERE TR_SER = D.DOC_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_ItmMov_Cb_Auto_Br IS
  CURSOR C_BRN IS SELECT BRN_NO FROM S_BRN WHERE NVL(BRN_LGHT,0)=1 ORDER BY BRN_NO;
BEGIN 
    BEGIN
      EXECUTE IMMEDIATE 'SELECT NVL(HEAD_OFFICE,0)+1 FROM 
      --V_HD := IAS_GEN_PKG.GET_CNT('SELECT NVL(HEAD_OFFICE,0)+1 FROM 
    EXCEPTION WHEN OTHERS THEN      
    END;
    EXECUTE IMMEDIATE 'UPDATE ITEM_MOVEMENT SET EXTERNAL_POST=-1 WHERE EXTERNAL_POST=0 
                                                                   AND DOC_TYPE NOT IN (1,3) AND EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=ITEM_MOVEMENT.W_CODE AND CONN_BRN_NO='||I.BRN_NO||' AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM GR_NOTE_BR WHERE G_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST WHERE NVL(HUNG,0)=1 AND TR_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM GR_NOTE WHERE NVL(HUNG,0)=1 AND G_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM IAS_OUTGOING_MST WHERE NVL(HUNG,0)=1 AND OUT_SER=ITEM_MOVEMENT.DOC_SER AND ROWNUM<=1)'; 
    EXECUTE IMMEDIATE 'INSERT INTO ITEM_MOVEMENT_CB_TMP (DOC_SER,I_CO
DE,ITM_UNT,W_CODE,DOC_SEQUENCE) SELECT DOC_SER,I_CODE,ITM_UNT,W_CODE,DOC_SEQUENCE FROM ITEM_MOVEMENT WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM ITEM_MOVEMENT_CB_TMP WHERE DOC_SER = M.DOC_SER AND I_CODE=M.I_CODE AND ITM_UNT=M.ITM_UNT AND W_CODE=M.W_CODE AND DOC_SEQUENCE=M.DOC_SEQUENCE AND ROWNUM <= 1)');   
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM ITEM_MOVEMENT_CB_TMP WHERE DOC_SER = M.DOC_SER AND I_CODE=M.I_CODE AND ITM_UNT=M.ITM_UNT AND W_CODE=M.W_CODE AND DOC_SEQUENCE=M.DOC_SEQUENCE AND ROWNUM <= 1)');
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM ITEM_MOVEMENT_CB_TMP WHERE DOC_SER = M.DOC_SER AND I_CODE=M.I_CODE AND ITM_UNT=M.ITM_UNT AND W_CODE=M.W_CODE AND DOC_SEQUENCE=M.DOC_SEQUENCE AND ROWNUM <= 1)');                                                      
    EXECUTE IMMEDIATE 'UPDATE ITEM_MOVEMENT M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM ITEM_MOVEMENT_CB_TMP WHERE DOC_SER = M.DOC_SER AND I_CODE=M.I_CODE AND ITM_UNT=M.ITM_UNT AND W_CODE=M.W_CODE AND DOC_SEQUENCE=M.DOC_SEQUENCE AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM ITEM_MOVEMENT_CB_TMP WHERE DOC_SER = M.DOC_SER AND I_CODE=M.I_CODE AND ITM_UNT=M.ITM_UNT AND W_CODE=M.W_CODE AND DOC_SEQUENCE=M.DOC_SEQUENCE AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM ITEM_MOVEMENT_CB_TMP WHERE DOC_SER = M.DOC_SER AND I_CODE=M.I_CODE AND ITM_UNT=M.ITM_UNT AND W_CODE=M.W_CODE AND DOC_SEQUENCE=M.DOC_SEQUENCE AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Itm_Attch_Cb_Auto_Br IS
 CURSOR C_BRN IS SELECT BRN_NO FROM S_BRN WHERE NVL(BRN_LGHT,0)=1 ORDER BY BRN_NO;
    EXCEPTION WHEN OTHERS THEN      
    END;
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT SET EXTERNAL_POST=-1 WHERE EXTERNAL_POST=0 
                                                                   AND DOC_TYPE NOT IN (1,3) AND EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=IAS_ITM_ATTACH_MOVEMENT.W_CODE AND CONN_BRN_NO='||I.BRN_NO||' AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=IAS_ITM_ATTACH_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM GR_NOTE_BR WHERE G_SER=IAS_ITM_ATTACH_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST WHERE NVL(HUNG,0)=1 AND TR_SER=IAS_ITM_ATTACH_MOVEMENT.DOC_SER AND ROWNUM<=1)
             AND NOT EXISTS(SELECT 1 FROM GR_NOTE WHERE NVL(HUNG,0)=1 AND G_SER=IAS_ITM_ATTACH_MOVEMENT.DOC_SER AND ROWNUM<=1)
                                                                   AND NOT EXISTS(SELECT 1 FROM IAS_OUTGOING_MST WHERE NVL(HUNG,0)=1 AND OUT_SER=IAS_ITM_ATTACH_MOVEMENT.DOC_SER AND ROWNUM<=1)'; 
    EXECUTE IMMEDIATE 'INSERT INTO IAS_ITM_ATTACH_MOVEMENT_CB_TMP (DOC_SER) SELECT DOC_SER FROM ITEM_MOVEMENT WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_ITM_ATTACH_MOVEMENT_CB_TMP WHERE DOC_SER = M.DOC_SER AND ROWNUM <= 1)');
    EXECUTE IMMEDIATE 'UPDATE IAS_ITM_ATTACH_MOVEMENT M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_ITM_ATTACH_MOVEMENT_CB_TMP WHERE DOC_SER = M.DOC_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Itm_Srl_Cb_Auto_Br IS
  CURSOR C_BRN IS SELECT BRN_NO FROM S_BRN WHERE NVL(BRN_LGHT,0)=1 ORDER BY BRN_NO;
    EXCEPTION WHEN OTHERS THEN      
    END;
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO SET EXTERNAL_POST=-1 WHERE EXTERNAL_POST=0 
                                                                    AND DOC_TYPE NOT IN (1,3) AND EXISTS(SELECT 1 FROM WAREHOUSE_DETAILS WHERE W_CODE=IAS_ITEM_SERIALNO.W_CODE AND CONN_BRN_NO='||I.BRN_NO||' AND ROWNUM<=1)
                                                                    AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST_BR WHERE TR_SER=IAS_ITEM_SERIALNO.DOC_SER AND ROWNUM<=1)
                                                                    AND NOT EXISTS(SELECT 1 FROM GR_NOTE_BR WHERE G_SER=IAS_ITEM_SERIALNO.DOC_SER AND ROWNUM<=1)
                                                                    AND NOT EXISTS(SELECT 1 FROM IAS_WHTRNS_MST WHERE NVL(HUNG,0)=1 AND TR_SER=IAS_ITEM_SERIALNO.DOC_SER AND ROWNUM<=1)
                                                                    AND NOT EXISTS(SELECT 1 FROM GR_NOTE WHERE NVL(HUNG,0)=1 AND G_SER=IAS_ITEM_SERIALNO.DOC_SER AND ROWNUM<=1)
                                                                    AND NOT EXISTS(SELECT 1 FROM IAS_OUTGOING_MST WHERE NVL(HUNG,0)=1 AND OUT_SER=IAS_ITEM_SERIALNO.DOC_SER AND ROWNUM<=1)'; 
    EXECUTE IMMEDIATE 'INSERT INTO IAS_ITEM_SERIALNO_CB_TMP (DOC_SER) SELECT DOC_SER FROM IAS_ITEM_SERIALNO WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_ITEM_SERIALNO_CB_TMP WHERE DOC_
    EXECUTE IMMEDIATE 'UPDATE IAS_ITEM_SERIALNO M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_ITEM_SERIALNO_CB_TMP WHERE DOC_SER = M.DOC_SER AND ROWNUM <= 1)';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Postng_Cb_Auto_Br IS
  CURSOR C_BRN IS SELECT BRN_NO FROM S_BRN WHERE NVL(BRN_LGHT,0)=1 ORDER BY BRN_NO;
BEGIN 
    BEGIN
      EXECUTE IMMEDIATE 'SELECT NVL(HEAD_OFFICE,0)+1 FROM 
    EXCEPTION WHEN OTHERS THEN      
    END;
    EXECUTE IMMEDIATE 'UPDATE IAS_POST_MST M SET EXTERNAL_POST=-1 WHERE (DOC_TYPE NOT IN (4,5) OR BRN_NO<>'||I.BRN_NO||')
                                                                     AND NOT EXISTS(SELECT 1 FROM IAS_POST_MST_BR WHERE DOC_SER=M.DOC_SER AND BRN_NO='||I.BRN_
                                                                     AND NOT EXISTS(SELECT 1 FROM 
IAS_POST_MST@DB_LNK_CNTR'||V_ACTV_NO||I.BRN_NO||' WHERE DOC_SER=M.DOC_SER AND ROWNUM<=1)';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_POST_MST_CB_TMP (DOC_SER) SELECT DOC_SER FROM IAS_POST_MST WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_POST_MST_CB_TMP WHERE DOC_SER = M.DOC_SER AND ROWNUM <= 1)');   
    EXECUTE IMMEDIATE 'UPDATE IAS_POST_MST M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_POST_MST_CB_TMP WHERE DOC_SER = M.DOC_SER AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_POST_MST_BR (DOC_SER,BRN_NO) SELECT DOC_SER,'||I.BRN_NO||' FROM IAS_POST_MST_CB_TMP';
    EXECUTE IMMEDIATE 'UPDATE IAS_POST_DTL M SET EXTERNAL_POST=-1 WHERE (DOC_TYPE NOT IN (4,5) OR BRN_NO<>'||I.BRN_NO||')
                                                                     AND NOT EXISTS(SELECT 1 FROM IAS_POST_DTL_BR WHERE DOC_SER=M.DOC_SER AND NVL(DOC_SEQUENCE,0)=NVL(D.DOC_SEQUENCE,0) AND BRN_NO='||I.BRN_NO||' AND ROWNUM<=1)
                                                                     AND NOT EXISTS(SELECT 1 FROM 
IAS_POST_DTL@DB_LNK_CNTR'||V_ACTV_NO||I.BRN_NO||' WHERE DOC_SER=D.DOC_SER AND NVL(DOC_SEQUENCE,0)=NVL(D.DOC_SEQUENCE,0) AND ROWNUM<=1)';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_POST_DTL_CB_TMP (DOC_SER,DOC_SEQUENCE,BRN_NO) S
ELECT DOC_SER,DOC_SEQUENCE,BRN_NO FROM IAS_POST_DTL WHERE EXTERNAL_POST=-1';
                             P_Whr_Ins =>' D WHERE EXISTS (SELECT 1 FROM IAS_POST_DTL_CB_TMP WHERE DOC_SER = D.DOC_SER AND NVL(DOC_SEQUENCE,0)=NVL(D.DOC_SEQUENCE,0) AND ROWNUM <= 1)');                                                          
    EXECUTE IMMEDIATE 'UPDATE IAS_POST_MST M SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_POST_MST_CB_TMP WHERE DOC_SER = M.DOC_SER AND NVL(DOC_SEQUENCE,0)=NVL(D.DOC_SEQUENCE,0) AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'UPDATE IAS_POST_DTL D SET EXTERNAL_POST=85 WHERE EXISTS (SELECT 1 FROM IAS_POST_MST_CB_TMP WHERE DOC_SER = D.DOC_SER AND NVL(DOC_SEQUENCE,0)=NVL(D.DOC_SEQUENCE,0) AND ROWNUM <= 1)';
    EXECUTE IMMEDIATE 'INSERT INTO IAS_POST_DTL_BR (DOC_SER,DOC_SEQUENCE,BRN_NO) SELECT DOC_SER,DOC_SEQUENCE,'||I.BRN_NO||' FROM IAS_POST_DTL_CB_TMP';
EXCEPTION WHEN OTHERS THEN 
PROCEDURE Ias_Insrt_Cstmr_Bc_Auto_Br IS
    EXECUTE IMMEDIATE 'UPDATE CUSTOMER  SET EXTERNAL_POST=-1 WHERE NVL(CSTMR_LGHT_FLG,0)=1 AND NVL(EXTERNAL_POST,0)=0';    
    EXECUTE IMMEDIATE 'DELETE FROM CUSTOMER_TMP';
    EXECUTE IMMEDIATE 'INSERT INTO CUSTOMER_TMP (C_CODE) SELECT C_CODE FROM (SELECT C_CODE FROM CUSTOMER WHERE NVL(CSTMR_LGHT_FLG,0)=1
                                                                             SELECT C_CODE FROM 
    EXECUTE IMMEDIATE 'DELETE FROM CUSTOMER_CURR_TMP';
    EXECUTE IMMEDIATE 'INSERT INTO CUSTOMER_CURR_TMP (C_CODE,A_CY) SELECT C_CODE,A_CY FROM (SELECT C_CODE,A_CY FROM CUSTOMER_CURR C WHERE EXISTS (SELECT 1 FROM CUSTOMER WHERE C_CODE=C.C_CODE AND NVL(CSTMR_LGHT_FLG,0)=1 AND ROWNUM<=1)
                                                                                            SELECT C_CODE,A_CY FROM 
    EXECUTE IMMEDIATE 'DELETE FROM IAS_PRIV_CUSTOMER_TMP';                    
    EXECUTE IMMEDIATE 'INSERT INTO IAS_PRIV_CUSTOMER_TMP (U_ID,C_CODE,A_CY) SELECT U_ID,C_CODE,A_CY FROM (SELECT U_ID,C_CODE,A_CY FROM IAS_PRIV_CUSTOMER C WHERE EXISTS (SELECT 1 FROM CUSTOMER WHERE C_CODE=C.C_CODE AND NVL(CSTMR_LGHT_FLG,0)=1 AND ROWNUM<=1)
                                                                                                          SELECT U_ID,C_CODE,A_CY FROM 
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM CUSTOMER_TMP WHERE C_CODE = M.C_CODE AND ROWNUM <= 1)');
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM CUSTOMER_CURR_TMP WHERE C_CODE = M.C_CODE AND A_CY=M.A_CY AND ROWNUM <= 1)');
                             P_Whr_Ins =>' M WHERE EXISTS (SELECT 1 FROM IAS_PRIV_CUSTOMER_TMP WHERE U_ID = M.U_ID AND C_CODE = M.C_CODE AND A_CY=M.A_CY AND ROWNUM <= 1)');
    EXECUTE IMMEDIATE 'UPDATE CUSTOMER M SET EXTERNAL_POST=85';
    EXECUTE IMMEDIATE 'UPDATE CUSTOMER_CURR M SET EXTERNAL_POST=85';
EXCEPTION WHEN OTHERS THEN 
CREATE OR REPLACE FUNCTION  Ias_Chk_Lght_Brn_Fnc ( P_Brn_No        In S_Brn.Brn_No%TYPE , 
    --EXECUTE IMMEDIATE 'Select Nvl(Head_Office,1) From Ias_Para_Lght' INTO V_Head_Office;
    --EXECUTE IMMEDIATE 'Select Nvl(Brn_Lght,0) From S_Brn Where Brn_No='||P_Brn_No||' And RowNum<=1' INTO V_Brn_Lght;
    V_Head_Office := Ias_Gen_Pkg.Get_Cnt('Select Nvl(Head_Office,1) From Ias_Para_Lght');    
    V_Brn_Lght    := Ias_Gen_Pkg.Get_Cnt('Select Nvl(Brn_Lght,0) From S_Brn Where Brn_No='||P_Brn_No||' And RowNum<=1');
Exception 
SELECT HEAD_OFFICE   FROM IAS_PARA_LGHT"
ALTER TABLE IAS_ASSCTN_ACCNT ADD ( CONSTRAINT IAS_ASSCTN_ACCNT_ACODE_FK  FOREIGN KEY (A_CODE)  REFERENCES ACCOUNT (A_CODE))
ARS_DBA_FUNCTION_SCRIPT
ARS_DBA_PROCEDURE_SCRIPT
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/RMSSTP.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
SELECT 1   FROM DBA_SNAPSHOTS  WHERE TABLE_NAME = ''IAS_ITM_MST''  AND OWNER = USER  AND ROWNUM <= 1"
ALTER TABLE RMS_BILL_MST ADD (CONSTRAINT RMS_BILL_AMT_CHK CHECK (BILL_AMT >=0))
CREATE TABLE RMS_BILL_CMPNNT_DTL ( BILL_NO        NUMBER        NOT NULL,
ALTER TABLE RMS_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_BILL_CMPNNT_DTL_FK FOREIGN KEY (BILL_SRL) REFERENCES RMS_BILL_MST (BILL_SRL) ON DELETE CASCADE) 
ALTER TABLE RMS_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_BILL_CMPNNT_DTL_ICODE_FK FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE)) 
ALTER TABLE RMS_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_BILL_CMPNNT_DTL_WCODE_FK FOREIGN KEY (W_CODE) REFERENCES WAREHOUSE_DETAILS (W_CODE)) 
CREATE TABLE RMS_RT_BILL_CMPNNT_DTL (  RT_BILL_NO     NUMBER       NOT NULL,
ALTER TABLE RMS_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_RT_BILL_CMPNNT_DTL_FK FOREIGN KEY (RT_BILL_SRL) REFERENCES RMS_RT_BILL_MST (RT_BILL_SRL) ON DELETE CASCADE) 
ALTER TABLE RMS_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_RT_BILL_CMPNNT_ICODE_FK FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE)) 
ALTER TABLE RMS_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_RT_BILL_CMPNNT_WCODE_FK FOREIGN KEY (W_CODE) REFERENCES WAREHOUSE_DETAILS (W_CODE)) 
CREATE TABLE RMS_TAX_ITM_MOVMNT
ALTER TABLE RMS_TAX_ITM_MOVMNT ADD ( CONSTRAINT RMS_TAX_ITM_MOVMNT_PK PRIMARY KEY (DOC_TYPE,DOC_SER,I_CODE,TAX_NO,AGNCY_NO,RCRD_NO))
CREATE TABLE RMS_SUB_FOOD_GRP ( SUB_FOOD_GRP_NO       VARCHAR2(7 ),
ALTER TABLE RMS_SUB_FOOD_GRP ADD (CONSTRAINT RMS_SUB_FOOD_GRP_FK FOREIGN KEY (FOOD_GRP_NO) REFERENCES RMS_FOOD_GRP (FOOD_GRP_NO))
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'RMS_BILL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_BILL_TYP', 'Damage', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'RMS_BILL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'RMS_BILL_TYP', 'Feeding', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'RMS_ITEM_CMPND_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'RMS_ITEM_CMPND_TYP', 'Assembled Items', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'RMS_ITEM_CMPND_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'RMS_ITEM_CMPND_TYP', 'Compound Items', 1, 0)
INSERT INTO  S_FLAG
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_ITEM_CMPND_TYP', 'Other', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'RMS_DOC_SRL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'RMS_DOC_SRL_TYP', 'Accumlated by day', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'RMS_DOC_SRL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'RMS_DOC_SRL_TYP', 'Accumlated by day and terminal', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'RMS_DOC_SRL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_DOC_SRL_TYP', 'Accumlated by day and section', 1, 0)
CREATE  TABLE RMS_FOOD_GRP_ITM_CODE
ALTER TABLE RMS_FOOD_GRP_ITM_CODE ADD (CONSTRAINT RMS_FOOD_GRP_ITM_CODE_FK FOREIGN KEY (FOOD_GRP_NO) REFERENCES RMS_FOOD_GRP (FOOD_GRP_NO))
ALTER TABLE RMS_FOOD_GRP_ITM_CODE ADD (CONSTRAINT RMS_SUB_FOOD_GRP_ITM_CODE_FK FOREIGN KEY (FOOD_GRP_NO,SUB_FOOD_GRP_NO) REFERENCES RMS_SUB_FOOD_GRP (FOOD_GRP_NO,SUB_FOOD_GRP_NO))
INSERT INTO  S_FLAGS ( LANG_NO, FLG
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 6, 6, 'RMS_USR_TYP', 'Cashier', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 7, 7, 'RMS_USR_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 7, 7, 'RMS_USR_TYP', 'Order register', 1, 0)
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 1, 3577, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 2, 3577, 'Conn. items by Additional groups') 
CREATE TABLE RMS_HALL_PRV(
ALTER TABLE RMS_HALL_PRV ADD (CONSTRAINT RMS_HALL_PRV_PK PRIMARY KEY (U_ID ,BRN_NO,HALL_NO ))
ALTER TABLE RMS_HALL_PRV ADD ( CONSTRAINT RMS_HALL_PRV_BRN_NO_FK FOREIGN KEY (BRN_NO) 
ALTER TABLE RMS_HALL_PRV ADD ( CONSTRAINT RMS_HALL_PRV_HALL_NO_FK FOREIGN KEY (BRN_NO,HALL_NO) 
CREATE  TABLE RMS_CONN_FOOD_GRP_BY_BRN
ALTER TABLE RMS_CONN_FOOD_GRP_BY_BRN ADD (CONSTRAINT RMS_CONN_FOOD_GRP_BY_BRN_FK FOREIGN KEY (FOOD_GRP_NO) REFERENCES RMS_FOOD_GRP (FOOD_GRP_NO))
CREATE TABLE RMS_AUD_PRNT_ITM (  BILL_NO    NUMBER,
CREATE TABLE RMS_CMSN_MST (  CMSN_SRL         NUMBER,
CREATE TABLE RMS_CMSN_DTL (  CMSN_SRL            NUMBER                    NOT NULL,
ALTER TABLE RMS_CMSN_DTL ADD (CONSTRAINT RMS_CMSN_DTL_FK FOREIGN KEY (CMSN_SRL) REFERENCES RMS_CMSN_MST (CMSN_SRL))
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 1,  3713, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 2,  3713, 'Production and deviation Reports' ) 
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 1, 3594, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 2, 3594, 'Commission Coding') 
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 1,  3750, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 2,  3750, 'Commission Reports' ) 
INSERT INTO S_LOV_SLCT (
                      ' SELECT RMS_FOOD_GRP.FOOD_GRP_NO,DECODE(:PARAMETER.LANG_DFLT,1,FOOD_GRP_L_NM,FOOD_GRP_F_NM) FOOD_GRP_NM ,
                        FROM RMS_FOOD_GRP ,RMS_SUB_FOOD_GRP   
                        Where RMS_FOOD_GRP.FOOD_GRP_NO = RMS_SUB_FOOD_GRP.FOOD_GRP_NO    ',5,'11592,39,13074,39,8003', 
                       'AND EXISTS(SELECT 1 
                                   FROM RMS_FOOD_GRP_PRV
                                   WHERE U_ID = :PARAMETER.USER_NO
Delete From S_LOV_SLCT Where Lov_Nm='LOV_RMS_HALL' 
INSERT INTO S_LOV_SLCT (
                      ' SELECT HALL_NO,DECODE(:PARAMETER.LANG_DFLT,1,HALL_L_NM,HALL_F_NM) HALL_NM ,HALL_LOC,BRN_NO
                        FROM RMS_HALL  M Where 1=1    ',4,'11599,39,8003,50', 
                       'AND EXISTS(SELECT 1 
                                   FROM S_BRN_USR_PRIV
                                   WHERE U_ID = :PARAMETER.USER_NO
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'RMS_CMSN_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'RMS_CMSN_TYP', 'Sale Commission', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'RMS_CMSN_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'RMS_CMSN_TYP', 'Delivery Commission', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'RMS_CMSN_AMT_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'RMS_CMSN_AMT_TYP', 'Bill Amount', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'RMS_CMSN_AMT_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'RMS_CMSN_AMT_TYP', 'Delivery Amount', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'RMS_CMSN_AMT_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_CMSN_AMT_TYP', 'NO. of Pieces', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'RMS_CMSN_CLC_MTHD', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'RMS_CMSN_CLC_MTHD', 'Amount', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'RMS_CMSN_CLC_MTHD', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'RMS_CMSN_CLC_MTHD', 'Percent', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'RMS_CMSN_CLC_MTHD', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_CMSN_CLC_MTHD', 'Categories', 1, 0)
Insert into S_LOV_SLCT
   (522, 'LOV_RMS_CMSN', 11598, ' SELECT CMSN_NO,DECODE(:PARAMETER.LANG_DFLT,1,CMSN_L_NM,CMSN_F_NM) CMSN_NM ,CMSN_SRL,BRN_NO
                        FROM RMS_CMSN_MST M Where 1=1    ', 4, 
    ',2,', 'AND EXISTS(SELECT 1 
                                   FROM S_BRN_USR_PRIV
                                   WHERE U_ID = :PARAMETER.USER_NO
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 6, 6, 'RMS_RPRT_ITM_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 6, 6, 'RMS_RPRT_ITM_TYP', 'Others', 1, 0)
ALTER TABLE RMS_TRMNL ADD ( CONSTRAINT RMS_TRMNL_SCTN_NO_FK FOREIGN KEY (SCTN_NO) 
ALTER TABLE RMS_DLY_RDY_FOOD ADD ( CONSTRAINT RMS_DLY_RDY_FOOD_SCTN_NO_FK FOREIGN KEY (SCTN_NO) 
ALTER TABLE RMS_DLY_RDY_FOOD DROP CONSTRAINT PK_RMS_DLY_RDY_FOOD
ALTER TABLE RMS_DLY_RDY_FOOD ADD (CONSTRAINT RMS_DLY_RDY_FOOD_UQ UNIQUE (I_CODE,ITM_UNT, DOC_DATE, BRN_NO,SCTN_NO))
CREATE TABLE RMS_CHF_DLY_RDY_FOOD
ALTER TABLE RMS_CHF_DLY_RDY_FOOD ADD ( CONSTRAINT RMS_CHF_DLY_RDY_FOOD_SCT_NO_FK FOREIGN KEY (SCTN_NO) 
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 1,  3641, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 2,  3641, 'Food Processing' ) 
Delete From S_LOV_SLCT Where LOV_NM = 'LOV_RMS_DLY_RDY_FOOD' 
INSERT INTO S_LOV_SLCT
            ,'  SELECT DISTINCT DOC_DATE,BRN_NO,(SELECT DECODE(:PARAMETER.LANG_DFLT,1,BRN_LNAME,NVL(BRN_FNAME,BRN_LNAME)) FROM S_BRN 
                                                          WHERE BRN_NO=M.BRN_NO) BRN_NM 
                         FROM RMS_DLY_RDY_FOOD M  Where 1=1  '
            ,' AND EXISTS(SELECT 1 
                                   FROM S_BRN_USR_PRIV
                                   WHERE U_ID = :PARAMETER.USER_NO
INSERT INTO S_LOV_SLCT
            ,'  SELECT DISTINCT DOC_DATE,BRN_NO,(SELECT DECODE(:PARAMETER.LANG_DFLT,1,BRN_LNAME,NVL(BRN_FNAME,BRN_LNAME)) FROM S_BRN 
                                                          WHERE BRN_NO=M.BRN_NO) BRN_NM 
                         FROM RMS_CHF_DLY_RDY_FOOD M  Where 1=1  '
            ,' AND EXISTS(SELECT 1 
                                   FROM S_BRN_USR_PRIV
                                   WHERE U_ID = :PARAMETER.USER_NO
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'RMS_ORDR_SRL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'RMS_ORDR_SRL_TYP', 'Accumlated by day', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VA
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'RMS_ORDR_SRL_TYP', 'Accumlated by month', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'RMS_ORDR_SRL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_ORDR_SRL_TYP', 'Accumlated by year', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'RMS_ORDR_SRL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'RMS_ORDR_SRL_TYP', 'Accumlated by type and day', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 5, 5, 'RMS_ORDR_SRL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 5, 5, 'RMS_ORDR_SRL_TYP', 'Accumlated by type and month', 1, 0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 6, 6, 'RMS_ORDR_SRL_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 6, 6, 'RMS_ORDR_SRL_TYP', 'Accumlated by type and year', 1, 0)
CREATE TABLE RMS_INSURNC_ORDR_DTL(
ALTER TABLE RMS_INSURNC_ORDR_DTL ADD ( CONSTRAINT RMS_INSURNC_ORDR_DTL_UQ UNIQUE (RCRD_
UPDATE RMS_BILL_MST
  WHERE BILL_TYPE = 5
CREATE TABLE IAS_CSH_CSTMR_LCTN_BRN ( CSTMR_CODE           VARCHAR2(15) ,
ALTER TABLE IAS_CSH_CSTMR_LCTN_BRN ADD ( CONSTRAINT IAS_CSH_CSTMR_LCTN_BRN_FK 
INSERT INTO S_LOV_SLCT
   (537, 'LOV_RMS_CUSTMR_BRN', 116, 'SELECT CUST_CODE,CUST_NAME,GROUP_NAME,MOBILE_NO,INACTIVE FROM(
SELECT CUST_CODE,
  FROM IAS_CASH_CUSTMR,IAS_CASH_CUSTMR_GRP
 WHERE IAS_CASH_CUSTMR.CUST_GRP_CODE  = IAS_CASH_CUSTMR_GRP.CUST_GRP_CODE(+)
(SELECT CUST_CODE,
  FROM IAS_CASH_CUSTMR_BRN IAS_CASH_CUSTMR,IAS_CASH_CUSTMR_GRP
 WHERE IAS_CASH_CUSTMR.CUST_GRP_CODE  = IAS_CASH_CUSTMR_GRP.CUST_GRP_CODE(+)
SELECT CUST_CODE,
  FROM IAS_CASH_CUSTMR,IAS_CASH_CUSTMR_GRP
 WHERE IAS_CASH_CUSTMR.CUST_GRP_CODE  = IAS_CASH_CUSTMR_GRP.CUST_GRP_CODE(+)
WHERE 1=1  ', 5, 
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,1,1,'RMS_APRVD_RTBILL_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,1,1,'RMS_APRVD_RTBILL_TYP','Not Used',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,2,2,'RMS_APRVD_
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,2,2,'RMS_APRVD_RTBILL_TYP','Before Save',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,3,3,'RMS_APRVD_RTBILL_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,3,3,'RMS_APRVD_RTBILL_TYP','When Open Form',1,0)
CREATE TABLE RMS_INVC_TYP_CONN_SUB_LDGR (         
ALTER TABLE RMS_INVC_TYP_CONN_SUB_LDGR ADD (CONSTRAINT RMS_INVC_TYP_CONN_SUB_LDGR_UQ UNIQUE (CC_CODE,PJ_NO,ACTV_NO))
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 8, 8, 'RMS_USR_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 8, 8, 'RMS_USR_TYP', 'Feed the staff', 1, 0)
INSERT INTO IAS_FORM_NAME ( LANG_NO ,  FORM_NO, FORM_NAME ) VALUES ( 1, 3593, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,  FORM_NO, FORM_NAME ) VALUES ( 2, 3593, 'Connect Sales types By Sub.Ledgers') 
INSERT INTO  S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE,FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV, UP_DATE, LBL_NO) VALUES (1,42,42,'RMS_REP_GRP','
INSERT INTO  S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE,FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV, UP_DATE, LBL_NO) VALUES (2,42,42,'RMS_REP_GRP','Deliverymen',1,0,NULL,NULL)
Insert into S_LOV_SLCT
   (538, 'LOV_RMS_INVC_TYP_CONN_SUB_LDGR', 14236, 'SELECT BILL_DOC_TYPE
  FROM RMS_INVC_TYP_CONN_SUB_LDGR M
 WHERE 1 = 1', 3, '151,1581,50', '70,120,70', '1', ',1,3,', ',2,', 0)
CREATE TABLE RMS_NOTE_PRFX ( PRFX_NO NUMBER(6), 
INSERT INTO RMS_NOTE_PRFX
INSERT INTO RMS_NOTE_PRFX
INSERT INTO RMS_NOTE_PRFX
INSERT INTO RMS_NOTE_PRFX
INSERT INTO RMS_NOTE_PRFX
INSERT INTO RMS_NOTE_PRFX
DELETE FROM S_LOV_SLCT WHERE LOV_NM='LOV_RMS_CUSTMR'
INSERT INTO S_LOV_SLCT
   (537, 'LOV_RMS_CUSTMR', 116, 'SELECT   MOBILE_NO,
    FROM (SELECT CUST_CODE,
            FROM IAS_CASH_CUSTMR,
           WHERE NVL (INACTIVE, 0) = 0
          (SELECT CUST_CODE,
             FROM IAS_CASH_CUSTMR_BRN IAS_CASH_CUSTMR,
            WHERE NVL (INACTIVE, 0) = 0
           SELECT CUST_CODE,
             FROM IAS_CASH_CUSTMR,
            WHERE NVL (INACTIVE, 0) = 0
              AND IAS_CASH_CUSTMR.CUST_GRP_CODE = IAS_CASH_CUSTMR_GRP.CUST_GRP_CODE(+))) M  WHERE 1=1  ', 4, 
INSERT INTO S_LOV_SLCT (
                      ' SELECT M.I_CODE,NVL(SHRT_ITM_L_NM,I_NAME) I_NAME ,NVL(SHRT_ITM_F_NM,I_E_NAME) I_E_NAME,D.ITM_UNT,D.P_SIZE ,M.I_DESC
                        FROM IAS_ITM_MST M ,IAS_ITM_DTL D
                        WHERE M.I_CODE = D.I_CODE ',6,'176,177,418,180,181,146', 
                       'AND (:PARAMETER.USER_NO=1 OR EXISTS (SELECT 1 FROM PRIVILEGE_GC 
                                                        WHERE U_ID=:PARAMETER.USER_NO 
CREATE TABLE RMS_AUD_DEL_ITM ( BILL_NO NUMBER NOT NULL, 
CREATE TABLE RMS_RT_INSURNC_DTL (  RCRD_NO      NUMBER,
ALTER TABLE RMS_RT_INSURNC_DTL ADD (  CONSTRAINT FK_RMS_RT_INSURNC_DTL  FOREIGN KEY (DOC_SRL)  REFERENCES RMS_RT_INSURNC_MST (DOC_SRL) ON DELETE CASCADE )
MERGE INTO RMS_BILL_DTL D USING RMS_BILL_MST M ON (M.BILL_SRL = D.BILL_SRL) WHEN MATCHED THEN UPDATE SET D.SCTN_NO = M.SCTN_NO
MERGE INTO RMS_HST_BILL_DTL D USING RMS_HST_BILL_MST M ON (M.BILL_SRL = D.BILL_SRL) WHEN MATCHED THEN UPDATE SET D.SCTN_NO = M.SCTN_NO
MERGE INTO RMS_RT_BILL_DTL D USING RMS_RT_BILL_MST M ON (M.RT_BILL_SRL = D.RT_BILL_SRL) WHEN MATCHED THEN UPDATE SET D.SCTN_NO = M.SCTN_NO
MERGE INTO RMS_HST_RT_BILL_DTL D USING RMS_HST_RT_BILL_MST M ON (M.RT_BILL_SRL = D.RT_BILL_SRL) WHEN MATCHED THEN UPDATE SET D.SCTN_NO = M.SCTN_NO
ALTER TABLE RMS_BILL_MST MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_BILL_DTL MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_HST_BILL_MST MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_HST_BILL_DTL MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_RT_BILL_MST MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_HST_RT_BILL_MST MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_RT_BILL_DTL MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_HST_RT_BILL_DTL MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_CSTMR_ORDR_MST MODIFY SCTN_NO NOT NULL NOVALIDATE
ALTER TABLE RMS_CSTMR_ORDR_DTL MODIFY SCTN_NO NOT NULL NOVALIDATE
COMMENT ON COLUMN RMS_AUD_DEL_ITM.AUD_TYP IS '1-DELETE ITEM 2-UPDATE ITEM'
CREATE TABLE  RMS_GNR_CODE_MST (
CREATE TABLE RMS_GNR_CODE_DTL (    RCRD_NO      NUMBER,
CREATE TABLE  RMS_DLVRY_CMP(DLVRY_CMP_NO     NUMBER(5)     NOT NULL,
CREATE TABLE RMS_CSTMR_FVRT_ITM
ALTER TABLE RMS_CSTMR_FVRT_ITM ADD (PRIMARY KEY (CSTMR_CODE, I_CODE))
Insert Into Rms_Gnr_Code_Mst (Code_Typ, Typ_L_Nm, Typ_F_Nm, Ad_U_Id,Ad_Date)  Values(1,'
Insert Into Rms_Gnr_Code_Mst (Code_Typ, Typ_L_Nm, Typ_F_Nm, Ad_U_Id,Ad_Date)  Values(2,'
Insert Into Rms_Gnr_Code_Mst (Code_Typ, Typ_L_Nm, Typ_F_Nm, Ad_U_Id,Ad_Date)  Values(3,'
Insert Into Rms_Gnr_Code_Dtl (Rcrd_No, Code_No, Code_L_Nm, Code_F_Nm, Inactv,Code_Typ) Values  (1, 1, '
Insert Into Rms_Gnr_Code_Dtl (Rcrd_No, Code_No, Code_L_Nm, Code_F_Nm, Inactv,Code_Typ) Values  (1, 1, '
Insert Into Rms_Gnr_Code_Dtl (Rcrd_No, Code_No, Code_L_Nm, Code_F_Nm, Inactv,Code_Typ) Values  (1, 1, '
ALTER TABLE RMS_BILL_MST ADD FOREIGN KEY (DLVRY_CMP_NO) REFERENCES RMS_DLVRY_CMP (DLVRY_CMP_NO) ON DELETE SET NULL ENABLE VALIDATE
ALTER TABLE RMS_HST_BILL_MST ADD FOREIG
INSERT INTO S_LOV_SLCT
   (522, 'LOV_RMS_DLVRY_CMP', 15308, ' SELECT DLVRY_CMP_NO,DECODE(:PARAMETER.LANG_DFLT,1,DLVRY_CMP_L_NM,DLVRY_CMP_F_NM) DLVRY_CMP_NM,PHN_NO,CMSN_PRCNT
                        FROM RMS_DLVRY_CMP  M WHERE 1=1    ', 4, 
Alter Table RMS_CSTMR_ORDR_MST Modify  ( FLD1                        VARCHAR2(1000),
CREATE TABLE RMS_CSTMR_ORDR_CMPNNT_DTL (ORDR_NO        NUMBER        NOT NULL,
ALTER TABLE RMS_CSTMR_ORDR_CMPNNT_DTL ADD ( CONSTRAINT RMS_CSTMR_ORDR_CMPNNT_DTL_FK1 FOREIGN KEY (ORDR_SRL) REFERENCES RMS_CSTMR_ORDR_MST (ORDR_SRL) ON DELETE CASCADE)
ALTER TABLE RMS_CSTMR_ORDR_CMPNNT_DTL ADD ( CONSTRAINT RMS_CSTMR_ORDR_CMPNNT_DTL_FK2 FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE)) 
ALTER TABLE RMS_CSTMR_ORDR_CMPNNT_DTL ADD ( CONSTRAINT RMS_CSTMR_ORDR_CMPNNT_DTL_FK3 FOREIGN KEY (W_CODE) REFERENCES WAREHOUSE_DETAILS (W_CODE)) 
ALTER TABLE RMS_SRVC_TYP MODIFY BRN_NO NOT NULL NOVALIDATE
CREATE TABLE RMS_BRN_PARA ( BRN_NO NUMBER(6) NOT NULL, 
CREATE TABLE RMS_DLVRY_SLCS ( BRN_NO NUMBER(6) NOT NULL, 
ALTER TABLE RMS_DLVRY_SLCS ADD (  CONSTRAINT RMS_DLVRY_SLCS_SRVC_FK FOREIGN KEY (SRVC_NO) REFERENCES RMS_SRVC_TYP (SRVC_NO) ON DELETE CASCADE)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_V
INSERT INTO S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS   (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,  FLG_ST, FLG_PRIV)
INSERT INTO IAS_FORM_NAME ( LANG_NO ,  FORM_NO, FORM_NAME ) VALUES ( 1, 3717, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,  FORM_NO, FORM_NAME ) VALUES ( 2, 3717, 'Auditing Reports') 
ALTER TABLE RMS_TBL ADD ( CONSTRAINT RMS_TBL_SRVC_NO_FK FOREIGN KEY (SRVC_NO) 
Insert Into Rms_Gnr_Code_Mst (Code_Typ, Typ_L_Nm, Typ_F_Nm, Ad_U_Id,Ad_Date)  Values(4,'
CREATE TABLE RMS_CSTMR_NTFCTN_MST
CREATE TABLE RMS_CSTMR_NTFCTN_DTL
CREATE TABLE RMS_CSTMR_SGGSTN
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV)
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 1, 3556, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 2, 3556, 'General Code') 
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 1, 3587, '
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME ) VALUES ( 2, 3587, 'Notifications') 
INSERT INTO S_LOV_SLCT
   (522, 'LOV_RMS_CSTMR_NTFCTN', 15308, 'SELECT NTFCTN_NO,DECODE(:PARAMETER.LANG_DFLT,1,NVL(NTFCTN_L_NM,NTFCTN_F_NM),NVL(NTFCTN_F_NM,NTFCTN_L_NM)) NTFCTN_NM,F_DATE,T_DATE,F_TIME,T_TIME FROM RMS_CSTMR_NTFCTN_MST WHERE 1 = 1', 6, 
ALTER TABLE RMS_FOOD_GRP_ITM_CODE DROP RMS_FOOD_GRP_ITM_CODE_PK CASCADE
ALTER TABLE RMS_FOOD_GRP_ITM_CODE ADD (
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) VALUES(2, 43, 43, 'RMS_REP_GRP', 'Cash Customers \ Items',1, 0, NULL, NULL)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) VALUES(1, 43, 43, 'RMS_REP_GRP', '
INSERT INTO S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE,FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV, UP_DATE, LBL_NO) VALUES (2,44,44,'RMS_REP_GRP', 'Delivery Company',1, 0, NULL,NULL)
INSERT INTO S_FLAGS  (LANG_NO, FLG_SR, FLG_VALUE,FLG_CODE, FLG_DESC, FLG_ST,FLG_PRIV, UP_DATE, LBL_NO) VALUES (1,44,44,'RMS_REP_GRP','
INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO, FORM_NO, F_PARENT_NO, F_FILE_NAME, F_BT_PRIV, F_INACTIVE,SCR_TYP, DOC_TYP, SCR_ORGNL,F_ORDER_NO ) VALUES ( 'RMS',87, 3516, 3501, 'RMSS016', 1, 0,1, NULL, NULL,16)
INSERT INTO IAS_FORM_NAME ( LANG_NO ,FORM_NO, FORM_NAME  ) VALUES ( 1, 3516, '
INSERT INTO IAS_FORM_NAME ( LANG_NO , FORM_NO, FORM_NAME ) VALUES ( 2, 3516, 'Change Password') 
CREATE TABLE RMS_TAX_INPT_MOVMNT
ALTER TABLE RMS_TAX_INPT_MOVMNT
CREATE TABLE RMS_TRC_PST_ERR ( ERR_DATE   DATE DEFAULT SYSDATE,
Insert Into Rms_Gnr_Code_Mst (Code_Typ, Typ_L_Nm, Typ_F_Nm, Ad_U_Id,Ad_Date)  Values(5,'
Insert Into Rms_Gnr_Code_Mst (Code_Typ, Typ_L_Nm, Typ_F_Nm, Ad_U_Id,Ad_Date)  Values(6,'
Insert Into Rms_Gnr_Code_Mst (Code_Typ, Typ_L_Nm, Typ_F_Nm, Ad_U_Id
UPDATE RMS_RT_BILL_MST RT
           (SELECT FEEDER_NO
              FROM RMS_BILL_MST
             WHERE BILL_SRL = RT.BILL_SRL AND FEEDER_NO IS NOT NULL)
 WHERE RT_BILL_DOC_TYPE = 3 AND FEEDER_NO IS NULL
Delete From S_Lov_Slct Where Lov_Nm='LOV_RMS_RSRV'
INSERT INTO S_LOV_SLCT (LOV_NO,
             'SELECT R.RSRV_NO, R.RSRV_DATE, R.RSRV_STRT_TM, R.RSRV_END_TM, R.RSRV_DSC
                FROM RMS_RSRV_MST R
               WHERE 1=1 AND TO_CHAR(R.RSRV_DATE,''DDMMYYYY'') >= TO_CHAR(SYSDATE,''DDMMYYYY'')',
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'RMS_RSRV_ST', 'Waiting', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'RMS_RSRV_ST', 'Used', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'RMS_RSRV_ST', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_RSRV_ST', 'Canceled', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'RMS_RSRV_ST', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'RMS_RSRV_ST', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 4, 4, 'RMS_MRN_TRSM_TYP', 'Others', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 4, 4, 'RMS_MRN_TRSM_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_MRN_TRSM_TYP', 'Tickets', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'RMS_MRN_TRSM_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 2, 2, 'RMS_MRN_TRSM_TYP', 'Boats', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 2, 2, 'RMS_MRN_TRSM_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 1, 1, 'RMS_MRN_TRSM_TYP', 'Yachts', 1, 0)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 1, 1, 'RMS_MRN_TRSM_TYP', '
INSERT INTO S_LOV_SLCT
           (991, 'LOV_RMS_MRN_TRSM_PLCY', 16791, 'SELECT PLCY_NO,DECODE(:PARAMETER.LANG_DFLT,1,PLCY_L_NM,NVL(PLCY_F_NM,PLCY_L_NM)) PLCY_NM'||CHR(13)||CHR(10)||'  FROM RMS_MRN_TRSM_PLCY'||CHR(13)||CHR(10)||' WHERE 1=1 ', 2, 
Insert into S_LOV_SLCT
           (18, 'LOV_FAS_AS_CODE_RMS', 1280, 'SELECT AS_CODE , DECODE(:PARAMETER.LANG_DFLT,1,AS_A_NAME,AS_E_NAME) AS_NAME FROM   FAS_ASSETS_MST  WHERE 1=1', 2, 
Insert into S_LOV_SLCT
           (203, 'LOV_RMS_MRN_TRSM_ITM', 16785, 'SELECT ITM_NO,ITM_CODE,'||CHR(13)||CHR(10)||'
  FROM RMS_MRN_TRSM_ITM'||CHR(13)||CHR(10)||'
 WHERE 1 = 1', 6, 
INSERT INTO S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) VALUES (1, 1, 1, 'RMS_MRN_TRSM_RSRV_TYP', '
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, UP_DATE, LBL_NO)VALUES (2, 1, 1, 'RMS_MRN_TRSM_RSRV_TYP', 'Yacht',1, 0, NULL, NULL)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) VALUES (2, 2, 2, 'RMS_MRN_TRSM_RSRV_TYP', 'Event',1, 0, NULL, NULL)
INSERT INTO S_FLAGS(LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV, UP_DATE, LBL_NO) VALUES (1, 2, 2, 'RMS_MRN_TRSM_RSRV_TYP', '
DELETE FROM S_LOV_SLCT WHERE LOV_NM = 'LOV_RMS_CSTMR_RSRV'
Delete From S_Lov_Slct Where Lov_Nm='LOV_RMS_GNR_EXPNS' 
INSERT INTO S_LOV_SLCT (
                      '  SELECT  DOC_SRL,DOC_NO,DOC_DATE,DOC_DSC,DOC_AMT,M.DOC_NO_REF
                         FROM RMS_GNR_EXPNS M
                         WHERE Nvl(Pst_Flg,0) = 0 ',6,'757,292,1137,146,145,5475', 
Delete From S_Lov_Slct Where Lov_Nm='LOV_RMS_GNR_RCPTS'
INSERT INTO S_LOV_SLCT (
                      '  SELECT  DOC_SRL,DOC_NO,DOC_DATE,DOC_DSC,DOC_AMT,M.DOC_NO_REF,R.MOBILE_NO,R.C_NAME
                         FROM RMS_GNR_RCPTS M,RMS_CSTMR_ORDR_MST R
                         WHERE M.DOC_SRL_REF = R.ORDR_SRL(+)
 BEGIN
                              JOB_TYPE          => 'STORED_PROCEDURE',
 EXCEPTION 
CREATE INDEX RMS_BILL_DTL_ORDR_INDX ON RMS_BILL_DTL (ORDR_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT)
CREATE INDEX RMS_HST_BILL_DTL_ORDR_INDX ON RMS_HST_BILL_DTL (ORDR_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT)
REVOKE EXEMPT ACCESS POLICY FROM 
CREATE TABLE RMS_CSTMR_ORDR_TMP (ORDR_SRL NUMBER,ORDR_NO NUMBER ) TABLESPACE "IAS_TMP_DATA"
Delete From S_LOV_SLCT Where Lov_Nm='LOV_RMS_INSURNC' 
INSERT INTO S_LOV_SLCT (
  ' SELECT M.DOC_SRL, M.DOC_NO,DOC_DATE,M.Mobile_No,IAS_BRN_PKG.GET_BR_NM(M.BRN_NO,:PARAMETER.LANG_DFLT) BRN_NM,M.INSURNC_AMT,M.C_CODE,C_NM
                          FROM RMS_INSURNC_MST M    WHERE Nvl(Pst_Flg,0) = 0   ',8,'144,144,2701,770,50,1587,388,390', 
                       'AND EXISTS(SELECT 1 
                                   FROM S_BRN_USR_PRIV
                                   WHERE U_ID = :PARAMETER.USER_NO
Delete From S_LOV_SLCT Where Lov_Nm='LOV_RMS_RT_INSURNC' 
INSERT INTO S_LOV_SLCT (
                      ' SELECT M.DOC_SRL, M.DOC_NO,DOC_DATE,M.Mobile_No,IAS_BRN_PKG.GET_BR_NM(M.BRN_NO,:PARAMETER.LANG_DFLT) BRN_NM,M.INSURNC_AMT,M.C_CODE,C_NM
                          FROM RMS_RT_INSURNC_MST M    WHERE Nvl(Pst_Flg,0)
                       'AND EXISTS(SELECT 1 
                                   FROM S_BRN_USR_PRIV
                         WHERE U_ID = :PARAMETER.USER_NO
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (1, 3, 3, 'RMS_CMSN_TYP', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV) VALUES (2, 3, 3, 'RMS_CMSN_TYP', 'Waiter Commission', 1, 0)
CREATE TABLE RMS_INFO(FLD1 VARCHAR2(1000))
GRANT SELECT ON RMS_INFO TO ONYXPROXY
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 8, 8, 'TYPE_NAME', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 8, 8, 'TYPE_NAME', 'To Account',0, 1)
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (1, 8, 8, 'TYPE_NAME_SI', '
Insert into S_FLAGS (LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV) Values (2, 8, 8, 'TYPE_NAME_SI', 'To Account',0, 1)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,1,87001,'POST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,1,87001,'POST_DOC_TYPE','Filtering Delivery Sales',1,1,11884)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,2,87002,'POST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,2,87002,'POST_DOC_TYPE','Tools Insurance Voucher',1,1,11696)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,3,87003,'POST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,3,87003,'POST_DOC_TYPE','Tools Insurance Return Voucher',1,1,11706)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,4,87004,'POST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,4,87004,'POST_DOC_TYPE','General Expenses',1,1,12402)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,5,87005,'POST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,5,87005,'POST_DOC_TYPE','Receipts',1,1,12403)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,6,87006,'POST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,6,87006,'POST_DOC_TYPE','Inc.Dec. Cashier restaurants',1,1,14481)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,7,87007,'POST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALU
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,1,87001,'UNPOST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,1,87001,'UNPOST_DOC_TYPE','Filtering Delivery Sales',1,1,11884)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,2,87002,'UNPOST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,2,87002,'UNPOST_DOC_TYPE','Tools Insurance Voucher',1,1,11696)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,3,87003,'UNPOST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,3,87003,'UNPOST_DOC_TYPE','Tools Insurance Return Voucher',1,1,11706)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,4,87004,'UNPOST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,4,87004,'UNPOST_DOC_TYPE','General Expenses',1,1,12402)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,5,87005,'UNPOST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,5,87005,'UNPOST_DOC_TYPE','Receipts',1,1,12403)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,6,87006,'UNPOST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,6,87006,'UNPOST_DOC_TYPE','Inc.Dec. Cashier restaurants',1,1,14481)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,7,87007,'UNPOST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,7,87007,'UNPOST_DOC_TYPE','Investor Tickets',1,1,16927)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,1,1,'FEED_LMT_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,1,1,'FEED_LMT_TYP','daily',1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 1,2,2,'FEED_LMT_TYP','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV ) VALUES ( 2,2,2,'FEED_LMT_TYP','monthly',1,0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV ) VALUES (1, 13, 13, 'RMS_POST', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV ) VALUES (2, 13, 13, 'RMS_POST', 'Inc.Dec. Cashier restaurants', 1,0)
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV ) VALUES (1, 14, 14, 'RMS_POST', '
INSERT INTO  S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC,FLG_ST, FLG_PRIV ) VALUES (2, 14, 14, 'RMS_POST', 'Investor Tickets', 1,0)
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 1,87007,87007,'UNPOST_DOC_TYPE','
INSERT INTO S_FLAGS ( LANG_NO, FLG_SR, FLG_VALUE, FLG_CODE, FLG_DESC, FLG_ST, FLG_PRIV, LBL_NO ) VALUES ( 2,87007,87007,'UNPOST_DOC_TYPE','Investor Tickets',1,1,16927)
SELECT 1   FROM ALL_OBJECTS  WHERE OBJECT_TYPE = UPPER(''PACKAGE'')  AND OBJECT_NAME = UPPER(''IAS_DBS_SYS_PKG'')  AND OWNER = USER  AND ROWNUM <= 1"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3577,3502,''RMSI077'',1,0,2, NULL , NULL ,77  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3713,3504,''RMSR013'',1,0,4, NULL , NULL ,13  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3594,3502,''RMSI094'',1,0,2, NULL , NULL ,94  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SC
R_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3750,3504,''RMSR050'',1,0,4, NULL , NULL ,50  )"UPDATE S_FLAGS SET FLG_DESC=''
'' WHERE FLG_CODE = ''RMS_RPRT_ITM_TYP''  AND FLG_VALUE = 5  AND LANG_NO = 1"UPDATE S_FLAGS SET FLG_DESC=''Item Meals'' WHERE FLG_CODE = ''RMS_RPRT_ITM_TYP''  AND FLG_VALUE = 5  AND LANG_NO = 2"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3641,35
03,''RMST041'',1,0,3, NULL , NULL ,41  )"UPDATE S_FLAGS SET FLG_PRIV=1,LBL_NO=14119 WHERE FLG_CODE = ''RMS_BILL_DOC_TYP''"SELECT U_ID   FROM USER_R"SELECT FLG_VALUE,FLG_CODE   FROM S_FLAGS  WHERE FLG_CODE = ''RMS_BILL_DOC_TYP''  AND LANG_NO = 1"INSERT INTO S_FLAGS_PRIV ( U_ID,FLG_CODE,FLG_VALUE,PRIV_FLAG,AD_DATE,AD_U_ID )  VALUES ( :b1,:b2,:b3,1,SYSDATE,1  )"UPDATE RMS_INSURNC_MST SET PAID_FLG=1,PAID_U_ID=AD_U_ID,PAID_DATE=AD_DATE"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3593,3502,''RMSI093'',1,1,2, NULL , NULL ,93  )"SELECT BILL_SRL,OTHR_AMT   FROM RMS_BILL_MST  WHERE ABS(NVL(OTHR_AMT,0)) > 0  AND NVL(FREE_FLG,0) = 0"SELECT SUM(NVL(RMS_BILL_DTL.I_QTY,0) * NVL(RMS_BILL_DTL.I_PRICE,0) )   FROM RMS_BILL_DTL  WHERE RMS_BILL_DTL.BILL_SRL = :b1"UPDATE RMS_BILL_DTL SET OTHR_AMT=DECODE(NVL(I_PRICE,0),0,0,DECODE(NVL(:b1,0),0,0,(NVL(:b2,0) / :b1 ) * I_PRICE )) WHERE BILL_SRL = :b4"UPDATE RMS_BILL_MST MST SET SCTN_NO=(SELECT SCTN_NO   FROM RMS_TRMNL  WHERE TRMNL_NO = MST.TRMNL_NO )"UPDATE RMS_RT_BILL_MST MST SET SCTN_NO=(SELECT SCTN_NO   FROM RMS_TRMNL  WHERE TRMNL_NO = MST.TRMNL_NO )"UPDATE RMS_HST_BILL_MST MST SET SCTN_NO=(SELECT SCTN_NO   FROM RMS_TRMNL  WHERE TRMNL_NO = MST.TRMNL_NO )"UPDATE RMS_HST_RT_BILL_MST MST SET SCTN_NO=(SELECT SCTN_NO   FROM RMS_TRMNL  WHERE TRMNL_NO = MST.TRMNL_NO )"UPDATE RMS_CSTMR_ORDR_MST MST SET SCTN_NO=(SELECT SCTN_NO   FROM RMS_TRMNL  WHERE TRMNL_NO = MST.TRMNL_NO )"UPDATE RMS_CSTMR_ORDR_DTL D SET SCTN_NO=(SELECT M.SCTN_NO   FROM RMS_CSTMR_ORDR_MST M  WHERE M.ORDR_SRL = D.ORDR_SRL  AND ROWNUM <= 1 )"SELECT COUNT(1)   FROM RMS_GNR_CODE_MST"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 1,4,4,''RMS_CSTMR_ORDR_TYP'',''
'',1,1,SYSDATE,931  )"INSERT INTO S_FLAGS ( LANG_NO,FLG_SR,FLG_VALUE,FLG_CODE,FLG_DESC,FLG_ST,FLG_PRIV,UP_DATE,LBL_NO )  VALUES ( 2,4,4,''RMS_CSTMR_ORDR_TYP'',''Application'',1,1,SYSDATE,931  )"UPDATE IAS_FORM_NAME SET FORM_NAME=''
 '' WHERE FORM_NO = 3707  AND LANG_NO = 1"UPDATE IAS_FORM_NAME SET FORM_NAME=''Reservations Reports'' WHERE FORM_NO = 3707  AND LANG_NO = 2"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3717,3504,''RMSR017'',0,0,4, NULL , NULL ,17  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3573,3502,''RMSI073'',1,0,2, NULL , NULL ,73  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3573,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3573,''Delivery Companies Data''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3556,3502,''RMSI056'',1,0,2, NULL , NULL ,56  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3587,3502,''RMSI087'',1,0,2, NULL , NULL ,87  )"SELECT 1   FROM RMS_BILL_MST  WHERE ROWNUM <= 1"SELECT I.DOC_SRL,I.RNT_AMT,I.INSURNC_AMT,BILL_SRL   FROM RMS_BILL_MST M,RMS_INSURNC_MST I  WHERE M.BILL_SRL = I.DOC_SRL_REF  AND M.BILL_TYPE = 5"UPDATE RMS_BILL_MST SET RNT_AMT=:b1,INSRNC_AMT=:b2 WHERE BILL_SRL = :b3"UPDATE RMS_INSURNC_MST SET CARD_PAID_FLG=1 WHERE DOC_SRL = :b1
"DELETE FROM IAS_FORM_NAME WHERE FORM_NO = 3535"DELETE FROM PRIVILEGE WHERE FORM_NO = 3535"DELETE FROM FORM_DETAIL WHERE FORM_NO = 3535"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3655,3503,''RMST055'',1,1,3, NULL , NULL ,55  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3655,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3655,''Browse Point Movement''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3656,3503,''RMST056'',1,1,3, NULL , NULL ,56  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3656,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3656,''Connect Bills By Points System Customers''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3735,3504,''RMSR035'',1,1,4, NULL , NULL ,35  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3735,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3735,''Points System Reports''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3625,3503,''RMST025'',1,0,3, NULL , NULL ,25  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3625,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3625,''Orders Preparation''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3582,3502,''RMSI082'',1,1,2, NULL , NULL ,82  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3582,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3582,''Reservation Policy''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3583,3502,''RMSI083'',1,1,2, NULL , NULL ,83  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3583,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3583,''Marine Tourism''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3690,3503,''RMST090'',1,1,3, NULL , NULL ,90  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3690,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3690,''Ticket Reservation''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3691,3503,''RMST091'',1,1,3, NULL , NULL ,91  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3691,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3691,''Tickets Sales''  )"INSERT INTO FORM_DETAIL ( F_SYS,SYS_NO,FORM_NO,F_PARENT_NO,F_FILE_NAME,F_BT_PRIV,F_INACTIVE,SCR_TYP,DOC_TYP,SCR_ORGNL,F_ORDER_NO )  VALUES ( ''RMS'',87,3692,3503,''RMST092'',1,1,3, NULL , NULL ,92  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 1,3692,''
''  )"INSERT INTO IAS_FORM_NAME ( LANG_NO,FORM_NO,FORM_NAME )  VALUES ( 2,3692,''Connect Tickets by Investigators''  )"UPDATE RMS_BILL_MST SET EMPTY_TBL_FLG=1 WHERE PAID_FLG = 1"DELETE FROM S_LOV_SLCT WHERE LOV_NM = ''LOV_RMS_CSTMR_ORDR''"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 542,''LOV_RM
S_CSTMR_ORDR'',117,'' SELECT M.ORDR_SRL, M.ORDR_NO,ORDR_DATE,M.C_CODE,M.C_NAME,IAS_BRN_PKG.GET_BR_NM(G_BRN_NO => BRN_NO, P_LNG_NO => :PARAMETER.LANG_DFLT) BRN_NM,  '' || CHR(13)  || CHR(10)  || ''        DECODE(NVL(PRCSS_FLG,0),1,YS_GEN_PKG.GET_FLG_NM(P_FLG_CODE => ''''RMS_RSRV_ST'''',P_FLG_VALUE => 4,P_LNG_NO => :PARAMETER.LANG_DFLT),DECODE(NVL(RES_UNRES_ALL,0),2,YS_GEN_PKG.GET_FLG_NM(P_FLG_CODE => ''''RMS_RSRV_ST'''',P_FLG_VALUE => 3,P_LNG_NO => :PARAMETER.LANG_DFLT),YS_GEN_PKG.GET_FLG_NM(P_FLG_CODE => ''''RMS_RSRV_ST'''',P_FLG_VALUE => 1,P_LNG_NO => :PARAMETER.LANG_DFLT))) ORDR_ST ''  || CHR(13)  || CHR(10)  || ''                          FROM RMS_CSTMR_ORDR_MST M    WHERE 1=1   '' ,7,''144,144,2701,388,390,50,628'',''0,60,80,100,150,100,80'', NULL ,''3 DESC,2 DESC'', NULL ,'',4,'',''AND EXISTS (SELECT S_TYPE
                          FROM IAS_PRIV_AR
                         WHERE U_ID = :PARAMETER.USER_NO
                           AND EXISTS(SELECT 1 
                                      FROM S_BRN_USR_PRIV
                                     WHERE U_ID = :PARAMETER.USER_NO
                                       AND 1 = (CASE WHEN :PARAMETER.USER_VIEW_DOC_ENTR=0 THEN 1 ELSE (SELECT 1 
                                                                                                         FROM IAS_SHW_DOC_PRIV 
                                                                                                        WHERE U_ID = :PARAMETER.USER_NO
                                                                                                          AND ROWNUM<=1) END)'', NULL , NULL , NULL ,0  )"INSERT INTO S_LOV_SLCT ( LOV_NO,LOV_NM,LOV_LBL_NO,LOV_SQL,LOV_COL_CNT,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_HID,DFLT_ORDR,LOV_COL_LTR,LOV_COL_RTL,LOV_PRV,RPRT_DPND_WHR,RPRT_RET_COL,GRP_BY,LOV_SPCL_FLG )  VALUES ( 542,''LOV_RMS_CSTMR_RSRV'',6870,'' SELECT M.ORDR_SRL, M.ORDR_NO,ORDR_DATE,YS_GEN_PKG.GET_FLG_NM (P_FLG_CODE => ''''RMS_MRN_TRSM_RSRV_TYP'''',P_FLG_VALUE => M.SO_TYPE,P_LNG_NO => :PARAMETER.LANG_DFLT) TYP_NM,M.C_CODE,M.C_NAME,IAS_BRN_PKG.GET_BR_NM(G_BRN_NO => BRN_NO, P_LNG_NO => :PARAMETER.LANG_DFLT) BRN_NM,  '' || CHR(13)  || CHR(10)  || ''        YS_GEN_PKG.GET_FLG_NM(P_FLG_CODE => ''''RMS_RSRV_ST'''',P_FLG_VALUE => NVL(RES_UNRES_ALL,1),P_LNG_NO => :PARAMETER.LANG_DFLT) ORDR_ST ''  || CHR(13)  || CHR(10)  || ''                          FROM RMS_CSTMR_ORDR_MST M    WHERE 1=1   '' ,8,''144,144,2701,151,388,390,50,628'',''0,60,80,80,100,150,100,80'', NULL ,''3 DESC,2 DESC'', NULL ,'',5,'',''AND EXISTS (SELECT S_TYPE
                          FROM IAS_PRIV_AR
                         WHERE U_ID = :PARAMETER.USER_NO
                           AND EXISTS(SELECT 1 
                                      FROM S_BRN_USR_PRIV
                                     WHERE U_ID = :PARAMETER.USER_NO
                                       AND 1 = (CASE WHEN :PARAMETER.USER_VIEW_DOC_ENTR=0 THEN 1 ELSE (SELECT 1 
                                                                                                         FROM IAS_SHW_DOC_PRIV 
                                                                                                        WHERE U_ID = :PARAMETER.USER_NO
                                                                                                          AND ROWNUM<=1) END)'', NULL , NULL , NULL ,0  )"SELECT USE_MRN_TRSM_SYS_FLG   FROM RMS_PARA  WHERE NVL(USE_MRN_TRSM_SYS_FLG,0) = 1"UPDATE FORM_DETAIL SET F_INACTIVE=0 WHERE FORM_NO IN ( 3690,3691,3692,3582,3583  )"UPDATE FORM_DETAIL SET F_INACTIVE=1 WHERE FORM_NO IN ( 3690,3691,3692,3582,3583  )"SELECT 1   FROM RMS_BILL_MST  WHERE ROWNUM <= 1"SELECT 1   FROM RMS_HST_BILL_MST  WHERE ROWNUM <= 1"SELECT NVL(USE_PRICE_INCLUDE_VAT,0)   FROM IAS_PARA_GEN"UPDATE IAS_RT_BILL_MST SET CLC_VAT_PRICE_TYP=:b1 WHERE EXTERNAL_POST = 87  AND CLC_VAT_PRICE_TYP IS NULL"SELECT BRN_NO   FROM RMS_BILL_MST  WHERE BRN_NO IS NOT NULL   AND ROWNUM <= 1"UPDATE RMS_SRVC_TYP SET BRN_NO=:b1 WHERE BRN_NO IS NULL"DELETE FROM RMS_INFO"INSERT INTO RMS_INFO ( FLD1 )  VALUES ( :b1  )"UPDATE S_FLAGS SET FLG_PRIV=1,FLG_ST=1 WHERE FLG_CODE IN ( ''TYPE_NAME'',''TYPE_NAME_SI''  ) AND FLG_VALUE = 8"UPDATE RMS_PARA SET USE_AUTO_STK_ADJSTMNT=0"UPDATE S_FLAGS SET FLG_PRIV=1,LBL_NO=14119 WHERE FLG_CODE = ''RMS_BILL_DOC_TYP''"UPDATE S_FLAGS SET FLG_ST=1 WHERE FLG_CODE = ''TYPE_NAME_SI''  AND FLG_VALUE BETWEEN 1 AND 8"SELECT TABLE_OWNER   FROM SYS.DBA_SYNONYMS  WHERE OWNER = USER  AND SYNONYM_NAME = ''PRIVILEGE_FIXED''"SELECT COUNT(1)   FROM IAS_SYS.S_TRMNLS_RMS  WHERE SYS_NO = 5"INSERT INTO IAS_SYS.S_TRMNLS_RMS ( SERVER_NO,SYS_NO,TRMNL_NAME )  SELECT 1,5,TRMNL_NAME   FROM IAS_SYS.S_TRMNLS_AUTHRTY  WHERE SYS_NO = 5"SELECT COUNT(1)   FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST  WHERE DOC_TYPE NOT IN ( 87001,87002,87003,87004,87005  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 1,87001,''
'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 2,87001,''Filter Sales Delivery'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 1,87001,1,''
'','''',1,1  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 2,87001,1,''Filter Sales Delivery'','''',1,1  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 1,87002,''
'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 2,87002,''Tools Insurance Vouchers'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 1,87002,1,''
'','''',1,1  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 2,87002,1,''Tools Insurance Vouchers'','''',1,1  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 1,87003,''
'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,D
OC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 2,87003,''Tools Insurance Ret.Vouchers'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 1,87003,1,''
'','''',1,1  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 2,87003,1,''Tools Insurance 
Ret.Vouchers'','''',1,1  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 1,87004,''
'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 2,87004,''General Expenses'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 1,87004,1,''
'','''',1,1  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 2,87004,1,''General Expenses'','''',1,1  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 1,87005,''
'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 2,87005,''General Receipts'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 1,87005,1,''
'','''',1,1  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 2,87005,1,''General Receipts'','''',1,1  )"SELECT COUNT(1)   FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST  WHERE DOC_TYPE NOT IN ( 87006  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 1,87006,''
'',1,SYSDATE,1,1, NULL ,1  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 2,87006,''Inc.Dec. Cashier restaurants'',1,SYSDATE,1,1, NULL ,1  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 1,87006,1,''
'','''',1,1  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 2,87006,1,''Inc.Dec. Cashier restaurants'','''',1,1  )"UPDATE IAS_DOCJV_TYPE_SYSTEMS_MST SET DOC_PST=1 WHERE DOC_TYPE = 87006"UPDATE IAS_DOCJV_TYPE_SYSTEMS SET DOC_PST=1 WHERE DOC_TYPE = 87006"UPDATE FORM_DETAIL SET DOC_TYP=87001 WHERE FORM_NO = 3604  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87002 WHERE FORM_NO = 3630  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87003 WHERE FORM_NO = 3633  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87004 WHERE FORM_NO = 3644  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87005 WHERE FORM_NO = 3644  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87006 WHERE FORM_NO = 3649  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87007 WHERE FORM_NO = 3692  AND DOC_TYP IS NULL"SELECT BILL_SER   FROM IAS_BILL_MST M  WHERE NVL(M.RMS_FREE_FLG,0) IN ( 2,3,4  ) AND EXTERNAL_POST = 87"DELETE FROM IAS_POST_DTL D WHERE DOC_TYPE = 4  AND DOC_SER = :b1  AND NVL(AMT,0) = 0  AND NVL(DR_AMT,0) = 0  AND NVL(CR_AMT,0) = 0"SELECT RT_BILL_SER   FROM IAS_RT_BILL_MST M  WHERE NVL(M.RMS_FREE_FLG,0) IN ( 2,3,4  ) AND EXTERNAL_POST = 87"DELETE FROM IAS_POST_DTL D WHERE DOC_TYPE = 5  AND DOC_SER = :b1  AND NVL(AMT,0) = 0  AND NVL(DR_AMT,0) = 0  AND NVL(CR_AMT,0) = 0"UPDATE IAS_BILL_DTL D SET STK_COST=0 WHERE NVL(SERVICE_ITEM,0) = 1  AND NVL(STK_COST,0) != 0"UPDATE IAS_RT_BILL_DTL D SET STK_COST=0 WHERE NVL(SERVICE_ITEM,0) = 1  AND NVL(STK_COST,0) != 0"SELECT NVL(USE_MRN
_TRSM_SYS_FLG,0)   FROM RMS_PARA"SELECT COUNT(1)   FROM IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST  WHERE DOC_TYPE NOT IN ( 87007  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 1,87007,''
'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_SYS.IAS_DOCJV_TYPE_SYSTEMS_MST ( LANG_NO,DOC_TYPE,DOC_TYPE_NAME,AD_U_ID,AD_DATE,DOC_PST,FLG_ST,RPRT_NM,DOC_APPRVD_FLG )  VALUES ( 2,87007,''Investor Tickets'',1,SYSDATE,1,1, NULL ,0  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 1,87007,1,''
'','''',1,1  )"INSERT INTO IAS_DOCJV_TYPE_SYSTEMS ( LANG_NO,DOC_TYPE,JV_TYPE,JV_NAME,REP_NAME,FLG_ST,DOC_PST )  VALUES ( 2,87007,1,''Investor Tickets'','''',1,1  )"UPDATE S_FLAGS SET FLG_ST=1 WHERE FLG_CODE = ''RMS_POST''  AND FLG_VALUE = 14"UPDATE S_FLAGS SET FLG_ST=0 WHERE FLG_CODE = ''RMS_POST''  AND FLG_VALUE = 14"UPDATE S_FLAGS SET FLG_ST=1 WHERE FLG_CODE = ''RMS_POST''  AND FLG_VALUE = 14"UPDATE S_FLAGS SET FLG_ST=0 WHERE FLG_CODE = ''RMS_POST''  AND FLG_VALUE = 14"SELECT NVL(USE_FLTR_DLVRY_INVC,0)   FROM RMS_PARA"UPDATE S_FLAGS SET FLG_ST=1 WHERE FLG_CODE = ''RMS_POST''  AND FLG_VALUE = 8"UPDATE S_FLAGS SET FLG_ST=0 WHERE FLG_CODE = ''RMS_POST''  AND FLG_VALUE = 8"UPDATE IAS_DOCJV_TYPE_SYSTEMS SET FLG_ST=1,DOC_PST=1 WHERE DOC_TYPE BETWEEN 87001 AND 87009"UPDATE IAS_DOCJV_TYPE_SYSTEMS_MST SET FLG_ST=1,DOC_PST=1,SYS_NO=87,F_SYS=''RMS'' WHERE DOC_TYPE BETWEEN 87001 AND 87009"UPDATE FORM_DETAIL SET DOC_TYP=87001 WHERE FORM_NO = 3604  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87002 WHERE FORM_NO = 3630  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87003 WHERE FORM_NO = 3633  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87004 WHERE FORM_NO = 3644  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87005 WHERE FORM_NO = 3644  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87006 WHERE FORM_NO = 3649  AND DOC_TYP IS NULL"UPDATE FORM_DETAIL SET DOC_TYP=87007 WHERE FORM_NO = 3692  AND DOC_TYP IS NULL"INSERT INTO IAS_SYS.GNR_DDC_TBL ( DOC_TYP,DOC_TYP_NM,DOC_TYP_NM_F,FLG_ST,DOC_PST,DOC_APPRVD_FLG,TBL_DOCPST_NM,AUDIT_FLG,ARCHV_FLG,TBL_MST_NM,TBL_DTL_NM,TBL_DOCSRL_NM,TBL_DOCNO_NM,TBL_DOCDATE_NM,RPRT_NM,FORM_NO,SYS_NO,F_SYS )  VALUES ( 87001,''
'',''Filter Sales Delivery'',1,1,0,''PST_FLG'',0,0,''RMS_BILL_MST'',''RMS_BILL_DTL'',''BILL_SRL'',''BILL_NO'',''BILL_DATE'',''RMS_BILL_DLVRY'',3604,87,''RMS''  )"INSERT INTO IAS_SYS.GNR_DDC_TBL ( DOC_TYP,DOC_TYP_NM,DOC_TYP_NM_F,FLG_ST,DOC_PST,DOC_APPRVD_FLG,TBL_DOCPST_NM,AUDIT_FLG,ARCHV_FLG,TBL_MST_NM,TBL_DTL_NM,TBL_DOCSRL_NM,TBL_DOCNO_NM,TBL_DOCDATE_NM,RPRT_NM,FORM_NO,SYS_NO,F_SYS )  VALUES ( 87002,''
'',''Tools Insurance Vouchers'',1,1,0,''PST_FLG'',0,0,''RMS_INSURNC_MST'',''RMS_INSURNC_DTL'',''DOC_SRL'',''DOC_NO'',''DOC_DATE'',''RMS_INSURNC'',3630,87,''RMS''  )"INSERT INTO IAS_SYS.GNR_DDC_TBL ( DOC_TYP,DOC_TYP_NM,DOC_TYP_NM_F,FLG_ST,DOC_PST,DOC_APPRVD_FLG,TBL_DOCPST_NM,AUDIT_FLG,ARCHV_FLG,TBL_MST_NM,TBL_DTL_NM,TBL_DOCSRL_NM,TBL_DOCNO_NM,TBL_DOCDATE_NM,RPRT_NM,FORM_NO,SYS_NO,F_SYS )  VALUES ( 87003,''
'',''Tools Insurance Ret.Vouchers'',1,1,0,''PST_FLG'',0,0,''RMS_RT_INSURNC_MST'',''RMS_RT_INSURNC_DTL'',''DOC_SRL'',''DOC_NO'',''DOC_DATE'',''RMS_RT_INSURNC'',3633,87,''RMS''  )"INSERT INTO IAS_SYS.GNR_DDC_TBL ( DOC_TYP,DOC_TYP_NM,DOC_TYP_NM_F,FLG_ST,DOC_PST,DOC_APPRVD_FLG,TBL_DOCPST_NM,AUDIT_FLG,ARCHV_FLG,TBL_MST_NM,TBL_DTL_NM,TBL_DOCSRL_NM,TBL_DOCNO_NM,TBL_DOCDATE_NM,RPRT_NM,FORM_NO,SYS_NO,F_SYS )  VALUES ( 87004,''
'',''General Expenses'',1,1,0,''PST_FLG'',0,0,''RMS_GNR_EXPNS'',''RMS_GNR_EXPNS'',''DOC_SRL'',''DOC_NO'',''DOC_DATE'',''RMS_GNR_EXPNS'',3644,87,''RMS''  )"INSERT INTO IAS_SYS.GNR_DDC_TBL ( DOC_TYP,DOC_TYP_NM,DOC_TYP_NM_F,FLG_ST,DOC_PST,DOC_APPRVD_FLG,TBL_DOCPST_NM,AUDIT_FLG,ARCHV_FLG,TBL_MST_NM,TBL_DTL_NM,TBL_DOCSRL_NM,TBL_DOCNO_NM,TBL_DOCDATE_NM,RPRT_NM,FORM_NO,SYS_NO,F_SYS )  VALUES ( 87005,''
neral Receipts'',1,1,0,''PST_FLG'',0,0,''RMS_GNR_RCPTS'',''RMS_GNR_RCPTS'',''DOC_SRL'',''DOC_NO'',''DOC_DATE'',''RMS_GNR_RCPTS'',3643,87,''RMS''  )"INSERT INTO IAS_SYS.GNR_DDC_TBL ( DOC_TYP,DOC_TYP_NM,DOC_TYP_NM_F,FLG_ST,DOC_PST,DOC_APPRVD_FLG,TBL_DOCPST_NM,AUDIT_FLG,ARCHV_FLG,TBL_MST_NM,TBL_DTL_NM,TBL_DOCSRL_NM,TBL_DOCNO_NM,TBL_DOCDATE_NM,RPRT_NM,FORM_NO,SYS_NO,F_SYS )  VALUES ( 87006,''
'',''Restuarent Cashiers Diff'',1,1,0,''PRCSS'',0,0,''RMS_JRNL_DIFF_CSHR_MST'',''RMS_JRNL_DIFF_CSHR_DTL'',''DOC_SRL'',''DOC_NO'',''DOC_DATE'',''RMS_JRNL_DIFF_CSHR'',3649,87,''RMS''  )"INSERT INTO IAS_SYS.GNR_D
'',''Investors Tickets'',1,1,0,''PST_FLG'',0,0,''RMS_MRN_TRSM_VNDR_BILL'',''RMS_MRN_TRSM_VNDR_BILL'',''BILL_SRL'',''BILL_NO'',''BILL_DATE'',''RMS_MRN_TRSM_VNDR_BILL'',3692,87,''RMS''  )"UPDATE S_FLAGS SET LBL_NO=14119 WHERE FLG_CODE = ''RMS_BILL_TYP''"UPDATE S_FLAGS SET LBL_NO=13286 WHERE FLG_CODE = ''RMS_FNL_REP''"
SELECT 1   FROM RMS_PARA  WHERE MSG_TXT_CSTMR_INVC IS NOT NULL"UPDATE RMS_PARA SET MSG_TXT_CSTMR_INVC=''SELECT Ias_Gen_Pkg.Get_prompt(1 ,349) ||''''  ''''||BILL_NO||''''  ''''||Ias_Gen_Pkg.Get_prompt(1 ,141)||'''' ''''||BILL_DATE||'''' ''''||Ias_Gen_Pkg.Get_prompt(1 ,900)||''''  ''''||BILL_AMT||''''  ''''||Ias_Gen_Pkg.Get_prompt(1 ,6670) '' WHERE MSG_TXT_CSTMR_INVC IS NULL"UPDATE RMS_PARA SET MSG_TXT_CSTMR_RT_INVC=''SELECT Ias_Gen_Pkg.Get_prompt(1 ,537) ||''''  ''''||RT_BILL_NO||''''  ''''||Ias_Gen_Pkg.Get_prompt(1 ,141)||'''' ''''||RT_BILL_DATE||'''' ''''||Ias_Gen_Pkg.Get_prompt(1 ,145)||''''  ''''||RT_BILL_AMT||''''  ''''||Ias_Gen_Pkg.Get_prompt(1 ,6670) '' WHERE MSG_TXT_CSTMR_RT_INVC IS NULL"
SELECT FORM_DETAIL.FORM_NO,U_ID,F_ORDER_NO   FROM FORM_DETAIL,USER_R  WHERE F_SYS = ''RMS''  AND (USER_R.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(USER_R.U_ID) = 1 ) AND FORM_DETAIL.FORM_NO || LPAD(U_ID,5,''0'')  IN (SELECT FORM_NO || LPAD(USER_R.U_ID,5,''0'')    FROM FORM_DETAIL,USER_R  WHERE (USER_R.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(USER_R.U_ID) = 1 ) MINUS SELECT FORM_NO || LPAD(USER_R.U_ID,5,''0'')    FROM PRIVILEGE  WHERE (PRIVILEGE.U_ID = 1  OR IAS_GEN_PKG.GET_USR_ADM(PRIVILEGE.U_ID) = 1 ))"INSERT INTO PRIVILEGE ( U_ID,FORM_NO,INCLUDE_FLAG,AD_FLAG,DEL_FLAG,MOD_FLAG,VIEW_FLAG,PRINT_FLAG,F_ORDER_NO,AD_DATE,AD_U_ID )  VALUES ( :b1,:b2,1,1,1,1,1,1,:b3,IAS_GEN_PKG.GET_CURDATE,1  )"
CREATE OR REPLACE Package IAS_Gen_Pkg as
  FUNCTION order_by_name(p_icode in Ias_Itm_Mst.I_CODE%TYPE) RETURN VARCHAR2 ;
  FUNCTION LF(p_curr In VARCHAR2 ) RETURN NUMBER; 
  FUNCTION Get_Cnt (SqlStr VARCHAR2)  RETURN NUMBER;
  FUNCTION Get_CurNo (P_Acy In Varchar2)   RETURN NUMBER;
FUNCTION Get_Frst_Day RETURN DATE;
  FUNCTION Get_Final_Day RETURN DATE;
  FUNCTION Get_Sysdate  RETURN DATE ;
  FUNCTION Get_Curdate  RETURN DATE ;
  FUNCTION Get_Local_Cur  RETURN VARCHAR2 ;
  FUNCTION Get_Stk_Cur   RETURN VARCHAR2 ;
  Function Get_Cur_Rate (P_Acy       In Varchar2             ,
  FUNCTION Get_Lev_Prv (P_UserNo In Number,P_Icode Varchar2 Default Null,P_Price_Type Number Default Null,P_Wcode Number Default Null,P_Brn_No Number Default Null) RETURN NUMBER ;
FUNCTION Get_Lev_Dflt_Prv (P_UserNo In Number,P_Icode Varchar2 Default Null,P_Price_Type Number Default Null,P_Wcode Number Default Null,P_Brn_No Number Default Null) RETURN NUMBER ;
  FUNCTION Get_Frm_Prv (P_UserNo In Number , P_Frm_no In Number)  RETURN NUMBER ;
  FUNCTION Get_One_Wcode RETURN NUMBER ;
FUNCTION Get_Itm_Price_DocAcy (P_Icode   In Ias_Itm_Mst.I_CODE%TYPE,                                
  FUNCTION Get_Low_Price(P_Icode    In Ias_Itm_Mst.I_CODE%TYPE,
  FUNCTION Get_High_Price(P_Icode    In Ias_Itm_Mst.I_CODE%TYPE,
  FUNCTION Get_Itm_Price ( P_LevNo    In Number,
  PROCEDURE Get_FLDs (P_IAS_User In varchar2,P_Tab_Nm In Varchar2 ,P_WHR In varchar2 Default Null) ;
  FUNCTION  Get_Fld_Value (P_Tab_Nm In Varchar2 ,P_Fld_Nm In Varchar2,P_WHR In varchar2 Default Null)  RETURN VARCHAR2 ;
  FUNCTION  Get_Flg_Nm (P_flg_code In varchar2,P_flg_value In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
  FUNCTION  Get_Prompt (P_Lng_no In number ,P_Lb_no  In Number) RETURN CHAR;
  FUNCTION  Get_Msg
  FUNCTION  Get_Brn_Nm (P_Brn_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
  FUNCTION  Get_Frm_Nm (P_Frm_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
  FUNCTION  Get_Usr_Nm (P_Usr_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2;
  FUNCTION
  FUNCTION  Get_Usr_Apprv ( P_Usr_No In Number , 
  FUNCTION  Get_Delete_Doc_Period (P_UserNo  In Number ,
  FUNCTION  Get_Update_Doc_Period (P_UserNo  In Number ,
CREATE OR REPLACE Package Body IAS_Gen_Pkg as
 Function  order_by_name(p_icode In Ias_Itm_Mst.I_CODE%TYPE) return VARCHAR2 Is
   cursor nam is select i_name From Ias_Itm_Mst
         where i_code=p_icode ;
 Begin
 exception
FUNCTION LF(p_curr In VARCHAR2 ) RETURN NUMBER Is
  Select l_f Into L From Ex_Rate Where cur_code = p_curr ;
Exception
FUNCTION Get_Cnt (SqlStr VARCHAR2)  RETURN NUMBER IS
 Exception  
FUNCTION Get_CurNo (P_Acy In Varchar2)   RETURN NUMBER Is
  Select Cur_no 
    From Ex_Rate
   Where Cur_Code=P_Acy;
 Exception 
FUNCTION Get_Frst_Day RETURN DATE Is
  Select Min(F_date) --to_char(Min(From_date),'DD/MM/YYYY') 
    From S_PRD_DTL;
 Exception 
      Begin
              Select F_date 
                From S_PRD_DTL
               where PRD_NO=1;
        Exception 
      End;
FUNCTION Get_Final_Day RETURN DATE Is
  Select Max(T_date) --to_char(Min(From_date),'DD/MM/YYYY') 
    From S_PRD_DTL;
 Exception 
      Begin
              Select T_date 
                From S_PRD_DTL
               where PRD_NO=( Select max(PRD_NO) From S_PRD_DTL );
        Exception 
      End;
FUNCTION Get_Sysdate  RETURN DATE Is
  Select Sysdate 
    From S_PRD_MST
   Where to_char(Sysdate,'YYYY') Between  F_yr_no and T_yr_no ;
 Exception 
    Begin
      Select Sysdate 
        From S_PRD_DTL
       Where to_char(Sysdate,'DD/MM/YYYY') Between  F_DATE and T_DATE ;
     Exception 
      Select Max(t_date) Into S_SysDate From S_PRD_DTL;
    End;
FUNCTION Get_Curdate  RETURN DATE Is
  Select Sysdate Into S_SysDate From dual;
 Exception When Others Then
FUNCTION Get_Local_Cur RETURN VARCHAR2 Is
  Select Cur_Code
    From Ex_rate
   Where L_F=1;
 Exception 
FUNCTION Get_Stk_Cur RETURN VARCHAR2 Is
  Select Cur_Code
    From Ex_rate
   Where Stock_cur=1;
 Exception 
Function Get_Cur_Rate (P_Acy       In Varchar2             ,
 Begin
         Begin 
           Select Nvl(Cur_Rate,1) 
            From Ex_Rate 
             Where Cur_Code = P_Acy;
         Exception 
FUNCTION Get_Lev_Prv (P_UserNo In Number,P_Icode Varchar2 Default Null,P_Price_Type Number Default Null,P_Wcode Number Default Null,P_Brn_No Number Default Null) RETURN NUMBER Is
BEGIN    
      SELECT Lev_No 
         From Ias_Priv_Price
        Where U_Id = P_UserNo
        ORDER BY Lev_No ;  
             SELECT Ias_Pricing_Levels.Lev_No 
              From Ias_Pricing_Levels,Ias_Priv_Price
             Where  Ias_Pricing_Levels.Lev_No=Ias_Priv_Price.Lev_No
                and exists(select 1 From ias_item_price 
                            where lev_no =  Ias_Pricing_Levels.lev_no 
              ORDER BY Ias_Pricing_Levels.Lev_No ; 
 Exception
FUNCTION Get_Lev_Dflt_Prv (P_UserNo In Number,P_Icode Varchar2 Default Null,P_Price_Type Number Default Null,P_Wcode Number Default Null,P_Brn_No Number Default Null) RETURN NUMBER IS
BEGIN    
     SELECT Ias_Pricing_Levels.Lev_No 
      From Ias_Pricing_Levels,Ias_Priv_Price
     Where Nvl(Ias_Pricing_Levels.Lev_Deflt,0)=1
    ORDER BY Ias_Pricing_Levels.Lev_No ;  
         SELECT Ias_Pricing_Levels.Lev_No 
          From Ias_Pricing_Levels,Ias_Priv_Price
         Where Nvl(Ias_Pricing_Levels.Lev_Deflt,0)=1
            and exists(select 1 From ias_item_p
                        where lev_no =  Ias_Pricing_Levels.lev_no 
          ORDER BY Ias_Pricing_Levels.Lev_No ;               
 Exception
FUNCTION Get_Frm_Prv (P_UserNo In Number , P_Frm_no In Number)  RETURN NUMBER Is
BEGIN    
    Select nvl(Include_Flag,0)
      From Privilege
     Where U_Id    = P_UserNo
 Exception
FUNCTION Get_One_Wcode RETURN NUMBER Is
BEGIN    
    Select w_code,Count(1) 
      From Warehouse_details
      Group By w_code;
 Exception
FUNCTION Get_Itm_Price_DocAcy ( P_Icode    In Ias_Itm_Mst.I_CODE%TYPE,                                
    Select sum(decode(a_cy,P_acy     , i_price,
       From Ias_pricing_levels,Ias_Item_Price,Ex_rate
      Where Ias_pricing_levels.lev_no=Ias_Item_Price.lev_no
 Exception 
FUNCTION Get_Low_Price ( P_Icode    In Ias_Itm_Mst.I_CODE%TYPE,
 Select (nvl(i_price,0)),a_cy,nvl(cur_rate,1)
   From Ias_pricing_levels,Ias_Item_Price,Ex_rate
  Where Ias_pricing_levels.lev_no=Ias_Item_Price.lev_no
Exception
FUNCTION Get_High_Price ( P_Icode    In Ias_Itm_Mst.I_CODE%TYPE,
 Select (nvl(i_price,0)),a_cy,nvl(cur_rate,1)
   From Ias_pricing_levels,Ias_Item_Price,Ex_rate
  Where Ias_pricing_levels.lev_no=Ias_Item_Price.lev_no
Exception
FUNCTION Get_Itm_Price (P_LevNo    In Number,
    Begin
       Select Min(Lev_No) 
         From IAS_PRICING_LEVELS;
   Exception When Others Then
 Select A_Cy 
   From IAS_PRICING_LEVELS
 Where Lev_no=v_Lev_Num;
 Exception When Others Then
   BEGIN
     Select Lev_No 
       From Customer_Curr
      Where c_code = P_c_code
             Select Round((nvl(I_Price,0)* v_RatePrice * 1/P_BillRate),P_Frc_no) 
               From Ias_Item_Price
              Where Lev_No = v_CPL
      Exception When Others Then
    Begin
 Select Round((Nvl(I_Price,0) * v_RatePrice * 1/P_BillRate),P_Frc_no)
          From Ias_Item_Price
         Where Lev_No = v_Lev_Num
     Exception When Others Then
    End;
 Exception 
PROCEDURE Get_FLDs (P_IAS_User In varchar2, P_Tab_Nm In Varchar2 ,P_WHR In varchar2 Default Null)  Is
   Cursor F_cv Is Select COLUMN_NAME From ALL_TAB_COLUMNS
   Where OWNER=P_IAS_User And Table_Name = Upper(P_Tab_Nm) ORDER BY COLUMN_ID;
    Execute Immediate ('Insert Into '||P_Tab_Nm||' ('||v_col||')
           Select '||v_col||' From '||P_IAS_User||'.'||P_Tab_Nm||' '||P_WHR);  
 Exception     
FUNCTION Get_Fld_Value (P_Tab_Nm In Varchar2 ,P_Fld_Nm In Varchar2,P_WHR In varchar2 Default Null)  RETURN VARCHAR2 Is
    Execute Immediate ('Select '||P_Fld_Nm ||' From '|| P_Tab_Nm ||' '||P_WHR) Into  V_Fld_Value  ;
 Exception                                    
FUNCTION Get_Flg_Nm (P_flg_code In varchar2,P_flg_value In Number ,P_Lng_no In Number Default 1)  RETURN VARCHAR2 Is
 Select flg_desc 
   From s_flags
  Where lang_no=P_Lng_no
 Exception 
FUNCTION Get_Prompt (P_Lng_no In number ,P_Lb_no In Number) RETURN CHAR Is
 Select Caption_det 
   From Ias_Sys.IAS_LABELS
  Where lang_no=P_Lng_no
 Exception 
FUNCTION  Get_Msg
 Select Caption_det 
   From Ias_Sys.IAS_MSGS
  Where lang_no=P_Lng_no
 Exception When 
FUNCTION  Get_Frm_Nm (P_Frm_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2 Is
 Select Form_Name
   From Ias_Form_Name
  Where Lang_no = p_Lng_no 
 Exception When Others Then
FUNCTION  Get_Brn_Nm (P_Brn_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2 Is
 Select Decode(P_Lng_no,1,BRN_LNAME,nvl(BRN_FNAME,BRN_LNAME))
   From S_Brn
  Where Brn_no=V_Brn_No
 Exception When Others Then
FUNCTION  Get_Usr_Nm (P_Usr_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2 Is
 Select Decode(p_Lng_no,1,U_a_Name,nvl(U_e_Name,U_a_Name))
   From User_r
  Where U_Id=P_Usr_No
 Exception When Others Then
FUNCTION  Get_Usr_Adm (P_Usr_No In Number)  RETURN NUMBER Is
 Select nvl(Admin_User,0)
   From User_r
  Where U_Id=P_Usr_No
 Exception When Others Then
FUNCTION  Get_Usr_Apprv ( P_Usr_No In Number , 
 Select 1
   From ias_frm_fld_priv
  Where U_Id=P_Usr_No
 Exception 
FUNCTION Get_Update_Doc_Period (P_UserNo  In Number ,
Begin   
    Select Upd_Doc_Day_Prd ,
      From Privilege_Fixed
     Where  U_Id = P_UserNo ;
 Exception
FUNCTION Get_Delete_Doc_Period (P_UserNo  In Number ,
Begin   
    Select Del_Doc_Day_Prd ,
      From Privilege_Fixed
     Where  U_Id = P_UserNo ;
 Exception
CREATE OR REPLACE PACKAGE YS_GEN_PKG AS
  FUNCTION GET_PRD_NM (P_PRD_NO IN S_PRD_DTL.PRD_NO%TYPE ,P_LNG_NO IN NUMBER DEFAULT 1   )  RETURN VARCHAR2 ;
  PROCEDURE Get_Prd_YR_No (P_Doc_Date In Date , P_PRD_NO IN OUT NUMBER , P_YR_NO IN OUT NUMBER) ;
  FUNCTION CHK_SYSTEM_NM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE ,P_LNG_NO IN NUMBER ) RETURN  VARCHAR2 ;
  FUNCTION CHK_INACTV_SYSTEM (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE,P_BRN_USR IN S_ERP_SYSTEM_Dbs.BRN_USR%TYPE) RETURN NUMBER ;
  FUNCTION CHK_ACTV_SYSTEM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE,P_BRN_USR IN S_ERP_SYSTEM_Dbs.BRN_USR%TYPE) RETURN NUMBER ;
  FUNCTION GET_SYSTEM_SCR_NO  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE) RETURN NUMBER ;
  FUNCTION Get_Cnt (SqlStr VARCHAR2)  RETURN NUMBER ;
  FUNCTION Get_Frst_Day RETURN DATE ;
  FUNCTION Get_Final_Day RETURN DATE ;
  FUNCTION Get_Sysdate  RETURN DATE ;
  FUNCTION Get_Curdate  RETURN DATE ;
  FUNCTION Get_Local_Cur RETURN VARCHAR2 ;
  FUNCTION Chk_Cur_Code ( P_CUR_CODE IN EX_RATE.CUR_CODE%TYPE) RETURN Number;
  Function Get_Cur_Rate ( P_cur_code  In Varchar2             ,
  FUNCTION Chk_Cur_Rate( P_Cur_Code    In Varchar2           , 
  FUNCTION Get_Update_Doc_Period (P_UserNo  In Number ,
  FUNCTION Get_Delete_Doc_Period (P_UserNo  In Number ,
  FUNCTION Get_Usr_Fld_Prv ( P_Usr_No In Number , 
  FUNCTION Get_Fld_Value (P_Tab_Nm In Varchar2 ,P_Fld_Nm In Varchar2,P_WHR In varchar2 Default Null)  RETURN VARCHAR2 ;
  FUNCTION Get_Flg_Nm (P_flg_code In varchar2,P_flg_value In Number ,P_Lng_no In Number Default 1)  RETURN VARCHAR2 ;
  FUNCTION Get_Prompt (P_Lng_no In number ,P_Lbl_no In Number) RETURN VARCHAR2;
  FUNCTION Get_Msg  (P_Lng_no In number ,P_Msg_no In Number) RETURN VARCHAR2;
  FUNCTION Get_Frm_Nm (P_Frm_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2 ;
  FUNCTION GET_FRMT_FLD_FNC ( P_NO_OF_DCML IN NUMBER ) RETURN VARCHAR2;
  FUNCTION CHK_DUP_FLD_FNC ( P_TBL_NM IN VARCHAR2 ,P_FLD_NM IN VARCHAR2 ,P_FLD_VAL IN VARCHAR2) RETURN NUMBER;
  FUNCTION CHK_FLD_MNDTRY (P_FRM_NO IN FORM_DETAIL.FORM_NO%TYPE ,P_TBL_NM IN VARCHAR2 , P_FLD_NM IN VARCHAR2 )  RETURN NUMBER ;
  FUNCTION Get_Extra_Prmtrs( P_Scr_No FORM_DETAIL.FORM_NO%Type, P_Usr_No USER_R.U_ID%Type ) Return Varchar2;
  FUNCTION Chk_Lock_Rcrd (P_Tab Varchar2,P_Whr  Varchar) Return Boolean;
  FUNCTION CHECK_DATE( P_Usr_No   In Number ,
  FUNCTION Get_Doc_Typ_Frm ( P_Frm_No FORM_DETAIL.FORM_NO%Type ) Return NUMBER  ;  
  FUNCTION Get_DocTyp_Nm (P_Doc_Typ In Number ,P_Lng_no In Number Default 1)  RETURN VARCHAR2 ;                   
  FUNCTION CHK_ACTV_SYSTEM_DBS  (P_Sys_Code  In Varchar
  FUNCTION Get_Val (SqlStr VARCHAR2)  RETURN VARCHAR2;
  FUNCTION CHK_FRM_PARENT_INACTV ( P_F_PARENT_NO FORM_DETAIL.F_PARENT_NO%TYPE, P_F_INACTIVE  FORM_DETAIL.F_INACTIVE%TYPE ) RETURN NUMBER;  
CREATE OR REPLACE PACKAGE BODY YS_GEN_PKG AS
 FUNCTION GET_PRD_NM (P_PRD_NO IN S_PRD_DTL.PRD_NO%TYPE ,P_LNG_NO IN NUMBER DEFAULT 1   )  RETURN VARCHAR2 IS
 BEGIN
   SELECT DECODE(P_LNG_NO,1,PRD_L_NM,PRD_F_NM) INTO V_PRD_NM 
     FROM S_PRD_DTL 
    WHERE PRD_NO = P_PRD_NO
    EXCEPTION WHEN OTHERS THEN
PROCEDURE Get_Prd_YR_No (P_Doc_Date In Date , P_PRD_NO IN OUT NUMBER , P_YR_NO IN OUT NUMBER)  Is
    Select Prd_No , YR_NO
      From S_Prd_Dtl
     Where P_Doc_Date Between F_Date And T_Date;
  Exception
 FUNCTION CHK_SYSTEM_NM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE ,P_LNG_NO IN NUMBER ) RETURN  VARCHAR2 IS
   BEGIN
     SELECT Form_Name
       FROM S_ERP_SYSTEM S,Ias_Form_Name F
      WHERE S.Form_no = F.Form_no
   EXCEPTION
 FUNCTION CHK_INACTV_SYSTEM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE,P_BRN_USR IN S_ERP_SYSTEM_Dbs.BRN_USR%TYPE) RETURN NUMBER IS
   BEGIN
     SELECT NVL(INACTIVE,0)
       FROM S_Erp_System_Dbs
      WHERE SYS_NO = P_SYS_NO
   EXCEPTION
 FUNCTION CHK_ACTV_SYSTEM  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE,P_BRN_USR IN S_ERP_SYSTEM_Dbs.BRN_USR%TYPE) RETURN NUMBER IS
   BEGIN
     SELECT NVL(INACTIVE,0)
       FROM S_Erp_System_Dbs
      WHERE SYS_NO = P_SYS_NO
   EXCEPTION
 FUNCTION GET_SYSTEM_SCR_NO  (P_SYS_NO IN S_ERP_SYSTEM.SYS_NO%TYPE) RETURN NUMBER AS
   BEGIN
     SELECT FORM_NO
       FROM S_ERP_SYSTEM
      WHERE SYS_NO = P_SYS_NO
   EXCEPTION
FUNCTION Get_Cnt (SqlStr VARCHAR2)  RETURN NUMBER IS
 Exception  
FUNCTION Get_Frst_Day RETURN DATE I
  Select Min(F_date) --to_char(Min(From_date),'DD/MM/YYYY') 
    From S_PRD_DTL;
 Exception 
      Begin
              Select F_date 
                From S_PRD_DTL
               where PRD_NO=1;
        Exception 
      End;
FUNCTION Get_Final_Day RETURN DATE Is
  Select Max(T_date) --to_char(Min(From_date),'DD/MM/YYYY') 
    From S_PRD_DTL;
 Exception 
      Begin
              Select T_date 
                From S_PRD_DTL
               where PRD_NO=( Select max(PRD_NO) From S_PRD_DTL );
        Exception 
      End;
FUNCTION Get_Sysdate  RETURN DATE Is
  Select Sysdate 
    From S_PRD_MST
   Where to_char(Sysdate,'YYYY') Between  F_yr_no and T_yr_no ;
 Exception 
    Begin
      Select Sysdate 
        From S_PRD_DTL
       Where to_char(Sysdate,'DD/MM/YYYY') Between  F_DATE and T_DATE ;
     Exception 
      Select Max(t_date) Into S_SysDate From S_PRD_DTL;
    End;
FUNCTION Get_Curdate  RETURN DATE Is
  Select Sysdate Into S_SysDate From dual;
 Exception When Others Then
FUNCTION Get_Local_Cur RETURN VARCHAR2 Is
  Select Cur_Code
    From Ex_rate
   Where L_F=1;
 Exception 
FUNCTION Chk_Cur_Code ( P_CUR_CODE IN EX_RATE.CUR_CODE%TYPE) RETURN Number Is
  Select 1
    From Ex_rate
   Where CUR_CODE = P_CUR_CODE
 Exception 
Function Get_Cur_Rate (P_cur_code  In Varchar2             ,
 Begin
         Begin
          Select Max(Up_Date) 
           From Ias_Ex_Rate_Trace 
            Where Cur_Code = P_cur_code
         Exception 
             Begin 
               Select Nvl(Cur_Rate,1) 
                 From   Ias_Ex_Rate_Trace 
                  Where Cur_Code = P_cur_code
             Exception 
                  Begin 
                    Select Nvl(Cur_Rate,1) 
                     From Ex
                      Where Cur_Code = P_cur_code;
                  Exception 
             Begin 
             Select Nvl(Cur_Rate,1) 
              From Ex_Rate 
               Where Cur_Code = P_cur_code;
           Exception 
         Begin 
           Select Nvl(Cur_Rate,1) 
            From Ex_Rate 
             Where Cur_Code = P_cur_code;
         Exception 
FUNCTION Chk_Cur_Rate( P_Cur_Code    In Varchar2             , 
 Begin
          Begin
            Select Max(Up_Date) 
             From Ias_Ex_Rate_Trace 
              Where Cur_Code = P_Cur_Code
          Exception 
              Begin 
               Select Min_Cur_Rate , Max_Cur_Rate  
                 From   Ias_Ex_Rate_Trace 
                  Where Cur_Code = P_Cur_Code
              Exception 
        Select Nvl(Min_Cur_Rate,0) ,Nvl(Max_Cur_Rate,0)
         From Ex_Rate 
          Where Cur_Code = P_Cur_Code ;    
        Select Nvl(Min_Cur_Rate,0) ,Nvl(Max_Cur_Rate,0)
         From Ex_Rate 
          Where Cur_Code = P_Cur_Code ;             
        Select Nvl(Min_Cur_Rate,0) ,Nvl(Max_Cur_Rate,0)
         From Ex_Rate 
          Where Cur_Code = P_Cur_Code ;        
Exception 
FUNCTION Get_Update_Doc_Period (P_UserNo  In Number ,
Begin   
    Select Upd_Doc_Day_Prd ,
      From Privilege_Fixed
     Where  U_Id = P_UserNo ;
 Exception
FUNCTION Get_Delete_Doc_Period (P_UserNo  In Number ,
Begin   
    Select Del_Doc_Day_Prd ,
      From Privilege_Fixed
     Where  U_Id = P_UserNo ;
 Exception
FUNCTION Get_Usr_Fld_Prv ( P_Usr_No In Number , 
 Select 1
   From ias_frm_fld_priv
  Where U_Id=P_Usr_No
 Exception 
FUNCTION Get_Fld_Value (P_Tab_Nm In Varchar2 ,P_Fld_Nm In Varchar2,P_WHR In varchar2 Default Null)  RETURN VARCHAR2 Is
    Execute Immediate ('Select '||P_Fld_Nm ||' From '|| P_Tab_Nm ||' '||P_WHR) Into  V_Fld_Value  ;
 Exception                                    
FUNCTION Get_Flg_Nm (P_flg_code In varchar2,P_flg_value In Number ,P_Lng_no In Number Default 1)  RETURN VARCHAR2 Is
 Select flg_desc 
   From s_flags
  Where lang_no=P_Lng_no
 Exception 
FUNCTION Get_Prompt (P_Lng_no In number ,P_Lbl_no In Number) RETURN VARCHAR2 Is
 Select Caption_det 
   From Ias_Sys.IAS_LABELS
  Where lang_no=P_Lng_no
 Exception 
FUNCTION  Get_Msg    (P_Lng_no In number ,P_Msg_no In Number) RETURN VARCHAR2 Is
 Select Caption_det 
   From Ias_Sys.IAS_MSGS
  Where lang_no
 Exception When Others Then
FUNCTION  Get_Frm_Nm (P_Frm_No In Number,P_Lng_no In Number Default 1)  RETURN VARCHAR2 Is
 Select Form_Name
   From Ias_Form_Name
  Where Lang_no = p_Lng_no 
 Exception When Others Then
FUNCTION GET_FRMT_FLD_FNC ( P_NO_OF_DCML IN NUMBER ) RETURN VARCHAR2 IS
 EXCEPTION WHEN OTHERS THEN
FUNCTION CHK_DUP_FLD_FNC ( P_TBL_NM IN VARCHAR2 ,P_FLD_NM IN VARCHAR2 ,P_FLD_VAL IN VARCHAR2) RETURN NUMBER  IS
  V_SQL := 'SELECT 1 FROM '||P_TBL_NM||' 
             WHERE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE('||P_FLD_NM||',''
 EXCEPTION 
FUNCTION CHK_FLD_MNDTRY (P_FRM_NO IN FORM_DETAIL.FORM_NO%TYPE ,P_TBL_NM IN VARCHAR2 , P_FLD_NM IN VARCHAR2 )  RETURN NUMBER IS
 BEGIN
      BEGIN 
       SELECT FLD_ST INTO V_CNT 
         FROM IAS_MNDTRY_SCR_FIELDS
        WHERE FORM_NO = P_FRM_NO
      EXCEPTION WHEN OTHERS THEN
      END;      
    EXCEPTION WHEN OTHERS THEN
FUNCTION Get_Extra_Prmtrs( P_Scr_No FORM_DETAIL.FORM_NO%Type, P_Usr_No USER_R.U_ID%Type ) Return Varchar2 Is
 BEGIN
   SELECT WHR_SQL 
     From S_RP_EXTRA_PRMTRS_MST 
    WHERE Form_NO        = P_Scr_No 
  Exception When Others Then
FUNCTION Chk_Lock_Rcrd (P_Tab Varchar2,P_Whr  Varchar) Return Boolean Is
  Row_Locked Exception;
  Pragma     Exception_Init(Row_Locked, -54);
 Execute Immediate ('SELECT 1 FROM '||P_Tab ||' WHERE '||P_Whr||' AND ROWNUM <=1 FOR UPDATE NOWAIT ') Into V_Count;
EXCEPTION WHEN Row_Locked THEN
FUNCTION CHECK_DATE( P_Usr_No   In Number ,
    Begin
       Select PRD_CLS Into V_St from S_PRD_BRN_CLS
        where BRN_NO=P_BRN_NO
     Exception 
     End;
             Begin
               Select Status Into V_St from IAS_CLOSE_DAY_PERIODS 
                where P_doc_date between f_date and t_date
             Exception 
     End;
    Begin
    Select Count(1) Into V_St From date_lock 
    Where P_doc_date between ufd and utd or P_doc_date between lfd and ltd;
   Select Count(1) Into V_St from ias_date_lock_User
    where u_id = P_Usr_No
    Select Count(1) Into V_St from S_PRD_MST
           where INV_CLS = 1;
    Select Sysdate Into V_cur_Date from dual;
    Exception when no_data_found Then
   End;
FUNCTION Get_Doc_Typ_Frm ( P_Frm_No FORM_DETAIL.FORM_NO%Type ) Return NUMBER Is
 BEGIN
       SELECT Doc_Typ 
         From FORM_DETAIL 
        WHERE Form_NO        = P_Frm_No
  Exception When Others Then
FUNCTION Get_DocTyp_Nm (P_Doc_Typ In Number ,P_Lng_no In Number Default 1)  RETURN VARCHAR2 Is
 Select DOC_TYPE_NAME
   From ias_sys.IAS_DOCJV_TYPE_SYSTEMS_MST
  Where lang_no=P_Lng_no
 Exception 
FUNCTION CHK_ACTV_SYSTEM_DBS  (P_Sys_Code  In Varchar2) RETURN NUMBER Is
       BEGIN
          SELECT NVL(D.INACTIVE,0) INTO V_INACTV
            FROM S_Erp_System M,S_Erp_System_Dbs D
           WHERE M.SYS_NO  = D.SYS_NO
   Exception When Others Then 
       END;
Exception When Others Then 
FUNCTION Get_Val (SqlStr VARCHAR2)  RETURN VARCHAR2 IS
 Exception  
FUNCTION CHK_FRM_PARENT_INACTV ( P_F_PARENT_NO FORM_DETAIL.F_PARENT_NO%TYPE, P_F_INACTIVE  FORM_DETAIL.F_INACTIVE%TYPE ) RETURN NUMBER IS
    SELECT F_INACTIVE, F_PARENT_NO INTO V_F_INACTIVE, V_F_PARENT_NO FROM FORM_DETAIL WHERE FORM_NO = P_F_PARENT_NO AND ROWNUM<=1;
EXCEPTION  WHEN OTHERS THEN 
CREATE OR REPLACE PACKAGE YS_APPRVD_PKG AS
    FUNCTION  GET_LVL_NM(P_DOC_TYP IN S_APPRVD_LVL.DOC_TYP%TYPE,P_LVL_NO IN S_APPRVD_LVL.LVL_NO%TYPE)RETURN  VARCHAR2 ;
    Procedure INSRT_APPRVD_LVL(  P_DOC_TYP  IN NUMBER, 
    Procedure DEL_APPRVD_LVL( P_DOC_TYP IN NUMBER,
CREATE OR REPLACE Package Body YS_APPRVD_PKG is
FUNCTION  GET_LVL_NM(P_DOC_TYP IN S_APPRVD_LVL.DOC_TYP%TYPE,P_LVL_NO IN S_APPRVD_LVL.LVL_NO%TYPE)RETURN  VARCHAR2  IS
   BEGIN
     SELECT LVL_NM
       FROM S_APPRVD_LVL
      WHERE LVL_NO = P_LVL_NO
   EXCEPTION
Procedure DEL_APPRVD_LVL( P_DOC_TYP IN NUMBER,
    Begin
       Delete From S_APPRVD_MOV 
        Where DOC_TYP = P_DOC_TYP AND DOC_SER = P_DOC_SER   ;
    Exception
           Raise_Application_Error(-20001,'Delete From S_APPRVD_MOV = '||Sqlerrm);
    End;
Procedure INSRT_APPRVD_LVL(  P_DOC_TYP  IN NUMBER,
    Begin
       INSERT INTO S_APPRVD_MOV (LVL_NO, DOC_TYP, DOC_SER, DOC_NO, DOC_JV_TYP, DOC_DATE,APPRVD, ORDR_NO, CMP_NO, BRN_NO,BRN_YEAR, BRN_USR)
       SELECT LVL_NO, DOC_TYP, P_DOC_SER ,P_DOC_NO,P_JV_TYP,P_DOC_DATE,0, ORDR_NO,P_CMP_NO,P_BRN_NO,P_BRN_YEAR, P_BRN_USR
         FROM S_APPRVD_LVL WHERE DOC_TYP = P_DOC_TYP;
    Exception
           Raise_Application_Error(-20002,'Err When Insert Into S_Apprvd_Mov = '||Sqlerrm);
    End;
CREATE OR REPLACE PACKAGE Ys_Lov_Slct_Pkg AS
  PROCEDURE Clr_Data  ;
  PROCEDURE Slct_Data ( P_Col1 In Varchar2) ;
  PROCEDURE Deslct_Data (P_Col1 In Varchar2);
  FUNCTION  Pop_Slct_Data RETURN RCRD_TBL PIPELINED;    
  PROCEDURE Fetch_Slct_Data ( SQL_CV IN OUT RCRD_CV);
CREATE OR REPLACE PACKAGE BODY  Ys_Lov_Slct_Pkg AS
PROCEDURE Clr_Data Is
END;  
PROCEDURE Slct_Data  ( P_Col1 In Varchar2)  Is
Begin                                
PROCEDURE Deslct_Data (P_Col1 In Varchar2) Is
 Begin
 End; 
FUNCTION POP_SLCT_Data RETURN RCRD_TBL PIPELINED                              
 BEGIN
                 SELECT V_Slct_Data(Ndx).R_Col1 INTO V_Data_Rcrd FROM DUAL;                 
 EXCEPTION
PROCEDURE Fetch_Slct_Data ( SQL_CV IN OUT Rcrd_CV) IS 
       SELECT R_Col1 
              FROM TABLE(P
   EXCEPTION
CREATE OR REPLACE PACKAGE IAS_Acode_Pkg as
 FUNCTION Get_A_Name (P_a_code In ACCOUNT.A_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2 ;
 PROCEDURE Chk_Ac_code ( P_A_Code    In ACCOUNT.A_CODE%TYPE,
 FUNCTION  Chk_Ac_Conn      ( P_CONN_TYP  IN NUMBER ,
CREATE OR REPLACE PACKAGE Body IAS_Acode_Pkg as
FUNCTION Get_A_Name (P_a_code In ACCOUNT.A_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
     select Decode(P_Lng_no,1,a_name,nvl(a_name_Eng,a_name)) 
       From account
      where a_code=P_a_code ;
 Exception 
PROCEDURE Chk_Ac_code ( P_A_Code    In ACCOUNT.A_CODE%TYPE,
      Select Decode(P_Lng_No,1,M.A_NAME,nvl(M.A_NAME_ENG,M.A_NAME)), nvl(M.AC_CLOSE,0), 1 ADD_FLAG,1 VIEW_FLAG,nvl(M.Ac_Dtl_Typ,0)
        From ACCOUNT M
       Where TO_CHAR(M.A_code)   = TO_CHAR(P_A_Code)
         and EXISTS ( SELECT 1 FROM ACCOUNT_TYPES WHERE ACCOUNT_TYPE = M.A_S_M AND AFFECTED_BY_TRANS = 1 AND ROWNUM<=1)
      Begin
      Select Decode(P_Lng_No,1,M.A_NAME,nvl(M.A_NAME_ENG,M.A_NAME)), nvl(M.AC_CLOSE,0),nvl(D.ADD_FLAG,0),nvl(D.VIEW_FLAG,0),nvl(M.Ac_Dtl_Typ,0)
        From ACCOUNT M,PRIV_ACC D
       Where M.A_CODE = D.A_CODE
         and EXISTS ( SELECT 1 FROM ACCOUNT_TYPES WHERE ACCOUNT_TYPE = M.A_S_M AND AFFECTED_BY_TRANS = 1 AND ROWNUM<=1)
      Exception
 Exception 
FUNCTION  Chk_Ac_Conn      ( P_CONN_TYP  IN NUMBER ,
     Begin 
      Select 1 
        From IAS_ACCOUNT_CC
       Where TO_CHAR(A_code)   = TO_CHAR(P_A_Code)
     Exception 
      End;
          Select 1 
            From IAS_ACCOUNT_CC
           Where TO_CHAR(A_code)   = TO_CHAR(P_A_Code)
      Begin 
      Select 1 
        From IAS_ACCOUNT_PJ
       Where TO_CHAR(A_code)   = TO_CHAR(P_A_Code)
     Exception 
      End;
          Select 1 
            From IAS_ACCOUNT_PJ
           Where TO_CHAR(A_code)   = TO_CHAR(P_A_Code)
 Exception 
CREATE OR REPLACE PACKAGE YS_AC_DTL_PKG
    FUNCTION GET_AC_DTL_TYP(P_A_CODE IN ACCOUNT.A_CODE%TYPE)
    FUNCTION GET_AC_DTL_NM(P_AC_CODE_DTL   IN ACCOUNT.A_CODE%TYPE DEFAULT NULL,
    FUNCTION CHK_AC_DTL_ACY(P_AC_CODE_DTL   IN ACCOUNT.A_CODE%TYPE,
    FUNCTION CHK_INACTV_ACY(P_AC_CODE_DTL   IN ACCOUNT.A_CODE%TYPE,
CREATE OR REPLACE PACKAGE BODY YS_AC_DTL_PKG
    FUNCTION GET_AC_DTL_TYP(P_A_CODE IN ACCOUNT.A_CODE%TYPE)
    BEGIN
        SELECT NVL(AC_DTL_TYP, 0)
          FROM ACCOUNT
         WHERE A_CODE = P_A_CODE AND ROWNUM <= 1;
    EXCEPTION
    FUNCTION GET_AC_DTL_NM(P_AC_CODE_DTL   IN ACCOUNT.A_CODE%TYPE DEFAULT NULL,
    BEGIN
                SELECT DECODE(V_LNG_NO, 1, CASH_NAME, CASH_E_NAME) CSH_NM
                  FROM CASH_IN_HAND
                 WHERE CASH_NO = P_AC_CODE_DTL AND ROWNUM <= 1;
                SELECT DECODE(V_LNG_NO, 1, BANK_NAME, BANK_E_NAME) BNK_NM
                  FROM CASH_AT_BANK
                 WHERE BANK_NO = P_AC_CODE_DTL AND ROWNUM <= 1;
                SELECT DECODE(V_LNG_NO, 1, C_A_NAME, NVL(C_E_NAME, C_A_NAME)) C_NM
                  FROM CUSTOMER
                 WHERE C_CODE = P_AC_CODE_DTL AND ROWNUM <= 1;
                SELECT DECODE(V_LNG_NO, 1, V_A_NAME, NVL(V_E_NAME, V_A_NAME)) V_NM
                  FROM V_DETAILS
                 WHERE V_CODE = P_AC_CODE_DTL AND ROWNUM <= 1;
         SELECT DECODE(V_LNG_NO, 1, AC_CODE_DTL_L_NM, NVL(AC_CODE_DTL_F_NM, AC_CODE_DTL_L_NM)) V_NM
           FROM GLS_V_ACCNT_DTL
          WHERE AC_CODE_DTL = P_AC_CODE_DTL
                SELECT DECODE(V_LNG_NO, 1, EMP_L_NM, EMP_F_NM) EMP_NM
                  FROM S_EMP
                 WHERE EMP_NO = P_AC_CODE_DTL AND ROWNUM <= 1;
            SELECT DECODE(V_LNG_NO, 1, A_NAME, NVL(A_NAME_ENG, A_NAME)) AC_NM
              FROM ACCOUNT
             WHERE A_CODE = P_AC_CODE AND ROWNUM <= 1;
    EXCEPTION
    FUNCTION CHK_AC_DTL_ACY(P_AC_CODE_DTL   IN ACCOUNT.A_CODE%TYPE,
    BEGIN
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                           From Ias_Cash_In_Hand_Dtl
                                          Where Cash_No = ''' || P_AC_CODE_DTL || ''' 
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                               From Ias_Cash_At_Bank_Dtl
                                              Where Bank_No = ''' || P_AC_CODE_DTL || ''' 
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                               From Customer_Curr
                                              Where C_Code = ''' || P_AC_CODE_DTL || ''' 
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                               From Vendor_Curr
                                              Where V_Code = ''' || P_AC_CODE_DTL || ''' 
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                               From GlS_V_ACCNT_DTL_CURR
                                              Where AC_CODE_DTL = ''' || P_AC_CODE_DTL || ''' 
    EXCEPTION
    FUNCTION CHK_INACTV_ACY(P_AC_CODE_DTL   IN ACCOUNT.A_CODE%TYPE,
    BEGIN
PKG.GET_CNT('Select 1
                                           From Ias_Cash_In_Hand_Dtl
                                          Where Cash_No = ''' || P_AC_CODE_DTL || ''' 
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                               From Ias_Cash_At_Bank_Dtl
                                              Where Bank_No = ''' || P_AC_CODE_DTL || ''' 
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                               From Customer_Curr
                                              Where C_Code = ''' || P_AC_CODE_DTL || ''' 
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                               From Vendor_Curr
                                              Where V_Code = ''' || P_AC_CODE_DTL || ''' 
                V_CNT := IAS_GEN_PKG.GET_CNT('Select 1
                                               From AC_CODE_DTL_CURR
                                              Where AC_CODE_DTL = ''' || P_AC_CODE_DTL || ''' 
    EXCEPTION
CREATE OR REPLACE PACKAGE IAS_Brn_Pkg as
    FUNCTION    Get_Br_Nm        ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_Lng_no In Number) Return VARCHAR2;
    FUNCTION    Get_Br_Cmp       ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    )   Return      Number;
    PROCEDURE   Get_Brn_Cmp_Ser  ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_CMP_NO In Out S_BRN.Cmp_NO%TYPE) ;
    FUNCTION    Chk_Usr_Brn_Prv  ( P_UserNo    In Number               ,   G_BRN_NO    In Number,P_Priv_Type In Varchar2)  RETURN NUMBER ;
    FUNCTION    Chk_Brn_Cmp_Ser  ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_CMP_NO In S_BRN.Cmp_NO%TYPE) Return NUMBER;
    FUNCTION    Get_Br_Inf       ( G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_Inf_Type  In Varchar2)   Return   VARCHAR2;
    FUNCTION    Get_Brn_Usr_Con  ( P_UserNo    In USER_R.U_ID%TYPE     )   Return      NUMBER ;
    FUNCTION    Get_Cst_Brn_Conn ( P_C_Code In CUSTOMER.C_CODE%TYPE ) Return NUMBER ;    
    FUNCTION    Get_Cmp_Nm      (    P_CMP_NO    In S_CMPNY.CMP_NO%TYPE    ,   P_Lng_no In Number) Return VARCHAR2 ;
CREATE OR REPLACE PACKAGE Body IAS_Brn_Pkg as
    FUNCTION    Get_Br_Nm      (    G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_Lng_no In Number) Return VARCHAR2 Is
    Select Decode(P_Lng_no,1,Brn_Lname,nvl(Brn_Fname,Brn_Lname)) 
        From S_Brn
        where Brn_No = G_BRN_NO and RowNum<=1;
Exception when others then
    FUNCTION    Get_Br_Cmp     (   G_BRN_NO    In S_BRN.BRN_NO%TYPE    )   Return      NUMBER Is 
    Select Cmp_No 
        From S_Brn
        where Brn_No = G_BRN_NO and RowNum<=1;
Exception When others then
    PROCEDURE   Get_Brn_Cmp_Ser(    G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_CMP_NO In Out S_BRN.Cmp_NO%TYPE) Is
    Select     Cmp_No
        From    S_Brn
        where   Brn_No  =   G_BRN_NO 
Exception When others then
    FUNCTION    Chk_Usr_Brn_Prv(   P_UserNo    In Number               ,   G_BRN_NO    In Number,P_Priv_Type In Varchar2)  RETURN NUMBER Is
BEGIN   
        Select Decode(Upper(P_Priv_Type),'ADD',nvl(Add_Flag,0),nvl(View_Flag,0))
            From S_BRN_USR_PRIV
            Where U_Id   = P_UserNo and Brn_No = G_BRN_NO  and Rownum <=1 ;
Exception When others then
    FUNCTION    Chk_Brn_Cmp_Ser(   G_BRN_NO    In S_BRN.BRN_NO%TYPE,   P_CMP_NO In S_BRN.Cmp_NO%TYPE) RETURN NUMBER Is
        Begin
            Select      1
                From    S_Brn
                where   Brn_No  =   G_BRN_NO
        Exception When Others Then
        End;
Exception When others then
    FUNCTION    Get_Br_Inf     (    G_BRN_NO    In S_BRN.BRN_NO%TYPE    ,   P_Inf_Type  In Varchar2)   Return   VARCHAR2 Is
        Begin
        'Select '||P_Inf_Type||' 
                From S_Brn
                where Brn_No = '||G_BRN_NO||' and RowNum<=1 ' 
        Exception When others then
        End;
Exception When others then
    FUNCTION    Get_Brn_Usr_Con( P_UserNo    In USER_R.U_ID%TYPE  )   Return      NUMBER Is
    Select Conn_Brn_No
        From User_R
        where U_Id = P_UserNo and RowNum<=1;
Exception When others then
FUNCTION    Get_Cst_Brn_Conn( P_C_Code In CUSTOMER.C_CODE%TYPE ) Return NUMBER Is
Select Conn_Brn_No
    From Customer
    where C_code = P_C_Code and RowNum<=1;
Exception When others then
FUNCTION    Get_Cmp_Nm      (    P_CMP_NO    In S_CMPNY.CMP_NO%TYPE    ,   P_Lng_no In Number) Return VARCHAR2 Is
    Select Decode(P_Lng_no,1,CMP_LNAME,nvl(CMP_FNAME,CMP_LNAME)) 
        where CMP_NO = P_CMP_NO and RowNum<=1;
Exception when others then
CREATE OR REPLACE PACKAGE IAS_Cc_Code_Pkg as
 FUNCTION Get_Cc_Name  (P_cc_code In COST_CENTERS.CC_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2;
 FUNCTION Get_CC_No    (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER ;
 FUNCTION Get_CC_SER   (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER ;
 FUNCTION Get_C_S_M    (P_C_S_M In Cost_centers.C_S_M%TYPE) RETURN Number; 
CREATE OR REPLACE PACKAGE BODY IAS_Cc_Code_Pkg as
FUNCTION Get_Cc_Name (P_cc_code In COST_CENTERS.CC_CODE%TYPE,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
     select Decode(P_Lng_no,1,cc_a_name,nvl(cc_e_name,cc_a_name)) 
       From cost_centers
      where cc_code=P_cc_code
    Exception 
FUNCTION Get_CC_No (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER Is
  Select cc_no 
    From cost_centers
     where cc_code=P_cc_code
 Exception 
FUNCTION Get_CC_SER (P_cc_code In COST_CENTERS.CC_CODE%TYPE)   RETURN NUMBER Is
  Select c_sr 
    From cost_centers
     where cc_code=P_cc_code
 Exception 
FUNCTION Get_C_S_M (P_C_S_M In cost_centers.c_S_m%TYPE) RETURN Number Is
 Begin
     Select Decode(Count(Distinct C_LEVEL),1,0,Min(C_Level))  
       From cost_centers
      where C_s_m=P_c_s_m;     
 Exception 
CREATE OR REPLACE Package IAS_Check_Sys_Pkg Is
  PROCEDURE Set_Sys_Prmtrs ( Lang_no In NUMBER ,U_id In NUMBER);
  Function Check_Cur_Rate(P_Accur     In Varchar2             , 
  PROCEDURE Check_Date ( P_Doc_Date In Date,P_Scr_Type In Varchar2,
  PROCEDURE Check_Bt_Date (P_Fd In Out Date,P_Td In Out Date);
  PROCEDURE Check_Bt_Value(P_FN In Out Varchar2,P_TN In Out Varchar2,P_Type In Varchar2 Default 'N');
  FUNCTION  Check_Ac_Acy_Inctv
  FUNCTION  Check_Use_Cc
  FUNCTION Check_Inv_Close RETURN NUMBER;  
  FUNCTION Check_Lmt_Cost_Itm ( P_Wtavg_Type In NUMBER,
CREATE OR REPLACE Package Body IAS_Check_Sys_Pkg Is
Procedure Set_Sys_Prmtrs ( Lang_no NUMBER ,U_i
Function Check_Cur_Rate(P_Accur     In Varchar2             , 
 Begin
        Select Nvl(Min_Cur_Rate,0) ,Nvl(Max_Cur_Rate,0)
         From Ex_Rate 
          Where Cur_Code = P_Accur ;               
Exception 
PROCEDURE Check_Date( P_Doc_Date In Date,
    Begin
       Select nvl(INACTV,0), 0
         From S_PRD_DTL 
        where P_doc_date between F_date and t_date;
       Select nvl(INACTV,0),nvl(PRD_CLS,0) 
         From S_PRD_BRN_CLS 
        where P_doc_date between F_date and t_date
     Begin
       Select Status Into cnt From IAS_CLOSE_DAY_PERIODS 
        where P_doc_date between f_date and t_date
     Exception 
     End;
     Exception 
   End;
     Begin
 /*  Select Count(1) Into cnt 
    From date_lock 
    where P_doc_date between ufd and utd or P_doc_date between lfd and ltd;
   Select Count(1) Into cn
    From ias_date_lock_User
    where u_id = User_Id
    Select Count(1) Into cnt 
      From S_PRD_MST
           where INV_CLS = 1;
   /* Select Sysdate Into sd From dual;
    Exception 
   End;
PROCEDURE Check_Bt_Date (P_Fd In Out Date,P_Td In Out Date) Is
Exception 
PROCEDURE Check_Bt_Value (P_FN In Out Varchar2,P_TN In Out Varchar2,P_Type In Varchar2 Default 'N' ) Is
Exception 
FUNCTION  Check_Ac_Acy_Inctv
  Select nvl(Inactive,0)
    From Account_curr
   Where a_code = P_a_code
  Select nvl(Inactive,0)
    From customer_curr
   Where c_code = P_a_code
  Select nvl(Inactive,0)
    From Ias_cash_in_hand_dtl
   Where cash_no = P_a_code
  Select nvl(Inactive,0)
    From Ias_cash_at_bank_dtl
   Where bank_no = P_a_code
 Exception 
FUNCTION  Check_Use_Cc
  Select nvl(Use_cc,1)
    From Account
   Where a_code = P_a_code
 Exception When Others Then
FUNCTION Check_Inv_Close RETURN NUMBER Is
  Select 1 Into cnt From S_PRD_MST
   Where inv_cls = 1
 Exception 
Function Check_Lmt_Cost_Itm ( P_Wtavg_Type In Number,
Begin  
          Select 1 
            From Ias_Itm_Mst 
           Where I_Code =P_I_Code
              Begin
               Select 1 
                    From Ias_Itm_Wcode 
                   Where I_Code =P_I_Code
               Exception
              End;
                      /*Select 1 
                        From Ias_Itm_Wcode 
                       Where i_code =P_I_Code
                          Select 1 
                            From Ias_Itm_Wcode ,Ias_Itm_Mst
                           Where Ias_Itm_Mst.I_Code=Ias_Itm_Wcode.I_Code
Exception 
CREATE OR REPLACE PACKAGE IAS_DBS_Sys_Pkg Is
  FUNCTION  Check_Cons (P_ConsNm   In VARCHAR2 Default Null,
  FUNCTION  Check_Cons_St ( P_ConsNm   In VARCHAR2 Default Null,
  FUNCTION  Get_Cons_Name ( P_TabNm In VARCHAR2 Default Null,P_ConsType In VARCHAR2 Default Null ,
  FUNCTION  Check_Object ( P_ObjNm In VARCHAR2 ,P_ObjType In VARCHAR2 Default Null , P_ColNm In VARCHAR2 Default Null) RETURN NUMBER ;
  PROCEDURE Check_St_OBJ ( P_Result In Out NUMBER ,P_ObjNm In VARCHAR2 Default Null) ;
  FUNCTION  Check_TabSp ( P_TsNm In VARCHAR2 ) RETURN NUMBER ;
  FUNCTION Check_Ias_User( P_Brn_Year In  number ,P_Brn_no   In  number) RETURN varchar2 ;
  FUNCTION Get_Comment ( P_Lng     In number,
  PROCEDURE ALTR_DBS( P_TB IN VARCHAR2, P_TR_TYPE IN VARCHAR2,P_FD IN VARCHAR2);
CREATE OR REPLACE PACKAGE Body IAS_DBS_Sys_Pkg IS
FUNCTION Check_Cons ( P_ConsNm   In VARCHAR2 Default Null, 
 Select Count(1) 
 From User_constraints a, User_cons_columns b
Where a.owner=b.owner
 Exception 
FUNCTION Check_Cons_St ( P_ConsNm   In VARCHAR2 Default Null, 
 Select Count(1) 
 From User_constraints a, User_cons_columns b
Where a.owner=b.owner
 Exception 
FUNCTION Get_Cons_Name ( P_TabNm In VARCHAR2 Default Null,P_ConsType In VARCHAR2 Default Null ,
   Select a.constraint_name Into  v_ConsNm 
   From User_constraints a,User_cons_columns b
    where a.owner=b.owner
 Exception 
FUNCTION Check_Object ( P_ObjNm In VARCHAR2 , P_ObjType In VARCHAR2 Default Null , P_ColNm In VARCHAR2 Default Null) RETURN NUMBER IS
 Select 1 Into Cnt 
   From User_Tab_Columns 
  where Table_Name =Upper(P_ObjNm) 
 Select 1 Into Cnt 
   From User_Objects
  Where Object_Name = Upper(P_ObjNm)
 Exception 
PROCEDURE Check_St_OBJ ( P_Result In Out NUMBER ,P_ObjNm In VARCHAR2 Default Null ) Is
 Select 1 
   From User_Objects
  where STATUS='INVALID'
 Cursor c1 Is Select Decode(OBJECT_TYPE,'PACKAGE BODY','PACKAGE',OBJECT_T
                From User_objects
               Where Status='INVALID'
 Begin
 Exception
     End;
    End;
 Exception
FUNCTION  Check_TabSp ( P_TsNm In VARCHAR2 ) RETURN NUMBER Is
 Select 1 Into Cnt 
   From User_Tablespaces 
  where TABLESPACE_NAME =Upper(P_TsNm) 
 Exception 
Function Check_Ias_User( P_Brn_Year In  Number 
    Begin
         Select UserName
           From All_Users
          where USERNAME='IAS'||P_Brn_Year||P_Brn_No
    Exception
    End;
FUNCTION Get_Comment ( P_Lng     In Number,
      Select COMMENTS 
        From User_Tab_Comments
       where TABLE_NAME = P_TabNm
      Select COMMENTS 
        From ALL_Tab_Comments
       where OWNER = P_Usr_Nm
      Select COMMENTS 
        From User_Col_Comments
       where TABLE_NAME = P_TabNm
      Select COMMENTS 
        From ALL_Col_Comments
       where Owner = P_Usr_Nm
 Begin
   Exception 
 Exception 
PROCEDURE ALTR_DBS( P_TB IN VARCHAR2, P_TR_TYPE IN VARCHAR2,P_FD IN VARCHAR2) Is
 Execute Immediate 'ALTER TABLE '||P_TB||' '||P_TR_TYPE||' '||P_FD;
Exception
CREATE OR REPLACE Package IAS_Itm_Pkg as
 PROCEDURE Get_Itm_Name ( P_Lng_no In Number,P_icode  In Ias_Itm_Mst.I_CODE%TYPE,P_i_name Out varchar2,P_idesc Out varchar2) ;
 FUNCTION  Get_Itm_Name (p_i_code  In Ias_Itm_Mst.I_CODE%TYPE, P_Lng_no In Number)  RETURN VARCHAR2 ;
 PROCEDURE Get_Itm_Info (  P_Lng_no   In  Number,
 FUNCTION Get_Grand_Avlqty(P_icode In Ias_Itm_Mst.I_CODE%TYPE,
 FUNCTION Get_Grand_Wtavg(P_Wtavg_Type In NUMBER,
 FUNCTION Check_Srv_Itm(P_icode    In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER;
 FUNCTION Check_Kit_Itm(P_icode    In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER;
FUNCTION Check_NoSale_Itm(P_Icode   In Ias_Itm_Dtl.I_CODE%TYPE ,
 FUNCTION Check_Itm_Wcode_Inactv (P_I_code In Ias_Itm_Mst.I_CODE%TYPE,P_w_code In Warehouse_details.W_CODE%TYPE) RETURN NUMBER ;
 PROCEDURE Get_I_Code( P_Barcode In IAS_ITM_UNT_BARCODE.BARCODE%TYPE ,P_I_Code IN OUT Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt IN OUT Ias_Itm_Dtl.Itm_Unt%Type) ;
 FUNCTION Get_Last_Incom_Date(P_I_code Ias_Itm_Mst.I_CODE%TYPE, P_W_code In Warehouse_Details.W_CODE%TYPE Default Null ) Return DATE;
 Function Fetch_Itm_Nm_Price_Order (P_I_Code In Ias_Itm_Mst.I_Code%Type )Return Varchar2 ;
FUNCTION Get_MaxGrand_Size ( P_icode   In Ias_Itm_Mst.I_CODE%TYPE) return NUMBER;          
Function Get_Itm_Activity (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Number ;
PROCEDURE Get_Itm_Activity_Wcode_Info (P_W_Code       In  Warehouse_Details.W_Code%Type       ,
  Function Get_Icode_One_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Itm_Unt%Type ;                                                                   
  Function Get_Icode_Unit_By_Lvl (P_I_Code  In Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type) Return Ias_Itm_Dtl.Itm_Unt%Type;
  Function Chk_Icode_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type    ,
  Function Get_Icode_Min_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;
  Function Get_Icode_Purch_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type;
  Function Get_Icode_Sales_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type;                         
  Function Get_Icode_Price_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;
  Function Get_Icode_Man_Inv_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type ;  
  Function Get_Icode_Vndr (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Mst.I_Code%Type;                                                
  Function Get_Icode_Size_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type) Return Number; 
  Function Get_Max_Lvl_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Lvl_Unit%Type;    
  Function Get_Icode_Unt  (P_I_Code In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Varchar2 ;
  Function Get_Icode_Size (P_I_Code In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Number   ;              
  Function Get_Itm_Unt_Lvl ( P_I_Code In  Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type  ) Return Varchar2 ; 
Function Get_Itm_Price (  P_Price_Type In Ias_Para_Inv.Price_Type%Type   ,
CREATE OR REPLACE Package Body IAS_Itm_Pkg as
PROCEDURE Get_Itm_Name (P_Lng_no In Number,P_icode  In Ias_Itm_Mst.I_CODE%TYPE,P_i_name Out varchar2,P_idesc Out varchar2) IS
   Select Decode(P_lng_no,1,nvl(I_name,I_e_name),nvl(I_e_name,I_name)),i_desc
     From Ias_Itm_Mst
    Where i_code=P_icode
 Exception 
FUNCTION  Get_Itm_Name (p_i_code  In Ias_Itm_Mst.I_CODE%TYPE, P_Lng_no In Number)  RETURN VARCHAR2 IS
   Select Decode(P_lng_no,1,I_name,nvl(I_e_name,I_name))
     From Ias_Itm_Mst
    Where i_code=p_i_code
 Exception 
PROCEDURE Get_Itm_Info ( P_Lng_no   In  Number,
   Select Decode(P_lng_no,1,nvl(I_name,I_e_name),nvl(I_e_name,I_name)),i_desc,
     From Ias_Itm_Mst
    Where i_code=P_icode;
 Exception 
FUNCTION Get_Grand_Avlqty( P_Icode In Ias_Itm_Mst.I_CODE%TYPE,
    Select Sum(avlq) 
      From ( Select sum(distinct Avl_qty) avlq,w_code  
               From Ias_Itm_Wcode
              Where Ias_Itm_Wcode.I_Code = P_Icode
              group by  w_code  );
    Select Sum(distinct  Avl_qty) 
      Into avlq  From Ias_Itm_Wcode
     where Ias_Itm_Wcode.I_Code = P_Icode
Exception
 FUNCTION Get_Grand_Wtavg( P_Wtavg_Type In NUMBER,
 Begin
           Begin
              Select Nvl(I_cwtavg,0)
                From Ias_Itm_Mst 
               Where I_code=P_Icode
           Exception
               Begin  
                  Select Nvl(I_Cwtavg,0) 
                    From Ias_Itm_Wcode 
                   Where I_code  = P_Icode
               Exception 
                Begin                                       
                    Select Max(Nvl(I_Cwtavg,0)) 
                      From Ias_Itm_Wcode 
                     Where I_code    = P_Icode
                Exception 
 Exception
FUNCTION Check_Srv_Itm(P_icode In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER Is
 Select 1 
   From Ias_Itm_Mst
  where i_code  = P_icode
 Exception 
FUNCTION Check_Kit_Itm(P_icode In Ias_Itm_Mst.I_CODE%TYPE) Return NUMBER Is
 Select 1 
   From Ias_Itm_Mst
  where i_code  = P_icode
 Exception 
FUNCTION Check_NoSale_Itm(P_Icode   In Ias_Itm_Dtl.I_CODE%TYPE ,
 Select 1 
   From Ias_Itm_Dtl
  where I_Code  = P_Icode
 Exception 
FUNCTION  Check_Itm_Wcode_Inactv (P_I_code In Ias_Itm_Mst.I_CODE%TYPE,P_w_code In Warehouse_details.W_
  Select nvl(Inactive,0)
    From Ias_Itm_wcode
   Where i_code = P_i_code
 Exception When Others Then
PROCEDURE Get_I_Code( P_Barcode In IAS_ITM_UNT_BARCODE.BARCODE%TYPE ,P_I_Code IN OUT Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt IN OUT Ias_Itm_Dtl.Itm_Unt%Type) Is
   Select I_Code, Itm_Unt
    From Ias_Itm_Unt_Barcode
      Where Barcode = P_Barcode;
Exception
   Begin
         Select I_Code, Itm_Unt
         From Ias_Itm_Dtl
          Where Barcode = P_Barcode;
   Exception
   End;
FUNCTION Get_Last_Incom_Date(P_I_code Ias_Itm_Mst.I_CODE%TYPE, P_W_code In Warehouse_Details.W_CODE%TYPE Default Null ) 
Select Max(Gr_Date) Into v_date 
 From Gr_Detail
 Where i_code = P_I_code
Exception 
Function Fetch_Itm_Nm_Price_Order (P_I_Code In Ias_Itm_Mst.I_Code%Type )Return Varchar2 Is 
 Begin
   Select Decode(1,1,Nvl(I_Name,I_E_Name),Nvl(I_E_Name,I_Name)) I_Name 
    From Ias_Itm_Mst
     Where I_Code = P_I_Code ;
 Exception
FUNCTION Get_MaxGrand_Size ( P_icode  In Ias_Itm_Mst.I_CODE%TYPE) return NUMBER is
 select max(P_Size) into v_gsize  From Ias_Itm_Dtl where I_Code= P_Icode ;
exception when  others then
Function Get_Itm_Activity (P_I_Code   In Ias_Itm_Mst.I_Code%Type ) Return Number Is
 Begin
    Select Activity_No
    From Ias_Itm_Mst 
     Where I_Code = P_I_Code ;
 Exception
PROCEDURE Get_Itm_Activity_Wcode_Info (P_W_Code       In  Warehouse_Details.W_Code%Type       ,
 Begin                                      
    Select Cc_Code ,
   From   Ias_Conn_Wcode_By_Activity
    Where W_Code      = P_W_Code 
 Exception
Function Get_Icode_One_Unit (P_I_Code  In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code  = P_I_Code;
 Exception
Function Get_Icode_Unit_By_Lvl (P_I_Code  In Ias_Itm_Mst.I_Code%Type , P_Lvl_Unit In Ias_Itm_Dtl.Lvl_Unit%Type) Return Ias_Itm_D
 Begin
     Select Itm_Unt Into V_Itm_Unt
       From Ias_Itm_Dtl
      Where Ias_Itm_Dtl.I_Code  = P_I_Code
 Exception
Function Chk_Icode_Unit ( P_I_Code  In Ias_Itm_Mst.I_Code%Type    ,
 Begin
 Begin
     Select Inactive Into V_Inactv
       From Ias_Itm_Dtl
      Where Ias_Itm_Dtl.I_Code  = P_I_Code 
 Exception
Function Get_Icode_Min_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code        = P_I_Code
 Exception
Function Get_Icode_Sales_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code
     Exception When Others Then
     End;           
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
 Exception
Function Get_Icode_Purch_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
     End;           
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
 Exception
Function Get_Icode_Price_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Begin
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
     End;           
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
 Exception
Function Get_Icode_Man_Inv_Unit (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Dtl.Itm_Unt%Type Is
 Begin
     Begin
        Select Itm_Unt Into V_Itm_Unt
      From Ias_Itm_Dtl
       Where Ias_Itm_Dtl.I_Code = P_I_Code ;       
     Exception When Others Then
     End;           
         Select Itm_Unt Into V_Itm_Unt
          From Ias_Itm_Dtl
           Where Ias_Itm_Dtl.I_Code = P_I_Code
 Exception
 Function Get_Icode_Vndr (P_I_Code In Ias_Itm_Mst.I_Code%Type ) Return Ias_Itm_Mst.I_Code%Type Is
 Begin
         Select I_Code Into V_I_Code
           From Ias_Itm_Mst
          Where Ias_Itm_Mst.Vndr_I_Code = P_I_Code;
 Exception
Function Get_Icode_Size_Unit (P_I_Code    In Ias_Itm_Mst.I_Code%Type ,P_Itm_Unt In Ias_Itm_Dtl.Itm_Unt%Type) Return Number Is
 Begin
     Select P_Size Into V_Psize
      From Ias_Itm_Dtl
       Where I_Code        = P_I_Code
 Exception
Function Get_Max_Lvl_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type) Return Ias_Itm_Dtl.Lvl_Unit%Type Is
     Select Max(Lvl_Unit) Into V_Lvl_Unit
      From Ias_Itm_Dtl
       Where I_Code= P_I_Code;
 Exception
Function Get_Icode_Unt (P_I_Code    In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Varchar2  Is
             Select Itm_Unt  Into  V_Itm_Unt 
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
             Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
             Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
           Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_D
                  Where I_Code= P_I_Code 
                  And Lvl_Unit = ( Select Max(Lvl_Unit) 
                                    From Ias_Itm_Dtl
                                    Where I_Code= P_I_Code);
            Select Itm_Unt  Into  V_Itm_Unt
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code
 Exception
    Begin
      Select Itm_Unt  Into  V_Itm_Unt 
      From Ias_Itm_Dtl
      Where I_Code= P_I_Code
    Exception
    End;   
 Function Get_Icode_Size (P_I_Code    In Ias_Itm_Mst.I_Code%Type  ,P_Unt_Type  In  Number,P_Lvl_Unt In Number Default Null) Return Number  Is
             Select P_Size  Into  V_Itm_Size 
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
             Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
             Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                   Where I_Code= P_I_Code
           Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code 
                  And Lvl_Unit = ( Select Max(Lvl_Unit) 
                                    From Ias_Itm_Dtl
                                    Where I_Code= P_I_Code);
            Select P_Size  Into  V_Itm_Size
                  From Ias_Itm_Dtl
                  Where I_Code= P_I_Code
 Exception
    Begin
      Select P_Size  Into  V_Itm_Size 
      From Ias_Itm_Dtl
      Where I_Code= P_I_Code
    Exception
    End;   
 Function Get_Itm_Unt_Lvl ( P_I_Code    In  Ias_Itm_Mst.I_Code%Type    ,
 Begin                                      
    Select Itm_Unt
    From   Ias_Itm_Dtl 
     Where I_Code     = P_I_Code 
 Exception
Function Get_Itm_Price (  P_Price_Type In Ias_Para_Inv.Price_Type%Type   ,
  Begin
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code  = P_Itm_Code
            Exception
            End;
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code  = P_Itm_Code
            Exception
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code    = P_Itm_Code
            Exception
          Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code    = P_Itm_Code
            Exception
            Begin
                Select Nvl(I_Price,0)
                From Ias_Item_Price 
                 Where I_Code    = P_Itm_Code
            Exception
  Exception
CREATE OR REPLACE Package Ys_Alrt_Sys_Pkg As
  Procedure Chk_Alrt_Prc ( P_Usr_No   In User_R.U_Id%Type       ,
Function  Get_Alrt_Usr_Hide_Date ( P_Alrt_No   In S_Alrt_Sys_Mst.Alrt_No%Type   ,
CREATE OR REPLACE Package Body Ys_Alrt_Sys_Pkg As
  Procedure Chk_Alrt_Prc ( P_Usr_No   In User_R.U_Id%Type      ,
         Select M.Alrt_No,M.Lbl_No,M.Msg_No,M.SYS_NO,M.Ordr_No,M.Alrt_Day Alrt_Day,
          From S_Alrt_Sys_Mst M 
            Where ( M.Alrt_Day Is Not Null Or Alrt_Actn <> 1)
              And (P_Usr_No = 1 Or Exists (Select 1 From S_Usr_Alrt_Sys_Priv 
                                                             Where Alrt_No = M.Alrt_No
            Order By M.Ordr_No , M.Alrt_No ;
          Begin
            Delete From S_Alrt_Data_Tmp Where U_Id = P_Usr_No;
                Begin  
                Exception      
                 Begin
                   Exception When Others Then
                 End;
                         Begin
                                 Insert Into S_Alrt_Data_Tmp ( Alrt_No            ,
                          Exception
                         End;
    Exception
Function  Get_Alrt_Usr_Hide_Date (   P_Alrt_No   In S_Alrt_Sys_Mst.Alrt_No%Type   ,
      Select Nt_Dis_Date Into V_Nt_Dis_Date 
       From Ias_Trace_Lgn_Note
        Where Nt_No          =   P_Alrt_No
Exception 
CREATE OR REPLACE PACKAGE RMS_GNR_PKG
    PROCEDURE GET_PYMNT_ITM_ORDR (P_SQL_STMNT VARCHAR2, P_ITM_TBL OUT ITMS_TBL);
    FUNCTION GET_DATE (SQLSTR VARCHAR2)
    PROCEDURE GET_CHR_TOW_VALUE (SQLSTR IN VARCHAR2, V_CHR OUT VARCHAR2, V_VAL1 OUT NUMBER, V_VAL2 OUT NUMBER);
    FUNCTION GENERATE_DOC_SRL (P_SERVER_NO IN VARCHAR2, P_BRN_NO IN VARCHAR2, P_TRMNL_NO IN RMS_TRMNL.TRMNL_NO%TYPE, P_DATE IN DATE, P_DOC_TYPE IN NUMBER)
    PROCEDURE GET_DATE_DLY_INCRS_PRC (P_BILL_DATE IN OUT RMS_BILL_MST.BILL_DATE%TYPE, P_BILL_TIME IN OUT RMS_BILL_MST.BILL_TIME%TYPE);
    FUNCTION CHK_LOCK_RCRD (P_TAB VARCHAR2, P_WHR VARCHAR2)
    FUNCTION GET_NOTE_FROM_CMPNNT_ITM (P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE, P_I_CODE RMS_BILL_DTL.I_CODE%TYPE, P_RCRD_NO RMS_BILL_DTL.RCRD_NO%TYPE, P_LANG_NO NUMBER DEFAULT 1)
    FUNCTION GET_DLY_DATE
    PROCEDURE GET_GRP_ITMS (
    PROCEDURE GET_GRP_ALL_ITMS (
    FUNCTION GET_LOCK_RCRD_INFO (P_CLIENT_INFO VARCHAR2, P_LANG_NO IAS_LABELS.LANG_NO%TYPE DEFAULT 1) RETURN VARCHAR2;
    FUNCTION GET_ITM_DFLT_WCODE (P_FOOD_GRP_NO IN RMS_FOOD_GRP.FOOD_GRP_NO%TYPE  ,
    FUNCTION GET_ITM_OUT_WCODE (P_FOOD_GRP_NO IN RMS_FOOD_GRP.FOOD_GRP_NO%TYPE  ,
    FUNCTION GET_ITM_FOOD_GRP_NO (P_ITM_CODE IN IAS_ITM_MST.I_CODE%TYPE ) RETURN VARCHAR2   ;  
    PROCEDURE FILL_ITM_CMPNNT(P_BILL_SRL       RMS_BILL_MST.BILL_SRL%TYPE,
    FUNCTION CHK_CMSN_CTGRY_ORDR(P_CMSN_SRL   RMS_CMSN_MST.CMSN_SRL%TYPE)
    FUNCTION CLC_CMSN_AMT(P_CMSN_SRL         RMS_CMSN_MST.CMSN_SRL%TYPE,
    PROCEDURE FIX_VIOLTD_CNSTRNT(P_TRMNL_NO IN RMS_TRMNL.TRMNL_NO%TYPE);
    PROCEDURE EXECUTE_PRGMA_PRC(P_SQL VARCHAR2);
    PROCEDURE SET_PKG_PRMTR(P_PRMTR_NM VARCHAR2,P_PRMTR_VAL VARCHAR2);   
    PROCEDURE GNRT_FNL_BILL_SRL(P_BILL_NO     IN OUT RMS_BILL_MST.BILL_NO%TYPE,
    FUNCTION GET_MAX_BILL_NO (P_TRMNL_NO RMS_BILL_MST.TRMNL_NO%TYPE)
    PROCEDURE GNRT_CSTMR_ORDR_SRL (P_ORDR_NO   IN OUT RMS_CSTMR_ORDR_MST.ORDR_NO%TYPE,
    PROCEDURE GET_INSRNC_ORDR_ITMS (P_TBL_INSRNC_DTL IN OUT   NOCOPY TBL_INSRNC_DTL,
    FUNCTION CHK_SHW_CMPNNT_ITM_QTY(P_I_CODE IAS_ITM_MST.I_CODE%TYPE) 
    PROCEDURE GET_LOV_FLD(P_TBL_LOV_REC OUT NOCOPY TBL_LOV_REC ,P_SQL_STMNT IN VARCHAR2);
    FUNCTION CHCK_DB_BRNCH
    PROCEDURE EXEC_IMDT_PRC(P_SQL IN VARCHAR2);   
    FUNCTION CNVR_DLM_TO_ROWS_FNC(P_STR VARCHAR2,P_DLM VARCHAR2) 
    PROCEDURE GET_DLVRY_PAID_AMT(P_F_DATE    IN  DATE
    PROCEDURE DSBL_ENBL_CNCL_BILL_PLCY(P_ENABLE_CNCL_BILL_PLCY BOOLEAN DEFAULT FALSE); 
    FUNCTION HIDE_CNCL_BILLS(P_SCHEMA VARCHAR2,P_OBJ_NM VARCHAR2) 
    FUNCTION CHK_DLVRY_CTGRY_ORDR(P_BRN_NO  S_BRN.BRN_NO%TYPE)
    FUNCTION GET_AVL_QTY_FROM_CMPNNT_FNC(P_I_CODE  IAS_ITM_MST.I_CODE%TYPE,
    PROCEDURE CHK_OTHR_AMT_PRC ;
    PROCEDURE GET_SCRN_PRNTR_ORDRS (P_TRMNL_NM IN RMS_SCRN_PRNTR_MST.TRMNL_NM%TYPE,P_ORDRS_TBL IN OUT NOCOPY TBL_RMS_SCRN_PRNTR_MST);
    PROCEDURE ADD_SQL_QUEUE_TSK_PRC(P_DOC_SRL    NUMBER,
    PROCEDURE EXEC_SQL_QUEUE_TSK_PRC;
    FUNCTION CNVRT_TO_CLOB(P_VRCHR VARCHAR2) RETURN CLOB;
CREATE OR REPLACE PACKAGE BODY RMS_GNR_PKG
   PROCEDURE GET_PYMNT_ITM_ORDR (P_SQL_STMNT VARCHAR2, P_ITM_TBL OUT ITMS_TBL)
   BEGIN
   EXCEPTION
   FUNCTION GET_DATE (SQLSTR VARCHAR2)
   BEGIN
   EXCEPTION
   PROCEDURE GET_CHR_TOW_VALUE (
   BEGIN
   EXCEPTION
   FUNCTION GENERATE_DOC_SRL (
   BEGIN
         SELECT    LPAD (TO_CHAR (TO_DATE (V_DATE), 'YYMMDD'), 6, '0')
           FROM RMS_TRMNL
          WHERE TRMNL_NO = P_TRMNL_NO;
             EXECUTE_PRGMA_PRC('DELETE FROM RMS_AUD_PRNT_ITM
                                 WHERE PRNT_DATE < (SYSDATE - 30)');              
             EXECUTE_PRGMA_PRC('DELETE FROM RMS_SCRN_PRNTR_DTL
                                 WHERE BILL_DATE < (SYSDATE - 3)');              
             EXECUTE_PRGMA_PRC('DELETE FROM RMS_SCRN_PRNTR_MST
                                 WHERE BILL_DATE < (SYSDATE - 3)');              
         SELECT    LPAD (TO_CHAR (TO_DATE (V_DATE), 'YYMMDD'), 6, '0')
                           (SELECT MAX (MAX_BILL_NO)
                              FROM ((SELECT NVL (MAX (BILL_NO), 0) + 1
                                       FROM RMS_RT_BILL_MST
                                      WHERE TRMNL_NO = P_TRMNL_NO
                                    (SELECT NVL (MAX (BILL_NO), 0) + 1
                                       FROM RMS_HST_RT_BILL_MST
            WHERE TRMNL_NO = P_TRMNL_NO
           FROM RMS_TRMNL
          WHERE TRMNL_NO = P_TRMNL_NO;
   EXCEPTION
                                  'Invalid Generate Doc. No Procedure '
   PROCEDURE GET_DATE_DLY_INCRS_PRC (
   BEGIN
      BEGIN
         SELECT NVL (PRD_BACK_HOUR, 0),
           FROM RMS_PARA;
      EXCEPTION
                                        'Invalid Generate Doc. No Procedure '
      END;
   FUNCTION CHK_LOCK_RCRD (P_TAB VARCHAR2, P_WHR VARCHAR2)
      ROW_LOCKED   EXCEPTION;
      PRAGMA EXCEPTION_INIT (ROW_LOCKED, -54);
   BEGIN
      EXECUTE IMMEDIATE (   'SELECT 1 FROM '
                         || ' WHERE '
                         || ' AND ROWNUM <=1 FOR UPDATE NOWAIT '
   EXCEPTION
   FUNCTION GET_NOTE_FROM_CMPNNT_ITM (P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE,
   BEGIN
         (SELECT (SELECT NVL (DECODE (P_LANG_NO,
                    FROM IAS_ITM_MST M
                   WHERE I_CODE = NVL (D.DI_CODE, D.DI_CODE_KIT)
            FROM (SELECT B.I_CODE,
                    FROM (SELECT I_CODE,
                            FROM RMS_BILL_CMPNNT_DTL B
                           WHERE B.BILL_SRL = P_BILL_SRL
                         (SELECT K.I_CODE,
                            FROM KIT_ITEMS K
                           WHERE K.KIT_ITEM_NO = P_I_CODE) K
          WHERE D.DIFF_QTY <> 0 OR (D.DIFF_QTY = 0 AND DI_CODE IS NULL))               
   EXCEPTION
   FUNCTION GET_DLY_DATE RETURN RMS_BILL_MST.BILL_DATE%TYPE DETERMINISTIC
   BEGIN
   EXCEPTION
  PROCEDURE GET_GRP_ITMS (
      V_SQL_STMNT CLOB :=   'SELECT M.I_CODE,LTRIM(RTRIM(NVL(DECODE(:P_LANG_NO,1,NVL(M.SHRT_ITM_L_NM,M.SHRT_ITM_F_NM),NVL(M.SHRT_ITM_F_NM,M.SHRT_ITM_L_NM)),(DECODE(:P_LANG_NO,1,NVL(M.I_NAME,M.I_E_NAME),NVL(M.I_E_NAME,M.I_NAME)))))) I_NAME
                                   ,NVL((SELECT 1 FROM DUAL WHERE DBMS_LOB.INSTR(:V_ITMS,M.I_CODE||D.ITM_UNT) > 0),0) ITM_SLCT_FLG,USE_QTY_FRACTION,USE_EXP_DATE
                                              FROM (SELECT MI.FOOD_GRP_NO,MI.SUB_FOOD_GRP_NO SUB_FOOD_GRP_NO_1,MI.*
                                                    FROM IAS_ITM_MST MI
                                                   WHERE MI.REST_ITM = 1
                                                  SELECT FD.FOOD_GRP_NO,FD.SUB_FOOD_GRP_NO SUB_FOOD_GRP_NO_1,MI.*
                                                    FROM IAS_ITM_MST MI,RMS_FOOD_GRP_ITM_CODE FD
                                                   WHERE MI.I_CODE = FD.I_CODE
                                             WHERE M.I_CODE            = D.I_CODE
                                         --  GROUP BY ITM_ORDR_NO,M.I_CODE,NVL(DECODE(:14,1,NVL(M.SHRT_ITM_L_NM,M.SHRT_ITM_F_NM),NVL(M.SHRT_ITM_F_NM,M.SHRT_ITM_L_NM)),(DECODE(:15,1,NVL(M.I_NAME,M.I_E_NAME),NVL(M.I_E_NAME,M.I_NAME)))),M.I_IMG,P.I_PRICE
                                             ORDER BY M.ITM_ORDR_NO,M.I_CODE/*,NVL(D.SALE_UNIT,0) DESC,NVL(D.P_SIZE,0)*/';
   BEGIN
   EXCEPTION
  PROCEDURE GET_GRP_ALL_ITMS (
      V_SQL_STMNT CLOB :=   'SELECT M.I_CODE,LTRIM(RTRIM(NVL(DECODE(:P_LANG_NO,1,NVL(M.SHRT_ITM_L_NM,M.SHRT_ITM_F_NM),NVL(M.SHRT_ITM_F_NM,M.SHRT_ITM_L_NM)),(DECODE(:P_LANG_NO,1,NVL(M.I_NAME,M.I_E_NAME),NVL(M.I_E_NAME,M.I_NAME)))))) I_NAME
                                   ,NVL((SELECT 1 FROM DUAL WHERE DBMS_LOB.INSTR(:V_ITMS,M.I_CODE||D.ITM_UNT) > 0),0) ITM_SLCT_FLG,USE_QTY_FRACTION,USE_EXP_DATE
                                              FROM (SELECT MI.FOOD_GRP_NO,MI.SUB_FOOD_GRP_NO SUB_FOOD_GRP_NO_1,MI.*
                                                    FROM IAS_ITM_MST MI
                                                   WHERE ((MI.FOOD_GRP_NO    = :P_SLCT_FOOD_GRP_NO AND NVL(MI.SUB_FOOD_GRP_NO,0) = NVL(:P_SUB_FOOD_GRP_NO,0)) OR (:P_SHW_GNR_ITM_IN_ALL_GRP = 1 AND MI.GNR_ITM_FLG = 1))
                                                  SELECT FD.FOOD_GRP_NO,FD.SUB_FOOD_GRP_NO SUB_FOOD_GRP_NO_1,MI.*
                                                    FROM IAS_ITM_MST MI,RMS_FOOD_GRP_ITM_CODE FD
                                                   WHERE MI.I_CODE = FD.I_CODE
                                             WHERE M.I_CODE            = D.I_CODE
                                         --  GROUP BY ITM_ORDR_NO,M.I_CODE,NVL(DECODE(:14,1,NVL(M.SHRT_ITM_L_NM,M.SHRT_ITM_F_NM),NVL(M.SHRT_ITM_F_NM,M.SHRT_ITM_L_NM)),(DECODE(:15,1,NVL(M.I_NAME,M.I_E_NAME),NVL(M.I_E_NAME,M.I_NAME)))),M.I_IMG,P.I_PRICE
                                             ORDER BY M.ITM_ORDR_NO,M.I_CODE/*,NVL(D.SALE_UNIT,0) DESC,NVL(D.P_SIZE,0)*/';
   BEGIN
   EXCEPTION
   FUNCTION GET_LOCK_RCRD_INFO (P_CLIENT_INFO VARCHAR2, P_LANG_NO IAS_LABELS.LANG_NO%TYPE DEFAULT 1)
   BEGIN
       SELECT OSUSER,
         FROM V$LOCKED_OBJECT L,
        WHERE S.SID = L.SESSION_ID 
   EXCEPTION
   FUNCTION GET_ITM_DFLT_WCODE (P_FOOD_GRP_NO IN RMS_FOOD_GRP.FOOD_GRP_NO%TYPE  ,
    BEGIN
          BEGIN
               SELECT DFLT_W_CODE 
                FROM RMS_CONN_FOOD_GRP_BY_BRN
                 WHERE FOOD_GRP_NO = P_FOOD_GRP_NO 
          EXCEPTION
          BEGIN
               SELECT DEF_WCODE 
               FROM RMS_TRMNL
                WHERE TRMNL_NO = P_TRMNL_NO  ;
          EXCEPTION
   FUNCTION GET_ITM_OUT_WCODE (P_FOOD_GRP_NO IN RMS_FOOD_GRP.FOOD_GRP_NO%TYPE  ,
    BEGIN
          BEGIN
               SELECT OUT_W_CODE 
                FROM RMS_CONN_FOOD_GRP_BY_BRN
                 WHERE FOOD_GRP_NO = P_FOOD_GRP_NO 
          EXCEPTION
          BEGIN
               SELECT OUT_W_CODE 
               FROM RMS_TRMNL
                WHERE TRMNL_NO = P_TRMNL_NO  ;
          EXCEPTION
   FUNCTION GET_ITM_FOOD_GRP_NO (P_ITM_CODE IN IAS_ITM_MST.I_CODE%TYPE ) RETURN VARCHAR2 IS 
    BEGIN
          BEGIN
               SELECT FOOD_GRP_NO 
                 FROM IAS_ITM_MST
                WHERE I_CODE = P_ITM_CODE ;
          EXCEPTION
    PROCEDURE FILL_ITM_CMPNNT(P_BILL_SRL       RMS_BILL_MST.BILL_SRL%TYPE,
       NO_QTY_FOUND                EXCEPTION;
    BEGIN
       EXECUTE IMMEDIATE 'SELECT I_CODE,
                            FROM '||V_DTL_TBL||' D
                           WHERE '||V_TYP_PFX||'_SRL = :P_BILL_SRL
                             AND EXISTS (SELECT 1
                                           FROM IAS_ITM_MST
                                          WHERE IAS_ITM_MST.I_CODE = D.I_CODE
          BEGIN
             EXECUTE IMMEDIATE 'SELECT 1,ITM_UNT,P_SIZE,I_QTY
                                  FROM '||V_CMPNNT_TBL||'
                                 WHERE '||V_TYP_PFX||'_SRL = :P_BILL_SRL 
          EXCEPTION
          END;
              EXECUTE IMMEDIATE 'SELECT NULL I_CODE,
                                   FROM (SELECT * 
                                           FROM KIT_ITEMS
                                          WHERE KIT_ITEM_NO = :I_CODE 
                                        (SELECT * 
                                           FROM '||V_CMPNNT_TBL||'
                                          WHERE '||V_TYP_PFX||'_SRL = :P_BILL_SRL
                                  WHERE DTL.DI_CODE  = KIT.I_CODE'
                 BEGIN
                 EXCEPTION 
                 END;
          BEGIN
                   EXECUTE IMMEDIATE 'UPDATE '||V_CMPNNT_TBL||'
                                       WHERE '||V_TYP_PFX||'_SRL = :P_BILL_SRL 
          EXCEPTION
          EXECUTE IMMEDIATE 'SELECT KIT_ITEM_NO I_CODE,
                               FROM KIT_ITEMS
                              WHERE KIT_ITEM_NO = :I_CODE
                 BEGIN
                 EXCEPTION 
                 END;
             EXECUTE IMMEDIATE 'INSERT INTO '||V_CMPNNT_TBL||'
    EXCEPTION
    FUNCTION CHK_CMSN_CTGRY_ORDR(P_CMSN_SRL   RMS_CMSN_MST.CMSN_SRL%TYPE)
    BEGIN
       SELECT 1
         FROM (SELECT (CMSN_F_VAL - LAG(CMSN_T_VAL, 1, 0) OVER(PARTITION BY 1 ORDER BY CMSN_F_VAL)) DIFF_VAL
                 FROM RMS_CMSN_DTL
                WHERE CMSN_SRL = P_CMSN_SRL)
        WHERE DIFF_VAL <> 1
    EXCEPTION
    FUNCTION CLC_CMSN_AMT( P_CMSN_SRL         RMS_CMSN_MST.CMSN_SRL%TYPE,
       EXCEPTION_ERROR EXCEPTION;
       V_AMT           NUMBER := 0;-- THE AMOUNT WE WILL GET THE PERCENT FROM IT IT CAN [P_BILL_AMT] OR [RGN_CMSN_AMT]
       FUNCTION GET_RGN_DLVRY_AMT RETURN NUMBER
       BEGIN
             SELECT RGN_DLVRY_PRICE
               FROM RMS_RGN
              WHERE BRN_NO = P_BRN_NO 
       EXCEPTION
              RAISE EXCEPTION_ERROR; 
    BEGIN
       IF P_CMSN_TYP = 2 AND P_CMSN_AMT_TYP = 2 AND P_RGN_AMT_FLG = 1 THEN --DELVRY CMSN + DLVRY AMT + AMT FROM RGN
          BEGIN
             SELECT DECODE(CMSN_PRCNT_FLG,1,((NVL(CMSN_AMT,0)/100) * RGN_DLVRY_PRICE),NVL(CMSN_AMT,0))
               FROM RMS_RGN
              WHERE BRN_NO = P_BRN_NO 
          EXCEPTION
                 RAISE EXCEPTION_ERROR; 
          END;
       ELSIF P_CMSN_TYP = 2 AND P_CMSN_AMT_TYP = 2 AND P_CMSN_CLC_MTHD = 2 THEN -- PERCENT FROM RGN_DLVRY_PRICE
               BEGIN 
                   SELECT SUM(CMSN_AMT)
                     FROM (SELECT ((CASE WHEN V_CTGRY_VAL >= NVL(CMSN_F_VAL,0) THEN CMSN_VAL 
                             FROM RMS_CMSN_DTL 
                            WHERE CMSN_SRL = P_CMSN_SRL);
               EXCEPTION 
               END;
               BEGIN 
                   SELECT DECODE(CMSN_VAL_PRCNT_FLG,1,(CMSN_VAL/100)* V_AMT,CMSN_VAL) 
                     FROM RMS_CMSN_DTL 
                    WHERE CMSN_SRL = P_CMSN_SRL
               EXCEPTION 
               END;
    EXCEPTION
       WHEN EXCEPTION_ERROR THEN
    PROCEDURE FIX_VIOLTD_CNSTRNT(P_TRMNL_NO IN RMS_TRMNL.TRMNL_NO%TYPE)
    BEGIN
        SELECT NVL(DOC_SRL_TYP,1)
          FROM RMS_PARA;
            UPDATE RMS_TRMNL
             WHERE TRMNL_NO = (CASE V_DOC_SRL_TYP WHEN 2 THEN P_TRMNL_NO ELSE TRMNL_NO END) 
    EXCEPTION 
    PROCEDURE EXECUTE_PRGMA_PRC(P_SQL VARCHAR2)
    BEGIN
    EXCEPTION 
    PROCEDURE SET_PKG_PRMTR(P_PRMTR_NM VARCHAR2,P_PRMTR_VAL VARCHAR2)
    BEGIN
        EXECUTE IMMEDIATE 'BEGIN '||P_PRMTR_NM||' := '||P_PRMTR_VAL||' ; END;'; 
    EXCEPTION 
    PROCEDURE GNRT_FNL_BILL_SRL(P_BILL_NO     IN OUT RMS_BILL_MST.BILL_NO%TYPE,
    BEGIN
          BEGIN
              SELECT NVL (INVC_NO, 0) + 1
                FROM RMS_TRMNL
               WHERE TRMNL_NO = (CASE P_DOC_SRL_TYP WHEN 2 THEN P_TRMNL_NO ELSE TRMNL_NO END)
               FOR UPDATE OF INVC_NO;
          EXCEPTION
          END;
          UPDATE RMS_TRMNL
           WHERE TRMNL_NO = (CASE P_DOC_SRL_TYP WHEN 2 THEN P_TRMNL_NO ELSE TRMNL_NO END) 
    EXCEPTION 
    FUNCTION GET_MAX_BILL_NO (P_TRMNL_NO RMS_BILL_MST.TRMNL_NO%TYPE)
    BEGIN
        SELECT NVL(DOC_SRL_TYP,1)
          FROM RMS_PARA;
        SELECT MAX (MAX_BILL_NO)
          FROM ((SELECT (NVL (MAX (BILL_NO), 0) + 1) MAX_BILL_NO
                   FROM RMS_BILL_MST
                  WHERE BILL_DATE = V_DATE
                    AND TRMNL_NO IN (SELECT TRMNL_NO
                                       FROM RMS_TRMNL
                                      WHERE TRMNL_NO = (CASE V_DOC_SRL_TYP WHEN 2 THEN P_TRMNL_NO ELSE TRMNL_NO END)
                (SELECT (NVL (MAX (BILL_NO), 0) + 1) MAX_BILL_NO
                   FROM RMS_HST_BILL_MST
                  WHERE BILL_DATE = V_DATE 
                    AND TRMNL_NO IN (SELECT TRMNL_NO
                                       FROM RMS_TRMNL
                                      WHERE TRMNL_NO = (CASE V_DOC_SRL_TYP WHEN 2 THEN P_TRMNL_NO ELSE TRMNL_NO END)
    EXCEPTION 
    PROCEDURE GNRT_CSTMR_ORDR_SRL (P_ORDR_NO   IN OUT RMS_CSTMR_ORDR_MST.ORDR_NO%TYPE,
    BEGIN
        SELECT NVL(ORD
          FROM RMS_PARA;
        EXECUTE IMMEDIATE 'SELECT NVL(MAX(ORDR_NO), 0) + 1
                             FROM RMS_CSTMR_ORDR_MST WHERE BRN_NO = :P_BRN_NO'||L_WHR
    EXCEPTION 
    PROCEDURE GET_INSRNC_ORDR_ITMS (P_TBL_INSRNC_DTL IN OUT   NOCOPY TBL_INSRNC_DTL,
    BEGIN
         SELECT I_CODE,
           FROM RMS_INSURNC_ORDR_DTL 
          WHERE DOC_SRL = P_DOC_SRL;
    EXCEPTION 
    FUNCTION CHK_SHW_CMPNNT_ITM_QTY(P_I_CODE IAS_ITM_MST.I_CODE%TYPE) RETURN NUMBER
    BEGIN
        SELECT COUNT(*) 
          FROM IAS_ITM_MST M
         WHERE M.I_CODE = K.I_CODE
    EXCEPTION 
    PROCEDURE GET_LOV_FLD(P_TBL_LOV_REC OUT NOCOPY TBL_LOV_REC ,P_SQL_STMNT IN VARCHAR2)
    BEGIN
    EXCEPTION 
    FUNCTION CHCK_DB_BRNCH RETURN NUMBER DETERMINISTIC
    BEGIN
       BEGIN
          SELECT 1
            FROM DBA_SNAPSHOTS
           WHERE TABLE_NAME = 'IAS_ITM_MST'
       EXCEPTION
       END;
    PROCEDURE EXEC_IMDT_PRC(P_SQL IN VARCHAR2)
    BEGIN
    EXCEPTION 
            RAISE_APPLICATION_ERROR(-20965,'EXCEPTION WHEN EXEC_IMDT_PRC : '||SQLERRM,TRUE);
    FUNCTION CNVR_DLM_TO_ROWS_FNC(P_STR VARCHAR2,P_DLM VARCHAR2) 
    BEGIN
       FOR CRSR IN (SELECT LEVEL LVL_CLMN,TRIM(REGEXP_SUBSTR(P_STR,'[^'||P_DLM||']+',1,LEVEL)) STR_CLMN 
                      FROM DUAL
    EXCEPTION
    PROCEDURE GET_DLVRY_PAID_AMT(P_F_DATE    IN  DATE
    BEGIN
        SELECT SUM ((LEAST (NVL (RMS_BILL_MST.PAYED_AMT, 0),
        - NVL ((SELECT SUM(NET_RT_BILL_AMT) 
                                      FROM RMS_RT_BILL_MST_ALL_VW 
                                     WHERE BILL_SRL = RMS_BILL_MST.BILL_SRL), 0) 
                            + NVL ((SELECT NVL(INSURNC_AMT,0) + NVL(RNT_AMT,0)  
                                      FROM RMS_INSURNC_MST 
                                     WHERE RMS_INSURNC_MST.DOC_SRL_REF = RMS_BILL_MST.BILL_SRL
                   ) ,SUM(NVL(RSRV_AMT,0)),SUM(NVL((SELECT SUM(NET_RT_BILL_AMT) 
                                                      FROM RMS_RT_BILL_MST_ALL_VW 
                                                     WHERE BILL_SRL = RMS_BILL_MST.BILL_SRL),0))
          FROM RMS_BILL_MST_VW RMS_BILL_MST
         WHERE BILL_DOC_TYPE = 3
    EXCEPTION
    PROCEDURE DSBL_ENBL_CNCL_BILL_PLCY(P_ENABLE_CNCL_BILL_PLCY BOOLEAN DEFAULT FALSE)
    BEGIN 
    FUNCTION HIDE_CNCL_BILLS(P_SCHEMA VARCHAR2,P_OBJ_NM VARCHAR2) RETURN VARCHAR2
    BEGIN
    FUNCTION CHK_DLVRY_CTGRY_ORDR(P_BRN_NO  S_BRN.BRN_NO%TYPE)
    BEGIN
SELECT 1
         FROM (SELECT (BILL_F_AMT - LAG(BILL_T_AMT, 1, 0) OVER(PARTITION BY 1 ORDER BY BILL_F_AMT)) DIFF_VAL
                 FROM RMS_DLVRY_SLCS
                WHERE BRN_NO = P_BRN_NO)
        WHERE DIFF_VAL <> 1
    EXCEPTION
    FUNCTION GET_AVL_QTY_FROM_CMPNNT_FNC(P_I_CODE  IAS_ITM_MST.I_CODE%TYPE,
    BEGIN
       SELECT MIN (  RMS_GET_QTY_FNC (P_I_CODE       => KIT_ITEMS.I_CODE,
         FROM KIT_ITEMS
        WHERE KIT_ITEM_NO = P_I_CODE
    EXCEPTION
    PROCEDURE CHK_OTHR_AMT_PRC
    BEGIN
                SELECT BILL_SRL, NVL(OTHR_AMT, 0) OTHR_AMT, NVL(OTHR_AMT_DTL, 0) OTHR_AMT_DTL
                  FROM (SELECT M.BILL_SRL
                               (SELECT SUM(NVL(D.OTHR_AMT, 0) * NVL(D.I_QTY, 0)) OTHR_AMT
                                  FROM RMS_BILL_DTL D
                                 WHERE D.BILL_SRL = M.BILL_SRL)
                          FROM RMS_BILL_MST M
                         WHERE NVL(M.PST_FLG, 0) = 0)
                 WHERE ABS(NVL(OTHR_AMT, 0) - NVL(OTHR_AMT_DTL, 0)) > 0.5;
        BEGIN
                BEGIN
                    UPDATE RMS_BILL_DTL D
                       SET OTHR_AMT = (SELECT (NVL(M.OTHR_AMT, 0) / DECODE(NVL(M.BILL_AMT, 0), 0, 1, NVL(M.BILL_AMT, 0))) * NVL(D.I_PRICE, 0)
                                         FROM RMS_BILL_MST M
                                        WHERE D.BILL_SRL = M.BILL_SRL)
                     WHERE BILL_SRL = I_BILL.BILL_SRL;
                EXCEPTION
                END;
        END;
                SELECT RT_BILL_SRL, NVL(OTHR_AMT, 0) OTHR_AMT, NVL(OTHR_AMT_DTL, 0) OTHR_AMT_DTL
                  FROM (SELECT M.RT_BILL_SRL
                               (SELECT SUM(NVL(D.OTHR_AMT, 0) * NVL(D.I_QTY, 0)) OTHR_AMT
                                  FROM RMS_RT_BILL_DTL D
                                 WHERE D.RT_BILL_SRL = M.RT_BILL_SRL)
                          FROM RMS_RT_BILL_MST M
                         WHERE NVL(M.PST_FLG, 0) = 0)
                 WHERE ABS(NVL(OTHR_AMT, 0) - NVL(OTHR_AMT_DTL, 0)) > 0.5;
        BEGIN
                BEGIN
                    UPDATE RMS_RT_BILL_DTL D
                       SET OTHR_AMT = (SELECT (NVL(M.OTHR_AMT, 0) / DECODE(NVL(M.RT_BILL_AMT, 0), 0, 1, NVL(M.RT_BILL_AMT, 0))) * NVL(D.I_PRICE, 0)
                                         FROM RMS_RT_BILL_MST M
                                        WHERE D.RT_BILL_SRL = M.RT_BILL_SRL)
                     WHERE RT_BILL_SRL = I_RT_BILL.RT_BILL_SRL;
                EXCEPTION
                END;
        END;
    PROCEDURE GET_SCRN_PRNTR_ORDRS (P_TRMNL_NM IN RMS_SCRN_PRNTR_MST.TRMNL_NM%TYPE,P_ORDRS_TBL IN OUT NOCOPY TBL_RMS_SCRN_PRNTR_MST)
      V_SQL_STMNT CLOB := 'SELECT * 
                             FROM RMS_SCRN_PRNTR_MST
                            WHERE TRMNL_NM = :TRMNL_NM 
                            ORDER BY AD_DATE';
   BEGIN
   EXCEPTION
    PROCEDURE ADD_SQL_QUEUE_TSK_PRC(P_DOC_SRL    NUMBER,
    BEGIN
        EXECUTE_PRGMA_PRC('INSERT INTO RMS_SQL_QUEUE(DOC_SRL, SQL_STMNT, EXEC_TIME, AD_DATE)
        BEGIN
        EXCEPTION
        END;
    EXCEPTION
    PROCEDURE EXEC_SQL_QUEUE_TSK_PRC
    BEGIN
        FOR EXEC_CRSR IN (SELECT SQL_STMNT,DOC_SRL 
                            FROM RMS_SQL_QUEUE
                           WHERE EXEC_TIME <= V_EXEC_TIME
            BEGIN
                EXECUTE_PRGMA_PRC('DELETE FROM RMS_SQL_QUEUE WHERE DOC_SRL = '||EXEC_CRSR.DOC_SRL);
            EXCEPTION 
            END;
        BEGIN
            SELECT COUNT(*)
              FROM RMS_SQL_QUEUE
             WHERE ROWNUM <= 1;
        EXCEPTION 
 END; 
    EXCEPTION
    FUNCTION CNVRT_TO_CLOB(P_VRCHR VARCHAR2) RETURN CLOB
    BEGIN
    EXCEPTION
CREATE OR REPLACE PACKAGE RMS_CSTMR_ORDR_PKG
    FUNCTION INSRT_RMS_CSTMR_ORDR_MST (P_ORDR_NO                 RMS_CSTMR_ORDR_MST.ORDR_NO%TYPE,
                                       P_ADDRSS_NO               VARCHAR2,                                                                                                                                                                                                --FROM DTL
                                       P_TOT_DISC_DTL            NUMBER,                                                                                                                                                                                                                          --FROM DTL
                                       P_SUM_TOT_VAT_AMT         NUMBER,                                                                                                                                                                                                                          --FROM DTL
    FUNCTION INSRT_RMS_CSTMR_ORDR_DTL (P_I_CODE         RMS_CSTMR_ORDR_DTL.I_CODE%TYPE,
    FUNCTION LOAD_PRMTRS
    FUNCTION GET_CSH_CSTMR_NM(P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_RGN_NM(P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION PST_COMMIT_PRC
    PROCEDURE INSRT_RMS_CSTMR_ORDR_PRC (P_XML_INPT IN CLOB, P_JSON_RSLT OUT VARCHAR2);
    PROCEDURE INSRT_RMS_CSTMR_ORDR_DTL (P_XML_INPT IN CLOB, P_JSON_RSLT OUT VARCHAR2, P_INSRT_TYP VARCHAR2 DEFAULT 'ADD_DTL');
    FUNCTION CNCL_ORDR (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_ORDR_SRL IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE)
    FUNCTION GET_CSTMRS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE)
    FUNCTION INSRT_CSTMR_DATA (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION UPDT_CSTMR_DATA (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION CHNG_CSTMR_PWD (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_CSTMR_ACTVTN_CODE (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE)
    FUNCTION ACTV_CSTMR (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_ACTVTN_CODE IN IAS_CASH_CUSTMR.C_ACTVTN_CODE%TYPE)
    FUNCTION ADD_CSTMR_ADDRSS (P_LANG_NO      IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION UPDT_CSTMR_ADDRSS (P_LANG_NO      IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION DLT_CSTMR_ADDRSS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_ADDRSS_NO IN VARCHAR2)
    FUNCTION GET_CSTMR_ADDRSS (P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE,P_BRN_NO       IN RMS_RGN.BRN_NO%TYPE)
    FUNCTION GET_CSTMR_ORDRS (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION INSRT_CSTMR_FVRT_FOODS (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_CSTMR_FVRT_FOODS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE)
    FUNCTION DLT_CSTMR_FVRT_FOOD (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_I_CODE IN IAS_ITM_MST.I_CODE%TYPE)
    FUNCTION GET_FOOD_GRP (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE)
    FUNCTION GET_SUB_FOOD_GRP (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_FOOD_GRP_NO IN RMS_FOOD_GRP.FOOD_GRP_NO%TYPE)
    FUNCTION GET_FOOD_ITMS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_FOOD_GRP_NO IN RMS_FOOD_GRP.FOOD_GRP_NO%TYPE, P_SUB_FOOD_GRP_NO IN RMS_SUB_FOOD_GRP.SUB_FOOD_GRP_NO%TYPE DEFAULT NULL)
    FUNCTION SRCH_ITM (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_SRCH_TXT IN VARCHAR2)
    FUNCTION GET_WEEK_MOST_RQST_FOODS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_TOP_ROW_NUM IN NUMBER DEFAULT 5)
    FUNCTION CHK_CSTMR_LGN (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_CSTMR_PWD IN IAS_CASH_CUSTMR.C_PWD%TYPE)
    FUNCTION CHK_CSTMR_EMAIL (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_EMAIL IN IAS_CASH_CUSTMR.E_MAIL%TYPE)
    FUNCTION GET_BRN_RGN (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_BRN_NO IN RMS_RGN.BRN_NO%TYPE)
    FUNCTION GET_PRMTRS(P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE)
    FUNCTION CALC_DLVRY_AMT (P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_CRDT_CRDS (P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE)
    FUNCTION GET_BILL_DOC_TYP (P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE)
    FUNCTION CHNG_DLVRY_PWD (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION CHK_DLVRY_LGN (P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_DLVRY_DATA (P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_CSTMR_SGGSTNS_TYPES (P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE)
    FUNCTION ADD_CSTMR_SGGSTN(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_DLVRY_STATUS_TYPES (P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE)
    FUNCTION GET_DLVRY_BILLS (P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION UPDT_BILL_DLVRY_STATUS (P_LANG_NO          IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_RTRN_BILL_RSNS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE)
    FUNCTION GET_CSTMR_NTFCTN(P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION SET_CSTMR_NTFCTN_DLVRD(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    FUNCTION GET_ITM_CMPNNTS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_I_CODE IN IAS_ITM_MST.I_CODE%TYPE)
    FUNCTION SET_DFLT_BRN(P_BRN_NO RMS_CSTMR_ORDR_DTL.BRN_NO%TYPE)
    FUNCTION CHK_ITM_QTY_AVLBL (P_I_CODE IN IAS_ITM_MST.I_CODE%TYPE)
CREATE OR REPLACE PACKAGE BODY RMS_CSTMR_ORDR_PKG
    FUNCTION INSRT_RMS_CSTMR_ORDR_MST (                                                                                                                                                                                                              /* MOBILE_NO AND CSTMR_NOTE,NAME,BRN_NO ARE MANATORY */
    BEGIN
            BEGIN
                SELECT CSTMR_RGN_NO,
                  FROM (SELECT CSTMR_RGN_NO,
                          FROM IAS_CSH_CSTMR_LCTN
                         WHERE ROWID || '' = P_ADDRSS_NO
                        SELECT CSTMR_RGN_NO,
                          FROM IAS_CSH_CSTMR_LCTN_BRN
                         WHERE ROWID || '' = P_ADDRSS_NO
            EXCEPTION
                    G_MSG_TXT := 'EXCEPTION WHEN CALL FILL_CSTMR_LCTN '||SQLERRM;
        INSERT INTO RMS_CSTMR_ORDR_MST (ORDR_NO,
    EXCEPTION
    FUNCTION INSRT_RMS_CSTMR_ORDR_DTL (P_I_CODE         RMS_CSTMR_ORDR_DTL.I_CODE%TYPE,
    BEGIN
        BEGIN
            SELECT DECODE (G_LNG_NO, 1, I_NAME, NVL (I_E_NAME, I_NAME)),
              FROM IAS_ITM_MST
             WHERE I_CODE = P_I_CODE;
        EXCEPTION
        BEGIN
                BEGIN
                    BEGIN
                        SELECT DECODE (G_LNG_NO, 1, I_NAME, NVL (I_E_NAME, I_NAME)), NVL (CHK_AVL_QTY_IN_RES, 0)
                          FROM IAS_ITM_MST
                         WHERE I_CODE = P_I_CODE;
                            BEGIN
                            EXCEPTION
                                    G_MSG_TXT := 'EXCEPTION WHEN CALL RMS_GET_QTY_FNC';
                            END;
                    EXCEPTION
                    END;
                END;
        BEGIN
        INSERT INTO RMS_CSTMR_ORDR_DTL (ORDR_NO,
    EXCEPTION
    FUNCTION LOAD_PRMTRS
    BEGIN
        BEGIN
            SELECT NVL (ORDR_SQ, 1),
              FROM RMS_PARA;
        EXCEPTION
                RETURN 'ERROR WHEN GET PARAMETERS FROM RMS_PARA ' || SQLERRM;
        END;
        BEGIN
            SELECT NVL (USE_PRICE_INCLUDE_VAT, 0),
              FROM IAS_PARA_GEN,
        EXCEPTION
                RETURN 'ERROR WHEN GET PARAMETERS FROM RMS_PARA IAS_PARA_GEN ' || SQLERRM;
        BEGIN
            SELECT TRMNL_NO,
              FROM RMS_TRMNL T, IAS_SYS.S_TRMNLS_AUTHRTY S
             WHERE DEF_BRN_NO = NVL(G_BRN_NO,
            BEGIN
                SELECT BRN_USR, CMP_NO
                  FROM RMS_BILL_MST
                 WHERE ROWNUM <= 1;
            EXCEPTION
            END;
        EXCEPTION
        BEGIN
            SELECT CC_CODE,
              FROM RMS_TRMNL
             WHERE UPPER (TRMNL_NO) = UPPER (G_TRMNL_NO);
        EXCEPTION
                RETURN 'ERROR WHEN GET PARAMETERS FROM RMS_TRMNL ' || SQLERRM;
        BEGIN
            SELECT CUR_CODE
              FROM EX_RATE
             WHERE L_F = 1;
        EXCEPTION
                RETURN 'ERROR WHEN GET PARAMETERS FROM RMS_PARA RMS_TRMNL ' || SQLERRM;
        END;
    EXCEPTION
    FUNCTION PST_COMMIT_PRC
    BEGIN
    EXCEPTION
    FUNCTION GET_CSH_CSTMR_NM(P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LANG_NO,1,NVL(CUST_L_NM,CUST_F_NM),NVL(CUST_F_NM,CUST_L_NM))
          FROM (SELECT CUST_L_NM,CUST_F_NM
                  FROM IAS_CASH_CUSTMR
                 WHERE CUST_CODE = P_C_CODE
                SELECT CUST_L_NM,CUST_F_NM
                  FROM IAS_CASH_CUSTMR_BRN
                 WHERE CUST_CODE = P_C_CODE)
         WHERE ROWNUM <= 1;
    EXCEPTION
    FUNCTION GET_RGN_NM(P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
        SELECT NVL(DECODE(NVL(P_LANG_NO,1),1,RGN_L_NM,RGN_F_NM),RGN_L_NM)  
          FROM RMS_RGN
         WHERE  RGN_NO   = P_RGN_NO 
    EXCEPTION
    PROCEDURE INSRT_RMS_CSTMR_ORDR_PRC (P_XML_INPT IN CLOB, P_JSON_RSLT OUT VARCHAR2)
    BEGIN
        FOR MST_CRSR IN (SELECT EXTRACTVALUE (VALUE (XMLMSTDMY), '*/ORDR_NO')                   AS ORDR_NO,
                                EXTRACTVALUE (VALUE (XMLMSTDMY), '*/TOT_ITM_PRICE')             AS TOT_ITM_PRICE,                                                                                                                                                                                 --FROM DTL
                                EXTRACTVALUE (VALUE (XMLMSTDMY), '*/TOT_DISC_DTL')              AS TOT_DISC_DTL,                                                                                                                                                                                  --FROM DTL
                                EXTRACTVALUE (VALUE (XMLMSTDMY), '*/SUM_TOT_VAT_AMT')           AS SUM_TOT_VAT_AMT,                                                                                                                                                                               --FROM DTL
                                EXTRACTVALUE (VALUE (XMLMSTDMY), '*/TOT_DISC')                  AS TOT_DISC,                                                                                                                                                                                      --FROM DTL
                           FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_INPT, '/RMS_CSTMR_ORDR/RMS_CSTMR_ORDR_MST'))) XMLMSTDMY)
            BEGIN
                                              P_TOT_ITM_PRICE           => MST_CRSR.TOT_ITM_PRICE,                                                                                                                                                                                                --FROM DTL
                                              P_TOT_DISC_DTL            => MST_CRSR.TOT_DISC_DTL,                                                                                                                                                                                                 --FROM DTL
                                              P_SUM_TOT_VAT_AMT         => MST_CRSR.SUM_TOT_VAT_AMT,                                                                                                                                                                                              --FROM DTL
            EXCEPTION
            END;
    EXCEPTION
    PROCEDURE INSRT_RMS_CSTMR_ORDR_DTL (P_XML_INPT IN CLOB, P_JSON_RSLT OUT VARCHAR2, P_INSRT_TYP VARCHAR2 DEFAULT 'ADD_DTL')                                                                                                                                                     --  "ADD_DTL" && "MST_DTL"
    BEGIN
        FOR DTL_CRSR IN (SELECT EXTRACTVALUE (VALUE (XMLMSTDMY), '*/I_CODE')           AS I_CODE,
                           FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_INPT, '/RMS_CSTMR_ORDR/RMS_CSTMR_ORDR_DTL'))) XMLMSTDMY)
            BEGIN
            EXCEPTION
            END;
        BEGIN
        EXCEPTION
            BEGIN
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION CNCL_ORDR (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_ORDR_SRL IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE)
    BEGIN
        SELECT SUM (NVL (PRCSS_FLG, 0)) + SUM (NVL (D.ITM_PRNT_FLG, 0)), COUNT (*)
          FROM RMS_CSTMR_ORDR_MST M, RMS_CSTMR_ORDR_DTL D
         WHERE M.ORDR_SRL = D.ORDR_SRL AND M.ORDR_SRL = P_ORDR_SRL;
            UPDATE RMS_CSTMR_ORDR_MST
             WHERE ORDR_SRL = P_ORDR_SRL;
    EXCEPTION
    FUNCTION GET_CSTMRS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE)
    BEGIN
        QRY_CTX := DBMS_XMLGEN.NEWCONTEXT ('SELECT MOBILE_NO,
                                              FROM (SELECT C.MOBILE_NO,
                                                      FROM IAS_CASH_CUSTMR C,
                                                     WHERE C.CUST_CODE = L.CSTMR_CODE(+)
                                                    SELECT C.MOBILE_NO,
                                                      FROM IAS_CASH_CUSTMR_BRN C,
                                                     WHERE C.CUST_CODE = L.CSTMR_CODE(+)
                                             WHERE ROWNUM <= 1');
    EXCEPTION
    FUNCTION INSRT_CSTMR_DATA (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            BEGIN
                BEGIN
                    SELECT 1
                      FROM IAS_CASH_CUSTMR
                     WHERE CUST_CODE = P_MOBILE_NO;
                EXCEPTION
                        SELECT 1
                          FROM IAS_CASH_CUSTMR_BRN
                         WHERE CUST_CODE = P_MOBILE_NO;
                END;
            EXCEPTION
                    INSERT INTO IAS_CASH_CUSTMR (CUST_CODE,
                        INSERT INTO IAS_CASH_CUSTMR_BRN (CUST_CODE,
            END;
    EXCEPTION
    FUNCTION UPDT_CSTMR_DATA (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            BEGIN
                BEGIN
                    SELECT 1
                      FROM IAS_CASH_CUSTMR
                     WHERE CUST_CODE = P_MOBILE_NO;
                    UPDATE IAS_CASH_CUSTMR
                     WHERE CUST_CODE = P_MOBILE_NO;
                EXCEPTION
                        SELECT 1
                          FROM IAS_CASH_CUSTMR_BRN
                         WHERE CUST_CODE = P_MOBILE_NO;
                        UPDATE IAS_CASH_CUSTMR_BRN
                         WHERE CUST_CODE = P_MOBILE_NO;
                END;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION CHNG_CSTMR_PWD (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            BEGIN
                BEGIN
                    SELECT 1, C_PWD
                      FROM IAS_CASH_CUSTMR
                     WHERE CUST_CODE = P_MOBILE_NO;
                        UPDATE IAS_CASH_CUSTMR
                         WHERE CUST_CODE = P_MOBILE_NO;
                EXCEPTION
                        SELECT 1, C_PWD
                          FROM IAS_CASH_CUSTMR_BRN
                         WHERE CUST_CODE = P_MOBILE_NO;
                            UPDATE IAS_CASH_CUSTMR_BRN
                             WHERE CUST_CODE = P_MOBILE_NO;
                END;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION GET_CSTMR_ACTVTN_CODE (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE)
    BEGIN
            BEGIN
                SELECT C_ACTVTN_CODE
                  FROM (SELECT C_ACTVTN_CODE || ''     C_ACTVTN_CODE
                          FROM IAS_CASH_CUSTMR
                         WHERE CUST_CODE = P_MOBILE_NO
                        SELECT C_ACTVTN_CODE || ''     C_ACTVTN_CODE
                          FROM IAS_CASH_
                         WHERE CUST_CODE = P_MOBILE_NO)
                 WHERE ROWNUM <= 1;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION ACTV_CSTMR (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_ACTVTN_CODE IN IAS_CASH_CUSTMR.C_ACTVTN_CODE%TYPE)
    BEGIN
            BEGIN
                SELECT C_ACTVTN_CODE
                  FROM (SELECT C_ACTVTN_CODE || ''     C_ACTVTN_CODE
                          FROM IAS_CASH_CUSTMR
                         WHERE CUST_CODE = P_MOBILE_NO
                        SELECT C_ACTVTN_CODE || ''     C_ACTVTN_CODE
                          FROM IAS_CASH_CUSTMR_BRN
                         WHERE CUST_CODE = P_MOBILE_NO)
                 WHERE ROWNUM <= 1;
                    UPDATE IAS_CASH_CUSTMR
                     WHERE CUST_CODE = P_MOBILE_NO;
                    UPDATE IAS_CASH_CUSTMR_BRN
                     WHERE CUST_CODE = P_MOBILE_NO;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION ADD_CSTMR_ADDRSS (P_LANG_NO      IN IAS_LABELS.LANG_NO%TYPE,
        ERR_PRMTR_EXPTN EXCEPTION;
    BEGIN
            BEGIN
                BEGIN
                    SELECT 1
                      FROM RMS_RGN
                     WHERE BRN_NO = P_BRN_NO
                EXCEPTION 
                END;
                BEGIN
                    SELECT 1
                      FROM IAS_CASH_CUSTMR
                     WHERE CUST_CODE = P_MOBILE_NO;
                    BEGIN
                            SELECT COUNT (0) + 1
                              FROM IAS_CSH_CSTMR_LCTN
                             WHERE CSTMR_CODE = P_MOBILE_NO;
                    EXCEPTION
                    END;
                    INSERT INTO IAS_CSH_CSTMR_LCTN (CSTMR_CODE,
                        INSERT INTO IAS_CSH_CSTMR_LCTN_BRN (CSTMR_CODE,
                EXCEPTION
                        SELECT 1
                          FROM IAS_CASH_CUSTMR_BRN
                         WHERE CUST_CODE = P_MOBILE_NO;
                        BEGIN
                                SELECT COUNT (0) + 1
                                  FROM IAS_CSH_CSTMR_LCTN_BRN
                                 WHERE CSTMR_CODE = P_MOBILE_NO;
                        EXCEPTION
                        END;
                        INSERT INTO IAS_CSH_CSTMR_LCTN_BRN (CSTMR_CODE,
                END;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION UPDT_CSTMR_ADDRSS (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
        ERR_PRMTR_EXPTN EXCEPTION;
    BEGIN
            BEGIN
                BEGIN
                    SELECT 1
                      FROM RMS_RGN
                     WHERE BRN_NO = P_BRN_NO
                EXCEPTION 
                END;
                SELECT 1
                  FROM IAS_CSH_CSTMR_LCTN
                 WHERE ROWID || '' = P_ADDRSS_NO;
                UPDATE IAS_CSH_CSTMR_LCTN
                 WHERE ROWID || '' = P_ADDRSS_NO;
            EXCEPTION
                    BEGIN
                        SELECT 1
                          FROM IAS_CSH_CSTMR_LCTN_BRN
                         WHERE ROWID || '' = P_ADDRSS_NO;
                        UPDATE IAS_CSH_CSTMR_LCTN_BRN
                         WHERE ROWID || '' = P_ADDRSS_NO;
                    EXCEPTION
                    END;
            END;
    EXCEPTION
    FUNCTION DLT_CSTMR_ADDRSS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_ADDRSS_NO IN VARCHAR2)
    BEGIN
            BEGIN
                SELECT 1
                  FROM IAS_CSH_CSTMR_LCTN
                 WHERE ROWID || '' = P_ADDRSS_NO;
                DELETE FROM IAS_CSH_CSTMR_LCTN
                      WHERE ROWID || '' = P_ADDRSS_NO;
            EXCEPTION
                    BEGIN
                        SELECT 1
                          FROM IAS_CSH_CSTMR_LCTN_BRN
                         WHERE ROWID || '' = P_ADDRSS_NO;
                        DELETE FROM IAS_CSH_CSTMR_LCTN_BRN
                              WHERE ROWID || '' = P_ADDRSS_NO;
                    EXCEPTION
                    END;
            END;
    EXCEPTION
    FUNCTION GET_CSTMR_ADDRSS (P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE,P_BRN_NO       IN RMS_RGN.BRN_NO%TYPE)
    BEGIN
        QRY_CTX := DBMS_XMLGEN.NEWCONTEXT ('SELECT ROWID||'''' ADDRSS_NO,
                                              FROM IAS_CSH_CSTMR_LCTN L
                                             WHERE CSTMR_CODE = ''' || P_MOBILE_NO || '''
                                            SELECT ROWID||'''' ADDRSS_NO,
                                              FROM IAS_CSH_CSTMR_LCTN_BRN L
                                             WHERE CSTMR_CODE =  ''' || P_MOBILE_NO || ''' 
                                               AND CSTMR_CODE||NOTE||LATITUDE||LONGITUDE||CSTMR_APRTMNT_NO NOT IN ( SELECT CSTMR_CODE||NOTE||LATITUDE||LONGITUDE||CSTMR_APRTMNT_NO
                                                                                                                      FROM IAS_CSH_CSTMR_LCTN
                                                                                                                     WHERE CSTMR_CODE = ''' || P_MOBILE_NO || ''')');
    EXCEPTION
    FUNCTION GET_CSTMR_ORDRS (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            QRY_SQL := 'SELECT M.ORDR_NO,
                          FROM RMS_CSTMR_ORDR_MST M,
                         WHERE M.ORDR_SRL = D.ORDR_SRL
                         GROUP BY M.ORDR_NO,
                         ORDER BY M.ORDR_DATE DESC';
            QRY_SQL := 'SELECT M.ORDR_NO,
                          FROM RMS_CSTMR_ORDR_MST M,
                         WHERE M.ORDR_SRL = D.ORDR_SRL
    EXCEPTION
    FUNCTION INSRT_CSTMR_FVRT_FOODS (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            BEGIN
                SELECT 1
                  FROM RMS_CSTMR_FVRT_ITM
                 WHERE CSTMR_CODE = P_MOBILE_NO AND I_CODE = P_I_CODE;
            EXCEPTION
                    INSERT INTO RMS_CSTMR_FVRT_ITM (CSTMR_CODE,
            END;
    EXCEPTION
    FUNCTION GET_CSTMR_FVRT_FOODS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE)
    BEGIN
        QRY_CTX := DBMS_XMLGEN.NEWCONTEXT ('SELECT F.I_CODE,
                                              FROM RMS_CSTMR_FVRT_ITM F,
                                             WHERE F.I_CODE = I.I_CODE
    EXCEPTION
    FUNCTION DLT_CSTMR_FVRT_FOOD (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_I_CODE IN IAS_ITM_MST.I_CODE%TYPE)
    BEGIN
        DELETE FROM RMS_CSTMR_FVRT_ITM
              WHERE CSTMR_CODE = P_MOBILE_NO AND I_CODE = P_I_CODE;
    EXCEPTION
    FUNCTION GET_FOOD_GRP (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE)
    BEGIN
    EXCEPTION
    FUNCTION GET_SUB_FOOD_GRP (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_FOOD_GRP_NO IN RMS_FOOD_GRP.FOOD_GRP_NO%TYPE)
    BEGIN
    EXCEPTION
    FUNCTION GET_FOOD_ITMS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_FOOD_GRP_NO IN RMS_FOOD_GRP.FOOD_GRP_NO%TYPE, P_SUB_FOOD_GRP_NO IN RMS_SUB_FOOD_GRP.SUB_FOOD_GRP_NO%TYPE DEFAULT NULL)
    BEGIN
    EXCEPTION
    FUNCTION SRCH_ITM (P_LANG_NO IN 
    BEGIN
    EXCEPTION
    FUNCTION GET_WEEK_MOST_RQST_FOODS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_TOP_ROW_NUM IN NUMBER DEFAULT 5)
    BEGIN
        QRY_CTX := DBMS_XMLGEN.NEWCONTEXT ('SELECT I.I_CODE,
                                              FROM (SELECT M.I_CODE,
                                                      FROM (SELECT   I_CODE
                                                                FROM (SELECT BILL_SRL
                                                                        FROM RMS_BILL_MST
                                                                       WHERE BILL_DATE >= ''' || TO_CHAR (YS_GEN_PKG.GET_CURDATE - 7, 'DD/MM/YYYY') || ''') M,
                                                               WHERE M.BILL_SRL = D.BILL_SRL
                                                            GROUP BY I_CODE
                                                            ORDER BY SUM (NVL (I_QTY, 0) * NVL (P_SIZE, 1)) DESC) M,
                                                     WHERE M.I_CODE = I.I_CODE) I,
                                                   WHERE P.I_CODE = I.I_CODE
    EXCEPTION
    FUNCTION CHK_CSTMR_LGN (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_CSTMR_PWD IN IAS_CASH_CUSTMR.C_PWD%TYPE)
    BEGIN
        SELECT NVL (C_ACTVTN_FLG, 0), NVL (INACTIVE, 0)
          FROM (SELECT CUST_CODE,
                  FROM IAS_CASH_CUSTMR
                 WHERE CUST_CODE = P_MOBILE_NO AND C_PWD = P_CSTMR_PWD
                SELECT CUST_CODE,
                  FROM 
                 WHERE CUST_CODE = P_MOBILE_NO AND C_PWD = P_CSTMR_PWD)
         WHERE ROWNUM <= 1;
    EXCEPTION
    FUNCTION CHK_CSTMR_EMAIL (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_MOBILE_NO IN IAS_CASH_CUSTMR.MOBILE_NO%TYPE, P_EMAIL IN IAS_CASH_CUSTMR.E_MAIL%TYPE)
    BEGIN
        SELECT 1
          FROM IAS_CASH_CUSTMR
         WHERE CUST_CODE = P_MOBILE_NO AND E_MAIL = P_EMAIL AND ROWNUM <= 1;
    EXCEPTION
    FUNCTION GET_BRN_RGN (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_BRN_NO IN RMS_RGN.BRN_NO%TYPE)
    BEGIN
        QRY_CTX := DBMS_XMLGEN.NEWCONTEXT ('SELECT RGN_NO,
                                              FROM RMS_RGN
                                             WHERE BRN_NO = ' || P_BRN_NO || '
                                          ORDER BY DECODE (' || P_LANG_NO || ',1,RGN_L_NM,NVL(RGN_F_NM,RGN_L_NM))');
    EXCEPTION
    FUNCTION GET_PRMTRS(P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE)
    BEGIN
    FUNCTION CALC_DLVRY_AMT (P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE,
        FUNCTION IS_DLVRY_FREE
        BEGIN
    BEGIN
            BEGIN
                SELECT *
                  FROM RMS_BRN_PARA
                 WHERE BRN_NO = P_BRN_NO;
            EXCEPTION
            END;
                BEGIN
                    SELECT NVL (RGN_DLVRY_P
                      FROM RMS_RGN
                     WHERE BRN_NO = P_BRN_NO AND RGN_NO = P_RGN_NO;
                EXCEPTION
                END;
                SELECT NVL (DLVRY_AMT, 0)
                  FROM RMS_DLVRY_SLCS
                 WHERE BRN_NO = P_BRN_NO AND P_ORDR_AMT BETWEEN BILL_F_AMT AND BILL_T_AMT;
    EXCEPTION
    FUNCTION GET_CRDT_CRDS (P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE)
    BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT M.CR_CARD_TYPE,
                                       FROM IAS_CR_CARD_TYPES M, CREDIT_CARD_TYPES D
                                      WHERE M.CR_CARD_TYPE = D.CR_CARD_TYPE AND D.MACHINE_NO = '||G_TRMNL_NO);
    EXCEPTION
    FUNCTION GET_BILL_DOC_TYP (P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE)
    BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT 1 BILL_DOC_TYPE,
                                       FROM DUAL
                                      SELECT 2 BILL_DOC_TYPE,
                                       FROM DUAL
                                     SELECT 3 BILL_DOC_TYPE,
                                       FROM DUAL');
    EXCEPTION
    FUNCTION CHNG_DLVRY_PWD (P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            BEGIN
                SELECT 1, PSSWRD
                  FROM RMS_EMP
                 WHERE EMP_NO = P_DLVRY_NO
                    UPDATE RMS_EMP
                     WHERE EMP_NO = P_DLVRY_NO
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION CHK_DLVRY_LGN (P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
        SELECT NVL (INACTIVE, 0),
          FROM RMS_EMP
         WHERE EMP_NO = P_DLVRY_NO
    EXCEPTION
    FUNCTION GET_DLVRY_DATA (P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
           DBMS_XMLGEN.NEWCONTEXT ('SELECT EMP_NO,
                                      FROM RMS_EMP
                                     WHERE EMP_NO = '||NVL(P_DLVRY_NO||'','EMP_NO')||'
                                     ORDER BY EMP_NO');
    EXCEPTION
    FUNCTION GET_CSTMR_SGGSTNS_TYPES (P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE)
    BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT FLG_VALUE TYP_NO,FLG_DESC TYP_NM
                                       FROM S_FLAGS
                                      WHERE FLG_CODE = ''RMS_CSTMR_SGGSTNS''
                                      ORDER BY FLG_VALUE ASC');
    EXCEPTION
    FUNCTION ADD_CSTMR_SGGSTN(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            INSERT INTO RMS_CSTMR_SGGSTN (AD_DATE, CSTMR_CODE, SGGSTN, SGGSTN_TYP)
    EXCEPTION
    FUNCTION GET_DLVRY_STATUS_TYPES (P_LANG_NO  IN IAS_LABELS.LANG_NO%TYPE)
    BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT FLG_VALUE TYP_NO,FLG_DESC TYP_NM
                                       FROM S_FLAGS
                                      WHERE FLG_CODE = ''RMS_DLVRY_STATUS''
                                      ORDER BY FLG_VALUE ASC');
    EXCEPTION
    FUNCTION GET_DLVRY_BILLS (P_LANG_NO    IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            QRY_SQL := 'SELECT M.BILL_NO,
                          FROM RMS_BILL_MST M,
                         WHERE M.BILL_SRL = D.BILL_SRL
                         GROUP BY M.BILL_NO,
                         ORDER BY M.AD_DATE DESC';
            QRY_SQL := 'SELECT M.BILL_NO,
                          FROM RMS_BILL_MST M,
                         WHERE M.BILL_SRL = D.BILL_SRL
    EXCEPTION
    FUNCTION UPDT_BILL_DLVRY_STATUS (P_LANG_NO          IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
        UPDATE RMS_BILL_MST 
         WHERE BILL_SRL = P_BILL_SRL;
    EXCEPTION
    FUNCTION GET_RTRN_BILL_RSNS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE)
    BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT DECODE('|| P_LANG_NO ||',1,NVL(CODE_L_NM, CODE_F_NM),NVL(CODE_F_NM, CODE_L_NM)) DLVRY_RTRN_RSN
                                       FROM RMS_GNR_CODE_DTL
                                      WHERE CODE_TYP = 4
                                      ORDER BY CODE_NO');
    EXCEPTION
    FUNCTION GET_CSTMR_NTFCTN(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT NTFCTN_NO,
                                FROM RMS_CSTMR_NTFCTN_MST M
                               WHERE '''||V_DATE||''' BETWEEN F_TIME AND T_TIME 
                                 AND NOT EXISTS (SELECT 1 
                                                   FROM RMS_CSTMR_NTFCTN_DTL D
                                                  WHERE M.NTFCTN_NO = D.NTFCTN_NO
    EXCEPTION
    FUNCTION SET_CSTMR_NTFCTN_DLVRD(P_LANG_NO   IN IAS_LABELS.LANG_NO%TYPE,
    BEGIN
            INSERT INTO RMS_CSTMR_NTFCTN_DTL(DLVR_DATE,DVC_NO,NTFCTN_NO)
    EXCEPTION
    FUNCTION GET_ITM_CMPNNTS (P_LANG_NO IN IAS_LABELS.LANG_NO%TYPE, P_I_CODE IN IAS_ITM_MST.I_CODE%TYPE)
    BEGIN
        QRY_CTX := DBMS_XMLGEN.NEWCONTEXT ('SELECT K.I_CODE,
                                              FROM KIT_ITEMS K,
                                             WHERE K.I_CODE = I.I_CODE
    EXCEPTION
    FUNCTION SET_DFLT_BRN(P_BRN_NO RMS_CSTMR_ORDR_DTL.BRN_NO%TYPE)
    BEGIN
    FUNCTION CHK_ITM_QTY_AVLBL (P_I_CODE IN IAS_ITM_MST.I_CODE%TYPE)
    BEGIN
    BEGIN
CREATE OR REPLACE PACKAGE RMS_TAX_PKG
    FUNCTION GET_TAX_NM (P_TAX_NO   IN GNR_TAX_CODE_MST.TAX_NO%TYPE,
    FUNCTION GET_TAX_AGNCY_NM (P_TAX_NO     IN GNR_TAX_CODE_MST.TAX_NO%TYPE,
    FUNCTION GET_CLC_TAX_NM (P_CLC_TYP_NO   IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE,
    FUNCTION CHK_USE_TAX (P_CLC_DOC_TYP IN GNR_TAX_CODE_MST.CLC_DOC_TYP%TYPE)
    FUNCTION GET_CLC_TYP_NO_DFLT (P_BRN_NO IN S_BRN.BRN_NO%TYPE)
    FUNCTION GET_CLC_TYP_NO (P_CLC_TAX_TYP IN GNR_TAX_TYP_CLC_MST.CLC_TAX_TYP%TYPE)
    FUNCTION GET_CLC_TAX_TYP (P_CLC_TYP_NO IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE)
    FUNCTION GET_ITM_TAX_PRCNT (P_CLC_TYP_NO    IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE,
    FUNCTION GET_INPT_PRCNT (P_CLC_TYP_NO   IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE,
    FUNCTION GET_CLC_TYP_NO_ACTV_DATE (P_CLC_TYP_NO   IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE,
    PROCEDURE DEL_TAX_MOVMNT (P_DOC_TYP   IN RMS_TAX_ITM_MOVMNT.DOC_TYPE%TYPE,
    PROCEDURE CLC_ITM_TAX_AFTR_SAVE (P_CLC_TYP_NO          IN RMS_TAX_ITM_MOVMNT.CLC_TYP_NO%TYPE,
    PROCEDURE CLC_INPT_TAX_AFTR_SAVE (P_CLC_TYP_NO         IN RMS_TAX_INPT_MOVMNT.CLC_TYP_NO%TYPE,
CREATE OR REPLACE PACKAGE BODY RMS_TAX_PKG
    FUNCTION GET_TAX_NM (P_TAX_NO   IN GNR_TAX_CODE_MST.TAX_NO%TYPE,
    BEGIN
        SELECT DECODE (P_LNG_NO, 1, TAX_L_NM, NVL (TAX_F_NM, TAX_L_NM))
          FROM GNR_TAX_CODE_MST
         WHERE TAX_NO = P_TAX_NO
    EXCEPTION
    FUNCTION GET_TAX_AGNCY_NM (P_TAX_NO     IN GNR_TAX_CODE_MST.TAX_NO%TYPE,
    BEGIN
        SELECT DECODE (P_LNG_NO, 1, AGNCY_L_NM, NVL (AGNCY_F_NM, AGNCY_L_NM))
          FROM GNR_TAX_CODE_DTL
         WHERE TAX_NO = P_TAX_NO
    EXCEPTION
    FUNCTION GET_CLC_TAX_NM (P_CLC_TYP_NO   IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE,
    BEGIN
        SELECT DECODE (P_LNG_NO, 1, CLC_TYP_L_NM, NVL (CLC_TYP_F_NM, CLC_TYP_L_NM))
          FROM GNR_TAX_TYP_CLC_MST
         WHERE CLC_TYP_NO = P_CLC_TYP_NO
    EXCEPTION
    FUNCTION CHK_USE_TAX (P_CLC_DOC_TYP IN GNR_TAX_CODE_MST.CLC_DOC_TYP%TYPE)
    BEGIN
        SELECT 1
          FROM GNR_TAX_CODE_MST
         WHERE CLC_DOC_TYP = P_CLC_DOC_TYP
    EXCEPTION
    FUNCTION GET_CLC_TYP_NO_DFLT (P_BRN_NO IN S_BRN.BRN_NO%TYPE)
    BEGIN
        BEGIN
            SELECT CLC_TYP_NO
              FROM GNR_TAX_TYP_CLC_MST
             WHERE NVL (CLC_TYP_DFLT_FLG, 0) = 1
        EXCEPTION
                BEGIN
                    SELECT CLC_TYP_NO
                      FROM GNR_TAX_TYP_CLC_MST
                     WHERE NVL (CLC_TAX_TYP, 0) = 0
                EXCEPTION
                END;
        END;
    EXCEPTION
    FUNCTION GET_CLC_TYP_NO (P_CLC_TAX_TYP IN GNR_TAX_TYP_CLC_MST.CLC_TAX_TYP%TYPE)
    BEGIN
        SELECT CLC_TYP_NO
          FROM GNR_TAX_TYP_CLC_MST
         WHERE NVL (CLC_TAX_TYP, 0) = P_CLC_TAX_TYP
    EXCEPTION
    FUNCTION GET_CLC_TAX_TYP (P_CLC_TYP_NO IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE)
    BEGIN
        SELECT CLC_TAX_TYP
          FROM GNR_TAX_TYP_CLC_MST
         WHERE NVL (CLC_TYP_NO, 0) = P_CLC_TYP_NO
    EXCEPTION
    FUNCTION GET_ITM_TAX_PRCNT (P_CLC_TYP_NO    IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE,
    BEGIN
        SELECT SUM (NVL (TI.TAX_PRCNT, 0))
          FROM GNR_TAX_ITM          TI,
         WHERE TI.TAX_NO = TC.TAX_NO
    EXCEPTION
    FUNCTION GET_INPT_PRCNT (P_CLC_TYP_NO   IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE,
    BEGIN
        SELECT SUM (NVL (TI.TAX_PRCNT, 0))
          FROM GNR_TAX_INPT         TI,
         WHERE TI.TAX_NO = TC.TAX_NO
    EXCEPTION
    FUNCTION GET_CLC_TYP_NO_ACTV_DATE (P_CLC_TYP_NO   IN GNR_TAX_TYP_CLC_MST.CLC_TYP_NO%TYPE,
    BEGIN
        SELECT ACTV_DATE
          FROM GNR_TAX_TYP_CLC_BRN
         WHERE CLC_TYP_NO = P_CLC_TYP_NO
            SELECT ACTIVE_VAT_DATE INTO V_ACTV_DATE FROM IAS_PARA_GEN;
    EXCEPTION
    PROCEDURE DEL_TAX_MOVMNT (P_DOC_TYP   IN RMS_TAX_ITM_MOVMNT.DOC_TYPE%TYPE,
    BEGIN
        DELETE FROM RMS_TAX_ITM_MOVMNT
              WHERE DOC_TYPE = P_DOC_TYP
    EXCEPTION
                                     'ERROR WHEN DELETE FROM RMS_TAX_ITM_MOVMNT = ' || SQLERRM);
    PROCEDURE CLC_ITM_TAX_AFTR_SAVE ( P_CLC_TYP_NO        IN RMS_TAX_ITM_MOVMNT.CLC_TYP_NO%TYPE    ,
    BEGIN
        BEGIN
          EXECUTE IMMEDIATE 'DELETE '||P_TBL_MVMNT_NM||' WHERE DOC_TYPE='||P_DOC_TYP||' AND DOC_SER='''||P_DOC_SER||'''';            
        EXCEPTION WHEN OTHERS THEN NULL;
        END;    
        BEGIN 
             V_Slct:=  'INSERT INTO '||P_TBL_MVMNT_NM||' ( DOC_TYPE, 
                                                    SELECT '||P_DOC_TYP||', 
                                                      FROM '||P_TBL_MST_NM||' M,'||P_TBL_DTL_NM||' D ,GNR_TAX_ITM TI,GNR_TAX_CODE_MST TM ,GNR_TAX_CODE_DTL TD ,GNR_TAX_TYP_CLC_DTL TC,IAS_ITM_MST I
                                                     WHERE '||P_FLD_DOC_SER|
                                                  ORDER BY '||P_FLD_DOC_SEQ;                                                   
             V_Slct:=  'INSERT INTO '||P_TBL_MVMNT_NM||' ( DOC_TYPE, 
                                                    SELECT '||P_DOC_TYP||', 
                                                      FROM '||P_TBL_MST_NM||' M,'||P_TBL_DTL_NM||' D ,GNR_TAX_CODE_DTL TD,RMS_TAX_ITM_MOVMNT  T
                                                     WHERE '||P_FLD_DOC_SER||' ='||REPLACE(P_FLD_DOC_SER,'M.','D.')||'                                                                                                      
                                                  ORDER BY '||P_FLD_DOC_SEQ;  
                                                 -- INSERT INTO TST(FLD) VALUES (V_Slct);
              --## Update Tax Tables For Document
              V_CNT := YS_GEN_PKG.GET_CNT('SELECT 1 FROM '||P_TBL_MVMNT_NM||' 
                                            WHERE DOC_TYPE = '||P_DOC_TYP||'
                BEGIN
                      EXECUTE IMMEDIATE 'UPDATE '||P_TBL_DTL_NM||' M SET VAT_AMT = ( SELECT SUM(NVL(T.TAX_AMT,0)) 
                                                                                                   FROM '||P_TBL_MVMNT_NM||' T
                                                                                                  WHERE T.DOC_TYPE     = '||P_DOC_TYP||'
                                          WHERE '||P_FLD_DOC_SER||'='||P_DOC_SER;
                EXCEPTION WHEN OTHERS THEN
                END;
                BEGIN     
                  EXECUTE IMMEDIATE 'UPDATE '||P_TBL_MST_NM||' M SET VAT_AMT = ( SELECT SUM(NVL(T.I_QTY,0)*NVL(T.TAX_AMT,0)) 
                                                                                               FROM '||P_TBL_MVMNT_NM||' T
                                                                                              WHERE T.DOC_TYPE = '||P_DOC_TYP||'
                                      WHERE '||P_FLD_DOC_SER||' = '||P_DOC_SER;
                EXCEPTION WHEN OTHERS THEN
                END;                       
          END;     
    PROCEDURE CLC_INPT_TAX_AFTR_SAVE ( P_CLC_TYP_NO        IN RMS_TAX_INPT_MOVMNT.CLC_TYP_NO%TYPE    ,
    BEGIN
    BEGIN
      EXECUTE IMMEDIATE 'DELETE RMS_TAX_INPT_MOVMNT WHERE DOC_TYPE='||P_DOC_TYP||' AND DOC_SER='||P_DOC_SER||' AND INPT_TYP='||P_INPT_TYP;          
    EXCEPTION WHEN OTHERS THEN NULL;
    END;    
    BEGIN 
         V_Slct:=  'INSERT INTO RMS_TAX_INPT_MOVMNT  ( DOC_TYPE, 
                                                SELECT '||P_DOC_TYP||', 
                                                  FROM '||P_TBL_INPT_NM||' M,GNR_TAX_INPT TI,GNR_TAX_CODE_MST TM ,GNR_TAX_CODE_DTL TD ,GNR_TAX_TYP_CLC_DTL TC'||V_TBL_TRNS||'
                                                 WHERE '||P_FLD_DOC_SER_IN
                                              ORDER BY TI.TAX_NO, 
      END;
      --insert into tst (fld) values (V_Slct);
      --## Update Tax Tables For Document
      V_CNT := YS_GEN_PKG.GET_CNT('SELECT 1 FROM RMS_TAX_INPT_MOVMNT 
                                    WHERE DOC_TYPE = '||P_DOC_TYP||'
                BEGIN
                      EXECUTE IMMEDIATE 'UPDATE '||P_TBL_INPT_NM||' M SET VAT_AMT = ( SELECT SUM(NVL(TAX_AMT,0)) 
                                                                                       FROM RMS_TAX_INPT_MOVMNT
                                                                                      WHERE DOC_TYPE  = '||P_DOC_TYP||'
                                          WHERE '||P_FLD_DOC_SER_INPT||'='||P_DOC_SER;
                EXCEPTION WHEN OTHERS THEN
                END;
            BEGIN
               EXECUTE IMMEDIATE 'UPDATE '||P_TBL_MST_NM||' A SET VAT_AMT_OTHR =(SELECT SUM(NVL(VAT_AMT,0)) 
                                                                                   FROM '||P_TBL_INPT_NM||' M
                                                                                  WHERE '||P_FLD_DOC_SER_INPT||'=A.'||P_FLD_DOC_SER||'
                                   WHERE '||P_FLD_DOC_SER||'='||P_DOC_SER;
            EXCEPTION WHEN OTHERS THEN
            END;
            BEGIN
               EXECUTE IMMEDIATE 'UPDATE '||P_TBL_DTL_NM||' A SET VAT_AMT_OTHR =(SELECT (NVL(M.VAT_AMT_OTHR,0)/NVL(M.'||P_FLD_DOC_AMT||',0))*NVL(A.I_PRICE,0) 
                                                                                   FROM '||P_TBL_MST_NM||' M
                                                                                  WHERE '||P_FLD_DOC_SER||'=A.'||P_FLD_DOC_SER||'
                                   WHERE '||P_FLD_DOC_SER||'='||P_DOC_SER;
            EXCEPTION WHEN OTHERS THEN
            END;
    EXCEPTION WHEN OTHERS THEN
CREATE OR REPLACE PACKAGE RMS_MOBILE_PKG IS
   FUNCTION INSRT_RMS_BILL_MST (P_BILL_DATE                RMS_BILL_MST.BILL_DATE%TYPE,
                                P_TOT_ITM_PRICE            RMS_BILL_DTL.I_PRICE%TYPE, --FROM DTL
                                P_TOT_DISC_DTL             NUMBER, --FROM DTL
                                P_SUM_TOT_VAT_AMT          NUMBER, --FROM DTL
   FUNCTION INSRT_RMS_BILL_DTL (P_I_CODE              RMS_BILL_DTL.I_CODE%TYPE,
   FUNCTION CHCK_DISC_PRIV
   FUNCTION LOAD_PRMTRS
   FUNCTION CHCK_CREDIT_LIMIT
   FUNCTION PST_COMMIT_PRC
   FUNCTION GET_GRP_ITMS_XML (P_LANG_NO            IN IAS_LABELS.LANG_NO%TYPE DEFAULT 1,
   PROCEDURE INSRT_RMS_BILL_PRC (P_XML_INPT IN CLOB, P_JSON_RSLT OUT VARCHAR2);
   PROCEDURE INSRT_RMS_BILL_DTL (P_XML_INPT IN CLOB, P_JSON_RSLT OUT VARCHAR2,P_INSRT_TYP VARCHAR2 DEFAULT  'ADD_DTL');
   FUNCTION MOVE_BILL(P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE,P_HALL_NO RMS_HALL.HALL_NO%TYPE,P_TBL_NO RMS_TBL.TBL_NO%TYPE) 
   FUNCTION MERGE_TABLES(P_S_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE,
   FUNCTION CLOSE_BILL(P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE) 
   FUNCTION CHANGE_BILL_DLVRY_STATUS(P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE) 
   FUNCTION SAVE_CSTMR_DATA(P_XML_INPT IN CLOB) 
   FUNCTION UPDT_BILL_AMT
   FUNCTION GET_FOOD_GRP(P_LANG_NO IAS_LABELS.LANG_NO%TYPE ,P_USR_NO USER_R.U_ID%TYPE DEFAULT NULL)
   FUNCTION GET_SUB_FOOD_GRP(P_LANG_NO IAS_LABELS.LANG_NO%TYPE , P_FOOD_GRP_NO RMS_FOOD_GRP.FOOD_GRP_NO%TYPE DEFAULT NULL )
   FUNCTION GET_FOOD_ITMS(P_LANG_NO            IN IAS_LABELS.LANG_NO%TYPE DEFAULT 1,
   FUNCTION GET_FOOD_ITM_ATTCH(P_LANG_NO         IN IAS_LABELS.LANG_NO%TYPE DEFAULT 1,
   FUNCTION GET_HALLS(P_LANG_NO   IN IAS_LABELS.LANG_NO%TYPE,
   FUNCTION GET_TBLS(P_LANG_NO   IN IAS_LABELS.LANG_NO%TYPE,
   FUNCTION GET_HALL_TBLS_STS(P_BRN_NO       IN RMS_HALL.BRN_NO%TYPE,
   FUNCTION GET_ALL_PRMTRS
   FUNCTION GET_PRVLGS(P_USR_NO      IN USER_R.U_ID%TYPE DEFAULT NULL)
   FUNCTION GET_USRS(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
   FUNCTION GET_BRNS(P_LANG_NO   IN IAS_LABELS.LANG_NO%TYPE,
   FUNCTION GET_CSTMRS(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
   FUNCTION GET_CSTMR_LCTN(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
   FUNCTION GET_TRMNLS (P_TRMNL_NO    IN RMS_TRMNL.TRMNL_NO%TYPE DEFAULT NULL,
   FUNCTION GET_NOTES(P_LANG_NO       IN IAS_LABELS.LANG_NO%TYPE,
   FUNCTION GET_BILL_DOC_TYPES(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE)
   FUNCTION GET_SALES_TYPES(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
   FUNCTION GET_SRVRS        
   FUNCTION GET_BILL_DATA(P_BILL_SRL IN RMS_BILL_MST.BILL_SRL%TYPE,
   FUNCTION CHK_TRMNL_DATA(P_TRMNL_NO IN RMS_TRMNL.TRMNL_NO%TYPE, 
CREATE OR REPLACE PACKAGE BODY RMS_MOBILE_PKG IS
   FUNCTION INSRT_RMS_BILL_MST (P_BILL_DATE                   RMS_BILL_MST.BILL_DATE%TYPE,
   BEGIN  
          BEGIN
              SELECT NVL(DFLT_BILL_SRVC_TYPE,2)
                FROM RMS_TRMNL
               WHERE TRMNL_NO = P_TRMNL_NO
          EXCEPTION
          END;
           BEGIN
               SELECT SI_TYPE
                 FROM RMS_TRMNL 
                WHERE TRMNL_NO =  P_TRMNL_NO ;
           EXCEPTION 
           END; 
               BEGIN
                  BEGIN
                     SELECT SECRET_KEY
                       FROM CUSTOMER
                      WHERE C_CODE = V_C_CODE;
                  EXCEPTION
                  END;
               END;
            BEGIN
               SELECT NVL (INV_DIS_LMT, 0)
                 FROM PRIVILEGE_FIXED
                WHERE U_ID = V_USR_NO;
    EXCEPTION
            END;
         BEGIN
            BEGIN
                  SELECT INACTIVE
                    FROM IAS_CASH_CUSTMR, IAS_CASH_CUSTMR_GRP
                   WHERE IAS_CASH_CUSTMR.CUST_GRP_CODE = IAS_CASH_CUSTMR_GRP.CUST_GRP_CODE(+) AND CUST_CODE = P_CSTMR_CODE AND ROWNUM <= 1;
            EXCEPTION
            END;
            BEGIN
            END;
         END;
      INSERT INTO RMS_BILL_MST (BILL_NO,
   EXCEPTION
   FUNCTION INSRT_RMS_BILL_DTL (P_I_CODE              RMS_BILL_DTL.I_CODE%TYPE,
   BEGIN
      BEGIN
           SELECT DECODE(V_LNG_NO,1,I_NAME,NVL(I_E_NAME,I_NAME)),NVL(CHK_AVL_QTY_IN_RES,0),G_CODE,USE_EXP_DATE,USE_QTY_FRACTION
             FROM IAS_ITM_MST
            WHERE I_CODE = P_I_CODE;
      EXCEPTION
      BEGIN
              BEGIN
                  BEGIN
                      SELECT DECODE(V_LNG_NO,1,I_NAME,NVL(I_E_NAME,I_NAME)),NVL(CHK_AVL_QTY_IN_RES,0)
                        FROM IAS_ITM_MST
                       WHERE I_CODE = P_I_CODE;
                            BEGIN
                            EXCEPTION
                                    V_MSG_TXT := 'EXCEPTION WHEN CALL RMS_GET_QTY_FNC';
                            END;
                  EXCEPTION
                  END;
              END;
      BEGIN
              BEGIN 
                       BEGIN
                       EXCEPTION
                       END;
                       BEGIN
                       EXCEPTION
                       END;
              END;
      BEGIN
      INSERT INTO RMS_BILL_DTL (BILL_NO,
   EXCEPTION
   FUNCTION CHCK_DISC_PRIV
   BEGIN
         BEGIN
               SELECT NVL (INV_DIS_LMT, 0), NVL (INV_DIS_LMT_ITM, INV_DIS_LMT)
                 FROM PRIVILEGE_FIXED
                WHERE U_ID = V_USR_NO;
         END;
   FUNCTION LOAD_PRMTRS 
   BEGIN
      BEGIN
         SELECT NVL (USE_SEC_KEY_IN_CR_SLS, 0),
           FROM RMS_PARA;
      EXCEPTION
            RETURN 'ERROR WHEN GET PARAMETERS FROM RMS_PARA ' || SQLERRM;
      END;
      BEGIN
         SELECT NVL (USE_PRICE_INCLUDE_VAT, 0),
           FROM IAS_PARA_GEN,
      EXCEPTION
            RETURN 'ERROR WHEN GET PARAMETERS FROM RMS_PARA IAS_PARA_GEN ' || SQLERRM;
      BEGIN
         SELECT CC_CODE, 
           FROM RMS_TRMNL
          WHERE UPPER (TRMNL_NO) = UPPER (V_TRMNL_NO);
      EXCEPTION
            RETURN 'ERROR WHEN GET PARAMETERS FROM RMS_TRMNL ' || SQLERRM;
      BEGIN
         SELECT CUR_CODE
           FROM EX_RATE
          WHERE L_F = 1;
      EXCEPTION
            RETURN 'ERROR WHEN GET PARAMETERS FROM RMS_PARA RMS_TRMNL ' || SQLERRM;
      END;
   EXCEPTION
   FUNCTION CHCK_CREDIT_LIMIT
   BEGIN
         BEGIN
            SELECT CRLIMIT_TYPE,
              FROM PRIVILEGE_FIXED
             WHERE U_ID = V_USR_NO;
         EXCEPTION
         END;
         BEGIN
            SELECT SUM (NVL (BILL_AMT, 0) - NVL (DISC_AMT, 0) + NVL (VAT_AMT, 0))
              FROM RMS_BILL_MST
             WHERE C_CODE = V_C_CODE AND A_CY = V_A_CY AND BILL_TYPE = 4 AND NVL (PST_FLG, 0) = 0;
         EXCEPTION
         END;
         BEGIN
            SELECT SUM (NVL (RT_BILL_AMT, 0) - NVL (DISC_AMT, 0) + NVL (VAT_AMT, 0))
              FROM RMS_RT_BILL_MST
             WHERE C_CODE = V_C_CODE AND A_CY = V_A_CY AND NVL (PST_FLG, 0) = 0;
         EXCEPTION
         END;
         BEGIN
               '  Select Sum(Nvl(Bill_Amt,0)-Nvl(Disc_Amt,0)+Nvl(Vat_Amt,0))  net_amt
                                       From ' || USER || '.RMS_BILL_MST@ONYX.ONYX.COM
                                        Where C_Code = ''' || V_C_CODE ||
         EXCEPTION
         END;
         BEGIN
               '  Select Sum(Nvl(Rt_Bill_Amt,0)-Nvl(Disc_Amt,0)+Nvl(Vat_Amt,0)) net_amt
                                       From ' || USER || '.RMS_RT_BILL_MST@ONYX.ONYX.COM
                                        Where C_Code = ''' || V_C_CODE ||
         EXCEPTION
         END;
   EXCEPTION
   FUNCTION PST_COMMIT_PRC
   BEGIN
   EXCEPTION
   FUNCTION GET_GRP_ITMS_XML (P_LANG_NO            IN IAS_LABELS.LANG_NO%TYPE DEFAULT 1,
   BEGIN
   BEGIN 
      SELECT 2
        FROM RMS_SUB_FOOD_GRP
       WHERE FOOD_GRP_NO  = P_SLCT_FOOD_GRP_NO
   EXCEPTION
   END;
   FOR ITMS IN (SELECT SUB_FOOD_GRP_NO,DECODE(P_LANG_NO,1,NVL(SUB_FOOD_GRP_L_NM,SUB_FOOD_GRP_F_NM),NVL(SUB_FOOD_GRP_F_NM,SUB_FOOD_GRP_L_NM)) GRP_NAME,SUB_FOOD_GRP_IMG,1 SAL_UNT_CNT,V_SUB_GRP_FLG GRP_ITM_FLG
                              FROM RMS_SUB_FOOD_GRP
                             WHERE FOOD_GRP_NO       = P_SLCT_FOOD_GRP_NO
                  ORDER BY SUB_FOOD_GRP_ORDR_NO,SUB_FOOD_GRP_NO) 
   EXCEPTION 
   PROCEDURE INSRT_RMS_BILL_PRC (P_XML_INPT IN CLOB, P_JSON_RSLT OUT VARCHAR2) IS
   BEGIN
      FOR MST_CRSR IN (SELECT EXTRACTVALUE (VALUE (XMLMSTDMY), '*/BILL_DATE') AS BILL_DATE,
                              EXTRACTVALUE (VALUE (XMLMSTDMY), '*/SECRET_KEY') AS SECRET_KEY, -- FROM SCREEN
                              EXTRACTVALUE (VALUE (XMLMSTDMY), '*/TOT_ITM_PRICE') AS TOT_ITM_PRICE, --FROM DTL
                              EXTRACTVALUE (VALUE (XMLMSTDMY), '*/TOT_DISC_DTL') AS TOT_DISC_DTL, --FROM DTL
                              EXTRACTVALUE (VALUE (XMLMSTDMY), '*/SUM_TOT_VAT_AMT') AS SUM_TOT_VAT_AMT, --FROM DTL
                              EXTRACTVALUE (VALUE (XMLMSTDMY), '*/TOT_DISC') AS TOT_DISC, --FROM DTL
                         FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_INPT, '/RMS_BILL/RMS_BILL_MST'))) XMLMSTDMY)
         BEGIN
                                   P_TOT_ITM_PRICE           => MST_CRSR.TOT_ITM_PRICE, --FROM DTL
                                   P_TOT_DISC_DTL            => MST_CRSR.TOT_DISC_DTL, --FROM DTL
                                   P_SUM_TOT_VAT_AMT         => MST_CRSR.SUM_TOT_VAT_AMT, --FROM DTL
         EXCEPTION
         END;
          UPDATE RMS_TRMNL
           WHERE TRMNL_NO = DECODE (V_DOC_SRL_TYP, 2, V_TRMNL_NO,TRMNL_NO)
   EXCEPTION
   PROCEDURE INSRT_RMS_BILL_DTL(P_XML_INPT    IN       CLOB,P_JSON_RSLT   OUT      VARCHAR2,P_INSRT_TYP VARCHAR2 DEFAULT  'ADD_DTL') --  "ADD_DTL" && "MST_DTL"
   BEGIN
            BEGIN
                SELECT EXTRACTVALUE(VALUE(XMLMSTDMY), '*/BILL_SRL') AS BILL_SRL, 
                  FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_INPT, '/RMS_BILL/RMS_BILL_MST'))) XMLMSTDMY
                 WHERE ROWNUM <= 1;
            EXCEPTION
            END;
            BEGIN
               SELECT BILL_NO,CMP_NO,BRN_NO,BRN_YEAR,BRN_USR,BILL_DATE,TRMNL_NO,BILL_DOC_TYPE,A_CY,BILL_TYPE,SI_TYPE,BILL_RATE,SCTN_NO
                 FROM (SELECT BILL_SRL,BILL_NO,CMP_NO,BRN_NO,BRN_YEAR,BRN_U
                         FROM RMS_BILL_MST 
                       SELECT BILL_SRL,BILL_NO,CMP_NO,BRN_NO,BRN_YEAR,BRN_USR,BILL_DATE,TRMNL_NO,BILL_DOC_TYPE,A_CY,BILL_TYPE,SI_TYPE,BILL_RATE,SCTN_NO 
                         FROM RMS_HST_BILL_MST)
                WHERE BILL_SRL = V_BILL_SRL
               SELECT NVL(MAX(RCRD_NO),0) 
                 FROM (SELECT NVL(MAX(RCRD_NO),0) RCRD_NO FROM RMS_BILL_DTL WHERE BILL_SRL = V_BILL_SRL 
                       SELECT NVL(MAX(RCRD_NO),0) RCRD_NO FROM RMS_HST_BILL_DTL WHERE BILL_SRL = V_BILL_SRL);
            EXCEPTION 
            END; 
       FOR DTL_CRSR IN (SELECT EXTRACTVALUE(VALUE(XMLMSTDMY), '*/I_CODE') AS I_CODE
                          FROM TABLE(XMLSEQUENCE(EXTRACT(V_XML_INPT, '/RMS_BILL/RMS_BILL_DTL'))) XMLMSTDMY)
          BEGIN
          EXCEPTION
          END;
       BEGIN
       EXCEPTION
           BEGIN
           EXCEPTION
           END;
   EXCEPTION
   FUNCTION MOVE_BILL(P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE,P_HALL_NO RMS_HALL.HALL_NO%TYPE,P_TBL_NO RMS_TBL.TBL_NO%TYPE) 
   BEGIN
       BEGIN
           SELECT 1
             FROM RMS_TBL
            WHERE HALL_NO = P_HALL_NO
       EXCEPTION
       UPDATE RMS_BILL_MST 
        WHERE BILL_SRL = P_BILL_SRL;
   EXCEPTION 
   FUNCTION MERGE_TABLES(P_S_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE,
   BEGIN
       UPDATE RMS_BILL_MST 
          SET TBL_NO = NVL((SELECT TBL_NO 
                              FROM RMS_BILL_MST 
                             WHERE BILL_SRL = P_D_BILL_SRL
        WHERE BILL_SRL = P_S_BILL_SRL;
   EXCEPTION 
   FUNCTION CLOSE_BILL(P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE) 
   BEGIN 
       -- THEREE IS NO CLOSE BILL FUNCTION , WE CLOSE BILL WHEN IT PAID
   EXCEPTION 
   FUNCTION CHANGE_BILL_DLVRY_STATUS(P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE) 
   BEGIN
       UPDATE RMS_BILL_MST 
        WHERE BILL_SRL = P_BILL_SRL;
   EXCEPTION 
   FUNCTION SAVE_CSTMR_DATA(P_XML_INPT IN CLOB) 
   BEGIN
        FOR CSTMR_CRSR IN (SELECT EXTRACTVALUE (VALUE (XMLMSTDMY), '*/LNG_NO') AS LNG_NO,
                             FROM TABLE (XMLSEQUENCE (EXTRACT (V_XML_INPT, '/RMS_CSH_CSTMR/CSH_CSTMR'))) XMLMSTDMY)
            BEGIN 
                SELECT 1
                  FROM IAS_CASH_CUSTMR
                 WHERE CUST_CODE = CSTMR_CRSR.CSTMR_MOBILE
            EXCEPTION
   EXCEPTION 
   FUNCTION UPDT_BILL_AMT RETURN VARCHAR2
   BEGIN
            BEGIN
                 SELECT NVL(COUNT(*
                   FROM RMS_BILL_DTL
                  WHERE BILL_SRL = V_BILL_SRL;
                 UPDATE RMS_BILL_MST
                  WHERE BILL_SRL = V_BILL_SRL;
            EXCEPTION
                   RETURN 'EXCEPTION WHEN UPDATE_BILL_AMT '||SQLERRM;
            END;
   EXCEPTION 
           RETURN 'EXCEPTION IN UPDATE_BILL_AMT '||SQLERRM;
   FUNCTION GET_FOOD_GRP(P_LANG_NO IAS_LABELS.LANG_NO%TYPE ,P_USR_NO USER_R.U_ID%TYPE DEFAULT NULL)
   BEGIN
             DBMS_XMLGEN.NEWCONTEXT (' SELECT PRV.U_ID,GRP.FOOD_GRP_NO,
                                                 (CASE WHEN (SELECT NVL(COUNT(*),0) FROM RMS_SUB_FOOD_GRP WHERE RMS_SUB_FOOD_GRP.FOOD_GRP_NO = GRP.FOOD_GRP_NO AND NVL(INACTIVE,0) = 0) > 0 THEN 1 ELSE 0 END) HAS_SUB_GRP
                                            FROM RMS_FOOD_GRP GRP, RMS_FOOD_GRP_PRV PRV
                                           WHERE GRP.FOOD_GRP_NO = PRV.FOOD_GRP_NO
                                             AND EXISTS(SELECT 1 FROM IAS_ITM_MST WHERE FOOD_GRP_NO = GRP.FOOD_GRP_NO AND ROWNUM <= 1)
                                        ORDER BY GRP.FOOD_GRP_ORDR_NO, GRP.FOOD_GRP_NO');     
   EXCEPTION 
   FUNCTION GET_SUB_FOOD_GRP(P_LANG_NO IAS_LABELS.LANG_NO%TYPE,P_FOOD_GRP_NO RMS_FOOD_GRP.FOOD_GRP_NO%TYPE DEFAULT NULL)
   BEGIN
              DBMS_XMLGEN.NEWCONTEXT ('SELECT FOOD_GRP_NO,SUB_FOOD_GRP_NO,
                                            FROM RMS_SUB_FOOD_GRP
                                           WHERE NVL (INACTIVE, 0) = 0
                                        ORDER BY SUB_FOOD_GRP_NO');
   EXCEPTION 
   FUNCTION GET_FOOD_ITMS(P_LANG_NO            IN IAS_LABELS.LANG_NO%TYPE DEFAULT 1,
   BEGIN
             DBMS_XMLGEN.NEWCONTEXT ('SELECT  M.I_CODE,LTRIM(RTRIM(NVL(DECODE('||P_LANG_NO||',1,NVL(M.SHRT_ITM_L_NM,M.SHRT_ITM_F_NM),NVL(M.SHRT_ITM_F_NM,M.SHRT_ITM_L_NM)),(DECODE('||P_LANG_NO||',1,NVL(M.I_NAME,M.I_E_NAME),NVL(M.I_E_NAME,M.I_NAME)))))) I_NAME,
                                                 (CASE WHEN (SELECT NVL(COUNT(*),0) FROM RMS_ITM_ATTCH WHERE RMS_ITM_ATTCH.I_CODE = M.I_CODE) > 0 THEN 1 ELSE 0 END) HAS_ITM_ATTCH,
                                            FROM (SELECT MI.FOOD_GRP_NO FOOD_GRP_NO_1, MI.SUB_FOOD_GRP_NO SUB_FOOD_GRP_NO_1, MI.*
                                                    FROM IAS_ITM_MST MI
                                                   WHERE MI.REST_ITM = 1
                                                  SELECT FD.FOOD_GRP_NO FOOD_GRP_NO_1, FD.SUB_FOOD_GRP_NO SUB_FOOD_GRP_NO_1, MI.*
                                                    FROM IAS_ITM_MST MI, RMS_FOOD_GRP_ITM_CODE FD
                WHERE MI.
                                           WHERE M.I_CODE = D.I_CODE
                                        ORDER BY M.ITM_ORDR_NO, M.I_CODE');
   EXCEPTION 
   FUNCTION GET_FOOD_ITM_ATTCH(P_LANG_NO         IN IAS_LABELS.LANG_NO%TYPE DEFAULT 1,
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT D.I_CODE,
                                          FROM IAS_ITM_MST M,
                                         WHERE M.I_CODE = D.I_CODE_ATTCH
   EXCEPTION 
   FUNCTION GET_HALLS (P_LANG_NO   IN IAS_LABELS.LANG_NO%TYPE,
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT HALL.BRN_NO,PRV.U_ID,HALL.HALL_NO,DECODE('||P_LANG_NO||',1,HALL.HALL_L_NM,NVL(HALL.HALL_F_NM,HALL.HALL_L_NM)) HALL_NM,HALL.PRICE_LVL
                                       FROM RMS_HALL HALL,RMS_HALL_PRV PRV
                                      WHERE HALL.BRN_NO = PRV.BRN_NO
                                      ORDER BY HALL_NO');
   EXCEPTION 
   FUNCTION GET_TBLS (P_LANG_NO   IN IAS_LABELS.LANG_NO%TYPE,
   BEGIN
             DBMS_XMLGEN.NEWCONTEXT ('SELECT BRN_NO,HALL_NO, TBL_NO,
                                           FROM RMS_TBL
                                          WHERE BRN_NO = '||P_BRN_NO||'
                                          ORDER BY HALL_NO,TBL_NO');
   EXCEPTION 
   FUNCTION GET_HALL_TBLS_STS (P_BRN_NO       IN RMS_HALL.BRN_NO%TYPE,
            DBMS_XMLGEN.NEWCONTEXT ('SELECT DISTINCT 
                                          FROM RMS_TBL_LCTN RL,
                                               (SELECT TO_CHAR(BILL_SRL) BILL_SRL,BILL_NO,
                                                  FROM RMS_BILL_MST RMI
                                                 WHERE BRN_NO = '||P_BRN_NO||'
                                         WHERE RL.BRN_NO = '||P_BRN_NO||'
                                           AND EXISTS (SELECT 1
                                                         FROM RMS_TBL
                                                        WHERE BRN_NO = '||P_BRN_NO||'
                                         ORDER BY HALL_NO,TBL_NO');
   EXCEPTION 
   FUNCTION GET_ALL_PRMTRS
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT NVL (SALES_DISC_TYPE, 0) SALES_DISC_TYPE,
                                          FROM IAS_PARA_GEN,
   EXCEPTION 
   FUNCTION GET_USRS(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT U.U_ID,
                                          FROM USER_R U,S_USR_HND_DVC H
                                         WHERE U.U_ID = H.U_ID(+)
   EXCEPTION 
   FUNCTION GET_BRNS(P_LANG_NO   IN IAS_LABELS.LANG_NO%TYPE,
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT BRN_NO,
                                          FROM S_BRN
                                         WHERE NVL(INACTIVE,0) = 0 
                                                        (SELECT 1
                                                           FROM S_BRN_USR_PRIV
                                                          WHERE U_ID = '||P_USR_NO||'
   EXCEPTION 
   FUNCTION GET_PRVLGS(P_USR_NO      IN USER_R.U_ID%TYPE)
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT NVL (MOD_ITM_DISC, 0) MOD_ITM_DISC,
                                          FROM PRIVILEGE_FIXED
                                         WHERE U_ID = '||NVL(P_USR_NO||'','U_ID'));
   EXCEPTION 
   FUNCTION GET_CSTMRS(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
   BEGIN
              DBMS_XMLGEN.NEWCONTEXT ('SELECT CSTMR_CODE,
                                            FROM (SELECT CUST_CODE CSTMR_CODE,
                                                    FROM IAS_CASH_CUSTMR,
                                                   WHERE NVL (INACTIVE, 0) = 0
                                                  SELECT CUSTOMER.C_CODE CSTMR_CODE,
                                                    FROM CUSTOMER,
                                                   WHERE NVL (INACTIVE, 0) = 0
                                                     AND EXISTS (SELECT 1
                                                                   FROM PRIV_ACC
                                                                  WHERE U_ID = '||P_USR_NO||'
                                           WHERE CSTMR_CODE = '||NVL(''''||P_CSTMR_CODE||'''','CSTMR_CODE')||'
                                           ORDER BY CSTMR_TYP,
   EXCEPTION 
   FUNCTION GET_CSTMR_LCTN(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT L.CSTMR_RGN_NO,
                                          FROM RMS_RGN R,
                                         WHERE R.RGN_NO = L.CSTMR_RGN_NO
                                        SELECT L.CSTMR_RGN_NO,
                                          FROM RMS_RGN R,
                                         WHERE R.RGN_NO = L.CSTMR_RGN_NO
   EXCEPTION 
   FUNCTION GET_TRMNLS (P_TRMNL_NO    IN RMS_TRMNL.TRMNL_NO%TYPE DEFAULT NULL,
       V_NO_DVC_EXCPTN   EXCEPTION;
       V_NO_TRMNL_EXCPTN EXCEPTION;
   BEGIN
           BEGIN
               SELECT 1 
                 FROM S_USR_HND_DVC
                WHERE HND_DVC_SRL = P_HND_DVC_SRL
           EXCEPTION
           END;
           BEGIN
               SELECT TRMNL_NAME 
                 FROM USER_R
                WHERE U_ID = P_USR_NO
               SELECT TRMNL_NO
                 FROM RMS_TRMNL
                WHERE UPPER(TRMNL_NM) = UPPER(V_TRMNL_NM)
           EXCEPTION
           END;
            DBMS_XMLGEN.NEWCONTEXT ('SELECT R.ACTV_NO,
                                          FROM RMS_TRMNL R
                                         WHERE TRMNL_NO ='||NVL(V_TRMNL_NO||'','TRMNL_NO')||' 
   EXCEPTION 
   FUNCTION GET_NOTES(P_LANG_NO       IN IAS_LABELS.LANG_NO%TYPE,
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT DECODE ('||P_LANG_NO||', 1, NVL (NOTE_L_NM, NOTE_F_NM), NVL (NOTE_F_NM, NOTE_L_NM)) NOTE_NM, 
                                          FROM RMS_NOTE
                                         WHERE NVL (INACTIVE, 0) = 0
   EXCEPTION 
   FUNCTION GET_BILL_DOC_TYPES(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE)
   BEGIN
   EXCEPTION 
   FUNCTION GET_SALES_TYPES(P_LANG_NO     IN IAS_LABELS.LANG_NO%TYPE,
   BEGIN
              DBMS_XMLGEN.NEWCONTEXT ('SELECT PRV.U_ID,DECODE('||P_LANG_NO||',1,NVL(TYP.SI_A_NAME,TYP.SI_E_NAME) ,NVL(SI_E_NAME,SI_A_NAME)) SI_TYPE_NM,TO_CHAR(SI_TYPE) SI_TYPE,PRICE_LVL
                                            FROM IAS_SALES_TYPES TYP,
                                           WHERE TYP.SI_TYPE = PRV.S_TYPE
                                        ORDER BY SI_TYPE');
   EXCEPTION 
   FUNCTION GET_SRVRS        
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT NVL (IAS_SYS.S_TRMNLS_AUTHRTY.SERVER_NAME, IAS_SYS.S_TRMNLS_AUTHRTY.TRMNL_NAME) SERVER_NM,
                                          FROM IAS_SYS.S_TRMNLS_AUTHRTY
                                         WHERE IAS_SYS.S_TRMNLS_AUTHRTY.SYS_NO = 5
                                         ORDER BY IAS_SYS.S_TRMNLS_AUTHRTY.SERVER_NO ');
   EXCEPTION 
   FUNCTION REPLACE_CLOB(P_SRC CLOB
   BEGIN
   FUNCTION GET_BILL_DATA(P_BILL_SRL RMS_BILL_MST.BILL_SRL%TYPE,
   BEGIN
            DBMS_XMLGEN.NEWCONTEXT ('SELECT R.BILL_NO, R.BILL_SRL, R.BILL_DATE, 
                                               R.BILL_SRVC_TYPE, R.SI_TYPE,(SELECT DECODE('||P_LANG_NO||',1,NVL(TYP.SI_A_NAME,TYP.SI_E_NAME) ,NVL(SI_E_NAME,SI_A_NAME))
                                                                              FROM IAS_SALES_TYPES TYP
                                                                             WHERE TYP.SI_TYPE = R.SI_TYPE AND ROWNUM <= 1) SI_TYPE_NM,
                                            FROM RMS_BILL_MST R
                                           WHERE BILL_SRL = '||P_BILL_SRL);
                DBMS_XMLGEN.NEWCONTEXT ('SELECT D.BILL_NO,
                                              FROM RMS_BILL_DTL D,IAS_ITM_MST M
                                             WHERE D.BILL_SRL = '||P_BILL_SRL||'
   EXCEPTION 
   FUNCTION CHK_TRMNL_DATA(P_TRMNL_NO IN RMS_TRMNL.TRMNL_NO%TYPE, 
   BEGIN
       SELECT NVL(INACTIVE, 0), DEF_BRN_NO
         FROM RMS_TRMNL
        WHERE TRMNL_NO = P_TRMNL_NO;
   EXCEPTION
   FUNCTION XML_FNC
   BEGIN
   EXCEPTION 
    BEGIN
CREATE OR REPLACE PACKAGE GLS_LMT_PKG AS
   PROCEDURE GET_PARAMTRS;
   PROCEDURE CHK_AC_LMT (P_DR_CR          IN     NUMBER DEFAULT 1, --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
   FUNCTION GET_FCLTY_BLNC (P_AC_CODE       IN ACCOUNT.A_CODE%TYPE,
   PROCEDURE GET_ACDTL_LMT_BLNC (P_DOC_DATE        IN     DATE DEFAULT YS_GEN_PKG.GET_SYSDATE,
CREATE OR REPLACE PACKAGE BODY GLS_LMT_PKG AS
   PROCEDURE GET_PARAMTRS IS
   BEGIN
      BEGIN
         SELECT GL_LMT_TYPE,
           FROM IAS_PARA_GL, IAS_PARA_AR;
      EXCEPTION
      END;
   PROCEDURE CHK_AC_LMT (P_DR_CR          IN     NUMBER DEFAULT 1, --0 CREDIT(RECEIVE)   ,  1 DEBIT (PAYMENT
   BEGIN
         BEGIN
            SELECT NVL (AC_DTL_TYP, 0)
              FROM ACCOUNT
             WHERE A_CODE = P_AC_CODE AND ROWNUM <= 1;
         EXCEPTION
         END;
         BEGIN
            SELECT NVL (CRLIMIT_TYPE, 1)
              FROM PRIVILEGE_FIXED
             WHERE U_ID = P_USER_NO;
         EXCEPTION
         END;
         BEGIN
            SELECT NVL (ACC_LMT_PRV, 1)
              FROM PRIVILEGE_FIXED
             WHERE U_ID = P_USER_NO;
         EXCEPTION
         END;
         BEGIN
            SELECT 1
              FROM IAS_AC_CC_LMT
             WHERE     A_CODE = V_AC_CODE
         EXCEPTION
         END;
         BEGIN
            SELECT COUNT (*)
              FROM IAS_AC_CC_LMT
             WHERE     NVL (A_CODE, '0') = DECODE (V_GL_LMT_TYPE,  1, V_AC_CODE,  3, P_AC_CODE,  5, V_AC_CODE,  7, V_AC_CODE,  NVL (A_CODE, '0'))
         EXCEPTION
         END;
            BEGIN
               SELECT DR_CR
                 FROM IAS_AC_CC_LMT
                WHERE     NVL (A_CODE, '0') = DECODE (V_GL_LMT_TYPE,  1, V_AC_CODE,  3, P_AC_CODE,  5, V_AC_CODE,  7, V_AC_CODE,  NVL (A_CODE, '0'))
            EXCEPTION
            END;
            BEGIN
               SELECT DR_CR
                 FROM IAS_AC_CC_LMT
                WHERE     NVL (A_CODE, '0') = DECODE (V_GL_LMT_TYPE,  1, V_AC_CODE,  3, P_AC_CODE,  5, V_AC_CODE,  7, V_AC_CODE,  NVL (A_CODE, '0'))
            EXCEPTION
            END;
            BEGIN
               SELECT ROUND (MIN_AMT, P_FRC_NO),
                 FROM IAS_AC_CC_LMT
                WHERE     NVL (A_CODE, '0') = DECODE (V_GL_LMT_TYPE,  1, V_AC_CODE,  3, P_AC_CODE,  5, V_AC_CODE,  7, V_AC_CODE,  NVL (A_CODE, '0'))
            EXCEPTION
            END;
            BEGIN
               SELECT 1
                 FROM IAS_POST_DTL
                WHERE C_V_CODE IS NOT NULL AND ROWNUM <= 1;
            EXCEPTION
            END;
                  BEGIN
                     UPDATE IAS_AC_CC_LMT
                      WHERE     NVL (A_CODE, '0') = DECODE (V_GL_LMT_TYPE,  1, P_AC_CODE,  3, P_AC_CODE,  5, P_AC_CODE,  7, P_AC_CODE,  NVL (A_CODE, '0'))
                  EXCEPTION
                  END;
                  BEGIN
                  EXCEPTION
                  END;
                  BEGIN
                  EXCEPTION
                  END;
                  BEGIN
                  EXCEPTION
                  END;
                  BEGIN
                  EXCEPTION
                  END;
                  BEGIN
                  EXCEPTION
                  END;
                  BEGIN
                  EXCEPTION
                  END;
   EXCEPTION
   FUNCTION GET_FCLTY_BLNC (P_AC_CODE       IN ACCOUNT.A_CODE%TYPE,
   BEGIN
   EXCEPTION
   PROCEDURE GET_ACDTL_LMT_BLNC (P_DOC_DATE        IN     DATE DEFAULT YS_GEN_PKG.GET_SYSDATE,
   BEGIN
      V_CNT := YS_GEN_PKG.GET_CNT ('SELECT 1 FROM IAS_POST_DTL   
                                WHERE C_V_CODE IS NOT NULL 
         SELECT DECODE (V_CUR_CODE, YS_GEN_PKG.GET_LOCAL_CUR, NVL (SUM (AMT), 0), NVL (SUM (AMT_F), 0))
           FROM IAS_POST_DTL D
          WHERE     AC_DTL_TYP = 3
         SELECT DECODE (V_CUR_CODE, YS_GEN_PKG.GET_LOCAL_CUR, NVL (SUM (AMT), 0), NVL (SUM (AMT_F), 0))
           FROM GLS_V_AC_DTL_CCPJACTV_BLNC
          WHERE     NVL (A_CODE, '0') = DECODE (P_A_CODE, NULL, NVL (A_CODE, '0'), P_A_CODE)
         SELECT DECODE (V_CUR_CODE, YS_GEN_PKG.GET_LOCAL_CUR, NVL (SUM (AMT), 0), NVL (SUM (AMT_F), 0))
           FROM IAS_POST_DTL D
          WHERE     AC_DTL_TYP = 3
         SELECT DECODE (V_CUR_CODE, YS_GEN_PKG.GET_LOCAL_CUR, NVL (SUM (AMT), 0), NVL (SUM (AMT_F), 0))
           FROM IAS_POST_DTL
          WHERE     NVL (A_CODE, '0') = DECODE (P_A_CODE, NULL, NVL (A_CODE, '0'), P_A_CODE)
         SELECT DECODE (V_CUR_CODE, YS_GEN_PKG.GET_LOCAL_CUR, NVL (SUM (AMT), 0), NVL (SUM (AMT_F), 0))
           FROM IAS_POST_DTL D
          WHERE     AC_DTL_TYP = 3
         SELECT DECODE (V_CUR_CODE, YS_GEN_PKG.GET_LOCAL_CUR, NVL (SUM (AMT), 0), NVL (SUM (AMT_F), 0))
           FROM IAS_POST_DTL
          WHERE     NVL (A_CODE, '0') = DECODE (P_A_CODE, NULL, NVL (A_CODE, '0'), P_A_CODE)
         SELECT DECODE (V_CUR_CODE, YS_GEN_PKG.GET_LOCAL_CUR, NVL (SUM (AMT), 0), NVL (SUM (AMT_F), 0))
           FROM IAS_POST_DTL D
          WHERE     AC_DTL_TYP = 3
         SELECT DECODE (V_CUR_CODE, YS_GEN_PKG.GET_LOCAL_CUR, NVL (SUM (AMT), 0), NVL (SUM (AMT_F), 0))
           FROM IAS_POST_DTL
          WHERE     NVL (A_CODE, '0') = DECODE (P_A_CODE, NULL, NVL (A_CODE, '0'), P_A_CODE)
   EXCEPTION
CREATE OR REPLACE Package Rms_Pst_Inv_Trns_Pkg As
    Function  Get_Intrfc_Ac_Code (P_Fld_Nm In Varchar2, P_Brn_No In Number , P_Lang_No In Number Default 1 ) Return Varchar2 ;
Procedure  Get_Invc_Typ_Sub_Ldgr ( P_Brn_No        In  S_Brn.Brn_No%Type 
Procedure Get_Info_To_Actvty_Wcode ( P_W_Code          In  Warehouse_Details.W_Code%Type       ,
    Procedure Update_Post_Tr ;
    Procedure Check_Duplicate_Tr(  P_Tr_Inout_Type Ias_Whtrns_Mst.Tr_Inout_Type%Type ,
    Procedure Check_Duplicate_Si(P_Bill_No In Number,P_Bill_Doc_Type In Number,P_Bill_Ser In Number )  ;                             
    Procedure Check_Duplicate_Sr(P_Rt_Bill_No In Number,P_Rt_Bill_Doc_Type In Number,P_Rt_Bill_Ser In Number )  ;
    Procedure Check_Avl_Qty (  P_Doc_Type Number);                                                            
    Function Get_Bill_No (  P_Invoicing_Serials In Number   ,
    Function Get_Bill_Ser ( P_Invs              In Number ,
    Function Get_Rt_Bill_No ( P_Invs_Sr          In Number,
   Function Get_Rt_Bill_Ser (   P_Invs_Sr       In Number,
   Function Get_Gr_No_Br ( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
   Function Get_Gr_Ser_Br (   P_Incoming_Serial In Number ,
   Function Get_Out_No_Br ( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
   Function Get_Out_Ser_Br ( P_Outgoing_Serial In Number ,
   Procedure Post_Incoming ( P_Doc_Ser  In Gr_Note.G_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Outgoing ( P_Doc_Ser  In Ias_Outgoing_Mst.Out_Ser%Type   Default Null ,P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_Out  ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null ,P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_In ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Transfer_Out_In ( P_Doc_Ser  In Ias_Whtrns_Mst.Tr_Ser%Type   Default Null , P_User_No In User_R.U_Id%Type Default Null,P_Lang_No In Number Default Null)  ;
   Procedure Post_Sales_Detail ( P_Doc_Ser  In Rms_Bill_Mst.Bill_Srl%Type   Default Null ,
   Procedure Post_Rt_Sales_Detail ( P_Doc_Ser  In Rms_Rt_Bill_Mst.Rt_Bill_Srl%Type   Default Null ,
   Procedure Post_Sales_Sum ( P_Whr      In Varchar2         Default Null   ,
   Procedure Post_Rt_Sales_Sum ( P_Whr      In Varchar2         Default Null   ,
   Procedure Post_Stk_Adjstmnt ;  
   Procedure Post_Jv;
   Procedure Post_Vchr;
   Procedure Post_Trns_Data_Auto ;
   Procedure Post_Data_To_Jrnl ;   
   Procedure Insrt_Incmng_Outgng_Auto ;
   Procedure Post_Assmbl_Kit_Itm ( P_Whr      In Varchar2         Default Null   ,
   Procedure Post_Assmbl_Kit_Itm_Cmpnnt ( P_Whr      In Varchar2         Default Null   ,
   Procedure Insrt_Rt_Sales_Damaged_Outgng ( P_Whr      In Varchar2         Default Null   ,
   Procedure Insrt_Itm_Cmpnnt ;
   Procedure Chk_Itm_Cmpnnt ; 
   Procedure Clc_Sls_Itm_Tax_Mvmnt_Prc( P_Calc_Vat_Amt_Type     Ias_Para_Ar.Calc_Vat_Amt_Type%Type ,
Procedure Clc_Sls_Inpt_Tax_Mvmnt_Prc(P_Calc_Vat_Amt_Type       In Ias_Para_Ar.Calc_Vat_Amt_Type%Type,
   Procedure Clc_Rt_Sls_Itm_Tax_Mvmnt_Prc( P_Calc_Vat_Amt_Type     Ias_Para_Ar.Ca
Procedure Clc_Rt_Sls_Inpt_Tax_Mvmnt_Prc (  P_Calc_Vat_Amt_Type     In Ias_Para_Ar.Calc_Vat_Amt_Type%Type ,
Procedure Post_Outgoing_Itm_Cmpnnt (  P_Doc_Ser   In Ias_Outgoing_Mst.Out_Ser%Type Default Null ,
CREATE OR REPLACE Package Body Rms_Pst_Inv_Trns_Pkg
    Function Get_Intrfc_Ac_Code(P_Fld_Nm    In Varchar2,
    Begin
            Execute Immediate('Select ' || P_Fld_Nm || ' From Interface_Acc Where Brn_no = ' || P_Brn_No)
    Exception
    Procedure Get_Invc_Typ_Sub_Ldgr(P_Brn_No          In     S_Brn.Brn_No%Type,
    Begin
        Select Cc_Code,
          From Rms_Invc_Typ_Conn_Sub_Ldgr
         Where P_Brn_No = P_Brn_No And P_Bill_Doc_Type = P_Bill_Doc_Type;
    Exception
    Procedure Get_Info_To_Actvty_Wcode(P_W_Code         In     Warehouse_Details.W_Code%Type,
    Begin
        Select Cc_Code,
          From Ias_Conn_Wcode_By_Activity
         Where W_Code = P_W_Code And Activity_No = P_Activity_No And Rownum <= 1;
    Exception
    Procedure Update_Post_Tr
    Begin
        Begin
            Update Ias_Whtrns_Mst_Br A
             Where Nvl(Tr_Post, 0) = 0
                           (Select 1
                              From Ias_Whtrns_Mst
                             Where Tr_Ser = A.Tr_Ser --And Nvl(Tr_Amt,0)=Nvl(A.Tr_Amt,0)
                           (Select Doc_Ser
                              From Item_Movement
                             Where Doc_Ser = A.Tr_Ser And Rownum <= 1);
        Exception
                Raise_Application_Error(-20001, 'Error In Update Ias_Whtrns_Mst_Br');
        End;
        Begin
            Update Ias_Whtrns_Mst_Br A
             Where Nvl(Tr_Post, 0) = 1
                           (Select 1
                              From Ias_Whtrns_Mst
                             Where Tr_Ser = A.Tr_Ser And Rownum <= 1);
        Exception
                Raise_Application_Error(-20002, 'Error In Update Ias_Whtrns_Mst_Br');
        End;
    Procedure Check_Duplicate_Tr(P_Tr_Inout_Type   Ias_Whtrns_Mst.Tr_Inout_Type%Type,
    Begin
        Begin
            V_Cnt := Ias_Gen_Pkg.Get_Cnt(' Select 1 
                                     From Ias_Whtrns_Mst 
                                      Where Tr_Inout_Type = ' || P_Tr_Inout_Type || ' 
        Exception
        End;
    Procedure Check_Duplicate_Si(P_Bill_No         In Number,
    Begin
        Begin
            Select Flg_Desc
              From S_Flags
             Where Flg_Code = 'Type_Name_Si' And Flg_Value = P_Bill_Doc_Type And Lang_No = 1 And Rownum <= 1;
        Exception
        End;
        Begin
            V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Ias_Bill_Mst 
                                      Where Bill_Ser =' || P_Bill_Ser || '
        Exception
        End;
    Procedure Check_Duplicate_Sr(P_Rt_Bill_No         In Number,
    Begin
        Begin
            Select Flg_Desc
              From S_Flags
             Where Flg_Code = 'Type_Name_Si' And Flg_Value = P_Rt_Bill_Doc_Type And Lang_No = 1 And Rownum <= 1;
        Exception
        End;
        Begin
            V_Cnt := Ias_Gen_Pkg.Get_Cnt('Select 1 From Ias_Rt_Bill_Mst 
                                      Where Rt_Bill_Ser =' || P_Rt_Bill_Ser || '
        Exception
        End;
    Procedure Check_Avl_Qty(P_Doc_Type Number)
    Begin
        Execute Immediate 'Delete From Rms_Minus_Stk_Qty_Tmp';
            --# To Insert Into  Rms_Minus_Stk_Qty Temporary Table
            If Ias_Gen_Pkg.Get_Cnt('Select Use_Expire_Date From Ias_Para_Inv Where Rownum <= 1 ') = 0 And Ias_Gen_Pkg.Get_Cnt('Select Use_Batch_No From Ias_Para_Inv Where Rownum <= 1 ') = 0 Then
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select I_Code,
                      From (  Select Rms_Bill_Dtl.I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Dtl.I_Code,
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select I_Code I_Code,
                      From (  Select Rms_Bill_Cmpnnt_Dtl.Di_Code I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Cmpnnt_Dtl.Di_Code,
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select I_Code,
                      From (  Select Rms_Bill_Dtl.I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Dtl.I_Code,
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select I_Code I_Code,
                      From (  Select Rms_Bill_Cmpnnt_Dtl.Di_Code I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Cmpnnt_Dtl.Di_Code,
            Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                Select I_Code,
                  From (  Select Ias_Outgoing_Dtl_Br.I_Code,
                            From Ias_Outgoing_Mst_Br,
                           Where Ias_Outgoing_Mst_Br.Out_Ser = Ias_Outgoing_Dtl_Br.Out_Ser
                                         (Select 1
                                            From Ias_Outgoing_Mst_Br_Tmp
                                           Where Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser And Rownum <= 1)
                        Group By Ias_Outgoing_Dtl_Br.I_Code,
                 Where Nvl(Avl_Qty, 0) - Nvl(P_Qty, 0) < 0;
            Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                Select I_Code,
                  From (  Select Ias_Whtrns_Dtl_Br.I_Code,
                            From Ias_Whtrns_Mst_Br,
                           Where Ias_Whtrns_Mst_Br.Tr_Ser = Ias_Whtrns_Dtl_Br.Tr_Ser
                                         (Select 1
                                            From Ias_Whtrns_Mst_Br_Tmp
                                           Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1)
                        Group By Ias_Whtrns_Dtl_Br.I_Code,
                 Where Nvl(Avl_Qty, 0) - Nvl(P_Qty, 0) < 0;
    Exception
            Raise_Application_Error(-20001, ' Err. When Insert Into Temp Rms_Minus_Qty_Tmp Table ');
    Function Get_Bill_No(P_Invoicing_Serials   In Number,
    Begin
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             Where Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             Where Bill_Doc_Type = P_Bill_Doc_Type And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             Where Cc_Code In (Select Cc_Code
                                 From Cost_Centers
                                Where Nvl(C_Sr, 0) = (Select Nvl(C_Sr, 0)
                                                        From Cost_Centers
                                                       Where Cc_Code = P_Cc_Code))
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill
             Where Bill_Doc_Type = P_Bill_Doc_Type And Cc_Code = P_Cc_Code And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             --Where W_Code=V_W_Code;
             Where W_Code In (Select W_Code
                                From Warehouse_Details
                               Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                        From Warehouse_Details
                                                       Where W_Code = P_W_Code))
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             Where Bill_Doc_Type = P_Bill_Doc_Type And W_Code = P_W_Code And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             Where Si_Type = P_Si_Type And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             Where Si_Type = P_Si_Type And W_Code = P_W_Code And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             Where Si_Type = P_Si_Type And W_Code = P_W_Code And Bill_Doc_Type = P_Bill_Doc_Type And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Bill_No)), 0) + 1
              From Ias_Bill_Mst
             Where Si_Type = P_Si_Type And Bill_Doc_Type = P_Bill_Doc_Type And Brn_No = P_Brn_No;
    Exception
    Function Get_Bill_Ser(P_Invs            In Number,
    Begin
    Exception
    Function Get_Rt_Bill_No(P_Invs_Sr         In Number,
    Begin
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Rt_Bill_Doc_Type = P_Bill_Doc_Type And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Cc_Code In (Select Cc_Code
                                 From Cost_Centers
                                Where Nvl(C_Sr, 0) = (Select Nvl(C_Sr, 0)
                                                        From Cost_Centers
                                                       Where Cc_Code = P_Cc_Code))
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Rt_Bill_Doc_Type = P_Bill_Doc_Type And Cc_Code = P_Cc_Code And Brn_No = 
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             --Where W_Code=P_W_Code;
             Where W_Code In (Select W_Code
                                From Warehouse_Details
                               Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                        From Warehouse_Details
                                                       Where W_Code = P_W_Code))
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Rt_Bill_Doc_Type = P_Bill_Doc_Type And W_Code = P_W_Code And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Sr_Type = P_Sr_Type And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Sr_Type = P_Sr_Type And W_Code = P_W_Code And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Sr_Type = P_Sr_Type And W_Code = P_W_Code And Rt_Bill_Doc_Type = P_Bill_Doc_Type And Brn_No = P_Brn_No;
            Select Nvl(Max(To_Number(Rt_Bill_No)), 0) + 1
              From Ias_Rt_Bill_Mst
             Where Sr_Type = P_Sr_Type And Rt_Bill_Doc_Type = P_Bill_Doc_Type And Brn_No = P_Brn_No;
    Exception
    Function Get_Rt_Bill_Ser(P_Invs_Sr         In Number,
    Begin
    Exception
    Function Get_Gr_No_Br(P_Brn_No     In S_Brn.Brn_No%Type,
    Begin
            Begin
                Select Nvl(Max(Gr_No), 0) + 1
                  From Gr_Note_Br
                 Where Brn_No = P_Brn_No And Pi_Type = 5;
            Exception
            End;
            Begin
                Select Nvl(Max(Gr_No), 0) + 1
                  From Gr_Note_Br
                 Where Brn_No = P_Brn_No
                       And W_Code In (Select W_Code
                                        From Warehouse_Details
                                       Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                From Warehouse_Details
                                                               Where W_Code = P_W_Code));
            Exception
            End;
            Begin
                Select Nvl(Max(Gr_No), 0) + 1
                  From Gr_Note_Br
                 Where Brn_No = P_Brn_No And Pi_Type = 5 And Incom_Type = P_Inc_Type;
            Exception
            End;
            Begin
                Select Nvl(Max(Gr_No), 0) + 1
                  From Gr_Note_Br
                 Where Brn_No = P_Brn_No And Pi_Type = 5 And W_Code = P_W_Code And Incom_Type = P
            Exception
            End;
    Exception
    Function Get_Gr_Ser_Br(P_Incoming_Serial   In Number,
    Begin
    Exception
    Function Get_Out_No_Br(P_Brn_No     In S_Brn.Brn_No%Type,
    Begin
            Begin
                Select Nvl(Max(Out_No), 0) + 1
                  From Ias_Outgoing_Mst_Br
                 Where Brn_No = P_Brn_No;
            Exception
            End;
            Begin
                Select Nvl(Max(Out_No), 0) + 1
                  From Ias_Outgoing_Mst_Br
                 Where Brn_No = P_Brn_No
                       And W_Code In (Select W_Code
                                        From Warehouse_Details
                                       Where Nvl(W_Ser, 0) = (Select Nvl(W_Ser, 0)
                                                                From Warehouse_Details
                                                               Where W_Code = P_W_Code));
            Exception
            End;
            Begin
                Select Nvl(Max(Out_No), 0) + 1
                  From Ias_Outgoing_Mst_Br
                 Where Brn_No = P_Brn_No And Out_Type = P_Out_Type;
            Exception
            End;
            Begin
                Select Nvl(Max(Out_No), 0) + 1
                  From Ias_Outgoing_Mst_Br
                 Where Brn_No = P_Brn_No And W_Code = P_W_Code And Out_Type = P_Out_Type;
            Exception
            End;
    Exception
    Function Get_Out_Ser_Br(P_Outgoing_Serial   In Number,
    Begin
    Exception
    Procedure Post_Transfer_In(P_Doc_Ser   In Ias_Whtrns_Mst.Tr_Ser%Type Default Null,
    Begin
            Begin
                Select Lang_No
                  From Ias_Sys.Lang_Def
                 Where Nvl(Flg_St, 1) = 1 And Lang_Dflt = 1 And Rownum <= 1;
            Exception
            End;
        Begin
            Select Nvl(Use_Price_Whtrns_Rec_Cost, 0),
              From Ias_Para_Inv;
        Exception
                Raise_Application_Error(-20001, 'Error When Select From Para In Post_Transfer_In (8) ' || Chr(13) || Sqlerrm);
        End;
        Begin
            Select Allow_Enter_Zero_Cost
              From Privilege_Fixed
             Where U_Id = P_User_No And Rownum <= 1;
        Exception
                Raise_Application_Error(-20002, 'Error When Select From Privilege_Fixed In Post_Transfer_In , ' || Chr(13) || Sqlerrm);
        End;
            Select Tr_No,
              From Ias_Whtrns_Mst_Br
             Where Tr_Inout_Type = 2
                           (Select 1
                              From Ias_Whtrns_Mst
                             Where Tr_Inout_Type = 1 And Tr_Ser = Ias_Whtrns_Mst_Br.F_Tr_Ser And Rownum <= 1)
                           (Select 1
                              From Ias_Whtrns_Dtl_Br
                             Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1)
                           (Select 1
                              From Ias_Whtrns_Mst
                             Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1);
                  Select Tr_Inout_Type,
                    From Ias_Whtrns_Mst_Br
                   Where Tr_Inout_Type = 2
                                 (Select 1
                                    From Ias_Whtrns_Mst_Br_Tmp
                                   Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1)
                Order By Ad_Date;
        Begin
                Begin
                    Insert Into Ias_Whtrns_Mst(Tr_Inout_Type,
                Exception
                        Raise_Application_Error(-20005, 'Error When Insert Into Ias_Whtrns_Mst ' || Chr(13) || Sqlerrm);
                End;
                Begin
                Exception
                        Raise_Application_Error(-20006, 'Error When Insert Into Gr_Note  ' || Chr(13) || Sqlerrm);
                End;
                        Select Tr_Inout_Type,
                          From Ias_Whtrns_Dtl_Br
                         Where Ias_Whtrns_Dtl_Br.Tr_Ser = J.Tr_Ser And Ias_Whtrns_Dtl_Br.Tr_Inout_Type = 2;
                Begin
                        Begin
                            Select Decode(V_Use_Price_Whtrns_Rec_Cost, 1, Nvl(I.I_Price, 0), Nvl(Stk_Cost, 0))
                              From Ias_Whtrns_Dtl
                             Where Tr_Inout_Type = 1 And Tr_Ser = I.F_Tr_Ser And I_Code = I.I_Code And Itm_Unt = I.Itm_Unt And T_W_Code = I.W_Code And To_Date(Expire_Date, 'Dd/Mm/Yyyy') = To_Date(I.Expire_Date, 'Dd/Mm/Yyyy') And Batch_No = I.Batch_No And Rownum <= 1;
                        Exception
                                Raise_Application_Error(-20006, 'Error When Get Cost From Ias_Whtrns_Dtl Transfer ' || Chr(13) || 'F_Tr_Ser =' || I.F_Tr_Ser || Chr(13) || 'I_Code =' || I.I_Code || Chr(13) || Sqlerrm);
                        End;
                        Begin
                            Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                        Exception
                        End;
                        Begin
                            Insert Into Ias_Whtrns_Dtl(Tr_Inout_Type,
                        Exception
                                Raise_Application_Error(-20008, 'Error When Insert Into Ias_Whtrns_Dtl ' || Chr(13) || Sqlerrm);
                        End;
                        Begin
                        Exception
                        End;
                            Begin
                                Select 1
                                  From Ias_Itm_Attach_Movement_Br
                                 Where Doc_Ser = J.Tr_Ser And Rec_Attch = I.Rec_Attch And Doc_Type = 8 And Rownum <= 1;
                            Exception
                            End;
                            Begin
                                Insert Into Ias_Itm_Attach_Movement(I_Code,
                                    Select I_Code,
                                      From Ias_Itm_Attach_Movement_Br
                                     Where Doc_Ser = J.Tr_Ser And Rec_Attch = I.Rec_Attch And Doc_Type = 8;
                            Exception
                            End;
                            Begin
                            Exception
                            End;
                        Begin
                        Exception
                        End;
                        --## Insert Into Gr_Detail
                        Begin
                        Exception
                        End;
                        --## Insert Into Item_Movement
                        Begin
                        Exception
                        End;
                End;
                --## Update Warehouse Transfer Process = 1
                Begin
                    Update Ias_Whtrns_Mst
                     Where Tr_Inout_Type = 1 And Tr_Ser = J.F_Tr_Ser;
                Exception
                End;
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20016 - Error When Updating Post In Warehouse_Transfer  = ' || Chr(13) || 'Tr_Ser =' || J.Tr_Ser || Chr(13) || Sqlerrm || ''')');
                End;
            --## Update Rms_Bill_Mst
            Begin
                Update Ias_Whtrns_Mst_Br
                 Where Tr_Inout_Type = 2
                               (Select 1
                                  From Ias_Whtrns_Mst_Br_Tmp
                                 Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1)
                               (Select 1
                                  From Ias_Whtrns_Mst
                                 Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1);
            Exception
te Tr_Post In  Update Ias_Whtrns_Mst_Br ');
            End;
        End;
    Procedure Post_Transfer_Out_In(P_Doc_Ser   In Ias_Whtrns_Mst.Tr_Ser%Type Default Null,
              Select M.Tr_Ser
                From Ias_Whtrns_Mst_Br M
               Where M.Tr_Inout_Type = 2
                             (Select 1
                                From Ias_Whtrns_Dtl_Br
                               Where Tr_Ser = M.Tr_Ser And Rownum <= 1)
                             (Select 1
                                From Ias_Whtrns_Mst
                               Where Tr_Ser = M.Tr_Ser And Rownum <= 1)
            Order By M.Ad_Date;
    Begin
    Procedure Post_Outgoing(P_Doc_Ser   In Ias_Outgoing_Mst.Out_Ser%Type Default Null,
    Begin
            Begin
                Select Lang_No
                  From Ias_Sys.Lang_Def
                 Where Nvl(Flg_St, 1) = 1 And Lang_Dflt = 1 And Rownum <= 1;
            Exception
            End;
        --# To Insert Into  Rms_Minus_Stk_Qty Temporary Table
        Begin
            Select Nvl(Costing_Type, 0),
              From Ias_Para_Inv;
        Exception
                Raise_Application_Error(-20001, 'Error When Select From Para In Post_Outgoing ' || Chr(13) || Sqlerrm);
        End;
        Begin
            Select Allow_Enter_Zero_Cost
              From Privilege_Fixed
             Where U_Id = P_User_No And Rownum <= 1;
                Raise_Application_Error(-20002, 'Error When Select From Privilege_Fixed In Post_Outgoing' || Chr(13) || Sqlerrm);
        End;
        Insert Into Ias_Outgoing_Mst_Br_Tmp(Out_No,
            Select Out_No,
              From Ias_Outgoing_Mst_Br
             Where Out_Ser = Nvl(P_Doc_Ser, Out_Ser)
                           (Select 1
                              From Ias_Outgoing_Dtl_Br
                             Where Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser And Rownum <= 1)
                           (Select 1
                              From Ias_Outgoing_Mst
                             Where Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser And Rownum <= 1);
        Begin
            Select 1
              From Rms_Minus_Stk_Qty_Tmp
             Where Rownum <= 1;
        Exception
        End;
            If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Auto_Stk_Adjstmnt From Rms_Para Where Rownum <= 1 '), 0) = 1 Then
                Begin
                     Where Exists
                               (Select 1
                                  From Ias_Outgoing_Dtl_Br    A,
                                 Where A.Out_Ser = M.Out_Ser And A.I_Code = B.I_Code /*
                Exception
                End;
                  Select Out_No,
                    From Ias_Outgoing_Mst_Br
                   Where Exists
                             (Select 1
                                From Ias_Outgoing_Mst_Br_Tmp
                               Where Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser And Rownum <= 1)
                Order By Ad_Date;
        Begin ---(11)
                Begin
                    Insert Into Ias_Outgoing_Mst(Out_No,
                Exception
                        Raise_Application_Error(-20003, 'Error When Insert Into Ias_Outgoing_Mst ' || Chr(13) || Sqlerrm);
                End;
                      Begin
                      Exception
,'Error When Insert Into Installment '||Chr(13)||Sqlerrm);
                      End;
                        Select Out_No,
                          From Ias_Outgoing_Dtl_Br
                         Where Out_Ser = J.Out_Ser
                                       (Select 1
                                          From Ias_Outgoing_Mst_Br_Tmp
                                         Where Ias_Outgoing_Mst_Br_Tmp.Out_Ser = Ias_Outgoing_Dtl_Br.Out_Ser And Rownum <= 1);
                Begin --- (12)
                        Begin
                        Exception
                        End;
                        Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                        Begin
                            Insert Into Ias_Outgoing_Dtl(Out_No,
                        Exception
                        End;
                            Begin
                                Select 1
                                  From Ias_Itm_Attach_Movement_Br
                                 Where Doc_Ser = I.Out_Ser And Rec_Attch = I.Rec_Attch And Doc_Type = 6 And Rownum <= 1;
                            Exception
                                    Raise_Application_Error(-20007, 'Error When Select From Ias_Itm_Attach_Movement_Br ' || Chr(13) || Sqlerrm)
                            End;
                            Begin
                                Insert Into Ias_Itm_Attach_Movement(I_Code,
                                    Select I_Code,
                                      From Ias_Itm_Attach_Movement_Br
                                     Where Doc_Ser = J.Out_Ser And Rec_Attch = I.Rec_Attch And Doc_Type = 6;
                            Exception
                                    Raise_Application_Error(-20008, 'Error When Insert Into Ias_Itm_Attach_Movement ' || Chr(13) || Sqlerrm);
                            End;
                            Begin
                            Exception
                            End;
                End; --(12)
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Updating Post In Outgoing  = ' || Chr(13) || 'Out_Ser =' || J.Out_Ser || Chr(13) || Sqlerrm || ''')');
                End;
            --## Update Ias_Outgoing_Mst_Br
            Begin
                Update Ias_Outgoing_Mst_Br
                 Where Nvl(Out_Post, 0) = 0
                               (Select 1
                                  From Ias_Outgoing_Mst
                                 Where Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser And Rownum <= 1)
                               (Select 1
                                  From Ias_Outgoing_Mst_Br_Tmp
                                 Where Ias_Outgoing_Mst_Br_Tmp.Out_Ser = Ias_Outgoing_Mst_Br.Out_Ser And Rownum <= 1);
            Exception
                    Raise_Application_Error(-20011, 'Error When Update Out_Post In  Update Ias_Outgoing_Mst_Br ');
            End;
        End;
    Procedure Post_Sales_Sum(P_Whr       In Varchar2 Default Null,
    Begin
        --# To Insert Into  Rms_Bill_Mst_Tmp Temporary Table
        Execute Immediate ' Insert Into Rms_Bill_Mst_Tmp (Bill_No,Bill_Srl) Select Bill_No , Bill_Srl 
                                                       From Rms_Bill_Mst 
                                                      Where Rms_Bill_Mst.Bill_Type Not In  (4 ,8)
                                                        And Exists(Select 1 From Rms_Bill_Dtl Where Bill_Srl=Rms_Bill_Mst.Bill_Srl And Rownum<=1) ' || P_Whr;
        --# To Insert Into  Rms_Minus_Stk_Qty Temporary Table
        Begin
            If Ias_Gen_Pkg.Get_Cnt('Select Use_Expire_Date From Ias_Para_Inv Where Rownum <= 1 ') = 0 And Ias_Gen_Pkg.Get_Cnt('Select Use_Batch_No From Ias_Para_Inv Where Rownum <= 1 ') = 0 Then
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select I_Code,
                      From (  Select Rms_Bill_Dtl.I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Dtl.I_Code,
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select I_Code I_Code,
                      From (  Select Rms_Bill_Cmpnnt_Dtl.Di_Code I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Cmpnnt_Dtl.Di_Code,
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select I_Code,
                      From (  Select Rms_Bill_Dtl.I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Dtl.I_Code,
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select I_Code I_Code,
                      From (  Select Rms_Bill_Cmpnnt_Dtl.Di_Code I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Cmpnnt_Dtl.Di_Code,
        Exception
                Raise_Application_Error(-20001, ' Err. When Insert Into Temp Rms_Minus_Qty_Tmp Table ');
        End;
        Begin
            Select 1
              From Rms_Minus_Stk_Qty_Tmp
             Where Rownum <= 1;
        Exception
        End;
        /* -- Stop This Code Because Use Posting From Screen Only And Not Auto
         If Nvl(Ias_Gen_Pkg.Get_Cnt ('Select Use_Auto_Stk_Adjstmn
t From Rms_Para Where Rownum <= 1 '),0) = 1 Then
              Begin
                   Delete Rms_Bill_Mst_Tmp M Where Exists ( Select 1 From Rms_Bill_Dtl A,Rms_Minus_Stk_Qty_Tmp B
                                                                    Where A.Bill_Srl    = M.Bill_Srl
        Exception When Others Then Null;
        End;
        Begin
            Select Nvl(Costing_Type, 0),
              From Ias_Para_Inv,
        Exception
        End;
                  Select Distinct Rms_Bill_Mst.Bill_Date,
                    From Rms_Bill_Mst,
                   Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                 (Select 1
                                    From Rms_Bill_Mst_Tmp
                                   Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                Order By Bill_Date,
        Begin ---(11)
                Begin
                    For Mst_Crsr In (Select Sum(Bill_Amt) Bill_Amt,
                                       From Rms_Bill_Mst
                                      Where Rms_Bill_Mst.Bill_Type Not In (4, 8)
                                                    (Select 1
                                                       From Rms_Bill_Mst_Tmp
                                                      Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                    Delete From Rms_Pst_Srl;
                    Insert Into Rms_Pst_Srl
                        Select Extractvalue(Value(Xmlmstdmy), '*/S') As Bill_Srl
                          From Table(Xmlsequence(Extract(Xmltype.Createxml(V_Bill_Srls), '/A/B'))) Xmlmstdmy;
                Exception
                        Raise_Application_Error(-20001, 'Err. When Select Amt From Bills ' || Chr(13) || Sqlerrm);
                End;
                Begin
                    Select A_Code
                      From User_R
                     Where U_Id = J.Ad_U_Id;
                Exception
                End;
                    Begin
                        Select Bank_Ac
                          From Credit_Card_Types
                         Where Cr_Card_No = J.Cr_Card_No;
                    Exception
                    End;
                        Begin
                            Select Bank_Ac
                              From Credit_Card_Types
                             Where Cr_Card_No = J.Cr_Card_No_Scnd;
                        Exception
                        End;
                            Begin
                                Select Bank_Ac
                                  From Credit_Card_Types
                                 Where Cr_Card_No = J.Cr_Card_No_Thrd;
                            Exception
                            End;
                    Begin
                        Select Cash_No
                          From User_R
                         Where A_Code = V_A_Code And U_Id = J.Ad_U_Id And Rownum = 1;
                    Exception
                            Begin
                                Select Cash_No
                                  From Cash_In_Hand
                                 Where A_Code = V_A_Code And Rownum = 1;
                            Exception
                            End;
                    End;
                        Begin
                            Select Cash_No
                              From Cash_In_Hand
                             Where A_Code = V_A_Code And Rownum = 1;
                        Exception
                        End;
                    Begin
                        Select Ac_Code,
                          From Rms_Emp
                         Where Emp_No = J.Feeder_No And Emp_Typ = 3;
                    Exception
                    End;
                Begin
                    Select 1
                      From (Select Nvl(V_A_Code, V_Ac_Code), J.A_Cy From Dual
                            Select A_Code, A_Cy From Account_Curr)
                     Where Rownum <= 1;
                Exception
                End;
                    BEGIN
                        SELECT Point_Rplc_A_Code
                          FROM Interface_Acc
                         WHERE Brn_No = J.Brn_No;
                    EXCEPTION
                    END;
                        BEGIN
                            SELECT 1
                              FROM Account_Curr
                             WHERE A_Code = V_Point_Rplc_A_Code
                        EXCEPTION
                        END;
                    Begin
                    Exception
                    End;
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Cc_Avail From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Cc_Code Is Null Then
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Projects From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Pj_No Is Null Then
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Actvty From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Actv_No Is Null Then
                        Begin
                            Select Cc_Code,
                              From Rms_Trmnl
                             Where Trmnl_No = J.Trmnl_No;
                        Exception
                        End;
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Cc_Avail From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Cc_Code Is Null Then
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Projects From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Pj_No Is Null Then
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Actvty From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Actv_No
                /*Begin
                    Select Si_Type
                      From Rms_Trmnl
                     Where Trmnl_No = J.Trmnl_No;
                Exception
                End;*/
                    Begin
                        Select Min(Si_Type) Into V_Si_Type From Ias_Sales_Types;
                    Exception
                            Raise_Application_Error(-20004, 'Error When Select Si_Type From Ias_Sales_Types ' || Chr(13) || Sqlerrm);
                    End;
                Begin
                        Begin
                            Select Rms_Ac_Code_Receipt
                              From Interface_Acc
                             Where Brn_No = J.Brn_No And Rownum <= 1;
                        Exception
                        End;
                        Begin
                            Select Rms_Ac_Code_Insurance
                              From Interface_Acc
                             Where Brn_No = J.Brn_No And Rownum <= 1;
                        Exception
                        End;
                    Insert Into Ias_Bill_Mst(Bill_Doc_Type,
                Exception
                        Raise_Application_Error(-20002, 'Err. When Insert Into Ias_Bill_Mst ' || Chr(13) || Sqlerrm);
                End;
                Begin
                    Update Rms_Bill_Mst M
                     Where Exists
                               (Select 1
                                  From Rms_Pst_Srl
                Exception
                        Raise_Application_Error(-20088, 'Err. When Update Rms_Bill_Mst From Rms_Pst_Srl' || Chr(13) || Sqlerrm);
                End;
                          Select Nvl(Sum(Srvc_Amt), 0) Amt,
                            From Rms_Bill_Mst,
                           Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Srvc.Bill_Srl
                                     (Select 1
                                        From Rms_Pst_Srl
                                       Where Pst_Srl = Rms_Bill_Mst.Bill_Srl)
                        Group By Sales_Charges.Sc_No,
                Begin
                        Begin
                            Insert Into Other_Charges(Bill_Type,
                        Exception
                        End;
                End;
                    Begin
                    Exception
                    End;
                    Begin
                    Exception
                    End;
                          Select Sum(Rms_Bill_Dtl.I_Qty) I_Qty,
                            From Rms_Bill_Dtl
                           Where Exists
                                     (Select 1
                                        From Rms_Pst_Srl
                                       Where Pst_Srl = Rms_Bill_Dtl.Bill_Srl)
                        Group By Rms_Bill_Dtl.I_Code,
                Begin --- (12)
                                Begin
                                Exception
                                End;
                            Begin
                            Exception
                            End;
                        Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                        Begin
                            Insert Into Ias_Bill_Dtl(Bill_Doc_Type,
                        Exception
                        End;
                            Begin
                                                                P_Adesc         => 'Post From Rms System',
                            Exception
                            End;
                End; --(12)
                    Begin
                    Exception
                    End;
                    Begin
                    Exception
                    End;
                Begin
                Exception
                       Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When
                End;
                Begin
                Exception
                       Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Updating Post In Bills  = '||Chr(13)||'Bill_Ser ='||V_Bill_Ser ||Chr(13)||Sqlerrm||''')') ;
              End;  */
          Cursor C_Bills Is Select Out_No , Out_Ser ,Bill_Doc_Type
                             From Master_Out_Bills
                              Where  Nvl(Stand_By,0) = 0
                               And   Out_Ser In ( Select Out_Ser From Master_Out_Bills Where Nvl(Stand_By,0) = 0 And Ref_No = 'RMS'
                                                  Select Doc_Ser From Ias_Post_Mst Where Doc_Type = 13 )  ;
          Begin
            --## Update Rms_Bill_Mst
            Begin
                Update Rms_Bill_Mst
                 Where Rms_Bill_Mst.Bill_Type Not In (4, 8)
                               (Select 1
                                  From Rms_Bill_Dtl
                                 Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                               (Select 1
                                  From Rms_Bill_Mst_Tmp
                                 Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1);
            Exception
            End;
        End;
    Procedure Post_Sales_Detail(P_Doc_Ser   In Rms_Bill_Mst.Bill_Srl%Type Default Null,
    Begin
            Begin
                Select Lang_No
                  From Ias_Sys.Lang_Def
                 Where Nvl(Flg_St, 1) = 1 And Lang_Dflt = 1 And Rownum <= 1;
            Exception
            End;
        --# To Insert Into  Rms_Minus_Stk_Qty Temporary Table
        Begin
            Select Nvl(Costing_Type, 0),
              From Ias_Para_Inv,
        Exception
                Raise_Application_Error(-20001, 'Error When Select From Para In Post_Sales_Detail ' || Chr(13) || Sqlerrm);
        End;
        Begin
            Select Allow_Enter_Zero_Cost
              From Privilege_Fixed
             Where U_Id = P_User_No And Rownum <= 1;
        Exception
                Raise_Application_Error(-20002, 'Error When Select From Privilege_Fixed In Post_Sales_Detail' || Chr(13) || Sqlerrm);
        End;
        Execute Immediate ' Insert Into Rms_Bill_Mst_Tmp (Bill_No,Bill_Srl) Select Bill_No , Bill_Srl 
                                                       From Rms_Bill_Mst 
                                                      Where Rms_Bill_Mst.Bill_Type         In  (4 ,8)
                                                        And Exists(Select 1 From Rms_Bill_Dtl Where Bill_Srl=Rms_Bill_Mst.Bill_Srl And Rownum<=1)
                                                  --And Not Exists(Select 1 From Ias_Bill_Mst Where Bill_Ser=Rms_Bill_Mst.Bill_Srl And Rownum<=1)
        Begin
            Select 1
              From Rms_Minus_Stk_Qty_Tmp
             Where Rownum <= 1;
        Exception
        End;
        /* -- Stop This Code Because Use Posting From Screen Only And Not Auto
         If Nvl(Ias_Gen_Pkg.Get_Cnt ('Select Use_Auto_Stk_Adjstmnt From Rms_Para Where Rownum <= 1 '),0) = 1 Then
           Begin
               Delete Rms_Bill_Mst_Tmp M Where Exists ( Select 1 From Rms_Bill_Dtl A,Rms_Minus_Stk_Qty_Tmp B
                                                           Where A.Bill_Srl    = M.Bill_Srl
    Exception When Others Then Null;
    End;
                  Select Distinct Bill_Type,
                    From Rms_Bill_Mst,
                   Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                 (Select 1
                                    From Rms_Bill_Mst_Tmp
                                   Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                Order By Rms_Bill_Mst.Ad_Date;
        Begin ---(11)
                     Begin
                       Select Ac_Code ,
                       From Rms_Emp
                        Where Emp_No = J.Feeder_No
                     Exception
                    Begin
                        Select C_A_Code,
                          From Customer
                         Where C_Code = J.C_Code;
                    Exception
                    End;
                Begin
                    Select 1
                      From (Select Nvl(V_A_Code, V_Ac_Code), J.A_Cy From Dual
                            Select A_Code, A_Cy From Account_Curr)
                     Where Rownum <= 1;
                Exception
                End;
                    Begin
                    Exception
                    End;
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Cc_Avail From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Cc_Code Is Null Then
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Projects From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Pj_No Is Null Then
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Actvty From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Actv_No Is Null Then
                        Begin
                            Select Cc_Code,
                              From Rms_Trmnl
                             Where Trmnl_No = J.Trmnl_No;
                        Exception
                        End;
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Cc_Avail From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Cc_Code Is Null Then
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Projects From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Pj_No Is Null Then
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Actvty From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Actv_No Is Null Then
                /*Begin
                      From Rms_Trmnl
                     Where Trmnl_No = J.Trmnl_No;
                Exception
                End;*/
                    Begin
                        Select Min(Si_Type) Into V_Si_Type From Ias_Sales_Types;
                    Exception
                            Raise_Application_Error(-20004, 'Error When Select Si_Type From Ias_Sales_Types ' || Chr(13) || Sqlerrm);
                    End;
                Begin
                        Begin
                            Select Rms_Ac_Code_Receipt
                              From Interface_Acc
                             Where Brn_No = J.Brn_No And Rownum <= 1;
                        Exception
                        End;
                    Insert Into Ias_Bill_Mst(Bill_Doc_Type,
                Exception
                        Raise_Application_Error(-20003, 'Err. When Insert Into Ias_Bill_Mst ' || Chr(13) || Sqlerrm);
                End;
                Begin
                    Delete From Rms_Pst_Srl;
                    Insert Into Rms_Pst_Srl(Pst_Srl) Values (J.Bill_Srl);
                    Update Rms_Bill_Mst M
                     Where Bill_Srl = J.Bill_Srl;
                Exception
                        Raise_Application_Error(-20089, 'Err. When Update Rms_Bill_Mst From Rms_Pst_Srl' || Chr(13) || Sqlerrm);
                End;
                   Begin
                  Exception
                     Raise_Application_Error(-20004,'Err. When Insert Into Insert Installemnt '||Chr(13)||Sqlerrm);
                  End;
                        Select Nvl(Srvc_Amt, 0) Amt,
                          From Rms_Bill_Mst,
                         Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Srvc.Bill_Srl
                                       (Select 1
                                          From Rms_Bill_Mst_Tmp
                                         Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1);
                Begin
                        Begin
                            Insert Into Other_Charges(Bill_Type,
                        Exception
                        End;
                End;
                    Begin
                    Exception
                    End;
                    Begin
                    Exception
                    End;
                        Select Bill_No,
                               Get_Post_Code_Inv(P_Type => Ias_Gen_Pkg.Get_Cnt('Select Item_Posting_Flag From Ias_Para_Inv Where Rownum <= 1 '), P_I_Code => Rms_Bill_Dtl.I_Code, P_W_Code => Rms_Bill_Dtl.W_Code) Post_Code,
                          From Rms_Bill_Dtl
                         Where Rms_Bill_Dtl.Bill_Srl = J.Bill_Srl;
                Begin --- (12)
                                Begin
                                Exception
                                End;
                            Begin
                            Exception
                            End;
                        Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                            Begin
                            Exception
                            End;
                        Begin
                            Insert Into Ias_Bill_Dtl(Bill_Doc_Type,
                        Exception
                        End;
                End; --(12)
                    Begin
                    Exception
                    End;
                    Begin
                    Exception
                    End;
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20013 - Error When Updating Post In Bills  = '||Chr(13)||'Bill_Ser ='||J.Bill_Srl ||Chr(13)||Sqlerrm||''')');
                End; */
                Begin
                Exception
                       Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Updating Post In Out Bills  = '||Chr(13)||'Bill_Ser ='||V_Bill_Ser ||Chr(13)||Sqlerrm||''')') ;
                End;
                  Cursor C_Bills Is Select Out_No , Out_Ser ,Bill_Doc_Type
                                     From Master_Out_Bills
                                      Where  Nvl(Stand_By,0) = 0
                                       And   Out_Ser In ( Select Out_Ser From Master_Out_Bills Where Nvl(Stand_By,0) = 0 And Ref_No = 'RMS'
                                                          Select Doc_Ser From Ias_Post_Mst Where Doc_Type = 13 )  ;
                  Begin
                         --## Insert Into Ias_Post_Dtl Before Posting
            --## Update Rms_Bill_Mst
            Begin
                Update Rms_Bill_Mst
                 Where Rms_Bill_Mst.Bill_Type In (4, 8)
                               (Select 1
                                  From Rms_Bill_Mst_Tmp
                                Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1) --And Exists (Select 1 From Ias_Bill_Mst Where Bill_Ser = Rms_Bill_Mst.Bill_Srl  And Rownum <=1  )
            Exception
            End;
        End;
    Procedure Post_Rt_Sales_Detail(P_Doc_Ser   In Rms_Rt_Bill_Mst.Rt_Bill_Srl%Type Default Null,
    Begin
            Begin
                Select Lang_No
                  From Ias_Sys.Lang_Def
                 Where Nvl(Flg_St, 1) = 1 And Lang_Dflt = 1 And Rownum <= 1;
            Exception
            End;
        Begin
            Select Use_Out_Bills,
              From Ias_Para_Ar,
             Where Rownum <= 1;
        Exception
                Raise_Application_Error(-20001, 'Error When Select From Para In Post_Rt_Sales_Detail ' || Chr(13) || Sqlerrm);
        End;
        Begin
            Select Allow_Enter_Zero_Cost
              From Privilege_Fixed
             Where U_Id = P_User_No And Rownum <= 1;
        Exception
                Raise_Application_Error(-20002, 'Error When Select From Privilege_Fixed In Post_Rt_Sales_Detail' || Chr(13) || Sqlerrm);
        End;
        Execute Immediate ' Insert Into Rms_Rt_Bill_Mst_Tmp (Rt_Bill_No,Rt_Bill_Srl) Select Rt_Bill_No , Rt_Bill_Srl 
                                                               From Rms_Rt_Bill_Mst 
                                                              Where Rms_Rt_Bill_Mst.Rt_Bill_Type    In  (4 ,8)
                                                                And Exists(Select 1 From Rms_Rt_Bill_Dtl Where Rt_Bill_Srl=Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum<=1)
                                                              --And Not Exists(Select 1 From Ias_Rt_Bill_Mst Where Rt_Bill_Ser=Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum<=1)
                  Select Distinct Rt_Bill_Type,
                    From Rms_Rt_Bill_Mst
                   Where Nvl(Pst_Flg, 0) = 0
                                 (Select 1
                                    From Rms_Rt_Bill_Mst_Tmp
                                   Where Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum <= 1)
                Order By Ad_Date;
        Begin ---(11)
                     Begin
                       Select Ac_Code     ,
                       From Rms_Emp
                        Where Emp_No = J.Feeder_No
                     Exception
                    Begin
                        Select C_A_Code,
                          From Customer
                         Where C_Code = J.C_Code;
                    Exception
                    End;
                Begin
                    Select 1
                      From (Select Nvl(V_A_Code, V_Ac_Code), J.A_Cy From Dual
                            Select A_Code, A_Cy From Account_Curr)
                     Where Rownum <= 1;
                Exception
                End;
                    Begin
                    Exception
                    End;
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Cc_Avail From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Cc_Code Is Null Then
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Projects From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Pj_No Is Null Then
                    If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Actvty From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Actv_No Is Null Then
                        Begin
                            Select Cc_Code,
                              From Rms_Trmnl
                             Where Trmnl_No = J.Trmnl_No;
                        Exception
                        End;
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Cc_Avail From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Cc_Code Is Null Then
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Projects From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Pj_No Is Null Then
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Actvty From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Actv_No Is Null Then
                Begin
                    Select Sr_Type
                      From Rms_Trmnl
                     Where Trmnl_No = J.Trmnl_No;
                Exception
                End;*/
                    Begin
                        Select Min(Sr_Type) Into V_Sr_Type From Ias_Rt_Sales_Types;
                    Exception
                            Raise_Application_Error(-20004, 'Error When Select Si_Type From Ias_Rt_Sales_Types ' || Chr(13) || Sqlerrm);
                    End;
                Begin
                    Insert Into Ias_Rt_Bill_Mst(Rt_Bill_Doc_Type,
                Exception
                        Raise_Application_Error(-20003, 'Error When Insert Into Ias_Rt_Bill_Mst In Post Rt Sales , ' || Chr(13) || Sqlerrm);
                End;
                Begin
                    Delete From Rms_Pst_Srl;
                    Insert Into Rms_Pst_Srl(Pst_Srl) Values (J.Rt_Bill_Srl);
                    Update Rms_Rt_Bill_Mst M
                     Where Rt_Bill_Srl = J.Rt_Bill_Srl;
                Exception
                        Raise_Application_Error(-20090, 'Err. When Update Rms_Rt_Bill_Mst From Rms_Pst_Srl' || Chr(13) || Sqlerrm);
                End;
                Begin
                Exception
                        Raise_Application_Error(-20004, 'Error When Insert Into Gr_Note In Post Rt Sales' || Chr(13) || Sqlerrm);
                End;
                        Select Nvl(Srvc_Amt, 0) Amt,
                          From Rms_Rt_Bill_Mst,
                         Where Rms_Rt_Bill_Mst.Rt_Bill_Srl = Rms_Rt_Bill_Srvc.Rt_Bill_Srl
                                       (Select 1
                                          From Rms_
                                         Where Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum <= 1);
                Begin
                        Begin
                            Insert Into Other_Charges(Bill_Type,
                        Exception
                        End;
                End;
                    Begin
                    Exception
                    End;
                        Select Rt_Bill_No,
                               Get_Post_Code_Inv(P_Type => Ias_Gen_Pkg.Get_Cnt('Select Item_Posting_Flag From Ias_Para_Inv Where Rownum <= 1 '), P_I_Code => Rms_Rt_Bill_Dtl.I_Code, P_W_Code => Rms_Rt_Bill_Dtl.W_Code) Post_Code,
                          From Rms_Rt_Bill_Dtl
                         Where Rms_Rt_Bill_Dtl.Rt_Bill_Srl = J.Rt_Bill_Srl;
                Begin --- (12)
                                Begin
                                Exception
                                End;
                        Begin
                                            Begin
                                                Select W_Code
                                                  From Warehouse_Details
                                                 Where Nvl(Main_Wcode, 0) = 1;
                                            Exception
                                            End;
                  Begin
  Exception When Others Then
  End;   
                            Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                            Begin
                                Insert Into Ias_Rt_Bill_Dtl(Rt_Bill_Doc_Type,
                            Exception
                                    Raise_Application_Error(-20006, 'Error When Insert Into Ias_Rt_Bill_Dtl  ' || Chr(13) || Sqlerrm);
                            End;
                                Begin
                                Exception
                                End;
                                Begin
                                Exception
                                        Raise_Application_Error(-20010, 'Error When Insert Into Gr Detail , (Rt Sales) ' || Chr(13) || Sqlerrm);
                                End;
                                --## Insert Into Item_Movement
                                Begin
                                Exception
                                        Raise_Application_Error(-20010, 'Error When Insert Into Item Movement , (Rt Sales) ' || Chr(13) || Sqlerrm);
                                End;
                        End;
                End; --(12)
                    Begin
                    Exception
                            Raise_Application_Error(-20011, 'Error When Insert Into Out Bills Tables , (Rt Sales)' || Chr(13) || Sqlerrm);
                    End;
                    Begin
                    Exception
                Begin
                Exception When Others Then
                    Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20012 - Error When Updating Post In Rt Bills  = '||Chr(13)||'Rt_Bill_Ser ='||V_Rt_Bill_Ser ||Chr(13)||Sqlerrm||''')') ;
                End;
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20012 - Error When Updating Post In Rt.Bills  = '||Chr(13)||'Rt_Bill_Ser ='||V_Rt_Bill_Ser ||Chr(13)||Sqlerrm||''')') ;
                End; */
            --## Update Rms_Rt_Bill_Mst
            Begin
                Update Rms_Rt_Bill_Mst
                 Where Rms_Rt_Bill_Mst.Rt_Bill_Type In (4, 8)
                               (Select 1
                                  From Rms_Rt_Bill_Mst_Tmp
                                 Where Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum <= 1) --And Exists (Select 1 From Ias_Rt_Bill_Mst Where Rt_Bill_Ser=Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum<=1)
            Exception
                    Raise_Application_Error(-20013, 'Error When Update Rt_Bill_Post , ' || Chr(13) || Sqlerrm);
            End;
        End;
    Procedure Post_Rt_Sales_Sum(P_Whr       In Varchar2 Default Null,
    Begin
            Begin
                Select Lang_No
                  From Ias_Sys.Lang_Def
                 Where Nvl(Flg_St, 1) = 1 And Lang_Dflt = 1 And Rownum <= 1;
            Exception
            End;
        Begin
            Select Use_Out_Bills,
              From Ias_Para_Ar,
             Where Rownum <= 1;
        Exception
                Raise_Application_Error(-20001, 'Error When Select From Para In Pos
        End;
        Begin
            Select Allow_Enter_Zero_Cost
              From Privilege_Fixed
             Where U_Id = P_User_No And Rownum <= 1;
        Exception
                Raise_Application_Error(-20002, 'Error When Select From Privilege_Fixed In Post_Rt_Sales_Detail' || Chr(13) || Sqlerrm);
        End;
        Execute Immediate ' Insert Into Rms_Rt_Bill_Mst_Tmp (Rt_Bill_No,Rt_Bill_Srl) Select Rt_Bill_No , Rt_Bill_Srl 
                                                               From Rms_Rt_Bill_Mst 
                                                              Where Rms_Rt_Bill_Mst.Rt_Bill_Type Not In  (4 ,8)
                                                                And Exists(Select 1 From Rms_Rt_Bill_Dtl Where Rt_Bill_Srl=Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum<=1) ' || P_Whr;
                  Select Distinct Rt_Bill_Date,
                    From Rms_Rt_Bill_Mst
                   Where Rms_Rt_Bill_Mst.Rt_Bill_Type Not In (4, 8)
                                 (Select 1
                                    From Rms_Rt_Bill_Mst_Tmp
                                   Where Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum <= 1)
                Order By Rt_Bill_Date,
        Begin ---(11)
                Begin
                    Begin
                        For Mst_Crsr In (Select Sum(Rt_Bill_Amt) Rt_Bill_Amt,
                                           From Rms_Rt_Bill_Mst
                                          Where Exists
                                                    (Select 1
                                                       From Rms_Rt_Bill_Mst_Tmp
                                                      Where Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum <= 1)
                        Delete From Rms_Pst_Srl;
                        Insert Into Rms_Pst_Srl
                            Select Extractvalue(Value(Xmlmstdmy), '*/S') As Rt_Bill_Srl
                              From Table(Xmlsequence(Extract(Xmltype.Createxml(V_Rt_Bill_Srls), '/A/B'))) Xmlmstdmy;
                    Exception
                            Raise_Application_Error(-20003, 'Error When Select From Ias_Rt_Bill_Mst In Post Rt Sales Sum , ' || Chr(13) || Sqlerrm);
                    End;
                    Begin
                        Select A_Code
                          From User_R
                         Where U_Id = J.Ad_U_Id;
                    Exception
                    End;
                       Begin
                          Select Bank_Ac
                           From Credit_Card_Types
                            Where Cr_Card_No =  J.Cr_Card_No ;
                       Exception
                             Begin
                                Select Bank_Ac
                                 From Credit_Card_Types
                                  Where Cr_Card_No =  J.Cr_Card_No_Scnd ;
                             Exception
                                 Begin
                                      Select Bank_Ac
                                       From Credit_Card_Types
                                        Where Cr_Card_No =  J.Cr_Card_No_Thrd ;
                                 Exception
                        Begin
                            Select Cash_No
                              From User_R
                             Where A_Code = V_A_Code And U_Id = J.Ad_U_Id And Rownum = 1;
                 Exception
                                Begin
                                    Select Cash_No
                                      From Cash_In_Hand
                                     Where A_Code = V_A_Code And Rownum = 1;
                                Exception
                                End;
                        End;
                            Begin
                                Select Cash_No
                                  From Cash_In_Hand
                                 Where A_Code = V_A_Code And Rownum = 1;
                            Exception
                            End;
                        Begin
                            Select Ac_Code,
                              From Rms_Emp
                             Where Emp_No = J.Feeder_No And Emp_Typ = 3;
                        Exception
                        End;
                    Begin
                        Select 1
                          From (Select V_A_Code, J.A_Cy From Dual
                                Select A_Code, A_Cy From Account_Curr)
                         Where Rownum <= 1;
                    Exception
                    End;
                    BEGIN
                        SELECT Point_Rplc_A_Code
                          FROM Interface_Acc
                         WHERE Brn_No = J.Brn_No;
                    EXCEPTION
                    END;
                        BEGIN
                            SELECT 1
                              FROM Account_Curr
                             WHERE A_Code = V_Point_Rplc_A_Code
                        EXCEPTION
                        END;
                        Begin
                        Exception
                        End;
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Cc_Avail From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Cc_Code Is Null Then
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Projects From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Pj_No Is Null Then
                        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Actvty From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Actv_No Is Null Then
                            Begin
                                Select Cc_Code,
                                  From Rms_Trmnl
                                 Where Trmnl_No = J.Trmnl_No;
                            Exception
                            End;
                            If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Cc_Avail From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Cc_Code Is Null Then
                            If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Projects From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Pj_No Is Null Then
                            If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Actvty From Ias_Para_Gen Where Rownum <= 1 '), 0) In (2, 3) And V_Actv_No Is Null Then
                    /*Begin
                        Select Sr_Type
                          From Rms_Trmnl
                         Where Trmnl_No = J.Trmnl_No;
                    Exception
                    End;*/
                        Begin
                            Select Min(Sr_Type) Into V_Sr_Type From Ias_Rt_Sales_Types;
                        Exception
                                Raise_Application_Error(-20004, 'Error When Select Sr_Type From Ias_Rt_Sales_Types ' || Chr(13) || Sqlerrm);
                        End;
                    Insert Into Ias_Rt_Bill_Mst(Rt_Bill_Doc_Type,
                Exception
                        Raise_Application_Error(-20004, 'Error When Insert Into Ias_Rt_Bill_Mst In Post Rt Sales Sum, ' || Chr(13) || Sqlerrm);
                End;
                Begin
                    Update Rms_Rt_Bill_Mst M
                     Where Exists
                               (Select 1
                                  From Rms_Pst_Srl
                                 Where Pst_Srl = M.Rt_Bill_Srl);
                Exception
                        Raise_Application_Error(-20091, 'Err. When Update Rms_Rt_Bill_Mst From Rms_Pst_Srl' || Chr(13)
                End;
                Begin
                Exception
                        Raise_Application_Error(-20005, 'Error When Insert Into Gr_Note In Post Rt Sales Sum, ' || Chr(13) || Sqlerrm);
                End;
                          Select Nvl(Sum(Srvc_Amt), 0) Amt,
                            From Rms_Rt_Bill_Mst,
                           Where Rms_Rt_Bill_Mst.Rt_Bill_Srl = Rms_Rt_Bill_Srvc.Rt_Bill_Srl
                                     (Select 1
                                        From Rms_Pst_Srl
                                       Where Pst_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl)
                        Group By Sales_Charges.Sc_No,
                Begin
                        Begin
                            Insert Into Other_Charges(Bill_Type,
                        Exception
                        End;
                End;
                    Begin
                    Exception
                    End;
                          Select Sum(Rms_Rt_Bill_Dtl.I_Qty) I_Qty,
                                 Get_Post_Code_Inv(P_Type => Ias_Gen_Pkg.Get_Cnt('Select Item_Posting_Flag From Ias_Para_Inv Where Rownum <= 1 '), P_I_Code => Rms_Rt_Bill_Dtl.I_Code, P_W_Code => Rms_Rt_Bill_Dtl.W_Code) Post_Code,
                            From Rms_Rt_Bill_Dtl
                           Where Exists(Select 1
                                          From Rms_Pst_Srl 
                                         Where Pst_Srl = Rms_Rt_Bill_Dtl.Rt_Bill_Srl)
                        Group By Rms_Rt_Bill_Dtl.I_Code,
                Begin --- (12)
                                Begin
                                Exception
                                End;
                        Begin
                                            Begin
                                                Select W_Code
                                                  From Warehouse_Details
                                                 Where Nvl(Main_Wcode, 0) = 1;
                                            Exception
                                            End;
                  Begin
  Exception When Others Then
  End;   
                            Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                            Insert Into Ias_Rt_Bill_Dtl(Rt_Bill_Doc_Type,
                        Exception
                                Raise_Application_Error(-20006, 'Error When Insert Into Ias_Rt_Bill_Dtl Sum ' || Chr(13) || Sqlerrm);
                        End;
                            Begin
                            Exception
                            End;
                            Begin
                            Exception
                                    Raise_Application_Error(-20008, 'Error In Insert Into Gr_Detail (Rt Sales Sum)' || Chr(13) || Sqlerrm);
                            End;
                            --## Insert Into Item_Movement
                            Begin
                            Exception
                                    Raise_Application_Error(-20009, 'Error In Insert Into Item_Movement (Rt Sales Sum)' || Chr(13) || Sqlerrm);
                            End;
                End; --(12)
                    Begin
                    Exception
                    End;
                    Begin
                    Exception
                    End;
                Begin
                Exception When Others Then
                    Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Updating Post In Rt Bills Sum = '||Chr(13)||'Rt_Bill_Ser ='||V_Rt_Bill_Ser ||Chr(13)||Sqlerrm||''')') ;
                End;
                Begin
                Exception
                       Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Updating Post In Out Rt.Bills  = '||Chr(13)||'Rt_Bill_Ser ='||V_Rt_Bill_Ser ||Chr(13)||Sqlerrm||''')') ;
              End;  */
            --## Update Rms_Rt_Bill_Mst
            Begin
                Update Rms_Rt_Bill_Mst
                 Where Rms_Rt_Bill_Mst.Rt_Bill_Type Not In (4, 8)
                               (Select 1
                                  From Rms_Rt_Bill_Mst_Tmp
                                 Where Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum <= 1);
            Exception
                    Raise_Application_Error(-20013, 'Error When Update Rt_Bill_Post Sum, ' || Chr(13) || Sqlerrm);
            End;
        End;
    Procedure Post_Transfer_Out(P_Doc_Ser   In Ias_Whtrns_Mst.Tr_Ser%Type Default Null,
    Begin
            Begin
                Select Lang_No
                  From Ias_Sys.Lang_Def
                 Where Nvl(Flg_St, 1) = 1 And Lang_Dflt = 1 And Rownum <= 1;
            Exception
            End;
        Begin
            Select Costing_Type,
              From Ias_Para_Ar,
             Where Rownum <= 1;
        Exception
                Raise_Application_Error(-20001, 'Error When Select From Para In Post_Transfer_Out (7) ' || Chr(13) || Sqlerrm);
        End;
        Begin
            Select Allow_Enter_Zero_Cost
              From Privilege_Fixed
             Where U_Id = P_User_No And Rownum <= 1;
        Exception
                Raise_Application_Error(-20002, 'Error When Select From Privilege_Fixed In Post_Transfer_Out , ' || Chr(13) || Sqlerrm);
        End;
        Insert Into Ias_Whtrns_Mst_Br_Tmp(Tr_No,
            Select Tr_No,
              From Ias_Whtrns_Mst_Br
             Where Tr_Inout_Type = 1
                           (Select 1
                              From Ias_Whtrns_Dtl_Br
                             Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1)
                           (Select 1
                              From Ias_Whtrns_Mst
                             Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1);
        Begin
            Select 1
              From Rms_Minus_Stk_Qty_Tmp
             Where Rownum <= 1;
        Exception
        End;
            If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Auto_Stk_Adjstmnt From Rms_Para Where Rownum <= 1 '), 0) = 1 Then
                Begin
                     Where Exists
                               (Select 1
                                  From Ias_Whtrns_Dtl_Br      A,
                                 Where A.Tr_Ser = M.Tr_Ser And A.I_Code = B.I_Code /*
                Exception
                End;
                  Select Tr_Inout_Type,
                    From Ias_Whtrns_Mst_Br
                   Where Tr_Inout_Type = 1
                                 (Select 1
                                    From Ias_Whtrns_Mst_Br_Tmp
                                   Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1)
                Order By Ad_Date;
        Begin
                Begin
                    Insert Into Ias_Whtrns_Mst(Tr_Inout_Type,
                Exception
                        Raise_Application_Error(-20004, ' Err. When Insert Into Ias_Whtrns_Mst , ' || Sqlerrm);
                End;
                        Select Tr_Inout_Type,
                          From Ias_Whtrns_Dtl_Br
                         Where Tr_Inout_Type = 1 And Ias_Whtrns_Dtl_Br.Tr_Ser = J.Tr_Ser;
                Begin
                        Begin
                        Exception
                        End;
                        Begin
                            Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                        Exception
                        End;
                        Begin
                            Insert Into Ias_Whtrns_Dtl(Tr_Inout_Type,
                        Exception
                        End;
                            Begin
                                Select 1
                                  From Ias_Itm_Attach_Movement_Br
                                 Where Doc_Ser = J.Tr_Ser And Rec_Attch = I.Rec_Attch And Doc_Type = 7 And Rownum <= 1;
                            Exception
                            End;
                            Begin
                                Insert Into Ias_Itm_Attach_Movement(I_Code,
                                    Select I_Code,
                                      From Ias_Itm_Attach_Movement_Br
                                     Where Doc_Ser = J.Tr_Ser And Rec_Attch = I.Rec_Attch And Doc_Type = 7;
                            Exception
                                    Raise_Application_Error(-20010, ' Err. When Insert Into Ias_Itm_Attach_Movement_Br (7) , ' || Sqlerrm);
                            End;
                        Begin
                            Select Decode(J.Tr_Cost_Type, 1, Nvl(V_Stkcost, 0), Nvl(I.I_Price, 0)) Into V_Price From Dual;
                        Exception
                        End;
                        Begin
                        Exception
                        End;
                End;
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Post Warehouse Transfer  = ' || Chr(13) || 'J.Tr_Ser =' || J.Tr_Ser || Chr(13) || Sqlerrm || ''')');
                End;
            --## Update Rms_Rt_Bill_Mst
            Begin
                Update Ias_Whtrns_Mst_Br
                 Where Tr_Inout_Type = 1
                               (Select 1
                                  From Ias_Whtrns_Mst_Br_Tmp
                                 Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1)
                               (Select 1
                                  From Ias_Whtrns_Mst
                                 Where Tr_Ser = Ias_Whtrns_Mst_Br.Tr_Ser And Rownum <= 1);
            Exception
                    Raise_Application_Error(-20013, 'Error When Update Ias_Whtrns_Mst_Br (7) , ' || Chr(13) || Sqlerrm);
            End;
        End;
    Procedure Post_Incoming(P_Doc_Ser   In Gr_Note.G_Ser%Type Default Null,
    Begin
            Begin
                Select Lang_No
                  From Ias_Sys.Lang_Def
                 Where Nvl(Flg_St, 1) = 1 And Lang_Dflt = 1 And Rownum <= 1;
            Exception
            End;
        Begin
              From Ias_Para_Inv;
        Exception
                Raise_Application_Error(-20001, 'Error When Select From Para In Post_Incoming ' || Chr(13) || Sqlerrm);
        End;
        Begin
            Select Allow_Enter_Zero_Cost
  From Privilege_Fixed
             Where U_Id = P_User_No And Rownum <= 1;
        Exception
                Raise_Application_Error(-20002, 'Error When Select From Privilege_Fixed In Post_Incomingt , ' || Chr(13) || Sqlerrm);
        End;
        Insert Into Gr_Note_Br_Tmp(Gr_No,
            Select Gr_No,
              From Gr_Note_Br
             Where Pi_Type = 5
                           (Select 1
                              From Gr_Detail_Br
                             Where G_Ser = Gr_Note_Br.G_Ser And Rownum <= 1)
                           (Select 1
                              From Gr_Note
                             Where G_Ser = Gr_Note_Br.G_Ser And Rownum <= 1);
                  Select Pi_Type,
                    From Gr_Note_Br
                   Where Pi_Type = 5
                                 (Select 1
                                    From Gr_Note_Br_Tmp
                                   Where G_Ser = Gr_Note_Br.G_Ser And Rownum <= 1)
                Order By Ad_Date;
        Begin ---(11)
                Begin
                    Insert Into Gr_Note(Pi_Type,
                Exception
                        Raise_Application_Error(-20005, 'Error When Insert Into Gr_Note ' || Chr(13) || Sqlerrm);
                End;
                        Select Pi_Type,
                          From Gr_Detail_Br
                         Where Pi_Type = 5 And G_Ser = J.G_Ser;
                Begin --- (12)
                        Begin
                            Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                            Select Ias_Recno_Seq.Nextval Into V_Rec_No From Dual;
                            Begin
                            Exception
                            End;
                                Begin
                                Exception
                                End;
                            Insert Into Gr_Detail(Pi_Type,
                        Exception
                                Raise_Application_Error(-20005, 'Error In Insert Into Gr_Detail ' || Chr(13) || Sqlerrm);
                        End;
                            Begin
                                Select 1
                                  From Ias_Itm_Attach_Movement_Br
                                 Where Doc_Ser = J.G_Ser And Rec_Attch = I.Rec_Attch And Doc_Type = 5 And Rownum <= 1;
                            Exception
                            End;
                            Begin
                                Insert Into Ias_Itm_Attach_Movement(I_Code,
                                    Select I_Code,
                                      From Ias_Itm_Attach_Movement_Br
                                     Where Doc_Ser = J.G_Ser And Rec_Attch = I.Rec_Attch And Doc_Type = 5;
                            Exception
                                    Raise_Application_Error(-20010, 'Error In  In Insert Into Ias_Itm_Attach_Movement In Post_Incmng');
                            End;
                        Begin
                        Exception
                                Raise_Application_Error(-20010, 'Error In  In Insert Into Ias_Itm_Attach_Movement In Post_Incmng');
                        End;
                End; --(12)
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Post In Incoming  = ' || Chr(13) || 'G_Ser =' || J.G_Ser || Chr
                End;
            --## Update Gr_Note_Br
            Begin
                Update Gr_Note_Br
                 Where Exists
                           (Select 1
                              From Gr_Note_Br_Tmp
                             Where G_Ser = Gr_Note_Br.G_Ser And Rownum <= 1)
                               (Select 1
                                  From Gr_Note
                                 Where G_Ser = Gr_Note_Br.G_Ser And Rownum <= 1);
            Exception
            End;
        End;
    Procedure Post_Stk_Adjstmnt
    Begin
        Begin
            Select 1
              From Rms_Minus_Stk_Qty_Tmp
             Where Rownum <= 1;
        Exception
        End;
                      Select Distinct Brn_No
                        From Rms_Minus_Stk_Qty_Tmp
                    Order By Brn_No;
            Begin
                        Select Brn_Year,
                          From S_Brn
                         Where Brn_No = I_Brn.Brn_No;
                    Begin
                    Exception
                    End;
                    Begin
                        Select Stk_Adj_A_Code
                          From Interface_Acc
                         Where Brn_No = I_Brn.Brn_No And Rownum <= 1;
                    Exception
                    End;
                    Begin
                        Select Min(Stk_Type)
                          From Ias_Stk_Adjst_Types
                         Where Rownum <= 1;
                    Exception
                    End;
                    Begin
                        Insert Into Stk_Adjustment(Stk_Type,
                    Exception
                            Raise_Application_Error(-20007, 'Error When Insert Into Stk_Adjustment ' || Chr(13) || Sqlerrm);
                    End;
                    Begin
                    Exception
                            Raise_Application_Error(-20008, 'Error When Insert Into Gr_Note ' || Chr(13) || Sqlerrm);
                    End;
                            Select I_Code,
                              From Rms_Minus_Stk_Qty_Tmp
                             Where Brn_No = I_Brn.Brn_No;
                    Begin
                            Begin
                                Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                            Exception
                            End;
                            If Ias_Gen_Pkg.Get_Cnt('Select Costing_Type From Ias_Para_Inv Where Rownum <= 1 ') = 2 Then -- Wtavg
                                Begin
                                    V_Wt_Before := Nvl(Ias_Itm_Pkg.Get_Grand_Wtavg(P_Wtavg_Type => Ias_Gen_Pkg.Get_Cnt('Select Wtavg_Type From Ias_Para_Inv Where Rownum <= 1 '), P_Icode => I.I_Code, P_Wcode => I.W_Code), 0);
                                Exception
                                End;
                                V_Wt_Before := Last_Incoming_Price(P_Wtavg_Type => Ias_Gen_Pkg.Get_Cnt('Select Wtavg_Type From Ias_Para_Inv Where Rownum <= 1 '), P_Icode => I.I_Code, P_Psize => 1, P_Wcode => I.W_Code, P_Type => 1);
                            Begin
                                Insert Into Stk_Adjustment_Det(Adjust_Type,
                                             Get_Post_Code_Inv(Ias_Gen_Pkg.Get_Cnt('Select Item_Posting_Flag From Ias_Para_Inv Where Rownum <= 1 '), I.I_Code, I.W_Code),
                            Exception
                            End;
                            Begin
                                V_Wt_After := Calc_Wtavg_Cost(P_Cost_Type    => Ias_Gen_Pkg.Get_Cnt('Select Costing_Type From Ias_Para_Inv Where Rownum <= 1 '),
                                                              P_Wtavg_Type   => Ias_Gen_Pkg.Get_Cnt('Select Wtavg_Type From Ias_Para_Inv Where Rownum <= 1 '),
                            Exception
                            End;
                            --## Insert Into Storage
                            Begin
                            Exception
                            End;
                            --## Insert Into Gr_Detail
                            Begin
                            Exception
                            End;
                            --## Insert Into Item_Movement
                            Begin
                            Exception
                            End;
                            Begin
                            Exception
                                    Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Posting Stk_Adjustment  ' || Chr(13) || 'Doc_Ser =' || V_Doc_Ser || Chr(13) || Sqlerrm || ''')');
                            End;
                    End;
            End;
    Procedure Post_Jv
            Select J_Ser,
              From Master_Journal_V
             Where Nvl(Stand_By, 0) = 0
                   And J_Ser In (Select J_Ser
                                   From Master_Journal_V
                                  Where Nvl(Stand_By, 0) = 0
                                 Select Doc_Ser
                                   From Ias_Post_Mst
                                  Where Doc_Type = 1);
    Begin
    Exception
            Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20033 - Error When Post In Post_Jv  = ' || Chr(13) || 'I.J_Ser =' || V_J_Ser || Chr(13) || Sqlerrm || ''')');
    Procedure Post_Vchr
            Select Decode(Voucher_Type,  1, 2,  2, 3) Doc_Type,
              From Vouchers
             Where Nvl(Stand_By, 0) = 0
                   And V_Ser In (Select V_Ser
                                   From Vouchers
                                  Where Nvl(Stand_By, 0) = 0
                                 Select Doc_Ser
                                   From Ias_Post_Mst
                                  Where Doc_Type In (2, 3));
    Begin
    Exception
            Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20034 - Error When Post In Voucher  = ' || Chr(13) || 'I.V_Ser =' || V_V_Ser || Chr(13) || Sqlerrm || ''')');
    Procedure Post_Trns_Data_Auto
    Cursor C_Post Is Select Doc_Type,Doc_Ser,Doc_Sequence From
            (Select 1 Doc_Type,M.Bill_Srl Doc_Ser,Null Doc_Sequence
              From Rms_Bill_Mst M,Rms_Bill_Dtl D
             Where M.Bill_Srl = D.Bill_Srl
elect 1 From Rms_Bill_Dtl Where Bill_Srl = M.Bill_Srl And Rownum<=1)
              And Not Exists(Select 1 From Ias_Bill_Mst Where Bill_Ser=M.Bill_Srl And Rownum<=1)
            Group By M.Bill_Srl
            Select 3 Doc_Type,M.Rt_Bill_Srl Doc_Ser,Null Doc_Sequence
              From Rms_Rt_Bill_Mst M,Rms_Rt_Bill_Dtl D
             Where M.Rt_Bill_Srl = D.Rt_Bill_Srl
              And Exists(Select 1 From Rms_Rt_Bill_Dtl Where Rt_Bill_Srl=M.Rt_Bill_Srl And Rownum<=1)
              And Not Exists(Select 1 From Ias_Rt_Bill_Mst Where Rt_Bill_Ser=M.Rt_Bill_Srl And Rownum<=1)
            Group By M.Rt_Bill_Srl
            Select 5 Doc_Type,M.G_Ser Doc_Ser,Min(Doc_Sequence) Doc_Sequence
              From Gr_Note_Br M,Gr_Detail_Br D
             Where M.G_Ser = D.G_Ser
              And Exists(Select 1 From Gr_Detail_Br Where G_Ser=M.G_Ser And Rownum<=1)
              And Not Exists(Select 1 From Gr_Note Where G_Ser=M.G_Ser And Rownum<=1)
            Group By M.G_Ser
            Select 6 Doc_Type,M.Out_Ser Doc_Ser,Min(Doc_Sequence) Doc_Sequence
              From Ias_Outgoing_Mst_Br M,Ias_Outgoing_Dtl_Br D
             Where M.Out_Ser = D.Out_Ser
              And Exists(Select 1 From Ias_Outgoing_Dtl_Br Where Out_Ser=M.Out_Ser And Rownum<=1)
              And Not Exists(Select 1 From Ias_Outgoing_Mst Where Out_Ser=M.Out_Ser And Rownum<=1)
            Group By M.Out_Ser
            Select Decode(M.Tr_Inout_Type,1,7,2,8) Doc_Type,M.Tr_Ser Doc_Ser,Min(Doc_Sequence) Doc_Sequence
              From Ias_Whtrns_Mst_Br M,Ias_Whtrns_Dtl_Br D
             Where M.Tr_Ser = D.Tr_Ser
               And Exists(Select 1 From Ias_Whtrns_Dtl_Br Where Tr_Ser=M.Tr_Ser And Rownum<=1)
               And Not Exists(Select 1 From Ias_Whtrns_Mst Where Tr_Ser=M.Tr_Ser And Rownum<=1)
            Group By Decode(M.Tr_Inout_Type,1,7,2,8),M.Tr_Ser)
            Order By Doc_Sequence;
    Begin
        If Nvl(Ias_Gen_Pkg.Get_Cnt ('Select Use_Auto_Pst_Itm_Material From Rms_Para Where Rownum <= 1 '),0) = 1 Then
    Procedure Post_Data_To_Jrnl
    Begin
                Select Bill_No,
                  From Ias_Bill_Mst
                 Where Nvl(Stand_By, 0) = 0
                       And Bill_Ser In (Select Bill_Ser
                                          From Ias_Bill_Mst
                                         Where Nvl(Stand_By, 0) = 0 And Ref_No = 'RMS'
                                        Select Doc_Ser
                                          From Ias_Post_Mst
                                         Where Doc_Type = 4);
        Begin
                --## Insert Into Ias_Post_Dtl Before Posting
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20035 - Error When Post In Bills  = ' || Chr(13) || 'I_Bills.Bill_Ser =' || I_Bills.Bill_Ser || Chr(13) || Sqlerrm || ''')');
                End;
        End;
                Select Rt_Bill_No,
                  From Ias_Rt_Bill_Mst
                 Where Nvl(Stand_By, 0) = 0
                       And Rt_Bill_Ser In (Select Rt_Bill_Ser
                                             From Ias_Rt_Bill_Mst
                                            Where Nvl(Stand_By, 0) = 0 And Ref_No = 'RMS'
                                           Select Doc_Ser
                                             From Ias_Post_Mst
                                            Where Doc_Type = 5);
        Begin
                --## Insert Into Ias_Post_Dtl Before Posting
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20035 - Error When Post In Rt Bills  = ' || Chr(13) || 'I_Rt_Bills.Rt_Bill_Ser =' || I_Rt_Bills.Rt_Bill_Ser || Chr(13) || Sqlerrm || ''')');
                End;
        End;
                Select Tr_No,
                  From Ias_Whtrns_Mst
                 Where Tr_Inout_Type = 2
                       And Tr_Ser In (Select Tr_Ser
                                        From Ias_Whtrns_Mst
                                       Where Tr_Inout_Type = 2 And Nvl(Hung, 0) = 0 And Ref_No = 'RMS'
                                      Select Doc_Ser
                                        From Ias_Post_Mst
                                       Where Doc_Type = 12);
        Begin
                --## Insert Into Ias_Post_Dtl Before Posting
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20037 - Error When Post In Trnsfr  = ' || Chr(13) || 'I_Trnsfr.Tr_Ser =' || I_Trnsfr.Tr_Ser || Chr(13) || Sqlerrm || ''')');
                End;
        End;
                Select Tr_No,
                  From Ias_Whtrns_Mst
                 Where Tr_Inout_Type = 1
                       And Tr_Ser In (Select Tr_Ser
                                        From Ias_Whtrns_Mst
                                       Where Tr_Inout_Type = 1 And Nvl(Hung, 0) = 0 And Ref_No = 'RMS'
                                      Select Doc_Ser
                                        From Ias_Post_Mst
                                       Where Doc_Type = 11);
        Begin
                --## Insert Into Ias_Post_Dtl Before Posting
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20038 - Error When Post In Trnsfr  = ' || Chr(13) || 'I_Trnsfr.Tr_Ser =' || I_Trnsfr.Tr_Ser || Chr(13) || Sqlerrm || ''')');
                End;
        End;
                Select Out_No,
                  From Ias_Outgoing_Mst
                 Where Nvl(Hung, 0) = 0
                       And Out_Ser In (Select Out_Ser
                                         From Ias_Outgoing_Mst
                                        Where Nvl(Hung, 0) = 0 And Ref_No = 'RMS'
                                       Select Doc_Ser
                                         From Ias_Post_Mst
                                        Where Doc_Type = 9);
        Begin
                --## Insert Into Ias_Post_Dtl Before Posting
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20039 - Error When Post In Outgoing  = ' || Chr(13) || 'I_Out.Out_Ser=' || I_Out.Out_Ser || Chr(13) || Sqlerrm || ''')');
                End;
        End;
                Select Gr_No,
                  From Gr_Note
                 Where Pi_Type = 5
                       And G_Ser In (Select G_Ser
                                       From Gr_Note
                                      Where Pi_Type = 5 And Nvl(Hung, 0) = 0 And Ref_No = 'RMS'
                                     Select Doc_Ser
                                       From Ias_Post_Mst
                                      Where Doc_Type = 8);
        Begin
                --## Insert Into Ias_Post_Dtl Before Posting
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20040 - Error When Post In Incoming  = ' || Chr(13) || 'I_Inc.G_Ser=' || I_Inc.G_Ser || Chr(13) || Sqlerrm || ''')');
                End;
        End;
                Select Doc_No,
                  From Assemble_Kit_Items
                 Where Nvl(Hung, 0) = 0
                       And Doc_Ser In (Select Doc_Ser
                                         From Assemble_Kit_Items
                                        Where Nvl(Hung, 0) = 0 And Ref_No = 'RMS'
                                       Select Doc_Ser
                                         From Ias_Post_Mst
                                        Where Doc_Type = 17);
        Begin
                --## Insert Into Ias_Post_Dtl Before Posting
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20041 - Error When Post In Assemble  = ' || Chr(13) || 'I_Ass
                End;
        End;
                Select Doc_No,
                  From Disassemble_Kit_Items
                 Where Nvl(Hung, 0) = 0
                       And Doc_Ser In (Select Doc_Ser
                                         From Disassemble_Kit_Items
                                        Where Nvl(Hung, 0) = 0 And Ref_No = 'RMS'
                                       Select Doc_Ser
                                         From Ias_Post_Mst
                                        Where Doc_Type = 18);
        Begin
                --## Insert Into Ias_Post_Dtl Before Posting
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20042 - Error When Post In Disassemble  = ' || Chr(13) || 'I_Disassmbl.Doc_Ser=' || I_Disassmbl.Doc_Ser || Chr(13) || Sqlerrm || ''')');
                End;
        End;
    Procedure Insrt_Incmng_Outgng_Auto
    Begin
        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Auto_Pst_Itm_Material From Rms_Para Where Rownum <= 1 '), 0) = 1 Then
            Begin
                Select Nvl(Item_Posting_Flag, 0),
                  From Ias_Para_Inv,
            Exception
            End;
            Begin
                Select Incom_Type
                  From Incom_Types
                 Where Nvl(Inc_Res, 0) = 1 And Rownum <= 1;
            Exception
            End;
            Insert Into Rms_Bill_Mst
                Select Bill_No,
                  From Rms_Bill_Mst
                 Where Nvl(Move_Inc_Flg, 0) = 0;
                      Select Distinct Rms_Bill_Mst.Bill_No Gr_No,
                        From Rms_Bill_Mst,
                       Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                     (Select 1
                                        From Rms_Bill_Mst_Tmp
                                       Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                    --For Update Nowait
                    Order By Rms_Bill_Mst.Bill_Srl;
            Begin
                    Begin
                        Insert Into Gr_Note_Br(Pi_Type,
                    Exception
                    End;
                            Select Bill_No Gr_No,
                              From Ias_Itm_Mst,
                             Where Ias_Itm_Mst.I_Code = Rms_Bill_Dtl.I_Code
                                           (Select 1
                                              From Rms_Bill_Mst_Tmp
                                             Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Dtl.Bill_Srl And Rownum <= 1);
                    Begin
                            Begin
                                Select Sum(Nvl(I_Cwtavg, 0) * Nvl(Qty, 0))
                                  From Ias_Itm_Mst,
                                 Where Ias_Itm_Mst.I_Code = Compound_Items.Di_Code And Compound_Items.I_Code = I_Gr_Dtl.I_Code;
                            Exception
                            End;
                                Begin
                                Exception
                                End;
                            Begin
                                Insert Into Gr_Detail_Br(Pi_Type,
                            Exception
                            End;
                    End;
  Begin
                        Update Rms_Bill_Mst
                         Where Bill_Srl = I_Gr_Mst.G_Ser
                                       (Select 1
                                          From Rms_Bill_Mst_Tmp
                                         Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1);
                    Exception
                            Raise_Application_Error(-20008, ' Err.When Update Move_Inc In Rms_Bill_Mst ' || Chr(13) || Sqlerrm);
                    End;
            End;
            Begin
                Select Out_Type
                  From Out_Types
                 Where Nvl(Out_Res, 0) = 1 And Rownum <= 1;
            Exception
            End;
            Insert Into Rms_Bill_Mst_Tmp
                Select Bill_No,
                  From Rms_Bill_Mst
                 Where Nvl(Move_Out_Flg, 0) = 0;
                      Select Distinct Rms_Bill_Mst.Bill_No Out_No,
                        From Rms_Bill_Mst,
                       Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                     (Select 1
                                        From Rms_Bill_Mst_Tmp
                                       Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                    --For Update Nowait
                    Order By Rms_Bill_Mst.Bill_Srl;
            Begin
                    Begin
                        Select Out_W_Code
                          From Rms_Trmnl
                         Where Trmnl_No = I_Out_Mst.Trmnl_No;
                    Exception
                            Raise_Application_Error(-20009, 'Err. When Get Out W_Code From Trmnl_No =' || I_Out_Mst.Trmnl_No || Chr(13) || Sqlerrm);
                    End;
                    Begin
                        Insert Into Ias_Outgoing_Mst_Br(Out_No,
                    Exception
                    End;
                            Select Bill_No Out_No,
                              From Rms_Bill_Dtl,
                             Where Ias_Itm_Mst.I_Code = Rms_Bill_Dtl.I_Code
                                           (Select 1
                                              From Rms_Bill_Mst_Tmp
                                             Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Dtl.Bill_Srl And Rownum <= 1);
                    Begin
                            Begin
                            Exception
                            End;
                            Begin
                                Insert Into Ias_Outgoing_Dtl_Br(Out_No,
                            Exception
                            End;
                    End;
                    Begin
                        Update Rms_Bill_Mst
                         Where Bill_Srl = I_Out_Mst.Out_Ser
                                       (Select 1
                                          From Rms_Bill_Mst_Tmp
                                         Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1);
                    Exception
                            Raise_Application_Error(-20013, 'Err.When Update Move_Out In Rms_Bill_Mst ' || Chr(13) || Sqlerrm);
                    End;
            End;
    Procedure Post_Assmbl_Kit_Itm(P_Whr       In Varchar2 Default Null,
    Begin
        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Auto_Pst_Itm_Material From Rms_Para Where Rownum <= 1 '), 0) = 1 Then
            --# To Insert Into  Rms_Bill_Mst_Tmp Temporary Table
            Begin
                Execute Immediate ' Insert Into Rms_Bill_Mst_Tmp (Bill_No,Bill_Srl) 
                         Select Rms_Bill_Mst.Bill_No , Rms_Bill_Mst.Bill_Srl 
                           From Rms_Bill_Mst ,Rms_Bill_Dtl ,Ias_Itm_Mst
                          Where Rms_Bill_Mst.Bill_Srl      = Rms_Bill_Dtl.Bill_Srl 
            Exception
                    Raise_Application_Error(-20001, ' Err. When Insert Into Temp Rms_Bill_Mst_Tmp Table ');
            End;
            --# To Insert Into  Rms_Minus_Qty Temporary Table
            Begin
                Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code,
                    Select Itm_Cmpnnt.I_Code I_Code,
                      From Ias_Itm_Mst,
                           (  Select Rms_Bill_Cmpnnt_Dtl.Di_Code I_Code,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Cmpnnt_Dtl.Di_Code,
                     Where Ias_Itm_Mst.I_Code = Itm_Cmpnnt.I_Code And Nvl(Ias_Itm_Mst.Kit_Itm, 0) = 0;
            Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code ,Itm_Unt,W_Code ,Expire_Date,Batch_No,P_Qty,Avl_Qty,Brn_No)
               Select I_Code I_Code ,Itm_Unt Itm_Unt,W_Code,Expire_Date,Batch_No,P_Qty,Avl_Qty,Brn_No From(
                               Select Rms_Bill_Cmpnnt_Dtl.Di_Code I_Code                                        ,
                                        From Rms_Bill_Mst ,Rms_Bill_Dtl,Rms_Bill_Cmpnnt_Dtl ,Ias_Itm_Mst
                                       Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                         And Exists(Select 1 From Rms_Bill_Mst_Tmp Where Rms_Bill_Mst_Tmp.Bill_Srl=Rms_Bill_Mst.Bill_Srl And Rownum<=1)
                                   Group By
            Exception
                    Raise_Application_Error(-20002, ' Err. When Insert Into Temp Rms_Minus_Qty_Tmp Table ');
            End;
            Begin
                Rms_Itm_Qty_With_Compnnt_Prc ( P_Whr => ' And M.Bill_Srl In ( Select Bill_Srl From Rms_Bill_Mst_Tmp )') ;
            Exception
                Raise_Application_Error ( -20002,' Err.In Pst Kit_Itm When Insert Into Temp Rms_Minus_Qty_Tmp Table ');
            Begin
                Select 1
                  From Rms_Minus_Stk_Qty_Tmp
                 Where Rownum <= 1;
            Exception
            End;
                If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Auto_Stk_Adjstmnt From Rms_Para Where Rownum <= 1 '), 0) = 1 Then
                    Begin
                    Exception
                    End;
                    Begin
                         Where Exists
                                   (Select 1
                                      From Rms_Bill_Cmpnnt_Dtl    A,
                                     Where A.Bill_Srl = M.Bill_Srl And A.Di_Code = B.I_Code /*
                    Exception
                    End;
            Begin
                Select Nvl(Costing_Type, 0),
                  From Ias_Para_Inv;
            Exception
            End;
                      Select Distinct Rms_Bill_Mst.Bill_
                        From Rms_Bill_Mst,
                       Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                     (Select 1
                                        From Rms_Bill_Mst_Tmp
                                       Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                    Order By Bill_Date,
            Begin ---(11)
                    Begin
                    Exception
                    End;
                    Begin
                        Insert Into Assemble_Kit_Items(Doc_No,
                                     'Assamble Kit Item From Rms',
                    Exception
                            Raise_Application_Error(-20005, 'Err. When Insert Into Assemble_Kit_Items ' || Chr(13) || Sqlerrm);
                    End;
                    Begin
                                                     P_Desc       => 'Post From Rms System ,' || ' User Id = ' || J.Ad_U_Id,
                    Exception
                            Raise_Application_Error(-20010, 'Error When Insert Into Gr_Note In Post Post_Assmbl_Kit_Itm, ' || Chr(13) || Sqlerrm);
                    End;
                              Select Sum(Rms_Bill_Dtl.I_Qty) I_Qty,
                                From Rms_Bill_Mst,
                               Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                             (Select 1
                                                From Rms_Bill_Mst_Tmp
                                               Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                            Group By Rms_Bill_Dtl.I_Code,
                            Order By Rms_Bill_Mst.Bill_Date,
                    Begin --- (12)
                            Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                                Cursor C_Cmpnd_Itm Is Select Kit_Item_No, I_Code, Itm_Unt,P_Size,
                                                       From Kit_Items
                                                        Where Kit_Item_No = I.I_Code ;
                                      Select Rms_Bill_Cmpnnt_Dtl.I_Code Kit_Item_No,
                                        From Rms_Bill_Mst,
                                       Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Cmpnnt_Dtl.Bill_Srl
                                                     (Select 1
                                                        From Rms_Bill_Mst_Tmp
                                                       Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Cmpnnt_Dtl.Bill_Srl And Rownum <= 1)
                                    Group By Rms_Bill_Cmpnnt_Dtl.I_Code,
                            Begin
                                        Begin
                                        Exception
                                        End;
                                        Begin
                                            Insert Into Kit_Items_Detail(Doc_No,
                                        Exception
                                        End;
                                        Begin
                                                                            P_Adesc         => 'Post From Rms System',
                                        Exception
                                        End;
                            End;
                                            Begin
                                                Select W_Code
                                                  From Warehouse_Details
                                                 Where Nvl(Main_Wcode, 0) = 1;
                                            Exception
                                            End;
                                Begin
                                    Select W_Code
                                      From Kit_Items_Detail
                                     Where Kit_Items_Detail.Doc_Ser = V_Doc_Ser And Kit_Items_Detail.Kit_Item_No = I.I_Code And Kit_Items_Detail.Doc_Sequence = V_Seq And Rownum <= 1;
                                Exception
                                End;
                                Begin
                                    Insert Into Assemble_Kit_Items_Det(Doc_No,
                                Exception
                                End;
                                Begin
                                Exception
                                End;
                                Begin
                                Exception
                                        Raise_Application_Error(-20012, 'Error In Insert Into Gr_Detail (Post_Assmbl_Kit_Itm)' || Chr(13) || Sqlerrm);
                                End;
                                --## Insert Into Item_Movement
                                Begin
                                                                    P_Adesc         => 'Post From Rms System ,' || ' User Id = ' || J.Ad_U_Id,
                                Exception
                                        Raise_Application_Error(-20013, 'Error In Insert Into Item_Movement (Post_Assmbl_Kit_Itm)' || Chr(13) || Sqlerrm);
                                End;
                    End; --(12)
                    Begin
                        Select Distinct F_W_Code
                          From Assemble_Kit_Items_Det
                         Where Doc_Ser = V_Doc_Ser;
                    Exception
                    End;
                        Begin
                            Update Assemble_Kit_Items
                             Where Doc_Ser = V_Doc_Ser;
                        Exception
                        End;
                        Begin
                            Update Assemble_Kit_Items
                             Where Doc_Ser = V_Doc_Ser;
                        Exception
                        End;
                    Begin
                        Select Distinct T_W_Code
                          From Assemble_Kit_Items_Det
                         Where Doc_Ser = V_Doc_Ser;
                    Exception
                    End;
                        Begin
                            Update Assemble_Kit_Items
                             Where Doc_Ser = V_Doc_Ser;
                        Exception
                        End;
                        Begin
                            Update Assemble_Kit_Items
                             Where Doc_Ser = V_Doc_Ser;
                        Exception
                        End;
                    Begin
                    Exception
                            Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20014 - Error When Updating Post In Assemble_Kit_Items  = ' || Chr(13) || 'Doc_Ser =' || V_Doc_Ser || Chr(13) || Sqlerrm || ''')');
                    End;
                --## Update Rms_Bill_Mst
                Begin
                    Update Rms_Bill_Mst
                     Where Nvl(Move_Kit_Flg, 0) = 0
                                   (Select 1
                                      From Rms_Bill_Dtl
                                     Where Rms_Bill_Dtl.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1)
                                   (Select 1
                                      From Rms_Bill_Mst_Tmp
            Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1);
                Exception
                End;
            End;
    Procedure Post_Assmbl_Kit_Itm_Cmpnnt(P_Whr       In Varchar2 Default Null,
    Begin
        If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Auto_Pst_Itm_Material From Rms_Para Where Rownum <= 1 '), 0) = 1 Then
             --# To Insert Into  Rms_Bill_Mst_Tmp Temporary Table
             Begin
             Execute Immediate  ' Insert Into Rms_Bill_Mst_Tmp (Bill_No,Bill_Srl)
                                    Select Rms_Bill_Mst.Bill_No , Rms_Bill_Mst.Bill_Srl
                                      From Rms_Bill_Mst ,Rms_Bill_Dtl ,Ias_Itm_Mst
                                     Where Rms_Bill_Mst.Bill_Srl      = Rms_Bill_Dtl.Bill_Srl
              Exception
                  Raise_Application_Error ( -20001,' Err. When Insert Into Temp Rms_Bill_Mst_Tmp Table ');
              End;
            --# To Insert Into  Rms_Minus_Qty Temporary Table
            Begin
                  Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code ,Itm_Unt,W_Code ,Expire_Date,Batch_No,P_Qty,Avl_Qty,Brn_No)
                     Select I_Code I_Code ,Itm_Unt Itm_Unt,W_Code,Expire_Date,Batch_No,P_Qty,Avl_Qty,Brn_No From(
                                     Select Rms_Bill_Cmpnnt_Dtl.Di_Code I_Code                                        ,
                                              From Rms_Bill_Mst ,Rms_Bill_Dtl,Rms_Bill_Cmpnnt_Dtl ,Ias_Itm_Mst
                                             Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
                                               And Exists(Select 1 From Rms_Bill_Mst_Tmp Where Rms_Bill_Mst_Tmp.Bill_Srl=Rms_Bill_Mst.Bill_Srl And Rownum<=1)
                                         Group By
            Exception
                Raise_Application_Error ( -20002,' Err. When Insert Into Temp Rms_Minus_Qty_Tmp Table ');
            End;
            Begin
                Rms_Sls_Kit_Itm_Qty_Prc(P_Whr => ' And M.Bill_Srl In ( Select Bill_Srl From Rms_Bill_Mst_Tmp )');
            Exception
                    Raise_Application_Error(-20002, ' Err.In Pst Kit_Itm When Insert Into Temp Rms_Minus_Qty_Tmp Table ');
            End;
            Begin
               Select 1 Into V_Cnt
                From  Rms_Minus_Stk_Qty_Tmp
                 Where Rownum <=1 ;
            Exception
               If Nvl(Ias_Gen_Pkg.Get_Cnt ('Select Use_Auto_Stk_Adjstmnt From Rms_Para Where Rownum <= 1 '),0) = 1 Then
                    Begin
                         Delete Rms_Bill_Mst_Tmp M Where Exists ( Select 1 From Rms_Bill_Cmpnnt_Dtl A,Rms_Minus_Stk_Qty_Tmp B
                                                                          Where A.Bill_Srl    = M.Bill_Srl
                    Exception When Others Then Null;
                    End;
            Begin
                Select 1
                  From Rms_Minus_Stk_Qty_Tmp
                 Where Rms_Minus_Stk_Qty_Tmp.Lvl_No <> 1 And Rownum <= 1;
            Exception
            End;
            Begin
                Select Nvl(Costing_Type, 0),
                  From Ias_Para_Inv;
            Exception
            End;
                    Select Distinct To_Date(Ias_Gen_Pkg.Get_Sysdate, 'Dd/Mm/Yyyy') Bill_Date, -- Rms_Bill_Mst.Bill_Date
                      From Rms_Bill_Mst,
                     Where Rms_Minus_Stk_Qty_Tmp.I_Code = Ias_Itm_Mst.I_Code
                                   (Select 1
                                      From Rms_Bill_Mst_Tmp
                                     Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1);
            Begin ---(11)
                    Begin
                    Exception
                    End;
                    Begin
                        Insert Into Assemble_Kit_Items(Doc_No,
                                     'Assamble Kit Item From Rms',
                    Exception
                            Raise_Application_Error(-20005, 'Err. When Insert Into Assemble_Kit_Items ' || Chr(13) || Sqlerrm);
                    End;
                    Begin
                                                     P_Desc       => 'Post From Rms System ,' || ' User Id = ' || J.Ad_U_Id,
                    Exception
                            Raise_Application_Error(-20010, 'Error When Insert Into Gr_Note In Post Post_Assmbl_Kit_Itm, ' || Chr(13) || Sqlerrm);
                    End;
                        Cursor Bd Is Select   Sum(Rms_Minus_Stk_Qty_Tmp.P_Qty)          I_Qty,
                                   From Rms_Bill_Mst,Ias_Itm_Mst,Rms_Minus_Stk_Qty_Tmp --,Rms_Bill_Dtl
                                       Where    1= 1
                                           And  Exists (Select 1 From Rms_Bill_Mst_Tmp Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl  And Rownum <=1  )
                                 Group By Rms_Minus_Stk_Qty_Tmp.I_Code ,
                                 Order By --Rms_Bill_Mst.Bill_Date,
                              Select Sum(Rms_Minus_Stk_Qty_Tmp.P_Qty) I_Qty,
                                From Ias_Itm_Mst,
                               Where 1 = 1
                                     --And  Exists (Select 1 From Rms_Bill_Mst_Tmp Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl  And Rownum <=1  )
                            Group By Rms_Minus_Stk_Qty_Tmp.I_Code,
                            Order By --Rms_Bill_Mst.Bill_Date,
                    Begin --- (12)
                            Select Ias_Doc_Seq.Nextval Into V_Seq From Dual;
                                      Select Kit_Items.Kit_Item_No,
                                        From Kit_Items,
                                       Where Kit_Items.Kit_Item_No = Rms_Minus_Stk_Qty_Tmp.I_Code And Kit_Items.Kit_Item_No = I.I_Code And Rms_Minus_Stk_Qty_Tmp.W_Code = J.W_Code And Rms_Minus_Stk_Qty_Tmp
                                    Group By Kit_Items.Kit_Item_No,
    Cursor C_Cmpnd_Itm Is Select Rms_Bill_Cmpnnt_Dtl.I_Code Kit_Item_No, Rms_Bill_Cmpnnt_Dtl.Di_Code I_Code ,
                           From Rms_Bill_Mst ,  Rms_Bill_Cmpnnt_Dtl
                            Where Rms_Bill_Mst.Bill_Srl          = Rms_Bill_Cmpnnt_Dtl.Bill_Srl
                             And  Exists (Select 1 From Rms_Bill_Mst_Tmp Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Cmpnnt_Dtl.Bill_Srl  And Rownum <=1  )
                           Group By Rms_Bill_Cmpnnt_Dtl.I_Code  , Rms_Bill_Cmpnnt_Dtl.Di_Code,
                            Begin
                                        Begin
                                        Exception
                                        End;
                                        Begin
                                            Insert Into Kit_Items_Detail(Doc_No,
                                        Exception
                                        End;
                                        Begin
                                                                            P_Adesc         => 'Post From Rms System',
                                        Exception
                                        End;
                            End;
                                            Begin
                                                Select W_Code
                                                  From Warehouse_Details
                                                 Where Nvl(Main_Wcode, 0) = 1;
                                            Exception
                                            End;
                                Begin
                                    Select W_Code
                                      From Kit_Items_Detail
                                     Where Kit_Items_Detail.Doc_Ser = V_Doc_Ser And Kit_Items_Detail.Kit_Item_No = I.I_Code And Kit_Items_Detail.Doc_Sequence = V_Seq And Rownum <= 1;
                                Exception
                                End;
                                Begin
                                    Insert Into Assemble_Kit_Items_Det(Doc_No,
                                Exception
                                End;
                                Begin
                                Exception
                                End;
                                Begin
                                Exception
                                        Raise_Application_Error(-20012, 'Error In Insert Into Gr_Detail (Post_Assmbl_Kit_Itm)' || Chr(13) || Sqlerrm);
                                End;
                                --## Insert Into Item_Movement
                                Begin
                                                                    P_Adesc         => 'Post From Rms System ,' || ' User Id = ' || J.Ad_U_Id,
                                Exception
                                        Raise_Application_Error(-20013, 'Error In Insert Into Item_Movement (Post_Assmbl_Kit_Itm)' || Chr(13) || 
                                End;
                    End; --(12)
                    Begin
                        Select Distinct F_W_Code
                          From Assemble_Kit_Items_Det
                         Where Doc_Ser = V_Doc_Ser;
                    Exception
                    End;
                        Begin
                            Update Assemble_Kit_Items
                             Where Doc_Ser = V_Doc_Ser;
                        Exception
                        End;
                        Begin
                            Update Assemble_Kit_Items
                             Where Doc_Ser = V_Doc_Ser;
                        Exception
                        End;
                    Begin
                        Select Distinct T_W_Code
                          From Assemble_Kit_Items_Det
                         Where Doc_Ser = V_Doc_Ser;
                    Exception
                    End;
                        Begin
                            Update Assemble_Kit_Items
                             Where Doc_Ser = V_Doc_Ser;
                        Exception
                        End;
                        Begin
                            Update Assemble_Kit_Items
                             Where Doc_Ser = V_Doc_Ser;
                        Exception
                        End;
                    Begin
                    Exception
                            Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''200143 - Error When Updating Post In Assemble_Kit_Items  = ' || Chr(13) || 'Doc_Ser =' || V_Doc_Ser || Chr(13) || Sqlerrm || ''')');
                    End;
            --## Update Rms_Bill_Mst
            Begin
             Update  Rms_Bill_Mst
               Where  Nvl(Move_Kit_Flg,0) = 0
                  And Exists (Select 1 From Rms_Bill_Dtl Where Rms_Bill_Dtl.Bill_Srl=Rms_Bill_Mst.Bill_Srl And Rownum<=1)
                  And Exists (Select 1 From Rms_Bill_Mst_Tmp Where Rms_Bill_Mst_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl  And Rownum <=1  ) ;
            Exception
            End;
    Procedure Insrt_Rt_Sales_Damaged_Outgng(P_Whr       In Varchar2 Default Null,
    Begin
        Begin
            Select Nvl(Item_Posting_Flag, 0),
              From Ias_Para_Inv;
        Exception
        End;
        Begin
            Select Out_Type
              From Out_Types
             Where Nvl(Out_Res, 0) = 1 And Rownum <= 1;
        Exception
        End;
        Execute Immediate ' Insert Into Rms_Rt_Bill_Mst_Tmp Select Rt_Bill_No , Rt_Bill_Srl
        From Rms_Rt_Bill_Mst 
         Where Nvl(Rms_Rt_Bill_Mst.Move_Out_Flg,0) = 0
                  Select Distinct Rms_Rt_Bill_Mst.Rt_Bill_No Out_No,
                    From Rms_Rt_Bill_Mst,
                   Where Rms_Rt_Bill_Mst.Rt_Bill_Srl = Rms_Rt_Bill_Dtl.Rt_Bill_Srl
                                 (Select 1
                                    From Rms_Rt_Bill_Mst_Tmp
                                   Where Rms_Rt_Bill_Mst_Tmp.Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum <= 1)
                --For Update Nowait
                Order By Rms_Rt_Bill_Mst.Rt_Bill_Srl;
        Begin
                Begin
                    Insert Into Ias_Outgoing_Mst_Br(Out_No,
                Exception
                End;
                        Select Rt_Bill_No Out_No,
                          From Rms_Rt_Bill_Dtl,
                         Where Rms_Rt_Bill_Dtl.I_Code = Ias_Itm_Mst.I_Code
                                       (Select 1
                                          From Rms_Rt_Bill_Mst_Tmp
                                         Where Rms_Rt_Bill_Mst_Tmp.Rt_Bill_Srl = Rms_Rt_Bill_Dtl.Rt_Bill_Srl And Rownum <= 1);
                Begin
                        Begin
                        Exception
                        End;
                        Begin
             Insert Into Ias_Outgoing_Dtl_Br(Out_No,
                        Exception
                        End;
                End;
                Begin
                    Update Rms
                     Where Rt_Bill_Srl = I_Out_Mst.Out_Ser
                                   (Select 1
                                      From Rms_Rt_Bill_Mst_Tmp
                                     Where Rms_Rt_Bill_Mst_Tmp.Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl And Rownum <= 1);
                Exception
                        Raise_Application_Error(-20013, 'Err.When Update Move_Out In Rms_Rt_Bill_Mst ' || Chr(13) || Sqlerrm);
                End;
        End;
    Procedure Insrt_Itm_Cmpnnt
            Select Distinct Rms_Bill_Mst.Bill_No,
              From Ias_Itm_Mst,
             Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl And Ias_Itm_Mst.I_Code = Rms_Bill_Dtl.I_Code And Nvl(Rms_Bill_Mst.Pst_Flg, 0) = 0 And Nvl(Ias_Itm_Mst.Kit_Itm, 0) = 1 And Nvl(Ias_Itm_Mst.Use_Auto_Pst_Rms_Data_To_Inv, 0) = 1
            Select Distinct Rms_Bill_Mst.Bill_No,
              From Ias_Itm_Mst,
             Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Cmpnnt_Dtl.Bill_Srl And Ias_Itm_Mst.I_Code = Rms_Bill_Cmpnnt_Dtl.I_Code And Nvl(Rms_Bill_Mst.Pst_Flg, 0) = 0 And Nvl(Ias_Itm_Mst.Kit_Itm, 0) = 1 And Nvl(Ias_Itm_Mst.Use_Auto_Pst_Rms_Data_To_Inv, 0) = 1;
    Begin
            Begin
                Select Out_W_Code
                  From Rms_Trmnl
                 Where Trmnl_No = I_Bills.Trmnl_No;
            Exception
            End;
                    Select Rms_Bill_Dtl.I_Code,
                      From Kit_Ite
                     Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
            Begin
                    Begin
                        Insert Into Rms_Bill_Cmpnnt_Dtl(Bill_No,
                    Exception
                    End;
            End;
    Procedure Chk_Itm_Cmpnnt
    Begin
        Begin
            Select I_Code
              From (Select Ias_Itm_Mst.I_Code I_Code
                      From Ias_Itm_Mst,
                     Where Rms_Bill_Mst.Bill_Srl = Rms_Bill_Dtl.Bill_Srl And Ias_Itm_Mst.I_Code = Rms_Bill_Dtl.I_Code And Nvl(Rms_Bill_Mst.Pst_Flg, 0) = 0 And Nvl(Ias_Itm_Mst.Kit_Itm, 0) = 1 And Nvl(Ias_Itm_Mst.Use_Auto_Pst_Rms_Data_To_Inv, 0) = 1
                    Select Kit_Item_No I_Code From Kit_Items)
             Where Rownum <= 1;
        Exception
        End;
    Procedure Clc_Sls_Itm_Tax_Mvmnt_Prc(P_Calc_Vat_Amt_Type          Ias_Para_Ar.Calc_Vat_Amt_Type%Type,
    Begin
        Insert Into Gnr_Tax_Itm_Movmnt(
              Select P_Doc_No,
                From Rms_Tax_Itm_Movmnt Tax_Mov,
               Where M.Bill_Srl = Tax_Mov.Doc_Ser
                     And Exists (Select 1
                                   From Rms_Pst_Srl
                                  Where Pst_Srl = M.Bill_Srl)
            Group By Tax_Mov.Doc_Type,
    Exception
    Procedure Clc_Sls_Inpt_Tax_Mvmnt_Prc(P_Calc_Vat_Amt_Type       In Ias_Para_Ar.Calc_Vat_Amt_Type%Type,
    Begin
        Insert Into Gnr_Tax_Inpt_Movmnt(Doc_Type,
              Select Tax_Mov.Doc_Type,
                From Rms_Tax_Inpt_Movmnt Tax_Mov,
               Where M.Bill_Srl = Tax_Mov.Doc_Ser
                     And Exists (Select 1
                                   From Rms_Pst_Srl
                                  Where Pst_Srl = M.Bill_Srl)
            Group By Tax_Mov.Doc_Date,
    Exception
    Procedure Clc_Rt_Sls_Itm_Tax_Mvmnt_Prc(P_Calc_Vat_Amt_Type          Ias_Para_Ar.Calc_Vat_Amt_Type%Type,
    Begin
        Insert Into Gnr_Tax_Itm_M
              Select P_Doc_No,
                From Rms_Tax_Itm_Movmnt Tax_Mov,
               Where M.Rt_Bill_Srl = Tax_Mov.Doc_Ser
                 And Exists (Select 1
                               From Rms_Pst_Srl
                              Where Pst_Srl = M.Rt_Bill_Srl)
            Group By Tax_Mov.Doc_Type,
    Exception
    Procedure Clc_Rt_Sls_Inpt_Tax_Mvmnt_Prc(P_Calc_Vat_Amt_Type       In Ias_Para_Ar.Calc_Vat_Amt_Type%Type,
    Begin
        Insert Into Gnr_Tax_Inpt_Movmnt(Doc_Type,
              Select Tax_Mov.Doc_Type,
                From Rms_Tax_Inpt_Movmnt Tax_Mov,
               Where M.Rt_Bill_Srl = Tax_Mov.Doc_Ser
                 And Exists (Select 1
                               From Rms_Pst_Srl
                              Where Pst_Srl = M.Rt_Bill_Srl)
            Group By Tax_Mov.Doc_Date,
    Exception
Procedure Post_Outgoing_Itm_Cmpnnt (  P_Doc_Ser   In Ias_Outgoing_Mst.Out_Ser%Type Default Null ,
    Begin
            Begin
                Select Lang_No
                  From Ias_Sys.Lang_Def
                 Where Nvl(Flg_St, 1) = 1 And Lang_Dflt = 1 And Rownum <= 1;
            Exception
            End;
        Begin
            Select Nvl(Costing_Type, 0)    ,
              From Ias_Para_Inv;
        Exception
                Raise_Application_Error(-20001, 'Error When Select From Para In Post_Outgoing ' || Chr(13) || Sqlerrm);
        End;
        Begin
            Select Allow_Enter_Zero_Cost
              From Privilege_Fixed
             Where U_Id = P_User_No And Rownum <= 1;
        Exception
                Raise_Application_Error(-20002, 'Error When Select From Privilege_Fixed In Post_Outgoing' || Chr(13) || Sqlerrm);
        End;
        --## To Insert Into Temporary Table        
        Begin
            Insert Into Ias_Outgoing_Mst_Br_Tmp( Out_No  ,
                Select Distinct M.Bill_No,
                  From Rms_Bill_Mst M , Rms_Bill_Dtl D 
                 Where M.Bill_Srl             = D.Bill_Srl
        Exception 
        --## To Insert Into  Rms_Minus_Stk_Qty Temporary Table
        Begin       
        Exception
        Begin
            Select 1
              From Rms_Minus_Stk_Qty_Tmp
             Where Rownum <= 1;
        Exception
        End;
            If Nvl(Ias_Gen_Pkg.Get_Cnt('Select Use_Auto_Stk_Adjstmnt From Rms_Para Where Rownum <= 1 '), 0) = 1 Then
                      Select Distinct Brn_No , W_Code
                        From Rms_Minus_Stk_Qty_Tmp
                    Order By Brn_No , W_Code ;
           Begin ---(11)            
                        Begin
                            Select Brn_Year,
                              From S_Brn
                             Where Brn_No = I_Brn.Brn_No;
                        Exception
                    Begin
                        Select Min(Out_Type)
                          From Out_Types
                         Where Nvl(Out_Res,0) = 1 
                    Exception
                    End;
                    Begin
                    Exception
                    End;
                    Begin
                        Select Rms_Ac_Code_Ready_Itm_Food
                          From Interface_Acc
                         Where Brn_No = I_Brn.Brn_No And Rownum <= 1;
                    Exception
                    End;
                Begin
                    Insert Into Ias_Outgoing_Mst(Out_No,
                Exception
                        Raise_Application_Error(-20011, 'Error When Insert Into Ias_Outgoing_Mst ' || Chr(13) || Sqlerrm);
                End;
                                 Select D.I_Code I_Code ,
   From Ias_Itm_Mst M, Rms_Minus_Stk_Qty_Tmp D
Where M.I_Code             = D.I_Code 
                           Group By D.I_Code,D.Itm_Unt,D.W_Code,D.Expire_Date,D.Batch_No
                               Order By D.W_Code,D.I_Code  ;
                Begin --- (12)
                        Begin
                        Exception
                        End;
                        Select Ias_Doc_Seq.Nextval Into V_Seq From Dual ;
                        Begin
                            Insert Into Ias_Outgoing_Dtl(Out_No,
                        Exception
                        End;
                            Begin
                            Exception
                            End;
                End; --(12)
                Begin
                Exception
                        Rms_Gnr_Pkg.Execute_Prgma_Prc('Insert Into Rms_Trc_Pst_Err(Err_Txt) Values (''20010 - Error When Updating Post In Outgoing  = ' || Chr(13) || 'Out_Ser =' || V_Doc_Srl || Chr(13) || Sqlerrm || ''')');
                End;
            --## Update Rms_Bill_Mst
            Begin
                Update Rms_Bill_Mst M
                 Where     Nvl(M.Paid_Flg, 0)     = 1
                               (Select 1
                                  From Ias_Outgoing_Mst_Br_Tmp
                                 Where Ias_Outgoing_Mst_Br_Tmp.Out_Ser = M.Bill_Srl And Rownum <= 1);
            Exception
                    Raise_Application_Error(-20015, 'Error When Update Move_Out_Flg In Rms_Bill_Mst ');
            End;
        End;
CREATE OR REPLACE Package Rms_Dstrbtd_Db_Pkg Is
  Procedure Insrt_Call_Cntr_Cstmr_Ordr    (P_Ordr_Srl In Number , P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Insrt_Cstmr_Ordr              (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Insrt_Invoice              (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Insrt_Rt_Invoice           (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Insrt_Rms_Trmnl            (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2,P_Br_No Number);
  Procedure Chk_Invoice_Mst_Diff       (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Chk_Invoice_Dtl_Diff       (P_Schema_Nm In Varchar2);
  Procedure Insrt_Invoice_Mst_Diff     (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Insrt_Invoice_Dtl_Diff     (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Chk_Rt_Invoice_Mst_Diff    (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Chk_Rt_Invoice_Dtl_Diff    (P_Schema_Nm In Varchar2);
  Procedure Insrt_Rt_Invoice_Mst_Diff  (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Insrt_Rt_Invoice_Dtl_Diff  (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Upd_Trmnl_Info_Main_To_Sub (P_Schema_Nm In Varchar2);  
  Procedure Move_Cashier_Deposit       (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Move_Gnr_Expns             (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Move_Gnr_Rcpts             (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Move_Insrnc_Tools          (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Move_Rtrn_Insrnc_Tools     (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
  Procedure Get_Price_From_Invoice (  P_Sqlstr       In   Varchar2     ,
 Procedure Move_Invstor_Tickets (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) ;                                         
CREATE OR REPLACE Package Body Rms_Dstrbtd_Db_Pkg Is
    Begin
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Cstmr_Ordr_Mst@'||P_Db_Link||'(
                        Select     
                         From Rms_Cstmr_Ordr_Mst 
                           Where Ordr_Srl = '||P_Ordr_Srl||' 
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Cstmr_Ordr_Dtl@'||P_Db_Link||'(
                          Select                                                                                                          
                           From Rms_Cstmr_Ordr_Dtl 
                             Where Rms_Cstmr_Ordr_Dtl.Ordr_Srl = '||P_Ordr_Srl||'  
                              And  Exists (Select 1 From  Rms_Cstmr_Ordr_Mst
                                             Where Rms_Cstmr_Ordr_Dtl.Ordr_Srl = Rms_Cstmr_Ordr_Mst.Ordr_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Cstmr_Ordr_Cmpnnt_Dtl@'||P_Db_Link||'(
               Select                                                 
             From Rms_Cstmr_Ordr_Cmpnnt_Dtl
                 Where Rms_Cstmr_Ordr_Cmpnnt_Dtl.Ordr_Srl = '||P_Ordr_Srl||'  
                     And Exists(Select 1 
                                From  Rms_Cstmr_Ordr_Mst
                                 Where  Rms_Cstmr_Ordr_Mst.Ordr_Srl = Rms_Cstmr_Ordr_Cmpnnt_Dtl.Ordr_Srl
      Execute Immediate  'Update Rms_Cstmr_Ordr_Mst
                            Where Nvl(Extrnl_Pst,0) = 0
    Exception
Procedure Insrt_Cstmr_Ordr (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is
    Begin
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Cstmr_Ordr_Mst@'||P_Db_Link||'(
                        Select     
                         From Rms_Cstmr_Ordr_Mst 
                           Where  Nvl(Extrnl_Pst,0) = 0 
                             And Exists (Select 1 From Rms_Cstmr_Ordr_Tmp
                             Where Rms_Cstmr_Ordr_Tmp.Ordr_Srl = Rms_Cstmr_Ordr_Mst.Ordr_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Cstmr_Ordr_Dtl@'||P_Db_Link||'(
                          Select                                                                                                          
                           From Rms_Cstmr_Ordr_Dtl 
                             Where Exists (Select 1 From  Rms_Cstmr_Ordr_Mst
                                             Where Rms_Cstmr_Ordr_Dtl.Ordr_Srl = Rms_Cstmr_Ordr_Mst.Ordr_Srl
                              And Exists (Select 1 From Rms_Cstmr_Ordr_Tmp
                                Where Rms_Cstmr_Ordr_Tmp.Ordr_Srl = Rms_Cstmr_Ordr_Dtl.Ordr_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Cstmr_Ordr_Cmpnnt_Dtl@'||P_Db_Link||'(
               Select                                                 
             From Rms_Cstmr_Ordr_Cmpnnt_Dtl
                 Where Exists(Select 1 
                                From  Rms_Cstmr_Ordr_Mst
                                 Where  Rms_Cstmr_Ordr_Mst.Ordr_Srl = Rms_Cstmr_Ordr_Cmpnnt_Dtl.Ordr_Srl
                   And Exists ( Select 1 From Rms_Cstmr_Ordr_Tmp
                                 Where Rms_Cstmr_Ordr_Tmp.Ordr_Srl = Rms_Cstmr_Ordr_Cmpnnt_Dtl.Ordr_Srl
      Execute Immediate  'Update Rms_Cstmr_Ordr_Mst
                            Where Nvl(Extrnl_Pst,0) = 0
                             And Exists (Select 1 From Rms_Cstmr_Ordr_Tmp
                                           Where Rms_Cstmr_Ordr_Tmp.Ordr_Srl = Rms_Cstmr_Ordr_Mst.Ordr_Srl
    Exception
  Procedure Insrt_Invoice (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is  
    Begin
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Bill_Mst@'||P_Db_Link||'(
       Select  Bill_No, Bill_Srl, Bill_Date, 
             From Rms_Bill_Mst 
              Where Nvl(Pst_Flg,0)      = 0
                And Exists (Select 1 From Rms_Bill_Tmp
                             Where Rms_Bill_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Bill_Dtl@'||P_Db_Link||'(
               Select          Bill_No, Bill_Srl, I_Code, 
                  From  Rms_Bill_Dtl
                    Where Exists ( Select 1 From Rms_Bill_Mst
                                     Where Rms_Bill_Dtl.Bill_Srl = Rms_Bill_Mst.Bill_Srl
                      And Exists (Select 1 From Rms_Bill_Tmp
                                    Where Rms_Bill_Tmp.Bill_Srl = Rms_Bill_Dtl.Bill_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Bill_Cmpnnt_Dtl@'||P_Db_Link||'(
        Select Bill_No, Bill_Srl, I_Code, 
              From Rms_Bill_Cmpnnt_Dtl
                 Where Exists(Select 1 
                                From  Rms_Bill_Mst
                                 Where  Rms_Bill_Mst.Bill_Srl = Rms_Bill_Cmpnnt_Dtl.Bill_Srl
                  And Exists ( Select 1 From Rms_Bill_Tmp
                                Where Rms_Bill_Tmp.Bill_Srl = Rms_Bill_Cmpnnt_Dtl.Bill_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Bill_Srvc@'||P_Db_Link||'(
        Select Srvc_No, Srvc_Dsc, Srvc_Prcnt, 
              From Rms_Bill_Srvc
                 Where Exists(Select 1 
                                From  Rms_Bill_Mst
                                 Where  Rms_Bill_Mst.Bill_Srl = Rms_Bill_Srvc.Bill_Srl
                  And Exists ( Select 1 From Rms_Bill_Tmp
                                Where Rms_Bill_Tmp.Bill_Srl = Rms_Bill_Srvc.Bill_Srl
        Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Tax_Itm_Movmnt@'||P_Db_Link||'(
            Select Doc_Type, Bill_Doc_Type, Doc_Jv_Type, Doc_No, Doc_Ser, Doc_Date,
            From   Rms_Tax_Itm_Movmnt
            Where Doc_Type=4 And Exists ( Select 1 From Rms_Bill_Mst
                                            Where  Rms_Bill_Mst.Bill_Srl = Rms_Tax_Itm_Movmnt.Doc_Ser
             And Exists (Select 1 From Rms_Bill_Tmp
                          Where Rms_Bill_Tmp
        Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Tax_Inpt_Movmnt@'||P_Db_Link||'(Batch_No, Brn_Usr, Brn_Year, 
            Select Batch_No, Brn_Usr, Brn_Year, 
            From   Rms_Tax_Inpt_Movmnt
            Where Doc_Type=4 And Exists ( Select 1 From Rms_Bill_Mst
                                            Where  Rms_Bill_Mst.Bill_Srl = Rms_Tax_Inpt_Movmnt.Doc_Ser
             And Exists (Select 1 From Rms_Bill_Tmp
                          Where Rms_Bill_Tmp.Bill_Srl = Rms_Tax_Inpt_Movmnt.Doc_Ser
        Execute Immediate 'Insert Into '||P_Schema_Nm||'.IAS_POINT_CALC_TRNS@'||P_Db_Link||'(A_Cy, Ac_Rate, Ad_Date, Ad_U_Id,
    Select A_Cy, Ac_Rate, Ad_Date, Ad_U_Id,
      From Ias_Point_Calc_Trns
     Where Doc_Typ = 1
       And Exists (Select 1 From Rms_Bill_Tmp
                          Where Rms_Bill_Tmp.Bill_Srl = Ias_Point_Calc_Trns.Doc_Srl
      Execute Immediate  'Update Rms_Bill_Mst
                            Where Nvl(Pst_Flg,0)      = 0
                              And Exists (Select 1 From Rms_Bill_Tmp
                                            Where Rms_Bill_Tmp.Bill_Srl = Rms_Bill_Mst.Bill_Srl
       Execute Immediate  'Update Rms_Tax_Itm_Movmnt
    Where Doc_Type       = 4                             
      And Exists (Select 1 From Rms_Bill_Tmp
                    Where Rms_Bill_Tmp.Bill_Srl = Rms_Tax_Itm_Movmnt.Doc_Ser
    Exception
  Procedure Insrt_Rt_Invoice (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is
    Begin
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Rt_Bill_Mst@'||P_Db_Link||'(
                        Select     Rt_Bill_No, Rt_Bill_Srl, Rt_Bill_Date, 
                         From Rms_Rt_Bill_Mst 
                           Where  Nvl(Pst_Flg,0) = 0 
                             And Exists (Select 1 From Rms_Rt_Bill_Tmp
                             Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Rt_Bill_Dtl@'||P_Db_Link||'(
     Select  Rt_Bill_No, Rt_Bill_Srl, I_Code, 
                           From Rms_Rt_Bill_Dtl 
                             Where Exists (Select 1 From  Rms_Rt_Bill_Mst
          Where Rms_Rt_Bill_Dtl.Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl
                              And Exists (Select 1 From Rms_Rt_Bill_Tmp
                                Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Rms_Rt_Bill_Dtl.Rt_Bill_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Rt_Bill_Cmpnnt_Dtl@'||P_Db_Link||'(
               Select  Rt_Bill_No, Rt_Bill_Srl, I_Code, 
             From Rms_Rt_Bill_Cmpnnt_Dtl
                 Where Exists(Select 1 
                                From  Rms_Rt_Bill_Mst
                                 Where  Rms_Rt_Bill_Mst.Rt_Bill_Srl = Rms_Rt_Bill_Cmpnnt_Dtl.Rt_Bill_Srl
                   And Exists ( Select 1 From Rms_Rt_Bill_Tmp
                                 Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Rms_Rt_Bill_Cmpnnt_Dtl.Rt_Bill_Srl
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Rt_Bill_Srvc@'||P_Db_Link||'(
                        Select   Srvc_No, Srvc_Dsc, Srvc_Prcnt, 
             From Rms_Rt_Bill_Srvc
                 Where Exists(Select 1 
                                From  Rms_Rt_Bill_Mst
                                 Where  Rms_Rt_Bill_Mst.Rt_Bill_Srl = Rms_Rt_Bill_Srvc.Rt_Bill_Srl
                   And Exists ( Select 1 From Rms_Rt_Bill_Tmp
                                 Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Rms_Rt_Bill_Srvc.Rt_Bill_Srl
        Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Tax_Itm_Movmnt@'||P_Db_Link||'(
            Select Doc_Type, Bill_Doc_Type, Doc_Jv_Type, Doc_No, Doc_Ser, Doc_Date,
            From   Rms_Tax_Itm_Movmnt
            Where Doc_Type=5 And Exists ( Select 1 From Rms_Rt_Bill_Mst
                                            Where  Rms_Rt_Bill_Mst.Rt_Bill_Srl = Rms_Tax_Itm_Movmnt.Doc_Ser
             And Exists (Select 1 From Rms_Rt_Bill_Tmp
                          Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Rms_Tax_Itm_Movmnt.Doc_Ser
        Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Tax_Inpt_Movmnt@'||P_Db_Link||'(Batch_No, Brn_Usr, Brn_Year, 
            Select Batch_No, Brn_Usr, Brn_Year, 
            From   Rms_Tax_Inpt_Movmnt
            Where Doc_Type=5 And Exists ( Select 1 From Rms_Rt_Bill_Mst
                                            Where  Rms_Rt_Bill_Mst.Rt_Bill_Srl = Rms_Tax_Inpt_Movmnt.Doc_Ser
             And Exists (Select 1 From Rms_Rt_Bill_Tmp
                          Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Rms_Tax_Inpt_Movmnt.Doc_Ser
        Execute Immediate 'Insert Into '||P_Schema_Nm||'.IAS_POINT_CALC_TRNS@'||P_Db_Link||'(A_Cy, Ac_Rate, Ad_Date, Ad_U_Id,
    Select A_Cy, Ac_Rate, Ad_Date, Ad_U_Id,
      From Ias_Point_Calc_Trns
     Where Doc_Typ = 3
       And Exists (Select 1 From Rms_Rt_Bill_Tmp
                          Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Ias_Point_Calc_Trns.Doc_Srl
      Execute Immediate  'Update Rms_Rt_Bill_Mst
                            Where Nvl(Pst_Flg,0) = 0
                             And Exists (Select 1 From Rms_Rt_Bill_Tmp
                                           Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Rms_Rt_Bill_Mst.Rt_Bill_Srl
      Execute Immediate  'Update Rms_Tax_Itm_Movmnt
    Where Doc_Type       = 5                             
      And Exists (Select 1 From Rms_Rt_Bill_Tmp
                    Where Rms_Rt_Bill_Tmp.Rt_Bill_Srl = Rms_Tax_Itm_Movmnt.Doc_Ser
    Exception
  Procedure Insrt_Rms_Trmnl (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2,P_Br_No Number)  Is
    Begin
      Execute Immediate ' Insert Into Rms_Trmnl(  Trmnl_No, Trmnl_Nm, Ip_Address, 
                            Select Trmnl_No, Trmnl_Nm, Ip_Address, 
                           From '||P_Schema_Nm ||'.Rms_Trmnl@'||P_Db_Link||'
                            Where Def_Brn_No= '||P_Br_No||' And  Trmnl_No Not In ( Select Trmnl_No From Rms_Trmnl ) ' ;
    Exception
  Procedure Chk_Invoice_Mst_Diff(P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is
    Begin
      Execute Immediate ' Insert Into Rms_Bill_Mst_Diff(  Bill_No, Bill_Srl, Bill_Date, 
                                                 Select    Bill_No, Bill_Srl, Bill_Date, 
                           From  Rms_Hst_Bill_Mst   
                              Where Bill_Srl In
                               (Select Bill_Srl From Rms_Hst_Bill_Mst
                                Select Bill_Srl F
    Exception
  Procedure Chk_Invoice_Dtl_Diff(P_Schema_Nm In Varchar2) Is
    Begin  
      Execute Immediate  'Insert Into Rms_Bill_Dtl_Diff( Bill_No, Bill_Srl, I_Code, 
                            Select Bill_No, Bill_Srl, I_Code, 
                            From  Rms_Hst_Bill_Dtl 
                             Where Exists (Select 1 From Rms_Bill_Mst_Diff
                                            Where Rms_Bill_Mst_Diff.Bill_Srl = Rms_Hst_Bill_Dtl.Bill_Srl 
    Exception
  Procedure Insrt_Invoice_Mst_Diff(P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is
    Begin  
      Execute Immediate  'Insert Into '||P_Schema_Nm||'.RMS_bill_mst@'||P_Db_Link||'(
                    Select Bill_No, Bill_Srl, Bill_Date, 
                     From   Rms_Bill_Mst_Diff ';
    Exception
  Procedure Insrt_Invoice_Dtl_Diff     (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is  
    Begin  
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Bill_Dtl@'||P_Db_Link||'(
                         Select Bill_No, Bill_Srl, I_Code, 
                           From Rms_Bill_Dtl_Diff ';
    Exception
  Procedure Chk_Rt_Invoice_Mst_Diff(P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is  
    Begin 
      Execute Immediate' Insert Into Rms_Rt_Bill_Mst_Diff(
                      Select   Rt_Bill_No, Rt_Bill_Srl, Rt_Bill_Date, 
                       From  Rms_Hst_Rt_Bill_Mst   
                    Where Rt_Bill_No In(Select Rt_Bill_Srl From Rms_Hst_Rt_Bill_Mst
                                            Select Rt_Bill_Srl From '||P_Schema_Nm||'.Rms_Rt_Bill_Mst@'||P_Db_Link||' ) ';      
    Exception
  Procedure Chk_Rt_Invoice_Dtl_Diff     (P_Schema_Nm In Varchar2)  Is  
    Begin  
      Execute Immediate 'Insert Into Rms_Rt_Bill_Dtl_Diff(
                        From  Rms_Hst_Rt_Bill_Dtl
                             Where Exists (Select 1 From Rms_Rt_Bill_Mst_Diff
                                            Where Rms_Rt_Bill_Mst_Diff.Rt_Bill_Srl = Rms_Hst_Rt_Bill_Dtl.Rt_Bill_Srl 
    Exception
  Procedure Insrt_Rt_Invoice_Mst_Diff  (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2)  Is  
    Begin  
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Rt_Bill_Mst@'||P_Db_Link||'(
                            Select Rt_Bill_No, Rt_Bill_Srl, Rt_Bill_Date, 
                                From  Rms_Rt_Bill_Mst_Diff ';
    Exception
  Procedure Insrt_Rt_Invoice_Dtl_Diff  (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2 ) Is  
    Begin  
      Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Rt_Bill_Dtl@'||P_Db_Link||'(
                        Select Rt_Bill_No, Rt_Bill_Srl, I_Code, 
                          From Rms_Rt_Bill_Dtl_Diff';
    Exception
Procedure Upd_Trmnl_Info_Main_To_Sub(P_Schema_Nm In Varchar2) Is
 Begin
      Execute  Immediate ' Update Rms_Trmnl Q_Outer
                             Set  Def_Wcode =( Select Def_Wcode 
                                                From '||P_Schema_Nm ||'.Rms_Trmnl@Onyx.Onyx.Com
                                                 Where Trmnl_No = Q_Outer.Trmnl_No ),
                                  Out_W_Code =( Select Out_W_Code 
     From '||P_Schema_Nm ||'.Rms_Trmnl@Onyx.Onyx.Com
                                                 Where Trmnl_No = Q_Outer.Trmnl_No ),                                                 
                                  Trmnl_Nm  =( Select Trmnl_Nm 
                                                 From '||P_Schema_Nm ||'.Rms_Trmnl@Onyx.Onyx.Com
                                                  Where Trmnl_No = Q_Outer.Trmnl_No ),
                                  Cc_Code =( Select Cc_Code 
                                              From '||P_Schema_Nm ||'.Rms_Trmnl@Onyx.Onyx.Com
                                               Where Trmnl_No = Q_Outer.Trmnl_No ),
                                  Drawer_Port=( Select Drawer_Port 
                                                 From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                                  Where Trmnl_No = Q_Outer.Trmnl_No ) ,
                                  Lcd_Port=( Select Lcd_Port 
                                              From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                               Where Trmnl_No = Q_Outer.Trmnl_No ),
                                  Inactive=( Select Inactive 
                                              From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                               Where Trmnl_No = Q_Outer.Trmnl_No ),
                                  Price_Lvl=( Select Price_Lvl 
                                                From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                                 Where Trmnl_No = Q_Outer.Trmnl_No ),
                                  Use_Vat=( Select Use_Vat
                                             From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                              Where Trmnl_No = Q_Outer.Trmnl_No ),
                              Ip_Address=( Select Ip_Address 
                                            From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                             Where Trmnl_No = Q_Outer.Trmnl_No ),
                              Rtrn_Prd=( Select Rtrn_Prd 
                                               From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                                Where Trmnl_No = Q_Outer.Trmnl_No ),
                              Chng_Prd=( Select Chng_Prd 
                                               From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                                 Where Trmnl_No = Q_Outer.Trmnl_No ) ,
                              Move_Data_To_Db_Link=( Select Move_Data_To_Db_Link 
                                               From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                                 Where Trmnl_No = Q_Outer.Trmnl_No ) ,                                                 
                              Smpl_Rprt_Dflt =( Select Smpl_Rprt_Dflt 
                                               From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                                 Where Trmnl_No = Q_Outer.Trmnl_No ) ,
                              Curr_Dflt =( Select Curr_Dflt 
                                               From '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                                 Where Trmnl_No = Q_Outer.Trmnl_No )  
                          Where Exists ( Select 1 
                                          From  '||P_Schema_Nm ||'.RMS_TRMNL@Onyx.Onyx.Com
                                           Where Trmnl_No = Q_Outer.Trmnl_No
 Exception
Procedure Move_Cashier_Deposit(P_Schema_Nm In Varchar2,P_Db_Link
     Cursor C_Cashier_Deposit_Mst Is Select Doc_No, Doc_Srl,Cshr_No, 
                                  From Rms_Dpst_Csh_Mst
                                    Where Nvl(Extrnl_Pst,0)=0 And Exists(Select 1 From Rms_Dpst_Currency_Tmp
                                                  Where Rms_Dpst_Currency_Tmp.Doc_Srl =  Rms_Dpst_Csh_Mst.Doc_Srl)
                                   Order By Ad_U_Id,Extrnl_Pst,Doc_No ;   
 Begin
        Begin
         Execute Immediate ' Select 1 From '||P_Schema_Nm||'.Rms_Dpst_Csh_Mst@'||P_Db_Link||' 
            Where Doc_Srl ='|| I.Doc_Srl 
        Exception
          Raise_Application_Error(-20001,'Error When Read Cashier Deposit Data From Headoffice'||Chr(13)||Sqlerrm);
                From '||P_Schema_Nm||'.Rms_Dpst_Csh_Mst@'||P_Db_Link||'
                 Where Brn_No     = '||I.Brn_No    ||'
        Begin
          Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Dpst_Csh_Mst@'||P_Db_Link||'(
                              Select '||V_Doc_No||', '||V_Doc_Srl||',Doc_Dsc, 
                                 From Rms_Dpst_Csh_Mst
                                   Where  Doc_No   = '||I.Doc_No ||' 
        Exception
            Raise_Application_Error(-20002,'Error When Insert Into Rms_Dpst_Csh_Mst'||Chr(13)||Sqlerrm);   
       Begin 
           Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Dpst_Csh_Dtl@'||P_Db_Link||'(
                               Select  '||V_Doc_No||', '||V_Doc_Srl||', A_Cy, 
                                 From Rms_Dpst_Csh_Dtl
                                  Where Doc_No   = '||I.Doc_No||' 
       Exception
         Raise_Application_Error(-20003,'Error When Insert Into Rms_Dpst_Csh_Dtl'||Chr(13)||Sqlerrm);
       Begin 
           Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Dpst_Crdt_Crd@'||P_Db_Link||'(
                               Select  '||V_Doc_No||', '||V_Doc_Srl||' , Cr_Card_No, 
                                 From Rms_Dpst_Crdt_Crd
                                  Where Doc_No   = '||I.Doc_No||' 
       Exception
         Raise_Application_Error(-20004,'Error When Insert Into Rms_Dpst_Crdt_Crd'||Chr(13)||Sqlerrm);
    Begin
       Update Rms_Dpst_Csh_Mst
          Where Exists(Select 1 From Rms_Dpst_Currency_Tmp
                        Where Rms_Dpst_Currency_Tmp.Doc_Srl = Rms_Dpst_Csh_Mst.Doc_Srl) ;
    Exception
       Raise_Application_Error(-20005,'Error When Update  External_Post In Rms_Dpst_Csh_Mst'||Chr(13)||Sqlerrm); 
  Procedure Move_Gnr_Expns (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is
     Cursor C_Rms_Gnr_Expns  Is Select   Doc_No, Doc_Srl, Doc_Date, 
                                  From Rms_Gnr_Expns
                                    Where Nvl(Extrnl_Pst,0)=0 And Exists(Select 1 From Rms_Gnr_Expns_Tmp
                                                  Where Rms_Gnr_Expns_Tmp.Doc_Srl =  Rms_Gnr_Expns.Doc_Srl)
                                   Order By Ad_U_Id,Extrnl_Pst,Doc_No ;   
 Begin
        Begin
         Execute Immediate ' Select 1 From '||P_Schema_Nm||'.Rms_Gnr_Expns@'||P_Db_Link||' 
            Where Doc_Srl ='|| I.Doc_Srl 
        Exception
          Raise_Application_Error(-20001,'Error When Read Rms_Gnr_Expns Data From Headoffice'||Chr(13)||SqlErrm);
           Execute Immediate ' Select Nvl(Max(Doc_No),0) + 1
                From '||P_Schema_Nm||'.Rms_Gnr_Expns@'||P_Db_Link||'
                 Where Brn_No     = '||I.Brn_No    ||'
        Begin
          Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Gnr_Expns@'||P_Db_Link||'(
                              Select     '||V_Doc_No||', '||V_Doc_Srl||', Doc_Date, 
                                 From Rms_Gnr_Expns
                                   Where  Doc_No   = '||I.Doc_No ||' 
        Exception
            Raise_Application_Error(-20002,'Error When Insert Into Rms_Gnr_Expns '||Chr(13)||Sqlerrm);   
    Begin
       Update Rms_Gnr_Expns
          Where Exists(Select 1 From Rms_Gnr_Expns_Tmp
                        Where Rms_Gnr_Expns_Tmp.Doc_Srl = Rms_Gnr_Expns.Doc_Srl) ;
    Exception
       Raise_Application_Error(-20003,'Error When Update  External_Post In Rms_Gnr_Expns'||Chr(13)||Sqlerrm); 
  Procedure Move_Gnr_Rcpts (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is
     Cursor C_Rms_Gnr_Rcpts  Is Select   Doc_No, Doc_Srl, Doc_Date, 
                                  From Rms_Gnr_Rcpts
                                    Where Nvl(Extrnl_Pst,0)=0 And Exists(Select 1 From Rms_Gnr_Rcpts_Tmp
                                                  Where Rms_Gnr_Rcpts_Tmp.Doc_Srl =  Rms_Gnr_Rcpts.Doc_Srl)
                                   Order By Ad_U_Id,Extrnl_Pst,Doc_No ;   
 Begin
        Begin
         Execute Immediate ' Select 1 From '||P_Schema_Nm||'.Rms_Gnr_Rcpts@'||P_Db_Link||' 
            Where Doc_Srl ='|| I.Doc_Srl 
        Exception
          Raise_Application_Error(-20001,'Error When Read Rms_Gnr_Rcpts Data From Headoffice'||Chr(13)||SqlErrm);
           Execute Immediate ' Select Nvl(Max(Doc_No),0) + 1
                From '||P_Schema_Nm||'.Rms_Gnr_Rcpts@'||P_Db_Link||'
                 Where Brn_No     = '||I.Brn_No    ||'
        Begin
          Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Gnr_Rcpts
                              Select     '||V_Doc_No||', '||V_Doc_Srl||', Doc_Date, 
                                 From Rms_Gnr_Rcpts
                                   Where  Doc_No   = '||I.Doc_No ||' 
        Exception
            Raise_Application_Error(-20002,'Error When Insert Into Rms_Gnr_Rcpts '||Chr(13)||Sqlerrm);   
    Begin
       Update Rms_Gnr_Rcpts
          Where Exists(Select 1 From Rms_Gnr_Rcpts_Tmp
                        Where Rms_Gnr_Rcpts_Tmp.Doc_Srl = Rms_Gnr_Rcpts.Doc_Srl) ;
    Exception
       Raise_Application_Error(-20003,'Error When Update  External_Post I
 Procedure Move_Insrnc_Tools  (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is   
 Begin       
        Begin
          Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Insurnc_Mst@'||P_Db_Link||'(
                              Select Doc_No ,  Doc_Srl , Doc_Date, 
                                 From Rms_Insurnc_Mst
                                    Where Nvl(Rms_Insurnc_Mst.Paid_Flg,0)    = 1
                                      And Exists(Select 1 From Rms_Insurnc_Mst_Tmp
                                                  Where Rms_Insurnc_Mst_Tmp.Doc_Srl =  Rms_Insurnc_Mst.Doc_Srl 
        Exception
            Raise_Application_Error(-20002,'Error When Insert Into Rms_Insurnc_Mst'||Chr(13)||Sqlerrm);   
       Begin 
           Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Insurnc_Dtl@'||P_Db_Link||'(
                               Select  Doc_No , Doc_Srl , Rcrd_No, 
                                 From Rms_Insurnc_Dtl 
                                 Where  Exists ( Select 1 From Rms_Insurnc_Mst
                                                  Where Rms_Insurnc_Mst.Doc_Srl          = Rms_Insurnc_Dtl.Doc_Srl
                                   And  Exists(Select 1 From Rms_Insurnc_Mst_Tmp
                                                  Where Rms_Insurnc_Mst_Tmp.Doc_Srl =  Rms_Insurnc_Dtl.Doc_Srl
       Exception
         Raise_Application_Error(-20003,'Error When Insert Into Rms_Insurnc_Dtl'||Chr(13)||Sqlerrm);
       Begin
          Update Rms_Insurnc_Mst
            Where Nvl(Rms_Insurnc_Mst.Paid_Flg,0)   = 1
              And Exists(Select 1 From Rms_Insurnc_Mst_Tmp
                          Where Rms_Insurnc_Mst_Tmp.Doc_Srl = Rms_Insurnc_Mst.Doc_Srl
       Exception
           Raise_Application_Error(-20004,'Error When Update  External_Post In Rms_Insurnc_Mst'||Chr(13)||Sqlerrm); 
  Procedure Move_Rtrn_Insrnc_Tools     (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is
     Cursor C_Rms_Rt_Insurnc_Mst Is Select   Doc_No, Doc_Srl, Doc_Date, 
                                  From Rms_Rt_Insurnc_Mst
                                    Where Nvl(Extrnl_Pst,0)=0 And Exists(Select 1 From Rms_Rt_Insurnc_Mst_Tmp
                                                  Where Rms_Rt_Insurnc_Mst_Tmp.Doc_Srl =  Rms_Rt_Insurnc_Mst.Doc_Srl)
                                   Order By Ad_U_Id,Extrnl_Pst,Doc_No ;   
 Begin
        Begin
         Execute Immediate ' Select 1 From '||P_Schema_Nm||'.Rms_Rt_Insurnc_Mst@'||P_Db_Link||' 
            Where Doc_Srl ='|| I.Doc_Srl 
        Exception
          Raise_Application_Error(-20001,'Error When Read Rms_Rt_Insurnc_Mst Data From Headoffice'||Chr(13)||Sqlerrm);
           Execute Immediate ' Select Nvl(Max(Doc_No),0) + 1
                From '||P_Schema_Nm||'.Rms_Rt_Insurnc_Mst@'||P_Db_Link||'
                 Where Brn_No     = '||I
        Begin
          Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Rt_Insurnc_Mst@'||P_Db_Link||'(
                              Select '||V_Doc_No||', '||V_Doc_Srl||',Doc_Date, 
                                 From Rms_Rt_Insurnc_Mst
                                   Where  Doc_No   = '||I.Doc_No ||' 
        Exception
            Raise_Application_Error(-20002,'Error When Insert Into Rms_Rt_Insurnc_Mst'||Chr(13)||Sqlerrm);   
       Begin 
           Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Rt_Insurnc_Dtl@'||P_Db_Link||'(
                               Select  '||V_Doc_No||', '||V_Doc_Srl||', Rcrd_No, 
                                 From Rms_Rt_Insurnc_Dtl
                                  Where Doc_No   = '||I.Doc_No||' 
       Exception
         Raise_Application_Error(-20003,'Error When Insert Into Rms_Rt_Insurnc_Dtl'||Chr(13)||Sqlerrm);
    Begin
       Update Rms_Rt_Insurnc_Mst
          Where Exists(Select 1 From Rms_Rt_Insurnc_Mst_Tmp
                        Where Rms_Rt_Insurnc_Mst_Tmp.Doc_Srl = Rms_Rt_Insurnc_Mst.Doc_Srl) ;
    Exception
       Raise_Application_Error(-20004,'Error When Update  External_Post In Rms_Rt_Insurnc_Mst'||Chr(13)||Sqlerrm); 
    Procedure Get_Price_From_Invoice ( P_Sqlstr        In      Varchar2 ,
    Begin
 Procedure Move_Invstor_Tickets (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2) Is   
 Begin       
        Begin
          Execute Immediate 'Insert Into '||P_Schema_Nm||'.Rms_Mrn_Trsm_Vndr_Bill@'||P_Db_Link||'(
                              Select Barcode, Bill_Date, Bill_No, 
                                 From Rms_Mrn_Trsm_Vndr_Bill
                                    Where Nvl(Rms_Mrn_Trsm_Vndr_Bill.Pst_Flg,0)    = 0 
                                      And Exists(Select 1 From Rms_Mrn_Trsm_Vndr_Bill_Tmp
                                                  Where Rms_Mrn_Trsm_Vndr_Bill_Tmp.Bill_Srl =  Rms_Mrn_Trsm_Vndr_Bill.Bill_Srl 
        Exception
            Raise_Application_Error(-20001,'Error When Insert Into Rms_Mrn_Trsm_Vndr_Bill'||Chr(13)||Sqlerrm);   
       Begin
          Update Rms_Mrn_Trsm_Vndr_Bill
            Where  Nvl(Rms_Mrn_Trsm_Vndr_Bill.Pst_Flg,0) = 0 
              And Exists(Select 1 From Rms_Mrn_Trsm_Vndr_Bill_Tmp
                          Where Rms_Mrn_Trsm_Vndr_Bill_Tmp.Bill_Srl = Rms_Mrn_Trsm_Vndr_Bill.Bill_Srl
       Exception
           Raise_Application_Error(-20001,'Error When Update  External_Post In Rms_Mrn_Trsm_Vndr_Bill'||Chr(13)||Sqlerrm); 
CREATE OR REPLACE Package Rms_Csh_Cstmr_Pkg As
Function Get_Csh_Cst_Nm( P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type,P_Lng_No In Number) Return Varchar2  ;
Function Check_Csh_Cst_Inactv (P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type) Return Number;
PROCEDURE INSRT_CSH_CSTMR ( P_CUST_CODE            IN IAS_CASH_CUSTMR.CUST_CODE%TYPE
Procedure Insrt_Csh_Cstmr_To_Main_Server (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2);
CREATE OR REPLACE Package Body Rms_Csh_Cstmr_Pkg As
FUNCTION GET_CSH_CST_NM(P_CUST_CODE   IN IAS_CASH_CUSTMR.CUST_CODE%TYPE,
    SELECT CSTMR_NM
      FROM (SELECT DECODE(P_LNG_NO, 1, NVL(CUST_L_NM, CUST_F_NM), NVL(CUST_F_NM, CUST_L_NM)) CSTMR_NM
              FROM IAS_CASH_CUSTMR C
             WHERE CUST_CODE = P_CUST_CODE
            (SELECT DECODE(P_LNG_NO, 1, NVL(CUST_L_NM, CUST_F_NM), NVL(CUST_F_NM, CUST_L_NM)) CSTMR_NM
               FROM IAS_CASH_CUSTMR_BRN C
              WHERE CUST_CODE = P_CUST_CODE
             SELECT DECODE(P_LNG_NO, 1, NVL(CUST_L_NM, CUST_F_NM), NVL(CUST_F_NM, CUST_L_NM)) CSTMR_NM
               FROM IAS_CASH_CUSTMR C
              WHERE CUST_CODE = P_CUST_CODE))
     WHERE ROWNUM <= 1;
EXCEPTION
Function Check_Csh_Cst_Inactv (P_Cust_Code In Ias_Cash_Custmr.Cust_Code%Type) Return Number Is
  Select Nvl(Inactive,0)
    From Ias_Cash_Custmr
     Where Cust_Code=P_Cust_Code     
 Exception When Others Then
PROCEDURE INSRT_CSH_CSTMR ( P_CUST_CODE            IN IAS_CASH_CUSTMR.CUST_CODE%TYPE
   BEGIN 
          INSERT INTO IAS_CASH_CUSTMR (CUST_CODE, CUST_L_NM, MOBILE_NO,E_MAIL,C_PWD,BRN_NO,CMP_NO,AD_U_ID,AD_TRMNL_NM,AD_DATE) 
              INSERT INTO IAS_CASH_CUSTMR_BRN (CUST_CODE, CUST_L_NM, MOBILE_NO,E_MAIL,C_PWD,BRN_NO,CMP_NO,AD_U_ID,AD_TRMNL_NM,AD_DATE) 
   EXCEPTION 
   END;
   BEGIN
          SELECT 1
             FROM (SELECT 1
                     FROM IAS_CSH_CSTMR_LCTN
                    WHERE UPPER (CSTMR_CODE) = UPPER (P_CUST_CODE)
                   SELECT 1
                     FROM IAS_CSH_CSTMR_LCTN_BRN
                    WHERE UPPER (CSTMR_CODE) = UPPER (P_CUST_CODE)
            WHERE ROWNUM <= 1;
   EXCEPTION 
           INSERT INTO IAS_CSH_CSTMR_LCTN (CSTMR_CODE,CSTMR_RGN_NO, CSTMR_BUILD_NO, CSTMR_FLOOR_NO,CSTMR_APRTMNT_NO,NOTE,LATITUDE,LONGITUDE) 
               INSERT INTO IAS_CSH_CSTMR_LCTN_BRN (CSTMR_CODE,CSTMR_RGN_NO, CSTMR_BUILD_NO, CSTMR_FLOOR_NO,CSTMR_APRTMNT_NO,NOTE,LATITUDE,LONGITUDE) 
   END;
EXCEPTION 
Procedure Insrt_Csh_Cstmr_To_Main_Server (P_Schema_Nm In Varchar2,P_Db_Link In Varchar2)  Is
    Begin
    Execute Immediate ' Insert Into 
                    Select Cust_Code, Cust_L_Nm, Cust_F_Nm, Cust_Grp_Code, Mobile_No, Point_Typ_No, Point_Typ_Actv_Date, Tel_No, Fax_No, Pbox, E_Mail,
                           From Ias_Cash_Custmr_Brn Where Nvl(External_Rost,0) =0 
                            And Cust_Code In(Select Cust_Code From Ias_Cash_Custmr_Brn
                         Select Cust_Code From '||P_Schema_Nm||'.Ias_Cash_Custmr@'||P_Db_Link||' ) ';    
      Execute Immediate ' Update Rms_Card Set Processed=1 Where Crd_No In (Select Cust_Code From Ias_Cash_Custmr_Brn
                         Select Cust_Code From '||P_Schema_Nm||'.Ias_Cash_Custmr@'||P_Db_Link||' )   ';  
      Execute Immediate ' Update Ias_Cash_Custmr_Brn Set External_Post=1 Where Nvl(External_Post,0)=0  ';
      Execute Immediate ' INSERT INTO '||P_SCHEMA_NM||'.IAS_CSH_CSTMR_LCTN@'||P_DB_LINK||'
                               SELECT CSTMR_CODE
                                 FROM IAS_CSH_CSTMR_LCTN_BRN B
                                WHERE CSTMR_CODE IN(SELECT CSTMR_CODE
                                                      FROM IAS_CSH_CSTMR_LCTN_BRN
                                                    SELECT CSTMR_CODE
                                                      FROM '||P_SCHEMA_NM||'.IAS_CSH_CSTMR_LCTN@'||P_DB_LINK||')';    
    Exception
CREATE OR REPLACE PACKAGE RMS_POINT_PKG
    FUNCTION GET_CSTMR_NM(P_CSTMR_CODE   IN IAS_POINT_CALC_TRNS.CUST_CODE%TYPE,
    FUNCTION CHCK_CSTMR_INACTV(P_CSTMR_CODE IN IAS_POINT_CALC_TRNS.CUST_CODE%TYPE)
    FUNCTION GET_CSTMR_POINT_TYP(P_CSTMR_CODE IN IAS_POINT_CALC_TRNS.CUST_CODE%TYPE)
    FUNCTION GET_POINT_TYPE_NM(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    FUNCTION CHCK_POINT_TYPE_STATE(P_POINT_TYP_NO IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE)
    PROCEDURE GET_POINT_TYP_MIN_LMT(P_POINT_TYP_NO   IN     IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    FUNCTION GET_POINT_CALC_TYP(P_POINT_TYP_NO IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE)
    FUNCTION GET_POINT_CNT(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    FUNCTION GET_POINT_RPLC_CNT(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    FUNCTION GET_POINT_AMT(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    FUNCTION GET_POINT_RPLC_AMT(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    FUNCTION GET_CSTMR_POINT_BLNC(P_CSTMR_CODE           IN IAS_POINT_CALC_TRNS.CUST_CODE%TYPE,
    PROCEDURE CHCK_INSRT_EXPIRED_POINT(P_AD_U_ID    NUMBER DEFAULT NULL,
    PROCEDURE INSRT_RMS_POINT_TRNS(P_TRNS_NO                 IN NUMBER,
    FUNCTION GET_EXPIRE_DATE(P_POINT_TYP_NO            IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    FUNCTION CHCK_POINT_TRNS(P_BILL_DATE            IN RMS_BILL_MST.BILL_DATE%TYPE,
CREATE OR REPLACE PACKAGE BODY RMS_POINT_PKG
    FUNCTION GET_CSTMR_NM(P_CSTMR_CODE   IN IAS_POINT_CALC_TRNS.CUST_CODE%TYPE,
    BEGIN
        SELECT DECODE(P_LNG_NO, 1, CUST_L_NM, NVL(CUST_F_NM, CUST_L_NM))
          FROM IAS_CASH_CUSTMR
         WHERE CUST_CODE = P_CSTMR_CODE AND ROWNUM <= 1;
    EXCEPTION
    FUNCTION CHCK_CSTMR_INACTV(P_CSTMR_CODE IN IAS_POINT_CALC_TRNS.CUST_C
    BEGIN
        SELECT NVL(INACTIVE, 0)
          FROM IAS_CASH_CUSTMR
         WHERE CUST_CODE = P_CSTMR_CODE AND ROWNUM <= 1;
    EXCEPTION
    FUNCTION GET_CSTMR_POINT_TYP(P_CSTMR_CODE IN IAS_POINT_CALC_TRNS.CUST_CODE%TYPE)
    BEGIN
        SELECT POINT_TYP_NO
          FROM IAS_CASH_CUSTMR
         WHERE CUST_CODE = P_CSTMR_CODE AND ROWNUM <= 1;
    EXCEPTION
    FUNCTION GET_POINT_TYPE_NM(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    BEGIN
        SELECT DECODE(P_LNG_NO, 1, TYP_L_NM, NVL(TYP_F_NM, TYP_L_NM))
          FROM IAS_POINT_TYP_MST
         WHERE POINT_TYP_NO = P_POINT_TYP_NO AND ROWNUM <= 1;
    EXCEPTION
    FUNCTION CHCK_POINT_TYPE_STATE(P_POINT_TYP_NO IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE)
    BEGIN
        BEGIN
            SELECT NVL(INACTIVE, 0)
              FROM IAS_POINT_TYP_MST
             WHERE POINT_TYP_NO = P_POINT_TYP_NO AND ROWNUM <= 1;
        EXCEPTION
        END;
            BEGIN
                SELECT 1
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO
            EXCEPTION
            END;
    PROCEDURE GET_POINT_TYP_MIN_LMT(P_POINT_TYP_NO   IN     IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    BEGIN
        BEGIN
            SELECT MIN_LMT_CALC,
              FROM IAS_POINT_TYP_MST
             WHERE POINT_TYP_NO = P_POINT_TYP_NO;
        EXCEPTION
        END;
    FUNCTION GET_POINT_CALC_TYP(P_POINT_TYP_NO IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE)
    BEGIN
        SELECT POINT_CALC_TYP
          FROM IAS_POINT_TYP_MST
         WHERE POINT_TYP_NO = P_POINT_TYP_NO AND ROWNUM <= 1;
    EXCEPTION
    FUNCTION GET_POINT_CNT(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    BEGIN
            BEGIN
                SELECT AMT_4POINT
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO;
            EXCEPTION
            END;
            BEGIN
                SELECT AMT_4POINT,
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO;
            EXCEPTION
            END;
            BEGIN
                SELECT POINT_CNT
                  FROM IAS_POINT_TYP_CALC_DTL
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO AND P_BILL_AMT BETWEEN FROM_AMT AND TO_AMT;
            EXCEPTION
            END;
        BEGIN
            SELECT POINT_CALC_TYP INTO V_PRG_CALC_TYP FROM IAS_PARA_AR;
        EXCEPTION
        END;
    EXCEPTION
    FUNCTION GET_POINT_RPLC_CNT(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    BEGIN
            BEGIN
                SELECT AMT_4POINT_RPLC
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO;
            EXCEPTION
            END;
            BEGIN
                SELECT AMT_4POINT_RPLC,
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO;
            EXCEPTION
            END;
            BEGIN
                SELECT TO_POINT
                  FROM (  SELECT TO_POINT
                            FROM IAS_POINT_TYP_RPLC_DTL
                           WHERE POINT_TYP_NO = P_POINT_TYP_NO AND AMT <= P_AMT_RPLC
                        ORDER BY TO_POINT DESC)
                 WHERE ROWNUM <= 1;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION GET_POINT_AMT(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    BEGIN
            BEGIN
                SELECT AMT_4POINT
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO;
            EXCEPTION
            END;
            BEGIN
                SELECT AMT_4POINT,
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO;
            EXCEPTION
            END;
            BEGIN
                SELECT AMT
                  FROM IAS_POINT_TYP_RPLC_DTL
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO AND P_POINT_CNT BETWEEN FROM_POINT AND TO_POINT;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION GET_POINT_RPLC_AMT(P_POINT_TYP_NO   IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    BEGIN
            BEGIN
                SELECT AMT_4POINT_RPLC
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO;
            EXCEPTION
            END;
            BEGIN
                SELECT AMT_4POINT_RPLC,
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO;
            EXCEPTION
            END;
            BEGIN
                SELECT AMT
                  FROM IAS_POINT_TYP_RPLC_DTL
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO AND P_POINT_CNT BETWEEN FROM_POINT AND TO_POINT;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION GET_CSTMR_POINT_BLNC(P_CSTMR_CODE           IN IAS_POINT_CALC_TRNS.CUST_CODE%TYPE,
    BEGIN
                SELECT SUM(NVL(POINT_CNT, 0)),
                  FROM IAS_POINT_CALC_TRNS
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO
                SELECT SUM(NVL(POINT_CNT, 0)),
                  FROM IAS_POINT_CALC_TRNS
                 WHERE CUST_CODE = P_CSTMR_CODE
                BEGIN
                    EXECUTE IMMEDIATE ' Select Sum(Nvl(Point_Cnt,0)),Sum(Nvl(Doc_Amt,0)) From ' || USER || '.IAS_POINT_CALC_TRNS@' || P_DB_LINK ||
                Where Point_Typ_No =' || P_POINT_TYP_NO || ' And  CSTMR_Code   =' || P_CSTMR_CODE || V_WHR
                EXCEPTION
                END;
                BEGIN
                    EXECUTE IMMEDIATE ' Select Sum(Nvl(Point_Cnt,0)),Sum(Nvl(Doc_Amt,0))  From ' || USER || '.IAS_POINT_CALC_TRNS@' || P_DB_LINK ||
                Where  CSTMR_Code   =' || P_CSTMR_CODE || V_WHR
                EXCEPTION
                END;
    PROCEDURE CHCK_INSRT_EXPIRED_POINT(P_AD_U_ID    NUMBER DEFAULT NULL,
    BEGIN
        BEGIN
            SELECT POINT_AGE_EXPIRED_TYP INTO V_POINT_AGE_EXPIRED FROM IAS_PARA_AR;
        EXCEPTION
        END;
                          SELECT CUST_CODE,
                            FROM IAS_POINT_CALC_TRNS
                           WHERE TO_CHAR(TRNS_DATE, 'DD/MM/YYYY') <= TO_CHAR(IAS_GEN_PKG.GET_FINAL_DAY, 'DD/MM/YYYY')
                        GROUP BY CUST_CODE,
                        ORDER BY CUST_CODE;
                BEGIN
                        BEGIN
                            SELECT SUM(POINT_CNT),
                              FROM IAS_POINT_CALC_TRNS
                             WHERE CUST_CODE = CSTMR_CRSR.CUST_CODE;
                        EXCEPTION
                        END;
                            INSERT INTO IAS_POINT_CALC_TRNS(TRNS_NO,
                END;
                      SELECT CUST_CODE,
                        FROM IAS_CASH_CUSTMR
                       WHERE ADD_MONTHS(TO_CHAR(FIRST_DEAL_DATE, 'DD/MM/YYYY'), 12 * V_POINT_AGE_EXPIRED) <
                    ORDER BY CUST_CODE;
            BEGIN
                    BEGIN
                        SELECT SUM(POINT_CNT)
                          FROM IAS_POINT_CALC_TRNS
                         WHERE CUST_CODE = CSTMR_CRSR.CUST_CODE;
                    EXCEPTION
                    END;
                    BEGIN
                        SELECT MAX(TRNS_DATE)
                          FROM IAS_POINT_CALC_TRNS
                         WHERE CUST_CODE = CSTMR_CRSR.CUST_CODE AND TRNS_TYPE = 9;
                    EXCEPTION
                    END;
                        BEGIN
                            INSERT INTO IAS_POINT_CALC_TRNS(TRNS_NO,
                        EXCEPTION
                        END;
            END;
    PROCEDURE INSRT_RMS_POINT_TRNS(P_TRNS_NO                 IN NUMBER,
    BEGIN
        EXECUTE IMMEDIATE 'INSERT INTO ' || P_YR_BR_USR || '.IAS_POINT_CALC_TRNS@' || P_DB_LINK ||
    EXCEPTION
    FUNCTION GET_EXPIRE_DATE(P_POINT_TYP_NO            IN IAS_POINT_TYP_MST.POINT_TYP_NO%TYPE,
    BEGIN
            BEGIN
                SELECT ADD_MONTHS(TO_DATE(POINT_TYP_ACTV_DATE, 'DD/MM/YYYY'), P_POINT_AGE_EXPIRED_PRD)
                  FROM IAS_CASH_CUSTMR
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO AND CUST_CODE = P_CSTMR_CODE AND ROWNUM <= 1;
            EXCEPTION
            END;
            BEGIN
                SELECT ADD_MONTHS(TO_DATE(START_DATE, 'DD/MM/YYYY'), P_POINT_AGE_EXPIRED_PRD)
                  FROM IAS_POINT_TYP_MST
                 WHERE POINT_TYP_NO = P_POINT_TYP_NO AND ROWNUM <= 1;
            EXCEPTION
            END;
    EXCEPTION
    FUNCTION CHCK_POINT_TRNS(P_BILL_DATE            IN RMS_BILL_MST.BILL_DATE%TYPE,
    BEGIN
            BEGIN
                    YS_GEN_PKG.GET_CNT('Select Sum(Nvl(Point_Cnt,0))  
                                                From ' || V_YR_BR_USR || 'IAS_POINT_CALC_TRNS' || V_DB_LINK ||
                                               Where Point_Typ_No=' || P_POINT_TYP_NO ||
            EXCEPTION
            END;
    EXCEPTION
CREATE OR REPLACE PACKAGE IAS_Usr_Pkg as
 FUNCTION Get_Usr_Nm ( P_Usr_No In USER_R.U_ID%TYPE,P_Lng_no In Number Default 1 ) Return VARCHAR2;
 FUNCTION Get_Usr_St (P_Usr_No In USER_R.U_ID%TYPE) Return NUMBER;
 FUNCTION Get_Usr_Def_Val ( P_Usr_No In USER_R.U_ID%TYPE , P_Def_Type In Varchar2) Return VARCHAR2;
 FUNCTION Get_Usr_Def_Rep ( P_Usr_No In USER_R.U_ID%TYPE , P_Form_no In FORM_DETAIL.FORM_NO%TYPE ) Return NUMBER;
 FUNCTION Chk_Usr_Frm_Prv (P_UserNo In Number , P_Frm_no In Number, P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_CB_Prv (P_UserNo In Number , P_Cb_Type In Number ,P_Cb_No In Number, P_a_cy In Varchar2,P_Priv_Type In Varchar2)  RETURN NUMBER;
 FUNCTION Chk_Usr_Cst_Prv (P_UserNo In Number , P_c_code In VARCHAR2,  P_a_cy In VARCHAR2,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Wc_Prv (P_UserNo In Number , P_w_code In NUMBER, P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Gc_Prv (P_UserNo In Number , P_G_code In Varchar2,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Show_Prv(P_UserNo In Number ,P_T_U_ID In NUMBER)  RETURN NUMBER ;
 FUNCTION Chk_Usr_Brn_Prv (P_UserNo In Number , P_Brn_No In Number,P_Priv_Type In Varchar2)  RETURN NUMBER ;
 FUNCTION CHK_USR ( P_USR_NO IN USER_R.U_ID%TYPE,P_PASSWORD IN VARCHAR2 ,P_LNG_NO IN NUMBER DEFAULT 1) RETURN VARCHAR2 ;
 FUNCTION  Get_Usr_Apprv ( P_Usr_No In Number , 
 FUNCTION GET_USR_CSHNO (P_USR_NO IN USER_R.U_ID%TYPE) RETURN VARCHAR2;  
 FUNCTION Chk_Pass_Complxty ( P_Pass       varchar2,
CREATE OR REPLACE PACKAGE Body IAS_Usr_Pkg as
FUNCTION Get_Usr_Nm (P_Usr_No In USER_R.U_ID%TYPE,P_Lng_no In Number Default 1 ) Return VARCHAR2 Is
 Begin
 Select Decode(P_Lng_no,1,u_a_name,nvl(u_e_name,u_a_name)) 
   From User_r
  where U_id = P_Usr_No 
 Exception 
FUNCTION Get_Usr_St (P_Usr_No In USER_R.U_ID%TYPE) Return NUMBER Is
 Begin
 Select nvl(Inactive,0) 
   From User_r
  where U_id = P_Usr_No 
 Exception 
FUNCTION Get_Usr_Def_Val ( P_Usr_No In USER_R.U_ID%TYPE , P_Def_Type In Varchar2) Return VARCHAR2 Is
 Begin
 Select W_CODE_DEF
   From User_r
  where U_Id = P_Usr_No
    and Exists (Select 1 From Privilege_wh 
                 Where U_id = P_Usr_No 
 Select CC_CODE_DEF
   From User_r
  where U_Id = P_Usr_No
    and Exists (Select 1 From Privilege_cc 
                 Where U_id = P_Usr_No 
 Select Cash_No_DEF
   From User_r
  where U_Id = P_Usr_No
    and Exists (Select 1 From Priv_Cash 
                 Where U_id = P_Usr_No 
 Exception 
FUNCTION Get_Usr_Def_Rep ( P_Usr_No In USER_R.U_ID%TYPE , P_Form_no In FORM_DETAIL.FORM_NO%TYPE ) Return NUMBER Is
  Select REP_SMPLE_NO 
    From IAS_REP_SMPLE_USER
   Where U_id = P_Usr_No
 Exception 
FUNCTION Chk_Usr_Frm_Prv (P_UserNo In Number , P_Frm_no In Number, P_Priv_Type In Varchar2)  RETURN NUMBER Is
BEGIN   
    Select nvl(Include_Flag,0)
      From Privilege
     Where U_Id    = P_UserNo
    Select nvl(Ad_Flag,0)
      From Privilege
     Where U_Id    = P_UserNo
    Select nvl(Mod_Flag,0)
      From Privilege
     Where U_Id    = P_UserNo
    Select nvl(Del_Flag,0)
      From Privilege
     Where U_Id    = P_UserNo
    Select nvl(View_Flag,0)
      From PRIVILEGE
     Where U_Id    = P_UserNo
    Select nvl(Print_Flag,0)
      From Privilege
     Where U_Id    = P_UserNo
    Select nvl(VWREP_FLAG,0)
      From Privilege
     Where U_Id    = P_UserNo
    Select nvl(Vrfy_Flag,0)
      From Privilege
     Where U_Id    = P_UserNo
 Exception
FUNCTION Chk_Usr_CB_Prv (P_UserNo In Number , P_Cb_Type In Number ,P_Cb_No In Number, P_a_cy In Varchar2,P_Priv_Type In Varchar2)  RETURN NUMBER Is
BEGIN   
    Select nvl(Add_Flag,0)
      From Priv_Cash
     Where U_Id    = P_UserNo
    Select nvl(View_Flag,0)
      From Priv_Cash
     Where U_Id    = P_UserNo
 Exception
FUNCTION Chk_Usr_Cst_Prv (P_UserNo In Number , P_c_code In VARCHAR2,  P_a_cy In VARCHAR2,P_Priv_Type In Varchar2)  RETURN NUMBER Is
BEGIN   
    Select nvl(Add_Flag,0)
      From IAS_PRIV_CUSTOMER
     Where U_Id    = P_UserNo
    Select nvl(View_Flag,0)
      From IAS_PRIV_CUSTOMER
     Where U_Id    = P_UserNo
 Exception
FUNCTION Chk_Usr_Wc_Prv (P_UserNo In Number , P_W_code In NUMBER,P_Priv_Type In Varchar2)  RETURN NUMBER Is
BEGIN   
    Select Decode(Upper(P_Priv_Type),'ADD',nvl(Add_Flag,0),nvl(View_Flag,0))
      From PRIVILEGE_WH
     Where U_Id   = P_UserNo
 Exception
FUNCTION Chk_Usr_Gc_Prv (P_UserNo In Number , P_G_code In Varchar2,P_Priv_Type In Varchar2)  RETURN NUMBER Is
BEGIN   
    Select Decode(Upper(P_Priv_Type),'ADD',nvl(Add_Flag,0),nvl(View_Flag,0))
      From PRIVILEGE_Gc
     Where U_Id   = P_UserNo
 Exception
 FUNCTION Chk_Usr_Show_Prv(P_UserNo In Number ,P_T_U_ID In NUMBER)  RETURN NUMBER Is
BEGIN   
    Select nvl(PRIV_FLAG,0)
      From IAS_SHW_DOC_PRIV
     Where U_Id   = P_UserNo
 Exception
FUNCTION Chk_Usr_Brn_Prv (P_UserNo In Number , P_Brn_No In Number,P_Priv_Type In Varchar2)  RETURN NUMBER Is
BEGIN   
    Select Decode(Upper(P_Priv_Type),'ADD',nvl(Add_Flag,0),nvl(View_Flag,0))
      From S_BRN_USR_PRIV
     Where U_Id   = P_UserNo
 Exception
FUNCTION CHK_USR ( P_USR_NO IN USER_R.U_ID%TYPE,P_PASSWORD IN VARCHAR2 ,P_LNG_NO IN NUMBER DEFAULT 1) RETURN VARCHAR2 IS
     SELECT NVL(INACTIVE,0) ,  
       FROM USER_R
      WHERE U_ID = P_USR_NO 
 EXCEPTION 
FUNCTION  Get_Usr_Apprv ( P_Usr_No In Number , 
 Select 1
   From S_Apprvd_Usr
  Where Doc_Typ=P_Doc_Typ
 EXCEPTION 
FUNCTION Get_Usr_CshNo (P_Usr_No In USER_R.U_ID%TYPE) Return VARCHAR2 Is
 Begin
     Select nvl(CASH_NO,'0') 
       From User_r
      where U_id = P_Usr_No 
 Exception 
FUNCTION Chk_Pass_Complxty ( P_Pass       varchar2,
    Rem BEGIN Password Verification Functions
    Rem  Function: "complexity_check" - Verifies the complexity 
CREATE OR REPLACE PACKAGE IAS_Wcode_Pkg as
 FUNCTION Get_Wc_Nm  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2;
 FUNCTION Get_Wc_St  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER;
 FUNCTION Get_Wc_Ser ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER;
 FUNCTION Get_Wc_cc  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_Wc_Brn ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE ) Return NUMBER ;
 FUNCTION Chk_Wc_Brn ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE, P_BRN_NO In S_BRN.BRN_NO%TYPE ) Return NUMBER;
 Function Get_Whg_Code  ( P_W_Code In Warehouse_Details.W_Code%Type ) Return Number ; 
CREATE OR REPLACE PACKAGE Body IAS_Wcode_Pkg as
FUNCTION Get_Wc_Nm  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2 Is
 Begin
 Select Decode(P_Lng_no,1,w_name,nvl(w_e_name,w_name)) 
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Get_Wc_St  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER Is
 Begin
 Select nvl(INACTIVE,0) 
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Get_Wc_Ser  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return NUMBER Is
 Begin
 Select nvl(w_ser,0)
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Get_Wc_cc  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE) Return VARCHAR2 Is
 Begin
 Select cc_code
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Get_Wc_Brn  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE ) Return NUMBER Is
 Select Conn_Brn_No
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
FUNCTION Chk_Wc_Brn  ( P_W_code In WAREHOUSE_DETAILS.W_CODE%TYPE, P_BRN_NO In S_BRN.BRN_NO%TYPE ) Return NUMBER Is
 Begin
 Select 1
   From WAREHOUSE_DETAILS
  where W_code = P_W_code 
 Exception 
Function Get_Whg_Code  ( P_W_Code In Warehouse_Details.W_Code%Type ) Return Number Is
     Select Whg_Code
     From Warehouse_Details
       Where W_Code = P_W_Code 
 Exception 
CREATE OR REPLACE PACKAGE IAS_CshBnk_Pkg as
 FUNCTION Get_CB_Name (P_Cb_Type In Number,P_Cb_No  In Number,P_Lng_no In Number)   RETURN VARCHAR2;
 FUNCTION Get_CB_No_By_Nm (P_Cb_Type In Number,P_cb_nm In ACCOUNT.A_NAME%TYPE) RETURN VARCHAR2;
 FUNCTION Get_A_code  (P_Cb_Type In Number,P_Cb_No  In Number) RETURN VARCHAR2;
 FUNCTION Check_Acy   (P_Cb_Type In Number,P_Cb_No  In Number,P_a_cy   In VARCHAR2) RETURN Number;
 FUNCTION Get_CB_Ser  (P_Cb_Type In Number,P_Cb_No  In Number) RETURN Number;
 FUNCTION Get_Csh_Type(P_Csh_No  In CASH_IN_HAND.CASH_NO%TYPE) RETURN Number; 
 FUNCTION Get_CB_No   (P_Cb_Type In Number , P_a_code ACCOUNT.A_CODE%TYPE, P_Acy In EX_RATE.CUR_CODE%TYPE DEFAULT NULL) RETURN NUMBER;
 FUNCTION Check_Mediator_Bnk (P_Cb_No  In Number) RETURN Number;
 FUNCTION Chk_Ac_Csh_Bnk (P_a_code ACCOUNT.A_CODE%TYPE) RETURN NUMBER;
 FUNCTION Get_Cnt_Acy (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_No   In Number) RETURN NUMBER;
 FUNCTION Get_One_Acy_Cb (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_no In Number) RETURN VARCHAR2;
 FUNCTION  Get_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number) RETURN NUMBER;
 FUNCTION  Chk_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number,P_Brn_no In Number) RETURN NUMBER;   
CREATE OR REPLACE PACKAGE Body IAS_CshBnk_Pkg as
FUNCTION Get_CB_Name (P_Cb_Type In Number,P_Cb_No In Number,P_Lng_no In Number) RETURN VARCHAR2 Is
 Begin
 Select Decode(P_Lng_no,1,CASH_NAME,nvl(CASH_E_NAME,CASH_NAME)) 
   From Cash_In_hand
  where Cash_no=P_Cb_No ;
       Select Decode(P_Lng_no,1,BANK_NAME,nvl(BANK_E_NAME,BANK_NAME)) 
   From Cash_At_Bank
  where bank_no=P_Cb_No ;
 Exception 
FUNCTION Get_CB_No_By_Nm (P_Cb_Type In Number,P_cb_nm In ACCOUNT.A_NAME%TYPE) RETURN VARCHAR2 Is
 Begin
     select Cash_no 
    From Cash_In_hand
  where (cash_name = P_cb_nm or cash_e_name =P_cb_nm )
     select Bank_no 
    From Cash_At_Bank
  where (bank_name = P_cb_nm or bank_e_name =P_cb_nm )
 Exception 
FUNCTION Check_Acy (P_Cb_Type In Number,P_Cb_No In Number,P_a_cy   In VARCHAR2) RETURN Number Is
 Begin
 Select 1 
   From Ias_Cash_In_Hand_Dtl
  where Cash_no=P_Cb_No
 Select 1 
   From Ias_Cash_At_Bank_Dtl
  where Bank_no=P_Cb_No
 Exception 
FUNCTION Get_CB_Ser (P_Cb_Type In Number,P_Cb_No  In Number) RETURN Number Is
  Select nvl(cash_sr,0)
    From Cash_in_Hand
 where Cash_no=P_Cb_No;
  Select nvl(Bank_sr,0)
    From Cash_at_bank
 where Bank_no=P_Cb_No;
 Exception 
FUNCTION Get_A_code  (P_Cb_Type In Number,P
  Select A_code 
    From Cash_in_Hand
 where Cash_no=P_Cb_No;
  Select A_code 
    From Cash_at_bank
 where Bank_no=P_Cb_No;
 Exception 
FUNCTION Get_Csh_Type(P_Csh_No In CASH_IN_HAND.CASH_NO%TYPE) RETURN Number Is
  Select Cash_Type 
    From Cash_in_Hand
 where Cash_no=P_Csh_No;
 Exception 
FUNCTION Get_CB_No (P_Cb_Type In Number , P_a_code ACCOUNT.A_CODE%TYPE , P_Acy In EX_RATE.CUR_CODE%TYPE DEFAULT NULL) RETURN NUMBER Is
  Begin
      Select Cash_No
        From Cash_in_Hand
         Where A_code = P_a_code;
      Select Bank_No
        From Cash_at_Bank
         Where A_code = P_a_code;
 Exception 
   Begin
      Select Cash_no
        From Ias_Cash_in_Hand_Dtl
       Where A_code = P_a_code
      Select Bank_no
        From Ias_Cash_at_Bank_Dtl
       Where A_code = P_a_code
   Exception 
   End;
FUNCTION Check_Mediator_Bnk (P_Cb_No  In Number) RETURN Number Is
  Select nvl(MEDIATOR,0)
    From Cash_At_Bank
 where Bank_no = P_Cb_No
 Exception 
FUNCTION Chk_Ac_Csh_Bnk (P_a_code ACCOUNT.A_CODE%TYPE) RETURN NUMBER Is
 Begin
  Select 1 Into Cnt From Cash_in_Hand
   Where a_code =P_a_code
   Exception
  End;
   Begin
     Select 1 Into Cnt From Cash_At_Bank
      Where a_code =P_a_code
 Exception
   End;
 FUNCTION Get_Cnt_Acy (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_No   In Number) RETURN NUMBER Is
        Begin
Select count(*) 
From IAS_CASH_IN_HAND_DTL
                Where Cash_No =P_Cb_No 
                And   A_Cy   In (Select A_Cy 
                                  From   Priv_Cash 
                                  Where  Cash_Type=P_Cb_Type
        Exception When Others Then
        End;   
        Begin
Select count(*) 
From IAS_CASH_AT_BANK_DTL
       Where Bank_No =P_Cb_No 
                And   A_Cy   In (Select A_Cy 
                                  From   Priv_Cash 
                                  Where  Cash_Type=P_Cb_Type
        Exception When Others Then
        End;   
 Exception 
 FUNCTION Get_One_Acy_Cb (P_Cb_Type In Number ,P_Cb_No  In Number,P_Usr_no In Number) RETURN VARCHAR2 IS
    Begin
    Select A_Cy 
          From Priv_Cash 
         Where Cash_Type=P_Cb_Type
    Exception 
    End;
 Exception 
FUNCTION  Get_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number) RETURN NUMBER Is
   Select conn_brn_no
   From cash_in_hand
  where cash_no = P_Cb_No 
   Select conn_brn_no
   From cash_at_bank
  where bank_no = P_Cb_No 
 Exception 
FUNCTION  Chk_CB_Brn  (P_Cb_Type In Number ,P_Cb_No  In Number,P_Brn_no In Number) RETURN NUMBER Is
   Select 1
   From cash_in_hand
  where cash_no = P_Cb_No 
   Select 1
   From cash_at_bank
  where bank_no = P_Cb_No 
 Exception 
CREATE OR REPLACE PACKAGE IAS_Cst_Pkg as
 PROCEDURE Get_Para (P_Lang_no In Pls_Integer Default 1,P_User_No In Pls_Integer); 
 FUNCTION Get_Cnt_Acy (P_c_code In CUSTOMER.C_CODE%TYPE,P_Usr_No   In Number) return Number;
 FUNCTION Get_One_Acy_Cst (P_c_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) Return VARCHAR2;
 FUNCTION Get_Acode  (P_c_code In CUSTOMER.C_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_c_code (P_a_code In ACCOUNT.A_CODE%TYPE) Return VARCHAR2;
 FUNCTION Get_C_Name(P_c_code In CUSTOMER.C_CODE%TYPE,P_Lng_no In Number) Return VARCHAR2;
 FUNCTION Get_c_code_By_Nm (P_c_nm In CUSTOMER.C_A_NAME%TYPE) RETURN VARCHAR2;
 FUNCTION Check_Acy (P_c_code In CUSTOMER.C_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number;
 PROCEDURE Get_Credit_Lmt ( p_cr_lmt_typ   IN       NUMBER,
CREATE OR REPLACE PACKAGE Body IAS_Cst_Pkg as
Procedure Get_Para (P_Lang_no In pls_integer Default 1,P_User_No In pls_integer) Is
FUNCTION Get_Cnt_Acy (P_C_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) Return Number Is
    Begin
        Select count(*) 
            From Customer_Curr 
            Where C_code =P_C_Code 
            And   A_Cy   In (Select A_Cy 
                              From   IAS_PRIV_CUSTOMER 
                              Where  U_Id  = P_Usr_No 
    Exception When Others Then
    End;           
 Exception 
FUNCTION Get_One_Acy_Cst (P_C_code In CUSTOMER.C_CODE%TYPE,P_Usr_no In Number) Return VARCHAR2 Is
    Begin
           Select A_Cy 
  From Ias_Priv_Customer 
 where U_Id  = P_Usr_No
    Exception When Others Then
    End;
 Exception 
FUNCTION Get_Acode (P_c_code In CUSTOMER.C_CODE%TYPE) Return VARCHAR2 Is
 select c_a_code 
   From customer
  where c_code=P_c_code ;
Exception 
FUNCTION Get_c_code (P_a_code In ACCOUNT.A_CODE%TYPE) Return VARCHAR2 Is
 Begin
 Select c_code 
   From customer
  where c_a_code=P_a_code ;
 Exception 
FUNCTION Get_C_Name (P_c_code In CUSTOMER.C_CODE%TYPE,P_Lng_no In Number) 
 Begin
 select Decode(P_Lng_no,1,c_a_name,nvl(c_e_name,c_a_name)) 
   From customer
  where c_code=P_c_code ;
Exception when others then
FUNCTION Get_c_code_By_Nm (P_c_nm In CUSTOMER.C_A_NAME%TYPE) RETURN VARCHAR2 Is
 Begin
 select c_code 
   From customer
  where (c_a_name = P_c_nm or c_e_name =P_c_nm )
 Exception 
FUNCTION Check_Acy (P_c_code In CUSTOMER.C_CODE%TYPE,P_a_cy   In VARCHAR2) Return Number Is
 Begin
 Select 1 
   From customer_curr
  where c_code=P_c_code
 Exception 
PROCEDURE Get_Credit_Lmt (p_cr_lmt_typ In   NUMBER,
    Begin
      Select nvl(crlimit_type,1) 
        From Privilege_Fixed 
       Where u_id=P_User_No;
    Exception When Others Then
    End;
            SELECT ROUND (NVL (CR_LIMIT, 0), P_
              FROM IAS_CUSTOMER_CC_LMT
             WHERE C_CODE = P_C_CODE AND A_CY = P_ACY AND CC_CODE = P_CC_CODE;
            SELECT ROUND (NVL (CR_LIMIT, 0), P_FRC_NO), NVL (INV_LIMIT, 0),
              FROM CUSTOMER_CURR
             WHERE C_CODE = P_C_CODE AND A_CY = P_ACY;
 Exception 
CREATE OR REPLACE PACKAGE IAS_PRMTR_PKG
    FUNCTION GETPVAL(P_PRMTR VARCHAR2)
    PROCEDURE SETPVAL(P_PRMTR   VARCHAR2, P_VAL     VARCHAR2);
    FUNCTION GETGPVAL(P_PRMTR VARCHAR2)
    PROCEDURE SETGPVAL(P_PRMTR   VARCHAR2, P_VAL     VARCHAR2);
CREATE OR REPLACE PACKAGE BODY IAS_PRMTR_PKG
    FUNCTION GETPVAL(P_PRMTR VARCHAR2)
        BEGIN
    PROCEDURE SETPVAL(P_PRMTR   VARCHAR2,P_VAL     VARCHAR2)
    BEGIN
    FUNCTION GETGPVAL(P_PRMTR VARCHAR2)
    BEGIN
    PROCEDURE SETGPVAL(P_PRMTR   VARCHAR2, P_VAL     VARCHAR2)
    BEGIN
CREATE OR REPLACE PACKAGE YS_SCR_Pkg as
 FUNCTION Get_Scr_Nm      ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE,P_Lng_no In Number Default 1 ) Return VARCHAR2;
 FUNCTION Get_Scr_Doc_Typ ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE ) Return NUMBER;
 Function Get_Scr_Parent_No ( P_Scr_No In Form_Detail.Form_No%Type  ) Return Number ;
CREATE OR REPLACE PACKAGE BODY  YS_SCR_Pkg as
FUNCTION Get_Scr_Nm ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE,P_Lng_no In Number Default 1 ) Return VARCHAR2 Is
 Select Form_Name
   From Ias_Form_Name
  Where Lang_no = p_Lng_no 
 Exception When Others Then
FUNCTION Get_Scr_Doc_Typ ( P_Scr_No In FORM_DETAIL.FORM_NO%TYPE ) Return NUMBER Is
 Select Doc_Typ
   From Form_Detail
  Where Form_no=P_Scr_No
 Exception When Others Then
Function Get_Scr_Parent_No ( P_Scr_No In Form_Detail.Form_No%Type  ) Return Number Is
 Select F_Parent_No
   From Form_Detail
  Where  Form_No  = P_Scr_No
 Exception When Others Then
CREATE OR REPLACE PACKAGE IAS_SMS_MAIL_PKG AS
 FUNCTION GET_MSG_TXT_FNC ( P_Msgx_Txt In Varchar2 ) RETURN VARCHAR2 ;
 PROCEDURE INSRT_MSG_ALRT_PRC (
CREATE OR REPLACE PACKAGE BODY IAS_SMS_MAIL_PKG AS
FUNCTION GET_MSG_TXT_FNC (  P_Msgx_Txt In Varchar2 ) RETURN VARCHAR2 IS
Exception 
PROCEDURE INSRT_MSG_ALRT_PRC (
        BEGIN
         SELECT NVL(MAX(SR_NO),0) +  1 
           FROM IAS_SYS.S_MSG_MOBILE_AUTO
          WHERE BRN_USR   = NVL(P_BRN_USR,G_BRN_USR)
         EXCEPTION WHEN OTHERS THEN
        END;
        INSERT INTO IAS_SYS.S_MSG_MOBILE_AUTO
 EXCEPTION
CREATE OR REPLACE Package Rms_Pst_Jrnl_Pkg As
   Procedure Pst_Dlvry_Sls ( P_F_Doc_Date   In Date     Default Null
   Procedure Pst_Gnr_Expns ( P_F_Doc_Date   In Date     Default Null
   Procedure Pst_Rcpts ( P_F_Doc_Date   In Date     Default Null
   Procedure Pst_Insrnc ( P_F_Doc_Date    In Date     Default Null
   Procedure Pst_Rtrn_Insrnc ( P_F_Doc_Date   In Date     Default Null
   Procedure Pst_Inc_Dcr_Cshr ( P_F_Doc_Date   In Date     Default Null
   Procedure Pst_Invstor_Tickets ( P_F_Doc_Date   In Date     Default Null
CREATE OR REPLACE Package Body Rms_Pst_Jrnl_Pkg As
   Procedure Pst_Dlvry_Sls ( P_F_Doc_Date   In Date     Default Null
C_Sls Is Select Bill_Srl ,
                        From Rms_Bill_Mst
                         Where Rms_Bill_Mst.Bill_Doc_Type = 3 
                           And 1 = (Case When Nvl(Ret_Amt,0) > 0 Then Nvl((Select 1 From Rms_Rt_Bill_Mst Where Bill_Srl = Rms_Bill_Mst.Bill_Srl And Rownum <= 1),0)  Else 1 End)
 Begin    
     Select Nvl(Use_Fltr_Dlvry_Invc,0) Into V_Use_Fltr_Dlvry_Invc From Rms_Para Where RowNum <= 1  ;
         Begin
           Select Ac_Code ,
           From Rms_Emp
            Where Emp_No = I_Sls.Feeder_No 
         Exception
         Begin
           Select A_Code ,
           From User_R
            Where U_Id = I_Sls.Paid_U_Id ;
         Exception
         Begin
             Select Cc_Code ,
              From Rms_Trmnl
               Where Trmnl_No = I_Sls.Trmnl_No ; 
         Exception
         Begin
              Select Nvl(Max(Doc_No),0)+ 1 
              From  Ias_Post_Mst
               Where Doc_Type = 39 ;
         Exception
         If Nvl(I_Sls.Paid_Rcpt_Flg,0) = 0 Then --  Not Payed from reciept
            Begin
                    Select  Round (SUM ((LEAST (NVL (RMS_BILL_MST.PAYED_AMT, 0),
                            - NVL ((SELECT SUM(NET_RT_BILL_AMT) 
                                              FROM RMS_RT_BILL_MST_ALL_VW 
                                             WHERE BILL_SRL = RMS_BILL_MST.BILL_SRL), 0) 
                            + NVL ((SELECT NVL(INSURNC_AMT,0) + NVL(RNT_AMT,0)  
                                      FROM RMS_INSURNC_MST 
                                     WHERE RMS_INSURNC_MST.DOC_SRL_REF = RMS_BILL_MST.BILL_SRL
                      From Rms_Bill_Mst_VW Rms_Bill_Mst
                     Where Bill_Doc_Type = 3
            Exception
            Begin  
               Select Decode(I_Sls.A_Cy,Ias_Gen_Pkg.Get_Local_Cur,0,Nvl(V_Paid_Amt,0))   
               From Dual  ;        
            Exception
         If  Nvl(I_Sls.Paid_Rcpt_Flg,0) = 0 And Abs(Nvl(V_Paid_Amt,0)) >  0 Then --  Not Payed from reciept
         Begin      
         Exception 
         End;  
         If Nvl(I_Sls.Paid_Rcpt_Flg,0) = 0 And Abs(Nvl(V_Paid_Amt,0)) >  0 Then --  Not Payed from reciept
            Begin                    
            Exception 
            End;   
                 Begin                    
                 Exception 
                 End; 
         If  Nvl(I_Sls.Paid_Rcpt_Flg,0) = 0 And Abs(Nvl(V_Paid_Amt,0)) >  0 Then --  Not Payed from reciept
             Begin
             Exception 
             End;  
                 Begin
                 Exception 
                 End;           
         --## Update Pst_Flg 
         Begin
             Update Rms_Bill_Mst 
              Where   Bill_Srl       = I_Sls.Bill_Srl ;        
         Exception 
            Raise_Application_Error (-20006,'Err.When Update Pst_Flg In Rms_Bill_Mst'||Chr(13)||SqlErrm);
         End;      
         --## Update Doc_Post In Posting Tables
         Begin
            Update Ias_Post_Mst
             Where Doc_Ser         = I_Sls.Bill_Srl  ;
         Exception
               Raise_Application_Error (-20007,'Err.When Update Doc_Post In Ias_Post_Mst'||Chr(13)||SqlErrm);
         Begin
            Update Ias_Post_Dtl
             Where Doc_Ser         = I_Sls.Bill_Srl  ;
         Exception
               Raise_Application_Error (-20008,'Err.When Update Doc_Post In Ias_Post_Dtl'||Chr(13)||SqlErrm);
 Procedure Pst_Gnr_Expns ( P_F_Doc_Date   In Date     Default Null
       Cursor C_Expns Is Select  M.Doc_Srl  ,
                            From Rms_Gnr_Expns M 
                             Where Nvl(M.Pst_Flg,0) = 0 
 Begin    
         Begin
             Select Rms_Ac_Code_Expense 
               From Interface_Acc
              Where Brn_No = I_Expns.Brn_No And Rownum <= 1;
         Exception
         End;
         Begin
           Select A_Code ,
           From User_R
            Where U_Id = I_Expns.Ad_U_Id ;
         Exception
         Begin
             Select Cc_Code ,
              From Rms_Trmnl
               Where Trmnl_No = I_Expns.Trmnl_No ; 
         Exception
         Begin      
         Exception 
         End;  
         Begin
         Exception 
         End;          
        Begin                    
        Exception 
        End;                                                                    
        --## Update Pst_Flg 
        Begin
             Update Rms_Gnr_Expns 
              Where   Doc_Srl       = I_Expns.Doc_Srl ;        
        Exception 
            Raise_Application_Error (-20006,'Err.When Update Pst_Flg In Rms_Gnr_Expense'||Chr(13)||SqlErrm);
        End;      
        --## Update Doc_Post In Posting Tables
        Begin
            Update Ias_Post_Mst
             Where Doc_Ser         = I_Expns.Doc_Srl  ;
        Exception
               Raise_Application_Error (-20007,'Err.When Update Doc_Post In Ias_Post_Mst'||Chr(13)||SqlErrm);
         Begin
            Update Ias_Post_Dtl
             Where Doc_Ser         = I_Expns.Doc_Srl  ;
         Exception
               Raise_Application_Error (-20008,'Err.When Update Doc_Post In Ias_Post_Dtl'||Chr(13)||SqlErrm);
 Procedure Pst_Rcpts ( P_F_Doc_Date   In Date     Default Null
       Cursor C_Rcpts Is Select  M.Doc_Srl  ,
                            From Rms_Gnr_Rcpts M 
                             Where Nvl(M.Pst_Flg,0) = 0 
 Begin    
         Begin      
             Select Rms_Ac_Code_Receipt 
               From Interface_Acc
              Where Brn_No = I_Rcpts.Brn_No And Rownum <= 1;
         Exception
         End;
         Begin
           Select A_Code ,
      From User_R
            Where U_Id = I_Rcpts.Ad_U_Id ;
         Exception
               Begin
                    Select Bank_Ac , 2 , Bank_No
                     From Credit_Card_Types
                      Where Cr_Card_No =  I_Rcpts.Cr_Card_No ;
               Exception
         Begin
             Select Cc_Code ,
              From Rms_Trmnl
               Where Trmnl_No = I_Rcpts.Trmnl_No ; 
         Exception
         Begin      
         Exception 
         End;  
         Begin                    
         Exception 
         End;          
         Begin
         Exception 
         End;                                                                    
        --## Update Pst_Flg 
        Begin
             Update Rms_Gnr_Rcpts
              Where   Doc_Srl       = I_Rcpts.Doc_Srl ;        
        Exception 
            Raise_Application_Error (-20006,'Err.When Update Pst_Flg In Rms_Gnr_Expense'||Chr(13)||SqlErrm);
        End;      
        --## Update Doc_Post In Posting Tables
        Begin
            Update Ias_Post_Mst
             Where Doc_Ser         = I_Rcpts.Doc_Srl  ;
        Exception
               Raise_Application_Error (-20007,'Err.When Update Doc_Post In Ias_Post_Mst'||Chr(13)||SqlErrm);
         Begin
            Update Ias_Post_Dtl
             Where Doc_Ser         = I_Rcpts.Doc_Srl  ;
         Exception
               Raise_Application_Error (-20008,'Err.When Update Doc_Post In Ias_Post_Dtl'||Chr(13)||SqlErrm);
Procedure Pst_Inc_Dcr_Cshr ( P_F_Doc_Date   In Date     Default Null
       Cursor C_Jrnls_M Is Select   M.Doc_Srl  ,
                            From Rms_Jrnl_Diff_Cshr_Mst M 
                             Where Nvl(M.Prcss,0) = 0 
    Begin
             Begin      
             Exception 
             End;          
                 Cursor C_Jrnls_D Is Select   M.Doc_Srl  ,
                                        From Rms_Jrnl_Diff_Cshr_Mst M , Rms_Jrnl_Diff_Cshr_Dtl D 
                                         Where M.Doc_Srl   = D.Doc_Srl
             Begin    
                     Begin
                          Select Nvl(Ac_Dtl_Typ,0) 
                          From Account 
                           Where A_Code = I_Jrnls_D.A_Code ;
                     Exception
                     Begin
                         Select Cc_Code ,
                          From Rms_Trmnl
                           Where Trmnl_No = I_Jrnls_D.Trmnl_No ; 
                     Exception
                         Begin                    
                         Exception 
                         End;  
                         Begin
                         Exception 
                         End;
             --## Update Pst_Flg 
             Begin
                 Update Rms_Jrnl_Diff_Cshr_Mst
                  Where   Doc_Srl       = I_Jrnls_M.Doc_Srl ;        
             Exception 
                Raise_Application_Error (-20004,'Err.When Update Prcss In Rms_Jrnl_Diff_Cshr_Mst'||Chr(13)||Sqlerrm);
             End;      
             --## Update Doc_Post In Posting Tables
             Begin
                Update Ias_Post_Mst
                 Where Doc_Ser         = I_Jrnls_M.Doc_Srl  ;
             Exception
                   Raise_Application_Error (-20005,'Err.When Update Doc_Post In Ias_Post_Mst'||Chr(13)||Sqlerrm);
             Begin
                Update Ias_Post_Dtl
                 Where Doc_Ser         = I_Jrnls_M.Doc_Srl  ;
             Exception
                   Raise_Application_Error (-20005,'Err.When Update Doc_Post In Ias_Post_Dtl'||Chr(13)||Sqlerrm);
Procedure Pst_Invstor_Tickets  ( P_F_Doc_Date   In Date     Default Null
       Cursor C_Jrnls_M Is Select M.Bill_Srl  Doc_Srl  ,
                            From Rms_Mrn_Trsm_Vndr_Bill M , Rms_Bill_Mst D 
                             Where M.Bill_Srl = D.Bill_Srl  
    Begin
             Begin      
             Exception 
             End;          
                 Cursor C_Jrnls_D Is Select   M.Bill_Srl Doc_Srl  ,
                                        From Rms_Mrn_Trsm_Vndr_Bill M , Rms_Bill_Mst D 
                                         Where M.Bill_Srl       = D.Bill_Srl
             Begin    
                     Begin
                        Select Vndr_Prcnt
                        From Rms_Mrn_Trsm_Itm
                          Where Itm_Code    = I_Jrnls_D.Itm_Code
                     Exception
                     Begin
                          Select Nvl(Ac_Dtl_Typ,0) 
                          From Account 
                           Where A_Code = I_Jrnls_D.A_Code ;
                     Exception
                     Begin
                         Select Cc_Code ,
                          From Rms_Trmnl
                           Where Trmnl_No = I_Jrnls_D.Trmnl_No ; 
                     Exception
                         Begin
                             Select G_Code 
                             From Ias_Itm_Mst
                              Where I_Code=  I_Jrnls_D.I_Code ;                             
                         Exception When Others Then
                         Begin
                         Exception When Others Then
                         Begin                    
                         Exception 
                         End;  
                         Begin
                             Select Ac_Code_Investor ,
                             From Rms_Mrn_Trsm_Itm
                              where Vndr_Code    = I_Jrnls_D.Ac_Code_Dtl 
                         Exception When Others Then
                         Begin
                             Select V_A_Code 
                             From V_Details
                              where V_Code= I_Jrnls_D.Ac_Code_Dtl ;                             
                         Exception When Others Then
                         Begin
                              Select Nvl(Ac_Dtl_Typ,0) 
                              From Account 
                               Where A_Code = V_Ac_Code_Investor ;
                         Exception
                         Begin
                         Exception 
                         End;
                         Begin
                         Exception 
                         End;
                         Begin
                         Exception 
                         End;
                         Begin
Select  A_Code
From  Ias_Vndr_Accnt 
Where V_Code = I_Jrnls_D.Ac_Code_Dtl
Select  V_A_Code
From  V_Details 
Where V_Code = I_Jrnls_D.Ac_Code_Dtl  ;
                         Exception 
                         End;
                         Begin
                         Exception 
                         End;
             --## Update Pst_Flg 
             Begin
                 Update Rms_Mrn_Trsm_Vndr_Bill
                  Where   Bill_Srl      = I_Jrnls_M.Doc_Srl ;        
             Exception 
                Raise_Application_Error (-20007,'Err.When Update Prcss In Rms_Mrn_Trsm_Vndr_Bill '||Chr(13)||Sqlerrm);
             End;      
             --## Update Doc_Post In Posting Tables
             Begin
                Update Ias_Post_Mst
                 Where Doc_Ser         = I_Jrnls_M.Doc_Srl  ;
             Exception
                   Raise_Application_Error (-20008,'Err.When Update Doc_Post In Ias_Post_Mst'||Chr(13)||Sqlerrm);
             Begin
                Update Ias_Post_Dtl
                 Where Doc_Ser         = I_Jrnls_M.Doc_Srl  ;
             Exception
                   Raise_Application_Error (-20009,'Err.When Update Doc_Post In Ias_Post_Dtl'||Chr(13)||Sqlerrm);
Procedure Pst_Insrnc ( P_F_Doc_Date   In Date     Default Null
       Cursor C_Insrnc Is Select  M.Doc_Srl ,
                            From Rms_Insurnc_Mst M 
                             Where Nvl(M.Pst_Flg,0)       = 0 
 Begin    
         Begin
              Select Nvl(Use_Fltr_Dlvry_Invc,0)
              From Rms_Para Where RowNum  <= 1 ;
         Exception 
         Begin
             Select Rms_Ac_Code_Insurance , Rms_Ac_Code_Rnt
               From Interface_Acc
              Where Brn_No = I_Insrnc.Brn_No And Rownum <= 1;
         Exception
         End;
        Begin
             Select Bill_Type,Bill_Doc_Type,Feeder_No ,Ac_Code ,Ac_Code_Dtl,Ac_Dtl_Typ
               From Rms_Bill_Mst
              Where Bill_Srl = I_Insrnc.Doc_Srl_Ref;
        Exception
                        Raise_Application_Error ( -20002, ' Error when get Feeder No from Rms_Bill_Mst');
         Begin
                   Begin
                        Select Bank_Ac , 2 , Bank_No
                         From Credit_Card_Types
                          Where Cr_Card_No =  V_Cr_Card_No ;
                   Exception
                           Begin
                              Select Bank_Ac , 2 , Bank_No
                               From Credit_Card_Types
                                Where Cr_Card_No =  V_Cr_Card_No_Scnd ;
                           Exception
                               Begin
                                    Select Bank_Ac , 2 , Bank_No
                                     From Credit_Card_Types
                                      Where Cr_Card_No =  V_Cr_Card_No_Thrd ;
                               Exception
              Select Ac_Code,
                From Rms_Emp
               Where Emp_No = V_Feeder_No
               Select A_Code ,
               From User_R
                Where U_Id = Nvl(I_Insrnc.Paid_U_Id,I_Insrnc.Ad_U_Id) ;
         Exception
         Begin
             Select Cc_Code ,
              From Rms_Trmnl
               Where Trmnl_No = I_Insrnc.Trmnl_No ; 
         Exception
         Begin      
         Exception 
         End;  
        Begin                    
        Exception 
        End;                                                           
         Begin
         Exception 
         End;  
                 Begin
                 Exception 
                 End; 
         --## Update Pst_Flg 
         Begin
             Update Rms_Insurnc_Mst 
              Where   Doc_Srl       = I_Insrnc.Doc_Srl ;        
         Exception 
            Raise_Application_Error (-20007,'Err.When Update Pst_Flg In Rms_Insurnc_Mst'||Chr(13)||SqlErrm);
         End;      
         --## Update Doc_Post In Posting Tables
         Begin
            Update Ias_Post_Mst
             Where Doc_Ser         = I_Insrnc.Doc_Srl  ;
         Exception
               Raise_Application_Error (-20008,'Err.When Update Doc_Post In Ias_Post_Mst'||Chr(13)||SqlErrm);
         Begin
            Update Ias_Post_Dtl
             Where Doc_Ser         = I_Insrnc.Doc_Srl  ;
         Exception
               Raise_Application_Error (-20009,'Err.When Update Doc_Post In Ias_Post_Dtl'||Chr(13)||SqlErrm);
 Procedure Pst_Rtrn_Insrnc ( P_F_Doc_Date   In Date     Default Null
       Cursor C_Insrnc Is Select  M.Doc_Srl ,
                            From Rms_Rt_Insurnc_Mst M 
                             Where Nvl(M.Pst_Flg,0) = 0 
 Begin    
         Begin
             Select Rms_Ac_Code_Insurance 
               From Interface_Acc
              Where Brn_No = I_Insrnc.Brn_No And Rownum <= 1;
         Exception
         End;
         Begin
           Select A_Code ,
           From User_R
            Where U_Id = I_Insrnc.Ad_U_Id ;
         Exception
         Begin
             Select Cc_Code ,
              From Rms_Trmnl
               Where Trmnl_No = I_Insrnc.Trmnl_No ; 
         Exception
         Begin      
         Exception 
         End;  
         Begin
         Exception 
         End;          
        Begin                    
        Exception 
        End;                                                                    
        --## Update Pst_Flg 
        Begin
             Update Rms_Rt_Insurnc_Mst 
              Where   Doc_Srl       = I_Insrnc.Doc_Srl ;        
        Exception 
            Raise_Application_Error (-20006,'Err.When Update Pst_Flg In Rms_Insurnc_M'||Chr(13)||SqlErrm);
        End;      
        --## Update Doc_Post In Posting Tables
        Begin
            Update Ias_Post_Mst
             Where Doc_Ser         = I_Insrnc.Doc_Srl  ;
        Exception
               Raise_Application_Error (-20007,'Err.When Update Doc_Post In Ias_Post_Mst'||Chr(13)||SqlErrm);
         Begin
            Update Ias_Post_Dtl
             Where Doc_Ser         = I_Insrnc.Doc_Srl  ;
         Exception
               Raise_Application_Error (-20008,'Err.When Update Doc_Post In Ias_Post_Dtl'||Chr(13)||SqlErrm);
CREATE OR REPLACE Package IAS_Fetch_Data_Pkg Is
PROCEDURE FTCH_DATA_LST_SCR ( SQL_CV      IN OUT T_CV,                                                                    
CREATE OR REPLACE Package Body IAS_Fetch_Data_Pkg is
PROCEDURE FTCH_DATA_LST_SCR ( SQL_CV          IN OUT T_CV,                                                                    
    BEGIN
               'SELECT FLD1,FLD2,FLD3,FLD4,FLD5,FLD6,FLD7,FLD8,FLD9,FLD10,FLD11,FLD12,FLD13,FLD14,FLD15,FLD16,FLD17,FLD18,FLD19,FLD20
                  FROM ('||V_LST_SQL||' '||P_WHR||')
                WHERE UPPER(FLD1||FLD2||FLD3||FLD4||FLD5||FLD6||FLD7||FLD8||FLD9||FLD10||FLD11||FLD12||FLD13||FLD14||FLD15||FLD16||FLD17||FLD18||FLD19||FLD20) 
            ORDER BY '||nvl(P_LST_ORDR,'FLD1');
CREATE OR REPLACE PACKAGE IAS_QT_PRM_PKG
    PROCEDURE IAS_GET_QT_PRM(P_DATE                      IN     DATE,
    PROCEDURE IAS_CALC_QUOT_PRM_PRC(P_DATE            IN DATE,
    PROCEDURE IAS_CALC_QUOT_PRM_SAVE_PRC(P_DOC_SRL         IN NUMBER,
    FUNCTION IAS_GET_QT_PRM_TYPE(P_QT_SER IN NUMBER)
    FUNCTION IAS_GET_QT_PRM_METH
    FUNCTION IAS_GET_QT_PRM_FQTY(P_QT_SER       IN NUMBER,
    FUNCTION CHK_QT_PRM_DISC(P_QT_SER IN NUMBER)
    FUNCTION CHK_QT_PRM_FREE_QTY(P_QT_SER IN NUMBER)
    FUNCTION GET_QUOT_PRICE_FNC(P_BARCODE      IN IAS_ITM_UNT_BARCODE.BARCODE%TYPE,
    PROCEDURE IAS_CLC_QTN_PRM_GRP_PRC(P_DATE            IN DATE,
    PROCEDURE IAS_CLC_QTN_PRM_GRP_SAVE_PRC(P_DOC_SRL         IN NUMBER,
    FUNCTION GET_QT_PRICE_FNC(P_ICODE           IN VARCHAR2, -- ITEM_CODE
    PROCEDURE GET_PRM_GRP_ICODE(P_PRM_GRP_NO          IN     IAS_QUT_PRM_GRP_MST.PRM_GRP_NO%TYPE,
CREATE OR REPLACE PACKAGE BODY IAS_QT_PRM_PKG
    PROCEDURE IAS_GET_QT_PRM(P_DATE                      IN     DATE,
    BEGIN
        SELECT IAS_QUT_PRM_MST.QUOT_NO,
          FROM IAS_QUT_PRM_MST,
         WHERE IAS_QUT_PRM_MST.QUOT_SER = IAS_QUT_PRM_DTL.QUOT_SER
                     AND IAS_QUT_PRM_DTL.WHG_CODE = (SELECT WHG_CODE
                                                       FROM WAREHOUSE_DETAILS
                                                      WHERE W_CODE = P_WCODE
                     AND IAS_QUT_PRM_DTL.CNTRY_NO = (SELECT CNTRY_NO
                                                       FROM WAREHOUSE_DETAILS
                                                      WHERE W_CODE = P_WCODE
                     AND IAS_QUT_PRM_DTL.PROV_NO = (SELECT PROV_NO
                                                      FROM WAREHOUSE_DETAILS
                                                     WHERE W_CODE = P_WCODE
                     AND IAS_QUT_PRM_DTL.CITY_NO = (SELECT CITY_NO
                                                      FROM WAREHOUSE_DETAILS
                                                     WHERE W_CODE = P_WCODE
                     AND IAS_QUT_PRM_DTL.R_CODE = (SELECT R_CODE
                                                     FROM WAREHOUSE_DETAILS
                                                    WHERE W_CODE = P_WCODE
                BEGIN
                    SELECT NVL(SUM(NVL(I_QTY, 0) + NVL(FREE_QTY, 0)), 0)
                      FROM RMS_BILL_DTL
                     WHERE QT_PRM_SER = P_QT_SER
                EXCEPTION
                END;
                    SELECT TRUNC(SUM(CASE
                      FROM IAS_QUT_PRM_MST,
                     WHERE IAS_QUT_PRM_MST.QUOT_SER = IAS_QUT_PRM_DTL.QUOT_SER
                                 AND IAS_QUT_PRM_DTL.WHG_CODE = (SELECT WHG_CODE
                                                                   FROM WAREHOUSE_DETAILS
                                                                  WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.CNTRY_NO = (SELECT CNTRY_NO
                                                                   FROM WAREHOUSE_DETAILS
                                                                  WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.PROV_NO = (SELECT PROV_NO
                                                                  FROM WAREHOUSE_DETAILS
                                                                 WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.CITY_NO = (SELECT CITY_NO
                                                                  FROM WAREHOUSE_DETAILS
                                                                 WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.R_CODE = (SELECT R_CODE
                                                                 FROM WAREHOUSE_DETAILS
                                                                WHERE W_CODE = P_WCODE
                    SELECT   SUM(CASE
                      FROM IAS_QUT_PRM_MST,
                     WHERE IAS_QUT_PRM_MST.QUOT_SER = IAS_QUT_PRM_DTL.QUOT_SER
                                 AND IAS_QUT_PRM_DTL.WHG_CODE = (SELECT WHG_CODE
                                                                   FROM WAREHOUSE_DETAILS
                                                                  WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.CNTRY_NO = (SELECT CNTRY_NO
                                                                   FROM WAREHOUSE_DETAILS
                                                                  WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.PROV_NO = (SELECT PROV_NO
                                                                  FROM WAREHOUSE_DETAILS
                                                                 WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.CITY_NO = (SELECT CITY_NO
                                                                  FROM WAREHOUSE_DETAILS
                                                                 WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.R_CODE = (SELECT R_CODE
                                                                 FROM WAREHOUSE_DETAILS
                                                                WHERE W_CODE = P_WCODE
                    SELECT SUM(CASE WHEN IAS_QUT_PRM_DTL.T_QTY <= P_IQTY THEN (((T_QTY - F_QTY + 1) * NVL(IAS_QUT_PRM_DTL.I_PRICE, 0)) / P_IQTY) WHEN IAS_QUT_PRM_DTL.T_QTY > P_IQTY THEN (((P_IQTY - F_QTY + 1) * NVL(IAS_QUT_PRM_DTL.I_PRICE, 0)) / P_IQTY) END)
                      FROM IAS_QUT_PRM_MST,
                     WHERE IAS_QUT_PRM_MST.QUOT_SER = IAS_QUT_PRM_DTL.QUOT_SER
                                 AND IAS_QUT_PRM_DTL.WHG_CODE = (SELECT WHG_CODE
                                                                   FROM WAREHOUSE_DETAILS
                                                                  WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.CNTRY_NO = (SELECT CNTRY_NO
                                                                   FROM WAREHOUSE_DETAILS
                                                                  WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.PROV_NO = (SELECT PROV_NO
                                                                  FROM WAREHOUSE_DETAILS
                                                                 WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.CITY_NO = (SELECT CITY_NO
                                                                  FROM WAREHOUSE_DETAILS
                                                                 WHERE W_CODE = P_WCODE
                                 AND IAS_QUT_PRM_DTL.R_CODE = (SELECT R_CODE
                                                                 FROM WAREHOUSE_DETAILS
                                                                WHERE W_CODE = P_WCODE
    EXCEPTION
    PROCEDURE IAS_CALC_QUOT_PRM_PRC(P_DATE            IN DATE,
              SELECT DISTINCT M.QUOT_NO,
                FROM IAS_QUT_PRM_MST     M,
               WHERE M.QUOT_SER = D.QUOT_SER
                                   (SELECT 1
                                      FROM IAS_QUT_PRM_GRP_DTL
                                     WHERE PRM_GRP_NO = D.PRM_GRP_NO
                           AND D.WHG_CODE = (SELECT WHG_CODE
                                               FROM WAREHOUSE_DETAILS
                                              WHERE W_CODE = BD.W_CODE
                           AND D.CNTRY_NO = (SELECT CNTRY_NO
                                               FROM WAREHOUSE_DETAILS
                                              WHERE W_CODE = BD.W_CODE
                           AND D.PROV_NO = (SELECT PROV_NO
                                              FROM WAREHOUSE_DETAILS
                                             WHERE W_CODE = BD.W_CODE
                           AND D.CITY_NO = (SELECT CITY_NO
                                              FROM WAREHOUSE_DETAILS
                                             WHERE W_CODE = BD.W_CODE
                           AND D.R_CODE = (SELECT R_CODE
                                             FROM WAREHOUSE_DETAILS
                                            WHERE W_CODE = BD.W_CODE
            GROUP BY M.QUOT_NO,
    BEGIN
        BEGIN
            UPDATE RMS_BILL_DTL_ITM_TMP D
             WHERE --Bill_Srl = P_Doc_Srl
                       (SELECT 1
                          FROM IAS_QUT_PRM_MST
                         WHERE QUOT_SER = D.QT_PRM_SER
        EXCEPTION
        END;
                      SELECT D.I_CODE,
                        FROM RMS_BILL_DTL_ITM_TMP D,
                       WHERE --D.Bill_Srl = P_Doc_Srl
                    ORDER BY DECODE(I.QT_PRM_TYPE, 4, I_PRICE, I_PRICE * -1) ASC,
            BEGIN
                        UPDATE RMS_BILL_DTL_ITM_TMP
                         WHERE --Bill_Srl     = P_Doc_Srl
                        UPDATE RMS_BILL_DTL_ITM_TMP
           WHERE --Bill_Srl     = P_Doc_Srl
            END;
    EXCEPTION
    PROCEDURE IAS_CALC_QUOT_PRM_SAVE_PRC(P_DOC_SRL         IN NUMBER,
              SELECT DISTINCT M.QUOT_NO,
                FROM IAS_QUT_PRM_MST M,
               WHERE M.QUOT_SER = D.QUOT_SER
                                   (SELECT 1
                                      FROM IAS_QUT_PRM_GRP_DTL
                                     WHERE PRM_GRP_NO = D.PRM_GRP_NO
                           AND D.WHG_CODE = (SELECT WHG_CODE
                                               FROM WAREHOUSE_DETAILS
                                              WHERE W_CODE = BD.W_CODE
                           AND D.CNTRY_NO = (SELECT CNTRY_NO
                                               FROM WAREHOUSE_DETAILS
                                              WHERE W_CODE = BD.W_CODE
                           AND D.PROV_NO = (SELECT PROV_NO
                                              FROM WAREHOUSE_DETAILS
                                             WHERE W_CODE = BD.W_CODE
                           AND D.CITY_NO = (SELECT CITY_NO
                                              FROM WAREHOUSE_DETAILS
                                             WHERE W_CODE = BD.W_CODE
                           AND D.R_CODE = (SELECT R_CODE
                                             FROM WAREHOUSE_DETAILS
                                            WHERE W_CODE = BD.W_CODE
            GROUP BY M.QUOT_NO,
    BEGIN
        BEGIN
            UPDATE RMS_BILL_DTL D
             WHERE BILL_SRL = P_DOC_SRL
                       (SELECT 1
                          FROM IAS_QUT_PRM_MST
                         WHERE QUOT_SER = D.QT_PRM_SER
        EXCEPTION
        END;
                      SELECT D.I_CODE, D.I_QTY, D.I_PRICE, D.RCRD_NO
                        FROM RMS_BILL_DTL   D,
                       WHERE D.BILL_SRL = P_DOC_SRL
                    ORDER BY DECODE(I.QT_PRM_TYPE, 4, I_PRICE, I_PRICE * -1) ASC,
            BEGIN
                        UPDATE RMS_BILL_DTL
                         WHERE BILL_SRL = P_DOC_SRL
                        UPDATE RMS_BILL_DTL
                         WHERE BILL_SRL = P_DOC_SRL
            END;
        BEGIN
            UPDATE RMS_BILL_MST
               SET DISC_AMT_DTL = (SELECT ROUND(NVL(SUM(I_QTY * DIS_AMT_DTL), 0), P_NO_OF_DCML)
                                     FROM RMS_BILL_DTL
                                    WHERE BILL_SRL = P_DOC_SRL),
                   DISC_AMT = ROUND(  NVL((SELECT ROUND(NVL(SUM(I_QTY * DIS_AMT_DTL), 0), P_NO_OF_DCML)
                                             FROM RMS_BILL_DTL
                                            WHERE BILL_SRL = P_DOC_SRL),
             WHERE BILL_SRL = P_DOC_SRL;
        EXCEPTION
        END;
    EXCEPTION
    FUNCTION IAS_GET_QT_PRM_TYPE(P_QT_SER IN NUMBER)
    BEGIN
        SELECT QT_PRM_TYPE
          FROM IAS_QUT_PRM_MST
         WHERE QUOT_SER = P_QT_SER
    EXCEPTION
    FUNCTION IAS_GET_QT_PRM_METHOD(P_QT_SER IN NUMBER)
    BEGIN
        SELECT QT_PRM_METHOD
          FROM IAS_QUT_PRM_MST
         WHERE QUOT_SER = P_QT_SER
    EXCEPTION
    FUNCTION IAS_GET_QT_PRM_FQTY(P_QT_SER       IN NUMBER,
    BEGIN
            SELECT FREE_QTY
              FROM IAS_QUT_PRM_DTL
             WHERE QUOT_SER = P_QT_SER
                SELECT FREE_QTY
                  FROM IAS_QUT_PRM_SUB_DTL
                 WHERE QUOT_SER = P_QT_SER
    EXCEPTION
    FUNCTION CHK_QT_PRM_DISC(P_QT_SER IN NUMBER)
    BEGIN
            SELECT DISC_AMT_PER
              FROM IAS_QUT_PRM_DTL
             WHERE QUOT_SER = P_QT_SER
    EXCEPTION
    FUNCTION CHK_QT_PRM_FREE_QTY(P_QT_SER IN NUMBER)
    BEGIN
            SELECT FREE_QTY
              FROM IAS_QUT_PRM_DTL
             WHERE QUOT_SER = P_QT_SER
                SELECT FREE_QTY
                  FROM IAS_QUT_PRM_SUB_DTL
                 WHERE QUOT_SER = P_QT_SER
    EXCEPTION
    FUNCTION GET_QUOT_PRICE_FNC(P_BARCODE      IN IAS_ITM_UNT_BARCODE.BARCODE%TYPE,
    BEGIN
        BEGIN
            SELECT I_CODE, ITM_UNT, EXPIRE_DATE, BATCH_NO
              FROM IAS_ITM_UNT_BARCODE
             WHERE BARCODE = P_BARCODE
        EXCEPTION
        END;
            BEGIN
                SELECT I_CODE
                  FROM IAS_ITM_DTL
                 WHERE IAS_ITM_DTL.SALE_UNIT = 1
            EXCEPTION
            END;
        SELECT (NVL(IAS_QUT_PRM_DTL.I_PRICE, 0) * NVL(ROUND(IAS_GEN_PKG.GET_CUR_RATE(IAS_QUT_PRM_MST.QUOT_CUR) / IAS_GEN_PKG.GET_CUR_RATE(P_ACY => IAS_QUT_PRM_MST.QUOT_CUR), P_NO_OF_DCML), 0)) V_PRICE
          FROM IAS_QUT_PRM_MST,
         WHERE IAS_QUT_PRM_MST.QUOT_SER = IAS_QUT_PRM_DTL.QUOT_SER
    EXCEPTION
    PROCEDURE IAS_CLC_QTN_PRM_GRP_PRC(P_DATE            IN DATE,
              SELECT DISTINCT M.QUOT_NO,
                FROM IAS_QUT_PRM_MST     M,
               WHERE M.QUOT_SER = D.QUOT_SER
                           AND D.WHG_CODE = (SELECT WHG_CODE
                                               FROM WAREHOUSE_DETAILS
                                              WHERE W_CODE = BD.W_CODE
                           AND D.CNTRY_NO = (SELECT CNTRY_NO
                                               FROM WAREHOUSE_DETAILS
                                              WHERE W_CODE = BD.W_CODE
                           AND D.PROV_NO = (SELECT PROV_NO
                                              FROM WAREHOUSE_DETAILS
                                             WHERE W_CODE = BD.W_CODE
                           AND D.CITY_NO = (SELECT CITY_NO
                                              FROM WAREHOUSE_DETAILS
                                             WHERE W_CODE = BD.W_CODE
                           AND D.R_CODE = (SELECT R_CODE
                                             FROM WAREHOUSE_DETAILS
                                            WHERE W_CODE = BD.W_CODE
            GROUP BY M.QUOT_NO,
    BEGIN
        BEGIN
            UPDATE RMS_BILL_DTL_ITM_TMP D
             WHERE QT_PRM_SER IS NOT NULL
                       (SELECT 1
                          FROM IAS_QUT_PRM_MST
                         WHERE QUOT_SER = D.QT_PRM_SER
            UPDATE RMS_BILL_DTL_ITM_TMP D
             WHERE QT_PRM_SER IS NOT NULL
                       (SELECT 1
                          FROM IAS_QUT_PRM_MST
                         WHERE QUOT_SER = D.QT_PRM_SER
        EXCEPTION
        END;
                    BEGIN
                        SELECT 1
                          FROM (  SELECT I_CODE, ITM_UNT, SUM(I_QTY)
                                    FROM (SELECT I_CODE, ITM_UNT, NVL(I_QTY, 0) I_QTY
                                            FROM IAS_QUT_PRM_GRP_DTL
                                           WHERE PRM_GRP_NO = I.PRM_GRP_NO
                                            SELECT I_CODE, ITM_UNT, SUM(NVL(I_QTY, 0)) * -1 I_QTY
                                              FROM RMS_BILL_DTL_ITM_TMP
                                          GROUP BY I_CODE,
                                GROUP BY I_CODE,
                         WHERE ROWNUM <= 1;
                    EXCEPTION
                    END;
                                  SELECT D.I_CODE,
                                    FROM RMS_BILL_DTL_ITM_TMP D,
                                   WHERE D.I_CODE = G.I_CODE
                                ORDER BY D.RCRD_NO;
                        BEGIN
                                    UPDATE RMS_BILL_DTL_ITM_TMP
                                     WHERE I_CODE = J.I_CODE
                                    BEGIN
                                        SELECT MAX(RCRD_NO) INTO V_RCRD_NO FROM RMS_BILL_DTL_ITM_TMP;
                                    EXCEPTION
                                    END;
                                    BEGIN
                                        SELECT 1
                                          FROM RMS_BILL_DTL_ITM_TMP
                                         WHERE I_CODE = V_QT_I_CODE
                                    EXCEPTION
                                    END;
                                        INSERT INTO RMS_BILL_DTL_ITM_TMP(BILL_DOC_TYPE,
                                        UPDATE RMS_BILL_DTL_ITM_TMP
                                         WHERE I_CODE = V_QT_I_CODE
                        END;
                              SELECT D.I_CODE,
                                FROM RMS_BILL_DTL_ITM_TMP D,
                               WHERE D.I_CODE = G.I_CODE
                            ORDER BY D.RCRD_NO;
                    BEGIN
                                UPDATE RMS_BILL_DTL_ITM_TMP
                                 WHERE I_CODE = J.I_CODE
                                BEGIN
                                    SELECT 1
                                      FROM RMS_BILL_DTL_ITM_TMP
                                     WHERE I_CODE = V_QT_I_CODE
                                EXCEPTION
                                END;
                                    INSERT INTO RMS_BILL_DTL_ITM_TMP(BILL_DOC_TYPE,
                                    UPDATE RMS_BILL_DTL_ITM_TMP
                                     WHERE I_CODE = V_QT_I_CODE
                    END;
                        SELECT   SUM(CASE
                          FROM IAS_QUT_PRM_MST  M,
                         WHERE M.QUOT_SER = D.QUOT_SER
                        BEGIN
                            SELECT DECODE(DISC_TYPE, 1, DISC_AMT_PER), DECODE(DISC_TYPE, 2, DISC_AMT_PER)
                              FROM IAS_QUT_PRM_MST  M,
                             WHERE M.QUOT_SER = D.QUOT_SER
                        EXCEPTION
                        END;
                    UPDATE RMS_BILL_DTL_ITM_TMP A
                     WHERE EXISTS
                               (SELECT 1
                                  FROM IAS_QUT_PRM_GRP_DTL
                                 WHERE I_CODE = A.I_CODE
                    BEGIN
                        SELECT TRUNC(SUM(CASE
                          FROM IAS_QUT_PRM_MST  M,
                         WHERE M.QUOT_SER = D.QUOT_SER
                    EXCEPTION
                    END;
                    BEGIN
                        SELECT W_CODE
                          FROM RMS_BILL_DTL_ITM_TMP
                         WHERE W_CODE IS NOT NULL
                    EXCEPTION
                    END;
                    BEGIN
                        SELECT 1
                          FROM RMS_BILL_DTL_ITM_TMP
                         WHERE I_CODE = V_QT_I_CODE
                    EXCEPTION
                    END;
                        INSERT INTO RMS_BILL_DTL_ITM_TMP(BILL_DOC_TYPE,
                        UPDATE RMS_BILL_DTL_ITM_TMP
                         WHERE I_CODE = V_QT_I_CODE
    EXCEPTION
    PROCEDURE IAS_CLC_QTN_PRM_GRP_SAVE_PRC(P_DOC_SRL         IN NUMBER,
              SELECT DISTINCT M.QUOT_NO,
                FROM IAS_QUT_PRM_MST    M,
               WHERE M.QUOT_SER = D.QUOT_SER
                           AND D.WHG_CODE = (SELECT WHG_CODE
                                               FROM WAREHOUSE_DETAILS
                                              WHERE W_CODE = BD.W_CODE
                           AND D.CNTRY_NO = (SELECT CNTRY_NO
                                               FROM WAREHOUSE_DETAILS
                                              WHERE W_CODE = BD.W_CODE
                           AND D.PROV_NO = (SELECT PROV_NO
                                              FROM WAREHOUSE_DETAILS
                                             WHERE W_CODE = BD.W_CODE
                           AND D.CITY_NO = (SELECT CITY_NO
                                              FROM WAREHOUSE_DETAILS
                                             WHERE W_CODE = BD.W_CODE
                           AND D.R_CODE = (SELECT R_CODE
                                             FROM WAREHOUSE_DETAILS
                                            WHERE W_CODE = BD.W_CODE
            GROUP BY M.QUOT_NO,
    BEGIN
        BEGIN
            UPDATE RMS_BILL_DTL D
             WHERE BILL_SRL = P_DOC_SRL
                       (SELECT 1
                          FROM IAS_QUT_PRM_MST
                         WHERE QUOT_SER = D.QT_PRM_SER
        EXCEPTION
        END;
                    BEGIN
                        SELECT 1
                          FROM (  SELECT I_CODE, ITM_UNT, SUM(I_QTY)
                                    FROM (SELECT I_CODE, ITM_UNT, NVL(I_QTY, 0) I_QTY
                                            FROM IAS_QUT_PRM_GRP_DTL
                                           WHERE PRM_GRP_NO = I.PRM_GRP_NO
                                            SELECT I_CODE, ITM_UNT, SUM(NVL(I_QTY, 0)) * -1 I_QTY
                                              FROM RMS_BILL_DTL
                                             WHERE BILL_SRL = P_DOC_SRL
                                          GROUP BY I_CODE,
                                GROUP BY I_CODE,
                         WHERE ROWNUM <= 1;
                    EXCEPTION
                    END;
                                  SELECT D.I_CODE, D.I_PRICE, D.RCRD_NO
                                    FROM RMS_BILL_DTL       D,
                                   WHERE D.BILL_SRL = P_DOC_SRL
                                ORDER BY D.RCRD_NO;
                        BEGIN
                                UPDATE RMS_BILL_DTL
                                 WHERE BILL_SRL = P_DOC_SRL
                        END;
                              SELECT D.I_CODE, D.I_PRICE, D.RCRD_NO
                                FROM RMS_BILL_DTL       D,
                               WHERE D.BILL_SRL = P_DOC_SRL
                            ORDER BY D.RCRD_NO;
                    BEGIN
                            UPDATE RMS_BILL_DTL
                             WHERE BILL_SRL = P_DOC_SRL
                    END;
                    SELECT   SUM(CASE
                      FROM IAS_QUT_PRM_MST  M,
                     WHERE M.QUOT_SER = D.QUOT_SER
                    BEGIN
                        SELECT DECODE(DISC_TYPE, 1, DISC_AMT_PER), DECODE(DISC_TYPE, 2, DISC_AMT_PER)
                          FROM IAS_QUT_PRM_MST  M,
                         WHERE M.QUOT_SER = D.QUOT_SER
                    EXCEPTION
                    END;
                UPDATE RMS_BILL_DTL A
                 WHERE A.BILL_SRL = P_DOC_SRL
                           (SELECT 1
                              FROM IAS_QUT_PRM_GRP_DTL
                             WHERE I_CODE = A.I_CODE
    EXCEPTION
    FUNCTION GET_QT_PRICE_FNC(P_ICODE           IN VARCHAR2, -- ITEM_CODE
    BEGIN
        BEGIN
            SELECT I_CODE, ITM_UNT, EXPIRE_DATE, BATCH_NO
              FROM IAS_ITM_UNT_BARCODE
             WHERE BARCODE = P_ICODE
        EXCEPTION
        END;
            BEGIN
                SELECT I_CODE
                  FROM IAS_ITM_DTL
                 WHERE IAS_ITM_DTL.SALE_UNIT = 1
            EXCEPTION
            END;
        BEGIN
            SELECT (NVL(IAS_QUT_PRM_DTL.I_PRICE, 0) * NVL(ROUND(IAS_GEN_PKG.GET_CUR_RATE(IAS_QUT_PRM_MST.QUOT_CUR) / P_BILL_RATE, P_NO_OF_DCML), 0)) V_PRICE
              FROM IAS_QUT_PRM_MST,
             WHERE IAS_QUT_PRM_MST.QUOT_SER = IAS_QUT_PRM_DTL.QUOT_SER
        EXCEPTION
        END;
            BEGIN
                SELECT PRICE_TYPE
                  FROM IAS_PARA_INV
                 WHERE ROWNUM <= 1;
            EXCEPTION
            END;
            SELECT SUM(DECODE(A_CY,  P_ACY, I_PRICE,  V_STK_CUR, ((I_PRICE * V_STK_RATE) / P_BILL_RATE),  V_LOC_CUR, (I_PRICE / P_BILL_RATE),  ((I_PRICE * CUR_RATE) / P_BILL_RATE)))
              FROM IAS_PRICING_LEVELS,
             WHERE IAS_PRICING_LEVELS.LEV_NO = IAS_ITEM_PRICE.LEV_NO
    EXCEPTION
    PROCEDURE GET_PRM_GRP_ICODE(P_PRM_GRP_NO          IN     IAS_QUT_PRM_GRP_MST.PRM_GRP_NO%TYPE,
    BEGIN
            SELECT I_CODE, ITM_UNT
              FROM (  SELECT B.I_CODE, B.ITM_UNT, SUM(NVL(B.I_QTY, 0) * NVL(B.I_PRICE, 0)) TOTAL
                        FROM RMS_BILL_DTL_ITM_TMP B,
                       WHERE B.I_CODE = G.I_CODE
                    GROUP BY B.I_CODE,
                    ORDER BY TOTAL DESC)
             WHERE ROWNUM <= 1;
            SELECT I_CODE, ITM_UNT
              FROM (  SELECT B.I_CODE, B.ITM_UNT, SUM(NVL(B.I_QTY, 0) * NVL(B.I_PRICE, 0)) TOTAL
                        FROM RMS_BILL_DTL_ITM_TMP B,
                       WHERE B.I_CODE = G.I_CODE
                    GROUP BY B.I_CODE,
                    ORDER BY TOTAL ASC)
             WHERE ROWNUM <= 1;
            SELECT I_CODE, ITM_UNT
              FROM (  SEL
                        FROM RMS_BILL_DTL_ITM_TMP B,
                       WHERE B.I_CODE = G.I_CODE
                    ORDER BY B.RCRD_NO ASC)
             WHERE ROWNUM <= 1;
    EXCEPTION
CREATE OR REPLACE PACKAGE RMS_SNPSHT_PKG AS
  FUNCTION   CHK_MATCH_FLDS  (P_TBL_NM   VARCHAR2,P_USR_RMT   VARCHAR2 ,P_MV_NM  VARCHAR2 ,P_USR_MV  VARCHAR2,P_LNK_NM  VARCHAR2) RETURN BOOLEAN;
  FUNCTION   GET_FLDS_TBL    (P_TBL_NM   VARCHAR2,P_USR_RMT   VARCHAR2 ,P_LNK_NM  VARCHAR2) RETURN VARCHAR2;
  PROCEDURE  ADD_MINUS_FLDS  (P_TAB_NM  VARCHAR2,P_COL_NM  VARCHAR2,P_USR_RMT VARCHAR2,P_LNK_NM  VARCHAR2,P_USR_MV VARCHAR2,P_MV_NM VARCHAR2) ;
  PROCEDURE  MVIEW_EDIT      (P_USR_MV   VARCHAR2 );
CREATE OR REPLACE PACKAGE BODY RMS_SNPSHT_PKG AS
   FUNCTION   CHK_MATCH_FLDS  (P_TBL_NM   VARCHAR2,P_USR_RMT   VARCHAR2 ,P_MV_NM  VARCHAR2 ,P_USR_MV  VARCHAR2,P_LNK_NM  VARCHAR2) RETURN BOOLEAN IS
   BEGIN
     EXECUTE  IMMEDIATE  ' SELECT COUNT(1) FROM ALL_TAB_COLS'||P_LNK_NM||' WHERE  TABLE_NAME=:B1  AND OWNER=:B2 ' INTO V_CNT_COL_TAB USING P_TBL_NM,P_USR_RMT ;
     EXECUTE  IMMEDIATE  ' SELECT COUNT(1) FROM ALL_TAB_COLS WHERE  TABLE_NAME=:B1  AND OWNER=:B2 ' INTO V_CNT_COL_MV USING P_MV_NM,P_USR_MV ;
  FUNCTION  GET_FLDS_TBL    (P_TBL_NM   VARCHAR2,P_USR_RMT   VARCHAR2 ,P_LNK_NM  VARCHAR2) RETURN VARCHAR2 IS
  BEGIN                                                          
    OPEN C_REF FOR ' SELECT COLUMN_NAME FROM ALL_TAB_COLS'||P_LNK_NM||' WHERE OWNER='||''''||P_USR_RMT||''''||
                                                                      ' AND TABLE_NAME='||''''||P_TBL_NM||''''||' ORDER BY COLUMN_ID';
  PROCEDURE   ADD_MINUS_FLDS  (P_TAB_NM  VARCHAR2,P_COL_NM  VARCHAR2,P_USR_RMT VARCHAR2,P_LNK_NM  VARCHAR2,P_USR_MV VARCHAR2,P_MV_NM VARCHAR2) IS
    BEGIN
      EXECUTE IMMEDIATE ' SELECT DATA_TYPE       ,
                          FROM ALL_TAB_COLS'||P_LNK_NM||
                       '  WHERE TABLE_NAME='||''''||UPPER(P_TAB_NM)||''''||
      V_CRT_COL:='ALTER TABLE '||P_USR_MV||'.'||P_MV_NM||' ADD '||P_COL_NM||' ';
  EXCEPTION
  PROCEDURE  MVIEW_EDIT     (P_USR_MV   VARCHAR2 ) IS
       CURSOR C_MV IS SELECT  NAME MV_NM,
                      FROM  ALL_SNAPSHOTS  
                      WHERE OWNER = P_USR_MV;
  BEGIN
        BEGIN
          OPEN C_REF FOR ' SELECT COLUMN_NAME   FROM  ALL_TAB_COLS'||UPPER(R_MV.LNK_RMT)||'  WHERE TABLE_NAME='||''''||UPPER(R_MV.TBL_RMT)||''''||'  AND OWNER='||''''||UPPER(R_MV.USR_RMT)||''''||
                           SELECT COLUMN_NAME   FROM  ALL_TAB_COLS  WHERE TABLE_NAME='||''''||UPPER(R_MV.MV_NM)||''''||' AND OWNER='||''''||UPPER(P_USR_MV)||'''';
             EXECUTE IMMEDIATE 'UPDATE SYS.SNAP$ SET  QUERY_TXT='||''''||'SELECT '||GET_FLDS_TBL(R_MV.TBL_RMT,R_MV.USR_RMT,R_MV.LNK_RMT)||
                                                                         ' FROM '||R_MV.USR_RMT||'.'||R_MV.TBL_RMT||R_MV.LNK_RMT||''''||
                               ' WHERE VNAME='||''''||R_MV.MV_NM||''''||' AND SOWNER='||''''||P_USR_MV||'''';                      
             EXECUTE IMMEDIATE 'UPDATE SYS.SNAP$ 
                                    SET  QUERY_LEN=LENGTH('||''''||'SELECT '||GET_FLDS_TBL(R_MV.TBL_RMT,R_MV.USR_RMT,R_MV.LNK_RMT)||
                                                           ' FROM '||R_MV.USR_RMT||'.'||R_MV.TBL_RMT||R_MV.LNK_RMT||''''||')'||
                                 '  WHERE VNAME='||''''||R_MV.MV_NM||''''||' AND SOWNER='||''''||P_USR_MV||'''';
             EXECUTE IMMEDIATE 'BEGIN   DBMS_SNAPSHOT.REFRESH('||''''||P_USR_MV||'.'||R_MV.MV_NM||''''||','||''''||'F'||''''||'); END;';
        EXCEPTION
CREATE OR REPLACE Package RMS_Inv_Pkg Is    
  Procedure Insrt_Detail_Inv_Sub_To_Main (P_Yr_Br In Varchar2,P_Db_Link In Varchar2);
  Procedure Insrt_Machine_Dtl_Sub_To_Main(P_Yr_Br In Varchar2,P_Db_Link In Varchar2);    
CREATE OR REPLACE Package Body RMS_Inv_Pkg Is
Procedure Insrt_Detail_Inv_Sub_To_Main(P_Yr_Br In Varchar2,P_Db_Link In Varchar2)  Is
     Cursor C_Master_Inv_Mst Is Select  Inv_Ser,Inv_No, Inv_Type ,Inv_Date, Inv_Desc, 
                                  From Master_Inv
                                    Where Exists(Select 1 From Ias_Master_Inv_Tmp
                                                Where Ias_Master_Inv_Tmp.Inv_Ser =  Master_Inv.Inv_Ser)
                                   Order By Inv_Type , Inv_No ;   
 Begin
        Begin
         Execute Immediate ' Select 1 From '||p_yr_br||'.Master_Inv@'||P_Db_Link||'
            Where Inv_Ser ='|| I.Inv_Ser 
        Exception
          Raise_Application_Error(-20001,'Error When Read Inv Data From Headoffice'||Chr(13)||SqlErrm);
         Begin
          Select Man_Inv_Serail
          From Ias_Para_Inv ;
         Exception
         Execute Immediate ' Select Nvl(Max(Inv_No),0) + 1
            From '||p_yr_br||'.Master_Inv@'||P_Db_Link
         Execute Immediate ' Select Nvl(Max(Inv_No),0) + 1
            From '||p_yr_br||'.Master_Inv@'||P_Db_Link||' Where Inv_Type = '|| I.Inv_Type 
        Begin
          Execute Immediate 'Insert Into '||p_yr_br||'.Master_Inv@'||P_Db_Link||'(
                              Select Inv_Type ,'||V_Inv_No||', '||V_Inv_Ser||',Inv_Date, Inv_Desc||'||I.Inv_no||', 
                                 From Master_Inv
                                   Where  Inv_No   = '||I.Inv_No ||'
        Exception
            Raise_Application_Error(-20002,'Error When Insert Into Master_Inv'||Chr(13)||SqlErrm);   
       Begin 
           Execute Immediate 'Insert Into '||p_yr_br||'.Detail_Inv@'||P_Db_Link||'(
                               Select Inv_Type,'||V_Inv_No||','||V_Inv_Ser||', I_Code, Itm_Unt, 
                                 From Detail_Inv
                                  Where Inv_No   = '||I.Inv_No||'
       Exception
         Raise_Application_Error(-20003,'Error When Insert Into Detail_Inv'||Chr(13)||SqlErrm);
    Begin
       Update Master_Inv
          Where Exists(Select 1 From Ias_Master_Inv_Tmp
                        Where Ias_Master_Inv_Tmp.Inv_Ser =  Master_Inv.Inv_Ser) ;
    Exception
       Raise_Application_Error(-20004,'Error When Update  External_POST In Master_Inv'||Chr(13)||SqlErrm); 
Procedure Insrt_Machine_Dtl_Sub_To_Main(P_Yr_Br In Varchar2,P_Db_Link In Varchar2) Is
     Cursor C_Inv_Machine_Mst Is Select  Inv_Ser,Inv_No, Inv_Type ,Inv_Date, Inv_Desc, 
                                  From Ias_Inv_Machine_Mst
                                    Where Exists(Select 1 From Ias_Inv_Machine_Mst_Tmp
                                                Where Ias_Inv_Machine_Mst_Tmp.Inv_Ser =  Ias_Inv_Machine_Mst.Inv_Ser)
                       Order By Inv_Type,Inv_No ;   
 Begin
        Begin
         Execute Immediate ' Select 1 From '||p_yr_br||'.Ias_Inv_Machine_Mst@'||P_Db_Link||
            Where Inv_Ser ='|| I.Inv_Ser 
        Exception
          Raise_Application_Error(-20001,'Error When Read Inv Data From Headoffice'||Chr(13)||SqlErrm);
         Begin
          Select Man_Inv_Serail
          From Ias_Para_Inv ;
         Exception
         Execute Immediate ' Select Nvl(Max(Inv_No),0) + 1
            From '||p_yr_br||'.Ias_Inv_Machine_Mst@'||P_Db_Link
         Execute Immediate ' Select Nvl(Max(Inv_No),0) + 1
            From '||p_yr_br||'.Ias_Inv_Machine_Mst@'||P_Db_Link||' Where Inv_Type = '||I.Inv_Type 
        Begin
          Execute Immediate 'Insert Into '||p_yr_br||'.Ias_Inv_Machine_Mst@'||P_Db_Link||'(
                              Select Inv_Type ,'||V_Inv_No||', '||V_Inv_Ser||',Inv_Date, Inv_Desc||'||I.Inv_no||', 
                                 From Ias_Inv_Machine_Mst
                                   Where  Inv_No   = '||I.Inv_No ||' 
        Exception
            Raise_Application_Error(-20002,'Error When Insert Into Ias_Inv_Machine_Mst'||Chr(13)||SqlErrm);   
       Begin 
           Execute Immediate 'Insert Into '||p_yr_br||'.Ias_Inv_Machine_Dtl@'||P_Db_Link||'(
               Select Inv_Type,'||V_Inv_No||','||V_Inv_Ser||', I_Code, Itm_Unt, 
                                 From Ias_Inv_Machine_Dtl
                                  Where Inv_No   = '||I.Inv_No||' 
       Exception
         Raise_Application_Error(-20003,'Error When Insert Into Ias_Inv_Machine_Dtl'||Chr(13)||SqlErrm);
    Begin
       Update Ias_Inv_Machine_Mst
          Where Exists(Select 1 From Ias_Inv_Machine_Mst_Tmp
                        Where Ias_Inv_Machine_Mst_Tmp.Inv_Ser =  Ias_Inv_Machine_Mst.Inv_Ser) ;
    Exception
       Raise_Application_Error(-20004,'Error When Update  External_POST In Ias_Inv_Machine_Mst'||Chr(13)||SqlErrm); 
CREATE OR REPLACE Package Ias_Doc_Serial_Pkg As 
 FUNCTION Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
 FUNCTION Machine_Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
FUNCTION Request_Out_Trnsfr_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                     ,
CREATE OR REPLACE Package Body Ias_Doc_Serial_Pkg As 
 FUNCTION Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
      Begin
        Select Nvl(Max(Inv_No),0)+1  
          From Master_Inv 
           Where Brn_No     = P_Brn_No ;
      Exception
      Begin
        Select Nvl(Max(Inv_No),0)+1  
          From Master_Inv 
           Where Brn_No   = P_Brn_No
      Exception
 FUNCTION Machine_Man_Inv_Serial( P_Brn_No    In  S_Brn.Brn_No%Type                 ,
  Begin
      Begin
        Select Nvl(Max(Inv_No),0)+1  
          From Ias_Inv_Machine_Mst 
           Where Brn_No     = P_Brn_No ;
      Exception
      Begin
        Select Nvl(Max(Inv_No),0)+1  
          From Ias_Inv_Machine_Mst 
           Where Brn_No   = P_Brn_No
      Exception
 FUNCTION Request_Out_Trnsfr_Serial(P_Brn_No    In  S_Brn.Brn_No%Type                     ,
  Begin
        Begin
         Select Nvl(Max(Out_Req_No),0)+1  
            From Ias_Out_Request_Mst
             Where Brn_No = P_Brn_No  ;
        Exception
         Begin
           Select Nvl(Max(Out_Req_No),0)+1  
           From Ias_Out_Request_Mst
            Where Brn_No       = P_Brn_No
         Exception
         Begin
           Select Nvl(Max(Out_Req_No),0)+1  
           From Ias_Out_Request_Mst
            Where Brn_No       = P_Brn_No
                  (Select W_Code From Warehouse_Details
                    Where Nvl(W_Ser,0)=( Select Nvl(W_Ser,0) 
                                          From Warehouse_Details 
                                           Where W_Code = P_W_Code) ) ;
         Exception
         Begin
           Select Nvl(Max(Out_Req_No),0)+1  
           From Ias_Out_Request_Mst
            Where Brn_No       = P_Brn_No
         Exception
CREATE OR REPLACE PACKAGE IAS_AUD_SYS_PKG AS
 PROCEDURE GET_COL_PK ( P_TAB_NM IN VARCHAR2 , V_COL_NM1 OUT VARCHAR2, V_COL_NM2 OUT VARCHAR2,V_COL_NM3 OUT VARCHAR2 ) ;
 FUNCTION Get_Aud_Cols_Fnc  ( P_Tab IN VARCHAR2) RETURN VARCHAR2 ;
 FUNCTION Get_Aud_Cols_Fnc2 ( P_Tab IN VARCHAR2) RETURN VARCHAR2 ;
 PROCEDURE SET_PARA( P_FRM_NO     IN NUMBER,
 PROCEDURE ADD_HIST( P_OPR_TYPE  IN NUMBER,
 PROCEDURE ADD_DOC_DEL (   P_FORM_NO      IN NUMBER, 
CREATE OR REPLACE PACKAGE BODY IAS_AUD_SYS_PKG AS
PROCEDURE GET_COL_PK ( P_TAB_NM IN VARCHAR2 , V_COL_NM1 OUT VARCHAR2, V_COL_NM2 OUT VARCHAR2,V_COL_NM3 OUT VARCHAR2 ) IS
   Select B.Column_Name  
     From User_Constraints A, User_Cons_Columns B
  Where A.Owner=B.Owner
FUNCTION Get_Aud_Cols_Fnc ( P_Tab In Varchar2) RETURN VARCHAR2 IS
  Cursor Tb Is Select Table_name,column_name From Tab,User_Tab_Cols --User_Tables 
     Where Tab.Tname = User_Tab_Cols.Table_name
     Order by Table_name,column_name,column_id;
 Exception     
FUNCTION Get_Aud_Cols_Fnc2 ( P_Tab In Varchar2) RETURN VARCHAR2 IS
  Cursor Tb Is Select Table_name,column_name From Tab,User_Tab_Cols --User_
     Where Tab.Tname = User_Tab_Cols.Table_name
     Order by Table_name,column_name,column_id;
 Exception     
PROCEDURE SET_PARA( P_FRM_NO     IN NUMBER,
PROCEDURE ADD_HIST( P_OPR_TYPE  IN NUMBER,
   Insert Into IAS_AUD_HIST ( OPR_TYPE, 
Exception 
 PROCEDURE ADD_DOC_DEL (   P_FORM_NO      IN NUMBER, 
   Insert Into Ias_Doc_Del (   FORM_NO, 
Exception 
CREATE OR REPLACE FUNCTION Ias_Get_Doc_Del_Fnc ( P_Brn_No      In S_Brn.Brn_No%Type     ,
   V_Cnt := Ias_gen_Pkg.Get_Cnt('Select 1 From Ias_Doc_Del
                                  Where Brn_No   = '||P_Brn_No||'
       P_Whr := ' And Cc_Code In ( Select Cc_Code From Cost_Centers
                               Where Nvl(C_Sr,0)=(Select Nvl(C_Sr,0) 
                                                      From Cost_Centers 
                                                    where Cc_Code='''||P_Cc_code||'''))';  
       P_Whr := ' And W_Code In ( Select W_Code From Warehouse_Details
                               Where Nvl(W_Ser,0)=(Select Nvl(W_Ser,0) 
                                                        From Warehouse_Details 
                                                   where W_Code='||P_w_code||'))';         
                  And Cash_no In ( Select Cash_no From cash_in_hand
                        Where Nvl(cash_sr,0)=(Select Nvl(cash_sr,0) 
                                     From cash_in_hand
                        where Cash_no='||P_Cash_no||'))';                                
                  And Cash_no In ( Select bank_no From cash_at_bank
                        Where Nvl(bank_sr,0)=(Select Nvl(bank_sr,0) 
                                     From cash_at_bank
                        where bank_no='||P_Cash_no||'))';                                                                          
     V_Doc_No := Ias_gen_Pkg.Get_Cnt('Select Nvl(Max(Doc_No),0)+1 From Ias_Doc_Del
                                       Where Brn_No   = '||P_Brn_No||'
   EXCEPTION     
CREATE OR REPLACE Package RMS_Request_Pkg Is
     Procedure Insrt_Out_Request_Sub_To_Main(P_Yr_Br In Varchar2);               
CREATE OR REPLACE Package Body RMS_Request_Pkg Is
Procedure Insrt_Out_Request_Sub_To_Main(P_Yr_Br In Varchar2)  Is
     Cursor C_Req_Out_Tr_Mst Is Select  Out_Req_Type, Out_Req_No, Out_Req_Ser, 
                                  From Ias_Out_Request_Mst
                                    Where Exists(Select 1 From Rms_Out_Request_Mst_Tmp
                                                  Where Rms_Out_Request_Mst_Tmp.Out_Req_Ser =  Ias_Out_Request_Mst.Out_Req_Ser
                                   Order By Out_Req_Ser ;                         
       Begin
         Execute Immediate ' Select 1 From '||p_yr_br||'.Ias_Out_Request_Mst@onyx.onyx.com 
                                Where Out_Req_Ser ='|| I.Out_Req_Ser 
       Exception
          Raise_Application_Error(-20001,'Error When Read Out Request Data From Headoffice'||Chr(13)||SqlErrm);
          Begin
            Select Request_Serial
               From Ias_Para_Inv ;
          Exception
                Execute Immediate ' Select Nvl(Max(Out_Req_No),0) + 1
                                      From '||p_yr_br||'.Ias_Out_Request_Mst@onyx.onyx.com
                                       Where  Brn_No = '||I.Brn_no 
                Execute Immediate ' Select Nvl(Max(Out_Req_No),0) + 1
                                      From '||p_yr_br||'.Ias_Out_Request_Mst@onyx.onyx.com
                                       Where Out_Req_Type = '||I.Out_Req_Type||'
                Execute Immediate ' Select Nvl(Max(Out_Req_No),0) + 1
                                      From '||p_yr_br||'.Ias_Out_Request_Mst@onyx.onyx.com
                                       Where  w_code = '||I.w_code||'
                Execute Immediate ' Select Nvl(Max(Out_Req_No),0) + 1
                                      From '||p_yr_br||'.Ias_Out_Request_Mst@onyx.onyx.com
                                       Where Out_Req_Type = '||I.Out_Req_Type||'
       Begin 
         Execute Immediate 'Insert Into '||p_yr_br||'.Ias_Out_Request_Mst@onyx.onyx.com(
                             Select Out_Req_Type,'||V_Out_Req_No||','||V_Out_Req_Ser||', 
                              From Ias_Out_Request_Mst
                               Where Out_Req_Ser = '||I.Out_Req_Ser ;
       Exception
          Raise_Application_Error(-20002,'Error When Insert Into Ias_Out_Request_Mst'||Chr(13)||SqlErrm);   
       Begin 
         Execute Immediate 'Insert Into '||p_yr_br||'.Ias_Out_Request_Dtl@onyx.onyx.com(
                             Select Out_Req_Type,'||V_Out_Req_No||','||V_Out_Req_Ser||', 
                              From Ias_Out_Request_Dtl
                              Where Out_Req_Ser = '||I.Out_Req_Ser ;
       Exception
          Raise_Application_Error(-20003,'Error When Insert Into Ias_Out_Request_Dtl'||Chr(13)||SqlErrm);
              Begin 
                     Execute Immediate 'Insert Into '||p_yr_br||'.S_APPRVD_MOV@onyx.onyx.com(
                                         Select                                                  
                                          From S_APPRVD_MOV
                                           Where DOC_SER = '||I.Out_Req_Ser ;
             Exception
                Raise_Application_Error(-20002,'Error When Insert Into S_APPRVD_MOV '||Chr(13)||SqlErrm);   
   Begin
    Update Ias_Out_Request_Mst
      Where Exists(Select 1 From RMS_OUT_REQUEST_MST_TMP
                    Where RMS_OUT_REQUEST_MST_TMP.Out_Req_Ser =  Ias_Out_Request_Mst.Out_Req_Ser
   Exception
     Raise_Application_Error(-20004,'Error When Update  Processed In Ias_Out_Request_Mst '||Chr(13)||SqlErrm); 
"RMS_PRC_FUNC_PKG"PROCEDURE_PRC"FUNCTION_PRC""
PROCEDURE_PRC
Create Or Replace Procedure Ias_Get_Itm_Wght_Data ( P_Barcode            In  Ias_Itm_Dtl.Barcode%Type  ,                                                                                                                                      
            -- Remove_Weight_Digit    1- From Right 2- From Left                               
                                         Begin 
                                              Select Itm_Unt Into P_Itm_Unt
                                                From Ias_I
                                               Where I_Code =Substr(P_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                                         Exception When Others Then
                                              Select Itm_Unt Into P_Itm_Unt
                                                From Ias_Itm_Dtl 
                                               Where I_Code =Substr(P_Barcode,Length(P_Wght_Prfx) +1,P_Wght_Itm_Lngth )
                                         End;
                                        -- Remove_Weight_Digit    1- From Right 2- From Left                               
CREATE OR REPLACE Procedure Rms_Itm_Qty_With_Compnnt_Prc ( P_Whr In Varchar2 ) Is 
 Begin 
                                              Execute Immediate ' Delete From  Rms_Minus_Stk_Qty_Tmp ' ;
                                              Execute Immediate ' Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code ,I_Name,Itm_Unt,P_Qty,Avl_Qty,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv)
                                                Select I_Code,I_Name,Ias_Itm_Pkg.Get_Icode_Min_Unit(I_Code) Itm_Unt ,Sum(Nvl(P_Qty,0)) P_Qty , Get_Icode_Avlqty (I_Code,1,W_Code) Avl_Qty,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv From   (
                                                Select Bill_No,Bill_Srl,I_Name,Rcrd_No,I_Code,Di_Code,P_Qty,W_Code,Brn_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv,Lvl_No,Expire_Date,Batch_No From  (       
                                                                Select M.Bill_No,
                                                                  From Rms_Sls_Not_Avl_Qty_Tmp M ,Rms_Bill_Cmpnnt_Dtl C,Ias_Itm_Mst I
                                                                 Where  M.Bill_Srl = C.Bill_Srl
                                                                Select Rcrsv.Bill_No,
                                                                  From Kit_Items K,Ias_Itm_Mst I,Rcrsv
                                                                 Where K.I_Code      = I.I_Code
                                                            Select Bill_No,
                                                              From Rcrsv
                                                            Select   Bill_No   ,
                                                              From Rms_Sls_Not_Avl_Qty_Tmp                                                                 
                                                            Select M.Bill_No,
                                                              From Rms_Sls_Not_Avl_Qty_Tmp M,Rms_Bill_Cmpnnt_Dtl C,Ias_Itm_Mst I
                                                             Where M.Bill_Srl = C.Bill_Srl   
                                                               Where Nvl(Use_Auto_Pst_Rms_Data_To_Inv,0)=0 
                                        Group By I_Code,I_Name,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv
CREATE OR REPLACE Procedure Rms_Sls_Kit_Itm_Qty_Prc ( P_Whr In Varchar2 ) Is 
 Begin
                                              Execute Immediate ' Delete From  Rms_Minus_Stk_Qty_Tmp ' ;
                                              Execute Immediate ' Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code ,I_Name,Itm_Unt,P_Qty,Sum_Sls_Qty,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv,Lvl_No)
                                                Select I_Code,I_Name,Ias_Itm_Pkg.Get_Icode_Min_Unit(I_Code) Itm_Unt ,Sum(Nvl(P_Qty,0)) P_Qty ,Sum (Sum(P_Qty)) Over (Partition By I_Code,W_Code Order By Lvl_No Desc) Sum_Sls_Qty,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv,Lvl_No From   (
                                                Select Bill_No,Bill_Srl,I_Name,Rcrd_No,I_Code,Di_Code,P_Qty,W_Code,Brn_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv,Lvl_No,Expire_Date,Batch_No From  (       
                                                                Select M.Bill_No,
                                                                  From Rms_Bill_Mst M ,Rms_Bill_Dtl D,Rms_Bill_Cmpnnt_Dtl C,Ias_Itm_Mst I
                                                                 Where M.Bill_Srl = D.Bill_Srl     
                                                                Select Rcrsv.Bill_No,
                                                                  From Kit_Items K,Ias_Itm_Mst I,Rcrsv
                                                                 Where K.I_Code      = I.I_Code
                                                            Select Bill_No,
                                                              From Rcrsv
 Select M.Bill_No,
                                                              From Rms_Bill_Mst M ,Rms_Bill_Dtl D,Ias_Itm_Mst I
                                                             Where M.Bill_Srl = D.Bill_Srl
                                                            Select M.Bill_No,
                                                              From Rms_Bill_Mst M ,Rms_Bill_Dtl D,Rms_Bill_Cmpnnt_Dtl C,Ias_Itm_Mst I
                                                             Where M.Bill_Srl = D.Bill_Srl  
                                                               Where Nvl(Kit_Itm,0)= 1 
                                        Group By I_Code,I_Name,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv,Lvl_No
CREATE OR REPLACE Procedure Rms_Itm_Qty_Compnnt_Outgng_Prc ( P_Whr In Varchar2 ) Is 
 Begin
                                              Execute Immediate ' Delete From  Rms_Minus_Stk_Qty_Tmp ' ;
                                              Execute Immediate ' Insert Into Rms_Minus_Stk_Qty_Tmp(I_Code ,I_Name,Itm_Unt,P_Qty,Avl_Qty,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv)
                                                Select I_Code,I_Name,Ias_Itm_Pkg.Get_Icode_Min_Unit(I_Code) Itm_Unt ,Sum(Nvl(P_Qty,0)) P_Qty , Get_Icode_Avlqty (I_Code,1,W_Code) Avl_Qty,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv From   (
                                                Select Bill_No,Bill_Srl,I_Name,Rcrd_No,I_Code,Di_Code,P_Qty,W_Code,Brn_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv,Lvl_No,Expire_Date,Batch_No From  (       
                                                                Select M.Bill_No,
                                                                  From Rms_Bill_Mst M ,Rms_Bill_Dtl D,Rms_Bill_Cmpnnt_Dtl C,Ias_Itm_Mst I
                                                                 Where M.Bill_Srl = D.Bill_Srl     
                                                                Select Rcrsv.Bill_No,
                                                                  From Kit_Items K,Ias_Itm_Mst I,Rcrsv
                                                                 Where K.I_Code      = I.I_Code
                                                            Select Bill_No,
                                                              From Rcrsv
                                        Group By I_Code,I_Name,W_Code,Brn_No,Expire_Date,Batch_No,Kit_Itm,Use_Auto_Pst_Rms_Data_To_Inv
Create Or Replace Procedure Rms_Sls_Not_Avl_Qty_Prc ( P_Whr In Varchar2 ) Is 
 Begin
    Execute Immediate ' Delete From  Rms_Sls_Not_Avl_Qty_Tmp ' ;    
    Insert Into  Rms_Sls_Not_Avl_Qty_Tmp  (  Bill_No   ,
    Select Bill_No,
                    Select Bill_No,
                           Sum (P_Qty) Over (Partition By I_Code,W_Code Order By Ordr,Bill_Srl,Rcrd_No Desc) Not_Avl_Qty 
                    From 
                    Select 0 Ordr,
                      From (  Select Distinct D.I_Code,D.W_Code
                                From Rms_Bill_Mst M, Rms_Bill_Dtl D, Ias_Itm_Mst I
                               Where M.Bill_Srl = D.Bill_Srl
                    Select 1 Ordr,
                           From Rms_Bill_Mst M, Rms_Bill_Dtl D, Ias_Itm_Mst I
                               Where M.Bill_Srl = D.Bill_Srl
    Where Not_Avl_
FUNCTION_PRC
CREATE OR REPLACE FUNCTION GET_FRMT_MSK_RPRT_FNC ( P_NO_OF_DCML IN NUMBER ) RETURN VARCHAR2 IS
Exception 
CREATE OR REPLACE Function Ias_Ar_Get_Rep_Label (
Exception
CREATE OR REPLACE Function Ias_Ar_Get_V_Name (
         Select Decode (P_Lang_No,1, Nvl (G_A_Name, G_E_Name),Nvl (G_E_Name, G_A_Name))
           From Group_Details
          Where G_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (I_Name, I_E_Name),Nvl (I_E_Name, I_Name))
           From Ias_Itm_Mst
          Where I_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
           From Customer
          Where C_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
              From Customer
             Where C_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (I_Name, I_E_Name),Nvl (I_E_Name, I_Name))
              From Ias_Itm_Mst
             Where I_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Reprs_A_Name, Reprs_E_Name),Nvl (Reprs_E_Name, Reprs_A_Name))
           From Sales_Man
          Where Reprs_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (Reprs_A_Name, Reprs_E_Name),Nvl (Reprs_E_Name, Reprs_A_Name))
              From Sales_Man
             Where Reprs_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
              From Customer
             Where C_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (Reprs_A_Name, Reprs_E_Name),Nvl (Reprs_E_Name, Reprs_A_Name))
              From Sales_Man
             Where Reprs_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (I_Name, I_E_Name),Nvl (I_E_Name, I_Name))
              From Ias_Itm_Mst
             Where I_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Rgn_L_Nm, Rgn_F_Nm),Nvl (Rgn_F_Nm, Rgn_L_Nm))
           From Rms_Rgn
          Where Rgn_No = P_Code And Rownum <= 1;
            Select Decode (P_La
              From Rms_Rgn
             Where Rgn_No = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (Reprs_A_Name, Reprs_E_Name),Nvl (Reprs_E_Name, Reprs_A_Name))
              From Sales_Man
             Where Reprs_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (W_Name, W_E_Name),Nvl (W_E_Name, W_Name))
           From Warehouse_Details
          Where W_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Cc_A_Name, Cc_E_Name),Nvl (Cc_E_Name, Cc_A_Name))
           From Cost_Centers
          Where Cc_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Si_A_Name, Si_E_Name),Nvl (Si_E_Name, Si_A_Name))
           From Ias_Sales_Types
          Where Si_Type = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Cntry_A_Name, Cntry_E_Name),Nvl (Cntry_E_Name, Cntry_A_Name))
           From Cntry
          Where Cntry_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Prov_A_Name, Prov_E_Name),Nvl (Prov_E_Name, Prov_A_Name))
           From Ias_Provinces
          Where Prov_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (City_A_Name, City_E_Name),Nvl (City_E_Name, City_A_Name))
           From Cities
          Where City_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Pj_A_Name, Pj_E_Name),Nvl (Pj_E_Name, Pj_A_Name))
           From Ias_Projects
          Where Pj_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Brn_Lname, Brn_Fname),Nvl (Brn_Fname, Brn_Lname))
           From S_Brn
          Where Brn_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Driver_A_Name, Driver_E_Name),Nvl (Driver_E_Name, Driver_A_Name))
           From Ias_Drivers
          Where Driver_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Actv_A_Name, Actv_E_Name),Nvl (Actv_E_Name, Actv_A_Name))
           From Ias_Actvty
          Where Actv_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Grp_L_Name, Grp_F_Name),Nvl (Grp_F_Name, Grp_L_Name))
           From Ias_Grp_Itm_Lvl
          Where Grp_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Mng_A_Name, Mng_E_Name),Nvl (Mng_E_Name, Mng_A_Name))
           From Ias_Mainsub_Grp_Dtl
          Where Mng_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Subg_A_Name, Subg_E_Name),Nvl (Subg_E_Name, Subg_A_Name))
           From Ias_Sub_Grp_Dtl
          Where Subg_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Assistant_A_Name, Assistant_E_Name),Nvl (Assistant_E_Name, Assistant_A_Name))
           From Ias_Assistant_Group
          Where Assistant_No = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Detail_A_Name, Detail_E_Name),Nvl (Detail_E_Name, Detail_A_Name))
           From Ias_Detail_Group
          Where Detail_No = P_Code And Rownum <= 1;
            Select Decode (P_La
              From Ias_Itm_Mst
             Where I_Code = P_Code And Rownum <= 1;
            Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
              From Customer
             Where C_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (Prm_L_Nm, Prm_F_Nm),Nvl (Prm_F_Nm, Prm_L_Nm))
           From Ias_Promoters
          Where Prm_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_Class_Name, C_Class_E_Name),Nvl (C_Class_E_Name, C_Class_Name))
           From Customer_Class
          Where C_Class = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_Group_A_Name, C_Group_E_Name),Nvl (C_Group_E_Name, C_Group_A_Name))
           From Customer_Group
          Where C_Group_Code = P_Code And Rownum <= 1;      
         Select Decode (P_Lang_No,1, Nvl (C_Group_A_Name, C_Group_E_Name),Nvl (C_Group_E_Name, C_Group_A_Name))
           From Customer_Group
          Where C_Group_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_Class_Name, C_Class_E_Name),Nvl (C_Class_E_Name, C_Class_Name))
           From Customer_Class
          Where C_Class = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_Group_A_Name, C_Group_E_Name),Nvl (C_Group_E_Name, C_Group_A_Name))
           From Customer_Group
          Where C_Group_Code = P_Code And Rownum <= 1;
         Select Decode (P_Lang_No,1, Nvl (C_A_Name, C_E_Name),Nvl (C_E_Name, C_A_Name))
           From Customer
          Where C_Code = P_Code And Rownum <= 1;
      Select Flg_Desc
        From S_Flags
       Where Lang_No = P_Lang_No
        Select Decode(P_Lang_No,1,Nvl(EMP_L_NM,EMP_F_NM),Nvl(EMP_F_NM,EMP_L_NM))
          From S_EMP
         Where EMP_NO=P_Code 
        Select Decode(P_Lang_No,1,Nvl(PRSON_L_NM, PRSON_F_NM),Nvl(PRSON_F_NM, PRSON_L_NM))
          From IAS_INSRNCE_CARD
         Where PRSON_CARD_NO=P_Code 
        Select Decode(P_Lang_No,1,Nvl(Sub_L_Name, Sub_F_Name),Nvl(Sub_F_Name, Sub_L_Name))
          From Ias_Gnr_Code_Dtl
         Where Main_Code = 1
        Select Decode(P_Lang_No,1,Nvl(Ptnt_L_Nm,Ptnt_F_Nm),Nvl(Ptnt_F_Nm, Ptnt_L_Nm))
          From Hps_Ptnt
         Where Ptnt_No=P_Code 
        Select Decode(P_Lang_No,1,Nvl(Dctr_L_Nm, Dctr_F_Nm),Nvl(Dctr_F_Nm, Dctr_L_Nm))
          From Hps_Dctr
         Where Dctr_No=P_Code 
       Select Decode(P_Lang_No,1,Nvl(Ptnt_L_Nm,Ptnt_F_Nm),Nvl(Ptnt_F_Nm, Ptnt_L_Nm))
          From Hps_Ptnt
         Where Ptnt_No=P_Code 
Exception
CREATE OR REPLACE FUNCTION GET_CSTMR_NM_FNC( P_CSTMR_CODE   VARCHAR2 ,P_DOC_TYP  NUMBER,P_LNG_NO  NUMBER) RETURN VARCHAR2 IS
    SELECT DECODE(P_LNG_NO,1,CUST_L_NM,NVL(CUST_F_NM,CUST_L_NM)) 
FROM IAS_CASH_CUSTMR
WHERE CUST_CODE=P_CSTMR_CODE ;
    SELECT DECODE(P_LNG_NO,1,C_A_NAME,NVL(C_E_NAME,C_A_NAME)) 
FROM CUSTOMER
WHERE C_CODE=P_CSTMR_CODE ;
EXCEPTION WHEN OTHERS THEN
CREATE OR REPLACE FUNCTION Doc_Type_Name(P_lang    In NUMBER,
    Begin
       Select FLG_DESC 
           From S_Flags
        Where Lang_no  = P_lang
    Exception 
    End;
    Begin
        Select Flg_Desc 
            From S_Flags
        Where Lang_no  = P_lang
    Exception 
    End;
        Begin
            Select Flg_Desc 
                From S_Flags
            Where Lang_no  = P_lang
        Exception 
        End;
        Begin
            Select Flg_Desc 
                From S_Flags
            Where Lang_no  = P_lang
        Exception 
        End;     
        Begin
            Select Flg_Desc 
                From S_Flags
            Where Lang_no  = P_lang
        Exception 
        End;
        Begin
            Select jv_name 
                From Ias_Sys.IAS_DOCJV_TYPE_SYSTEMS
            Where Lang_no  = P_lang
        Exception 
                Select Flg_Desc 
                    From S_Flags
                      Where Lang_no  = P_lang
        End;
Exception 
CREATE OR REPLACE FUNCTION RMS_GET_QTY_FNC(
      BEGIN
         SELECT   SUM((NVL(MOV_QTY, 0) + NVL(I_QTY, 0) + NVL(ADD_QTY, 0)) * NVL(P_SIZE, 1)) / P_P_SIZE
             FROM RMS_DLY_RDY_FOOD
            WHERE BRN_NO = NVL(P_BRN_NO, BRN_NO)
         GROUP BY SCTN_NO;
      EXCEPTION
            SELECT SUM((NVL(MOV_QTY, 0) + NVL(I_QTY, 0) + NVL(ADD_QTY, 0)) * NVL(P_SIZE, 1)) / P_P_SIZE
              FROM RMS_DLY_RDY_FOOD
             WHERE BRN_NO = NVL(P_BRN_NO, BRN_NO)
      END;
      SELECT SUM(I_QTY) / P_P_SIZE
        FROM (SELECT (NVL(I_QTY, 0) + NVL(FREE_QTY, 0)) * NVL(P_SIZE, 1) I_QTY
                FROM RMS_BILL_MST M
               WHERE M.BILL_DATE = P_F_DATE
              SELECT (NVL(I_QTY, 0) + NVL(FREE_QTY, 0)) * NVL(P_SIZE, 1) I_QTY
                FROM RMS_HST_BILL_MST M
               WHERE M.BILL_DATE = P_F_DATE
              SELECT (NVL(P_QTY, 0) * NVL(DP_QTY, 0)) I_QTY
                FROM RMS_BILL_MST M
               WHERE M.BILL_DATE = P_F_DATE
              SELECT (NVL(P_QTY, 0) * NVL(DP_QTY, 0)) I_QTY
                FROM RMS_HST_BILL_MST M
               WHERE M.BILL_DATE = P_F_DATE
      SELECT SUM(I_QTY) / P_P_SIZE
        FROM (SELECT (NVL(I_QTY, 0) + NVL(FREE_QTY, 0)) * NVL(P_SIZE, 1) I_QTY
                FROM RMS_RT_BILL_MST M
               WHERE M.BRN_NO = NVL(P_BRN_NO, M.BRN_NO)
              SELECT (NVL(I_QTY, 0) + NVL(FREE_QTY, 0)) * NVL(P_SIZE, 1) I_QTY
                FROM RMS_HST_RT_BILL_MST M
               WHERE M.RT_BILL_SRL = D.RT_BILL_SRL
              SELECT (NVL(P_QTY, 0) * NVL(DP_QTY, 0)) I_QTY
                FROM RMS_RT_BILL_MST M
               WHERE M.RT_BILL_SRL = D.RT_BILL_SRL
              SELECT (NVL(P_QTY, 0) * NVL(DP_QTY, 0)) I_QTY
                FROM RMS_HST_RT_BILL_MST M
               WHERE M.RT_BILL_SRL = D.RT_BILL_SRL
        SELECT SUM (I_QTY) / P_P_SIZE
          FROM (SELECT ((NVL (I_QTY, 0) + NVL (FREE_QTY, 0)) * NVL (P_SIZE, 1)) I_QTY
                  FROM RMS_CSTMR_ORDR_MST M,
                 WHERE M.ORDR_SRL = D.ORDR_SRL
                SELECT (NVL (P_QTY, 0) * NVL (DP_QTY, 0)) I_QTY
                  FROM RMS_CSTMR_ORDR_MST M,
                 WHERE M.ORDR_SRL = D.ORDR_SRL
      SELECT SUM((NVL(MOV_QTY, 0) + NVL(I_QTY, 0) + NVL(ADD_QTY, 0)) * NVL(P_SIZE, 1)) / P_P_SIZE
        FROM RMS_DLY_RDY_FOOD
       WHERE BRN_NO = NVL(P_BRN_NO, BRN_NO)
EXCEPTION
CREATE OR REPLACE FUNCTION RMS_OTELPRIMO_ADD_SRVC_CHRG(P_BRN_NO NUMBER,
   FUNCTION GET_JSON_VAL(P_KEY VARCHAR2)
   BEGIN
        SELECT VALUE 
          FROM ( 
              WITH SRC AS (SELECT REPLACE(BUFFER,'{','{,') IN_STR 
                             FROM DUAL), 
                 AS (SELECT 'NULL' RES, 
                     FROM   DUAL 
                     SELECT REGEXP_SUBSTR(STR, '[^,]+')      RES, 
                     FROM   DATA 
                     WHERE  P <= REGEXP_COUNT(ORIG_STR, '[,]') + 1), 
                 AS (SELECT REGEXP_REPLACE(RES, '[{"}]') RES 
                     FROM   DATA 
                     WHERE  RES <> 'NULL') 
            SELECT REGEXP_SUBSTR(RES, '[^:]+', 1, 1) KEY, 
            FROM   COMPONENTS)
        WHERE INSTR(UPPER(KEY),P_KEY) > 0;
   EXCEPTION 
   PROCEDURE CALL_WEB_SRVC
   BEGIN
        REQ := UTL_HTTP.BEGIN_REQUEST (L_URL, L_METHOD, ' HTTP/1.1');
              BEGIN
              EXCEPTION
              END;
        BEGIN
        EXCEPTION
        END;
   PROCEDURE GET_RES_NO
   BEGIN
EXCEPTION
CREATE OR REPLACE FUNCTION RMS_CHK_ITM_ACTV(P_I_CODE        RMS_BILL_DTL.I_CODE%TYPE,
        BEGIN
            BEGIN
                SELECT COUNT(*)
                  FROM RMS_DLY_RDY_FOOD
                 WHERE BRN_NO = P_BRN_NO
            EXCEPTION
            END;
                SELECT COUNT(*)
                  FROM RMS_DLY_RDY_FOOD
                 WHERE BRN_NO = P_BRN_NO
                SELECT COUNT(*)
                  FROM RMS_DLY_RDY_FOOD
                 WHERE BRN_NO = P_BRN_NO
        EXCEPTION
        END;
Create Or Replace Function Get_Amt_Fnc  (P_Whr  Varchar2,P_Type  Number Default 1)  Return Number Is
  Execute  Immediate   ' Select Sum(Insurnc_Amt)   From Rms_Insurnc_Mst Where 1=1  '||P_Whr 
  Execute  Immediate   ' Select Sum(Rnt_Amt)    From Rms_Insurnc_Mst Where 1=1  '||P_Whr 
  Execute  Immediate   ' Select Sum(Insurnc_Amt)    From Rms_Rt_Insurnc_Mst Rms_Insurnc_Mst Where 1=1  '||P_Whr 
Exception
CREATE OR REPLACE FUNCTION Ias_Get_Enc_Pass_fnc wrapped 
CREATE OR REPLACE FUNCTION Get_Icode_AvlQty_Priv ( P_Icode   In   VARCHAR2,
       Begin
          Select nvl(Sum(distinct Avl_qty),0)/P_Psize
             From Ias_Itm_Wcode,Privilege_wh
            Where I_Code=P_Icode
       Exception
         End;
      Begin
         Select Sum(avlq)/P_Psize Into avlq From (
                Select Sum(distinct Avl_qty) avlq,Ias_Itm_Wcode.w_code 
                  From Ias_Itm_Wcode,Privilege_wh
                 Where I_Code=P_Icode
                 Group By Ias_Itm_Wcode.w_code  );        
        Exception When Others Then
      End;                 
EXCEPTION
CREATE OR REPLACE FUNCTION Get_Items_ACtivity( P_Activity_No  In Ias_Items_Activity_Priv.Activity_No%TYPE ,
     Begin 
        Select 1 Into Cnt
         From Ias_Items_Activity_Priv
          Where Ias_Items_Activity_Priv.Activity_No = P_Activity_No
     Exception
Exception 
CREATE OR REPLACE FUNCTION Ias_Chk_Brn_Up_Del_Fnc ( 
_Scr = P_Brn_Data Then --P_Trns_Type (1-Update , 2-Delete)
EXCEPTION WHEN OTHERS THEN
CREATE OR REPLACE FUNCTION Get_Icode_AvlQty ( P_Icode   In   IAS_ITM_MST.I_CODE%TYPE,
     Begin
      Select nvl(Sum(distinct Avl_Qty),0)/p_Psize
     From Ias_Itm_Wcode
        Where I_Code=P_Icode
   Exception
   End;                
      Begin
     Select Sum(avlq) Into avlq From (
          Select (Sum(distinct Avl_Qty)/nvl( P_Psize,1)) avlq,w_code 
            From Ias_Itm_Wcode
               Where Ias_Itm_Wcode.I_code=P_Icode 
       Group By w_code  );
Exception When Others Then
      End;
EXCEPTION
CREATE OR REPLACE FUNCTION Get_Icode_RealQty (P_Icode   In   IAS_ITM_MST.I_CODE%TYPE,
   Begin
     Select nvl(Sum(distinct avl_qty),0)/P_Psize
      From Ias_Itm_Wcode
       Where I_Code=P_Icode
   Exception
   End;
   Begin
     Select (Sum(Nvl(P_qty,0))+Sum(Nvl(Free_Qty,0)*Nvl(P_Size,1))) /P_Psize                                         
       From RMS_Bill_Mst m,RMS_Bill_Dtl d
        Where m.bill_srl=d.bill_srl
   Exception
   End;
   Begin
    Select (Sum(Nvl(P_qty,0))+Sum(Nvl(Free_Qty,0)*Nvl(P_Size,1))) /P_Psize 
       From  RMS_Rt_Bill_Mst m,RMS_Rt_Bill_Dtl d
        Where m.Rt_Bill_Srl=d.Rt_Bill_Srl
   Exception
   End; 
CREATE OR REPLACE Function Get_RMS_Net_Sale_Qty (P_I_Code     In   Ias_Itm_Mst.I_Code%Type
    Begin
      Select (Sum(Nvl(P_Qty,0))+Sum(Nvl(Free_Qty,0)*Nvl(P_Size,1))) /P_P_Size
       Where M.Bill_No=D.Bill_No
    Exception
    End;
    Begin
     Select (Sum(Nvl(P_Qty,0))+Sum(Nvl(Free_Qty,0)*Nvl(P_Size,1))) /P_P_Size
      From  RMS_Rt_Bill_Mst M,RMS_Rt_Bill_Dtl D
       Where M.Rt_Bill_No=D.Rt_Bill_No
    Exception
    End; 
Exception
CREATE OR REPLACE FUNCTION Ias_Get_Itm_Barcode_Fnc ( P_Barcode_Type Number , P_Icode Varchar2 , P_Barcode Varchar2) RETURN Varchar2 IS
BEGIN   
          Begin
            Select Barcod
e InTo V_Barcode From Ias_Itm_Unt_Barcode Where I_Code=V_Icode And RowNum<=1;
          Exception When Others Then 
          End;
EXCEPTION 
CREATE OR REPLACE FUNCTION Get_BlNC_Cst_Fnc( P_loc_cur    In VARCHAR2,
   Select Decode(P_Acy,P_Loc_Cur,Nvl(Sum(Dr_Amt),0)-Nvl(Sum(Cr_Amt),0),Nvl(Sum(Dr_Amt_F),0)-Nvl(Sum(Cr_Amt_F),0)) 
     From Ias_POST_Dtl
    Where C_Code=P_C_Code
   Select Decode(P_Acy,P_Loc_Cur,Nvl(Sum(Dr_Amt),0)-Nvl(Sum(Cr_Amt),0),Nvl(Sum(Dr_Amt_F),0)-Nvl(Sum(Cr_Amt_F),0)) 
     From Ias_POST_Dtl
    Where C_Code=P_C_Code
Exception When Others Then
CREATE OR REPLACE FUNCTION CNVRT_NMBR_TO_STRNG(P_NMBR NUMBER) RETURN VARCHAR2
        V_MAP_ARRY.EXTEND;
        V_MAP_ARRY.EXTEND;
EXCEPTION 
CREATE OR REPLACE PROCEDURE IAS_Get_SalesDisc_Prc (  P_DiscType       In  NUMBER,
Select Decode(amt_type,0,amt),
   From Sales_Disc
  Where Nvl(G_Code,'0')=Decode(Nvl(G_Code,'0'),'0','0',P_Gcode)
Select Decode(amt_type,0,amt),
   From Sales_Disc
  Where I_Code  = P_Icode
Select Decode(amt_type,0,amt),
   From Sales_Disc
  Where I_Code  = P_Icode
 Exception when others then
CREATE OR REPLACE Function Tafkeet ( Amount   In  Number,
  Function Is_zero (Amnt Varchar2, L Number)
  Begin
  End;
  Function Ones (Num Number)
  Begin
  End;
  Function Tens (Num Number)
  Begin
  End;
  Function Hundred (Num Number)
  Begin
  End;
  Function One_digit (Amnt Varchar2)
  Begin
  End;
  Function Two_digits (Amnt Varchar2)
  Begin
  End;
  Begin
  End;
  Function Two_digits_h (Amnt Varchar2)
  Begin
  End;
Function Three_Digits_H (Amnt Varchar2) Return Varchar2 Is
 Begin
  Function Three_digits (Amnt Varchar2)
  Begin
  End;
  Function Four_digits (Amnt Varchar2)
  Begin
  End;
  Function Five_digits (Amnt Varchar2)
  Begin
  End;
  Function Six_digits (Amnt Varchar2)
  Begin
  End;
  Function Seven_digits (Amnt Varchar2)
  Begin
  End;
  Function Eight_digits (Amnt Varchar2)
  Begin
  End;
  Function Nine_digits (Amnt Varchar2)
  Begin
  End;
  Function Ten_digits (Amnt Varchar2)
  Begin
  End;
  Function Eleven_digits (Amnt Varchar2)
  Begin
  End;
  Function Twelve_digits (Amnt Varchar2)
  Begin
  End;
  Procedure Check_riyals (Amnt Varchar2) Is
  Begin
  End;
Begin                               
                -- main function starts --
    Begin                               
        Select    Decode(Lang_No,1,Nvl(CUR_FRACTION,Cur_E_FRACTION),Nvl(Cur_E_FRACTION,Cur_FRACTION)), 
            From     Ex_rate
            Where Cur_code = A_curr;
    Exception When Others Then
    End;
                              From Ias_Out_Request_Dtl
                              Where Out_Req_Ser = '||I.Out_Req_Ser ;
       Exception
          Raise_Application_Error(-20003,'Error When Insert Into Ias_Out_Request_Dtl'||Chr(13)||SqlErrm);
              Begin 
                     Execute Immediate 'Insert Into '||p_yr_br||'.S_APPRVD_MOV@onyx.onyx.com(
 Function GET_BL_CST_FNC 
 Function GET_RMS_NET_SALE_QTY 
SELECT TBL_NAME   FROM (SELECT ''IAS_PROJECTS_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PROJECTS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ACTVTY_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEM_LEVELS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ATTACH_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_AP_CHARGES'' TBL_NAME   FROM DUAL  UNION SELECT ''KIT_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''ASSEMBLE_KIT_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''ASSEMBLE_KIT_ITEMS_DET'' TBL_NAME   FROM DUAL  UNION SELECT ''KIT_ITEMS_DETAIL'' TBL_NAME   FROM DUAL  UNION SELECT ''DisASSEMBLE_KIT_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''DisASSEMBLE_KIT_ITEMS_DET'' TBL_NAME   FROM DUAL  UNION SELECT ''Dis_KIT_ITEMS_DETAIL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SORDER_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_AR'' TBL_NAME   FROM DUAL  UNION SELECT ''S_LOV_SLCT'' TBL_NAME   FROM DUAL  UNION SELECT ''S_LST_SLCT'' TBL_NAME   FROM DUAL  UNION SELECT ''S_SCR_LBL'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER_CLASS'' TBL_NAME   FROM DUAL  UNION SELECT
 ''CNTRY'' TBL_NAME   FROM DUAL  UNION SELECT ''VENDOR_CLASS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PROVINCES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DATE_LOCK_USER_SCR'' TBL_NAME   FROM DUAL  UNION SELECT ''S_TP'' TBL_NAME   FROM DUAL  UNION SELECT ''S_USR_TP_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''VENDOR_CURR'' TBL_NAME   FROM DUAL  UNION SELECT ''COMPOUND_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''ACCOUNT_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''ACCOUNT_GROUPING'' TBL_NAME   FROM DUAL  UNION SELECT ''ACCOUNT'' TBL_NAME   FROM DUAL  UNION SELECT ''ACCOUNT_CURR'' TBL_NAME   FROM DUAL  UNION SELECT ''CASH_AT_BANK'' TBL_NAME   FROM DUAL  UNION SELECT ''CASH_IN_HAND'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_AT_BANK_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_AT_BANK_CHEQ'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_AT_BANK_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_IN_HAND_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''COST_CENTER_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''CC_GROUPING'' TBL_NAME   FROM DUAL  UNION SELECT ''COST_CENTERS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ACCOUNT_CC'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ACCOUNT_PJ'' TBL_NAME   FROM DUAL  UNION SELECT ''CREDIT_CARD_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER_CURR'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CSH_CSTMR_LCTN'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''EX_RATE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CURRENCY_VALUE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_FORM_NAME'' TBL_NAME   FROM DUAL  UNION SELECT ''FORM_DETAIL'' TBL_NAME   FROM DUAL  UNION SELECT ''GROUP_DETAILS'' TBL_NAME   FROM DUAL  UNION SELECT ''MEASUREMENT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''ITEM_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ALTERNATIVE_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ASSISTANT_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DETAIL_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_GRP_ITM_LVL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CONN_ACC_INV_BY_GL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CONN_GRP_ITM_TYPE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CONN_WCODE_BY_ACTIVITY'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEM_LEVELS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEM_PRICE'' TBL_NAME   FROM DUAL  UNION SELECT ''Ias_Priv_Price'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRICING_LEVELS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_UNT_BARCODE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_MAINSUB_GRP_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SUB_GRP_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_WCODE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_ATTACH'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_ATTACH_MOVEMENT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_ATTACH_MOVEMENT_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DOC_SEQ'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_RECNO_SEQ'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_INV_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''INV_ITM_CST_ORDR'' TBL_NAME   FROM DUAL  UNION SELECT ''CALC_WTAVG_COST'' TBL_NAME   FROM DUAL  UNION SELECT ''INV_GET_ITM_WTAVG_FNC'' TBL_NAME   FROM DUAL  UNION SELECT ''INV_GET_LST_ITM_WTAVG_FNC'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POSTING_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POST_IN_SAV_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''LAST_INCOMING_PRICE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POST_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POST_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CR_CARD_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_FRM_FLD_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEMS_ACTIVITY'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEMS_ACTIVITY_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_GEN'' TBL_NAME   FROM DUAL  UNION SELECT ''I
AS_PARA_GL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_INV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_AP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_AR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_CUSTOMER'' TBL_NAME   FROM DUAL  UNION SELECT ''Ias_Actvty'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PROJECTS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_PROJECTS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_SUB_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_GRP_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_GRP_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BILL_DTL_ITM_TMP'' TBL_NAME   FROM DUAL  UNION SELECT ''GR_DETAIL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SORDER_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_RT_SALES_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SALES_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SHW_DOC_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SIGNATURE'' TBL_NAME   FROM DUAL  UNION SELECT ''USER_R'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_USER_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_USER_HEAD'' TBL_NAME   FROM DUAL  UNION SELECT ''INTERFACE_ACC'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_MAN'' TBL_NAME   FROM DUAL  UNION SELECT ''REGIONS'' TBL_NAME   FROM DUAL  UNION SELECT ''CITIES'' TBL_NAME   FROM DUAL  UNION SELECT ''WAREHOUSE_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER_DEGREE'' TBL_NAME   FROM DUAL  UNION SELECT ''COLLERCTOR'' TBL_NAME   FROM DUAL  UNION SELECT ''WAREHOUSE_DETAILS'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIV_ACC'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIV_CASH'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE_CC'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE_FIXED'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE_GC'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE_WH'' TBL_NAME   FROM DUAL  UNION SELECT ''S_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''S_BRN_USR_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''S_CMPNY'' TBL_NAME   FROM DUAL  UNION SELECT ''S_FLAGS'' TBL_NAME   FROM DUAL  UNION SELECT ''S_FLAGS_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''s
_Emp'' TBL_NAME   FROM DUAL  UNION SELECT ''S_EMP_PRFSSN'' TBL_NAME   FROM DUAL  UNION SELECT ''S_EMP_PRFSSN_LNK'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_DISC'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_INV_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_INV_TYPE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_GRN_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_AP'' TBL_NAME   FROM DUAL  UNION SELECT ''REQUEST_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIV_REQ_TYPE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_MNDTRY_SCR_FLDS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_MNDTRY_SCR_FIELDS'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_BRN_CLS'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_DAY'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_REP_SMPLE_USER'' TBL_NAME   FROM DUAL  UNION SELECT ''S_THMS'' TBL_NAME   FROM DUAL  UNION SELECT ''Ias_Favorite_Scr'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_CUSTMR_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_CUSTMR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CSH_CSTMR_LCTN'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_CUSTMR_POINT_TRACE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POINT_TYP_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POINT_TYP_CALC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POINT_TYP_RPLC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''TRANSFER_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIV_TRNSFR_TYPE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_GRN_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_AP'' TBL_NAME   FROM DUAL  UNION SELECT ''V_DETAILS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_VNDR_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''Ias_Currency_Value'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POST_DT
L'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CUSTOMER_CC_LMT'' TBL_NAME   FROM DUAL  UNION SELECT ''USER_FNGR'' TBL_NAME   FROM DUAL  UNION SELECT ''S_USR_HND_DVC'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_EMP_COM_STP_Mst'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_EMP_COM_STP_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_GNR_CRD_IDNTTY'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PJ_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_AUD_SYS_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_INSRT_OUT_BILLS_PKg'' TBL_NAME   FROM DUAL  UNION SELECT ''GET_POST_CODE_INV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ATTACH_ITM_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_AUDIT_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''DATE_CONVERTER_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_AR_GET_REP_LABEL'' TBL_NAME   FROM DUAL  UNION SELECT ''Ys_Srl_Scr_Pkg'' TBL_NAME   FROM DUAL  UNION SELECT ''GET_FRMT_MSK_RPRT_FNC'' TBL_NAME   FROM DUAL  UNION SELECT ''Ias_Report_Pkg'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DOC_SERIAL_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_VNDR_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''GR_NOTE'' TBL_NAME   FROM DUAL  UNION SELECT ''GR_DETAIL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_WHTRNS_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_WHTRNS_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_OUTGOING_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_OUTGOING_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BILL_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BILL_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_RT_BILL_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_RT_BILL_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''ITEM_MOVEMENT'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_ITM_MOVMNT'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_INPT_MOVMNT'' TBL_NAME   FROM DUAL  UNION SELECT ''OTHER_CHARGES'' TBL_NAME   FROM DUAL  UNION SELECT ''OTHER_CHARGES_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_CHARGES'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_CHARGES_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''INSTALLMENT'' TBL_NAME   FROM DUAL  UNION SELECT ''GR_NOTE_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''GR_DETAIL_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''STK_ADJUSTMENT'' TBL_NAME   FROM DUAL  UNION SELECT ''STK_ADJUSTMENT_DET'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_WHTRNS_MST_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_WHTRNS_DTL_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_OUTGOING_MST_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_OUTGOING_DTL_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BILL_MST_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BILL_DTL_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_RT_BILL_MST_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_RT_BILL_DTL_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''ITEM_MOVEMENT_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''OTHER_CHARGES_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''OTHER_CHARGES_ITEMS_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''INSTALLMENT_BR'' TBL_NAME   FROM DUAL  UNION SELECT ''MASTER_INV'' TBL_NAME   FROM DUAL  UNION SELECT ''DETAIL_INV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_INV_MACHINE_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_INV_MACHINE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_OUT_REQUEST_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_OUT_REQUEST_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''MASTER_JOURNAL_V'' TBL_NAME   FROM DUAL  UNION SELECT ''VOUCHERS'' TBL_NAME   FROM DUAL  UNION SELECT ''INCOM_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''OUT_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_STK_ADJST_TYPES'' TBL_NAME   FROM DUAL )"SELECT TBL_NAME   FROM (SELECT ''IAS_PRIV_ACTVTY'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_VENDOR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_SMAN'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_COLLECTORS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_EX_RATE_TRACE'' TBL_NAME   FROM DUAL  UNION SELECT ''S_RP_EXTRA_PRMTRS_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CLOSE_DAY_PERIODS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DATE_LOCK_USER'' TBL_NAME   FROM DUAL  UNION SELECT ''DATE_LOCK'' TBL_N
AME   FROM DUAL  UNION SELECT ''IAS_INSRNCE_CARD'' TBL_NAME   FROM DUAL  UNION SELECT ''S_ALRT_SYS_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''S_USR_ALRT_SYS_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_TRACE_LGN_NOTE'' TBL_NAME   FROM DUAL  UNION SELECT ''S_ALRT_DATA_TMP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BATCH_NO'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BATCH_NO_CONTENTS'' TBL_NAME   FROM DUAL  UNION SELECT ''ITEM_BIN'' TBL_NAME   FROM DUAL  UNION SELECT ''BIN_DETAILS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ATTACH_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''VENDOR_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_VNDR_ACCNT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_WEIGHT_SYS_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CONN_ITM_MSUR_UNT'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_LVL'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_USR'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_MOV'' TBL_NAME   FROM DUAL  UNION SELECT '' GNR_TAX_SLICE'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_CODE_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_CODE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_INPT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_MACHINES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_POINT_CALC_TRNS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_POINT_SEQ'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_AC_CC_LMT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DRIVERS'' TBL_NAME   FROM DUAL  UNION SELECT ''FAS_ASSETS_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''S_EMP_CODE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''GLS_V_AC_DTL_CCPJACTV_BLNC'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRINT_BARCODE_TMP'' TBL_NAME   FROM DUAL )"SELECT 1   FROM ALL_TABLES  WHERE OWNER = :b1  AND TABLE_NAME = ''RMS_PARA''"SELECT DISTINCT SYNONYM_NAME   FROM DBA_SYNONYMS  WHERE OWNER = :b1  AND TABLE_OWNER = :b2  AND SYNONYM_NAME LIKE  ''%RMS%''"SELECT TBL_NAME   FROM (SELECT ''RMS_PARA'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVR_DB_LNK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_CODE_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_CODE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_TRMNL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_TRMNL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_CMPNNT_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_SRVC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_BILL_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_BILL_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_BILL_CMPNNT_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_BILL_SRVC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_CMPNNT_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_SRVC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_RT_BILL_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_RT_BILL_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_RT_BILL_CMPNNT_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_RT_BILL_SRVC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PAY_BILL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PAY_CASH'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PAY_RT_BILLS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HST_PAY_BILLS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PAY_HST_RT_BILLS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DPST_CSH_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DPST_CSH_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DPST_CRDT_CRD'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CASHIER_FIN_TRUST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_JRNL_DIFF_CSHR_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_JRNL_DIFF_CSHR_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_TBL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_TBL_LCTN'' TBL_NAME   FROM DUA
L  UNION SELECT ''RMS_CSTMR_ORDR_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DLY_RDY_FOOD'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_EMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SUB_FOOD_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CONN_FOOD_GRP_BY_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP_ITM_CODE'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HALL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HALL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MEAL_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_NOTE'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_NOTE_PRFX'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_TRMNL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_BILL_DOC_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_ITM_ATTCH'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_ITM_INSRNC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RGN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SCTN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SHFT_WRK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVR_DB_LNK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVC_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_EXPNS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_RCPTS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_QTY'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_V_USR_SCR_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_INSURNC_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_INSURNC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_INSURNC_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_INSURNC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_V_USR_PRIV_TRMNL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_V_USR_PRIV_FOOD_GRP_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_V_USR_PRIV_HALL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MINUS_STK_QTY_TMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SLS_NOT_AVL_QTY_TMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PST_INV_TRNS_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PST_JRNL_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RSRV_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RSRV_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CMSN_MST'' TBL_NAME   FROM DUAL  UNION SELE
CT ''RMS_CMSN_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GET_QTY_FNC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''GET_CSTMR_NM_FNC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_INVC_TYP_CONN_SUB_LDGR'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BRN_PARA'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DLVRY_SLCS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DLVRY_CMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_FVRT_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_AUD_DEL_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_SGGSTN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_NTFCTN_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_NTFCTN_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_MST_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_MST_ALL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_DTL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_DTL_ALL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_MST_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_MST_ALL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_DTL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_DTL_ALL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_PLCY'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_DRVR'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_VNDR_BILL'' TBL_NAME   FROM DUAL )"
_DLY_RDY_FOOD'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_EMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SUB_FOOD_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CONN_FOOD_GRP_BY_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP_ITM_CODE'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HALL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HALL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MEAL_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_NOTE'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_NOTE_PRFX'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_TRMNL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_BILL_DOC_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_ITM_ATTCH'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_ITM_INSRNC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RGN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SCTN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SHFT_WRK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVR_DB_LNK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVC_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_EXPNS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_RCPTS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_QTY'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_V_USR_SCR_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_INSURNC_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_INSURNC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_INSURNC_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_INSURNC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_V_USR_PRIV_TRMNL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_V_USR_PRIV_FOOD_GRP_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_V_USR_PRIV_HALL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MINUS_STK_QTY_TMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SLS_NOT_AVL_QTY_TMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PST_INV_TRNS_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PST_JRNL_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RSRV_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RSRV_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CMSN_MST'' TBL_NAME   FROM DUAL  UNION SELE
CT ''RMS_CMSN_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GET_QTY_FNC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_PKG'' TBL_NAME   FROM DUAL  UNION SELECT ''GET_CSTMR_NM_FNC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_INVC_TYP_CONN_SUB_LDGR'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BRN_PARA'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DLVRY_SLCS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DLVRY_CMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_FVRT_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_AUD_DEL_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_SGGSTN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_NTFCTN_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_NTFCTN_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_MST_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_MST_ALL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_DTL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BILL_DTL_ALL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_MST_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_MST_ALL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_DTL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RT_BILL_DTL_ALL_VW'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_PLCY'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_DRVR'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_VNDR_BILL'' TBL_NAME   FROM DUAL )"
CREATE TABLE RMS_TRMNL(TRMNL_NO         NUMBER(5),
CREATE TABLE  RMS_GNR_CODE_MST (
CREATE TABLE RMS_GNR_CODE_DTL (    RCRD_NO      NUMBER,
CREATE TABLE  RMS_DLVRY_CMP(DLVRY_CMP_NO     NUMBER(5)     NOT NULL,
CREATE TABLE RMS_CSTMR_FVRT_ITM
ALTER TABLE RMS_CSTMR_FVRT_ITM ADD (PRIMARY KEY (CSTMR_CODE, I_CODE))
CREATE TABLE RMS_SCTN(BRN_NO          NUMBER(5)    ,
ALTER TABLE RMS_SCTN ADD ( CONSTRAINT RMS_SCTN_BRN_NO_FK FOREIGN KEY (BRN_NO) 
ALTER TABLE RMS_TRMNL ADD ( CONSTRAINT RMS_TRMNL_SCTN_NO_FK FOREIGN KEY (SCTN_NO) 
CREATE TABLE RMS_PRNTR(PRNTR_NO         NUMBER(6),
ALTER TABLE RMS_PRNTR ADD ( CONSTRAINT RMS_PRNTR_SCTN_NO_FK FOREIGN KEY (SCTN_NO) 
CREATE TABLE RMS_PRNTR_BILL_DOC_TYP (  PRNTR_NO              NUMBER(6),
ALTER TABLE RMS_PRNTR_BILL_DOC_TYP ADD (CONSTRAINT RMS_PRNTR_BILL_DOC_TYP_FK 
CREATE TABLE RMS_PRNTR_TRMNL( TRMNL_NO         NUMBER(5),
ALTER TABLE RMS_PRNTR_TRMNL ADD ( CONSTRAINT RMS_PRNTR_TRMNL_T
ALTER TABLE RMS_PRNTR_TRMNL ADD ( CONSTRAINT RMS_PRNTR_TRMNL_PRNTR_NO_FK FOREIGN KEY (PRNTR_NO) 
CREATE TABLE RMS_PRNTR_GRP(  PRNTR_NO     NUMBER(6),
ALTER TABLE RMS_PRNTR_GRP ADD ( CONSTRAINT RMS_PRNTR_GRP_PRNTR_NO_FK FOREIGN KEY (PRNTR_NO) 
CREATE TABLE RMS_HALL(BRN_NO          NUMBER(6),
ALTER TABLE RMS_HALL ADD ( CONSTRAINT RMS_HALL_BRN_NO_FK FOREIGN KEY (BRN_NO) 
CREATE TABLE RM
ALTER TABLE RMS_HALL_PRV ADD (CONSTRAINT RMS_HALL_PRV_PK PRIMARY KEY (U_ID ,BRN_NO,HALL_NO ))
ALTER TABLE RMS_HALL_PRV ADD ( CONSTRAINT RMS_HALL_PRV_BRN_NO_FK FOREIGN KEY (BRN_NO) 
ALTER TABLE RMS_HALL_PRV ADD ( CONSTRAINT RMS_HALL_PRV_HALL_NO_FK FOREIGN KEY (BRN_NO,HALL_NO) 
CREATE TABLE RMS_TBL(BRN_NO           NUMBER(6),
ALTER TABLE RMS_TBL ADD ( CONSTRAINT RMS_TBL_BRN_NO_FK FOREIGN KEY (BRN_NO) 
ALTER TABLE RMS_TBL ADD ( CONSTRAINT RMS_TBL_HALL_NO_FK FOREIGN KEY (BRN_NO,HALL_NO) 
ALTER TABLE RMS_TBL ADD ( CONSTRAINT RMS_TBL_SRVC_NO_FK FOREIGN KEY (SRVC_NO) 
CREATE TABLE RMS_TBL_LCTN ( HALL_NO     NUMBER(6)          NOT NULL,
ALTER TABLE RMS_TBL_LCTN ADD (CONSTRAINT RMS_TBL_LCTN_FK FOREIGN KEY (BRN_NO, TBL_NO) REFERENCES RMS_TBL (BRN_NO,TBL_NO))
CREATE TABLE RMS_MEAL_TYP ( MEAL_TYP_NO      NUMBER(6),
CREATE TABLE RMS_SHFT_WRK(SHFT_WRK_NO         NUMBER(6),
CREATE TABLE RMS_FOOD_GRP(FOOD_GRP_NO      VARCHAR2(7),
CREATE TABLE RM
ALTER TABLE RMS_SUB_FOOD_GRP ADD (CONSTRAINT RMS_SUB_FOOD_GRP_FK FOREIGN KEY (FOOD_GRP_NO) REFERENCES RMS_FOOD_GRP (FOOD_GRP_NO))
CREATE TABLE RMS_FOOD_GRP_PRV(
ALTER TABLE RMS_FOOD_GRP_PRV ADD (CONSTRAINT RMS_FOOD_GRP_PRV_PK PRIMARY KEY (U_ID ,FOOD_GRP_NO ))
CREATE  TABLE RMS_FOOD_GRP_ITM_CODE
ALTER TABLE RMS_FOOD_GRP_ITM_CODE ADD (CONSTRAINT RMS_FOOD_GRP_ITM_CODE_FK FOREIGN KEY (FOOD_GRP_NO) REFERENCES RMS_FOOD_GRP (FOOD_GRP_NO))
ALTER TABLE RMS_FOOD_GRP_ITM_CODE ADD (CONSTRAINT RMS_SUB_FOOD_GRP_ITM_CODE_FK FOREIGN KEY (FOOD_GRP_NO,SUB_FOOD_GRP_NO) REFERENCES RMS_SUB_FOOD_GRP (FOOD_GRP_NO,SUB_FOOD_GRP_NO))
CREATE  TABLE RMS_CONN_FOOD_GRP_BY_BRN
ALTER TABLE RMS_CONN_FOOD_GRP_BY_BRN ADD (CONSTRAINT RMS_CONN_FOOD_GRP_BY_BRN_FK FOREIGN KEY (FOOD_GRP_NO) REFERENCES RMS_FOOD_GRP (FOOD_GRP_NO))
CREATE TABLE RMS_RGN ( RGN_NO          NUMBER(6),
CREATE TABLE RMS_EMP ( EMP_TYP         NUMBER(1)    ,
CREATE TABLE RMS_SRVC_TYP ( SRVC_NO         NUMBER(6),
CREATE TABLE RMS_BRN_PARA ( BRN_NO NUMBER(6) NOT NULL, 
CREATE TABLE RMS_DLVRY_SLCS ( BRN_NO NUMBER(6) NOT NULL, 
ALTER TABLE RMS_DLVRY_SLCS ADD (  CONSTRAINT RMS_DLVRY_SLCS_SRVC_FK FOREIGN KEY (SRVC_NO) REFERENCES RMS_SRVC_TYP (SRVC_NO) ON DELETE CASCADE)
CREATE TABLE RMS_CMSN_MST (  CMSN_SRL         NUMBER,
CREATE TABLE RMS_CMSN_DTL (  CMSN_SRL            NUMBER                    NOT NULL,
ALTER TABLE RMS_CMSN_DTL ADD (CONSTRAINT RMS_CMSN_DTL_FK FOREIGN KEY (CMSN_SRL) REFERENCES RMS_CMSN_MST (CMSN_SRL))
CREATE TABLE RMS_HELP_KEYS(
CREATE TABLE RMS_AUD_PRNT_ITM (  BILL_NO    NUMBER,
CREATE TABLE RMS_TRC_PST_ERR ( ERR_DATE    DATE DEFAULT SYSDATE,
CREATE TABLE RMS_CARD_AMT_TMP (CARD_NO VARCHAR2(60),
CREATE TABLE RMS_DLY_RDY_FOOD
ALTER TABLE RMS_DLY_RDY_FOOD ADD ( CONSTRAINT RMS_DLY_RDY_FOOD_SCTN_NO_FK FOREIGN KEY (SCTN_NO) 
CREATE INDEX RMS_DLY_RDY_FOOD_DATE_INDX ON RMS_DLY_RDY_FOOD (BRN_NO, DOC_DATE) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT )
CREATE TABLE RMS_CHF_DLY_RDY_FOOD
ALTER TABLE RMS_CHF_DLY_RDY_FOOD ADD ( CONSTRAINT RMS_CHF_DLY_RDY_FOOD_SCT_NO_FK FOREIGN KEY (SCTN_NO) 
CREATE TABLE RMS_INSURNC_MST ( DOC_NO          NUMBER(15)                    NOT NULL,
CREATE TABLE RMS_INSURNC_DTL ( RCRD_NO      NUMBER,
ALTER TABLE RMS_INSURNC_DTL ADD (CONSTRAINT FK_RMS_INSURNC_DTL FOREIGN KEY (DOC_SRL) REFERENCES RMS_INSURNC_MST (DOC_SRL) ON DELETE CASCADE )
CREATE TABLE RMS_RT_INSURNC_MST (  DOC_NO          NUMBER(15)                    NOT NULL,
CREATE TABLE RMS_RT_INSURNC_DTL (  RCRD_NO      NUMBER,
ALTER TABLE RMS_RT_INSURNC_DTL ADD (  CONSTRAINT FK_RMS_RT_INSURNC_DTL  FOREIGN KEY (DOC_SRL)  REFERENCES RMS_RT_INSURNC_MST (DOC_SRL) ON DELETE CASCADE )
CREATE TABLE RMS_NOTE (  NOTE_NO        NUMBER(6),
ALTER TABLE RMS_NOTE ADD (  CONSTRAINT FK_RMS_NOTE_FOOD_GRP_NO  FOREIGN KEY (FOOD_GRP_NO)  REFERENCES RMS_FOOD_GRP (FOOD_GRP_NO))
CREATE TABLE RMS_NOTE_PRFX ( PRFX_NO NUMBER(6), 
CREATE TABLE RMS_GNR_EXPNS ( DOC_NO          NUMBER          NOT NULL,
ALTER TABLE RMS_GNR_EXPNS ADD ( CONSTRAINT RMS_GNR_EXPNS_TRMNL_NO_FK FOREIGN KEY (TRMNL_NO) REFERENCES RMS_TRMNL (TRMNL_NO))
CREATE TABLE RMS_GNR_RCPTS ( DOC_NO          NUMBER          NOT NULL,
ALTER TABLE RMS_GNR_RCPTS ADD ( CONSTRAINT RMS_GNR_RCPTS_TRMNL_NO_FK FOREIGN KEY (TRMNL_NO) REFERENCES RMS_TRMNL (TRMNL_NO))
CREATE TABLE RMS_ITM_ATTCH
ALTER TABLE RMS_ITM_ATTCH ADD ( CONSTRAINT RMS_ITM_ATTCH_PK PRIMARY KEY (I_CODE,ITM_UNT,I_CODE_ATTCH,ITM_UNT_ATTCH))
ALTER TABLE RMS_ITM_ATTCH ADD (CONSTRAINT RMS_ITM_ATTCH_I_CODE_FK FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE))
ALTER TABLE RMS_ITM_ATTCH ADD (CONSTRAINT RMS_ITM_ATTCH_I_CODE_ATTCH_FK FOREIGN KEY (I_CODE_ATTCH) REFERENCES IAS_ITM_MST (I_CODE))
CREATE TABLE RMS_ITM_INSRNC
ALTER TABLE RMS_ITM_INSRNC ADD ( CONSTRAINT RMS_ITM_INSRNC_PK PRIMARY KEY (I_CODE,ITM_UNT,I_CODE_INSRNC,ITM_UNT_INSRNC))
ALTER TABLE RMS_ITM_INSRNC ADD (CONSTRAINT RMS_ITM_INSRNC_I_CODE_FK FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE))
ALTER TABLE RMS_ITM_INSRNC ADD (CONSTRAINT RMS_ITM_I_CODE_INSRNC_FK FOREIGN KEY (I_CODE_INSRNC) REFERENCES IAS_ITM_MST (I_CODE))
CREATE TABLE RMS_RSRV_MST (  BRN_NO        NUMBER(10),
CREATE TABLE RMS_RSRV_DTL (  BRN_NO        NUMBER(10),
ALTER TABLE RMS_RSRV_DTL ADD (CONSTRAINT RMS_RMS_RSRV_DTL_FK FOREIGN KEY (BRN_NO,RSRV_NO) REFERENCES RMS_RSRV_MST (BRN_NO,RSRV_NO) ON DELETE CASCADE )
ALTER TABLE RMS_RSRV_DTL ADD ( CONSTRAINT RMS_RSRV_DTL_TBL_FK FOREIGN KEY (BRN_NO,TBL_NO) REFERENCES RMS_TBL (BRN_NO,TBL_NO))
ALTER TABLE RMS_RSRV_DTL ADD ( CONSTRAINT RMS_RSRV_DTL_HLL_FK FOREIGN KEY (BRN_NO,HALL_NO) REFERENCES RMS_HALL (BRN_NO,HALL_NO))
CREATE TABLE RMS_CSTMR_ORDR_MST( 
CREATE INDEX CSTMR_ORDR_MST_DATE_INDX ON RMS_CSTMR_ORDR_MST (BRN_NO, RES_DATE, ORDR_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT )
ALTER TABLE RMS_CSTMR_ORDR_MST ADD ( CONSTRAINT RMS_CSTMR_ORDR_MST_TBL_FK FOREI
ALTER TABLE RMS_CSTMR_ORDR_MST ADD ( CONSTRAINT RMS_CSTMR_ORDR_MST_HLL_FK FOREIGN KEY (BRN_NO,HALL_NO) REFERENCES RMS_HALL (BRN_NO,HALL_NO))
CREATE TABLE RMS_CSTMR_ORDR_DTL ( 
ALTER TABLE RMS_CSTMR_ORDR_DTL ADD ( CONSTRAINT RMSORDRDTL_ICODE_FK FOREIGN KEY (I_CODE) 
ALTER TABLE RMS_CSTMR_ORDR_DTL ADD ( CONSTRAINT RMSORDRDTL_WCODE_FK FOREIGN KEY (W_CODE) 
CREATE TABLE RMS_CSTMR_ORDR_CMPNNT_DTL (ORDR_NO        NUMBER        NOT NULL,
ALTER TABLE RMS_CSTMR_ORDR_CMPNNT_DTL ADD ( CONSTRAINT 
ALTER TABLE RMS_CSTMR_ORDR_CMPNNT_DTL ADD ( CONSTRAINT RMS_CSTMR_ORDR_CMPNNT_DTL_FK2 FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE)) 
ALTER TABLE RMS_CSTMR_ORDR_CMPNNT_DTL ADD ( CONSTRAINT RMS_CSTMR_ORDR_CMPNNT_DTL_FK3 FOREIGN KEY (W_CODE) REFERENCES WAREHOUSE_DETAILS (W_CODE)) 
CREATE TABLE RMS_INSURNC_ORDR_DTL (
ALTER TABLE RMS_INSURNC_ORDR_DTL ADD ( CONSTRAINT RMS_INSURNC_ORDR_DTL_UQ UNIQUE (RCRD_NO, DOC_SRL))
CREATE TABLE RMS_BILL_MST( 
CREATE INDEX BILL_MST_DATE_INDX ON RMS_BILL_MST(BRN_NO, BILL_DATE, BILL_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT )
CREATE INDEX RMS_BILL_MST_EMPTY_TBL ON RMS_BILL_MST(BRN_NO, HALL_NO,EMPTY_TBL_FLG) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT )
ALTER TABLE RMS_BILL_MST ADD ( CONSTRAINT RMS_BILL_MST_SHFT_WRK_FK FOREIGN KEY (SHFT_WRK_NO) REFERENCES RMS_SHFT_WRK (SHFT_WRK_NO))
ALTER TABLE RMS_BILL_MST ADD ( CONSTRAINT RMS_BILL_MST_MEAL_TYP_FK FOREIGN
ALTER TABLE RMS_BILL_MST ADD ( CONSTRAINT RMS_BILL_MST_TBL_FK FOREIGN KEY (BRN_NO,TBL_NO) REFERENCES RMS_TBL (BRN_NO,TBL_NO))
ALTER TABLE RMS_BILL_MST ADD ( CONSTRAINT RMS_BILL_MST_HALL_FK FOREIGN KEY (BRN_NO,HALL_NO) REFERENCES RMS_HALL (BRN_NO,HALL_NO))
ALTER TABLE RMS_BILL_MST ADD ( CONSTRAINT RMS_BILL_MST_RGN_FK FOREIGN KEY (RGN_NO) REFERENCES RMS_RGN (RGN_NO))
CREATE TABLE RMS_BILL_DTL( 
ALTER TABLE RMS_BILL_DTL ADD ( CONSTRAINT RMSBILLDTL_ICODE_FK FOREIGN KEY (I_CODE) 
ALTER TABLE RMS_BILL_DTL ADD ( CONSTRAINT RMSBILLDTL_WCODE_FK FOREIGN KEY (W_CODE) 
CREATE TABLE RMS_PAY_BILL(
CREATE TABLE Rms_Bill_Srvc (
ALTER TABLE Rms_Bill_Srvc ADD (CONSTRAINT Rms_Bill_Srvc_FK FOREIGN KEY (BILL_SRL) REFERENCES RMS_BILL_MST (BILL_SRL)  ON DELETE CASCADE)
CREATE TABLE RMS_Bill_Dtl_Aud_Tmp( BILL_NO         NUMBER,
CREATE TABLE RMS_RT_BILL_MST(
CREATE INDEX RT_BILL_MST_DATE_INDX ON RMS_RT_BILL_MST (BRN_NO, RT_BILL_DATE, RT_BILL_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT )
ALTER TABLE RMS_RT_BILL_MST ADD ( CONSTRAINT RMS_RT_BILL_MST_SHFT_WRK_FK FOREIGN KEY (SHFT_WRK_NO) REFERENCES RMS_SHFT_WRK (SHFT_WRK_NO))
ALTER TABLE RMS_RT_BILL_MST ADD ( CONSTRAINT RMS_RT_BILL_MST_MEAL_TYP_FK FOREIGN KEY (MEAL_TYP_NO) REFERENCES RMS_MEAL_TYP (MEAL_TYP_NO))
ALTER TABLE RMS_RT_BILL_MST ADD ( CONSTRAINT RMS_RT_BILL_MST_TBL_FK FOREIGN KEY (BRN_NO,TBL_NO) REFERENCES RMS_TBL (BRN_NO,TBL_NO))
ALTER TABLE RMS_RT_BILL_MST ADD ( CONSTRAINT RMS_RT_BILL_MST_HALL_FK FOREIGN KEY (BRN_NO,HALL_NO) REFERENCES RMS_HALL (BRN_NO,HALL_
ALTER TABLE RMS_RT_BILL_MST ADD ( CONSTRAINT RMS_RT_BILL_MST_RGN_FK FOREIGN KEY (RGN_NO) REFERENCES RMS_RGN (RGN_NO))
CREATE TABLE RMS_RT_BILL_DTL(
ALTER TABLE RMS_RT_BILL_DTL ADD ( CONSTRAINT RMSRTBILLDTL_ICODE_FK FOREIGN KEY (I_CODE) 
ALTER TABLE RMS_RT_BILL_DTL ADD ( CONSTRAINT RMSRTBILLDTL_WCODE_FK FOREIGN KEY (W_CODE) 
CREATE TABLE RMS_PAY_RT_BILL ( 
CREATE TABLE RMS_RT_BILL_SRVC (
ALTER TABLE Rms_Rt_Bill_Srvc ADD (CONSTRAINT Rms_Rt_Bill_Srvc_FK FOREIGN KEY (RT_BILL_SRL) REFERENCES RMS_RT_BILL_MST (RT_BILL_SRL)  ON DELETE CASCADE)
Create Table RMS_Rt_Bill_Dtl_Aud_Tmp( Rt_Bill_No  Number   ,
CREATE TABLE RMS_HST_BILL_MST( 
CREATE INDEX BILL_HST_MST_DATE_INDX ON RMS_HST_BILL_MST (BRN_NO, BILL_DATE, BILL_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT )
ALTER TABLE RMS_Hst_BILL_MST ADD ( CONSTRAINT RMS_HST_BILL_MST_SHFT_WRK_FK FOREIGN KEY (SHFT_WRK_NO) REFERENCES RMS_SHFT_WRK (SHFT_WRK_NO))
ALTER TABLE RMS_Hst_BILL_MST ADD ( CONSTRAINT RMS_HST_BILL_MST_MEAL_TYP_FK FOREIGN KEY (MEAL_TYP_NO) REFERENCES RMS_MEAL_TYP (MEAL_TYP_NO))
ALTER TABLE RMS_Hst_BILL_MST ADD ( CONSTRAINT RMS_HST_BILL_MST_TBL_FK FOREIGN KEY (BRN_NO,TBL_NO) REFERENCES RMS_TBL (BRN_NO,TBL_NO))
ALTER TABLE RMS_Hst_BILL_MST ADD ( CONSTRAINT RMS_HST_BILL_MST_HALL_FK FOREIGN KEY (BRN_NO,HALL_NO) REFERENCES RMS_HALL (BRN_NO,HALL_NO))
ALTER TABLE RMS_Hst_BILL_MST ADD ( CONSTRAINT RMS_HST_BILL_MST_RGN_FK FOREIGN KEY (RGN_NO) REFERENCES RMS_RGN (RGN_NO))
CREATE TABLE RMS_HST_BILL_DTL( 
ALTER TABLE RMS_Hst_BILL_DTL ADD ( CONSTRAINT RMShst_BILL_DTL_ICODE_FK FOREIGN KEY (I_CODE) 
ALTER TABLE RMS_Hst_BILL_DTL ADD ( CONSTRAINT RMS_HST_BILL_DTL_WCODE_FK FOREIGN KEY (W_CODE) 
CREATE TABLE RMS_HST_PAY_BILL(
CREATE TABLE Rms_Hst_Bill_Srvc (
ALTER TABLE Rms_Hst_Bill_Srvc ADD (CONSTRAINT Rms_Hst_Bill_Srvc_FK FOREIGN KEY (BILL_SRL) REFERENCES RMS_HST_BILL_MST (BILL_SRL)  ON DELETE CASCADE)
CREATE TABLE RMS_HST_RT_BILL_MST(
CREATE INDEX HST_RT_BILL_MST_DATE_INDX ON RMS_HST_RT_BILL_MST (BRN_NO, RT_BILL_DATE, RT_BILL_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT )
ALTER TABLE RMS_Hst_RT_BILL_MST ADD ( CONSTRAINT RMSHSTRT_BILL_MST_SHFT_WRK_FK FOREIGN KEY (SHFT_WRK_NO) REFERENCES RMS_SHFT_WRK (SHFT_WRK_NO))
ALTER TABLE RMS_Hst_RT_BILL_MST ADD ( CONSTRAINT RMSHSTRT_BILL_MST_MEAL_TYP_FK FOREIGN KEY (MEAL_TYP_NO) REFERENCES RMS_MEAL_TYP (MEAL_TYP_NO))
ALTER TABLE RMS_Hst_RT_BILL_MST ADD ( CONSTRAINT RMSHSTRT_BILL_MST_TBL_FK FOREIGN KEY (BRN_NO,TBL_NO) REFERENCES RMS_TBL (BRN_NO,TBL_NO))
ALTER TABLE RMS_Hst_RT_BILL_MST ADD ( CONSTRAINT RMSHSTRT_BILL_MST_HALL_FK FOREIGN KEY (BRN_NO,HALL_NO) REFERENCES RMS_HALL (BRN_NO,HALL_NO))
ALTER TABLE RMS_Hst_RT_BILL_MST ADD ( CONSTRAINT RMS_RT_HST_BILL_MST_RGN_FK FOREIGN KEY (RGN_NO) REFERENCES RMS_RGN (RGN_NO))
CREATE TABLE RMS_Hst_RT_BILL_DTL(
ALTER TABLE RMS_Hst_RT_BILL_DTL ADD ( CONSTRAINT RMSRTBILLDTL_ICODE_FK FOREIGN KEY (I_CODE) 
ALTER TABLE RMS_Hst_RT_BILL_DTL ADD ( CONSTRAINT RMSRTBILLDTL_WCODE_FK FOREIGN KEY (W_CODE) 
CREATE TABLE RMS_Hst_PAY_RT_BILL ( 
CREATE TABLE Rms_Hst_Rt_Bill_Srvc (
ALTER TABLE Rms_Hst_Rt_Bill_Srvc ADD (CONSTRAINT Rms_Hst_Rt_Bill_Srvc_FK FOREIGN KEY (RT_BILL_SRL) REFERENCES RMS_HST_RT_BILL_MST (RT_BILL_SRL)  ON DELETE CASCADE)
CREATE TABLE RMS_BILL_CMPNNT_DTL ( BILL_NO        NUMBER        NOT NULL,
ALTER TABLE RMS_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_BILL_CMPNNT_DTL_FK FOREIGN KEY (BILL_SRL) REFERENCES RMS_BILL_MST (BILL_SRL) ON DELETE CASCADE) 
ALTER TABLE RMS_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_BILL_CMPNNT_DTL_ICODE_FK FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE)) 
ALTER TABLE RMS_BILL_CMPNNT_DTL ADD
CREATE TABLE RMS_RT_BILL_CMPNNT_DTL (  RT_BILL_NO     NUMBER       NOT NULL,
ALTER TABLE RMS_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_RT_BILL_CMPNNT_DTL_FK FOREIGN KEY (RT_BILL_SRL) REFERENCES RMS_RT_BILL_MST (RT_BILL_SRL) ON DELETE CASCADE) 
ALTER TABLE RMS_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_RT_BILL_CMPNNT_ICODE_FK FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE)) 
ALTER TABLE RMS_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_RT_BILL_CMPNNT_WCODE_FK FOREIGN KEY (W_CODE) REFERENCES WAREHOUSE_DETAILS (W_CODE)) 
CREATE TABLE RMS_HST_BILL_CMPNNT_DTL ( BILL_NO        NUMBER        NOT NULL,
ALTER TABLE RMS_HST_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_HST_BILL_CMPNNT_DTL_FK FOREIGN KEY (BILL_SRL) REFERENCES RMS_HST_BILL_MST (BILL_SRL) ON DELETE CASCADE) 
ALTER TABLE RMS_HST_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_HST_BILL_CMPNNT_DTL_ITM_FK FOREIGN KEY (I_
ALTER TABLE RMS_HST_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_HST_BILL_CMPNNT_WCODE_FK FOREIGN KEY (W_CODE) REFERENCES WAREHOUSE_DETAILS (W_CODE)) 
CREATE TABLE RMS_HST_RT_BILL_CMPNNT_DTL (  RT_BILL_NO     NUMBER       NOT NULL,
ALTER TABLE RMS_HST_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_HST_RT_BILL_CMPNNT_DTL_FK FOREIGN KEY (RT_BILL_SRL) REFERENCES RMS_HST_RT_BILL_MST (RT_BILL_SRL) ON DELETE CASCADE) 
ALTER TABLE RMS_HST_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_HST_RT_BILL_CMPNNT_ITM_FK FOREIGN KEY (I_CODE) REFERENCES IAS_ITM_MST (I_CODE)) 
ALTER TABLE RMS_HST_RT_BILL_CMPNNT_DTL ADD ( CONSTRAINT RMS_HST_RT_BILL_CMPNNTWCODE_FK FOREIGN KEY (W_CODE) REFERENCES WAREHOUSE_DETAILS (W_CODE)) 
CREATE TABLE RMS_PAY_CASH(
CREATE TABLE RMS_BILL_TMP(BILL_SRL NUMBER,BILL_NO NUMBER)
CREATE TABLE RMS_RT_BILL_TMP (RT_BILL_SRL NUMBER,RT_BILL_NO NUMBER )
CREATE TABLE RMS_CSTMR_ORDR_TMP (ORDR_SRL NUMBER,ORDR_NO NUMBER )
Create Table RMS_bill_mst_diff As 
Select * From  RMS_bill_mst Where 1 = 2 
Create Table RMS_bill_dtl_diff As 
Select * From  RMS_bill_dtl Where 1 = 2
Create Table RMS_rt_bill_mst_diff As 
Select * From  RMS_rt_bill_mst Where 1 = 2
Create Table RMS_rt_bill_dtl_diff As 
Select * From  RMS_rt_bill_dtl Where 1 = 2
CREATE TABLE RMS_PAY_CASH_TMP(RT_BILL_SRL NUMBER,RT_BILL_NO NUMBER,RET_VOUCHER_NO NUMBER)
CREATE TABLE RMS_CSTMR_NTFCTN_MST(NTFCTN_NO      NUMBER,
CREATE TABLE RMS_CSTMR_NTFCTN_DTL (NTFCTN_NO      NUMBER,
CREATE TABLE RMS_CSTMR_SGGSTN(SGGSTN_TYP  NUMBER(3)                         NOT NULL,
CREATE TABLE IAS_MASTER_INV_TMP( 
CREATE TABLE IAS_INV_MACHINE_MST_TMP (
CREATE INDEX RMS_INDX_BILL_DTL ON RMS_BILL_DTL
CREATE INDEX RMS_HST_BILL_INDX ON RMS_HST_BILL_DTL 
CREATE INDEX RMS_INDX_RTBILL_DTL ON RMS_RT_BILL_DTL
CREATE INDEX RMS_HST_RTBILL_INDX ON RMS_HST_RT_BILL_DTL 
CREATE TABLE RMS_BILL_TMP(
CREATE TABLE RMS_INVC_TYP_CONN_SUB_LDGR (         
ALTER TABLE RMS_INVC_TYP_CONN_SUB_LDGR ADD (CONSTRAINT RMS_INVC_TYP_CONN_SUB_LDGR_UQ UNIQUE (CC_CODE,PJ_NO,ACTV_NO))
CREATE TABLE RMS_CASHIER_FIN_TRUST
ALTER TABLE RMS_CASHIER_FIN_TRUST ADD ( CONSTRAINT RMS_CASH_FIN_TRUST_UID_FK  FOREIGN KEY (U_ID) REFERENCES USER_R (U_ID))
ALTER TABLE RMS_CASHIER_FIN_TRUST ADD ( CONSTRAINT RMS_CASH_FIN_TRUST_ACY_FK  FOREIGN KEY (A_CY) REFERENCES EX_RATE (CUR_CODE))
CREATE TABLE RMS_JRNL_DIFF_CSHR_MST(         
CREATE TABLE RMS_JRNL_DIFF_CSHR_DTL(
CREATE TABLE RMS_DPST_CSH_MST   ( 
CREATE TABLE RMS_DPST_CSH_DTL ( 
ALTER TABLE RMS_DPST_CSH_DTL ADD (CONSTRAINT RMS_DPACY_FK 
CREATE TABLE RMS_DPST_CRDT_CRD ( 
ALTER TABLE RMS_DPST_CRDT_CRD ADD (CONSTRAINT RMS_DPCRDTCRDACY_FK 
CREATE TABLE RMS_MNDTRY_SCR_FLD (  FORM_NO         NUMBER              ,
CREATE TABLE RMS_BACKUP
CREATE TABLE RMS_USR_LGN_HSTRY (
CREATE TABLE RMS_OUT_REQUEST_MST_TMP( 
CREATE TABLE RMS_TAX_ITM_MOVMNT
ALTER TABLE RMS_TAX_ITM_MOVMNT ADD ( CONSTRAINT RMS_TAX_ITM_MOVMNT_PK PRIMARY KEY (DOC_TYPE,DOC_SER,I_CODE,TAX_NO,AGNCY_NO,RCRD_NO))
ALTER TABLE RMS_TAX_ITM_MOVMNT ADD ( 
CREATE TABLE RMS_TAX_INPT_MOVMNT
ALTER TABLE RMS_TAX_INPT_MOVMNT
CREATE TABLE RMS_AUD_DEL_ITM ( 
COMMENT ON COLUMN RMS_AUD_DEL_ITM.AUD_TYP IS '1-DELETE ITEM 2-UPDATE ITEM'
CREATE TABLE RMS_SCRN_PRNTR_MST
CREATE INDEX RMS_SCRN_PRNTR_MST_SRL_INDX ON RMS_SCRN_PRNTR_MST (BILL_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT)
CREATE TABLE RMS_SCRN_PRNTR_DTL
CREATE INDEX RMS_SCRN_PRNTR_DTL_INDX ON RMS_SCRN_PRNTR_DTL (TRMNL_NM ,BILL_DATE ,BILL_SRL) LOGGING TABLESPACE RMS_INDX PARALLEL ( DEGREE DEFAULT INSTANCES DEFAULT)
COMMENT ON COLUMN RMS_SCRN_PRNTR_DTL.UPDT_TYP IS '0- NO UPDATE 1-DELETE ITEM 2-UPDATE ITEM'
CREATE TABLE IAS_CASH_CUSTMR_BRN
CREATE TABLE RMS_SQL_QUEUE
CREATE INDEX RMS_SQL_QUEUE_INDX ON RMS_SQL_QUEUE (EXEC_TIME) LOGGING TABLESPACE RMS_INDX PARALLEL
CREATE TABLE RMS_MRN_TRSM_VNDR_BILL
CREATE TABLE RMS_PARA(
ALTER TABLE RMS_PARA ADD ( CONSTRAINT RMS_PARA_PK PRIMARY KEY (PARA_NO))
CREATE TABLE RMS_SRVR_DB_LNK( SRVR_NO       NUMBER         ,
CREATE TABLE RMS_HELP_KEYS(
CREATE TABLE RMS_TRMNL_PRV(
CREATE TABLE IAS_CSH_CSTMR_LCTN_BRN ( CSTMR_CODE           VARCHAR2(15) ,
ALTER TABLE IAS_CSH_CSTMR_LCTN_BRN ADD ( CONSTRAINT IAS_CSH_CSTMR_LCTN_BRN_FK 
CREATE TABLE RMS_PST_SRL (PST_SRL  NUMBER) TABLESPACE "RMS_DATA"
ALTER TABLE RMS_PST_SRL 
CREATE TABLE RMS_MRN_TRSM_PLCY
CREATE TABLE RMS_MRN_TRSM_ITM
CREATE INDEX RMS_MRN_TRSM_ITM_INDX ON RMS_MRN_TRSM_ITM (BRN_NO,TYP_NO, I_CODE) LOGGING TABLESPACE RMS_INDX PARALLEL
CREATE TABLE RMS_MRN_TRSM_DRVR
ALTER TABLE RMS_MRN_TRSM_DRVR ADD (CONSTRAINT RMS_MRN_TRSM_DRVR_PK PRIMARY KEY (DRVR_NO, ITM_NO))
ALTER TABLE RMS_MRN_TRSM_DRVR ADD ( CONSTRAINT RMS_MRN_TRSM_DRVR_FK FOREIGN KEY (ITM_NO) REFERENCES RMS_MRN_TRSM_ITM (ITM_NO) ON DELETE CASCADE ENABLE VALIDATE)
CREATE TABLE IAS_PRINT_BARCODE_TMP (   I_CODE       VARCHAR2(30) ,
CREATE TABLE MASTER_INV(
CREATE TABLE DETAIL_INV(
CREATE TABLE IAS_INV_MACHINE_MST(
CREATE TABLE IAS_INV_MACHINE_DTL(
Drop Table IAS_INV_MACHINE_MST_TMP
CREATE TABLE IAS_MASTER_INV_TMP( 
CREATE TABLE IAS_INV_MACHINE_MST_TMP (
CREATE TABLE IAS_DOC_DEL(
CREATE TABLE IAS_AUD_PRNT_REP (
CREATE TABLE IAS_AUD_HIST(
CREATE TABLE IAS_OUT_REQUEST_MST(
CREATE TABLE IAS_OUT_REQUEST_DTL(
CREATE TABLE RMS_OUT_REQUEST_MST_TMP( 
CREATE TABLE S_APPRVD_MOV( 
CREATE TABLE IAS_WHTRNS_MST ( 
CREATE TABLE IAS_WHTRNS_DTL ( 
CREATE TABLE GRN_MASTER(
CREATE TABLE GRN_DETAIL(
CREATE TABLE GR_NOTE ( 
CREATE TABLE GR_DETAIL ( 
CREATE TABLE IAS_WT_ITMS_TMP(
CREATE TABLE IAS_SYS.S_EMAIL_SETTING (
CREATE TABLE IAS_SYS.S_MSG_MOBILE_AUTO(
CREATE TABLE IAS_SYS.S_MSG_MOBILE_AUTO_HSTRY(
CREATE TABLE Ias_SYS.S_WEB_SYS_SETTING ( 
CREATE TABLE IAS_SYS.S_CNTRY_PHONE_CODE
CREATE TABLE IAS_POINT_CALC_TRNS
ALTER TABLE IAS_POINT_CALC_TRNS
CREATE TABLE RMS_SRVR_DB_LNK( SRVR_NO       NUMBER         ,
CREATE TABLE RMS_HELP_KEYS(
CREATE TABLE RMS_TRMNL_PRV(
CREATE TABLE IAS_CSH_CSTMR_LCTN_BRN ( CSTMR_CODE           VARCHAR2(15) ,
ALTER TABLE IAS_CSH_CSTMR_LCTN_BRN ADD ( CONSTRAINT IAS_CSH_CSTMR_LCTN_BRN_FK 
CREATE TABLE RMS_PST_SRL (PST_SRL  NUMBER) TABLESPACE "RMS_DATA"
ALTER TABLE RMS_PST_SRL 
CREATE TABLE RMS_MRN_TRSM_PLCY
   SELECT itm.i_code, food_grp_no, itm.prntr_no, p.prntr_nm
   FROM   rms_prntr p,
          (SELECT DISTINCT i.i_code, g.prntr_no, i.food_grp_no
           FROM            ias_itm_mst i,
           WHERE           DECODE (g.conn_typ, 1, i.food_grp_no, i.i_code) =
                              SELECT p_g.prntr_no, p_g.conn_val
                              FROM   rms_prntr_grp p_g
                              WHERE  NVL (p_g.no_prnt_flg, 0) = 1
                              SELECT 1
                              FROM   rms_prntr_bill_doc_typ
                              WHERE  rms_prntr_bill_doc_typ.prntr_no =
   WHERE  p.prntr_no = itm.prntr_no AND NVL (p.inactive, 0) <> 1
   SELECT a.u_id,
   FROM   PRIVILEGE a,
   WHERE  a.u_id = b.u_id AND a.form_no = c.form_no AND include_flag = 1
   SELECT b.u_id,
   FROM   user_r b,
   WHERE  NOT EXISTS (
                   SELECT 1
                   FROM   PRIVILEGE
                   WHERE  form_no = c.form_no AND u_id = b.u_id
   SELECT a.u_id, NVL (b.u_a_name, b.u_e_name) usr_nm, a.trmnl_no,
   FROM   RMS_TRMNL_PRV a,
   WHERE  a.u_id = b.u_id AND a.trmnl_no = c.trmnl_no
   SELECT b.u_id, NVL (b.u_a_name, b.u_e_name) usr_nm, c.trmnl_no,
   FROM   user_r b,
   WHERE  NOT EXISTS (
             SELECT 1
             FROM   RMS_TRMNL_PRV
             WHERE  trmnl_no = c.trmnl_no AND u_id = b.u_id
   SELECT A.U_ID, NVL (B.U_A_NAME, B.U_E_NAME) USR_NM, A.FOOD_GRP_NO,DECODE (IAS_PRMTR_PKG.GETPVAL (P_PRMTR => 'LANG_NO'),
   FROM   RMS_FOOD_GRP_PRV  A,
   WHERE  A.U_ID = B.U_ID AND A.FOOD_GRP_NO = C.FOOD_GRP_NO
   SELECT B.U_ID, NVL (B.U_A_NAME, B.U_E_NAME) USR_NM, C.FOOD_GRP_NO,DECODE (IAS_PRMTR_PKG.GETPVAL (P_PRMTR => 'LANG_NO'),
   FROM   USER_R B,
   WHERE  NOT EXISTS (
                 SELECT 1
                 FROM   RMS_FOOD_GRP_PRV
                 WHERE  FOOD_GRP_NO = C.FOOD_GRP_NO AND U_ID = B.U_ID
   SELECT A.U_ID, NVL (B.U_A_NAME, B.U_E_NAME) USR_NM,
   FROM   RMS_HALL_PRV  A,
   WHERE  A.U_ID = B.U_ID AND A.BRN_NO = C.BRN_NO AND A.HALL_NO = C.HALL_NO
   SELECT B.U_ID, NVL (B.U_A_NAME, B.U_E_NAME) USR_NM,
   FROM   USER_R B,
   WHERE  NOT EXISTS (
                 SELECT 1
                 FROM   RMS_HALL_PRV
                 WHERE  HALL_NO = C.HALL_NO AND U_ID = B.U_ID
   SELECT m.I_CODE,
   FROM   ias_itm_mst m,
   WHERE  m.i_code = d.i_code
Select 
From RMS_Bill_Mst M,RMS_Bill_Dtl D
Where M.Bill_Srl=D.Bill_Srl
Select  
From RMS_Hst_Bill_Mst M,RMS_Hst_Bill_Dtl D
 Where M.Bill_Srl=D.Bill_Srl
Select 
From RMS_Rt_Bill_Mst M,RMS_Rt_Bill_Dtl D
Where M.Rt_Bill_Srl=D.Rt_Bill_Srl
Select  
From RMS_Hst_Rt_Bill_Mst M,RMS_Hst_Rt_Bill_Dtl D
Where M.Rt_Bill_Srl=D.Rt_Bill_Srl
    SELECT BILL_NO,
      FROM RMS_BILL_MST
    SELECT BILL_NO,
      FROM RMS_BILL_MST
    SELECT BILL_NO,
      FROM RMS_HST_BILL_MST
    SELECT BILL_NO,
      FROM RMS_BILL_DTL
    SELECT BILL_NO,
      FROM RMS_BILL_DTL
    SELECT BILL_NO,
      FROM RMS_HST_BILL_DTL
    SELECT RT_BILL_NO,
      FROM RMS_RT_BILL_MST
    SELECT RT_BILL_NO,
      FROM RMS_RT_BILL_MST
    SELECT RT_BILL_NO,
      FROM RMS_HST_RT_BILL_MST
    SELECT RT_BILL_NO,
      FROM RMS_RT_BILL_DTL
    SELECT RT_BILL_NO,
      FROM RMS_RT_BILL_DTL
    SELECT RT_BILL_NO,
      FROM RMS_HST_RT_BILL_DTL
      SELECT M.CUST_CODE,
        FROM IAS_CASH_CUSTMR    M,
       WHERE M.CUST_CODE = D.CUST_CODE
    GROUP BY M.CUST_CODE,
DROP TABLE 
 WITH ROWID FOR UPDATE  AS
            SELECT * FROM 
 WITH ROWID FOR UPDATE  AS
            SELECT * FROM 
           SELECT * FROM 
 WITH ROWID FOR UPDATE  AS
            SELECT * FROM 
          SELECT * FROM 
CREATE TABLE IAS_TRACE_LGN_NOTE(
CREATE TABLE S_ALRT_DATA_TMP (
CREATE VIEW GLS_V_AC_DTL_CCPJACTV_BLNC AS
   SELECT '   ' A_CODE,
     FROM DUAL 
SELECT TBL_NAME   FROM (SELECT ''ACCOUNT_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''ACCOUNT_GROUPING'' TBL_NAME   FROM DUAL  UNION SELECT ''ACCOUNT'' TBL_NAME   FROM DUAL  UNION SELECT ''ACCOUNT_CURR'' TBL_NAME   FROM DUAL  UNION SELECT ''CASH_AT_BANK'' TBL_NAME   FROM DUAL  UNION SELECT ''CASH_IN_HAND'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_AT_BANK_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_AT_BA
NK_CHEQ'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_AT_BANK_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_IN_HAND_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''COST_CENTER_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''CC_GROUPING'' TBL_NAME   FROM DUAL  UNION SELECT ''COST_CENTERS'' TBL_NAME   FROM DUAL  UNION SELECT ''CREDIT_CARD_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER_CURR'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER_CLASS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CSH_CSTMR_LCTN'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''EX_RATE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_FORM_NAME'' TBL_NAME   FROM DUAL  UNION SELECT ''FORM_DETAIL'' TBL_NAME   FROM DUAL  UNION SELECT ''GROUP_DETAILS'' TBL_NAME   FROM DUAL  UNION SELECT ''MEASUREMENT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''KIT_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''ITEM_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ALTERNATIVE_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ASSISTANT_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DETAIL_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_GRP_ITM_LVL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CONN_ACC_INV_BY_GL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CONN_GRP_ITM_TYPE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CONN_WCODE_BY_ACTIVITY'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEM_LEVELS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEM_PRICE'' TBL_NAME   FROM DUAL  UNION SELECT ''Ias_Priv_Price'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRICING_LEVELS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_UNT_BARCODE'' TBL_NAME   FROM DUAL  UNION SELECT ''MEASUREMENT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_MAINSUB_GRP_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SUB_GRP_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITM_WCODE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CR_CARD_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CURRENCY_VALUE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_FRM_FLD_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEMS_ACTIVITY'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ITEMS_ACTIVITY_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_GEN'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_GL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_INV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_AP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PARA_AR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_CUSTOMER'' TBL_NAME   FROM DUAL  UNION SELECT ''Ias_Actvty'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PROJECTS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_SUB_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_GRP_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_QUT_PRM_GRP_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BILL_DTL_ITM_TMP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DOC_SEQ_OTHR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SORDER_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_RT_SALES_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SALES_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SHW_DOC_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_SIGNATURE'' TBL_NAME   FROM DUAL  UNION SELECT ''USER_R'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_USER_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_USER_HEAD'' TBL_NAME   FROM DUAL  UNION SELECT ''INTERFACE_ACC'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_MAN'' TBL_NAME   FROM DUAL  UNION SELECT ''REGIONS'' TBL_NAME   FROM DUAL  UNION SELECT ''WAREHOUSE_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''CUSTOMER_DEGREE'' TBL_NAME   FROM DUAL  UNION SELECT ''COLLERCTOR'' TBL_NAME   FROM DUAL  UNION SELECT ''WAREHOUSE_DETAILS'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIV_ACC'' TBL_NAME   FROM DUAL  UNION SELECT ''P
RIV_CASH'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE_FIXED'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE_GC'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIVILEGE_WH'' TBL_NAME   FROM DUAL  UNION SELECT ''S_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''S_BRN_USR_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''S_CMPNY'' TBL_NAME   FROM DUAL  UNION SELECT ''S_FLAGS'' TBL_NAME   FROM DUAL  UNION SELECT ''S_FLAGS_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''S_LOV_SLCT'' TBL_NAME   FROM DUAL  UNION SELECT ''S_LST_SLCT'' TBL_NAME   FROM DUAL  UNION SELECT ''S_EMP'' TBL_NAME   FROM DUAL  UNION SELECT ''S_EMP_PRFSSN'' TBL_NAME   FROM DUAL  UNION SELECT ''S_EMP_PRFSSN_LNK'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_DISC'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_INV_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_INV_TYPE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_GRN_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''REQUEST_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIV_REQ_TYPE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_AP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_REP_SMPLE_USER'' TBL_NAME   FROM DUAL  UNION SELECT ''S_PRD_BRN_CLS'' TBL_NAME   FROM DUAL  UNION SELECT ''S_THMS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_CUSTMR_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CASH_CUSTMR'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_CSH_CSTMR_LCTN'' TBL_NAME   FROM DUAL  UNION SELECT ''TRANSFER_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''PRIV_TRNSFR_TYPE'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_GRN_TYPES'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_AP'' TBL_NAME   FROM DUAL  UNION SELECT ''V_DETAILS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_VNDR_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_DRIVERS'' TBL_NAME   FROM DUAL  UNION SELECT ''FAS_ASSETS_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''S_EMP_CODE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_EMP_COM_STP_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_EMP_COM_STP_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_INSRNCE_CARD'' TBL_NAME   FROM DUAL  UNION SELECT ''S_ALRT_SYS_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''S_USR_ALRT_SYS_PRIV'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_TRACE_LGN_NOTE'' TBL_NAME   FROM DUAL  UNION SELECT ''S_ALRT_DATA_TMP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BATCH_NO'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_BATCH_NO_CONTENTS'' TBL_NAME   FROM DUAL  UNION SELECT ''ITEM_BIN'' TBL_NAME   FROM DUAL  UNION SELECT ''BIN_DETAILS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_ATTACH_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''VENDOR_GROUP'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_VNDR_ACCNT'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_LVL'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_USR'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_MOV'' TBL_NAME   FROM DUAL  UNION SELECT '' GNR_TAX_SLICE'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_CODE_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_CODE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_INPT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_AR'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_CHARGES'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_CHARGES_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_AC_CC_LMT'' TBL_NAME   FROM DUAL  UNION SELECT ''ASSEMBLE_KIT_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''ASSEMBLE_KIT_ITEMS_DET'' TBL_NAME   FROM DUAL )"SELECT TBL_NAME   FROM (SELECT ''RMS_CUSTOMER_CARD_AMOUNT'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PARA'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVR_DB_LNK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_CODE_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_CODE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_TRMNL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVC_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_TBL'' TBL_NAME   FROM DUAL  UNION SE
LECT ''RMS_TBL_LCTN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_EMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SUB_FOOD_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CONN_FOOD_GRP_BY_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_FOOD_GRP_ITM_CODE'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HALL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_HALL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MEAL_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_NOTE'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_NOTE_PRFX'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_GRP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_TRMNL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PRNTR_BILL_DOC_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_ITM_ATTCH'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_ITM_INSRNC'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_RGN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SCTN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SHFT_WRK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVR_DB_LNK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_INVC_TYP_CONN_SUB_LDGR'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_BRN_PARA'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DLVRY_SLCS'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_DLVRY_CMP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_FVRT_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_AUD_DEL_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_SGGSTN'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_NTFCTN_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_CSTMR_NTFCTN_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_PLCY'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_MRN_TRSM_DRVR'' TBL_NAME   FROM DUAL )"
 DUAL  UNION SELECT ''IAS_VNDR_ACCNT'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_LVL'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_USR'' TBL_NAME   FROM DUAL  UNION SELECT ''S_APPRVD_MOV'' TBL_NAME   FROM DUAL  UNION SELECT '' GNR_TAX_SLICE'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_CODE_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_CODE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_TYP_CLC_BRN'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_ITM'' TBL_NAME   FROM DUAL  UNION SELECT ''GNR_TAX_INPT'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_PRIV_AR'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_CHARGES'' TBL_NAME   FROM DUAL  UNION SELECT ''SALES_CHARGES_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''IAS_AC_CC_LMT'' TBL_NAME   FROM DUAL  UNION SELECT ''ASSEMBLE_KIT_ITEMS'' TBL_NAME   FROM DUAL  UNION SELECT ''ASSEMBLE_KIT_ITEMS_DET'' TBL_NAME   FROM DUAL )"SELECT TBL_NAME   FROM (SELECT ''RMS_CUSTOMER_CARD_AMOUNT'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_PARA'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVR_DB_LNK'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_CODE_MST'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_GNR_CODE_DTL'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_TRMNL_PRV'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_SRVC_TYP'' TBL_NAME   FROM DUAL  UNION SELECT ''RMS_TBL'' TBL_NAME   FROM DUAL  UNION SE
SELECT 1   FROM DBA_SNAPSHOTS  WHERE TABLE_NAME = ''IAS_ITM_MST''  AND OWNER = USER  AND ROWNUM <= 1"
SELECT 1   FROM DBA_SNAPSHOTS  WHERE TABLE_NAME = ''IAS_ITM_MST''  AND OWNER = USER  AND ROWNUM <= 1"
SELECT 1   FROM DBA_USERS  WHERE USERNAME = ''ONYXPROXY''"SELECT USERNAME   FROM DBA_USERS  WHERE (USERNAME LIKE  ''IAS%''  OR USERNAME LIKE  ''YSRMS%'' ) AND USERNAME NOT IN ( ''IAS_INTMDT_DB'',''IAS_INTMDT''  )"
CREATE TABLE MASTER_INV(
CREATE TABLE DETAIL_INV(
SELECT SUM((NVL(D.I_PRICE,0)) * NVL(D.I_QTY,0) ) BILL_AMT,NVL(M.OTHR_AMT,0) OTHR_AMT,M.BILL_SRL   FROM RMS_BILL_MST M,RMS_BILL_DTL D  WHERE M.BILL_SRL = D.BILL_SRL  AND NVL(M.OTHR_AMT,0) != 0  GROUP BY M.BILL_SRL,M.OTHR_AMT  HAVING ROUND(NVL(M.OTHR_AMT,0) - SUM(NVL(D.OTHR_AMT,0) * NVL(I_QTY,0) ) ,5) != 0"UPDATE RMS_BILL_MST SET OTHR_AMT=0 WHERE BILL_SRL = :b1"UPDATE RMS_BILL_DTL SET OTHR_AMT=DECODE(NVL(I_PRICE,0),0,0,DECODE(NVL(:b1,0),0,0,(NVL(:b2,0) / NVL(:b1,0) ) * (NVL(I_PRICE,0)) )) WHERE BILL_SRL = :b4"
CREATE TABLE 
Select 1 From 
Insert Into 
Select 1 Cst_Code ,1 Cst_Type ,1 Cst_Ordr From Dual
Select 2 Cst_Code ,1 Cst_Type ,2 Cst_Ordr From Dual
Select 3 Cst_Code ,1 Cst_Type ,3 Cst_Ordr From Dual
Select 4 Cst_Code ,1 Cst_Type ,4 Cst_Ordr From Dual
Select 5 Cst_Code ,1 Cst_Type ,5 Cst_Ordr From Dual
Select 6 Cst_Code ,1 Cst_Type ,6 Cst_Ordr From Dual
Select 7 Cst_Code ,1 Cst_Type ,7 Cst_Ordr From Dual 
Select 1 Cst_Code ,2 Cst_Type ,1 Cst_Ordr From Dual
Select 2 Cst_Code ,2 Cst_Type ,2 Cst_Ordr From Dual
Select 3 Cst_Code ,2 Cst_Type ,3 Cst_Ordr From Dual
Create Or Replace Function 
 Begin
            Begin
               Select I_Cwtavg
               From Ias_Itm_Mst
                Where I_Code  = P_I_Code 
            Exception
            End;
            Begin
               Select I_Cwtavg
               From Ias_Itm_Wcode
                Where I_Code  = P_I_Code 
            Exception
            End;
            Begin
               Select Max(Nvl(I_Cwtavg, 0))
               From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
            Exception
            End;           
            Begin
               Select Max(I_Cwtavg)
                 From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
            Exception
            End;
            Begin
               Select Max(I_Cwtavg)
                 From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
            Exception
            End;
               Begin
                  Select Max(I_Cwtavg)
                    From Ias_Itm_Wcode
                   Where I_Code   = P_I_Code 
               Exception
               End;
            Begin
               Select I_Cwtavg
 From Ias_Itm_Mst
                Where I_Code  = P_I_Code 
            Exception
            End;         
            Begin
               Select Primary_Cost
                 From Ias_Itm_Mst
                Where I_Code  = P_I_Code 
            Exception
            End;
            Begin
               Select Nvl(Primary_Cost, 0)
                 From Ias_Itm_Wcode
                Where I_Code  = P_I_Code 
            Exception
            End;
            Begin
               Select Max(Nvl(Primary_Cost, 0))
                 From Ias_Itm_Wcode
                Where I_Code   = P_I_Code 
            Exception
            End;
         Begin
            Select Nvl(Primary_Cost, 0)
             From Ias_Itm_Mst
              Where I_Code  = P_I_Code 
         Exception
         End;
         Begin
            Select Nvl(I_Cwtavg, 0)
              From Ias_Itm_Mst
             Where I_Code  = P_I_Code 
         Exception
         End;
         Begin
            Select (Nvl(Vndr_Price, 0) * Ias_Gen_Pkg.Get_Cur_Rate(Ias_V_Vndr_Itm.A_Cy)) / Ias_Gen_Pkg.Get_Cur_Rate(Ias_Gen_Pkg.Get_Stk_Cur)
              From Ias_V_Vndr_Itm
             Where I_Code            = P_I_Code 
         Exception
               Begin
                  Select (Nvl(Vndr_Price, 0) * Ias_Gen_Pkg.Get_Cur_Rate(Ias_V_Vndr_Itm.A_Cy)) / Ias_Gen_Pkg.Get_Cur_Rate(Ias_Gen_Pkg.Get_Stk_Cur)
                    From Ias_V_Vndr_Itm
                   Where I_Code  = P_I_Code 
               Exception
               End;
         End;
      Begin
      Exception
      End;
Exception
     Select Cst_Code
     From Inv_Itm_Cst_Ordr
         Where Cst_Type = 1
      Order By Cst_Ordr;
 Begin
 Exception
CREATE TABLE GR_NOTE ( 
CREATE OR REPLACE PACKAGE 
    Function    Get_Rep_Para    (   P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    Function    Get_Priv_Rep_Para  (P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    PROCEDURE Get_Priv_Rep_Name ;                                    
    PROCEDURE Get_Priv_Rep_Name_Inv ;                                    
    PROCEDURE   Get_Rep_Head ;                                    
    Function    Get_Tbl_Nm_Mst  ( P_Doc_Type In Number )  Return Varchar2  ;
    Function    Get_Tbl_Nm_Mst_Inv  ( P_Doc_Type In Number )  Return Varchar2  ;                                                
    Function    Get_Tbl_Nm_Dtl  ( P_Doc_Type In Number )  Return Varchar2 ;   
    Function    Get_Tbl_Nm_Dtl_Inv  ( P_Doc_Type In Number )  Return Varchar2 ;   
  Procedure Get_Clmn_Name(    P_Doc_Type      In  Out Number  ,
  Function    Get_Clmn_Labl(  P_TBLFLD_NAME   In  VarChar2    ,
  Function    Get_Clmn_Type(  P_TBLFLD_NAME   In  VarChar2    ,
CREATE OR REPLACE PACKAGE Body 
    Function    Get_Rep_Para    (   P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    BEGIN
       Select Nvl(ALLOW_CALL_REP_BTN,0) ,Nvl(HIDE_COST,0),Nvl(ALLOW_SHOW_JRNL,0)
            Into CALL_BTN,HID_COST,V_ALLOW_SHOW_JRNL From PRIVILEGE_FIXED
                Where U_ID=USER_NO;
    Exception When Others Then
    BEGIN
    Exception When Others Then
        Begin
            Select Decode(P_DOC_TYPE,
                          )    Into  G_DOC_TYPE From Dual;
        Exception When others then
        End; 
    BEGIN
    Exception When Others Then
            Begin
                Select 
                From dual;
            Exception When Others Then
            End;
 Function    Get_Priv_Rep_Para  (P_SUM_DTL    In  Number      Default Null,  --  0 - Detail  , 1 - Summery --
    BEGIN
    Exception When Others Then
    BEGIN
       Select Nvl(ALLOW_CALL_REP_BTN,0) ,Nvl(HIDE_COST,0),Nvl(ALLOW_SHOW_JRNL,0)
            Into CALL_BTN,HID_COST,V_ALLOW_SHOW_JRNL From PRIVILEGE_FIXED
                Where U_ID=USER_NO;
    Exception When Others Then
    BEGIN
    Exception When Others Then
            Begin
                Select 
                From dual;
            Exception When others then
            End;
PROCEDURE Get_Priv_Rep_Name Is    
    Begin
   -- select doc_typ||','||form_no||',' from form_detail where doc_typ is not null and SCR_TYP=3 and SCR_ORGNL is null
         --- order by doc_typ,form_no 
        Select nvl(VwRep_flag,0),nvl(Print_flag,0) Into VwRep,Prnt
            From Privilege 
                Where U_id=G_Usr_No
    Exception When others then
    End; 
    Begin
       /*2003 FROM HPS_PST_RNT MB ,HPS_ADMSON_MST MR
 2004 FROM HPS_RM_PYMNT MB ,HPS_ADMSON_MST MR 
 2005  FROM HPS_RM_PYMNT MB ,HPS_ADMSON_MST MR
 2006 FROM HPS_RM_DISC MB ,HPS_ADMSON_MST MR
        Select Decode(G_DOC_TYPE,
                  Into V_REP_NM From Dual;
    Exception When others then
    End; 
PROCEDURE Get_Priv_Rep_Name_Inv Is    
            Begin
                Begin
                    Select nvl(VwRep_flag,0),nvl(Print_flag,0) Into VwRep,Prnt
                        From Privilege 
                            Where U_id=G_Usr_No
                Exception When others then
                End; 
                Begin
                    Select Decode(G_DOC_TYPE,
                              Into V_REP_NM From Dual;
                Exception When others then
                End; 
PROCEDURE Get_Rep_Head Is                                   
    BEGIN
        Select nvl(Head_type,1) Into v_Head_Type
          From Ias_Para_Gen;
     Exception When Others Then 
    END;
        Begin
            Select  Decode(G_Lang_no,1,CMP_LNAME,CMP_FNAME),
            From S_Brn 
                Where Brn_No=G_BRN_No;
        Exception When others then
        End; 
        Begin
            Select  Decode(G_Lang_no,1,CMP_ANAME,CMP_ENAME),
            From IAS_USER_HEAD
                Where U_id=G_Usr_No;
        Exception  
            Begin
            Select  Decode(G_Lang_no,1,CMP_LNAME,CMP_FNAME),
                From S_Brn 
                    Where Brn_No=G_BRN_No And RowNum<=1;
            Exception When others then
            End; 
        End; 
    Function    Get_Tbl_Nm_Mst  ( P_Doc_Type In Number )  Return Varchar2 Is
     Begin
    Function    Get_Tbl_Nm_Dtl  ( P_Doc_Type In Number )  Return Varchar2 Is
     Begin
Function    Get_Tbl_Nm_Mst_Inv  ( P_Doc_Type In Number )  Return Varchar2 Is
 Begin
Function    Get_Tbl_Nm_Dtl_Inv  ( P_Doc_Type In Number )  Return Varchar2 Is
 Begin
  Procedure Get_Clmn_Name(    P_Doc_Type      In  Out Number  ,
Function    Get_Clmn_Labl(  P_TBLFLD_NAME   In  VarChar2    ,
    Begin
        Select 
            Into Cment  From User_Col_Comments
            Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn;
    Exception When Others Then
        Begin
            Select 
                Into Cment  From User_Col_Comments
                Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
        Exception When Others Then
            Begin
                Select 
                    Into Cment  From User_Col_Comments
                    Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
            Exception When Others Then
                Begin
                    Select  Comments 
                        Into Cment From User_Col_Comments
                        Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn
                Exception When Others Then
                End;
            End;
        End;
    End;
    Function    Get_Clmn_Type(  P_TBLFLD_NAME   In  VarChar2    ,
    Begin
        Select  Data_Type   ,   Data_Length 
            From USER_TAB_COLS
                Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  ;
    Exception When Others Then 
        Begin
            Select  Data_Type   ,   Data_Length 
                From USER_TAB_COLS
                    Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                    And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  
        Exception When Others Then 
            Begin
                Select  Data_Type    
                    From USER_TAB_COLS
                        Where   TABLE_NAME||'.'||COLUMN_NAME = Nvl(Tabl,Table_Name)||'.'|| Clmn
                        And     Table_Name In (Select Table_Name From User_Tab_Comments Where Table_Type='TABLE')  
            Exception When Others Then 
            End;
        End;
    End;
    Begin
        Select 
            Into Cment  From User_Col_Comments
            Where   Table_Name  ||'.'|| Column_Name =   Nvl(Tabl,Table_Name)||'.'|| Clmn;
    Exception When Others Then
        Begin
            Select 
  WHERE TABLE_NAME = ''IAS_ITM_MST''  AND OWNER = USER  AND ROWNUM <= 1"
  WHERE TABLE_NAME = ''IAS_ITM_MST''  AND OWNER = USER  AND ROWNUM <= 1"
  WHERE TABLE_NAME = ''IAS_ITM_MST''  AND OWNER = USER  AND ROWNUM <= 1"
  WHERE TABLE_NAME = ''IAS_ITM_MST''  AND OWNER = USER  AND ROWNUM <= 1"
  WHERE TABLE_NAME = ''IAS_ITM_MST''  AND OWNER = USER  AND ROWNUM <= 1"
"RMS_PRC_FUNC_PKG"PROCEDURE_PRC"FUNCTION_PRC""
PROCEDURE_PRC
FUNCTION_PRC
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/RMS.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
SELECT 
 FROM (
SELECT ,
SELECT LOV_LBL_NO,UPPER(LOV_SQL) LOV_SQL,LOV_PRV,DFLT_ORDR,LOV_COL_CNT,LOV_COL_HID,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_LTR,LOV_COL_RTL,GRP_BY   FROM S_LOV_SLCT  WHERE UPPER(LOV_NM) = UPPER(:b1)  AND ROWNUM <= 1"SELECT LOV_LBL_NO,UPPER(LOV_SQL) LOV_SQL,LOV_PRV,DFLT_ORDR,LOV_COL_CNT,LOV_COL_HID,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_LTR,LOV_COL_RTL,GRP_BY   FROM S_LOV_SLCT  WHERE UPPER(LOV_NM) = UPPER(:b1)  AND ROWNUM <= 1"SELECT LOV_LBL_NO,UPPER(LOV_SQL) LOV_SQL,LOV_P
RV,DFLT_ORDR,LOV_COL_CNT,LOV_COL_HID,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_LTR,LOV_COL_RTL,GRP_BY   FROM S_LOV_SLCT  WHERE UPPER(LOV_NM) = UPPER(:b1)  AND ROWNUM <= 1"
_HELPONHELP"HELP_SETINDEX"HELP_SETCONTENTS"HELP_CONTEXTPOPUP"HELP_FORCEFILE"HELP_KEY"257"HELP_COMMAND"258"HELP_PARTIALKEY"261"HELP_MULTIKEY"513"HELP_SETWINPOS"515"HELP_CONTEXTMENU"HELP_FINDER"HELP_WM_HELP"HELP_SETPOPUP_POS"WM_SYSCOMMAND"274"WM_MDITILE"550"WM_MDICASCADE"551"WM_MDIICONARRANGE"552"SC_RESTORE"61728"SC_MINIMIZE"61472"SC_MAXIMIZE"61488"OFN_READONLY"OFN_OVERWRITEPROMPT"OFN_HIDEREADONLY"OFN_NOCHANGEDIR"OFN_SHOWHELP"16"OFN_NOVALIDATE"OFN_ALLOWMULTISELECT"512"OFN_EXTENSIONDIFFERENT"1024"OFN_PATHMUSTEXIST"2048"OFN_FILEMUSTEXIST"4096"OFN_CREATEPROMPT"8192"OFN_SHAREAWARE"16384"OFN_NOREADONLYRETURN"32768"OFN_NOTESTFILECREATE"65536"OFN_NONETWORKBUTTON"131072"OFN_NOLONGNAMES"262144"OFN_EXPLORER"524288"OFN_NODEREFERENCELINKS"1048576"OFN_LONGNAMES"2097152"OFN_FLAG_DEFAULT"530444"REG_EXPAND_SZ"REG_SZ"REG_DWORD"COMPAT_EXPAND_REG_VALUES"BOOLEAN"TRUE"TYPE"AFUNCTIONHANDLE"ORA_FFI"FUNCHANDLETYPE"BINARY_INTEGER"SUBTYPE"FILE_TYPE"ERROR_ENCOUNTERED"FALSE"ERROR_STACK"2000"API_ENABLED"DLL_HANDLE"LIBHANDLETYPE"FUNCTIONHANDLE"NOT_AVAILABLE"UERROR" Caused an unexpected error: "NOAPI"31"API Functions are not Available"MAXDWORD"33"Integer Argument exceeds 32 bits "MAXWORD"Integer Argument exceeds 16 bits "MAXBYTE"32"Integer Argument exceeds 8 bits "MINBOUND"Integer Argument too Small "MAXBOUND"Integer Argument too Large "NULLARG"24"Argument cannot be NULL "PRELOAD"RAISEEXCEPTIONS"FUNCTION"DLLVERSION"RETURN"CLEAN_ERROR_STACK"ADD_ERROR"CALLINGFUNCTION"SETERRORTEXT"ADD_EXTERNAL_ERRORS"REGISTER_FUNCTION_CALL"FUNCTIONID"FUNCTIONNAME"FUNCTIONRETURN"FUNCTIONARGS"STRIPDIRSEP"INPATH"GETRESOURCE"RESOURCENAME""
SELECT 
 FROM (
SELECT ,
SELECT LOV_LBL_NO,UPPER(LOV_SQL) LOV_SQL,LOV_PRV,DFLT_ORDR,LOV_COL_CNT,LOV_COL_HID,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_LTR,LOV_COL_RTL,GRP_BY   FROM S_LOV_SLCT  WHERE UPPER(LOV_NM) = UPPER(:b1)  AND ROWNUM <= 1"SELECT LOV_LBL_NO,UPPER(LOV_SQL) LOV_SQL,LOV_PRV,DFLT_ORDR,LOV_COL_CNT,LOV_COL_HID,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_LTR,LOV_COL_RTL,GRP_BY   FROM S_LOV_SLCT  WHERE UPPER(LOV_NM) = UPPER(:b1)  AND ROWNUM <= 1"SELECT LOV_LBL_NO,UPPER(LOV_SQL) LOV_SQL,LOV_PRV,DFLT_ORDR,LOV_COL_CNT,LOV_COL_HID,LOV_COL_LBL,LOV_COL_WDTH,LOV_COL_LTR,LOV_COL_RTL,GRP_BY   FROM S_LO
V_SLCT  WHERE UPPER(LOV_NM) = UPPER(:b1)  AND ROWNUM <= 1"
_HELPONHELP"HELP_SETINDEX"HELP_SETCONTENTS"HELP_CONTEXTPOPUP"HELP_FORCEFILE"HELP_KEY"257"HELP_COMMAND"258"HELP_PARTIALKEY"261"HELP_MULTIKEY"513"HELP_SETWINPOS"515"HELP_CONTEXTMENU"HELP_FINDER"HELP_WM_HELP"HELP_SETPOPUP_POS"WM_SYSCOMMAND"274"WM_MDITILE"550"WM_MDICASCADE"551"WM_MDIICONARRANGE"552"SC_RESTORE"61728"SC_MINIMIZE"61472"SC_MAXIMIZE"61488"OFN_READONLY"OFN_OVERWRITEPROMPT"OFN_HIDEREADONLY"OFN_NOCHANGEDIR"OFN_SHOWHELP"16"OFN_NOVALIDATE"OFN_ALLOWMULTISELECT"512"OFN_EXTENSIONDIFFERENT"1024"OFN_PATHMUSTEXIST"2048"OFN_FILEMUSTEXIST"4096"OFN_CREATEPROMPT"8192"OFN_SHAREAWARE"16384"OFN_NOREADONLYRETURN"32768"OFN_NOTESTFILECREATE"65536"OFN_NONETWORKBUTTON"131072"OFN_NOLONGNAMES"262144"OFN_EXPLORER"524288"OFN_NODEREFERENCELINKS"1048576"OFN_LONGNAMES"2097152"OFN_FLAG_DEFAULT"530444"REG_EXPAND_SZ"REG_SZ"REG_DWORD"COMPAT_EXPAND_REG_VALUES"BOOLEAN"TRUE"TYPE"AFUNCTIONHANDLE"ORA_FFI"FUNCHANDLETYPE"BINARY_INTEGER"SUBTYPE"FILE_TYPE"ERROR_ENCOUNTERED"FALSE"ERROR_STACK"2000"API_ENABLED"DLL_HANDLE"LIBHANDLETYPE"FUNCTIONHANDLE"NOT_AVAILABLE"UERROR" Caused an unexpected error: "NOAPI"31"API Functions are not Available"MAXDWORD"33"Integer Argument exceeds 32 bits "MAXWORD"Integer Argument exceeds 16 bits "MAXBYTE"32"Integer Argument exceeds 8 bits "MINBOUND"Integer Argument too Small "MAXBOUND"Integer Argument too Large "NULLARG"24"Argument cannot be NULL "PRELOAD"RAISEEXCEPTIONS"FUNCTION"DLLVERSION"RETURN"CLEAN_ERROR_STACK"ADD_ERROR"CALLINGFUNCTION"SETERRORTEXT"ADD_EXTERNAL_ERRORS"REGISTER_FUNCTION_CALL"FUNCTIONID"FUNCTIONNAME"FUNCTIONRETURN"FUNCTIONARGS"STRIPDIRSEP"INPATH"GETRESOURCE"RESOURCENAME""
EXCEPTION IN UPDATE RMS_BILL_DTL IN PRINT : 
 AND Rms_RT_Bill_Dtl.I_CODE IN (SELECT RMS_V_ITM_PRNT.I_CODE FROM RMS_V_ITM_PRNT WHERE PRNTR_NO=
SELECT NVL(CONN_PRNTR_TYP,1)   FROM RMS_PARA  WHERE ROWNUM <= 1"SELECT COUNT(1)   FROM RMS_PRNTR  WHERE NVL(INACTIVE,0) = 0  AND PRNTR_NO = :b1"SELECT COUNT(1)   FROM RMS_PRNTR  WHERE BRN_NO = :b1  AND NVL(INACTIVE,0) = 0  AND PRNTR_NO = :b2"SELECT COUNT(1)   FROM RMS_PRNTR_TRMNL  WHERE TRMNL_NO = :b1  AND NVL(NO_PRNT_FLG,0) = 0  AND PRNTR_NO = :b2"SELECT COUNT(1)   FROM RMS_V_ITM_PRNT PRNT,RMS_BILL_DTL BILL  WHERE BILL.BILL_SRL = :b1  AND PRNT.I_CODE = BILL.I_CODE  AND PRNT.PRNTR_NO = :b2  AND NVL(BILL.ITM_PRNT_FLG,0) < 1"SELECT PRNT.PRNTR_NO,PRNTR_NM,RPRT_NM,RPRT_HDR   FROM RMS_PRNTR_BILL_DOC_TYP TYP,RMS_PRNTR PRNT  WHERE TYP.PRNTR_NO = PRNT.PRNTR_NO  AND PRNT.BRN_NO = :b1  AND BILL_DOC_TYPE = :b2  AND NVL(SMPL_RPRT_TYP,0) IN ( 1,3  ) AND NVL(PRNT.INACTIVE,0) = 0  AND NVL(TYP.NO_PRNT_FLG,0) = 0"SELECT PRNT.PRNTR_NO,PRNTR_NM,RPRT_NM,RPRT_HDR   FROM RMS_PRNTR_BILL_DOC_TYP TYP,RMS_PRNTR PRNT  WHERE TYP.PRNTR_NO = PRNT.PRNTR_NO  AND PRNT.BRN_NO = :b1  AND BILL_DOC_TYPE = :b2  AND NVL(SMPL_RPRT_TYP,0) = 1  AND NVL(PRNT.INACTIVE,0) = 0  AND NVL(TYP.NO_PRNT_FLG,0) = 0"SELECT 1   FROM RMS_BILL_DTL  WHERE BILL_SRL = :b1  AND NVL(ITM_PRNT_FLG,0) < 1  AND ROWNUM <= 1"SELECT PRNT.PRNTR_NO,PRNTR_NM,PRNTR_DSC,RPRT_NM,RPRT_HDR   FROM RMS_PRNTR_BILL_DOC_TYP TYP,RMS_PRNTR PRNT  WHERE TYP.PRNTR_NO = PRNT.PRNTR_NO  AND PRNT.BRN_NO = :b1  AND BILL_DOC_TYPE = :b2  AND NVL(SMPL_RPRT_TYP,0) IN ( 2,4  ) AND NVL(PRNT.INACTIVE,0) = 0  AND NVL(TYP.NO_PRNT_FLG,0) = 0"SELECT RCRD_NO,I_CODE   FROM RMS_BILL_DTL  WHERE BILL_SRL = :b1  AND NVL(ITM_PRNT_FLG,0) < 1  AND I_CODE IN (SELECT RMS_V_ITM_PRNT.I_CODE   FROM RMS_V_ITM_PRNT  WHERE PRNTR_NO = :b2 )"UPDATE RMS_BILL_DTL SET ITM_PRNT_FLG=1 WHERE BILL_SRL = :b1"SELECT PRNT.PRNTR_NO,PRNTR_NM,RPRT_NM,RPRT_HDR   FROM RMS_PRNTR_BILL_DOC_TYP TYP,RMS_PRNTR PRNT  WHERE TYP.PRNTR_NO = PRNT.PRNTR_NO  AND PRNT.BRN_NO = :b1  AND BILL_DOC_TYPE = :b2  AND NVL(SMPL_RPRT_TYP,0) = 2  AND NVL(PRNT.INACTIVE,0) = 0  AND NVL(TYP.NO_P
SELECT FORM_NO   FROM FORM_DETAIL  WHERE DOC_TYP = :b1  AND ROWNUM <= 1"SELECT SYS_NO,SCR_TYP,F_FILE_NAME,DOC_TYP   FROM FORM_DETAIL  WHERE FORM_NO = :b1  AND ROWNUM <= 1"
SELECT 1   FROM RMS_BILL_MST  WHERE BILL_DATE < TO_CHAR(:b1,''DD/MM/YYYY'')  AND NVL(STNDBY_FLG,0) = 1  AND AD_U_ID = :b2  AND ROWNUM <= 1"DELETE FROM RMS_RT_BILL_DTL_AUD_TMP WHERE RT_BILL_NO = :b1  AND RCRD_NO = :b2"DELETE FROM RMS_RT_BILL_DTL_AUD_TMP WHERE RT_BILL_NO = :b1  AND RCRD_NO = :b2"SELECT NVL(PRINT_PREV_BILL,0)   FROM PRIVILEGE_FIXED  WHERE U_ID = :b1"SELECT BILL_TYPE   FROM RMS_BILL_MST  WHERE BILL_SRL = :b1"SELECT RT_BILL_TYPE   FROM RMS_RT_BILL_MST  WHERE RT_BILL_SRL = :b1"SELECT NVL(PRINT_PREV_BILL,0)   FROM PRIVILEGE_FIXED  WHERE U_ID = :b1"SELECT BILL_TYPE,BILL_SRL   FROM RMS_BILL_MST  WHERE BILL_SRL = :b1"SELECT RT_BILL_TYPE   FROM RMS_RT_BILL_MST  WHERE RT_BILL_SRL = :b1"SELECT NVL(PRINT_PREV_BILL,0)   FROM PRIVILEGE_FIXED  WHERE U_ID = :b1"SELECT BILL_TYPE   FROM RMS_
BILL_MST  WHERE BILL_SRL = :b1"SELECT RT_BILL_TYPE   FROM RMS_RT_BILL_MST  WHERE RT_BILL_SRL = :b1"SELECT NVL(PRINT_PREV_BILL,0)   FROM PRIVILEGE_FIXED  WHERE U_ID = :b1"SELECT BILL_TYPE,BILL_DOC_TYPE   FROM RMS_BILL_MST  WHERE BILL_SRL = :b1"SELECT BILL_TYPE,BILL_DOC_TYPE   FROM RMS_HST_BILL_MST  WHERE BILL_SRL = :b1"SELECT RT_BILL_TYPE,RT_BILL_DOC_TYPE   FROM RMS_RT_BILL_MST  WHERE RT_BILL_SRL = :b1"SELECT RT_BILL_TYPE,RT_BILL_DOC_TYPE   FROM RMS_HST_RT_BILL_MST  WHERE RT_BILL_SRL = :b1"SELECT OPN_INVC_MORE_ONE   FROM RMS_PARA"SELECT NVL(PRINT_PREV_BILL,0),NVL(ALLOW_DEL_HUNG_BILLS,0)   FROM PRIVILEGE_FIXED  WHERE U_ID = :b1"
Update 
                           Where 
SELECT NVL(INV_DIS_LMT,0)   FROM PRIVILEGE_FIXED  WHERE U_ID = :b1"
 WHERE U_ID=
Select b.Flg_sr||'-'||b.FLG_DESC ,To_Char(b.Flg_Value) Flg_Value 
            From s_flags b
           where b.flg_code='REP_SMPLE'
      Order by b.Flg_Value
Select Lang_no||' - '||Lang_Name,to_char(Lang_no) From Ias_sys.lang_def Where nvl(Flg_St,1)=1 order by lang_no
 WHERE FORM_NO=
 SELECT FLG_SR||'- '||FLG_DESC,TO_CHAR(FLG_VALUE)   
 FROM S_FLAGS 
          WHERE UPPER(FLG_CODE)  =  
 Order by FLG_SR 
 SELECT FLG_DESC,TO_CHAR(FLG_VALUE)   
 FROM S_FLAGS 
      WHERE UPPER(FLG_CODE)  =  
 AND EXISTS (SELECT 1 FROM S_FLAGS_PRIV 
                         WHERE U_ID=
           Order by FLG_SR 
           Order by FLG_SR
Update 
                Where 
Select to_char(CUR_CODE)||' - '|| Decode(
,1,CUR_NAME,nvl(CUR_E_NAME,CUR_NAME)),to_char(CUR_CODE) From Ex_Rate order by Cur_no
Select to_char(cc_code)||' - '||Decode(
          From cost_centers 
             where c_s_m=(select cc_type from cost_center_types where affected_by_trans=1) 
               and Exists (select 1 from privilege_cc 
                            where (u_id=
           Order By cost_centers.cc_code
Select to_char(w_code)||' - '||Decode(
            From Warehouse_Details 
           Where Exists (Select 1 from Privilege_wh 
 where ( u_id=
            Order By Warehouse_Details.w_code
Select to_char(cash_no)||' - '||Decode(
            From Cash_In_Hand 
           Where Exists (Select 1 from Priv_cash 
 where ( u_id=
            Order By Cash_In_Hand.cash_no
Select to_char(Bank_no)||' - '||Decode(
            From Cash_at_Bank 
           Where Exists (Select 1 from Priv_cash 
 where ( u_id=
            Order By Cash_at_Bank.Bank_no
Select Type_Of_Item||' - '||Decode(
             From Item_Types 
            Order By Item_Types.Type_Of_Item
Select c_class||' - '||Decode(
             From Customer_Class 
            Order By Customer_Class.c_class
Select C_Degree||' - '||Decode(
             From Customer_Degree 
            Order By Customer_Degree.C_Degree
Select C_Group_Code||' - '||Decode(
             From Customer_Group 
            Order By Customer_Group.C_Group_Code
Select Group_No||' - '||Decode(
             From Account_Grouping 
            Order By Account_Grouping.Group_no
             From cc_grouping 
            Order By cc_grouping.Group_no
Select to_char( u_id)||' - '|| Decode(
,1,U_a_Name,nvl(U_e_name,U_a_Name)),to_char(u_id) from user_r order by u_id
Select Brn_no||'-'||Decode(
        From S_Brn 
        where ((
       Or Exists (select 1 From S_Brn_Usr_Priv
                  Where U_Id = 
            Order By Cmp_No , Brn_No
Select Count(1) From S_Brn 
        Where ((
       Or Exists ( Select 1 From S_Brn_Usr_Priv
                  Where U_Id = 
SELECT NVL(CONN_AC_CC,0),NVL(CONN_AC_PJ,0),NVL(HEAD_TYPE,1),NVL(SHOW_ENGINE_REP,1),NVL(SHOW_XLSBTN_REP,0),NVL(SHOW_PARAMTR_REP,0)   FROM IAS_PARA_GEN,IAS_PARA_GL"SELECT FO
RM_NO   FROM FORM_DETAIL CONNECT BY FORM_NO = PRIOR  F_PARENT_NO   START WITH FORM_NO = :b1  ORDER BY LEVEL"SEL
ECT FORM_NO   FROM FORM_DETAIL CONNECT BY FORM_NO = PRIOR  F_PARENT_NO   START WITH FORM_NO = :b1  ORDER BY LEVEL"SELECT MSG_DESC   FROM S_MSGS  WHERE LANG_NO = :b1  AND UPPER(MSG_CODE) = UPPER(:b2)  AND MSG_NO = :b3"SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = :b2"SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = 2"SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = :b2"SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = 2"SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = :b2"SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = 2"SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT NVL(PRINT_FLAG,0),NVL(VWREP_FLAG,0)   FROM PRIVILEGE  WHERE FORM_NO = :b1  AND U_ID = :b2  AND ROWNUM <= 1"SELECT 1   FROM ACCOUNT  WHERE A_CODE = :b1  AND A_S_M =  (SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )  AND ROWNUM <= 1"SELECT 1   FROM ACCOUNT  WHERE A_CODE = :b1  AND NVL(AC_CLOSE,0) IN ( 0,2  ) AND ROWNUM <= 1"SELECT 1   FROM ACCOUNT  WHERE A_CODE = :b1  AND ROWNUM <= 1"SELECT 1   FROM S_BRN  WHERE BRN_NO = :b1  AND ROWNUM <= 1"SELECT 1   FROM COST_CENTERS  WHERE CC_CODE = :b1  AND C_S_M =  (SELECT CC_TYPE   FROM COST_CENTER_TYPES  WHERE NVL(AFFECTED_BY_TRANS,0) = 1 )  AND ROWNUM <= 1"SELECT 1   FROM COST_CENTERS  WHERE CC_CODE = :b1  AND NVL(INACTIVE,0) = 0  AND ROWNUM <= 1"SELECT 1   FROM COST_CENTERS  WHERE CC_CODE = :b1  AND ROWNUM <= 1"SELECT 1   FROM IAS_PROJECTS  WHERE PJ_NO = :b1  AND PJ_SUB = 1  AND ROWNUM <= 1"SELECT 1   FROM IAS_PROJECTS  WHERE PJ_NO = :b1  AND NVL(INACTIVE,0) = 0  AND ROWNUM <= 1"SELECT 1   FROM IAS_PROJECTS  WHERE PJ_NO = :b1  AND ROWNUM <= 1"SELECT 1   FROM CASH_IN_HAND  WHERE CASH_NO = :b1  AND ROWNUM <= 1"SELECT 1   FROM CASH_IN_HAND  WHERE CASH_NO = :b1  AND NVL(INACTIVE,0) = 0  AND ROWNUM <= 1"SELECT 1   FROM CASH_AT_BANK  WHERE BANK_NO = :b1  AND ROWNUM <= 1"SELECT 1   FROM CASH_AT_BANK  WHERE BANK_NO = :b1  AND NVL(INACTIVE,0) = 0  AND ROWNUM <= 1"SELECT 1   FROM CUSTOMER  WHERE C_CODE = :b1  AND ROWNUM <= 1"SELECT 1   FROM CUSTOMER  WHERE C_CODE = :b1  AND NVL(INACTIVE,0) = 0  AND ROWNUM <= 1"SELECT 1   FROM WAREHOUSE_DETAILS  WHERE W_CODE = :b1  AND ROWNUM <= 1"SELECT 1   FROM WAREHOUSE_DETAILS  WHERE W_CODE = :b1  AND NVL(INACTIVE,0) = 0  AND ROWNUM <= 1"SELECT 1   FROM CUSTOMER_GROUP  WHERE C_GROUP_CODE = :b1  AND ROWNUM <= 1"SELECT 1   FROM ITEM_TYPES  WHERE TYPE_OF_ITEM = :b1  AND ROWNUM <= 1"SELECT CONN_ITM_ACT_BY_USR_PRIV   FROM IAS_PARA_INV"SELECT 1   FROM IAS_ITM_MST  WHERE I_CODE = :b1  AND GET_ITEMS_ACTIVITY(IAS_ITM_MST.ACTIVITY_NO,:b2,:b3) = 1  AND ROWNUM <= 1"SELECT NVL(INACTV,0)   FROM S_PRD_DTL  WHERE :b1 BETWEEN F_DATE AND T_DATE"SELECT NVL(PRD_CLS,0),NVL(INACTV,0),NVL(DEPR_CLS,0)   FROM S_PRD_BRN_CLS  WHERE BRN_NO = :b1  AND :b2 BETWEEN F_DATE AND T_DATE"SELECT COUNT(1)   FROM S_PRD_MST  WHERE INV_CLS = 1"SELECT YS_GEN_PKG.GET_CURDATE   FROM DUAL"SELECT COUNT(*)   FROM S_PRD_DTL  WHERE PRD_NO =  (SELECT MIN(PRD_NO)   FROM S_PRD_DTL )  AND :b1 >= F_DATE"SELECT 1   FROM FORM_DETAIL  WHERE FORM_NO = :b1  AND F_BT_PRIV = 0  AND ROWNUM <= 1"SELECT NVL(AD_FLAG,0),NVL(MOD_FLAG,0),NVL(DEL_FLAG,0),NVL(VIEW_FLAG,0),NVL(VWREP_FLAG,0),NVL(PRINT_FLAG,0)   FROM PRIVILEGE  WHERE U_ID = :b1  AND FORM_NO = :b2  AND EXISTS  (SELECT 1   FROM FORM_DETAIL  WHERE FORM_NO = PRIVILEGE.FORM_NO  AND F_BT_PRIV = 1  AND ROWNUM <= 1 )  AND ROWNUM <= 1"SELECT TAB_NAME,FLD_NAME   FROM IAS_FRM_FLD_PRIV  WHERE U_ID = :b1  AND FORM_NO = FORM_NO  AND PRIV_FLAG = 1"SELECT CAPTION_DET   FROM IAS_LABELS  WHERE LABEL_NO = :b1  AND LANG_NO = :b2  AND ROWNUM <= 1"SELECT CAPTION_DET   FROM IAS_LABELS  WHERE LABEL_NO = :b1  AND LANG_NO = :b2  AND ROWNUM <= 1"SELECT CAPTION_DET   FROM IAS_LABELS  WHERE LABEL_NO = :b1  AND LANG_NO = :b2"SELECT CAPTION_DET   FROM IAS_LABELS  WHERE LABEL_NO = :b1  AND LANG_NO = :b2"SELECT 1   FROM PRIV_ACC  WHERE U_ID = :b1  AND A_CODE = :b2  AND A_CY = :b3  AND
 NVL(ADD_FLAG,0) = 1  AND ROWNUM <= 1"SELECT 1   FROM PRIV_ACC  WHERE U_ID = :b1  AND A_CODE = :b2  AND ADD_FLAG = 1  AND ROWNUM <= 1"SELECT 1   FROM IAS_PRIV_CUSTOMER  WHERE U_ID = :b1  AND C_CODE = :b2  AND A_CY = :b3  AND NVL(ADD_FLAG,0) = 1  AND ROWNUM <= 1"SELECT 1   FROM IAS_PRIV_CUSTOMER  WHERE U_ID = :b1  AND C_CODE = :b2  AND ADD_FLAG = 1  AND ROWNUM <= 1"SELECT 1   FROM PRIVILEGE_CC  WHERE U_ID = :b1  AND CC_CODE = :b2  AND NVL(ADD_FLAG,1) = 1  AND ROWNUM <= 1"SELECT 1   FROM IAS_PRIV_PROJECTS  WHERE U_ID = :b1  AND PJ_NO = :b2  AND NVL(ADD_FLAG,1) = 1  AND ROWNUM <= 1"SELECT G_CODE   FROM IAS_ITM_MST  WHERE I_CODE = :b1  AND ROWNUM <= 1"SELECT 1   FROM PRIVILEGE_GC  WHERE U_ID = :b1  AND G_CODE = :b2  AND ADD_FLAG = 1  AND ROWNUM <= 1"SELECT 1   FROM PRIVILEGE_WH  WHERE U_ID = :b1  AND W_CODE = :b2  AND NVL(ADD_FLAG,0) = 1  AND ROWNUM <= 1"SELECT 1   FROM S_BRN_USR_PRIV  WHERE U_ID = :b1  AND BRN_NO = :b2  AND NVL(ADD_FLAG,0) = 1  AND ROWNUM <= 1"SELECT 1   FROM PRIV_CASH  WHERE U_ID = :b1  AND CASH_NO = :b2  AND A_CY = :b3  AND CASH_TYPE = :b4  AND NVL(ADD_FLAG,0) = 1  AND ROWNUM <= 1"SELECT 1   FROM PRIV_CASH  WHERE U_ID = :b1  AND CASH_NO = :b2  AND CASH_TYPE = :b3  AND ADD_FLAG = 1  AND ROWNUM <= 1"SELECT NVL(MIN_CUR_RATE,0),NVL(MAX_CUR_RATE,0)   FROM EX_RATE  WHERE CUR_CODE = :b1"SELECT NVL(INCLUDE_FLAG,0),NVL(VIEW_FLAG,0)   FROM PRIVILEGE  WHERE U_ID = :b1  AND FORM_NO = :b2"SELECT COUNT(*)   FROM S_FLAGS  WHERE UPPER(FLG_CODE) = '''' || UPPER(:b1)  || ''''   AND FLG_ST = 1"SELECT COUNT(*)   FROM S_FLAGS  WHERE UPPER(FLG_CODE) = '''' || UPPER(:b1)  || ''''   AND FLG_ST = 1  AND EXISTS  (SELECT 1   FROM S_FLAGS_PRIV  WHERE U_ID = :b2  AND FLG_CODE = S_FLAGS.FLG_CODE  AND FLG_VALUE = S_FLAGS.FLG_VALUE  AND PRIV_FLAG = 1 )"SELECT DECODE(:b1,1,CMP_LNAME,CMP_FNAME) || '' - ''  || DECODE(:b1,1,BRN_LNAME,BRN_FNAME) ,DECODE(:b1,1,CMP_FNAME,CMP_LNAME) || '' - ''  || DECODE(:b1,1,BRN_FNAME,BRN_LNAME) ,DECODE(:b1,1,BRN_LDES,BRN_FDES),DECODE(:b1,1,BRN_FDES,BRN_LDES),DECODE(:b1,1,BRN_LADD,BRN_FADD),DECODE(:b1,1,BRN_FADD,BRN_LADD),DECODE(:b1,1,BRN_LTELE,BRN_FTELE),DECODE(:b1,1,BRN_FTELE,BRN_LTELE),DECODE(:b1,1,BRN_LFAX,BRN_FFAX),DECODE(:b1,1,BRN_FFAX,BRN_LFAX),DECODE(:b1,1,BRN_LBOX,BRN_FBOX),DECODE(:b1,1,BRN_FBOX,BRN_LBOX),CMP_IMG   FROM S_BRN  WHERE BRN_NO = :b15"SELECT DECODE(:b1,1,CMP_ANAME,CMP_ENAME),DECODE(:b1,1,CMP_ENAME,CMP_ANAME),DECODE(:b1,1,BRN_ADES,BRN_EDES),DECODE(:b1,1,BRN_EDES,BRN_ADES),DECODE(:b1,1,BRN_AADD,BRN_EADD),DECODE(:b1,1,BRN_EADD,BRN_AADD),DECODE(:b1,1,BRN_ATELE,BRN_ETELE),DECODE(:b1,1,BRN_ETELE,BRN_ATELE),DECODE(:b1,1,BRN_AFAX,BRN_EFAX),DECODE(:b1,1,BRN_EFAX,BRN_AFAX),DECODE(:b1,1,BRN_ABOX,BRN_EFAX),DECODE(:b1,1,BRN_EBOX,BRN_ABOX),CMP_IMG   FROM IAS_USER_HEAD  WHERE U_ID = :b13"SELECT DECODE(:b1,1,CMP_LNAME,CMP_FNAME) || '' - ''  || DECODE(:b1,1,BRN_LNAME,BRN_FNAME) ,DECODE(:b1,1,CMP_FNAME,CMP_LNAME) || '' - ''  || DECODE(:b1,1,BRN_FNAME,BRN_LNAME) ,DECODE(:b1,1,BRN_LDES,BRN_FDES),DECODE(:b1,1,BRN_FDES,BRN_LDES),DECODE(:b1,1,BRN_LADD,BRN_FADD),DECODE(:b1,1,BRN_FADD,BRN_LADD),DECODE(:b1,1,BRN_LTELE,BRN_FTELE),DECODE(:b1,1,BRN_FTELE,BRN_LTELE),DECODE(:b1,1,BRN_LFAX,BRN_FFAX),DECODE(:b1,1,BRN_FFAX,BRN_LFAX),DECODE(:b1,1,BRN_LBOX,BRN_FFAX),DECODE(:b1,1,BRN_FBOX,BRN_LBOX),CMP_IMG   FROM S_BRN  WHERE BRN_NO = :b15"SELECT NVL(VWREP_FLAG,0),NVL(PRINT_FLAG,0)   FROM PRIVILEGE  WHERE U_ID = :b1  AND FORM_NO = :b2  AND ROWNUM <= 1"SELECT SIGNATURE1,SIGNATURE2,SIGNATURE3,SIGNATURE4,SIGNATURE5,SIGNATURE6   FROM IAS_SIGNATURE  WHERE LANG_NO = :b1  AND FORM_NO = :b2  AND NVL(JV_TYPE,0) = DECODE(:b3, NULL ,NVL(JV_TYPE,0),:b3)  AND ROWNUM <= 1"SELECT SIGNATURE1,SIGNATURE2,SIGNATURE3,SIGNATURE4,SIGNATURE5,SIGNATURE6   FROM IAS_SIGNATURE  WHERE LANG_NO = :b1  AND FORM_NO = :b2  AND ROWNUM <= 1"SELECT :b1 || ''tmprp_''  || USERENV(''SESSIONID'')  || ''.htm'' ,:b1 || ''tmprp_''  || USERENV(''SESSIONID'')  || ''0.gif''    FROM DUAL"SELECT ACCOUNT_TYPE   FROM ACCOUNT_TYPES  WHERE AFFECTED_BY_TRANS = 1"SELECT CUR_CODE   FROM EX_RATE  WHERE L_F = 1"SELECT CUR_CODE   FROM EX_RATE  WHERE STOCK_CUR = 1"SE
LECT NVL(CC_AVAIL,0),NVL(AP_AC_LINK_TYPE,1),NVL(AR_AC_LINK_TYPE,1),A_CODE_D_TYPE,VENDOR_D_TYPE,CUST_D_TYPE,CURR_TYPE,CC_D_TYPE,CC_LENGTH,INVOICING_SERIALS,INVOICING_SERIALS_SR,NVL(ITEM_POSTING_FLAG,0),NVL(USE_MULTI_WC,0)   FROM IAS_PARA_GEN,IAS_PARA_GL,IAS_PARA_INV,IAS_PARA_AP,IAS_PARA_AR"SELECT LST_SQL || LST_WHR  || ''  ''  || :b1  || ''   ORDER BY   ''  || NVL(LST_ORDRBY,1)    FROM S_LST_SLCT  WHERE LST_NM = :b2"SELECT LANG_EXT   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT SCR_THEME_NO   FROM FORM_DETAIL  WHERE FORM_NO = :b1  AND ROWNUM <= 1"SELECT SCR_THEME_NO   FROM USER_R  WHERE U_ID = :b1  AND ROWNUM <= 1"SELECT THM_NO   FROM S_THMS  WHERE NVL(THM_FLG,0) = 1  AND ROWNUM <= 1"SELECT THM_COLR_DATA,THM_COLR_USR   FROM S_THMS  WHERE THM_NO = :b1  AND ROWNUM <= 1"
SELECT NVL(DAY_NTFY_HUNG_INVC,0),NVL(USE_HUNG_INVC,0),NVL(MAX_HUNG_INVC,0)   FROM RMS_PARA"SELECT COUNT(1)   FROM RMS_BILL_MST  WHERE NVL(STNDBY_FLG,0) = 1  AND AD_U_ID = :b1  HAVING COUNT(1) > :b2"
SELECT MIN(CR_CARD_NO)   FROM CREDIT_CARD_TYPES  WHERE MACHINE_NO = :b1"SELECT CR_CARD_NAME   FROM CREDIT_CARD_TYPES  WHERE CR_CARD_NO = :b1"SELECT MIN(CR_CARD_NO)   FROM CREDIT_CARD_TYPES  WHERE CR_CARD_NO > :b1  AND MACHINE_NO = :b2"SELECT CR_CARD_NAME   FROM CREDIT_CARD_TYPES  WHERE CR_CARD_NO = :b1"SELECT MIN(CR_CARD_NO)   FROM CREDIT_CARD_TYPES  WHERE CR_CARD_NO > :b1  AND MACHINE_NO = :b2"SELECT CR_CARD_NAME   FROM CREDIT_CARD_TYPES  WHERE CR_CARD_NO = :b1"
"WIN_API_SHELL"WINEXEC"COMMAND"WINDOWSTYLE"RAISEEXCEPTIONS"STARTFILE"DOCUMENTFILE"WINHELP"HELPFILE"TARGET"HELPTYPE"WINHELPEX"XPOS"YPOS"WIDTH"HEIGHT"WINDOW"MOUSEPOSITION"SENDMESSAGE"MESSAGECODE"PARAM1"PARAM2"SENDKEYS"HWND"KEYS"START_OR_RESTORE"EXECUTABLE"ARGS"WINDOWCLASS"ACTIVATIONSTYLE"SHELLEXECUTE"OPERATION"FILE"PARAMETERS"DIRECTORY""
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OnyxERP_Sec_Files_2.4/yserpdba2lib.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
select count(*) from dual
Begin Proc
FUNCTION
CREATE OR REPLACE FUNCTION SYSTEM.GET_CONTEXT_VAL(p_context varchar2,p_key varchar2 default 'userenv') RETURN varchar2 IS
CREATE TABLE IAS_SYS.IAS_LICENSES_DETAILS
CREATE TABLE IAS_SYS.IAS_OBJ_SERVERS
CREATE TABLE IAS_SYS.IAS_OBJ_VIEW_DET
CREATE TABLE IAS_SYS.IAS_OBJ_VIEWS
ALTER TABLE IAS_SYS.IAS_OBJ_VIEWS ADD (
Other Error @ Call Security Check to review missing Priviliges Procedure in Lib ...
Other Error @ call_onyx_setup Procedure in Lib ...
Other Error @ call_admin_form Procedure in Lib ...
begin system.reset_Onyx_pw(
); end;
create or replace function 
8. If You have Forget the password , then log into Your DB with SYS as sysdba User From Main Server and change SYSTEM password along with IAS_SYS 
using the next Command from Command Prompt in Windows/Shell : 
then Restart the Instructions from Point 1 to end after the System re-initialize the Security Profile..
grant create ANY procedure to 
grant execute ANY procedure to 
GRANT SELECT ANY DICTIONARY to 
GRANT SELECT ANY TABLE to 
GRANT UPDATE ANY TABLE to 
GRANT ALTER ANY PROCEDURE to 
GRANT CREATE ANY PROCEDURE to 
GRANT DROP ANY PROCEDURE to 
CREATE OR REPLACE PROCEDURE system.exec_ddl wrapped 
CREATE OR REPLACE PROCEDURE system.reset_Onyx_pw wrapped 
grant create procedure to 
grant select any dictionary to 
CREATE OR REPLACE PROCEDURE system.reset_Onyx_pw wrapped 
Error re-Init Onyx System No 00003 From >> 
Error Init Onyx System No 00001 From >> 
Main Function for Database Connection is Not Exist.
Main Function for Database Connection is Not Valid or Has Error.
Error from Main Connection Function !!!
Error from Main Con
nection Function !!!
exception: Other Errors 
Password must start From A to Z or a to z ...
Other Error @ call_det_form Procedure in Lib ...
Forcing Connect to Global User Before Others... Begin
SELECT TO_DATE(:b1,:b2,''NLS_CALENDAR='' || :b3 )   FROM DUAL"SELECT UPPER(VALUE)   FROM NLS_DATABASE_PARAMETERS  WHERE PARAMETER = ''NLS_CHARACTERSET''"SELECT STATUS   FROM ALL_OBJECTS  WHERE OWNER = :b1  AND OBJECT_NAME = :b2  AND OBJECT_TYPE = :b3"SELECT NVL(COUNT(*),0),NVL(COUNT(DISTINCT STATUS),0)   FROM ALL_OBJECTS  WHERE (OWNER = ''IAS_SYS''  AND OBJECT_NAME IN ( ''IAS_LICENSES_DETAILS'',''IAS_OBJ_SERVERS'',''IAS_OBJ_VIEW_DET'',''IAS_OBJ_VIEWS'',''IAS_OBJ_VIEWS_PK'',''INIT_PKG''  )) OR (OWNER = ''SYS''  AND OBJECT_NAME IN ( ''YS_CONTEXT''  )) OR (OWNER = ''YSCONNUSR''  AND OBJECT_NAME IN ( ''GET_CONN''  )) OR (OWNER = ''SYSTEM''  AND OBJECT_NAME IN ( ''RESET_ONYX_PW'',''GET_CONTEXT_VAL''  ))"SELECT NVL(COUNT(*),0)   FROM ALL_USERS  WHERE USER IN ( ''YSCONNUSR'',''IAS_SYS''  )"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT NVL(COUNT(*),0)   FROM DBA_USERS  WHERE USERNAME NOT LIKE  ''IAS_SYS''  AND USERNAME LIKE  :b1 || ''%''"SELECT INSTANCE_NAME   FROM V$INSTANCE  WHERE ROWNUM <= 1"SELECT NVL(COUNT(*),0),NVL(COUNT(*),0)   FROM DBA_USERS  WHERE USERNAME NOT LIKE  ''IAS_SYS''  AND ((USERNAME LIKE  :b1 || ''%''   AND :b2 IN ( ''FNGI008'',''FNGI012'',''ERP_LOGIN''  )) OR (USERNAME LIKE  :b3 || ''%''   AND :b2 = ''POSLGN'' ) OR (USERNAME LIKE  :b5 || ''%''   AND :b2 = ''RMSLGN'' ))"SELECT NVL(COUNT(*),0)   FROM DBA_USERS  WHERE USERNAME NOT LIKE  ''IAS_SYS''  AND USERNAME LIKE  :b1 || ''%''"SELECT USERNAME USR   FROM ALL_USERS  WHERE (USERNAME = :b1  OR USERNAME LIKE  :b2 || ''%''   OR USERNAME LIKE  :b3 || 
''%''   OR USERNAME LIKE  :b4 || ''%''   OR USERNAME = ''SYS''  OR USERNAME = ''SYSTEM'' ) AND UPPER(USERNAME) LIKE  NVL(:b5,''%'')"SELECT USERNAME USR   FROM ALL_USERS  WHERE (USERNAME LIKE  ''IAS%''  OR USERNAME LIKE  ''YSPOS%'' ) AND USERNAME LIKE  :b1"SELECT TO_NUMBER(:b1,''FM0XXXXXXXXXXX'')   FROM DUAL"SELECT TO_CHAR(DBID,''FM0XXXXXXXXXXX'')   FROM V$DATABASE"SELECT TO_NUMBER(:b1,''FM0XXXXXXXXXXX'')   FROM DUAL"SELECT TO_NUMBER(:b1,''0XXXXXXXXXXX'')   FROM DUAL"SELECT 1,STATUS   FROM ALL_OBJECTS  WHERE OWNER = ''YSCONNUSR''  AND OBJECT_NAME IN ( ''GET_CONN''  )"SELECT TO_CHAR(:b1,''FM0XXXXXXXXXXX'')   FROM DUAL"SELECT TO_NUMBER(:b1,''FM0XXXXXXXXXXX'')   FROM DUAL"SELECT UPPER(USERNAME)   FROM DBA_USERS  WHERE UPPER(USERNAME) = UPPER(:b1)"SELECT INSTANCE_NAME   FROM V$INSTANCE  WHERE ROWNUM <= 1"SELECT NVL(COUNT(*),0)   FROM DBA_USERS  WHERE USERNAME NOT LIKE  ''IAS_SYS''  AND ((USERNAME LIKE  :b1 || ''%''   AND :b2 IN ( ''FNGI008'',''FNGI012'',''ERP_LOGIN''  )) OR (USERNAME LIKE  :b3 || ''%''   AND :b2 = ''POSLGN'' ) OR (USERNAME LIKE  :b5 || ''%''   AND :b2 = ''RMSLGN'' ))"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OnyxERP_Sec_Files_2.4/yserpdbalib.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
Error From EXEC_SQL Package >>
Other Error From EXEC_SQL Package >>
begin system.reset_Onyx_pw(
); end;
grant create procedure to 
CREATE OR REPLACE PROCEDURE SYSTEM.reset_Onyx_pw wrapped 
create or replace function 
Password must start From A to Z or a to z ...
Other Error @ call_admin_form Procedure in Lib ...
SELECT USERNAME USR   FROM ALL_USERS  WHERE (USERNAME LIKE  ''IAS%''  OR USERNAME LIKE  ''YSPOS%'' ) AND USERNAME LIKE  :b1"SELECT TO_NUMBER(:b1,''0XXXXXXXXXXX'')   FROM DUAL"SELECT TO_NUMBER(:b1,''0XXXXXXXXXXX'')   FROM DUAL"SELECT TO_CHAR(:b1,''FM0XXXXXXXXXXX'')   FROM DUAL"SELECT CAPTION_DET   FROM IAS_SYS.IAS_LABELS  WHERE LABEL_NO = :b1  AND LANG_NO = :b2  AND ROWNUM <= 1"INSERT INTO IAS_SYS.YS_PARA_COLS VALUES ( :b1,NVL(:b2,''xxxxxxxxx''),:b3,:b4,:b5  )"
FUNCTION InterruptCheck (   ButtonHandle  IN  PLS_INTEGER) RETURN BOOLEAN;
FUNCTION Get_Tick_Count RETURN PLS_INTEGER;
"WIN_API_UTILITY"DELETE_FILE"FILENAME"RAISEEXCEPTIONS"MOVE_FILE"OLDFILENAME"NEWFILENAME"COPY_FILE"ALLOWOVERWRITE"CREATE_DIRECTORY"DIRECTORYPATH"DELETE_DIRECTORY"GENERATE_TEMP_FILENAME"PATH"PREFIX"GET_ACTIVE_WINDOW"GET_PARENT_WINDOW"WINDOW_HANDLE"RECURSIVE"PLAY_WAV"ASYNCHRONOUS"SLEEP"SLEEPTIME"INTERRUPTCHECK"BUTTONHANDLE"GET_TICK_COUNT""
Setting init Var Begin for Mac-PCx
FUNCTION
CREATE OR REPLACE FUNCTION SYSTEM.GET_CONTEXT_VAL(p_context varchar2,p_key varchar2 default 'userenv') RETURN varchar2 IS
CREATE TABLE IAS_SYS.IAS_LICENSES_DETAILS
CREATE TABLE IAS_SYS.IAS_OBJ_SERVERS
CREATE TABLE IAS_SYS.IAS_OBJ_VIEW_DET
CREATE TABLE IAS_SYS.IAS_OBJ_VIEWS
ALTER TABLE IAS_SYS.IAS_OBJ_VIEWS ADD (
Begining of show_banner 
g_license_exists and will return from setup_when_new_form XXXXXXXXXXXXXXXXXXXXXX
Calling CHECK_ALL_OBJECTS_SETUP from  setup_pre_form 
Calling INIT_GLOB_PRIV_VAR from  setup_pre_form 
Enforcing RunTime Process to Server from 
Calling check_package from  setup_pre_form 
Checking App Version from  setup_pre_form with=
Starting Checking Prev. Licenses From PreForm ....
Ending Checking Prev. Licenses From PreForm ....
You already Logoed in From This Unit , Year and User ,
SELECT TO_NUMBER(:b1,''FM0XXXXXXXXX'')   FROM DUAL"SELECT TO_CHAR(:b1,''FM0XXXXXXXXX'')   FROM DUAL"SELECT SID,SERIAL#,USERNAME   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND CLIENT_INFO = :b2  AND STATUS != ''KILLED''"SELECT NVL(COUNT(*),0),SUM(LENGTH(TEXT)),SUM(LINE),NVL(COUNT(*) || SUM(LENGTH(TEXT))  || SUM(LINE) ,0)   FROM ALL_SOURCE  WHERE OWNER = ''IAS_SYS''  AND NAME = ''INIT_PKG''"DELETE FROM IAS_SYS.IAS_OBJ_VIEWS"DELETE FROM IAS_SYS.IAS_OBJ_VIEW_DET"SELECT NVL(COUNT(*),0),SUM(LENGTH(TEXT)),SUM(LINE),NVL(COUNT(*) || SUM(LENGTH(TEXT)) 
 || SUM(LINE) ,0)   FROM ALL_SOURCE  WHERE OWNER = ''IAS_SYS''  AND NAME = ''INIT_PKG''"DELETE FROM IAS_SYS.IAS_OBJ_VIEWS"DELETE FROM IAS_SYS.IAS_OBJ_VIEW_DET"SELECT TO_CHAR(TO_DATE(:b1,''DDMMRRRR'',''NLS_CALENDAR=Gregorian''),''ddmmrrrr'')   FROM DUAL"SELECT TO_DATE(:b1,''DDMMRRRR'',''NLS_CALENDAR=Gregorian'')   FROM DUAL"DELETE FROM IAS_SYS.IAS_OBJ_VIEWS"DELETE FROM IAS_SYS.IAS_OBJ_VIEW_DET"SELECT NVL(COUNT(DISTINCT CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND ACTION = ''M'' || UPPER(:b2)   AND MODULE = UPPER(:b3)  AND STATUS != ''KILLED''"SELECT NVL(COUNT(CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND ACTION = ''M'' || UPPER(:b2)   AND MODULE = UPPER(:b3)  AND STATUS != ''KILLED''"SELECT F_SYS   FROM FORM_DETAIL  WHERE FORM_NO = :b1"SELECT STATUS   FROM ALL_OBJECTS  WHERE OWNER = :b1  AND OBJECT_NAME = :b2  AND OBJECT_TYPE = :b3"SELECT NVL(COUNT(*),0),NVL(COUNT(DISTINCT STATUS),0),COUNT(DECODE(OBJECT_TYPE,''TABLE'',1, NULL )) TAB_CNT,COUNT(DECODE(SUBSTR(OBJECT_TYPE,1,7),''PACKAGE'',1, NULL )) PKG_CNT   FROM ALL_OBJECTS  WHERE (OWNER = ''IAS_SYS''  AND OBJECT_NAME IN ( ''IAS_LICENSES_DETAILS'',''IAS_OBJ_SERVERS'',''IAS_OBJ_VIEW_DET'',''IAS_OBJ_VIEWS'',''IAS_OBJ_VIEWS_PK'',''INIT_PKG'',''YS_CONTEXT''  )) OR (OWNER = ''SYS''  AND OBJECT_NAME IN ( ''YS_CONTEXT''  )) OR (OWNER = ''SYSTEM''  AND OBJECT_NAME IN ( ''GET_CONTEXT_VAL''  ))"SELECT COUNT(DISTINCT (SUBSTR(USERNAME,8)))   FROM DBA_USERS  WHERE USERNAME LIKE  CHR(89) || CHR(83)  || CHR(80)  || CHR(79)  || CHR(83)  || CHR(37)"SELECT COUNT(DISTINCT (SUBSTR(USERNAME,8)))   FROM DBA_USERS  WHERE USERNAME LIKE  CHR(89) || CHR(83)  || CHR(82)  || CHR(77)  || CHR(83)  || CHR(37)"SELECT COUNT(DISTINCT (SUBSTR(USERNAME,8)))   FROM DBA_USERS  WHERE USERNAME LIKE  CHR(73) || CHR(65)  || CHR(83)  || CHR(37)   AND SUBSTR(USERNAME,1,7) != ''IAS_SYS''  AND SUBSTR(USERNAME,1,5) != ''IAS_A''  AND SUBSTR(USERNAME,1,5) != ''IAS_I''"SELECT NVL(MAX(REM_OFF),0)   FROM (SELECT OWNER,COUNT(DISTINCT SNAPSHOT_SITE) REM_OFF   FROM SYS.DBA_REGISTERED_SNAPSHOTS,GLOBAL_NAME  WHERE OWNER LIKE  CHR(73) || CHR(65)  || CHR(83)  || CHR(37)   AND SUBSTR(OWNER,1,7) != ''IAS_SYS''  AND SUBSTR(OWNER,1,5) != ''IAS_A''  AND SUBSTR(OWNER,1,5) != ''IAS_I''  AND GLOBAL_NAME != SNAPSHOT_SITE  GROUP BY OWNER )"SELECT NVL(COUNT(*),0)   FROM DBA_DB_LINKS  WHERE DB_LINK LIKE  ''DB_LNK_CNTR%''"SELECT NVL(COUNT(*),0)   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"SELECT COUNT(*)   FROM S_BRN"SELECT NVL(COUNT(*),0)   FROM IAS_POS_MACHINE"SELECT NVL(MAX(REM_OFF),0)   FROM (SELECT OWNER,COUNT(DISTINCT SNAPSHOT_SITE) REM_OFF   FROM SYS.DBA_REGISTERED_SNAPSHOTS,GLOBAL_NAME  WHERE OWNER LIKE  CHR(89) || CHR(83)  || CHR(80)  || CHR(79)  || CHR(83)  || CHR(37)   AND GLOBAL_NAME != SNAPSHOT_SITE  GROUP BY OWNER )"SELECT NVL(COUNT(*),0)   FROM RMS_TRMNL"SELECT NVL(MAX(REM_OFF),0)   FROM (SELECT OWNER,COUNT(DISTINCT SNAPSHOT_SITE) REM_OFF   FROM SYS.DBA_REGISTERED_SNAPSHOTS,GLOBAL_NAME  WHERE OWNER LIKE  CHR(89) || CHR(83)  || CHR(82)  || CHR(77)  || CHR(83)  || CHR(37)   AND GLOBAL_NAME != SNAPSHOT_SITE  GROUP BY OWNER )"SELECT MOD_ID   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID != 0  AND NVL(:b1,-1) = 0 ORDER BY TO_NUMBER(MOD_ID)"DELETE FROM IAS_SYS.IAS_OBJ_VIEWS WHERE MOD_ID = NVL(:b1,-2)"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = 0"SELECT COUNT(*)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT CREATED   FROM DBA_USERS  WHERE USERNAME = ''IAS_SYS''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',:b1)"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT PLATFORM_NAME,DBID,DATAGUARD_BROKER,GUARD_STATUS   FROM V$DATABASE"SELECT NVL(COUNT(*),0)   FROM DBA_USERS  WHERE USERNAME LIKE  :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT COUNT(DISTINCT CLIENT_INFO
),COUNT(CLIENT_INFO)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT SUM(CNT),SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIENT_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b3)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b4)   AND STATUS != ''KILLED''  AND UPPER(DECODE(:b1,1,CLIENT_INFO,TERMINAL)) != UPPER(:b6)  GROUP BY DECODE(:b1,1,CLIENT_INFO,TERMINAL) )"SELECT SUM(CNT) - 1 ,SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIENT_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b3)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b4)   AND STATUS != ''KILLED
''  AND UPPER(DECODE(:b1,1,CLIENT_INFO,TERMINAL)) = UPPER(:b6)  GROUP BY DECODE(:b1,1,CLIENT_INFO,TERMINAL) )"SELECT NVL(COUNT(DISTINCT CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT NVL(COUNT(*),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT SID,CLIENT_INFO,SERIAL# SER,STATUS,TERMINAL,MACHINE,USERNAME,MODULE   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND STATUS != ''KILLED''  AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND CLIENT_INFO LIKE  :b2 || ''%''"SELECT NVL(COUNT(DISTINCT CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT NVL(COUNT(CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT NVL(COUNT(DISTINCT CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND STATUS != ''KILLED''"SELECT NVL(COUNT(DISTINCT CLIENT_INFO),0),NVL(COUNT(CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND CLIENT_INFO = :b2  AND STATUS != ''KILLED''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',:b1)"
SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS"SELECT TO_CHAR(DBID,''FM0XXXXXXXXXXX''),TO_CHAR(DBID + ACTIVATION# ,''FM0XXXXXXXXXXX'')   FROM V$DATABASE"
CREATE TABLE IAS_SYS.IAS_OBJ_SERVERS
CREATE TABLE IAS_SYS.IAS_OBJ_VIEW_DET
CREATE TABLE IAS_SYS.IAS_OBJ_VIEWS
System was Licensed for version %l% with ability to update to version %x%.
SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = :b2"SELECT STATUS   FROM ALL_OBJECTS  WHERE OWNER = ''IAS_SYS''  AND OBJECT_NAME = ''IAS_MSGS''"INSERT INTO IAS_MSGS ( MSG_NO,LANG_NO,CAPTION_DET )  VALUES ( :b1,:b2,:b3  )"
COUNT(*),0)   FROM S_BRN  WHERE NVL(BRN_LGHT,0) = 1"SELECT COUNT(*)   FROM S_BRN"SELECT NVL(COUNT(*),0)   FROM IAS_POS_MACHINE"SELECT NVL(MAX(REM_OFF),0)   FROM (SELECT OWNER,COUNT(DISTINCT SNAPSHOT_SITE) REM_OFF   FROM SYS.DBA_REGISTERED_SNAPSHOTS,GLOBAL_NAME  WHERE OWNER LIKE  CHR(89) || CHR(83)  || CHR(80)  || CHR(79)  || CHR(83)  || CHR(37)   AND GLOBAL_NAME != SNAPSHOT_SITE  GROUP BY OWNER )"SELECT NVL(COUNT(*),0)   FROM RMS_TRMNL"SELECT NVL(MAX(REM_OFF),0)   FROM (SELECT OWNER,COUNT(DISTINCT SNAPSHOT_SITE) REM_OFF   FROM SYS.DBA_REGISTERED_SNAPSHOTS,GLOBAL_NAME  WHERE OWNER LIKE  CHR(89) || CHR(83)  || CHR(82)  || CHR(77)  || CHR(83)  || CHR(37)   AND GLOBAL_NAME != SNAPSHOT_SITE  GROUP BY OWNER )"SELECT MOD_ID   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID != 0  AND NVL(:b1,-1) = 0 ORDER BY TO_NUMBER(MOD_ID)"DELETE FROM IAS_SYS.IAS_OBJ_VIEWS WHERE MOD_ID = NVL(:b1,-2)"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = 0"SELECT COUNT(*)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT CREATED   FROM DBA_USERS  WHERE USERNAME = ''IAS_SYS''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',:b1)"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT PLATFORM_NAME,DBID,DATAGUARD_BROKER,GUARD_STATUS   FROM V$DATABASE"SELECT NVL(COUNT(*),0)   FROM DBA_USERS  WHERE USERNAME LIKE  :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT COUNT(DISTINCT CLIENT_INFO
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OldFiles/calendar.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
"DATE_LOV"SET_DAY_LABELS"DISPLAY_CAL"DISPLAY_DATE"FIRST_DATE"FIRST_DOW"LAST_DOM"LOOP_BEGIN"LOOP_END"CURRENT_DATE"DAY_LABEL"I"GET_DATE"RETURN_ITEM"V_X_POS"V_Y_POS"V_TITLE"V_OK"V_CANCEL"V_HIGHLIGHT"V_AUTOCONFIRM"V_AUTOSKIP"DATE_WINDOW"ID"DATE_CLICK""
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OldFiles/IASLIBSEC.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
select 
 license_title from dual
and you are limited to update to version 
FUNCTION
CREATE OR REPLACE FUNCTION SYSTEM.GET_CONTEXT_VAL(p_context varchar2,p_key varchar2 default 'userenv') RETURN varchar2 IS
CREATE TABLE IAS_SYS.IAS_LICENSES_DETAILS
CREATE TABLE IAS_SYS.IAS_OBJ_SERVERS
CREATE TABLE IAS_SYS.IAS_OBJ_VIEW_DET
CREATE TABLE IAS_SYS.IAS_OBJ_VIEWS
ALTER TABLE IAS_SYS.IAS_OBJ_VIEWS ADD (
select DISTINCT USERNAME,USERNAME 
 from DBA_USERS WHERE USERNAME LIKE 'IAS2%' AND USERNAME NOT LIKE 'IAS_SYS' ORDER BY 1 
SELECT TO_CHAR(TO_DATE(:b1,''DDMMRRRR'',''NLS_CALENDAR=Gregorian''),''ddmmrrrr'')   FROM DUAL"SELECT TO_DATE(:b1,''DDMMRRRR'',''NLS_CALENDAR=Gregorian'')   FROM DUAL"SELECT CAPTION_DET   FROM IAS_SYS.IAS_LABELS  WHERE LANG_NO = :b1  AND LABEL_NO = :b2"SELECT STATUS   FROM ALL_OBJECTS  WHERE OWNER = :b1  AND OBJECT_NAME = :b2  AND OBJECT_TYPE = :b3"SELECT COUNT(DISTINCT (SUBSTR(USERNAME,8)))   FROM DBA_USERS  WHERE USERNAME LIKE  ''IAS2%''"SELECT COUNT(*)   FROM USER_DB_LINKS"SELECT COUNT(*)   FROM S_BRN"SELECT COUNT(*)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT CREATED   FROM DBA_USERS  WHERE USERNAME = ''IAS_SYS''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',''ys_context'')"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT COUNT(DISTINCT CLIENT_INFO),COUNT(CLIENT_INFO)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT SUM(CNT),SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIENT_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b3)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b4)   AND STATUS != ''KILLED''  AND UPPER(DECODE(:b1,1,CLIENT_INFO,TERMINAL)) != UPPER(:b6)  GROUP BY DECODE(:b1,1,CLIENT_INFO,TERMINAL) )"SELECT SUM(CNT) - 1 ,SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIEN
T_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b3)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b4)   AND STATUS != ''KILLED''  AND UPPER(DECODE(:b1,1,CLIENT_INFO,TERMINAL)) = UPPER(:b6)  GROUP BY DECODE(:b1,1,CLIENT_INFO,TERMINAL) )"SELECT SID,CLIENT_INFO,SERIAL# SER,STATUS,TERMINAL,MACHINE,USERNAME,MODULE   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND STATUS != ''KILLED''  AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND CLIENT_INFO LIKE  :b2 || ''%''"SELECT NVL(COUNT(*),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) LIKE  ''%'' || UPPER(:b1)  || ''%''"SELECT NVL(COUNT(DISTINCT CLIENT_INFO),0)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',''ys_context'')"SELECT FORM_NAME   FROM FORM_DETAIL F,IAS_FORM_NAME I  WHERE I.FORM_NO = F.FORM_NO  AND I.LANG_NO = :b1  AND F.FORM_NO = DECODE(:b2,1,900,6,3,7,4,8,6,9,5,3,5000,4,6000,5,7000,-3)"
PROCEDURES  
"WIN_API_ENVIRONMENT"READ_INI_FILE"FILENAME"SECTION"ENTRY"RAISEEXCEPTIONS"WRITE_INI_FILE"VALUE"GET_WINDOWS_USERNAME"GET_WINDOWS_VERSION"GET_ENVIRONMENT_STRING"VARIABLENAME"GET_WINDOWS_DIRECTORY"GET_TEMP_DIRECTORY"GET_NET_CONNECTION"DRIVELETTER"READ_REGISTRY"REGPATH"REGENTRY"WRITE_REGISTRY"REGVALUE"WRITE_REGISTRYEX"REGFORMAT"CREATE_REGISTRY_KEY"DELETE_REGISTRY_KEY"GET_WORKING_DIRECTORY"SET_WORKING_DIRECTORY"WORKINGDIRECTORY"GET_COMPUTER_NAME"GET_DEFAULT_PRINTER"PRINTERNAME"PORT""
SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS"SELECT TO_CHAR(DBID,''FM0XXXXXXXXXXX''),TO_CHAR(DBID + ACTIVATION# ,''FM0XXXXXXXXXXX'')   FROM V$DATABASE"
System was Licensed for version %l% with ability to update to version %x%.
SELECT NVL(CAPTION_DET,'''')   FROM IAS_MSGS  WHERE MSG_NO = :b1  AND LANG_NO = :b2"INSERT INTO IAS_MSGS ( MSG_NO,LANG_NO,CAPTION_DET )  VALUES ( :b1,:b2,:b3  )"
SELECT TO_CHAR(TO_DATE(:b1,''DDMMRRRR'',''NLS_CALENDAR=Gregorian''),''ddmmrrrr'')   FROM DUAL"SELECT TO_DATE(:b1,''DDMMRRRR'',''NLS_CALENDAR=Gregorian'')   FROM DUAL"SELECT CAPTION_DET   FROM IAS_SYS.IAS_LABELS  WHERE LANG_NO = :b1  AND LABEL_NO = :b2"SELECT STATUS   FROM ALL_OBJECTS  WHERE OWNER = :b1  AND OBJECT_NAME = :b2  AND OBJECT_TYPE = :b3"SELECT COUNT(DISTINCT (SUBSTR(USERNAME,8)))   FROM DBA_USERS  WHERE USERNAME LIKE  ''IAS2%''"SELECT COUNT(*)   FROM USER_DB_LINKS"SELECT COUNT(*)   FROM S_BRN"SELECT COUNT(*)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT CREATED   FROM DBA_USERS  WHERE USERNAME = ''IAS_SYS''"SELECT MAX(AUDSID)   FROM V$SESSION  WHERE AUDSID = SYSTEM.GET_CONTEXT_VAL(''IAS_SYS.sid'',''ys_context'')"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT NVL(COUNT(*),0)   FROM IAS_SYS.IAS_OBJ_VIEWS  WHERE MOD_ID = :b1"SELECT COUNT(DISTINCT CLIENT_INFO),COUNT(CLIENT_INFO)   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b1)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b2)   AND STATUS != ''KILLED''"SELECT SUM(CNT),SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIENT_INFO,TERMINAL) SESSID,CEIL(NVL(COUNT(*),0) / :b2 ) CNT,NVL(COUNT(*),0) TOTCNT   FROM V$SESSION  WHERE USERNAME IS NOT NULL   AND UPPER(USERNAME) = UPPER(:b3)  AND CLIENT_INFO IS NOT NULL   AND ACTION = ''M'' || UPPER(:b4)   AND STATUS != ''KILLED''  AND UPPER(DECODE(:b1,1,CLIENT_INFO,TERMINAL)) != UPPER(:b6)  GROUP BY DECODE(:b1,1,CLIENT_INFO,TERMINAL) )"SELECT SUM(CNT) - 1 ,SUM(TOTCNT)   FROM (SELECT DECODE(:b1,1,CLIEN
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OldFiles/MRPOG.plx ==========
BEGIN 
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OldFiles/SYS_E_LIB2.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
SELECT C.IBNF_USE_BL
K_LST,C.ISNDR_USE_BLK_LST,C.USE_BLK_LST,C.OBNF_USE_BLK_LST,C.OCHK_USE_BLK_LST,C.OCHKB_USE_BLK_LST,C.XCH_USE_BLK_LST,C.CHKP_USE_BLK_LST,C.TCHK_USE_BLK_LST   FROM MTX_CTRL C  WHERE ROWNUM = 1"SELECT OVRD_EXACT_ID_BL,OVRD_EXACT_NM_BL,OVRD_SMLR_NM_BL   FROM MTX_V_USERS  WHERE S_USERID = :b1  AND ROWNUM <= 1"
SELECT FORM_NO   FROM FORM_DETAIL  WHERE F_FILE_NAME = :b1"SELECT AD_FLAG || MOD_FLAG  || DEL_FLAG  || VIEW_FLAG  || PRINT_FLAG    FROM PRIVILEGE  WHERE U_ID = :b1  AND FORM_NO = :b2"
SELECT TRUNC(SYSDATE) - TRUNC(GLDPK.F_GET_USER_FINDATE(:b1))    FROM DUAL"SELECT S.CONN_BRN_NO   FROM USER_R S  WHERE S.U_ID = :b1  AND ROWNUM <= 1"SELECT 1   FROM IAS_SYS.S_TRMNLS  WHERE TRMNL_NAME = USERENV(''TERMINAL'')  AND ROWNUM <= 1"SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"
SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT FORM_NAME   FROM IAS_FORM_NAME  WHERE FORM_NO = :b1  AND LANG_NO = :b2"SELECT FORM_NAME   FROM IAS_FORM_NAME  WHERE FORM_NO = :b1  AND LANG_NO = :b2"SELECT DECODE(:b1,1,BRN_LNAME,NVL(BRN_FNAME,BRN_LNAME))   FROM S_BRN  WHERE CMP_NO = 
 select f.flg_desc flg_desc
  from MTX_V_USR_TRX_PRIV f   
 where upper(f.flg_code) = '
 order by f.flg_value 
SELECT 3   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 3  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''TRX_CURR''"SELECT 1   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 1  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''TRX_CURR''"SELECT 2   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 2  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''TRX_CURR''"SELECT 3   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 3  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"SELECT 1   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 1  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"SELECT 2   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 2  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"SELECT 3   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 3  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"SELECT 2   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 2  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"
SELECT SYSDATE   FROM DUAL"SELECT TRUNC(DBMS_RANDOM.VALUE(100000000,999999999),-1)   FROM DUAL"
SELECT MSG_DESC   FROM MTX_MSGS  WHERE UPPER(MSG_CODE) = UPPER(:b1)  AND MSG_NUM = TO_NUMBER(:b2)  AND LANG_NO = :b3"
SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT MSG_CODE,MSG_NUM,MSG_DESC,MSG_TITLE,MSG_BUT1,MSG_BUT2,MSG_BUT3,MSG_STYLE   FROM MTX_MSGS  WHERE (UPPER(MSG_CODE) = UPPER(:b1) ) AND (MSG_NUM = :b2 ) AND (LANG_NO = :b3 )"
procedure match_with_black_list(a_trx_flag
SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT MSG_CODE,MSG_NUM,MSG_DESC,MSG_TITLE,MSG_BUT1,MSG_BUT2,MSG_BUT3,MSG_STYLE   FROM MTX_MSGS  WHERE (UPPER(MSG_CODE) = UPPER(:b1) ) AND (MSG_NUM = :b2 ) AND (LANG_NO = :b3 )"
SELECT MSG_DESC   FROM MTX_MSGS  WHERE UPPER(MSG_CODE) = UPPER(:b1)  AND MSG_NUM = TO_NUMBER(:b2)  AND LANG_NO = :b3"
SELECT MSG_DESC   FROM MTX_MSGS  WHERE UPPER(MSG_CODE) = UPPER(:b1)  AND MSG_NUM = TO_NUMBER(:b2)  AND LANG_NO = :b3"
SELECT NVL(S.ADMIN_USER,2)   FROM USER_R S  WHERE U_ID = :b1  AND ROWNUM <= 1"
SELECT DISTINCT BLK_NAME,FLD_TYPE   FROM S_FLD_SPEC  WHERE S_PRGCD = :b1  AND LANG_FLAG = :b2"SELECT BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT   FROM S_FLD_SPEC  WHERE S_PRGCD = :b1  AND BLK_NAME = :b2  AND LANG_FLAG = :b3  AND FLD_TYPE = 2"SELECT BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT   FROM S_FLD_SPEC  WHERE S_PRGCD = :b1  AND BLK_NAME = :b2  AND LANG_FLAG = :b3  AND FLD_TYPE IN ( 5,6  )"SELECT BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT   FROM S_FLD_SPEC  WHERE S_PRGCD = :b1  AND BLK_NAME = :b2  AND LANG_FLAG = :b3  AND FLD_TYPE = 1"SELECT BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT   FROM S_FLD_SPEC  WHERE S_PRGCD = :b1  AND BLK_NAME = :b2  AND LANG_FLAG = :b3  AND FLD_TYPE = 4"SELECT BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT   FROM S_FLD_SPEC  WHERE S_PRGCD = :b1  AND BLK_NAME = :b2  AND LANG_FLAG = :b3  AND FLD_TYPE = 7"SELECT BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT   FROM S_FLD_SPEC  WHERE S_PRGCD = :b1  AND BLK_NAME = :b2  AND LANG_FLAG = :b3  AND FLD_TYPE = 8"
SELECT F_SYS,SYS_NO   FROM FORM_DETAIL  WHERE UPPER(F_FILE_NAME) = UPPER(:b1)"INSERT INTO S_FLD_SPEC ( S_SYSCD,S_SUBSYSCD,S_PRGCD,LANG_FLAG,BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT,PROGID )  VALUES ( :b1,:b2,:b3,2,:b4,:b5,:b6,:b7,:b8, NULL   )"INSERT INTO S_FLD_SPEC ( S_SYSCD,S_SUBSYSCD,S_PRGCD,LANG_FLAG,BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT,PROGID )  VALUES ( :b1,:b2,:b3,2,:b4,:b5,5,:b5,:b7, NULL   )"INSERT INTO S_FLD_SPEC ( S_SYSCD,S_SUBSYSCD,S_PRGCD,LANG_FLAG,BLK_NAME,FLD_NAME,FLD_TYPE,FLD_SPEC,FLD_HINT,PROGID )  VALUES ( :b1,:b2,:b3,2,:b4,:b4,:b6,:b7,:b8, NULL   )"
SELECT NVL(S.ADMIN_USER,2)   FROM USER_R S  WHERE U_ID = :b1  AND ROWNUM <= 1"
SELECT NVL(R.SHOW_HDR_FLAG,:b1),NVL(R.SHOW_FTR_FLAG,:b2),NVL(R.REP_DEST_TYPE,:b3),NVL(R.REP_DEST_NAME,:b4),NVL(R.REP_COPIES,:b5),NVL( NULL ,:b6),DECODE(:b7,1,NVL(R.A_REP_FTR,:b8),NVL(R.A_REP_FTR,:b8))   FROM S_CUST_REP_OPT R  WHERE R.BRN_NO = :b10  AND R.S_PRGCD = :b11  AND ROWNUM <= 1"
SELECT MSG_DESC   FROM MTX_MSGS  WHERE UPPER(MSG_CODE) = UPPER(:b1)  AND MSG_NUM = TO_NUMBER(:b2)  AND LANG_NO = :b3"
SELECT MSG_DESC   FROM MTX_MSGS  WHERE UPPER(MSG_CODE) = UPPER(:b1)  AND MSG_NUM = TO_NUMBER(:b2)  AND LANG_NO = :b3"
 SELECT FLG_VALUE||'-'||FLG_DESC ,TO_CHAR(FLG_VALUE)   
 FROM MTX_FLAGS 
  WHERE UPPER(FLG_CODE) = 
 ORDER BY FLG_VALUE 
SELECT COUNT(*)   FROM MTX_FLAGS  WHERE UPPER(FLG_CODE) = '''' || UPPER(:b1)  || ''''   AND FLG_ST = 1"
SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT FORM_NAME   FROM IAS_FORM_NAME  WHERE FORM_NO = :b1  AND LANG_NO = :b2"SELECT FORM_NAME   FROM IAS_FORM_NAME  WHERE FORM_NO = :b1  AND LANG_NO = :b2"SELECT DECODE(:b1,1,BRN_LNAME,NVL(BRN_FNAME,BRN_LNAME))   FROM S_BRN  WHERE CMP_NO = :b2  AND BRN_NO = :b3"SELECT DECODE(:b1,1,U_A_NAME,NVL(U_A_NAME,U_A_NAME))   FROM USER_R  WHERE U_ID = :b2"
SELECT F.FLG_DESC   FROM MTX_FLAGS F  WHERE F.FLG_CODE = UPPER(:b1)  AND F.FLG_VALUE = :b2  AND F.LANG_NO = :b3"
 select flg_Desc 
  from mtx_flags f   
 where upper(f.flg_code) = '
 order by f.flg_value 
SELECT FLD_SER,DECODE(NVL(:b1,1),1,ASTR_BFR,ESTR_BFR) STR_BFR,DECODE(NVL(:b1,1),1,ASTR_AFTR,ESTR_AFTR) STR_AFTR   FROM MTX_REF_DTL  WHERE REF_NO = :b3 ORDER BY REF_DTL_ORDER"SELECT SCREEN_FLD_NM,BLOCK_NAME   FROM MTX_REF_FLDS  WHERE FLD_SER = :b1"
SELECT FLD_SER
,DECODE(NVL(:b1,1),1,ASTR_BFR,NVL(ESTR_BFR,ASTR_BFR)) STR_BFR,DECODE(NVL(:b1,1),1,ASTR_AFTR,NVL(ESTR_AFTR,ASTR_AFTR)) STR_AFTR,MULTI_REC_FLAG   FROM MTX_REF_DTL  WHERE REF_NO = :b3 ORDER BY REF_DTL_ORDER"SELECT SCREEN_FLD_NM,BLOCK_NAME   FROM MTX_REF_FLDS  WHERE FLD_SER = :b1"
SELECT C.IBNF_USE_BL
SELECT CONNECT_ACCOUNT_SYSTEM   FROM MTX_CTRL"
SELECT COUNT(*)   FROM S_VACC  WHERE CLNDR_DATE = TRUNC(:b1,''DD'')"
SELECT FLD_SER
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OldFiles/MTXERPLIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
SELECT CONNECT_ACCOUNT_SYSTEM   FROM MTX_CTRL"
SELECT FORM_NO   FROM FORM_DETAIL  WHERE F_FILE_NAME = :b1"SELECT AD_FLAG || MOD_FLAG  || DEL_FLAG  || VIEW_FLAG  || PRINT_FLAG    FROM PRIVILEGE  WHERE U_ID = :b1  AND FORM_NO = :b2"
SELECT MSG_DESC   FROM MTX_MSGS  WHERE UPPER(MSG_CODE) = UPPER(:b1)  AND MSG_NUM = TO_NUMBER(:b2)  AND LANG_NO = :b3"
SELECT CONNECT_ACCOUNT_SYSTEM   FROM MTX_CTRL"
 select decode(:parameter.lang,
  from MTX_V_USR_TRX_PRIV f   
 where upper(f.flg_code) = '
 order by f.flg_value 
SELECT 3   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 3  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''TRX_CURR''"SELECT 1   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 1  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''TRX_CURR''"SELECT 2   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 2  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''TRX_CURR''"SELECT 3   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 3  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"SELECT 1   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 1  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"SELECT 2   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 2  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"SELECT 3   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 3  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"SELECT 2   FROM MTX_V_USR_TRX_PRIV  WHERE FLG_VALUE = 2  AND S_USERID = '''' || UPPER(:b1)  || ''''   AND TRX_TYPE = '''' || UPPER(:b2)  || ''''   AND FLG_CODE = ''FEE_CURR''"
 select decode(:parameter.lang,
  from MTX_V_USR_TRX_PRIV f   
 where upper(f.flg_code) = '
 order by f.flg_value 
SELECT MSG_DESC   FROM MTX_MSGS  WHERE UPPER(MSG_CODE) = UPPER(:b1)  AND MSG_NUM = TO_NUMBER(:b2)  AND LANG_NO = :b3"
SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT MSG_CODE,MSG_NUM,MSG_DESC,MSG_TITLE,MSG_BUT1,MSG_BUT2,MSG_BUT3,MSG_STYLE   FROM MTX_MSGS  WHERE (UPPER(MSG_CODE) = UPPER(:b1) ) AND (MSG_NUM = :b2 ) AND (LANG_NO = :b3 )"
 INSERT INTO IAS_SYS.MTX_MSGS ( MSG_CODE, MSG_NUM, MSG_ARABIC, MSG_LATIN, MSG_ATITLE, MSG_ETITLE, MSG_BUT1,
 INSERT INTO IAS_SYS.MTX_MSGS ( MSG_CODE, MSG_NUM, MSG_ARABIC, MSG_LATIN, MSG_ATITLE, MSG_ETITLE, MSG_BUT1,
 INSERT INTO IAS_SYS.MTX_MSGS ( MSG_CODE, MSG_NUM, MSG_ARABIC, MSG_LATIN, MSG_ATITLE, MSG_ETITLE, MSG_BUT1,
SELECT FLD_SER,DECODE(NVL(:b1,1),1,ASTR_BFR,ESTR_BFR) STR_BFR,DECODE(NVL(:b1,1),1,ASTR_AFTR,ESTR_AFTR) STR_AFTR   FROM MTX_REF_DTL  WHERE REF_NO = :b3 ORDER BY REF_DTL_ORDER"SELECT SCREEN_FLD_NM,BLOCK_NAME   FROM MTX_REF_FLDS  WHERE FLD_SER = :b1"
SELECT MSG_DESC   FROM MTX_MSGS  WHERE UPPER(MSG_CODE) = UPPER(:b1)  AND MSG_NUM = TO_NUMBER(:b2)  AND LANG_NO = :b3"
SELECT CONNECT_ACCOUNT_SYSTEM   FROM MTX_CTRL"
SELECT CONNECT_ACCOUNT_SYSTEM   FROM MTX_CTRL"
SELECT FLD_SER
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OldFiles/blck_lsts.plx ==========
SELECT C.IBN
F_USE_BLK_LST,C.ISNDR_USE_BLK_LST,C.USE_BLK_LST,C.OBNF_USE_BLK_LST,C.OCHK_USE_BLK_LST,C.OCHKB_USE_BLK_LST,C.XCH_USE_BLK_LST,C.CHKP_USE_BLK_LST,C.TCHK_USE_BLK_LST   FROM MTX_CTRL C  WHERE ROWNUM = 1"SELECT OVRD_EXACT_ID_BL,OVRD_EXACT_NM_BL,OVRD_SMLR_NM_BL   FROM MTX_V_USERS  WHERE S_USERID = :b1  AND ROWNUM <= 1"
------------------------------------------------------------

========== /home/ameen/YS_ERP/YS_ERP/forms/OldFiles/MRPLIB.plx ==========
   { FUNCTION <function-name> } |
   { PROCEDURE <procedure-name> }
SELECT COUNT(*)   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = :b1  AND COLUMN_NAME = :b2  AND OWNER = :b3"
SELECT DISTINCT ATT_PKG.GET_ATT_DESC(
     FROM   VIEW_ITEMS_ATTACHS
   WHERE    I_CODE         = 
 ORDER BY 1
     FROM   VIEW_ITEMS_ATTACHS
   WHERE    CMP_NO         = 
     FROM   VIEW_ITEMS_ATTACHS
   WHERE    I_CODE          =
SELECT ATTCH_NO,DECODE(DECODE(:b1,1,1,2),1,ATTCH_A_NAME,ATTCH_E_NAME) NAME   FROM VIEW_ATTACHS  WHERE NVL(CONN_C_CODE,0) != 1"SELECT ATTCH_NO,DECODE(DECODE(:b1,1,1,2),1,ATTCH_A_NAME,ATTCH_E_NAME) NAME,CONN_C_CODE   FROM VIEW_ATTACHS"SELECT ATTCH_NO,DECODE(:b1,1,ATTCH_A_NAME,NVL(ATTCH_E_NAME,ATTCH_A_NAME)) ATTCH_NAME   FROM VIEW_ATTACHS"
SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"
SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"
SELECT DECODE(:b1,1,DECODE(:b2,1,120,2,192,3,144,4,132),2,DECODE(:b2,1,120,2,144,3,144,4,132),3,DECODE(:b2,1,120,2,120,3,120,4,122))   FROM DUAL"SELECT SFC_BOST_DATE   FROM MRP_MPS_WORK_ORDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND WORK_ORDER = :b3"SELECT TIME_F,TIME_T   FROM MRP_SGS_SHIFTS_MAST A  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND SHF_CODE = :b3  AND SHIFT_CODE = :b4  AND P_CNTU = 0"SELECT TIME_F,TIME_T   FROM MRP_SGS_SHIFTS_MAINT B  WHERE P_CNTU = 0  AND CMP_NO = :b1  AND BRN_NO = :b2  AND SHF_CODE = :b3  AND SHIFT_CODE = :b4"
    SELECT  TIME_F  ,  TIME_T 
  FROM    MRP_SGS_SHIFTS_MAST A
    WHERE   CMP_NO     =  P_CMP_NO
EXCEPTION WHEN NO_DATA_FOUND 
SELECT  TIME_F  ,  TIME_T 
      FROM   MRP_SGS_SHIFTS_MAINT  B 
      WHERE  P_CNTU    =0 
       EXCEPTION WHEN OTHERS 
PROCEDURE PRC_CHCK_CONFLCT_DATE_TIME(P_FDATE DATE ,P_FTIME DATE ,P_TDATE DATE ,P_TTIME DATE) IS
SELECT YER_CODE   FROM MRP_YEAR  WHERE P_CLS = 0  AND P_CNTU = 0"SELECT PERIOD_CODE   FROM MRP_SGS_PERIOD_COSTONG  WHERE YER_CODE = :b1  AND P_CLS = 0  AND P_CNTU = 0"SELECT YER_CODE,PERIOD_CODE   FROM MRP_SGS_PERIOD_COSTONG  WHERE P_CLS = 0  AND P_CNTU = 0  AND :b1 BETWEEN DATE_F AND DATE_T"SELECT TO_DATE(MNTH_FRM || ''/''  || YR_FRM ,''MM/YYYY'') F_PRD,LAST_DAY(TO_DATE(MNTH_TO || ''/''  || YR_TO ,''MM/YYYY'')) T_PRD   FROM MRP_YEAR  WHERE P_CLS = 0  AND P_C
NTU = 0"SELECT COUNT(*)   FROM MRP_SGS_PERIOD_COSTONG D,MRP_YEAR M  WHERE M.P_CLS = 0  AND M.P_CNTU = 0  AND D.P_CLS = 0  AND D.P_CNTU = 0  AND D.YER_CODE = M.YER_CODE  AND :b1 BETWEEN D.DATE_F AND D.DATE_T"SELECT NVL(SUM(NVL(QTY,0)),0)   FROM MRP_SFC_WHM_ITEMS_MOVE  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND WH_CODE = NVL(:b3,WH_CODE)  AND ITEM_CODE = :b4"SELECT NVL(SC_SATURDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 1"SELECT NVL(SC_SUNDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 2"SELECT NVL(SC_MONDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 3"SELECT NVL(SC_TUESDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 4"SELECT NVL(SC_WEDNESDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,
''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 5"SELECT NVL(SC_THURSDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 6"SELECT NVL(SC_FRIDAY,0)   FROM MRP_SGS_SCHDUL_CLNDR_MSTR  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND YER_CODE = :b3  AND SC_CODE = :b4"SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T,''HH24:MI''),''HH24:MI'') - TO_DATE(TO_CHAR(TIME_F,''HH24:MI''),''HH24:MI'') ),0) * 24    FROM MRP_SGS_SCHDUL_CLNDR_WH  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND DAY_TYPE = 7"SELECT NVL(COUNT(*),0)   FROM MRP_SGS_SCHDUL_CLNDR_DTLS  WHERE BRN_NO = :b1  AND YER_CODE = :b2  AND SC_CODE = :b3  AND :b4 BETWEEN FRM_DATE AND TO_DATE"SELECT NVL(COUNT(*),0)   FROM MRP_CRP_WAREHOUSES_TRANSACTION  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND WH_CODE = NVL(:b3,WH_CODE)  AND MRP_WH_CODE = NVL(:b4,MRP_WH_CODE)  AND ITEM_CODE = NVL(:b5,ITEM_CODE)"SELECT NVL(COUNT(*),0)   FROM MRP_CRP_WAREHOUSES_TRANSACTION  WHERE CMP_NO = :b1  AND BRN_NO = :b2  AND WH_CODE = NVL(:b3,WH_CODE)  AND MRP_WH_CODE = NVL(:b4,MRP_WH_CODE)  AND ITEM_CODE = NVL(:b5,ITEM_CODE)  AND TRANSACTION_TYPE = :b6"SELECT COUNT(*)   FROM MRP_SGS_PERIOD_COSTONG D,MRP_YEAR M  WHERE M.P_CLS = 0  AND M.P_CNTU = 0  AND D.P_CLS = 0  AND D.YER_CODE = M.YER_CODE  AND :b1 BETWEEN D.DATE_F AND D.DATE_T"
  FROM  MRP_SGS_SCHDUL_CLNDR_WH
  WHERE BRN_NO    = V_BRN
  SELECT NVL(SC_THURSDAY,0)
 FROM  MRP_SGS_SCHDUL_CLNDR_MSTR
 WHERE CMP_NO    = V_CMP
 SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T , 'HH24:MI') , 'HH24:MI') - TO_DATE(TO_CHAR(TIME_F , 'HH24:MI') , 'HH24:MI')),0) * 24
  FROM  MRP_SGS_SCHDUL_CLNDR_WH
  WHERE BRN_NO    = V_BRN
  SELECT NVL(SC_FRIDAY,0)
 FROM  MRP_SGS_SCHDUL_CLNDR_MSTR
 WHERE CMP_NO    = V_CMP
 SELECT NVL(SUM(TO_DATE(TO_CHAR(TIME_T , 'HH24:MI') , 'HH24:MI') - TO_DATE(TO_CHAR(TIME_F , 'HH24:MI') , 'HH24:MI')),0) * 24
  FROM  MRP_SGS_SCHDUL_CLNDR_WH
  WHERE BRN_NO    = V_BRN
  SELECT NVL(COUNT(*),0)
   FROM  MRP_SGS_SCHDUL_CLNDR_DTLS
   WHERE BRN_NO    = V_BRN
EXCEPTION
FUNCTION FUNC_CHECK_VALID_WH(V_CMP  NUMBER , V_BRN  NUMBER , F_WH VARCHAR2 , T_WH VARCHAR2 , V_ITEM VARCHAR2 , V_TRX  NUMBER , V_TP NUMBER) RETURN NUMBER IS
  SELECT NVL(COUNT(*),0)
   FROM  MRP_CRP_WAREHOUSES_TRANSACTION
   WHERE CMP_NO           = V_CMP
  BEGIN
 SELECT NVL(COUNT(*),0)
  FROM  MRP_CRP_WAREHOUSES_TRANSACTION
  WHERE CMP_NO           = V_CMP
SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT LANG_DIR   FROM LANG_DEF  WHERE LANG_NO = :b1"SELECT MSG_CODE,MSG_NUM,MSG_TEXT,MSG_TITLE,MSG_BUT1,MSG_BUT2,MSG_BUT3,MSG_STYLE   FROM IAS_SYS.MRP_MSGS  WHERE (UPPER(MSG_CODE) = UPPER(:b1) ) AND (MSG_NUM = :b2 ) AND (LANG_NO = :b3 )"
SELECT DISTINCT 1   FROM PRIVILEGE  WHERE FORM_NO = :b1  AND U_ID = :b2  AND VIEW_FLAG = 1"
SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"
SELECT :b1,:b2   FROM S_BRN  WHERE CMP_NO = :b3  AND BRN_NO = :b4"
    SELECT ATTCH_NO,DECODE(DECODE(P_LANG,1,1,2) ,1,ATTCH_A_NAME,ATTCH_E_NAME     ) NAME
    FROM   VIEW_ATTACHS      
SELECT DATA_DEFAULT   FROM DBA_TAB_COLUMNS  WHERE TABLE_NAME = UPPER(:b1)  AND COLUMN_NAME = UPPER(:b2)  AND OWNER = UPPER(:b3)"
 SELECT decode(
                   FROM  EX_RATE 
                   WHERE decode(
------------------------------------------------------------
